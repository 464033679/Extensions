[{"Owner":"JCPalmer","Date":"2016-11-11T22:40:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe Scene Exporter properties has changed to support 3 texture process methods_dd_ Legacy_co_ Inline_co_ and the new _lt_u_gt__lt_strong_gt_Prioritized_lt_/strong_gt__lt_/u_gt_.  (Another minor change was to now filter files with a .babylon when choosing)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_10232_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_11/Selection_028.jpg.95506fc35b42c317a8bdefed69789291.jpg_qt_ alt_eq__qt_Selection_028.jpg_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tA compressed texture is different from a lossy image format (think .JPG) in that it is not expanded by the CPU nor GPU.  This results in better GPU RAM usage for the same amount of textures.  A consequence of this is it must be supported by both the GPU and the browser_t_s webGL_co_ as well as BJS_co_ of course.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is where this change helps out.  It allows you specify these extra formats that you created from the image used by Blender_co_ and in the order in which to attempt to load them.  The blender version is tacked onto the end of the list.  Without this new built-in fall back for BJS 2.5_co_ compressed textures were pretty much useless.  You would have to know exactly what the customer_t_s hardware / revision &amp_sm_ browser was_co_ because you only got one shot.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs DDS format is the only one currently implemented  in BJS for certain hardware_co_ some of these others is for the future.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.khronos.org/news/press/khronos-releases-atsc-next-generation-texture-compression-specification_qt_ rel_eq__qt_external nofollow_qt__gt_ASTC_lt_/a_gt__co_ is a WebGL extension_co_ so it can be added to either webGL 1 or 2.  Many mobile GPU support it_co_ and Chrome with --enable-webgl-draft-extensions flag.  Not sure what OSes_co_ GPUs_co_ or drivers are required now though.  I found one thing to _lt_a href_eq__qt_https_dd_//github.com/ARM-software/astc-encoder_qt_ rel_eq__qt_external nofollow_qt__gt_convert files_lt_/a_gt_. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tETC_co_ is really ETC1 &amp_sm_ ETC2.  I believe it is part of OpenGL ES3_co_ which is on what WebGL 2.0 is based.  As far as a converter_co_ I know of _lt_a href_eq__qt_https_dd_//www.khronos.org/webgl/public-mailing-list/archives/1609/msg00012.php_qt_ rel_eq__qt_external nofollow_qt__gt_this_lt_/a_gt_.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-11-14T17:34:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tReally cool! (And I updated the PG with the support for texture fallbacks)\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-11-14T18:01:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt__co_ is there some way to test for the ASTC extension in the PG?  I do have a fairly new Android _lt_a href_eq__qt_http_dd_//www.sonymobile.com/us/products/tablets/xperia-z3-tablet-compact/specifications/#tabs_qt_ rel_eq__qt_external nofollow_qt__gt_Tablet_lt_/a_gt_.  If I can determine that it has the extension after turning on draft extensions in Chrome_co_ I_t_ll probably see it I can add BJS support for after Thanksgiving.  Actually adding an engine call to dump all extensions to _lt_s_gt_console_lt_/s_gt_ a return string would be quite useful_co_ if that is even possible without knowing the name(s) of them in advance.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-11-14T18:18:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWe already are testing extensions there_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/babylon.engine.ts#L552_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/babylon.engine.ts#L552_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo I see no problem to add another test for ASTC. Do you know which extension to test?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-11-14T19:05:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFirst_co_ Playstore has an OpenGL Externsions Viewer. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_code_gt_ASTC is _lt_/code_gt_KHR_texture_compression_astc_ldr  _co_ _lt_a href_eq__qt_https_dd_//www.opengl.org/registry/specs/KHR/texture_compression_astc_hdr.txt_qt_ rel_eq__qt_external nofollow_qt__gt_spec_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis tablet does not have it.  Since it is OpenGL ES 3.0 it supports both ETC2 and even another compressed texture format EAC.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tETC2 &amp_sm_ EAC is _lt_code_gt__lt_a href_eq__qt_https_dd_//www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc/_qt_ rel_eq__qt_external nofollow_qt__gt_WEBGL_compressed_texture_etc_lt_/a_gt__lt_/code_gt__lt_code_gt_.  It is really a bunch of extensions grouped together.  It says that this is both WebGL 1.0 &amp_sm_ 2.0.  I see all of the individual extension in the viewer.  Wonder if these are also exposed in Chrome?_lt_/code_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-11-15T00:42:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tcan you go there_dd_ _lt_a href_eq__qt_http_dd_//renderingpipeline.com/webgl-extension-viewer/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//renderingpipeline.com/webgl-extension-viewer/_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-11-15T15:55:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks_co_ yeah looks like Chrome supports WEBGL_compressed_texture_etc1_co_ even without the drafts flag turned on.  I now also see WEBGL_compressed_texture_s3tc on my Linux machine.  Is that dds?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am going wrap up QueuedInterpolation (by Thanksgiving)_co_ then look here.  I cannot afford to seed this advantage to my native app competition.  Now that I see what you did to implement this in engine_co_ I now have enough info to improve it.  First is to make it file missing tolerant.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-11-15T16:22:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_background-color_dd_rgb(255_co_255_co_255)_sm_float_dd_none_sm__qt__gt_yep! WEBGL_compressed_texture_s3tc_lt_span_gt_ _lt_/span_gt__lt_/span_gt_  is DDS \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-11-29T19:14:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSince I do not actually have the hardware to test astc_co_ plan on adding pvrtc for iOS_co_ and etc1 for Android.  The app I referenced above_co_ show etc2 is available_co_ but apparently not being exposed by chrome_co_ even with --enable-webgl-draft-extensions flag.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWas just going to follow the pattern for s3tc as much as possible.  In EngineCapabilities_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_public pvrtc_dd_ WEBKIT_WEBGL_compressed_texture_pvrtc_sm_\npublic etc1_dd_ WEBGL_compressed_texture_etc1_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThese error.  Is there a place you put _lt_strong_gt__lt_em_gt_WEBGL_compressed_texture_s3tc_lt_/em_gt__lt_/strong_gt_ to get it to compile?  Could these just be any_t_s?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn engine constructor_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_this._caps.pvrtc _eq_ this._gl.getExtension(_t_WEBKIT_WEBGL_compressed_texture_pvrtc_t_)_sm_\nthis._caps.etc1 _eq_ this._gl.getExtension(_t_WEBGL_compressed_texture_etc1_t_)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tFor Engine.createTexture_co_ I think I want to wrapper the old call without the array with a replacement createTexture.  It would perform each element of the array_co_ first checking the extension existence_co_ but also calling the original createTexture in a try block.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-11-29T21:26:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tthe s3tc is in lib.d.ts (by default with TS).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNot sure there is the same for other extension. You will have to use any I guess\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gryff","Date":"2016-11-30T16:19:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_152879_qt_ data-ipsquote-contentid_eq__qt_26337_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1480446863_qt_ data-ipsquote-userid_eq__qt_8492_qt_ data-ipsquote-username_eq__qt_JCPalmer_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t20 hours ago_co_ JCPalmer said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tSince I do not actually have the hardware to test astc_co_ plan on adding pvrtc for iOS_co_ and etc1 for Android.  The app I referenced above_co_ show etc2 is available_co_ but apparently not being exposed by chrome_co_ even with --enable-webgl-draft-extensions flag.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8492_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/_qt_ rel_eq__qt__qt__gt_@JCPalmer_lt_/a_gt_Well that looks like a bit of a nightmare_co_ Jeff. Hardware_co_ OS_co_ browsers and activating flags for stuff to be usable.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat hardware is needed for ASTC?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd then all the name variations - what is BC1-BC7_co_ and DDS is _qt__lt_em_gt_WEBGL_compressed_texture_s3tc_lt_/em_gt__qt_.? _lt_img alt_eq__qt__dd_unsure_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_unsure.png_qt_ title_eq__qt__dd_unsure_dd__qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tI guess you just have to include a default .png or .jpg. Just more work.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tcheers_co_ gryff _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-11-30T17:24:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe flag mentioned is only for testing stuff which is not yet production.  Systems showing ASTC can be found _lt_a href_eq__qt_http_dd_//opengles.gpuinfo.org/gles_listreports.php?extension_eq_GL_KHR_texture_compression_astc_ldr_qt_ rel_eq__qt_external nofollow_qt__gt_here_lt_/a_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think I have made a mistake implementing this from an exporter though.  Would mean every exporter would need to implement.  Still time to move it out of Texture constructor &amp_sm_ put everything in Engine.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHave begun work on an intelligent examiner of hardware to determine what machine supports in Engine constructor.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_this._caps.astc  _eq_ this._gl.getExtension(_t_WEBGL_compressed_texture_astc_t_)_sm_\nthis._caps.s3tc  _eq_ this._gl.getExtension(_t_WEBGL_compressed_texture_s3tc_t_)_sm_\nthis._caps.pvrtc _eq_ this._gl.getExtension(_t_WEBGL_compressed_texture_pvrtc_t_) || this._gl.getExtension(_t_WEBKIT_WEBGL_compressed_texture_pvrtc_t_)_sm_ // 2nd is what iOS reports\nthis._caps.etc1  _eq_ this._gl.getExtension(_t_WEBGL_compressed_texture_etc1_t_)_sm_\nthis._caps.etc2  _eq_ this._gl.getExtension(_t_WEBGL_compressed_texture_etc_t_) || this._gl.getExtension(_t_WEBGL_compressed_texture_es3_0_t_)_sm_ // first is the final name_co_ found hardware using 2nd\n\n...\n\n// Intelligently add supported commpressed formats in order to check for.\n// Check for ASTC support first as it is most powerful and to be very cross platform.\n// Next PVR &amp_sm_ S3_co_ which are probably superior to ETC1/2.  \n// Likely no hardware which supports both PVR &amp_sm_ S3_co_ so order matters little.\n// ETC2 is newer and handles ETC1_co_ so check for first.\nif (this._caps.astc ) this.texturesSupported.push(_t_.astc_t_)_sm_\nif (this._caps.s3tc ) this.texturesSupported.push(_t_.dds_t_)_sm_\nif (this._caps.pvrtc) this.texturesSupported.push(_t_.pvr_t_)_sm_\nif (this._caps.etc2 ) this.texturesSupported.push(_t_.etc2_t_)_sm_\nif (this._caps.etc1 ) this.texturesSupported.push(_t_.etc1_t_)_sm_\n\nthis.useHwBasedTexSelection _eq_ this.texturesSupported.length &gt_sm_ 0_sm_\nif (this.useHwBasedTexSelection) {\n     Tools.Log(_t_Compressed textures formats HW supports_dd_ _t_ + this.texturesSupported)_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThere would be 2 properties to added to Engine_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// Hardware supported Textures (public for overriding after instancing)\npublic useHwBasedTexSelection _dd_ boolean_sm_ // set to false to ignore\npublic texturesSupported _eq_ new Array&lt_sm_string&gt_sm_()_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tYou would have same workflow creating either .jpg or other IMAGE format.  This is the name of the file passed.  Based on what a piece of HW / Browser supports_co_ files with extensions of compressed textures will be tested for / used first.  Need to ensure a 404 (file not found) is not a problem.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou would run tools which generate the other formats from the image format out of the export.  Not every scene merits this_co_ but in order to provide ever more texture rich scenes on mobile hardware_co_ not allowing this type of process_co_ just a hardwired .DDS with no fallback is not competitive.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnother advantage might be load time.  QI uses a different process than .babylon to create Textures.  I noticed creating mipmaps from image formats takes a decent proportion of load.  Compressed textures have mipmaps in the file.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is a _lt_a href_eq__qt_https_dd_//playcanv.as/p/yipplmVO/_qt_ rel_eq__qt_external nofollow_qt__gt_demo_lt_/a_gt_ from PlayCanvas which shows their texture selection technology.  Run it on different hardware. This process should be very comparable to their_t_s.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-11-30T18:27:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tNote to self_co_ or anyone else this feature / concept is not compatible with databases /  manifests.  Databases assume that everything needs to be downloaded.  Only the BEST format for the hardware does.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn order to determine best fit_co_ need to do quick header requests which are NOT Async.  Adding small function to Tools_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_/**\n * This cannot currently be used with a database.\n */\npublic static doesFileExist(url_dd_ string) _dd_ boolean {\n    var request _eq_ new XMLHttpRequest()_sm_\n    var loadUrl _eq_ Tools.BaseUrl + url_sm_\n    request.open(_t_HEAD_t__co_ loadUrl_co_ false)_sm_  // false_co_ since this is NOT async\n    request.send()_sm_\n     \n    return request.status &gt_sm__eq_ 200 &amp_sm_&amp_sm_ request.status &lt_sm_ 300 || (navigator.isCocoonJS &amp_sm_&amp_sm_ (request.status _eq__eq__eq_ 0))_sm_\n}\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gryff","Date":"2016-11-30T19:08:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_153012_qt_ data-ipsquote-contentid_eq__qt_26337_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1480526662_qt_ data-ipsquote-userid_eq__qt_8492_qt_ data-ipsquote-username_eq__qt_JCPalmer_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ JCPalmer said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tHere is a _lt_a href_eq__qt_https_dd_//playcanv.as/p/yipplmVO/_qt_ rel_eq__qt_external nofollow_qt__gt_demo_lt_/a_gt_ from PlayCanvas which shows their texture selection technology.  Run it on different hardware. This process should be very comparable to their_t_s.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8492_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/_qt_ rel_eq__qt__qt__gt_@JCPalmer_lt_/a_gt_ _dd_ Nice Demo Jeff _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tOn my two desktops_dd_  _qt_VRAM 87.7MB_co_ using DXT saving 440.3MB_qt_ .\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOn my tablet (Samsung Tab A -Android 5) VRAM 87.7MB_co_ using ETC1 saving 440.3MB.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBy the way Jeff_co_ I like the idea of the _lt_u_gt__lt_strong_gt_Prioritized_lt_/strong_gt__lt_/u_gt_ option and then adding the choices in the exporter.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_153012_qt_ data-ipsquote-contentid_eq__qt_26337_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1480526662_qt_ data-ipsquote-userid_eq__qt_8492_qt_ data-ipsquote-username_eq__qt_JCPalmer_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ JCPalmer said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tYou would have same workflow creating either .jpg or other IMAGE format.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tWell from the information available it seems you could spend some time picking all kinds  of options to get a satisfactory level of _qt_noise_qt_. And what graphics packages support _lt_u_gt_all_lt_/u_gt_ these different options ... or is that to come?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tcheers_co_ gryff _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-11-30T19:46:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI also get _qt_66.8MB using PVR saving 459.2 MB_qt_ on iOS.  Sorry though_co_ going to rip out that in Blender exporter.  I understand the desire to set the priority_co_ but this really needs to be driven by what each individual machine can do.  Best to do it on the fly.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tA developer need not provide all formats_co_ or wait can till the end of a project to generate the compressed formats.  Selector will be tolerant of missing formats (or not yet provided) to make work flow easier.  As far as convertion tools_co_  there are a number of them.  This will evolve.  Yes_co_ ASTC especially has a number of different options.  If you want to sell your game_co_ you may want to play around more.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-11-30T20:55:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt__co_ I reversed the changes for passing an array in Textures.  This is my coded wrapper in engine.  It compiles_co_ after some testing to see that we are back to working_co_ is it alright to commit?  Have a _lt_em_gt__lt_strong_gt_tools.pvr.ts_lt_/strong_gt__lt_/em_gt__co_ but blows up.  Also need to both edit Blender &amp_sm_ build a test scene in my blog repo.  Consider this to be the framework.  As formats get built_co_ rip out those continues.  Allows others to work on a format who may have the hardware_co_ or time_co_ and decouples a little from 2.5 release.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_public createTexture(url_dd_ string_co_ noMipmap_dd_ boolean_co_ invertY_dd_ boolean_co_ scene_dd_ Scene_co_ samplingMode_dd_ number _eq_ Texture.TRILINEAR_SAMPLINGMODE_co_ onLoad_dd_ () _eq_&gt_sm_ void _eq_ null_co_ onError_dd_ () _eq_&gt_sm_ void _eq_ null_co_ buffer_dd_ any _eq_ null)_dd_ WebGLTexture {\n    var fromData _eq_ url.substr(0_co_ 5) _eq__eq__eq_ _qt_data_dd__qt__sm_\n\n    if (this.useHwBasedTexSelection &amp_sm_&amp_sm_ !fromData &amp_sm_&amp_sm_ !scene.database) {\n        var lastDot _eq_ url.lastIndexOf(_t_._t_)_sm_\n        var withoutExtension _eq_ url.substring(0_co_ lastDot)_sm_\n        var extension _eq_ url.substring(lastDot)_sm_\n        for (var i _eq_ 0_co_ len _eq_ this.texturesSupported.length_sm_ i &lt_sm_ len_sm_ i++) {\n            var testUrl _eq_ withoutExtension + this.texturesSupported[i]_sm_\n            \n            // code to allow the formats to be added as they can be developed / hw tested\n            if (this.texturesSupported[i] _eq__eq__eq_ _t_.astc_t_) continue_sm_\n            if (this.texturesSupported[i] _eq__eq__eq_ _t_.pvr_t_ ) continue_sm_\n            if (this.texturesSupported[i] _eq__eq__eq_ _t_.etc1_t_) continue_sm_\n            if (this.texturesSupported[i] _eq__eq__eq_ _t_.etc2_t_) continue_sm_\n            \n            if (Tools.doesFileExist(testUrl)) {\n                return this._createTextureInternal(testUrl_co_ noMipmap_co_ invertY_co_ scene_co_ samplingMode_co_ onLoad_co_ onError_co_ buffer)_sm_\n            }\n        }\n    }\n    // fallback to original type passed\n    return this._createTextureInternal(url_co_ noMipmap_co_ invertY_co_ scene_co_ samplingMode_co_ onLoad_co_ onError_co_ buffer)_sm_\n}\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI also made changes to compute _lt_em_gt__lt_strong_gt_useHwBasedTexSelection_lt_/strong_gt__lt_/em_gt__co_ edited above too.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-11-30T21:59:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI_t_m fine with it\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-12-01T18:49:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI ran into problems with the doesFileExist.  Did not help extra complains in console that sync http calls are depreciated.  Changed so that you now need to call engine.setTextureformatToUse().  Will probably open a new thread where the status of new formats can be discussed.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_/**\n * Set the compressed texture format to use_co_ based on the formats you have_co_\n * the formats supported by the hardware / browser_co_ and those currently implemented\n * in BJS.\n * \n * Note_dd_ The result of this call is not taken into account texture is base64 or when\n * using a database / manifest.\n * \n * @param {Array&lt_sm_string&gt_sm_} formatsAvailable - Extension names including dot.  Case\n * and order do not matter.\n * @returns The extension selected.\n */\npublic setTextureFormatToUse(formatsAvailable _dd_ Array&lt_sm_string&gt_sm_) _dd_ string {\n    for (var i _eq_ 0_co_ len1 _eq_ this.texturesSupported.length_sm_ i &lt_sm_ len1_sm_ i++) {\n        // code to allow the formats to be added as they can be developed / hw tested\n        if (this._texturesSupported[i] _eq__eq__eq_ _t_.astc_t_) continue_sm_\n        if (this._texturesSupported[i] _eq__eq__eq_ _t_.pvr_t_ ) continue_sm_\n        if (this._texturesSupported[i] _eq__eq__eq_ _t_.etc1_t_) continue_sm_\n        if (this._texturesSupported[i] _eq__eq__eq_ _t_.etc2_t_) continue_sm_\n        \n        for (var j _eq_ 0_co_ len2 _eq_ formatsAvailable.length_sm_ j &lt_sm_ len2_sm_ j++) {\n            if (this._texturesSupported[i] _eq__eq__eq_ formatsAvailable[j].toLowerCase()) {\n                return this._textureFormatInUse _eq_ this._texturesSupported[i]_sm_\n            }\n        }\n    }\n    // actively set format to nothing_co_ to allow this to be called more than once\n    // and possibly fail the 2nd time\n    return this._textureFormatInUse _eq_ null_sm_\n}\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"V!nc3r","Date":"2016-12-01T21:37:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThis texture-export change looks very interesting ! My work-rush will soon ended_co_ i_t_m impatient to test this_co_ especially on low-end hardware.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2016-12-13T08:44:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tcompression for iOS?? so a 4096 x 4096 texture doesn_t_t have to take up 48MB of iPhone RAM anymore?  This is awesome!!! \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"V!nc3r","Date":"2016-12-13T09:18:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFor those who doesn_t_t notice_co_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/commit/488b0e125e90257ff62a14a31f36224ad742866a_qt_ rel_eq__qt_external nofollow_qt__gt_normal map value is now correctly exported_lt_/a_gt_. You don_t_t have anymore to do _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/26776-blender-exporter-question-about-normal-material/?do_eq_findComment&amp_sm_comment_eq_153723_qt_ rel_eq__qt__qt__gt_this tips_lt_/a_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t[edit] Thanks to JCPalmer _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_ [/edit]\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-12-13T21:01:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_155003_qt_ data-ipsquote-contentid_eq__qt_26337_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1481618694_qt_ data-ipsquote-userid_eq__qt_12544_qt_ data-ipsquote-username_eq__qt_ozRocker_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t12 hours ago_co_ ozRocker said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tcompression for iOS?? so a 4096 x 4096 texture doesn_t_t have to take up 48MB of iPhone RAM anymore?  This is awesome!!! \n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tcouple things.  In 2.5_co_ only the frame work for doing platform based compressed texture selection is in place.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ if you mean 4096 x 4096 x 3_co_ then you are forgetting about the space for minmaps.  For a 4k texture_co_ you need to add space for a 2k_co_ 1k_co_ 512_co_ 256_co_ … version as well.  Not only that_co_ but the time to build them really can slow down load time.  The minmaps for .DDS_co_ .ETC_co_ .PVR_co_ &amp_sm_ .ASTC are already in the file (if added)_co_ so they too are compressed_co_ and probably load quicker then being computed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI had started PVR_co_ but I lost it due to my hardware circumstances.  Have a new motherboard_co_ memory_co_ &amp_sm_ cpu arriving tomorrow.  Do not know when I will restart this.  Anyone who wants to try getting .ETC1 / .ETC2 working for Android_co_ feel free.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]