[{"Owner":"Deltakosh","Date":"2017-03-31T22:01:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello team!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSince the very first version of Babylon.js materials are working in a pull mode. This means that every time a mesh needs to be rendered_co_ its material has to ask the engine about a lot of information in order to compile the best shader possible for the given mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor instance_co_ here is an incomplete list of states required to compile a shader_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- Lights affecting the mesh (taking in account inclusion and exclusion lists and masks)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- Textures and channels (including associated parameters like parallax for bump or reflection mode for reflections)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- Fog_co_ clip planes_co_ point rendering or wireframe\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- Mesh attributes (does the mesh contains UV? tangent? colors?)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis leads to a pretty expensive function named _lt_strong_gt_Material.isReady._lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDue to the previous reasons_co_ the function is really CPU intensive. Here is for instance the profile of the _qt_materials_qt_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/?4_qt_ rel_eq__qt_external nofollow_qt__gt_playground_lt_/a_gt__dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ data-fileid_eq__qt_12285_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_03/profile1.JPG.26333cce4776d460f78abc07df251fc1.JPG_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_profile1.thumb.JPG.6b4ba333f88827d6e2d2d3501a8d7706.JPG_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_12285_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_03/profile1.thumb.JPG.6b4ba333f88827d6e2d2d3501a8d7706.JPG_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe highlighted functions are part of the IsReady root function. The scene is extremely simple and you can see that the isReady is taking almost 13% of the CPU time\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhile it was ok because of the complexity of the task assigned to this function_co_ I decided recently to change it to a clever model_dd_ _lt_strong_gt_The push mode_lt_/strong_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen a material is in this mode_co_ instead of asking on every frame for every state_co_ the states will push updates to the material when they change.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tObviously the performance boost is immense. Look at the same profile with the new mode_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_Capture.JPG.e2455939563302f705b97e9f8a3623ea.JPG_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_12287_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_03/Capture.JPG.e2455939563302f705b97e9f8a3623ea.JPG_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tWe are now at 2.51%. On bigger scene like Sponza_co_ this function could take up to 30%_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_Capture2.JPG.f03af3f6c8e2061acd005c0bd3752b04.JPG_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_12289_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_03/Capture2.JPG.f03af3f6c8e2061acd005c0bd3752b04.JPG_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tAnd now with the new mechanism_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_Capture3.JPG.4dd582a651f77ec13ff012d145f55298.JPG_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_12291_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_03/Capture3.JPG.4dd582a651f77ec13ff012d145f55298.JPG_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tONLY 3%!!!!!!!!!!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut obviously with such a big change_co_ there will be some bugs.. So please use this thread to report any issue with StandardMaterial.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf everything is fine_co_ I_t_ll update the PBR to push mode in one or two weeks.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAssociated PR_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/pull/1959/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/pull/1959/_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"davrous","Date":"2017-04-01T10:29:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYeah! Awesome optim_t_ Mister _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ ! Very impressive.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow_co_ with our beloved community_co_ we will have to be careful on testing that to be sure it_t_s a reliable as possible. _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_ Even if we all know your dedication to quality_co_ you_t_ll need help!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"PeapBoy","Date":"2017-04-04T10:27:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_img alt_eq__qt_smokin2.gif.5ce8793db45b6fd6dad9a86e32673d75.gif_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_12332_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_04/smokin2.gif.5ce8793db45b6fd6dad9a86e32673d75.gif_qt_ style_eq__qt_width_dd_350px_sm_height_dd_auto_sm__qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tLove this update ! I_t_ll try this right now ! _lt_img alt_eq__qt__dd_lol_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_laugh.png_qt_ title_eq__qt__dd_lol_dd__qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Feldspar","Date":"2017-04-05T13:42:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt__co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m currently working on implementing UBO (uniform buffer objects)_co_ and i merged the most recent changes about StandardMaterial becoming a PushMaterial.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEverything is now working fine_co_ but I_t_m encountering performance issues against the unmerged version.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy focus currently goes onto frozen materials_co_ since they are the most optimized way to use UBO _dd_ 1 uniform buffer per material_co_ which is static.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve tested with a simple scene with 1600 visible spheres_co_ each one having a different material_co_ lit by a moving HemiLight_co_ here are the results _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_UNMERGED (StandardMaterial is still NOT a PushMaterial)_co_ with FROZEN materials _dd__lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ data-fileid_eq__qt_12360_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_04/frozen-without-push.PNG.71970df53d9f162c2dcf1a89fb72e1be.PNG_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_frozen-without-push.thumb.PNG.61891c112f2e97eb530786a535d7dfd0.PNG_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_12360_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_04/frozen-without-push.thumb.PNG.61891c112f2e97eb530786a535d7dfd0.PNG_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_MERGED (StandardMaterial IS a PushMaterial)_co_ with FROZEN materials _dd_ _lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ data-fileid_eq__qt_12361_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_04/frozen-with-push.PNG.0cb1e4da110f6d5b10e8715e16ddd3b1.PNG_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_frozen-with-push.thumb.PNG.12b9433fc74872ebbd3447c70e0cd7a2.PNG_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_12361_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_04/frozen-with-push.thumb.PNG.12b9433fc74872ebbd3447c70e0cd7a2.PNG_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_MERGED (StandardMaterial IS a PushMaterial)_co_ with UNFROZEN materials _dd_ _lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ data-fileid_eq__qt_12362_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_04/unfrozen-with-push.PNG.3434b1c9ef9bda5401efec366808a5d1.PNG_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_unfrozen-with-push.thumb.PNG.9a2a519768fd31323a0a82357b03aabd.PNG_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_12362_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_04/unfrozen-with-push.thumb.PNG.9a2a519768fd31323a0a82357b03aabd.PNG_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs you can see on profiles_co_ a lot of time is spent on getter functions_co_ most likely because they contain \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_get_dd_ function () {\n    return this[_qt___qt_ + key]_sm_\n}_co__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\twhich is really slow in JS.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo my question is _dd_ do you have any idea on how to prevent that slow-down to happen on _lt_strong_gt_frozen _lt_/strong_gt_materials ? Maybe i am missing something in my UBO implementation code to deal with that ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBtw_co_ It_t_s really likely that unfrozen material spend less time in _qt_isReady_qt_ functions_co_ so are still more optimized despite the heavy _qt_get_qt_ functions. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for your kind advices _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-05T16:21:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWoot love it!! I will definitely improve it but I need a sample repro\n_lt_/p_gt_\n\n_lt_p_gt_\n\tcan you share the PG?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tby the way UBO should also be used even when not frozen as you can create a UBO per chunk (texture_co_ misc_co_ lights_co_ etc..)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-05T18:23:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOk I fixed some stuffs _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ we could be far better now.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlease let me know _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Feldspar","Date":"2017-04-10T10:16:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWe are indeed far better _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ No more intensive CPU usage because of getters and GC.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI also took the initiative of replacing disableLighting and cameraColorCurves by their respective private properties _disableLighting and _cameraColorCurves.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for you help_co_ I_t_ll keep you updated of the following implementation of UBO for materials.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2017-04-24T14:17:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tIs this in the latest nightly build?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"PeapBoy","Date":"2017-04-24T15:11:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_172137_qt_ data-ipsquote-contentid_eq__qt_29453_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1493043434_qt_ data-ipsquote-userid_eq__qt_5217_qt_ data-ipsquote-username_eq__qt_reddozen_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t4 minutes ago_co_ reddozen said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tIs this in the latest nightly build?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs far as I know_co_ yes material push mode is in the latest build for Standard Material._lt_br /_gt_\n\tNot for PBRMaterial yet._lt_br /_gt_\n\tAnd materials from materialsLibrary (water_co_ fur_co_ etc.) also are in push mode. _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-24T23:14:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tcorrect_dd_)\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"DylanD","Date":"2018-07-30T19:29:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHey I_t_m not sure I understand.  \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe standardMaterial in 3.3 alpha is a push material?  Or is it_co_ its own?_co_ oh or did you mean standardMaterial implements pushMaterial or idk_co_ I_t_m very curious...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI see that push material has its own contructor but I can_t_t seem to set a colour to it with diffuseColor_co_ emmisiveColor_co_ or ambientColor.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere also doesn_t_t seem to be a doc on the pushMaterial so I_t_m assuming its only meant to be part of standard material?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso is this an effective way to increase performance of only a handful of materials or is this only for large amounts?  Say 5 different materials?  Assuming the lighting changes and nothing else(used material.freeze()).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_ _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2018-07-30T20:44:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAbsolutely amazing this new great optimization. Thank you very much for always doing_co_ the best_co_ for this engine._lt_br /_gt_\n\tI will not fail to report if I discover a problem.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-07-30T21:58:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tStdMaterial and PBRMaterial are both Pushmaterial _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2018-07-30T23:56:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWill the extensions be too? as mixMaterial for example?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-07-31T14:55:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tyep MixMaterial is a PushMaterial_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/materialsLibrary/src/mix/babylon.mixMaterial.ts#L28_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/materialsLibrary/src/mix/babylon.mixMaterial.ts#L28_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2018-07-31T15:09:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAh yes. I actually confirm an acceleration of loading the terrain with the textures. And I have no mistake. Thank you Deltakosh.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]