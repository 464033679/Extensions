[{"Owner":"Deltakosh","Date":"2017-07-06T22:17:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI know that some of you desperately asked for it _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/tutorials/how_materials_work_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/tutorials/how_materials_work_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2017-07-07T07:30:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tIs there an example of use?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-07-07T16:05:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tjust call material.forceCompilation(mesh) and the shader will be compile. this has to be done before the first render obviously.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-07-12T13:47:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tDoes this work when the material is Multi-Material_co_ or does each sub-material need to be iterated through?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-07-12T15:12:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYou need to iterate through all of them but this is definitely something we should do for 3.1\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-07-12T17:06:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks_co_ I actually found that I need to get all the simple materials of a mesh and its descendants.  I have this coded so far in QI.Mesh_co_ since I cannot bring myself to switch to 3.1 Alpha on day one.  I can move to BABYLON.Mesh after I get one kink out.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_/**\n * Get Every material in use by the mesh &amp_sm_ it_t_s children.  This is primarily for compileMaterials()_co_\n * but needs to be broken out_co_ so it can be called recursively.\n * \n * @param repo - This is an array of dictionaries with entries of a mesh &amp_sm_ material_co_ initialized when missing.\n * @param mesh - An argument of the mesh to operate on_co_ default this.  Needed because function is implemented at QI.Mesh.\n * @returns an array of dictionaries with entries of a mesh &amp_sm_ material.\n */\npublic getEverySimpleMaterial(repo? _dd_ Array&lt_sm_{mesh_dd_ BABYLON.Mesh_co_ mat_dd_ BABYLON.Material}&gt_sm__co_ mesh _dd_ BABYLON.Mesh _eq_ this) _dd_ Array&lt_sm_{mesh_dd_ BABYLON.Mesh_co_ mat_dd_ BABYLON.Material}&gt_sm_ {\n    if (!repo) repo _eq_ new Array&lt_sm_{mesh_dd_ BABYLON.Mesh_co_ mat_dd_ BABYLON.Material}&gt_sm_(0)_sm_\n    \n    // take care of this mesh\n    if (mesh.material instanceof BABYLON.MultiMaterial) {\n        var subMaterials _eq_ (&lt_sm_BABYLON.MultiMaterial&gt_sm_ mesh.material).subMaterials_sm_\n        for (var i _eq_ 0_co_ len _eq_ subMaterials.length_sm_ i &lt_sm_ len_sm_ i++) {\n            repo.push( {mesh _dd_ mesh_co_ mat_dd_ subMaterials[i]} )_sm_\n        }\n    } else repo.push( {mesh _dd_ mesh_co_ mat_dd_ mesh.material} )_sm_\n    \n    // take care of children (those which are not QI.Mesh_co_ can only go one level)\n    var children _eq_ mesh.getChildMeshes()_sm_\n    for (var i _eq_ 0_co_ len _eq_ children.length_sm_ i &lt_sm_ len_sm_ i++) {\n        if (children[i] instanceof QI.Mesh)\n            (&lt_sm_QI.Mesh&gt_sm_ children[i]).getEverySimpleMaterial(repo)_sm_\n        else\n            (&lt_sm_QI.Mesh&gt_sm_ mesh).getEverySimpleMaterial(repo_co_ &lt_sm_BABYLON.Mesh&gt_sm_ children[i])_sm_\n    }            \n    return repo_sm_\n}\n\n/**\n * Ensure that all materials for this mesh &amp_sm_ it_t_s children are actively forced to compile\n */\npublic compileMaterials(completionCallback _dd_ () _eq_&gt_sm_ void) _dd_ void {\n    var everyMatSet _eq_ this.getEverySimpleMaterial()_sm_\n    console.log(_qt_Total number of materials _qt_ + everyMatSet.length)_sm_\n    var compiledMaterials _eq_ 0_sm_\n    var nMaterials _eq_ everyMatSet.length_sm_\n    \n    // the callback to forceCompilation \n    var callback _eq_ function(material _dd_ BABYLON.Material) _dd_ void {\n        console.log(material.name)_sm_\n        if (++compiledMaterials  &lt_sm_ nMaterials) return_sm_\n        completionCallback()_sm_     \n    }_sm_\n    \n    // force compile each mesh &amp_sm_ material set\n    for (var i _eq_ 0_sm_ i &lt_sm_ nMaterials_sm_ i++) {\n        console.log(_qt_queued _qt_ + everyMatSet[i].mat.name)_sm_\n        everyMatSet[i].mat.forceCompilation(everyMatSet[i].mesh_co_ callback)_sm_\n    }\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThat kink is one of my child meshes is colorShader for LinesMesh (Hair).  Do I need to do a test for StandardMaterial?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-07-12T17:24:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\talso realized getChildMeshes is recursive_co_ so therefore there only need be one level of recursion in getEverySimpleMaterial().  In process of removing the QI.Mesh checks.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-07-12T17:40:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tWell the answer is yes_co_ you do need to screen for StandardMaterial_co_ at least for adding to the callback count requirement.  ShaderMaterial does not override isReadyForSubMesh()_co_ so the callback cannot be called.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-07-12T18:20:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI implemented the forced compiling of even ShaderMaterials_co_ but just do not block for it.  _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Extensions/commit/d4d6f914b7dc8b7d36c98ac0732d9f4a1905b374_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Extensions/commit/d4d6f914b7dc8b7d36c98ac0732d9f4a1905b374_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen I had a simple merged head &amp_sm_ hair_co_ I had been getting pretty good sync with any GrandEntrance sound effect_co_ but as the number of meshes increase for full scale characters (clothes_co_ shoes) the sound was getting ahead.  This closed some of that.  The effects also needed tweeking.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet me know if you want me to move this_co_ or steal it yourself.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-07-13T14:57:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tIs scene.materials not enough to get all materials?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-07-13T15:54:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFor those defining all their meshes before the first render (but mesh do you pass to forceCompilation).  I am attempting to dynamically add meshes to a scene that is already rendering meshes.  I retrieve the geo (inside .js files) &amp_sm_ buffer the data for texture files asyc ahead of time to reduce the slow down.  There is going a brief hiccup though.  That is kind of disguised using these animations to initially display meshes.  Do not want either the animation to not be smooth or be behind the audio.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am fine it this was just in my code.  Would have marked the topic [solved]_co_ if it were mine.  I am perfectly positioned for async shader compiling!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-07-13T19:13:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tmakes sense!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-07-19T16:16:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI was looking for a way to force compile without an actual mesh_co_ in the time between when a Launch button appears &amp_sm_ the user clicks it.  Do I have to make a 0 vertex Mesh to pass it to forceCompilation?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-07-19T17:05:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tyep _lt_img alt_eq__qt__dd_(_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ title_eq__qt__dd_(_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]