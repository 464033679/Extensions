[{"Owner":"digital","Date":"2016-10-21T01:50:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is my first post_co_ because i was most time reading here in the past months._lt_br /_gt__lt_br /_gt_\n\tActually I am working in a small indy team on some full featured MMO platform thats using babylon.js._lt_br /_gt_\n\tIt`s an commercial platform we do together to bring up webgl MMO games in a quick and easy way._lt_br /_gt__lt_br /_gt_\n\tHere some challenges we are working on_dd_\n_lt_/p_gt_\n\n_lt_ul_gt__lt_li_gt_\n\t\tFULL authorative server_co_ with an determistic fork of babylon.js that`s rewritten in ES6 (no typescript)\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tServer side physics simulation\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tIOS/Android client\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tMicro payment system\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tRealtime level editor with multiple procedural tools (persistent)\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tAvatar creator (face from image_co_ morphing_co_ outfits)\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tDynamic cloud instancing (actually only AWS)\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tAsset server with bucket API\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tPlayer authentification by account_co_ facebook_co_ google and twitter\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tDynamic node &gt_sm_ buffer serialization optimized for websockets\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tChat / Voicechat / Instant messaging (WebRTC)\n\t_lt_/li_gt_\n_lt_/ul_gt__lt_p_gt_\n\tMany of those tasks are done already today_co_ but the major task to rewrite babylon has just started._lt_br /_gt_\n\tFor now we do use a slightly hacked version that gave us the proof of concept_co_ but it_t_s far from a production ready release. _lt_br /_gt__lt_br /_gt_\n\tWhile doing alot of testings with babylon and other frameworks we considered that babylon is absolutely the best to use._lt_br /_gt_\n\tThe only weak point we found is the animation system. I could write a book about that because it kept me busy for weeks in testings_co_ well_co_ we decided to rewrite that whole part from scratch.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOur framework is built on node.js_co_ mongoDB_co_ Redis_co_ WS_co_ multiple cloud SDK_t_s and API_t_s._lt_br /_gt_\n\tAt the current stage it is playable with a really stunning networking performance and lightweight client because all the collision and physics happens server side._lt_br /_gt__lt_br /_gt_\n\tSo why i am posting this here?_lt_br /_gt_\n\tIt_t_s because we are looking for 1-2 more skilled developers to join our party._lt_br /_gt__lt_br /_gt_\n\tWant to develop MMO`s?_lt_br /_gt_\n\tThen ping me and i can tell a bit more about the project or show a running demo.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tKind Regards_lt_br /_gt_\n\tMarcus\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Mike Pelton","Date":"2016-10-21T07:42:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHI Marcus - am interested in why you_t_d be so keen to rewrite Babylon in ES6? There_t_s obviously a cost in time and subsequent maintenance - you must think you_t_ll benefit somehow? I_t_m not trying to make a point - am genuinely curious.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSounds like a fantastic project! \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAll the best\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMike\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"inteja","Date":"2016-10-21T09:29:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCan_t_t you simply compile typescript to ES6? Like ...\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_--target es6_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"digital","Date":"2016-10-21T12:48:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThere are several reasons to use ES6_co_ such as easier debugging_co_ full control about the syntax and less complicated use in node.js._lt_br /_gt_\n\tThis could all be done with typescript_co_ but when comparing the compiled code you will notice that this is really worth it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe code conversion was done like inteja mentioned_co_ but requires alot of manual cleanup afterwards to have nice readable code._lt_br /_gt_\n\tChallenge is more about changing some major functionality_co_ like implementing a client/server mode to the engine what means to limit features to server or client only._lt_br /_gt_\n\tOne good example is the action manager that runs only server side and streams down events to some new client action handler.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2016-10-24T22:29:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tWill this be built to run on mobile devices?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]