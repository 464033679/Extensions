[{"Owner":"Kesshi","Date":"2016-12-07T10:03:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI was playing around with inverse kinematics and tried to solve the problem with the physics engine of babylon js._lt_br /_gt_\n\tPhysics engines are not meant to solve inverse kinematics but with the correct setup you can get some good results for simple cases._lt_br /_gt__lt_br /_gt_\n\tHere is a playground for you_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#24XJYU%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#24XJYU#2_lt_/a_gt__lt_br /_gt_\n\tThe trick is to give the start and the end of the chain a fixed position. I set them to mass _eq_ 0 for this. They will not get moved from the physics that way._lt_br /_gt_\n\tIf you now change the position of the end directly_co_ the physics engine will calculate the postions of the middle bones for you._lt_br /_gt_\n\tÂ \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]