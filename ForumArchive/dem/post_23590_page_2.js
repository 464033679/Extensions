[{"Owner":"Dal","Date":"2016-07-20T16:00:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI can_t_t figure out how to get this to work in the playground_co_ there_t_s too many dependencies_co_ but I_t_ve put a playable demo online at_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.loudened.com/terrain/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.loudened.com/terrain/_lt_/a_gt__lt_br /_gt__lt_br /_gt_\n\tI will probably only leave it there for a few days though so test it while you can _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo be honest_co_ I am starting to feel as though I will never be able to achieve the results I want in Babylon... I_t_m really struggling with the performance issues and it doesn_t_t look like anyone is going to be able to offer any help any time soon_co_ so I might just move to an engine with a working terrain solution already. _dd_I\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-07-20T16:38:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_136926_qt_ data-ipsquote-contentid_eq__qt_23590_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1469028105_qt_ data-ipsquote-userid_eq__qt_5453_qt_ data-ipsquote-username_eq__qt_jerome_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ jerome said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tNot sure I understand all your code. What is the main principle behind the hood ?\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tDo you create new chunkq of terrain on the fly ? how do you dispose the useless ones ? or do you re-use them ?\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tI would have used a different approach _dd_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t- to have a huge logical terrain_co_ whatever its source _dd_ heightmap_co_ perlin noise computation_co_ etc... well something too big to be rendered with vertices but easily defined by a set of vertices (x_co_ y_co_ z)_co_ well like ribbon paths or arrays\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t- to have an updatable renderable mesh designed by a pool of different LOD stripes _dd_ imagine_co_ say_co_ three concentric squares (BJS grounds)_co_ the farthest with the lowest LOD_co_ the closest with the highest LOD\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t- to shift the mesh vertex values along the logical terrain array according to the camera position in the World _dd_ the farthest square would be defined for example with 1 logical coordinate set every 100 ones_co_ the middle one with 1 on 20_co_ the closest with all logical coordinates (not pertinent values)\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tJust to say that each stripe picks its part of logical coordinates but not with the same density.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThis would be some kind of _qt_moving mesh_qt_ in the logical array_co_ although immobile in the World_co_ according to the cam moves and the mesh would be updated by the current logical coordinates.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tSo only a pre-defined updatable mesh_co_ no allocation_co_ no destruction_co_ just vertex position updates (maybe uvs also) what is really fast\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tnot sure I_t_m very clear\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThat was my first approach_co_ but I couldn_t_t get it quite working and since it was mostly on the GPU I couldn_t_t figure out how to get collisions working either_dd_\n_lt_/p_gt_\n_lt_iframe data-embedcontent_eq__qt__qt_ frameborder_eq__qt_0_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/topic/18858-geo-clipmapping-endless-terrain-contribution/?do_eq_embed&amp_sm_embedComment_eq_106965&amp_sm_embedDo_eq_findComment#comment-106965_qt__gt__lt_/iframe_gt_\n\n_lt_p_gt_\n\tThen my second approach I tried a voxel terrain_co_ but that one I couldn_t_t solve the seams problem or decent painting_dd_\n_lt_/p_gt_\n_lt_iframe data-embedcontent_eq__qt__qt_ frameborder_eq__qt_0_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/topic/20424-voxel-terrain/?do_eq_embed_qt__gt__lt_/iframe_gt_\n\n_lt_p_gt_\n\tThen this is my last approach_co_ I decided to go back to the _qt_basic_qt_ approach of simply using terrain quads and LODing them. which makes the seams problems easier to solve and makes it easier to use high quality texturing and normal maps.. but still_co_ the performance just SUCKS.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt_\n\tI am really thinking I should give up on this stuff now... it seems I am not smart enough to solve this problem alone and there_t_s not enough interest here to help with it. Unless anyone thinks they can assist I think I will just have to investigate other engines that already have good terrain implementations._lt_br /_gt__lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-07-20T17:27:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tActuallu I think there_t_s a big interest here_co_ but maybe we miss some information about the approach_co_ some comments about what the code does exactly_co_ how it is archtitured_co_ etc\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNot that easy to discover at once such a big feature _sm_-D\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-07-20T17:58:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_136944_qt_ data-ipsquote-contentid_eq__qt_23590_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1469035660_qt_ data-ipsquote-userid_eq__qt_5453_qt_ data-ipsquote-username_eq__qt_jerome_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t27 minutes ago_co_ jerome said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tActuallu I think there_t_s a big interest here_co_ but maybe we miss some information about the approach_co_ some comments about what the code does exactly_co_ how it is archtitured_co_ etc\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tNot that easy to discover at once such a big feature _sm_-D\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThe approach is based on this XNA tutorial (although it_t_s a bit different now)_dd__lt_br /_gt__lt_a href_eq__qt_http_dd_//www.dustinhorne.com/post/2011/08/24/XNA-QuadTree-Terrain-with-LOD-Part-1-Introduction_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.dustinhorne.com/post/2011/08/24/XNA-QuadTree-Terrain-with-LOD-Part-1-Introduction_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSome of the links on that site are broken but you usually just need to delete the _qt_.aspx_qt_ extension from the URL to make it work.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tA good start might be for you to follow that tutorial with my code_co_ and see the differences I have made in the process... maybe you will also see what I did wrong _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-07-21T12:24:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI_t_d like to try something_co_ but I don_t_t have much time these days _dd_-(\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-07-21T16:44:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m porting it to Haxe at the moment.... perhaps in the process it might end up running faster and I can also see how fast it runs under a C++ target for comparison.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-07-21T17:29:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tmy idea (quickly) would be to define such a mesh _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#24A3NV_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#24A3NV_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\twith a better function on each circle radius _dd_ the radius should increase quick for the greatest circles\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthis mesh would be a immobile ground_co_ updated with the logical ground height according the camera position\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"TheDude","Date":"2016-07-21T18:47:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tWell it works great on a 2012 iMac anyways and they have core i5 which is closer to an average home computer at least_co_ which is good. I guess?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-07-21T18:47:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_137065_qt_ data-ipsquote-contentid_eq__qt_23590_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1469122141_qt_ data-ipsquote-userid_eq__qt_5453_qt_ data-ipsquote-username_eq__qt_jerome_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ jerome said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tmy idea (quickly) would be to define such a mesh _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#24A3NV_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#24A3NV_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\twith a better function on each circle radius _dd_ the radius should increase quick for the greatest circles\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tthis mesh would be a immobile ground_co_ updated with the logical ground height according the camera position\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tInteresting approach.. I haven_t_t seen that done before.  It would be tricky to page in the data though... with the approach I am using_co_ it loads in new squares of terrain as you move around_co_ and it will load in splat maps for each region in the same way. With your approach it would be hard to split out the heightmap/splatmap textures into distinct tiles_co_ so you_t_d have to do something like work out which squares your circle covers and then load multiple textures and pick some of the data from each... might end up being more heavy.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-07-21T19:39:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tActually I_t_m thinking about a pre-computation of all the logical height and uv formulas like I did in getHeightAtCoordinates() with computeQuads under the hood_co_ that stores some math function to return the height at any coordinate (x_co_z). I guess it would be possible to do the same_co_ so to return a formula to return the UV at any coordinate (x_co_ z) from the UV of the vertices fo the current facet (triangle). Not sure though\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf not possible_co_ I could then make concentric squares (aligned to the logical terrain quads) and the uvs handling will be then easy.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn my approach_co_ the logical terrain is just a series (or array) of vertices (and uvs if any) whatever its size.. or even computed (perlin noise)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s pre-processed (or dynamically) so the vertices are turned to facets and so some height (and uv) math function is associated to each triangular facet. Then we can get the height or uv for any (x_co_z) values. These returned values updates the circular ribbon what is the renderable terrain mesh \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t[EDIT] another (bad) attempt _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#24A3NV%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#24A3NV#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tclose to the center_co_ there are small facets_co_ so a big  LOD_co_ far from the center_co_ there are only large facets_co_ so small LOD\n_lt_/p_gt_\n\n_lt_p_gt_\n\t[EDIT 2] this one is better _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#24A3NV%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#24A3NV#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-07-22T12:09:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_137075_qt_ data-ipsquote-contentid_eq__qt_23590_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1469129943_qt_ data-ipsquote-userid_eq__qt_5453_qt_ data-ipsquote-username_eq__qt_jerome_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t16 hours ago_co_ jerome said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tActually I_t_m thinking about a pre-computation of all the logical height and uv formulas like I did in getHeightAtCoordinates() with computeQuads under the hood_co_ that stores some math function to return the height at any coordinate (x_co_z). I guess it would be possible to do the same_co_ so to return a formula to return the UV at any coordinate (x_co_ z) from the UV of the vertices fo the current facet (triangle). Not sure though\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tIf not possible_co_ I could then make concentric squares (aligned to the logical terrain quads) and the uvs handling will be then easy.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tIn my approach_co_ the logical terrain is just a series (or array) of vertices (and uvs if any) whatever its size.. or even computed (perlin noise)\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tIt_t_s pre-processed (or dynamically) so the vertices are turned to facets and so some height (and uv) math function is associated to each triangular facet. Then we can get the height or uv for any (x_co_z) values. These returned values updates the circular ribbon what is the renderable terrain mesh \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t[EDIT] another (bad) attempt _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#24A3NV%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#24A3NV#1_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tclose to the center_co_ there are small facets_co_ so a big  LOD_co_ far from the center_co_ there are only large facets_co_ so small LOD\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t[EDIT 2] this one is better _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#24A3NV%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#24A3NV#2_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThat_t_s kinda what I have... but with squares not circles. All the possible verts and heights are precomputed and it just calcs which indices are used based on the distance...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe thing is_co_ the size of the data is too large to store the large terrain all in memory at the same time... so I page in chunks of terrain as we move around_co_ allowing practically infinite size. The big problem is that even just calculating the indices interating a quadtree seems too slow in my implementation.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI don_t_t really want to start again at this stage - the theory for this one seems solid enough and is widely used in games out in the wild_co_ I think there_t_s just some inefficiency in the implementation that needs solving.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-07-22T12:22:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tQuote\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t_lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_line-height_dd_22.4px_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_float_dd_none_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_The thing is_co_ the size of the data is too large to store the large terrain all in memory at the same time... so I page in chunks of terrain as we move around_co_ allowing practically infinite size. The big problem is that even just calculating the indices interating a quadtree seems too slow in my implementation._lt_/span_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tMy idea is this one _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- decouple the logical terrain from the renderable mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- the mesh (whatever squared or circular) is just updated on this positions (and/or uvs)_co_ not indices... always the same morphable geometry\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- the logical terrain and the mesh share a coordinate reference_co_ so the mesh can _qt_slide_qt_ on the logical terrain_co_ although immobile in the 3D World\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- the logical terrain can be updated live_co_ by downloading on the fly new parts of data_co_ or by computation\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWell_co_ the idea is to NOT add or remove vertices/indices from the mesh_co_ to keep it constant_co_ just to morph it by updating its positions and to add/remove/compute data only the logical terrain\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-07-22T14:26:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_137130_qt_ data-ipsquote-contentid_eq__qt_23590_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1469190129_qt_ data-ipsquote-userid_eq__qt_5453_qt_ data-ipsquote-username_eq__qt_jerome_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ jerome said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tMy idea is this one _dd_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t- decouple the logical terrain from the renderable mesh.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t- the mesh (whatever squared or circular) is just updated on this positions (and/or uvs)_co_ not indices... always the same morphable geometry\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t- the logical terrain and the mesh share a coordinate reference_co_ so the mesh can _qt_slide_qt_ on the logical terrain_co_ although immobile in the 3D World\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t- the logical terrain can be updated live_co_ by downloading on the fly new parts of data_co_ or by computation\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tWell_co_ the idea is to NOT add or remove vertices/indices from the mesh_co_ to keep it constant_co_ just to morph it by updating its positions and to add/remove/compute data only the logical terrain\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tYeah that_t_s roughly how my first approach worked... but I couldn_t_t get it right. How would you texture it? You_t_d need a _qt_logical_qt_ texture as well... so perhaps that means having a huge texture in memory_co_ or you split it into smaller ones_co_ but then when you _qt_slide_qt_ between 2 different textures you need to load in 2 textures and pick some data from each... and maybe you could be on the border between 4 different textures at once_co_ so you need to load and sample 4 textures...._lt_br /_gt_\n\tThe height data could be a similar issue... you have to fit the entire world into memory_co_ even if you don_t_t render all of it._lt_br /_gt__lt_br /_gt_\n\tFor my first try_co_ I was keeping the mesh static and setting the vertices in the shader. It runs fast_co_ but then the positions aren_t_t stored in the mesh itself_co_ so it starts getting tricky for physics and height picking and doing stuff like placing trees only where it is not too steep etc... really that calculation needs to be done in JS side I think_co_ which is why I ended up coming back to the quadtree concept._lt_br /_gt__lt_br /_gt_\n\tMy latest approach loads a large amount of data but doesn_t_t render all of it_co_ it misses out more triangles the further away you get. That lets me have fairly big terrains_co_ but I still can_t_t load a really huge world into memory at once. A terrain that is 2km big_co_ say 2048 x 2048_co_ with vertex per metre_co_ that_t_s still 4.2 million vertices. Even if I don_t_t triangulate them all_co_ its still a heck of a lot of verts to load in_co_ and they have to be updated as you move around._lt_br /_gt_\n\tI_t_ve tried to reduce it so it uses a quadtree to only update the needed verts_co_ but its still not efficient enough - that_t_s the bit I guess I need help with. We need to do some low-level stuff there to do better culling and use of buffers to do only the very minimum of recalculation of LOD each frame.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-07-22T16:38:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWell... Haxe port is now complete. Initial indications are that it DOES run faster... although i_t_m not sure it_t_s working exactly as intended at the moment.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/21890-babylonhx/?do_eq_hovercard_qt_ data-mentionid_eq__qt_21890_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/21890-babylonhx/_qt_ rel_eq__qt__qt__gt_@babylonhx_lt_/a_gt_ Am I right in saying there_t_s no debug layer available in BabylonHx yet?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-07-22T16:53:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\twhat platform/language/OS did you target to have a faster implementation than JS ?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-07-22T17:49:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_137154_qt_ data-ipsquote-contentid_eq__qt_23590_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1469206407_qt_ data-ipsquote-userid_eq__qt_5453_qt_ data-ipsquote-username_eq__qt_jerome_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t55 minutes ago_co_ jerome said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\twhat platform/language/OS did you target to have a faster implementation than JS ?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tActually I am only guessing that it_t_s faster - I can_t_t figure out how to display the FPS in _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/21890-babylonhx/?do_eq_hovercard_qt_ data-mentionid_eq__qt_21890_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/21890-babylonhx/_qt_ rel_eq__qt__qt__gt_@babylonhx_lt_/a_gt_ _lt_img alt_eq__qt__dd_P_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ title_eq__qt__dd_P_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-07-22T18:36:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tno idea\n_lt_/p_gt_\n\n_lt_p_gt_\n\tbut if you use chrome_co_ you can display the browser FPS (not applicative)_co_ you could go in the web console_co_ then _qt_more tools / rendering settings_qt__co_ then check in _qt_show FPS meter_qt_ and you_t_ll see the browser FPS meter\n_lt_/p_gt_\n\n_lt_p_gt_\n\tbut if you use Chrome_co_ this supposes that you_t_re just using some JS/WebGL... so the same than BJS\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-07-22T19:41:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_137162_qt_ data-ipsquote-contentid_eq__qt_23590_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1469212583_qt_ data-ipsquote-userid_eq__qt_5453_qt_ data-ipsquote-username_eq__qt_jerome_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ jerome said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tno idea\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tbut if you use chrome_co_ you can display the browser FPS (not applicative)_co_ you could go in the web console_co_ then _qt_more tools / rendering settings_qt__co_ then check in _qt_show FPS meter_qt_ and you_t_ll see the browser FPS meter\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tbut if you use Chrome_co_ this supposes that you_t_re just using some JS/WebGL... so the same than BJS\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tHmmm_co_ yep_co_ seems with the JS target the performance is about the same. _lt_br /_gt_\n\tI don_t_t get what is sucking up all the performance. What I need is someone who_t_s really good at profiling... who is best at that on this forum?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-07-23T00:32:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOK_co_ I_t_ve got the CPP target running quite fast _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_br /_gt__lt_br /_gt_\n\tStill lots of bugs though with the Haxe version.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_07/betterfps.JPG.28e3a8616b76d9a974afd939dfe29ac5.JPG_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_8736_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_07/betterfps.thumb.JPG.86631005545a170790715c46b612c9fb.JPG_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_betterfps.JPG_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-07-23T01:42:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOk the good news is I_t_ve just made a major performance breakthrough and backported the change to webgl and it works much better now. The bad news is that it_t_s introduced holes in the terrain_co_ but I have a rough idea how to solve that... fingers crossed.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Boz","Date":"2016-07-23T20:21:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey ! I_t_ve tested your code at _lt_a href_eq__qt_https_dd_//www.loudened.com/terrain/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.loudened.com/terrain/_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt runs at 35 fps on my computer with CPU i7-4720\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe _qt_freeze_qt_ could be a bit annoying when a new chunk loads_co_ what do you think is the best compromise between chunk size and loading time ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tKeep going_co_ nice to see good news here _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ !\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-07-24T22:36:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tJust in case anyone is testing/thinking of testing this_co_ the version in git is a bit broken now because I am working on some breaking changes at the moment to hopefully address performance issues.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-07-26T21:08:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tGah... I can_t_t seem to solve the loading lag... even with threading and everything it just seems to take too long to add the children_co_ I wish it was possible to see exactly which line is causing the issue _lt_img alt_eq__qt__dd_(_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ title_eq__qt__dd_(_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gamestudiohx","Date":"2016-08-02T21:42:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//hxscout.com/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//hxscout.com/_lt_/a_gt_ can help you with profiling c++ target\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-08-12T20:31:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tyou might get something out of this_dd__lt_a href_eq__qt_http_dd_//pryme8.github.io/TERIABLE/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//pryme8.github.io/TERIABLE/_lt_/a_gt__lt_br /_gt_\n\tIt would not take much to convert this to a Infinite terrain generator.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_08/example.jpg.69a3298a663d6feec70e04fd5a40a6c4.jpg_qt_ data-fileid_eq__qt_9012_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img alt_eq__qt_example.jpg_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_9012_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_08/example.thumb.jpg.b5cd73be949a04d39709929542aad9df.jpg_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_08/example.jpg.529c7145c5493f007d846f426c0937e3.jpg_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_9013_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_08/example.thumb.jpg.8c8469cbb4f721ab8b66c6865b4c38c5.jpg_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_example.jpg_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]