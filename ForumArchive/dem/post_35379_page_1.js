[{"Owner":"BrainBacon","Date":"2018-01-31T07:15:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIf you haven_t_t yet seen _lt_a href_eq__qt_https_dd_//aframe.io/_qt_ rel_eq__qt_external nofollow_qt__gt_A-Frame_lt_/a_gt_ yet_co_ you should check it out. The gist is that you use HTML tags to define your scene. I was working on porting A-Frame to _lt_a href_eq__qt_https_dd_//vuejs.org/_qt_ rel_eq__qt_external nofollow_qt__gt_Vue_lt_/a_gt_ because the devtools are amazing and the components are expressive and makes your app really reactive. I prefer Vue over React since it_t_s simpler and I don_t_t have to work in JSX. While working on integration with A-Frame I started to notice that the overlap between A-Frame_t_s entities and Vue_t_s components became rather cumbersome and Three.js_t_s API and documentation made the situation worse. I noticed the Babylon.js project shortly after and discovered how awesome it is. I then decided it would be better to make my own _lt_a href_eq__qt_https_dd_//en.wikipedia.org/wiki/Entity%E2%80%93component%E2%80%93system_qt_ rel_eq__qt_external nofollow_qt__gt_ECS_lt_/a_gt_ using Babylon.js with Vue components.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs of right now I have Scene_co_ Entity_co_ Mesh_co_ Light_co_ and Animation components created. Here_t_s a sneak peek_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_WhiteTangibleIndianspinyloach-size_restr_qt_ class_eq__qt_ipsImage_qt_ height_eq__qt_281_qt_ src_eq__qt_https_dd_//thumbs.gfycat.com/WhiteTangibleIndianspinyloach-size_restricted.gif_qt_ width_eq__qt_500_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd the code for the scene written in _lt_a href_eq__qt_https_dd_//pugjs.org_qt_ rel_eq__qt_external nofollow_qt__gt_Pug_lt_/a_gt__dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_animations.png.16b567724495684b365a338c2b9fe7e2.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_16832_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_01/animations.png.16b567724495684b365a338c2b9fe7e2.png_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ll keep this thread updated as I continue progressing on the project. Let me know if you have any ideas or feedback.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can watch me code it on my _lt_a href_eq__qt_https_dd_//www.twitch.tv/brain_bacon/_qt_ rel_eq__qt_external nofollow_qt__gt_Twitch stream_lt_/a_gt_ this Monday from 2-10pm CST.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI just started this project a couple days ago_co_ so it doesn_t_t have documentation yet_co_ but you can see the code on _lt_a href_eq__qt_https_dd_//github.com/Beg-in/vue-babylonjs_qt_ rel_eq__qt_external nofollow_qt__gt_Github_lt_/a_gt_ or grab it off of NPM as _lt_a href_eq__qt_https_dd_//www.npmjs.com/package/vue-babylonjs_qt_ rel_eq__qt_external nofollow_qt__gt_vue-babylonjs_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-01-31T16:46:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tReally cool\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BrainBacon","Date":"2018-02-05T06:49:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHere_t_s a little update_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve been working on materials and I started with supporting custom shaders. You will be able to define your Shader code in a multitude of ways. Here is one of the most interesting ones_co_ inline code in a Vertex or Fragment component!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_16883_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_02/5a77fd440ccc8_Screenshot2018-02-05at12_41_37AM.jpg.48e32e9f873f79cc7c92658f99c56d4e.jpg_qt_ style_eq__qt_width_dd_500px_sm_height_dd_auto_sm__qt_ alt_eq__qt_5a77fd440ccc8_Screenshot2018-02-05at12_41_37AM.jpg.48e32e9f873f79cc7c92658f99c56d4e.jpg_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_16884_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_02/5a77fd4a2386f_Screenshot2018-02-05at12_39_33AM.jpg.02e074d40f2beeb5918e1f15741273b3.jpg_qt_ alt_eq__qt_5a77fd4a2386f_Screenshot2018-02-05at12_39_33AM.jpg.02e074d40f2beeb5918e1f15741273b3.jpg_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can see more examples including loading from a file or inside your component scripts _lt_a href_eq__qt_https_dd_//github.com/Beg-in/vue-babylonjs/blob/master/example/src/shader/template.pug_qt_ rel_eq__qt_external nofollow_qt__gt_in the example on the Github repository_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BrainBacon","Date":"2018-02-08T10:06:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_ve been hard at work on integrating features for the plugin_co_ and I launched the start of the example website.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can see the site here_dd_ _lt_a href_eq__qt_https_dd_//beg-in.github.io/vue-babylonjs/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//beg-in.github.io/vue-babylonjs/_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAdditionally I_t_m planning on bringing this project to _lt_a href_eq__qt_https_dd_//www.hackillinois.org/_qt_ rel_eq__qt_external nofollow_qt__gt_HackIllinois_lt_/a_gt_ this year which has a strong commitment to contributing to open source projects_co_ so the documentation and testing should get a quick boost!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway_co_ on to the update!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhile developing the Camera components I noticed that the plugin was going to become too tightly coupled to the current BabylonJS API_co_ so I came up with a way to accomidate future changes and feature additions. I present the property system_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ data-fileid_eq__qt_16928_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_02/5a7c13964f510_Screenshot2018-02-08at2_29_43AM.jpg.85546ae12320a103ca4a7767f23374d6.jpg_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_5a7c13966b41c_Screenshot2018-02-08at2_29_43AM.thumb.jpg.f059ec1f38e228af2e51154ce31241f9.jpg_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_16928_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_02/5a7c13966b41c_Screenshot2018-02-08at2_29_43AM.thumb.jpg.f059ec1f38e228af2e51154ce31241f9.jpg_qt_ style_eq__qt_width_dd_500px_sm_height_dd_auto_sm__qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_AppropriateHealthyHackee-size_restricted.gif_qt_ class_eq__qt_ipsImage_qt_ height_eq__qt_362_qt_ src_eq__qt_https_dd_//thumbs.gfycat.com/AppropriateHealthyHackee-size_restricted.gif_qt_ style_eq__qt_width_dd_500px_sm_height_dd_auto_sm__qt_ width_eq__qt_640_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRather than specifying every possible property in this plugin_t_s components_co_ this system will allow you to modify your BabylonJS objects indirectly. Several helpers are available to make defining properties easy in your template_co_ and there are multiple ways to set them. Any changes you make in Vue will be reactive and will update the object in real-time! Unfortunately the _qt_properties_qt_ prop for Entity components uses a deep watcher_co_ so I will be keeping an eye on how this affects performance.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy  plan is to implement a method in the near future where you can access the underlying BabylonJS object directly as a _lt_a href_eq__qt_https_dd_//vuejs.org/v2/guide/components.html#Form-Input-Components-using-Custom-Events_qt_ rel_eq__qt_external nofollow_qt__gt_v-model_lt_/a_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRight now that is already possible from a child component extending Entity as a mixin with one of the following_dd_\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\tA custom lifecycle hook defined specifically by this plugin_dd_ \n\t\t_lt_pre_gt_\n_lt_code_gt_onParent({ parent }) { ... }_lt_/code_gt__lt_/pre_gt_\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tAn injected promise_dd_ \n\t\t_lt_pre_gt_\n_lt_code_gt_let parent _eq_ await this.EntityReady_sm__lt_/code_gt__lt_/pre_gt_\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\t A private property_dd_ \n\t\t_lt_pre_gt_\n_lt_code_gt_this._$_parent_lt_/code_gt__lt_/pre_gt_\n\n\t\t_lt_p_gt_\n\t\t\tnote_dd_ I am currently unsure If I should maintain this as a public-facing API.\n\t\t_lt_/p_gt_\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n_lt_p_gt_\n\tAs always_co_ you can see the example code _lt_a href_eq__qt_https_dd_//github.com/Beg-in/vue-babylonjs/blob/master/example/src/properties/template.pug_qt_ rel_eq__qt_external nofollow_qt__gt_in the Gitub repository._lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tP.S.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m pretty much done with the Camera component_co_ and I was wondering if it makes sense to have a default camera for the scene? While I was messing around in the BabylonJS Playground I noticed the scene will not function without a camera. Do you think it would confuse new developers more or less without them explicitly specifying a Camera? Right now I am not setting up a default camera if you do not specify one_co_ but It could be do-able. A-Frame does set one up for you automatically. I see pros and cons either way_co_ especially if someone wants to set up some sort of rig or modify camera settings. Let me know your thoughts.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-02-08T16:44:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou can still call scene.createDefaultCamera() if before rendering you see that there is no camera\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BrainBacon","Date":"2018-03-27T21:03:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey all_co_ sorry for the delay in an update. I_t_ve recently moved to a new city and haven_t_t had much of a chance to get my news up here. I have_co_ however_co_ been working a lot on the library in the meantime.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve finished up the implementation for the initial version of the library. The final pieces Material_co_ Texture_co_ and Physics are now available for use. Model binding syntax is now available for most components of the library for ease of access to the underlying objects from BabylonJS! Use the _qt_v-model_qt_ property on components and bind it to a data property and use a watcher to listen for when the object is available in your scripts.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI was initially using PBRMaterial by default for the Material component_co_ but I found that trying to stabilize the PBRMaterial API to be easy for new developers with sensible defaults was more challenging than I initially thought. I eventually decided to revert that back to StandardMaterial. I did_co_ however_co_ combine many of the properties of PBRMaterial and StandardMaterial in the Material component_co_ so the switch between the two (using the type property) should be easy enough for developers with experience with PBRMaterial. If the community pushes for PBRMaterial to be default in the future then I will heavily consider the change.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPhysics implementation is in place and leverages the new model binding mechanism to allow for access to the underlying impostor object inside your component scripts. The Physics Engine on the Scene is automatically initialized when any Physics component is activated! The Physics component uses the same parenting system as Entity_co_ so adding physics to your scene is as easy as any other part of this library. Joints_co_ however_co_ were more difficult to reason about inside of a DOM-like tree structure since they require a reference to multiple Entities. In the end I decided to skip Joint implementation until the community has a chance to try the library and provide feedback on plans on how to structure that sort of interaction. For now joints can be created using the impostor objects.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis marks the point at which the library graduates from alpha to beta status which means the API structure is pretty much finalized and will only change if there are considerable issues. This week I will be adding much needed documentation and sprucing up the examples and documentation website.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFuture updates will happen on the _lt_a href_eq__qt_https_dd_//github.com/Beg-in/vue-babylonjs/issues/1_qt_ rel_eq__qt_external nofollow_qt__gt_Github mailing list issue_lt_/a_gt_. Subscribe to be notified as soon as the library comes out of Beta!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-03-28T15:31:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI wanted to offer you the opportunity to be hosted on our extension repo and to have a page in our doc.babylonjs.com\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWould you be interested?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BrainBacon","Date":"2018-03-28T20:20:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ Absolutely. What do you need me to do?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-03-28T22:29:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFirst create your folder here (I_t_ll make you admin as soon as you will create your PR)_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Extensions_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Extensions_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor documentation_co_ we have a specific section for extensions_dd__lt_a href_eq__qt_http_dd_//doc.babylonjs.com/extensions/_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/extensions/_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks a lot!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-09-28T09:11:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYay! An Entity/Component/System extension for BabylonJS is very great news!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI mean_co_ for now_co_ there is no organisational paradigm in BabylonJS_co_ except maybe the Unity Toolkit and its Scene Manager. Hence it can be hard to organise our projects.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have some questions about your extension_co_ which may help people to know if it is relevant to their project_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- What is the performance cost on mobile? (I am working on mobile web)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- What are the babylonjs_t_ functionalities that aren_t_t supported?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tCan_t_t wait to see your extension in the official website _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]