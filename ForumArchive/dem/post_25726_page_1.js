[{"Owner":"Pryme8","Date":"2016-10-12T15:55:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSO_co_ I ran into the problem where I was needing just the positions of an null object and its name_co_ none of its material data none of its vertices nothing just positions_co_ to serve as a template file._lt_br /_gt__lt_br /_gt_\n\tInitially I was just going to grab this information from a the obj file when I realized it does not store global location matrices... so the natural thought then was to use an fbx when I realized that has way way more information then I need and is not directly parse-able without some prior handling_co_ and if Im gonna parse it why not make it into a format that I want.  Hence the creation of a bt file (block template in my project I made it for or a Babylon Template for general purposes)._lt_br /_gt__lt_br /_gt_\n\tWith this new file I am able to iterate through it after grabbing it and turning it into a JSON object to create Instances or clones of prefabs stored in a container on the scene._lt_br /_gt_\n\tThe structure of my 3d file was a null object with the name Placeholder(nameOFpreset).# and the position and location of the null to where I want the preset (I initially positioned them with the presets mesh in the null orientated to the null and then once everything was in place deleted all the children of the placeholders).  Once it exported from c4d to an fbx as a text file it changes the names to MODEL_dd__dd_Placeholder(name)__#.  So following that naming convention and a little nifty regex I was able to accommodate my means_co_ and get it fully functioning.  I figured someone might find this useful in one of their projects._lt_br /_gt__lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_&lt_sm_!DOCTYPE html PUBLIC _qt_-//W3C//DTD XHTML 1.0 Transitional//EN_qt_ _qt_http_dd_//www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd_qt_&gt_sm_\n&lt_sm_html xmlns_eq__qt_http_dd_//www.w3.org/1999/xhtml_qt_&gt_sm_\n&lt_sm_head&gt_sm_\n&lt_sm_meta http-equiv_eq__qt_Content-Type_qt_ content_eq__qt_text/html_sm_ charset_eq_utf-8_qt_ /&gt_sm_\n&lt_sm_title&gt_sm_FBX to BT&lt_sm_/title&gt_sm_\n\n&lt_sm_/head&gt_sm_\n&lt_sm_body&gt_sm_\n&lt_sm_input id_eq__t_input_t_ type_eq__qt_file_qt_ accept_eq__qt_fbx_qt_ /&gt_sm_\n&lt_sm_a id_eq__qt_downloadAnchorElem_qt_ style_eq__qt_display_dd_none_qt_&gt_sm_&lt_sm_/a&gt_sm_\n&lt_sm_script&gt_sm_\n\ndocument.getElementById(_t_input_t_).addEventListener(_t_change_t__co_ function(e){\n\t var reader _eq_ new FileReader()_sm_\n  \treader.onload _eq_ function(progressEvent){\n   \t // Entire file\n    \tvar response _eq_ this.result_sm_\n\t\tconsole.log(response)_sm_\n\t\tvar parsed _eq_ []_sm_\n\t\tvar objectReg _eq_ /(?_dd_(?_dd_Model_dd_.*_qt_Model_dd__dd_)(.*)(?_dd_(?_eq__qt__co_))(?_dd_.*(?_dd_\\n|\\r)){4})(?_dd_.*P_dd_\\s_qt_Lcl(.*)(?_dd_\\n|\\r))(?_dd_.*P_dd_\\s_qt_Lcl(.*)(?_dd_\\n|\\r))?(?_dd_.*P_dd_\\s_qt_Lcl(.*)(?_dd_\\n|\\r))?/ig_sm_\n\t\tvar placeholders_sm_\n\t\t\n\t\twhile ((placeholders _eq_  objectReg.exec(response)) !_eq__eq_ null) {\n  \t\t\t\n\t\t\tvar position _eq_ [0_co_0_co_0]_sm_\n\t\t\tvar rotation _eq_ [0_co_0_co_0]_sm_\n\t\t\tvar scale _eq_ [1_co_1_co_1]_sm_\n\t\t\t//console.log(placeholders)_sm_\n\t\t\tif(placeholders[2]){\n\t\t\t\tplaceholders[2] _eq_ placeholders[2].split(_t__co__t_)_sm_\n\t\t\t\tposition[0] _eq_ parseFloat(placeholders[2][4])_sm_\n\t\t\t\tposition[1] _eq_ parseFloat(placeholders[2][5])_sm_\n\t\t\t\tposition[2] _eq_ parseFloat(placeholders[2][6])_sm_\n\t\t\t\t//console.log(_qt_position_dd__qt_)_sm_\n\t\t\t\t//console.log(position)_sm_\n\t\t\t\n\t\t\t}\n\t\t\tif(placeholders[3]){\n\t\t\t\tplaceholders[3] _eq_ placeholders[3].split(_t__co__t_)_sm_\n\t\t\t\trotation[0] _eq_ parseFloat(placeholders[3][4])/180_sm_\n\t\t\t\trotation[1] _eq_ parseFloat(placeholders[3][5])/180_sm_\n\t\t\t\trotation[2] _eq_ parseFloat(placeholders[3][6])/180_sm_\n\t\t\t\t//console.log(_qt_rotation_dd__qt_)_sm_\n\t\t\t\t//console.log(rotation)_sm_\n\t\t\t}\n\t\t\tif(placeholders[4]){\n\t\t\t\tplaceholders[4] _eq_ placeholders[4].split(_t__co__t_)_sm_\n\t\t\t\tscale[0] _eq_ parseFloat(placeholders[4][4])_sm_\n\t\t\t\tscale[1] _eq_ parseFloat(placeholders[4][5])_sm_\n\t\t\t\tscale[2] _eq_ parseFloat(placeholders[4][6])_sm_\n\t\t\t//\tconsole.log(_qt_scale_dd__qt_)_sm_\n\t\t\t//\tconsole.log(scale)_sm_\n\t\t\t}\n\t\t\tif(rotation[0]_eq__eq_-0){\n\t\t\t\trotation[0] _eq_ 0_sm_\t\n\t\t\t}\n\t\t\tif(rotation[1]_eq__eq_-0){\n\t\t\t\trotation[1] _eq_ 0_sm_\t\n\t\t\t}\n\t\t\tif(rotation[2]_eq__eq_-0){\n\t\t\t\trotation[2] _eq_ 0_sm_\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tconsole.log((placeholders[1].replace(/Placeholder_/g_co__t__t_)).replace(/(__\\d*)|(_(\\n|\\r))/g_co__t__t_))_sm_\n\t\t\t\n\t\t\tparsed.push({\n\t\t\t\tname_dd_(placeholders[1].replace(/Placeholder_/g_co__t__t_)).replace(/(__\\d*)|(_(\\n|\\r))/g_co__t__t_)_co_\n\t\t\t\tposition _dd_ position_co_\n\t\t\t\trotation _dd_ rotation_co_\n\t\t\t\tscale _dd_ scale_co_\n\t\t\t\t})_sm_\n\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\tvar dataStr _eq_ _qt_data_dd_text/json_sm_charset_eq_utf-8_co__qt_ + encodeURIComponent(JSON.stringify(parsed))_sm_\n\t\tvar dlAnchorElem _eq_ document.getElementById(_t_downloadAnchorElem_t_)_sm_\n\t\t\n\t\tdlAnchorElem.setAttribute(_qt_href_qt__co_     dataStr     )_sm_\n\t\tdlAnchorElem.setAttribute(_qt_download_qt__co_ (e.target.files[0].name).replace(_t_.fbx_t__co_ _t__t_)+_qt_.bt_qt_)_sm_\n\t\tdlAnchorElem.click()_sm_\n\t\t\t\t\n  \t}_sm_\n\n  reader.readAsText(e.target.files[0])_sm_\n\t\n}_co_ false)_sm_\n\n&lt_sm_/script&gt_sm_\n&lt_sm_/body&gt_sm_\n&lt_sm_/html&gt_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tMuch love from the Monkey King ^_^...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]