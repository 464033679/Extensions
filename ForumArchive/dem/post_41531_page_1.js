[{"Owner":"coolroar","Date":"2018-11-26T19:07:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t(Installment one is embodied at _lt_a href_eq__qt_https_dd_//jounce.space/zoom_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//jounce.space/zoom_lt_/a_gt_ (infinite field of polyhedra).)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is installment two towards infinite 3D Terrain.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_qt_Exterior_qt_ shot_dd_ _lt_img alt_eq__qt_lattice1.png.2ef5a8a104db6ff81e739f349d7a37bd.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_21262_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_11/lattice1.png.2ef5a8a104db6ff81e739f349d7a37bd.png_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tInterior shot_dd_ _lt_img alt_eq__qt_latticeInterior1.png.523c46c8e6abe4140899f3904e0f007b.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_21206_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_11/latticeInterior1.png.523c46c8e6abe4140899f3904e0f007b.png_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is not yet _qt_infinite_qt_. For now it_t_s a limited 3D lattice.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tGo to _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#USDWIJ%234_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#USDWIJ#4_lt_/a_gt_ and make your way to an exit for an over-all view.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor all the effort I_t_ve put into this_co_ I_t_m now at a loss over what to do with it. Suggestions?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tA technique looking for an idea!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHappy Holidays!_lt_span style_eq__qt_font-size_dd_22px_sm__qt__gt_ _lt_span class_eq__qt_ipsEmoji_qt__gt_🌲_lt_/span_gt_ _lt_span class_eq__qt_ipsEmoji_qt__gt_🎅_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2018-11-26T19:15:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt lag a lot. I can not use it. (10 FPS)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"coolroar","Date":"2018-11-26T21:16:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5292-dad72/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5292_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5292-dad72/_qt_ rel_eq__qt__qt__gt_@Dad72_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOops! Here it is with much smaller lattice_dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#USDWIJ%234_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#USDWIJ#4_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy newly acquired refurbished computer has a bit more oomph than I thought! \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_color_dd_#999999_sm__qt__gt_Edit_dd_ I think I_t_m seeing a mistake -- when viewing the labyrinth from outside_co_ I think I_t_m seeing two interlaced but unconnected labyrinths. This would also apply to the PG in the OP._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_color_dd_#999999_sm__qt__gt_Hopefully not apply to the PGs in my later posts_co_ since they use a different method to generate the lattice.       _lt_span style_eq__qt_font-size_dd_20px_sm__qt__gt__lt_span class_eq__qt_ipsEmoji_qt__gt_😐_lt_/span_gt__lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_color_dd_#000000_sm__qt__gt_Edit 2_dd_ Fixed it by replacing lattice generator with recursive version._lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-11-27T07:23:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\texcellent !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI like this geometry too _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"coolroar","Date":"2018-11-28T23:02:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span style_eq__qt_font-size_dd_20px_sm__qt__gt__lt_strong_gt_To INFINITY and  b e  y   o   n    d !_lt_/strong_gt__lt_/span_gt__lt_br /_gt_\n\tNow the lattice develops as you approach_co_ adding chambers ahead of you using chambers that you_t_ve left behind._lt_br /_gt_\n\tYour processors only have to manage 16 total chambers instead of XxYxZ chambers for an XxYxZ sized lattice._lt_br /_gt_\n\tSo better frame rate and an _lt_strong_gt_infinity_lt_/strong_gt_ of chambers!_lt_br /_gt_\n\tPG_dd_-------------- _lt_span style_eq__qt_font-size_dd_18px_sm__qt__gt__lt_span class_eq__qt_ipsEmoji_qt__gt_👉_lt_/span_gt__lt_/span_gt_   _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#USDWIJ%235_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#USDWIJ#5_lt_/a_gt_ _lt_span style_eq__qt_font-size_dd_18px_sm__qt__gt__lt_span class_eq__qt_ipsEmoji_qt__gt_👈_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt_\n\tFor challenge_co_ try to make your way to an exit -- exits are at grid coordinates that are divisible by four_dd_ [4_co_ 4_co_ 4]_co_ [40_co_-12_co_8]_co_ etc. _lt_br /_gt_\n\tAnother challenge_dd_ try exit a chamber and return through a different tunnel.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt_\n\t_lt_strong_gt_The Code_dd__lt_/strong_gt__lt_br /_gt_\n\tMy goal was to make a regular labyrinth_dd_ uniform sized and spaced chambers with tunnels connected to each nearest neighbor. To avoid sight-lines that extend beyond neighboring chambers_co_ I based the chambers on the tetrahedron. The tetrahedron has four faces_co_ none of which are parallel. Actually_co_ I used the truncated tetrahedron which has hexagon instead of triangle faces. I extended the hexagons to form the tunnels.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t[Some of the code is kinda complicated and the commenting is rather sparse_dd_ I need to develop vocabulary.]_lt_br /_gt_\n\tThe following may help.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Some interesting characteristics of this tetrahedral lattice_dd__lt_/strong_gt__lt_br /_gt_\n\tAdjacent chambers are mirror images.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe absolute values of the components of a vector between neighboring chambers are equal (opposite corners of a cube).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo with a grid increment gi_co_ a chamber located at [a_co_b_co_c]_co_ its four neighbors would be at_dd__lt_br /_gt_\n\t           [a-gi_co_ b+gi_co_ c+gi]_co__lt_br /_gt_\n\t           [a+gi_co_ b+gi_co_ c-gi]_co__lt_br /_gt_\n\t           [a-gi_co_ b-gi_co_ c-gi]_co__lt_br /_gt_\n\tand    [a+gi_co_ b-gi_co_ c+gi].\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSince neighboring chambers are mirrored_co_ the signs of gi must be reversed for alternate chambers. (PG lines 166 - 178)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf the grid increment gi _eq_ 1_co_ as it is in the PG_co_ the chamber grid coordinates will all be even or all be odd_dd__lt_br /_gt_\n\t[even_co_ even_co_ even] or [odd_co_ odd_co_ odd].\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSee nearestLatticePoint()  (PG lines 200- 230)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t__________________________________________________________________________\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlease come back with your questions and suggestions!   _lt_span style_eq__qt_font-size_dd_22px_sm__qt__gt_ _lt_img alt_eq__qt__dd_rolleyes_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_rolleyes.gif_qt_ title_eq__qt__dd_rolleyes_dd__qt_ /_gt_ _lt_span class_eq__qt_ipsEmoji_qt__gt_💡_lt_/span_gt_ _lt_span class_eq__qt_ipsEmoji_qt__gt_👉_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"coolroar","Date":"2018-11-29T15:39:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_strong_gt_I woke up this AM with questions and musings about this project._lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Q_dd_ _lt_/strong_gt_Are the [even_co_ even_co_ even]_co_ [odd_co_ odd_co_ odd] lattice node positions required?_lt_br /_gt_\n\t_lt_strong_gt_A_dd__lt_/strong_gt_ No_co_ the lattice can be started (seeded) anywhere. The [even_co_ even_co_ even]_co_ [odd_co_ odd_co_ odd] pattern is convenient.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Q_dd__lt_/strong_gt_ Are all [even_co_ even_co_ even] and [odd_co_ odd_co_ odd] positions occupied?_lt_br /_gt_\n\t_lt_strong_gt_A_dd__lt_/strong_gt_ No. A node (eg. [3_co_5_co_7]) has four neighbors_co_ but there are eight neighboring [even_co_ even_co_ even] positions_dd__lt_br /_gt_\n\t[2_co_ 4_co_ 6]_co__lt_br /_gt_\n\t[2_co_ 4_co_ 8]_co__lt_br /_gt_\n\t[2_co_ 6_co_ 6]_co__lt_br /_gt_\n\t[2_co_ 6_co_ 8]_co__lt_br /_gt_\n\t[4_co_ 4_co_ 6]_co__lt_br /_gt_\n\t[4_co_ 4_co_ 8]_co__lt_br /_gt_\n\t[4_co_ 6_co_ 6]_co__lt_br /_gt_\n\t[4_co_ 6_co_ 8].\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Q_dd_ _lt_/strong_gt_So exits at positions with coordinates divisible by ten _lt_strong_gt_might not exist_lt_/strong_gt_?_lt_br /_gt_\n\t_lt_strong_gt_A_dd__lt_/strong_gt_ Possibly_co_ 50% chance since I chose div by 10 arbitrarily.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Q_dd_ _lt_/strong_gt_How can I choose periodic exit locations that do exist?_lt_br /_gt_\n\t_lt_strong_gt_A_dd_ _lt_/strong_gt_Don_t_t know. Working on it. Help? (_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#USDWIJ%232_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#USDWIJ#2_lt_/a_gt_   lines 191  - 194)._lt_br /_gt_\n\t_lt_span class_eq__qt_ipsEmoji_qt__gt_💡_lt_/span_gt_  _lt_img alt_eq__qt__dd_rolleyes_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_rolleyes.gif_qt_ title_eq__qt__dd_rolleyes_dd__qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t------------------------------------------------------------------------------------------------------------------\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPostscript_dd_ The lattice repeats every 4 along cardinal axis_co_ so here I_t_ve put exits at positions with coordinates all divisible by four_dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#USDWIJ%235_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#USDWIJ#5_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tand changed other references to PG with non-existing exits.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"coolroar","Date":"2018-11-29T15:45:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m pretty sure that the first two PGs in this topic are generating two interleaved lattices (not my intention).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#USDWIJ_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#USDWIJ_lt_/a_gt_  and  _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#USDWIJ%231_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#USDWIJ#1_lt_/a_gt__lt_br /_gt_\n\tThe lattices are produced in this triple nested for loop_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_for (var i _eq_ -count_sm_ i &lt_sm_ count_sm_ i++) {// make lattice\nfor (var j _eq_ -count_sm_ j &lt_sm_ count_sm_ j++) {\nfor (var k _eq_ -count_sm_ k &lt_sm_ count_sm_ k++) {\n   var newInstance _eq_ polygon.createInstance(_qt_i_qt_ + i)_sm_\n   newInstance.checkCollisions _eq_ true_sm_\n   newInstance.position.set(i*24_co_i*24+j*24_co_i*24+k*24)\n   chamberLabel(newInstance.position.clone()) \n   newInstance _eq_ mpolygon.createInstance(_qt_ii_qt_ + i)_sm_\n   newInstance.checkCollisions _eq_ true_sm_\n   newInstance.position.set(i*24+12_co_i*24+j*24+12_co_i*24+k*24+12)\n   chamberLabel(newInstance.position.clone()) \n}}}\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t[sorry _t_bout not giving literal 24 a var name]\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyone care to try fixing this gnarly inscrutable lattice generator?_lt_br /_gt_\n\t_lt_span class_eq__qt_ipsEmoji_qt__gt_😕_lt_/span_gt_  _lt_span class_eq__qt_ipsEmoji_qt__gt_⁉️_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t----------------------------------------------------------------------------------------------------------------------\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEdit_dd_ Fixed it by replacing the triple nested for loop with a recursive version _lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_ _lt_/span_gt__lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#USDWIJ%234_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#USDWIJ#4_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_///////////  recursive lattice builder\nvar occupied _eq_ {}\nvar count _eq_ 4\nvar radiusComponent _eq_ 12\nfunction addRR(n_co_ gx_co_gy_co_gz) {\n\t\tif (n &gt_sm__eq_ count) return // done_co_ go home\n\t\taddOneRR(n_co_ gx-1_co_ gy+1_co_ gz+1)\n\t\taddOneRR(n_co_ gx+1_co_ gy+1_co_ gz-1)\n\t\taddOneRR(n_co_ gx-1_co_ gy-1_co_ gz-1)\n\t\taddOneRR(n_co_ gx+1_co_ gy-1_co_ gz+1)\n}\nfunction addLL(n_co_ gx_co_gy_co_gz) {\n\t\tif (n &gt_sm__eq_ count) return // done_co_ go home\n\t\taddOneLL(n_co_ gx+1_co_ gy-1_co_ gz-1)\n\t\taddOneLL(n_co_ gx-1_co_ gy-1_co_ gz+1)\n\t\taddOneLL(n_co_ gx+1_co_ gy+1_co_ gz+1)\n\t\taddOneLL(n_co_ gx-1_co_ gy+1_co_ gz-1)\n}\n\nfunction addOneRR(n_co_ gx_co_gy_co_gz) {\n\t\tvar name _eq_ gx+_qt__co__qt_+gy+_qt__co__qt_+gz\n\t\tif (occupied[name]) return\n\t\toccupied[name] _eq_ true\n\t\tvar newInstance _eq_ mpolygon.createInstance(_qt_i_qt_ + n)_sm_\n\t\tnewInstance.checkCollisions _eq_ true_sm_\n\t\tnewInstance.position.set(gx*radiusComponent_co_ gy*radiusComponent_co_ gz*radiusComponent)\n\t\tchamberLabel(newInstance.position.clone())\n\t\taddLL(n+1_co_ gx_co_gy_co_gz) // go add connected chambers (recursive)\n}\nfunction addOneLL(n_co_ gx_co_gy_co_gz) {\n\t\tvar name _eq_ gx+_qt__co__qt_+gy+_qt__co__qt_+gz\n\t\tif (occupied[name]) return\n\t\toccupied[name] _eq_ true\n\t\tvar newInstance _eq_ polygon.createInstance(_qt_i_qt_ + n)_sm_\n\t\tnewInstance.checkCollisions _eq_ true_sm_\n\t\tnewInstance.position.set(gx*radiusComponent_co_ gy*radiusComponent_co_ gz*radiusComponent)\n\t\tchamberLabel(newInstance.position.clone()) \n\t\taddRR(n+1_co_ gx_co_gy_co_gz) // go add connected chambers (recursive)\n}\n\t\naddRR(0_co_ 0_co_0_co_0) // start recursive lattice builder\n/////////// end of recursive lattice builder\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p style_eq__qt_text-align_dd_center_sm__qt__gt_\n\t_lt_span style_eq__qt_font-size_dd_24px_sm__qt__gt__lt_span class_eq__qt_ipsEmoji_qt__gt_👍_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]