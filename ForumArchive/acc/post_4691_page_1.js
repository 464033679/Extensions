[{"Owner":"Dad72","Date":"2014-03-12T15:26:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt_I found a shader for make a materials Cel-Shading (Toon). but I do not know how to separate the code in vertex.fx and fragment.fx._lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_I don_t_t know anything with shaders._lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_ I want to adapt to Babylon. How do I?_lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt__lt_div_gt__lt_p_gt__lt_strong_gt_The Shader _dd__lt_/strong_gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_float4x4 World _dd_ World &lt_sm_ string UIWidget_eq__qt_None_qt__sm_ &gt_sm__sm_float4x4 View _dd_ View &lt_sm_ string UIWidget_eq__qt_None_qt__sm_ &gt_sm__sm_float4x4 Projection _dd_ Projection &lt_sm_ string UIWidget_eq__qt_None_qt__sm_ &gt_sm__sm_texture colorTexture _dd_ DIFFUSE &lt_sm_ string UIName _eq_  _qt_Diffuse Texture_qt__sm_ string ResourceType _eq_ _qt_2D_qt__sm_ &gt_sm__sm_float3 DiffuseLightDirection _eq_ float3(1_co_ 0_co_ 0)_sm_float4 DiffuseLightColor _eq_ float4(1_co_ 1_co_ 1_co_ 1)_sm_float DiffuseIntensity _eq_ 1.0_sm_float ToonThresholds[4] _eq_ {0.95_co_0.5_co_ 0.2_co_ 0.03 }_sm_float ToonBrightnessLevels[5] _eq_ { 1.0_co_ 0.8_co_ 0.6_co_ 0.35_co_ 0.01 }_sm_ sampler2D colorSampler _eq_ sampler_state {    Texture _eq_ &lt_sm_colorTexture&gt_sm__sm_    FILTER _eq_ MIN_MAG_MIP_LINEAR_sm_    AddressU _eq_ Wrap_sm_    AddressV _eq_ Wrap_sm_}_sm_ struct VertexShaderInput {    float4 position _dd_ POSITION0_sm_    float3 normal _dd_NORMAL0_sm_    float2 uv _dd_ TEXCOORD0_sm_}_sm_struct VertexShaderOutput {    float4 position _dd_ POSITION0_sm_    float3 normal   _dd_ TEXCOORD1_sm_    float2 uv _dd_ TEXCOORD0_sm_}_sm_VertexShaderOutput std_VS(VertexShaderInput input) {    VertexShaderOutput output_sm_    float4 worldPosition _eq_ mul(input.position_co_ World)_sm_    float4 viewPosition _eq_ mul(worldPosition_co_ View)_sm_    output.position _eq_ mul(viewPosition_co_ Projection)_sm_    output.normal _eq_ normalize(mul(input.normal_co_ World))_sm_    output.uv _eq_ input.uv_sm_    return output_sm_}float4 std_PS(VertexShaderOutput input) _dd_ COLOR0 {    float lightIntensity _eq_ dot(normalize(DiffuseLightDirection)_co_ input.normal)_sm_    if(lightIntensity &lt_sm_ 0) lightIntensity _eq_ 0_sm_    float4 color _eq_ tex2D(colorSampler_co_ input.uv) * DiffuseLightColor * DiffuseIntensity_sm_    color.a _eq_ 1_sm_    if (lightIntensity &gt_sm_ ToonThresholds[0]) color *_eq_ ToonBrightnessLevels[0]_sm_    else if ( lightIntensity &gt_sm_ ToonThresholds[1]) color *_eq_ ToonBrightnessLevels[1]_sm_    else if ( lightIntensity &gt_sm_ ToonThresholds[2]) color *_eq_ ToonBrightnessLevels[2]_sm_    else if ( lightIntensity &gt_sm_ ToonThresholds[3]) color *_eq_ ToonBrightnessLevels[3]_sm_    else color *_eq_ ToonBrightnessLevels[4]_sm_    return color_sm_}technique Toon {    pass p0 {        VertexShader _eq_ compile vs_2_0 std_VS()_sm_        PixelShader _eq_ compile ps_2_0 std_PS()_sm_    }}_lt_/pre_gt__lt_p_gt_Thanks for help_lt_/p_gt__lt_/div_gt__lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"hw3web","Date":"2014-03-12T21:38:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_here _co_ here _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_))_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_how to add to work with babylonJS_co_ ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-03-13T02:11:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hum_co_ we discussed offline of this kind of ask. The forum is for helping and *NOT* delegating your work to others._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_BTW_co_ I did what you ask_dd__lt_/p_gt__lt_p_gt__lt_img src_eq__qt_http_dd_//www.babylonjs.com/screenshots/cellshading.jpg_qt_ alt_eq__qt_cellshading.jpg_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You need to use the latest version of babylon.js on the repo._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Then_dd__lt_/p_gt__lt_p_gt_cellShading.vertex.fx_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_#ifdef GL_ESprecision mediump float_sm_#endif// Attributesattribute vec3 position_sm_attribute vec3 normal_sm_attribute vec2 uv_sm_// Uniformsuniform mat4 world_sm_uniform mat4 worldViewProjection_sm_// Normalvarying vec3 vPositionW_sm_varying vec3 vNormalW_sm_varying vec2 vUV_sm_void main(void) {\tvec4 outPosition _eq_ worldViewProjection * vec4(position_co_ 1.0)_sm_\tgl_Position _eq_ outPosition_sm_\t\tvPositionW _eq_ vec3(world * vec4(position_co_ 1.0))_sm_\tvNormalW _eq_ normalize(vec3(world * vec4(normal_co_ 0.0)))_sm_\tvUV _eq_ uv_sm_}_lt_/pre_gt__lt_p_gt_cellShading.fragment.fx_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_#ifdef GL_ESprecision mediump float_sm_#endif// Lightsvarying vec3 vPositionW_sm_varying vec3 vNormalW_sm_varying vec2 vUV_sm_// Refsuniform float ToonThresholds[4]_sm_uniform float ToonBrightnessLevels[5]_sm_uniform vec3 vLightPosition_sm_uniform vec3 vLightColor_sm_uniform sampler2D textureSampler_sm_void main(void) {\t// Light\tvec3 lightVectorW _eq_ normalize(vLightPosition - vPositionW)_sm_\t// diffuse\tfloat ndl _eq_ max(0._co_ dot(vNormalW_co_ lightVectorW))_sm_\tvec3 color _eq_ texture2D(textureSampler_co_ vUV).rgb * vLightColor_sm_\tif (ndl &gt_sm_ ToonThresholds[0])\t{\t\tcolor *_eq_ ToonBrightnessLevels[0]_sm_\t} \telse if (ndl &gt_sm_ ToonThresholds[1])\t{\t\tcolor *_eq_ ToonBrightnessLevels[1]_sm_\t}\telse if (ndl &gt_sm_ ToonThresholds[2])\t{\t\tcolor *_eq_ ToonBrightnessLevels[2]_sm_\t}\telse if (ndl &gt_sm_ ToonThresholds[3])\t{\t\tcolor *_eq_ ToonBrightnessLevels[3]_sm_\t}\telse\t{\t\tcolor *_eq_ ToonBrightnessLevels[4]_sm_\t}\t\tgl_FragColor _eq_ vec4(color_co_ 1.)_sm_}_lt_/pre_gt__lt_p_gt_And finally the material and a small code to test_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var CreateCellShadingScene _eq_ function (engine) {        var CellShadingMaterial _eq_ function (name_co_ scene_co_ light) {        this.name _eq_ name_sm_        this.id _eq_ name_sm_        this.light _eq_ light_sm_        this._scene _eq_ scene_sm_        scene.materials.push(this)_sm_        this.texture _eq_ null_sm_        this.toonThresholds _eq_ [0.95_co_ 0.5_co_ 0.2_co_ 0.03]_sm_        this.toonBrightnessLevels _eq_ [1.0_co_ 0.8_co_ 0.6_co_ 0.35_co_ 0.01]_sm_    }_sm_    CellShadingMaterial.prototype _eq_ Object.create(BABYLON.Material.prototype)_sm_    // Properties       CellShadingMaterial.prototype.needAlphaBlending _eq_ function () {        return false_sm_    }_sm_    CellShadingMaterial.prototype.needAlphaTesting _eq_ function () {        return false_sm_    }_sm_    // Methods       CellShadingMaterial.prototype.isReady _eq_ function (mesh) {        var engine _eq_ this._scene.getEngine()_sm_        if (this.texture &amp_sm_&amp_sm_ !this.texture.isReady) {            return false_sm_        }        this._effect _eq_ engine.createEffect(_qt_./Scenes/Customs/shaders/cellShading_qt__co_            [_qt_position_qt__co_ _qt_normal_qt__co_ _qt_uv_qt_]_co_            [_qt_worldViewProjection_qt__co_ _qt_world_qt__co_ _qt_view_qt__co_ _qt_vLightPosition_qt__co_ _qt_vLightColor_qt__co_ _qt_ToonBrightnessLevels_qt__co_ _qt_ToonThresholds_qt_]_co_            [_qt_textureSampler_qt_]_co_            _qt__qt_)_sm_        if (!this._effect.isReady()) {            return false_sm_        }        return true_sm_    }_sm_    CellShadingMaterial.prototype.bind _eq_ function (world_co_ mesh) {        this._effect.setMatrix(_qt_world_qt__co_ world)_sm_        this._effect.setMatrix(_qt_worldViewProjection_qt__co_ world.multiply(this._scene.getTransformMatrix()))_sm_        this._effect.setVector3(_qt_vLightPosition_qt__co_ this.light.position)_sm_        this._effect.setColor3(_qt_vLightColor_qt__co_ this.light.diffuse)_sm_        this._effect.setArray(_qt_ToonThresholds_qt__co_ this.toonThresholds)_sm_        this._effect.setArray(_qt_ToonBrightnessLevels_qt__co_ this.toonBrightnessLevels)_sm_        // Textures                this._effect.setTexture(_qt_textureSampler_qt__co_ this.texture)_sm_    }_sm_    CellShadingMaterial.prototype.dispose _eq_ function () {        if (this.texture) {            this.texture.dispose()_sm_        }        this.baseDispose()_sm_    }_sm_    var scene _eq_ new BABYLON.Scene(engine)_sm_    var camera _eq_ new BABYLON.ArcRotateCamera(_qt_Camera_qt__co_ 0_co_ Math.PI / 4_co_ 40_co_ BABYLON.Vector3.Zero()_co_ scene)_sm_    var light _eq_ new BABYLON.PointLight(_qt_Omni_qt__co_ new BABYLON.Vector3(20_co_ 100_co_ 2)_co_ scene)_sm_    var sphere _eq_ BABYLON.Mesh.CreateSphere(_qt_Sphere0_qt__co_ 32_co_ 3_co_ scene)_sm_    var cylinder _eq_ BABYLON.Mesh.CreateCylinder(_qt_Sphere1_qt__co_ 5_co_ 3_co_ 2_co_ 32_co_ scene)_sm_    var torus _eq_ BABYLON.Mesh.CreateTorus(_qt_Sphere2_qt__co_ 3_co_ 1_co_ 32_co_ scene)_sm_    var cellShadingMaterial _eq_ new CellShadingMaterial(_qt_mat0_qt__co_ scene_co_ light)_sm_    cellShadingMaterial.texture _eq_ new BABYLON.Texture(_qt_Scenes/Customs/Ground.jpg_qt__co_ scene)_sm_        sphere.material _eq_ cellShadingMaterial_sm_    sphere.position _eq_ new BABYLON.Vector3(-10_co_ 0_co_ 0)_sm_    cylinder.material _eq_ cellShadingMaterial_sm_    torus.material _eq_ cellShadingMaterial_sm_    torus.position _eq_ new BABYLON.Vector3(10_co_ 0_co_ 0)_sm_        // Animations    var alpha _eq_ 0_sm_    scene.registerBeforeRender(function () {        sphere.rotation.y _eq_ alpha_sm_        sphere.rotation.x _eq_ alpha_sm_        cylinder.rotation.y _eq_ alpha_sm_        cylinder.rotation.x _eq_ alpha_sm_        torus.rotation.y _eq_ alpha_sm_        torus.rotation.x _eq_ alpha_sm_        alpha +_eq_ 0.05_sm_    })_sm_        return scene_sm_}_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-03-13T11:05:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_ Wow_co_ thanks for your help._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-03-13T17:13:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Demo is online_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs.com/index.html?CUSTOMSHADER_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/index.html?CUSTOMSHADER_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]