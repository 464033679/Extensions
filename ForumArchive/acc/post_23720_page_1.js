[{"Owner":"ozRocker","Date":"2016-07-09T15:59:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI have a mesh that is sometimes grouped with another mesh via parenting.  That way you can move both meshes together.  However I want to be able to separate those meshes and have the meshes stay the exact same size_co_ position and direction as they were when they had a parent.  I_t_ve demonstrated the problem here _lt_a href_eq__qt_http_dd_//babylonjs-playground.com/#ZXCRV_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjs-playground.com/#ZXCRV_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAt the last step_co_ when I remove the parent_co_ the mesh snaps back to its original spot instead of stays where its at.  Is there a way in Babylon.js to have it retain its transformations?  If not in this framework_co_ is there a mathematical way of doing it?  I tried using a rotation matrix to and I got it working when there_t_s a change in one axis only_co_ but can_t_t get it working if there_t_s a change in multiple axes.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-07-09T16:49:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tfor position_co_ get the _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.abstractMesh.ts#L349_qt_ rel_eq__qt_external nofollow_qt__gt_mesh.absolutePosition_lt_/a_gt_ prior to separation. Set position to this value afterwards.  Probably similar for rotation_co_ but no method.  You could try to deduce rotation in world space reversing the process _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.abstractMesh.ts#L369_qt_ rel_eq__qt_external nofollow_qt__gt_here_lt_/a_gt_.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2016-07-10T06:40:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tchild.rotation.addInPlace(parent.rotation) maybe ? Same for scaling... Didn_t_t try it though.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2016-07-10T09:25:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\thmm..I need to get this working on a server.  Since Babylon.js doesn_t_t work in headless mode I need to find a way to implement this myself.  Is there a way I can calculate absolute position of child from parent position_co_ child position and a rotation vector without using Babylon.js functions?  I_t_ve tried using functions from here _lt_a href_eq__qt_http_dd_//gamedev.stackexchange.com/questions/25567/transform-coordinates-from-3d-to-2d-without-matrix-or-built-in-methods_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//gamedev.stackexchange.com/questions/25567/transform-coordinates-from-3d-to-2d-without-matrix-or-built-in-methods_lt_/a_gt_ but I just can_t_t get it to work if the parent has been rotated on all 3 axis.  It_t_ll work on 2 axis_co_ but not all 3.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2016-07-11T04:59:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_135546_qt_ data-ipsquote-contentid_eq__qt_23720_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1468132804_qt_ data-ipsquote-userid_eq__qt_5218_qt_ data-ipsquote-username_eq__qt_Temechon_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t22 hours ago_co_ Temechon said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tchild.rotation.addInPlace(parent.rotation) maybe ? Same for scaling... Didn_t_t try it though.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI_t_m trying this one out.  My rotation vector is zero because I_t_m using quaternions but I couldn_t_t figure out how to add rotation quaternions properly so I converted them to euler angles then added those.  I think there_t_s some big rounding errors with that though _t_cos it doesn_t_t match it completely.  You can see it here _lt_a href_eq__qt_http_dd_//babylonjs-playground.com/#ZXCRV%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjs-playground.com/#ZXCRV#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2016-07-11T05:56:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tah_co_ I figured out how to add rotation quaternions.  You just need to multiply them.  Seems to be working here _lt_a href_eq__qt_http_dd_//babylonjs-playground.com/#ZXCRV%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjs-playground.com/#ZXCRV#2_lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2016-07-11T08:47:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYes you need to multiply them _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2016-07-24T11:17:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_135558_qt_ data-ipsquote-contentid_eq__qt_23720_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1468142712_qt_ data-ipsquote-userid_eq__qt_12544_qt_ data-ipsquote-username_eq__qt_ozRocker_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 10/07/2016 at 7_dd_25 PM_co_ ozRocker said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\thmm..I need to get this working on a server.  Since Babylon.js doesn_t_t work in headless mode I need to find a way to implement this myself.  Is there a way I can calculate absolute position of child from parent position_co_ child position and a rotation vector without using Babylon.js functions?  I_t_ve tried using functions from here _lt_a href_eq__qt_http_dd_//gamedev.stackexchange.com/questions/25567/transform-coordinates-from-3d-to-2d-without-matrix-or-built-in-methods_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//gamedev.stackexchange.com/questions/25567/transform-coordinates-from-3d-to-2d-without-matrix-or-built-in-methods_lt_/a_gt_ but I just can_t_t get it to work if the parent has been rotated on all 3 axis.  It_t_ll work on 2 axis_co_ but not all 3.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tFor anyone that cares_co_ I figured out why I was getting the rotation wrong.  I had the multiplication order wrong.  I built a rotation matrix using the order X_co_ Y_co_ Z.  It should be X_co_ Z_co_ Y.  To do this I had to multiply Y rotation matrix with Z rotation matrix then with X rotation matrix.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2016-07-25T16:29:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tok_co_ I have a complete working solution now.  This is in C# (because that_t_s what my server is running) but its easy to port to any language.  I_t_m using quaternions for rotation now so the previous post doesn_t_t apply.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe following code will unparent a mesh and let that mesh retain its position_co_ rotation (quaternion) and scale_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_Quaternion rotatedPoint _eq_ objParent.rotation.multiply(objChild.position)_sm_\nobjChild.position.x _eq_ rotatedPoint.x * objParent.scale.x + objParent.position.x_sm_\nobjChild.position.y _eq_ rotatedPoint.y * objParent.scale.y + objParent.position.y_sm_\nobjChild.position.z _eq_ rotatedPoint.z * objParent.scale.z + objParent.position.z_sm_\n\nobjChild.scale.x *_eq_ objParent.scale.x_sm_\nobjChild.scale.y *_eq_ objParent.scale.y_sm_\nobjChild.scale.z *_eq_ objParent.scale.z_sm_\nobjChild.rotation _eq_ objParent.rotation.add(objChild.rotation)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tMy quaternion rotation code is here_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_\tpublic Quaternion multiply(Vector3 point)\n\t{\n\t\tQuaternion[] arrQ _eq_ new Quaternion[2]_sm_\n\t\tarrQ[0] _eq_ new Quaternion(point.x_co_ point.y_co_ point.z_co_ 0)_sm_\n\t\tarrQ[1] _eq_ new Quaternion(-this.x_co_ -this.y_co_ -this.z_co_ this.w)_sm_\n\n\t\tvar qSoFar _eq_ new Quaternion(this.x_co_ this.y_co_ this.z_co_ this.w)_sm_\n\t\tfor (var i _eq_ 0_sm_ i &lt_sm_ arrQ.Length_sm_ i++)\n\t\t{\n\t\t\tvar temp _eq_ arrQ[i]_sm_\n\t\t\tvar next _eq_ new Quaternion(temp.x_co_ temp.y_co_ temp.z_co_ temp.w)_sm_\n\n\t\t\tdouble w _eq_ qSoFar.w * next.w - qSoFar.x * next.x - qSoFar.y * next.y - qSoFar.z * next.z_sm_\n\t\t\tdouble x _eq_ qSoFar.x * next.w + qSoFar.w * next.x + qSoFar.y * next.z - qSoFar.z * next.y_sm_\n\t\t\tdouble y _eq_ qSoFar.y * next.w + qSoFar.w * next.y + qSoFar.z * next.x - qSoFar.x * next.z_sm_\n\t\t\tdouble z _eq_ qSoFar.z * next.w + qSoFar.w * next.z + qSoFar.x * next.y - qSoFar.y * next.x_sm_\n\n\t\t\tqSoFar.x _eq_ x_sm_\n\t\t\tqSoFar.y _eq_ y_sm_\n\t\t\tqSoFar.z _eq_ z_sm_\n\t\t\tqSoFar.w _eq_ w_sm_\n\t\t}\n\t\treturn qSoFar_sm_\n\t}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]