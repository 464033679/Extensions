[{"Owner":"018","Date":"2016-12-17T05:46:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI have a scene generated from the Blender export.  It has a variety of different meshes_co_ but I really only want them loaded so that I can access them later as a level is generated (and then I would make InstancedMeshes from them).  I can load them and set them out far out of view_co_ but is there a better way? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"aWeirdo","Date":"2016-12-17T15:16:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tBest practice would be to either load everything at start_co_ meshes you don_t_t need from start can be set to mesh.isEnabled( false )_sm__lt_br /_gt__lt_br /_gt_\n\tOr if you have different _qt_levels_qt_ you can load meshes between levels_co_ adding a loading scene when changing from level 1 to level 2_co_ etc_co_ and loading them there. _lt_br /_gt__lt_br /_gt_\n\tWhat_t_s best for you really depends on the number and quality(size) of your meshes _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__co__lt_br /_gt_\n\tSo lets say if you have 50+ MB total_co_ the second option would probably be best (if possible)_co__lt_br /_gt_\n\tsince not all players will reach every level and actually use every mesh_co_ loading them at start is just wasting bandwidth and adding unnecessary loading time which may make some players leave before the game even starts _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-12-17T21:27:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tUsing Blender / .BABYLON exporter_co_ there is a _t_Load Disabled_t_ checkbox in the exporter properties for a mesh.  If going that route_co_ this would disable it by default.  Less code to put in the onready callback. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI hesitate to mention it due to lack of _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Extensions/tree/master/QueuedInterpolation/Blender_qt_ rel_eq__qt_external nofollow_qt__gt_documentation_lt_/a_gt_  (this is way out of date)_co_ but the Tower of Babel source code exporter does have an alternative.  You add a script tag for the exported .JS file that has the inline geometry in your html file.  This gets downloaded at the beginning_co_ and also parsed_co_ but nothing is created.  When you wish a mesh to appear_co_ just instance it_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var myMesh _eq_ new module.Meshclass(_t_name_t__co_ scene_co_ materialsDirectory)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tSeeing as you only have 3 posts_co_ I would not try this_co_ but it does have advantages.  You can also pick from 5 ways to have your mesh displayed from Blender_dd_\n_lt_/p_gt_\n\n_lt_ul_gt__lt_li_gt_\n\t\tExpand\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tGather\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\t_lt_a href_eq__qt_https_dd_//palmer-jc.github.io/scenes/whoopstopia/index.html_qt_ rel_eq__qt_external nofollow_qt__gt_Fire_lt_/a_gt_ shown about midway\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tJust Make Visible\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tCustom (a JavaScript class coded by you)\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-12-17T21:36:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tMake a container object and load all your meshes on runtime and when they load have them assign on the container object like_dd_  presets[mesh1.name] or something g like that and when you need it you just reference the object in the preset object and clone it so var newObject  _eq_ presets[presetname].clone()\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"018","Date":"2016-12-18T10:40:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThanks very much.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]