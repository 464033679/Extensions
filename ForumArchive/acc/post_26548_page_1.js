[{"Owner":"Matriax","Date":"2016-11-22T08:52:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m using Construct2(C2) for my games. A developer is doing a plugin to use Babylon.js that allow us do 3D games.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis was my first test_co_ it_t_s not a big thing but for something we have to start_dd__lt_br /_gt_\n\tHere to play_dd_ _lt_a href_eq__qt_https_dd_//kronbits.itch.io/proto3d_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//kronbits.itch.io/proto3d_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPreview_dd__lt_br /_gt__lt_img alt_eq__qt_p1noxbw.gif_qt_ class_eq__qt_ipsImage_qt_ src_eq__qt_http_dd_//i.imgur.com/p1noxbw.gif_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t-\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe actual plugin is a _qt_Scene Loader_qt_. You do the level on a 3D editor and export the .Babylon file to C2. There you set camera controls and actions using events to do the game.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOne of the problems is how to solve the action for a group of duplicate mesh objects that have different name. Now_co_ for every mesh we have to create an object on C2 layout_co_ set the 3D name on editor and add all the properties or behaviours we want.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe problem is_co_ if the level have 100 coins_co_ each coin have a different mesh name_co_ so we will have to add 100 objects on the layout to set the behaviours or actions_co_ which will be  pain.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe unique thing we made is more a patch than a solution_co_ some kind of array on we set_dd__lt_br /_gt_\n\tName_dd_ Coin_lt_br /_gt_\n\tStart of index_dd_ 0_lt_br /_gt_\n\tEnding Index_dd_ 100_lt_br /_gt_\n\tPadding_dd_ (true)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo for a Coin and Coin001_co_ Coin002_co_ etc... until Coin100 will set the properties or behaviours or whatever but limit other options to other plugins and other stuff in C2. Also only will works for Blender and 3Dmax_co_ the Unity nomenclature breaks this solution.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt__lt_strong_gt_Here are how the Duplicate models looks in the 3D Editors Babylon can be exported_dd__lt_/strong_gt__lt_br /_gt_\n\tBlender_dd_ Coin_co_ Coin.001_co_ Coin.002_co_ etc..._lt_br /_gt_\n\t3Dmax  _dd_ Coin_co_ Coin001_co_ Coin002_co_ etc..._lt_br /_gt_\n\tUnity5 _dd_ Coin_co_ Coin(1)_co_ Coin(2)_co_ etc...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe there is a solution that we not found_co_ or a Babylon function that solve this_co_ but if not i want to make a request if is possible.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Request for Babylon exporters_dd__lt_/strong_gt__lt_br /_gt_\n\t------------------------------------------------------------_lt_br /_gt_\n\tAdd some kind of ID for all the objects_co_ maybe _qt_Babylon_Mesh_ID_qt_ or whatever that are the same for all the mesh with the same properties.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen for_dd_ Coin_co_ Coin.001_co_ Coin.002_co_etc... will have the _qt_Babylon_Mesh_ID_eq_COIN_qt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo in the C2 we only will have to create an unique object that refers to _qt_COIN_qt_ and add an actions like_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOn Player collides with COIN &gt_sm_ Destroy COIN / Add 1 to COIN.Counter_co_ etc...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen the player collides with a mesh with the ID _qt_COIN_qt_ will do the events/actions no matter the mesh name. No arrays_co_ patch or other stuff.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs possible?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-11-23T17:31:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello\n_lt_/p_gt_\n\n_lt_p_gt_\n\tfirst of all I really appreciate that you use Babylon.js for this _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tWe recently added mesh.metadata with support for serialization. So I would suggest to just use mesh.metadata _eq_ _qt_COIN_qt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tDoes it make sense?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-11-23T17:36:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHiya _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/24512-matriax/?do_eq_hovercard_qt_ data-mentionid_eq__qt_24512_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/24512-matriax/_qt_ rel_eq__qt__qt__gt_@Matriax_lt_/a_gt__co_ welcome to the forum!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t  Ok_co_ good questions.   We have _lt_em_gt_instances_lt_/em_gt_ in BabylonJS and they would work great for your coins.  Let_t_s go that way_co_ and we_t_ll talk more about other options_co_ later.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen all the _lt_em_gt_copies_lt_/em_gt_ of a _lt_em_gt_source_lt_/em_gt_... have the same material/texture_co_ they are a perfect candidate to use instances.  But yes_co_ HOW do we get game logic on EACH instance_co_ yet not have to code UPON each instance.  Well_co_ I know a way.  Perhaps not the CORRECT way_co_ but it is still a way.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1AUY9H%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1AUY9H#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere we have one sourceMesh and two instances.  Pretend they are your coins.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet_t_s look carefully at lines 2-4.  Here I have overloaded the base class that BJS uses to create instanced mesh.  I add a _qt_talk_qt_ method to that base class.  In your case_co_ you might add a function called _qt_disposeCoinInstance_qt_.  No matter.  With lines 2-4_co_ you are adding a talk function to _lt_u_gt_all_lt_/u_gt_ future-made instances in your project.  It calls (passes) to a function with the same name... on its _lt_em_gt_source_lt_/em_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ now_co_ all your coin instances... can automatically have a talk method on them_co_ yet they still maintain light weight.  They hand-off the work to their _lt_em_gt_source_lt_/em_gt_.  _lt_em_gt_Source_lt_/em_gt_ becomes a _qt_super class_qt_ for its instances. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tA different form of inheritance_co_ yes?  You can call killMe() on any coin.  The coin will hand-over the task to source.[somefunc].  You can already see that _lt_em_gt_source_lt_/em_gt_.talk can determine WHICH instance is calling (an index number).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLater in the demo above_co_ you will see a call to instance1.talk()_co_ and a good report from _lt_em_gt_source_lt_/em_gt_.talk().... is seen at the console.  You can add many _qt_wrapper functions_qt_ onto the coin instances_co_ if you like.  But these wrappers must be put-onto the coins instances_co_ and the actualy functions added to the _lt_em_gt_source _lt_/em_gt_of those instances... _lt_u_gt_in BJS_co_ after import_lt_/u_gt_ (just before game start).  None of that magic can be exported from a modeler_co_ or imported through the .babylon importer. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t1.  Generally_co_ you would create the _lt_em_gt_source_lt_/em_gt_ coin in a modeler if you please_co_ import THAT.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. Then add the coin game logic to _lt_em_gt_source_lt_/em_gt_.  Full-power functions added to _lt_em_gt_source_lt_/em_gt_.  Those added functions are ready to do actions to ANY of the source_t_s instances.  (like my lines 22-25)  Yours might be... source.disposeCoinInstance(whichInstance).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t3. Then do something like my lines 2-4.  You can put that code anywhere_co_ as long as you do it BEFORE you createInstances of coins. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t4.  Then do as many masterCoin.createInstances() as you wish.  Each instance will have a disposeMe() (or talk()) method... onboard_co_ but it isn_t_t very big.  It only hands off the task to source.  So source (the master coin) becomes a game logic repository for ALL coins.  You will need to position and rotate all the instances you create.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe powerful stuff... is on _lt_em_gt_source._lt_/em_gt_  The instances themselves... are kept lightweight.  No _qt_fat_qt_ game logic on them. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou have started to build your own _qt_Instances Management System_qt_... onto _lt_em_gt_source_lt_/em_gt_ coin_lt_em_gt_.  _lt_/em_gt_Cool_co_ huh?  Most of the game-logic (at least for the coin) is done in BJS_co_ and not in modeling software.  I hope that doesn_t_t screw you up.  You probably wanted to create all 100 coins in the modeler_co_ and position them_co_ etc.  But because my idea overloads the BJS instance creation system_co_ the instance-generating and instance positions and rotations... have to be done _qt_late_qt_... in game.init() or similar place.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI did another playground... a little more sane. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1AUY9H%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1AUY9H#4_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAfter 20 seconds_co_ I call instance1.killMe()_co_ and then source.killInstance()... kills the instance.  I didn_t_t add the explodeSomeParticles(whichInstance.position)_sm_ or playTwinkleSound(whichInstance)_sm_.  I will let you add that game logic yourself.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tI see Deltakosh has replied.  Let_t_s go see what he has to say.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  (I peeked)  He is telling you about the storage trunk called .metadata... that you can use to haul data into BJS -with.  I did a console.log of instance1.metatdata.  Null (empty).  It is ready to haul-in outside data for standard mesh OR instances_co_ apparently.  You could put a serialized JSON object in there (a string)... which could be parsed back into an object after arriving in BJS land.  That object could be packed-with cool tools (methods) for coins. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut still_co_ think about the instances and source system I have shown you_co_ and try to use it as much as possible_co_ even if you DO haul-in a game logic object in the coin_t_s .metadata property.  Just avoid creating instances in the modeler and putting game logic objects in EACH instance.metadata.  That would be unnecessarily heavy/bloaty_co_ I think.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI hope I have been of some help.  That_t_s a nice looking game you have_co_ there.  Good luck with it!  Party on_co_ welcome again.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Matriax","Date":"2016-11-23T19:16:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey! thanks for the reply guys!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe will try this solutions to see if fits with our problem _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_ .\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MackeyK24","Date":"2016-11-24T10:22:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCheck this link out_dd_ _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/26601-u3d-babylonjs-a-proof-of-concept/_qt_ rel_eq__qt__qt__gt_U3D - BabylonJS Toolkit - Proof Of Concept_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut basically we go thru the roll a ball demo from unity ... I do the same kind of coin collection thing... But i don_t_t us mesh.metadata (Which i use in toolkit BTW _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBasically i put a _qt_TAG_qt_ on all the pickups (coins in your case) called _qt_Pickup_qt_... then in game code_qt__dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_this.items _eq_ this.scene.getMeshesByTags(_qt_Pickup_qt_)_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThen my update loop calls Update Pickup Collisions_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_private updatePickupCollisions()_dd_ void {\n   if (this.items !_eq_ null) {\n      this.items.forEach((item)_eq_&gt_sm_{\n         if (item !_eq_ null &amp_sm_&amp_sm_ item.intersectsMesh(this.mesh)) {\n             if (item.isEnabled()) {\n                 item.setEnabled(false)_sm_\n                 this.count _eq_ this.count + 1_sm_\n                 this.updateCollectionCount()_sm_\n             }\n          }\n     })_sm_\n   }\n }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tCheck out video for details _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]