[{"Owner":"NegativeIQ","Date":"2015-07-11T07:54:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Im trying to chose between three.js and babylon.js and i was looking at three.js tutorial on how to make earth (planet)_lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//learningthreejs.com/blog/2013/09/16/how-to-make-the-earth-in-webgl/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//learningthreejs.com/blog/2013/09/16/how-to-make-the-earth-in-webgl/_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Its a very nice but i tried to do the same thing with babylon just to check both and got stuck with bump map._lt_/p_gt__lt_p_gt_At the moment i have these_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var Earth _eq_ BABYLON.Mesh.CreateSphere(_qt_sphere_qt__co_ 100_co_ 10_co_ scene)_sm_ var materialEarth _eq_ new BABYLON.StandardMaterial(_qt_texture1_qt__co_ scene)_sm_ materialEarth.diffuseTexture _eq_ new BABYLON.Texture(_qt_./assets/earth/earthmap1k.jpg_qt__co_ scene)_sm_materialEarth.bumptexture _eq_ new BABYLON.Texture(_qt_./assets/earth/earthbump1k.jpg_qt__co_ scene)_sm_ Earth.material _eq_ materialEarth_sm__lt_/pre_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In three.js from tutorial i can see that there is bumpMap and bumpScale._lt_/p_gt__lt_p_gt_bumpMap in babylon is bumptexture but i could not find bump scale._lt_br_gt__lt_br_gt_Also when i create sphere with babylon its gloving and reflecting light. How can i get rid of these effect?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-07-11T12:42:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi NegIQ!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI made a little playground demo...  _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1PGAVW%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#1PGAVW#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFirst problem_co_ in your code above...  _lt_strong_gt__lt_strong_gt_bumptexture _lt_/strong_gt__lt_/strong_gt_is typed wrong.  It needs to be bump_lt_strong_gt__lt_u_gt_T_lt_/u_gt__lt_/strong_gt_exture... a capitalized first T.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tStudy my playground carefully.  Make adjustments and hit RUN_co_ over and over_co_ have fun.  There is no chance of harming/overwriting anything... when working in the BabylonJS Playground.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe glow/reflection you mentioned... is called _t_specular_t_.  You can adjust the specular of the lights (lines 7-8)_co_ and you can adjust the specular_lt_strong_gt_C_lt_/strong_gt_olor and specular_lt_strong_gt_P_lt_/strong_gt_ower of a mesh material (lines 20-21).  Generally_co_ specular amount becomes less... with colors closer to black... and a pure black color will shut it off.  Also_co_ setting a specularPower of about 1000... might also turn-off specular (line 21).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor scaling_co_ please know that all _lt_span_gt_BJS textures_lt_/span_gt_ (and their superClass _lt_span_gt_baseTexture_lt_/span_gt_) have _lt_u_gt_lots of settings_lt_/u_gt_ on them.  Two of them... are uScale and vScale (line 26/27).  Just pretend that the u_co_ v_co_ and w  actually mean x_co_ y_co_ and z_co_ because they actually do.  _lt_img alt_eq__qt__dd_)_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ data-emoticon_eq__qt__qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tSee how to set a texture_t_s level (line 25)_co_ and how to angle_co_ offset_co_ and wrap textures (lines 28-35).  Now you have lots of bumpTexture knobs to play-with.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI/We use the word _t_reflection_t_ often_co_ but it really should be called _t__lt_u_gt_specular_lt_/u_gt__t_... because... we have something called a reflectionTexture_co_ too_co_ and we could get confused.  And there_t_s a specularTexture_co_ too. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_BJS StandardMaterial_lt_/span_gt_ has _t_slots_t_ (properties) for diffuseTexture_co_ ambientTexture_co_ opacityTexture_co_ reflectionTexture_co_ emissiveTexture_co_ specularTexture_co_ bumpTexture_co_ ambientColor_co_ diffuseColor_co_ specularColor (with specularPower)_co_ and emissiveColor.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet_t_s face it.  We got a texture or color for every darned texture/color _qt_slot_qt_ found on a _lt_span_gt_standardMaterial_lt_/span_gt_.  More power than you can deal-with_co_ eh?  _lt_img alt_eq__qt__dd_)_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ data-emoticon_eq__qt__qt_ /_gt_  We love it.  The power of BJS Materials/Textures is second to none.  We also have procedural textures and shaders_co_ too.  We recently got our first Mandelbrot fractal code_co_ too (a bit slow-drawing)_co_ and someone will soon apply fractals to one of our dynamicTextures (a texture drawn with JS code).  \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ our VolumetricLightScattering (godrays) system... uses a texture (mounted to an emitter mesh) as its post-process sim-u-light _t_source_t__co_ and our texture decal system can simulate image compositing.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou name it_co_ it_t_s here_co_ somewhere.  Hope this helps.  Be well.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gryff","Date":"2015-07-11T13:05:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi NegIQ - welcome to the BJS forum._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Wingnut_co_ as usual_co_ has created a nice playground demo for you._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_That said_co_ let me ask a question. Are you using the same images as the tutorial you point to is using? The same bump map texture - which is a grey scale image ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It is my understanding that BJS actually uses _lt_u_gt_normal_lt_/u_gt_ maps for bump map texturing. See image below for an example of what a normal map of the earth might look like._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_From wikipedia_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt_The other method is to specify a _lt_a href_eq__qt_https_dd_//en.wikipedia.org/wiki/Normal_mapping_qt_ title_eq__qt_Normal mapping_qt_ rel_eq__qt_external nofollow_qt__gt_normal map_lt_/a_gt_ which contains the modified normal for each point on the surface directly. Since the normal is specified directly instead of derived from a height map this method usually leads to more predictable results. This makes it easier for artists to work with_co_ _lt_u_gt_making it the most common method of bump mapping today._lt_/u_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Have no idea what the use of a grey scale image as a bump map will have with BJS._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you need to create a normal map for your project you might try using this tool - _lt_a href_eq__qt_http_dd_//cpetry.github.io/NormalMap-Online/_qt_ rel_eq__qt_external nofollow_qt__gt_Normal Map Online _lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Just feed it your diffuse image - it will create normal_co_ specular and ambient occlusion maps._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_cheers_co_ gryff _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_&lt_sm_fileStore.core_Emoticons&gt_sm_/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt__lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_07_2015/post-7026-0-16687000-1436619445.png_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_07_2015/post-7026-0-16687000-1436619445.png_qt_ data-fileid_eq__qt_4617_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_post-7026-0-16687000-1436619445.png_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]