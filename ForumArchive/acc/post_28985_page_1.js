[{"Owner":"KenRubin","Date":"2017-03-10T21:08:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am new to Babylon.js.  Love it so far.  \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am trying to write a simple game.  I want the game character to _qt_float_qt_ over the playing field.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRight now_co_ I_t_m just trying to get a simple box to hover.  I_t_m doing it in a somewhat funny way because I want some wobbling to occur as part of the hover.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am trying to use physics.  So I have gravity enabled in the scene and collisions enabled for the meshes.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFurther_co_ I want to apply impulses to the box to get it to hover.  I wrote some code to figure out which vertex is the _qt_lowest_qt_ of all the verticies of the box.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI then apply an impulse to that vertex.  Because the vertex is extended from the centroid of the box_co_ a torque is generated by the impulse.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am having difficulty keeping the impulses in range.  Typically_co_ without squelching the angular velocity_co_ the box eventually starts rotating out of control.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ I was looking into just manually leveling the rotation using addRotation.  First I get the Euler angles from the rotation quaternion.  Then I reverse a little bit back onto the box each frame.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOddly_co_ this seems to work very well for about 1 minute.  Then suddenly_co_ it fails.  I fails slowly_co_ which is even odder to me.  It seems like I have to reset some internal state or something....\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCan someone point out my missteps?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks.  \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWingnut was kind enough to build a playground example that works (but without the wobble)_dd_ _lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_background-color_dd_rgb(255_co_255_co_255)_sm_float_dd_none_sm__qt__gt__lt_span_gt_ _lt_/span_gt__lt_/span_gt__lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1GWEVG%230_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#1GWEVG#0_lt_/a_gt_ (see his post below).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI also have a running version on my website_co_ at_dd_ _lt_a href_eq__qt_http_dd_//165.225.132.154/graphics/BabylonHover/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//165.225.132.154/graphics/BabylonHover/_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen I fix the issue_co_ that site will be updated.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis snippet shows the original issue.  Notice the difference between the working demo Wingnut wrote and this one which doesn_t_t (specifically_dd_ the impulses are applied at the verticies here_co_ whereas in the working example_co_ the impulses are applied to the centroid)_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t        let dHoverHorizon _eq_ 50_sm__lt_br /_gt_\n\t        let dImpulseForceDivisor _eq_ 10_sm__lt_br /_gt_\n\t        let dRotationAdjustmentFactor _eq_ 20_sm__lt_br /_gt_\n\t        meshBox.registerBeforeRender(() _eq_&gt_sm_ {\n_lt_/p_gt_\n\n_lt_p_gt_\n\t            try {\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                // Get all the verticies of the mesh_co_ given as an array of 72 floats._lt_br /_gt_\n\t                // 3 floats for each vertex * _lt_br /_gt_\n\t                //  4 verticies per face *_lt_br /_gt_\n\t                //  6 faces._lt_br /_gt_\n\t                //_lt_br /_gt_\n\t                // Question #1_dd_ Why all 6 faces_co_ which produces 3 times as many verticies as necessary?_lt_br /_gt_\n\t                // Question #2_dd_ Is there a way to combine these to remove redundant geometry?_lt_br /_gt_\n\t                let arrayMeshVertexFloats _eq_ meshBox.getVertexBuffer(BABYLON.VertexBuffer.PositionKind)._buffer._data_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                // Extract the 4 verticies for the _lt_br /_gt_\n\t                // face in which we are interested._lt_br /_gt_\n\t                // This happens to be the 6th face._lt_br /_gt_\n\t                let arrayMeshVerticies _eq_ []_sm__lt_br /_gt_\n\t                for (let i _eq_ 3 * 4 * 5_sm_ i &lt_sm_ arrayMeshVertexFloats.length_sm_ i +_eq_ 3) {\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    arrayMeshVerticies.push(BABYLON.Vector3.FromArray(arrayMeshVertexFloats_co_ _lt_br /_gt_\n\t                        i))_sm__lt_br /_gt_\n\t                }\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                // Convert these 4 verticies to world coordinates._lt_br /_gt_\n\t                let arrayWorldVerticies _eq_ arrayMeshVerticies.map((vertex) _eq_&gt_sm_ {\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    let vertexWorld _eq_ BABYLON.Vector3.TransformCoordinates(vertex_co_ _lt_br /_gt_\n\t                        meshBox.getWorldMatrix())_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    // Attach original mesh-vertext to the world-vertex._lt_br /_gt_\n\t                    vertexWorld.localVertex _eq_ vertex_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    // Return the new vertex._lt_br /_gt_\n\t                    return vertexWorld_sm__lt_br /_gt_\n\t                })_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                // Just for fun_co_ only allow impulse on the lowest of all verticies._lt_br /_gt_\n\t                let v3Lowest _eq_ null_sm__lt_br /_gt_\n\t                arrayWorldVerticies.forEach((v3) _eq_&gt_sm_ {\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    if (!v3Lowest ||_lt_br /_gt_\n\t                        v3Lowest.y &gt_sm_ v3.y) {\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                        v3Lowest _eq_ v3_sm__lt_br /_gt_\n\t                    }_lt_br /_gt_\n\t                })_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                // Drop out now_co_ if lowest vertex is above hover-horizon._lt_br /_gt_\n\t                if (v3Lowest.y &gt_sm_ dHoverHorizon) {\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    return_sm__lt_br /_gt_\n\t                }\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                // Generate an impulse proportional to a square- _lt_br /_gt_\n\t                // root of the drop down from the hover-horizon._lt_br /_gt_\n\t                let dImpulseForce _eq_ Math.sqrt(dHoverHorizon - v3Lowest.y) / dImpulseForceDivisor_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                // Get the linear velocity._lt_br /_gt_\n\t                let v3LinearVelocity _eq_ meshBox.physicsImpostor.getLinearVelocity()_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                // Only care about the y-axis._lt_br /_gt_\n\t                let dLinearVelocityAlongYAxis _eq_ v3LinearVelocity.y_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                // If the velocity is negative_co_ then increase the impulse._lt_br /_gt_\n\t                // Eventually_co_ this will need to take mass into consideration...._lt_br /_gt_\n\t                if (dLinearVelocityAlongYAxis &lt_sm_ 0) {\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    dImpulseForce *_eq_ (1 - dLinearVelocityAlongYAxis)_sm__lt_br /_gt_\n\t                }\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                // This doesn_t_t seem to work in a madening way_dd__lt_br /_gt_\n\t                // Actually_co_ it works for about 1 minute_co_ then  _lt_br /_gt_\n\t                // just slowly and seemingly-deliberately fails._lt_br /_gt_\n\t                let v3Rotation _eq_ meshBox.rotationQuaternion.toEulerAngles(_qt_XYZ_qt_)_sm__lt_br /_gt_\n\t                meshBox.addRotation(-v3Rotation.x / dRotationAdjustmentFactor_co_ _lt_br /_gt_\n\t                    -v3Rotation.y / dRotationAdjustmentFactor_co_ _lt_br /_gt_\n\t                    -v3Rotation.z / dRotationAdjustmentFactor)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                // Apply an _qt_up_qt_ impulse to the physics _lt_br /_gt_\n\t                // imposter at the local location of the_lt_br /_gt_\n\t                // lowest vertex found during this pass._lt_br /_gt_\n\t                meshBox.physicsImpostor.applyImpulse(new BABYLON.Vector3(0_co_ dImpulseForce_co_ 0)_co__lt_br /_gt_\n\t                    v3Lowest.localVertex)_sm__lt_br /_gt_\n\t            } catch (e) {\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                console.log(_qt_Error in meshBox.registerBeforeRender_dd_ _qt_ + e.message)_sm__lt_br /_gt_\n\t            }_lt_br /_gt_\n\t        })_sm__lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-03-11T02:30:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi KenRubin_co_ welcome.  Around here_co_ we really like using the Babylon Playground_co_ and being the nice guy that I am_co_ I pasted your code into a playground_co_ did a little adjusting_co_ and hit save (and RUN a few times_co_ too).   _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1GWEVG%230_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#1GWEVG#0_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI turned off all your .checkCollisions.  No big deal_co_ but those are for the BJS built-in collision/intersects system_co_ not for the 3rd party physics engines such as CannonJS and OimoJS.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat_t_s quite a bit of code in your render loop (in registerBeforeRender).  It_t_s WAY over my head_co_ technically.  But look at line 156 and notice diff from line 155.  Contact point for impulse/thrust... is dead center of mesh (.getAbsolutePosition).  It gives you a nice steady hover_co_ but_co_ it sure is boring_co_ huh?  _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_  No _qt_wobble_qt__co_ eh?  *nod*  I hear ya.  heh\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYour renderLoop code sure looks fancy (and may be a bit overkill).  Tilt testing and distributed impulsing.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tWhelp_co_ we have a playground now.  Smarter people than I... can play_co_ now.  Welcome again.  Fun ahead.  Now that we can see your code in playground_co_ feel free to clean-up previous post_co_ if you wish.  _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"KenRubin","Date":"2017-03-11T04:38:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Wingnut_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for the help_co_ kind words and welcome.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDid you see the odd behavior?  I_t_m just not sure what_t_s going on.  I noticed something additional since posting the original_dd_ the unwanted rotation goes nuts for another minute_co_ then it actually settles down and the whole simulation runs just fine.  \n_lt_/p_gt_\n\n_lt_p_gt_\n\tDo you know if there are some internal accumulators which can be nulled or reset?  This really looks like some sort of transient state issue in cannon.  I_t_m just not sure why the adjustment code works_co_ fails to work and then works again.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI suppose if I follow your lead_co_ I could continue to apply the impulse to the centroid_co_ and manually apply a non-physics-based rotation to the mesh just for the effect.  \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHowever_co_ first I want to look into that Y-axis rotation you mentioned.  In addition to the _qt__lt_span_gt_physics engine_t_s rotationDamping feature_qt__co_ it should also produce gyroscopic torque_co_ which should help stabilize the mesh.  _lt_/span_gt_On the other hand_co_ I tried several different techniques to dampen the errant rotation and it always failed in the same_co_ odd way....\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Have a great evening_co__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Ken_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2017-03-11T05:35:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey_co_ really interesting problem!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI haven_t_t thought deeply on it_co_ but here_t_s my first blush advice_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBefore anything else_dd_ does the wobble need to be at the physics level? If the wobble is basically to make the ship look the way you want it to_co_ but it doesn_t_t affect gameplay_co_ then it would probably be better to just wobble the mesh without doing anything in the physics.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf that doesn_t_t apply_co_ then I think you_t_re taking the right approach - for wobbling you usually want some kind of occasional perturbation_co_ and some constant spring-like force countering the perturbation. It_t_s not clear to me whether your counter force is working right though. For the simplest case you_t_d want to be applying a constant torque that_t_s equal to the current rotation times some negative constant. I doubt this can be made to work with Euler angles though_co_ it would probably need to be done with quaternions.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWith that said_co_ it usually helps to keep in mind what kind of physical thing you_t_re modeling - i.e. what_t_s perturbing the ship_co_ and what_t_s making it wobble? One answer could be_co_ it has a gyro that keeps it level but it occasionally gets struck by little asteroids or whatever. If that_t_s the idea_co_ then I think what you_t_re doing makes sense_co_ but make sure your counter-force is doing what it_t_s meant to_co_ and you could try making the perturbations occasional_co_ rather than constant.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOr a completely different approach could be_co_ suppose the ship is a square box with rockets at all four corners_co_ and each rocket independently applies an upwards force (torque) on the ship_co_ and the ship wobbles because the engines do an imperfect job of deciding how much force to imply. For example if they decide how much force to apply based on whether their corner is below the ship_t_s center_co_ then there_t_d be a time lag in their response_co_ which would create a wobble. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tEither way_co_ for problems like this I think it usually helps to shy away from thinking _qt_well I_t_ll try applying a force here and an impulse there and see what happens_qt__co_ and instead focus on what kind of physical system you want to model_co_ and whether your engine is really modeling that system or not.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-03-11T11:28:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThx Fenomas.  Good thinks.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHey Ken... Yeah_co_ I saw the out-of-control spinning_co_ and yes_co_ it IS really interesting that it self-corrects after some time.  This is likely due to a _qt_carousel  effect_qt_... what goes around_co_ comes around.  heh.  (I should give-up comedy attempts... really.)  But yeah_co_ the lowest vert position _qt_cycles-around_qt__co_ first being a point of force that contributes to tilt-correcting_co_ and then it cycles-around to be tilt-causing_co_ and then returns to tilt-correcting again.  I think it has to do with slow rotation around all axes.  This slow rotation causes the impulsing forces (accumulating in-code?)_co_ or counter-leverage forces stored in the cube_t_s momentum (not code_co_ inertia)... to accumulate (and then disseminate).  Wow_co_ huh?  Just speculation.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway_co_ as Wingnut returns from fantasy land... _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/12925-fenomas/?do_eq_hovercard_qt_ data-mentionid_eq__qt_12925_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/12925-fenomas/_qt_ rel_eq__qt__qt__gt_@fenomas_lt_/a_gt_ recently reminded us of another possibility_co_ too.  Using an invisible mesh as an anchor point (a stead/steadfast/steady-fastener).  I call them steads_co_ whether invisible or not.  You could _qt_hang_qt_ your meshBox from invisible _qt_chains_qt_ of physics joints.  Fenomas said that impostors maintain a better natural _qt_feel_qt_ when they are not directly rotated or positioned_co_ but instead done with joints/links connected to invisible steads.  Then position/rotate the steads.  The chains/joints will transfer those energies to the meshBox... but _lt_u_gt_without_lt_/u_gt_ restricting it_t_s physics motions like a _qt_hard move_qt_ would.  Physics joints have springy-ness.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tA four-corner joints/springs method... is similar-to the four thruster-rockets idea_co_ except it_t_s using pulls instead of pushes.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  BUT_co_ jointed things tend not to fly away or go out of control.  i.e. Keep the chain connected to the dog_co_ and there_t_s less chance that his experimental rocket-pack will fly him to a different town.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t Although broken right now_co_ _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#14VFYX%2318_qt_ rel_eq__qt_external nofollow_qt__gt_this PG demo_lt_/a_gt_ has a green _qt_stead_qt_ and some invisible chains (joints) used to _qt_hang_qt_ the buttons.  When working_co_ button clicks make those buttons wobble/swing._lt_span_gt_ _lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"KenRubin","Date":"2017-03-11T11:57:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_166737_qt_ data-ipsquote-contentid_eq__qt_28985_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1489210524_qt_ data-ipsquote-userid_eq__qt_12925_qt_ data-ipsquote-username_eq__qt_fenomas_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t6 hours ago_co_ fenomas said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tBefore anything else_dd_ does the wobble need to be at the physics level? If the wobble is basically to make the ship look the way you want it to_co_ but it doesn_t_t affect gameplay_co_ then it would probably be better to just wobble the mesh without doing anything in the physics.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tIf that doesn_t_t apply_co_ then I think you_t_re taking the right approach - for wobbling you usually want some kind of occasional perturbation_co_ and some constant spring-like force countering the perturbation. It_t_s not clear to me whether your counter force is working right though. For the simplest case you_t_d want to be applying a constant torque that_t_s equal to the current rotation times some negative constant. I doubt this can be made to work with Euler angles though_co_ it would probably need to be done with quaternions.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tfenomas_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_d like to use physics--if for no reason other than the exercise itself.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe solution presented with the dampening Euler angles isn_t_t really physics based though.  It was just my poor attempt at correcting the problem with the impulses.  It made some sort of sense to me that a rounding imbalance in the integration facility of the physics engine could escalate out of control.  What doesn_t_t make sense to me is that the dampening would seem to work_co_ then slowly and deliberately stop working (assigning agency to Cannon!) and then start to work again after going haywire for a minute.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI don_t_t know enough about quaternions to use them directly--which is why I tried to convert into _qt_intelligible_qt_ coordinates.  Do you have a reference for quaternions that could help me understand them functionally?  I like the idea of using them directly--even if a final solution would be purely physics-based.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI appreciate your time_co_ take care_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tKen\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"KenRubin","Date":"2017-03-11T11:58:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_166758_qt_ data-ipsquote-contentid_eq__qt_28985_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1489231694_qt_ data-ipsquote-userid_eq__qt_5733_qt_ data-ipsquote-username_eq__qt_Wingnut_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t29 minutes ago_co_ Wingnut said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThx Fenomas.  Good thinks.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tHey Ken... Yeah_co_ I saw the out-of-control spinning_co_ and yes_co_ it IS really interesting that it self-corrects after some time.  This is likely due to a _qt_carousel  effect_qt_... what goes around_co_ comes around.  heh.  (I should give-up comedy attempt... really.)  But yeah_co_ the lowest vert position _qt_cycles-around_qt__co_ first being a point of force that contributes to tilt-correcting_co_ and then it cycles-around to be tilt-causing_co_ and then returns to tilt-correcting again.  I think it has to do with slow rotation around all axes.  This slow rotation causes the impulsing forces (accumulating in-code?)_co_ or counter-leverage forces stored in the cube_t_s momentum (not code_co_ inertia)... to accumulate (and then disseminate).  Wow_co_ huh?  Just speculation.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tAnyway_co_ as Wingnut returns from fantasy land... _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/12925-fenomas/?do_eq_hovercard_qt_ data-mentionid_eq__qt_12925_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/12925-fenomas/_qt_ rel_eq__qt__qt__gt_@fenomas_lt_/a_gt_ recently reminded us of another possibility_co_ too.  Using an invisible mesh as an anchor point (a stead/steadfast/steady-fastener).  I call them steads_co_ whether invisible or not.  You could _qt_hang_qt_ your meshBox from invisible _qt_chains_qt_ of physics joints.  Fenomas said that impostors maintain a better natural _qt_feel_qt_ when they are not directly rotated or positioned_co_ but instead done with joints/links connected to invisible steads.  Then position/rotate the steads.  The chains/joints will transfer those energies to the meshBox... but _lt_u_gt_without_lt_/u_gt_ restricting it_t_s physics motions like a _qt_hard move_qt_ would.  Physics joints have springy-ness.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tA four-corner joints/springs method... is similar-to the four thruster-rockets idea_co_ except it_t_s using pulls instead of pushes.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  BUT_co_ jointed things tend not to fly away or go out of control.  i.e. Keep the chain connected to the dog_co_ and there_t_s less chance that his experimental rocket-pack will fly him to a different town.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tWingnut_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAwesome idea.  A keel.  I love it!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"KenRubin","Date":"2017-03-11T13:21:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi All_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve created another playground example_dd_ _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1GWEVG%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#1GWEVG#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis time_co_ I_t_m hard-coding the rotation quaternion to _qt_up_qt__co_ by constructing a quaternion from a rotation axis pointing along the Y-axis with 0 rotation_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                meshBox.rotationQuaternion _eq_ BABYLON.Quaternion.RotationAxis(new BABYLON.Vector3(0_co_ 1_co_ 0)_co_ _lt_br /_gt_\n\t                    0)_sm__lt_br /_gt_\n\tThis works in the same way as with Euler angles.  That is_co_ it works for a minute then fails to work.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have noticed a slow drift along the X-axis in the negative direction.  Once the magnitude of the drift reaches 1/2 the width of the mesh (along the X-axis) the issue starts.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDoes this make any sense?  After all_co_ I am setting the rotation after applying the impulse_co_ thus effectively cancelling the effect for which I_t_m aiming.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs the imposter becoming disjoint with the mesh somehow?  Like the imposter is drifting relative to the mesh?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn any case_co_ the oddest aspect is that no matter what I try_co_ the simulation always fails in the same way.  Even if I hard-code the orientation!  What is going on?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tKen\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-03-11T13:28:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tbeware when using addRotation() as it accumulates the rotations... if this is really what you need _dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/how_rotations_and_translations_work#more-advanced-rotation_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/overviews/how_rotations_and_translations_work#more-advanced-rotation_lt_/a_gt_\n_lt_/p_gt_\n_lt_iframe data-embedcontent_eq__qt__qt_ frameborder_eq__qt_0_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/topic/28268-new-feature-addrotation/?do_eq_embed_qt__gt__lt_/iframe_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"KenRubin","Date":"2017-03-11T14:56:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_166773_qt_ data-ipsquote-contentid_eq__qt_28985_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1489238918_qt_ data-ipsquote-userid_eq__qt_5453_qt_ data-ipsquote-username_eq__qt_jerome_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ jerome said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tbeware when using addRotation() as it accumulates the rotations... if this is really\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThanks for replying_co_Jerome\n_lt_/p_gt_\n\n_lt_p_gt_\n\tplease notice that my latest demo just sets the rotation quaternion directly.  In fact it is hard-coded to _qt_up_qt_.  Still doesn_t_t work.  \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for your time_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tken \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"aWeirdo","Date":"2017-03-11T16:19:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/26044-kenrubin/?do_eq_hovercard_qt_ data-mentionid_eq__qt_26044_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/26044-kenrubin/_qt_ rel_eq__qt__qt__gt_@KenRubin_lt_/a_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tafter a few failed attempts_co_ i think i came up with something that works_sm__lt_br /_gt_\n\tI replaced your wobbling with _qt_hardcoded_qt_ x &amp_sm_ z rotationQuaternions_co_ (random value within an acceptable range).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_em_gt_note_lt_/em_gt_ that it may still _qt_drift_qt_ very slightly_co_ because gravity &amp_sm_ rotated x &amp_sm_ z.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tit was still acting stangely sometimes_co__lt_br /_gt_\n\ti_t_m not sure exactly what part was doing it_co__lt_br /_gt_\n\tbut i believe it had something to do with the vertice data part of your code.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt_\n\tAnd since the wobbling is now taken care of_co_ i removed all the code which went through vertice data and replaced the lowest y with the meshBox position y.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere_t_s the result_sm_ _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1GWEVG%235_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#1GWEVG#5_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\trunning 10 minutes now without issues so i hope that was it.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"KenRubin","Date":"2017-03-11T18:34:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks aWeirdo_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat does it.  I guess its foolish to use physics where a straight forward approach works just fine.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTake care_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tKen\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2017-03-12T09:23:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_166761_qt_ data-ipsquote-contentid_eq__qt_28985_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1489233456_qt_ data-ipsquote-userid_eq__qt_26044_qt_ data-ipsquote-username_eq__qt_KenRubin_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 3/11/2017 at 5_dd_57 AM_co_ KenRubin said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThe solution presented with the dampening Euler angles isn_t_t really physics based though.  It was just my poor attempt at correcting the problem with the impulses.  It made some sort of sense to me that a rounding imbalance in the integration facility of the physics engine could escalate out of control.  What doesn_t_t make sense to me is that the dampening would seem to work_co_ then slowly and deliberately stop working (assigning agency to Cannon!) and then start to work again after going haywire for a minute.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tI don_t_t know enough about quaternions to use them directly--which is why I tried to convert into _qt_intelligible_qt_ coordinates.  Do you have a reference for quaternions that could help me understand them functionally?  I like the idea of using them directly--even if a final solution would be purely physics-based.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tHey_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI don_t_t have a particular reference for quaternions_co_ but the short version is that a rotation quaternion is an arbitrary unit vector paired with an amount of rotation around that vector. Basically they let you represent any arbitrary rotation as a single thing_co_ rather than as three separate rotations that add up to the desired rotation. (The reason they_t_re useful is that quaternion-based rotations combine and commute with each other the way you expect_co_ which is not true with Euler angles).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo skip over all that though_co_ here_t_s a minimal example of the other idea I mentioned - it models the ship as having engines at all four corners_co_ and applies an upwards force at each corner depending on whether it_t_s higher or lower than some target height.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1FXV44_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#1FXV44_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt also applies occasional random perturbations to make things wobble_co_ and some damping to make sure things don_t_t just oscillate forever.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNote of course that I_t_m not suggesting you _lt_strong_gt_need_lt_/strong_gt_ to model things this way. I just mean to demonstrate that it might be simpler to model a system that_t_s inherently wobbly_co_ rather than take a stable system and figure out how to perturb in just such a way that it appears to wobble.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2017-03-12T09:32:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tActually_co_ having now typed that all out_co_ it occurs to me that it would be a lot simpler to just create several static_co_ invisible anchors above the ship_co_ and attach the ship_t_s corners to those anchors by spring constraints. In physical terms the results of this would be mostly similar to the demo I linked_co_ but using springs would make it a lot more straightforward to fine-tune the demo - to get more wobble by increasing the spring_t_s stiffness_co_ or less oscillation by increasing their damping_co_ etc.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-03-14T00:46:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThere_t_s some kind of echo in here.  _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tBut still_co_ thrusters from below... that is a much more dangerous challenge.  No room for physics mistakes_co_ or the ship will crash into a mall.  But... there_t_s always thrusters from below... WITH a joint from below_co_ too.  A safety chain.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  Flyaway prevention.  Could hang a low heavy mass... an invisible pendulum (while still using chain joints from above?)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWow_co_ a guy could rattle-on_co_ eh?  That most recent PG from Fenomas... that looks pretty good... esp closer-up and at various camera angles.  Nice floating.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"KenRubin","Date":"2017-03-14T01:04:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_166855_qt_ data-ipsquote-contentid_eq__qt_28985_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1489311138_qt_ data-ipsquote-userid_eq__qt_12925_qt_ data-ipsquote-username_eq__qt_fenomas_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 3/12/2017 at 5_dd_32 AM_co_ fenomas said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tActually_co_ having now typed that all out_co_ it occurs to me that it would be a lot simpler to just create several static_co_ invisible anchors above the ship_co_ and attach the ship_t_s corners to those anchors by spring constraints. In physical terms the results of this would be mostly similar to the demo I linked_co_ but using springs would make it a lot more straightforward to fine-tune the demo - to get more wobble by increasing the spring_t_s stiffness_co_ or less oscillation by increasing their damping_co_ etc.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThat is a really cool idea with the springs.  I_t_m definitely going to play around more wth this stuff.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTake care.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]