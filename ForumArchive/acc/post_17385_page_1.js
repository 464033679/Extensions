[{"Owner":"reddozen","Date":"2015-09-23T18:23:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Is it possible to do something like... dude.attachTo_lt_strong_gt_Skeleton_lt_/strong_gt_(skeleton)_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If not_co_ could I attach a Bi-Pedal skeleton to an invisible box_co_ and then attach the skeleton to my character model as needed and just ignore my invisible box? I ask because I have a skeleton with like 300 animations and 16 meshes (parts) I would rather keep one skeleton mesh and then just clone / instance it for each character model on the screen instead of having 20 times the duplication._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Even assuming that I need to attach every bone independently to the mesh parts of my character How exactly would that look? I could even merge all the sub-meshes first_co_ then just run through every bone in the skeleton to simplify things? Would either one be _qt_faster_qt_ than the other processing wise? I would assume that merging them first would be the best way._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So would something like this work properly?_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_player_mesh.attachToBone(skeleton.bones[0]_co_ generic_character_mesh)_sm_ //head boneplayer_mesh.attachToBone(skeleton.bones[1]_co_ generic_character_mesh)_sm_ //body boneplayer_mesh.attachToBone(skeleton.bones[2]_co_ generic_character_mesh)_sm_ //arm boneplayer_mesh.attachToBone(skeleton.bones[3]_co_ generic_character_mesh)_sm_ //leg bone........._lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-09-23T19:10:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello Reddozen_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_perhaps I do not get your point but dude.skeleton _eq_ skeleton is not enough?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-09-23T20:27:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I have a head_co_ body_co_ arms_co_ and legs all separate meshes with no skeletons attached. I need / want to have a default skeleton that I can attach to different combinations of body parts to make a complete player character._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Can a skeleton be by itself without a parent mesh? If so_co_ how would you import this?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If a skeleton has to belong to a mesh_co_ and I can just attach it to a simple cube_co_ then I can do the following?_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_// cube.default_skeleton is my skeleton to copyimport(cube)_sm_new_player _eq_ merge(head_co_ body_co_ arms_co_ legs)_sm_new_player.skeleton _eq_ cube.default_skeleton_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-09-23T21:37:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_yep this should work_dd_)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-09-23T22:06:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Perfect! Hopefully I can test this really soon._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Xeonzinc","Date":"2015-09-24T07:22:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Interesting topic_co_ so does this mean the skeleton bone envelopes/ranges are stored with the bones_co_ then when the skeleton is applied to any mesh the specific weights for each vertex of the mesh are derived by babylon?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-09-24T14:23:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_97935_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_17385_qt_ data-ipsquote-username_eq__qt_Xeonzinc_qt_ data-cite_eq__qt_Xeonzinc_qt_ data-ipsquote-timestamp_eq__qt_1443079349_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Interesting topic_co_ so does this mean the skeleton bone envelopes/ranges are stored with the bones_co_ then when the skeleton is applied to any mesh the specific weights for each vertex of the mesh are derived by babylon?_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_They are. If you look at the babylon scripts for a mesh with bones_co_ you_t_ll see weights etc in the XML. These are also tied to a mesh though. This is why I say just have a box attached. when you assign the new skeleton to a non skeletal mesh_co_ then (as long as everything is lined up perfectly) it should in theory deform everything correctly as their positions should be relative._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]