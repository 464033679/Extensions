[{"Owner":"MasterSplinter","Date":"2015-11-04T20:09:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey everyone_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I made a pretty basic scene in blender few bowling pins and a plane. As a still it seems to render fine. But_co_ when I attach oimo the pins seem to shoot all over the place.  The face on the floor either disappears or I get crazy artifacts.  I had previously tried using a blender cube mesh for the floor (the pins sank halfway into the floor when I did this)...  Is there something I am missing?  Also_co_ the move_dd_false property doesn_t_t seem to work with oimo._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And if I looked at the position on myloader.mesh[0].position it seems to be moving all over the place (I think this may relate to the weird artifacts I was getting)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Does this relate to importing meshes from blender and adding physics to them?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_When I crank up the properties of the meshes it seems to have no effect..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Any help or suggestions would be appreciated._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Example_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//25ec50416d915381f564e8e072111117f4bfc2ab-www.googledrive.com/host/0B7OlMPbfskONY1hWeVgtUDhQcVU/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//25ec50416d915381f564e8e072111117f4bfc2ab-www.googledrive.com/host/0B7OlMPbfskONY1hWeVgtUDhQcVU/_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks in advance!_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (BABYLON.Engine.isSupported()) {    var canvas _eq_ document.getElementById(_qt_rencanvas_qt_)_sm_    var engine _eq_ new BABYLON.Engine(canvas_co_ true)_sm_    var meshesColliderList _eq_ []_sm_    var myloader_sm_    BABYLON.SceneLoader.Load(_qt__qt__co_ _qt_bowl.babylon_qt__co_ engine_co_ function (newScene) {        // Wait for textures and shaders to be ready        newScene.executeWhenReady(function () {            // Attach camera to canvas inputs            newScene.enablePhysics(new BABYLON.Vector3(0_co_ -10_co_ 0)_co_ new BABYLON.OimoJSPlugin())_sm_            //newScene.enablePhysics(new BABYLON.Vector3(0_co_ -10_co_ 0)_co_ new BABYLON.CannonJSPlugin())_sm_            newScene.activeCamera.checkCollisions _eq_ true_sm_            newScene.activeCamera.applyGravity _eq_ true_sm_            newScene.activeCamera.collisionsEnabled _eq_ true_sm_            newScene.activeCamera.attachControl(canvas)_sm_            newScene.gravity _eq_ new BABYLON.Vector3(0_co_ -9.8_co_ 0)_sm_            checkColliders(newScene)_sm_            myloader _eq_ newScene_sm_            console.log(myloader)_sm_            //addListeners(myloader)_sm_            // Once the scene is loaded_co_ just register a render loop to render it            engine.runRenderLoop(function () {                myloader.render()_sm_            })_sm_        })_sm_    }_co_ function (progress) {        // To do_dd_ give progress feedback to user    })_sm_}function checkColliders(newScene) {    for (var i _eq_ 0_sm_ i &lt_sm_ newScene.meshes.length_sm_ i++) {        if (newScene.meshes[i].id _eq__eq_ _qt_Plane_qt_) {            newScene.meshes[i].setPhysicsState({                impostor_dd_ BABYLON.PhysicsEngine.PlaneImpostor_co_                mass_dd_ 1_co_                friction_dd_ 2_co_                restitution_dd_ 0.1_co_                move_dd_ false            })_sm_        }        else {            newScene.meshes[i].setPhysicsState({                impostor_dd_ BABYLON.PhysicsEngine.BoxImpostor_co_                mass_dd_ 1_co_                friction_dd_ 2_co_                restitution_dd_ 0.1_co_                move_dd_ false            })_sm_            meshesColliderList.push(newScene.meshes[i])_sm_        }    }}function addListeners(myLoader) {    canvas.addEventListener(_qt_mousedown_qt__co_ function (evt) {        var pickResult _eq_ myLoader.pick(evt.clientX_co_ evt.clientY)_sm_        if (pickResult.hit) {            var dir _eq_ pickResult.pickedPoint.subtract(myLoader.activeCamera.position)_sm_            dir.normalize()_sm_            pickResult.pickedMesh.applyImpulse(dir.scale(1)_co_ pickResult.pickedPoint)_sm_            console.log(pickResult)_sm_        }    })_sm_}_lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-11-04T20:16:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Could you try with 2.3? Some parts of the plugin were already rewritten. Would be good to know if changing to cannon made any difference. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_move_dd_false doesn_t_t quite work_co_ I think the documentation needs to be fixed. mass_dd_0 would cause the mesh to stay in place. So your plane (i assume it_t_s the ground) should have mass _dd_ 0_co_ and the pins can rest on it._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MasterSplinter","Date":"2015-11-05T01:02:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_They are all flying in one direction now with oimo... I_t_ll fiddle with the cannon release and see what happens._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Looks like it may be the exporter -- I_t_m going to look at the json file._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_div_gt__lt_a href_eq__qt_http_dd_//s24.photobucket.com/user/aninjaturtle/media/Untitled_zpsckfewg0h.jpg.html_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img src_eq__qt_http_dd_//i24.photobucket.com/albums/c27/aninjaturtle/Untitled_zpsckfewg0h.jpg_qt_ alt_eq__qt_Untitled_zpsckfewg0h.jpg_qt__gt__lt_/a_gt__lt_/div_gt__lt_div_gt__lt_a href_eq__qt_http_dd_//s24.photobucket.com/user/aninjaturtle/media/Untitled2_zpsvmxtbg5w.jpg.html_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img src_eq__qt_http_dd_//i24.photobucket.com/albums/c27/aninjaturtle/Untitled2_zpsvmxtbg5w.jpg_qt_ alt_eq__qt_Untitled2_zpsvmxtbg5w.jpg_qt__gt__lt_/a_gt__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_The json file shows everything is positioned at 0 on the Y axis and the vertices look like they begin at 0 -- altho reading all that point data is pretty painful._lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_Updated the link_dd__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt__lt_a href_eq__qt_https_dd_//25ec50416d915381f564e8e072111117f4bfc2ab-www.googledrive.com/host/0B7OlMPbfskONY1hWeVgtUDhQcVU/_qt_ title_eq__qt_External link_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//25ec50416d91...1hWeVgtUDhQcVU/_lt_/a_gt__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_Some strange behavior with cannon -- however_co_ I removed the blender plane and added a ground plane and positioned it at -1.3 on the y axis and it works better.  When I switch it over to oimo it works the best but I still have the pins crashing through the plane.  Does this mean the boximpostor is malformed?_lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-11-05T08:20:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Nope_co_ it should work just fine. I_t_ll check the link and see what_t_s up. I actually experimented a bit with bowling lately (results in December and January) so I know it works rather well._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-11-05T09:15:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Debugged your scene a bit. It seems like the bounding boxes of the pins are huge. ca. 4_co_4_co_12 bounding boxes._lt_/p_gt__lt_p_gt_If you lower the ground to -2.5 you will see they no longer _qt_fly_qt_ up_co_ but they do fly aside. This is due to the bounding box being way too big and them being too close to one another. I have no idea why it is (haven_t_t checked that)_co_ but this is where you will have to start looking._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Hope it helped somehow!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MasterSplinter","Date":"2015-11-05T17:23:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_104310_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_18400_qt_ data-ipsquote-username_eq__qt_RaananW_qt_ data-cite_eq__qt_RaananW_qt_ data-ipsquote-timestamp_eq__qt_1446714906_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Hi_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Debugged your scene a bit. It seems like the bounding boxes of the pins are huge. ca. 4_co_4_co_12 bounding boxes._lt_/p_gt__lt_p_gt_If you lower the ground to -2.5 you will see they no longer _qt_fly_qt_ up_co_ but they do fly aside. This is due to the bounding box being way too big and them being too close to one another. I have no idea why it is (haven_t_t checked that)_co_ but this is where you will have to start looking._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Hope it helped somehow!_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_Where are the bounding boxes assigned in babylon?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-11-05T18:14:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_They are being calculated automatically according to the mesh_t_s vertex data. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MasterSplinter","Date":"2015-11-05T18:57:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_104399_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_18400_qt_ data-ipsquote-username_eq__qt_RaananW_qt_ data-cite_eq__qt_RaananW_qt_ data-ipsquote-timestamp_eq__qt_1446747298_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_They are being calculated automatically according to the mesh_t_s vertex data._lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Oh... well that_t_s is gonna require some testing...  Just one quick thought Is it possible that this could be a side effect from using a materialAtlas to group meshes? BTW Thanks for pointing my in the right direction._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-11-05T19:19:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_not sure what materialAtlas is_co_ but grouping meshes would usually make their bounding box bigger_co_ yes. Both physics engines require the bounding box (or sphere) to be correct_co_ otherwise they can_t_t calculate the body movements correctly._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MasterSplinter","Date":"2015-11-05T20:06:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_104435_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_18400_qt_ data-ipsquote-username_eq__qt_RaananW_qt_ data-cite_eq__qt_RaananW_qt_ data-ipsquote-timestamp_eq__qt_1446751179_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_not sure what materialAtlas is_co_ but grouping meshes would usually make their bounding box bigger_co_ yes. Both physics engines require the bounding box (or sphere) to be correct_co_ otherwise they can_t_t calculate the body movements correctly._lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_It was a way I was trying to do batch baking in blender but I think as a side effect I think it was grouping the meshes.  I figured this would be ignored by the exporter but maybe not...  Definitely think this may have been the problem._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MasterSplinter","Date":"2015-11-06T03:45:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This right here_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//wiki.blender.org/index.php/Extensions_dd_2.6/Py/Scripts/UV/TextureAtlas_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//wiki.blender.org/index.php/Extensions_dd_2.6/Py/Scripts/UV/TextureAtlas_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Appears to not play nice with physics engines._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-11-06T07:25:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Just a small note - it would probably not play nice with the native collision system as well._lt_/p_gt__lt_p_gt_The bounding boxes of each mesh are simply too big. I would say the wrong positions are being exported. I looked in the exported .babylon file. Take pin1 as example - the first point is 0_co_0_co_0 _co_ the last point is 0_co_0_co_25 . Which explains why the bounding box_t_s center is 12.5 . But i doubt your pins should be so big._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]