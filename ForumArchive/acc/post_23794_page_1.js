[{"Owner":"georage","Date":"2016-07-13T14:41:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI may be doing this wrong_co_ so tell me if you have a better idea for a solution to my problem.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am creating a toy hockey game and my toys keep falling over smashing into each other and the puck. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy theory was to use a upright null player (positioned under the ice and therefore invisible to the viewer) as the correct orientation. I would check the orientation of the real player_co_ and if he was on his side I would stop his x_co_y_co_z velocity and SLOWLY rotate him to match the null player orientation. Once his position is upright (like upon mesh creation) he will resume his chasing of the puck.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMake sense? Or does my solution sound goofy?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn this playground_co_ how would you make body2 rotate slowly to match the rotational value of body1?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#3HNIJ%237_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#3HNIJ#7_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for any tips! Having fun with this.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-07-13T15:39:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is it_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#3HNIJ%238_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#3HNIJ#8_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-07-13T16:00:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe playground is acting weird after SAVE.  Sometimes it goes to an address WITHOUT the #? fragment identifier on it.  Folks like me panic_co_ thinking they lost their SAVE.... but really_co_ just need to put the new #? at the end_co_ and it_t_s there.  Scary.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tANYway_co_ let_t_s start with this_co_ Geo-man.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#3HNIJ%2310_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#3HNIJ#10_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEasier makePlayers()_co_ eh?  And _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt__t_s _lt_span_gt__lt_span_gt_animation-to-upright is excellent_co_ because it doesn_t_t care if the player fell over on the X axis_co_ or the Z axis_co_ or a combination.  It just works to make the player upright.  Perfect!_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_span_gt_But notice your pivot point?  It really should be at the center of the feet_co_ and not the center of the body.  So_co_ should we consider making the FEET be the parent?  (in our new makePlayer func)  Ideally_co_ the feet cylinder should be just as tall as it is wide_co_ but their are work-arounds.  We can offset the pivot point on the feet... somewhat_co_ and still look natural._lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_span_gt_Thoughts?  G... are you ready to both use DK_t_s animation (but on feet instead of body)_co_ and adjust makePlayer() so that feet is the parent?  Can ya handle it?  Later_co_ when you have multiple players tipped-over on the ice_co_ some of them partially tipped-back up_co_ some of them not so_co_ some almost comletely recovered... we will _qt_iterate_qt_ thru the players array_co_ using the render loop_co_ so that we are _qt_servicing_qt_ each player who is not standing upright_co_ yet they all maintain their current _qt_uprightState_qt_ or similar thing.  _lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_span_gt_For example_co_ in makePlayer()_co_ (after you make feet be the parent) you might want to set feet.uprightState _eq_ 1_sm_  If player is fallen_co_ you change his/her uprightState _eq_ 0_sm_  The _qt_iterator_qt_ might loop thru players[] and check each player_t_s .uprightState.  If 1_co_ ignore it.  If &lt_sm_1... service the recovery process._lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_span_gt_With me?  I hope so.  Help is nearby.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  Thanks for the easy/cool animator_co_ DK!_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_span_gt_PS_dd_  _lt_/span_gt__lt_/span_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#3HNIJ%2311_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#3HNIJ#11_lt_/a_gt__lt_span_gt__lt_span_gt_   Check out line 43.  SetPivotMatrix!  We moved body_t_s pivot point downward... and thus in line 42_co_ we needed to lower the player itself_co_ too.  But now we are pivoting around a better point.  So_co_ in the other PG with the makePlayer_co_ you can use a setPivotMatrix to move all the body pivot points to the feet... and thus you need not change parenting.  _lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2016-07-13T16:43:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThis would look so much better if you used a physics plugin.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-07-13T17:04:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#3HNIJ%2313_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#3HNIJ#13_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTrying to mix DK_t_s rotater with the makePlayer() func.  Unfortunately_co_ my makePlayer() uses .rotation and not .rotate.  DK_t_s animater uses the body_t_s .rotationQuaternion.... but it doesn_t_t exist without using .rotate or by somehow MAKING one.  I make one in line 26_co_ but it is causing DK_t_s animation to _qt_snap_qt_ into place.  Still figging.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  body1 on the left_co_ body2 on the right.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4289-adam/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4289_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4289-adam/_qt_ rel_eq__qt__qt__gt_@adam_lt_/a_gt__co_ over in another thread_co_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/22750-georage/?do_eq_hovercard_qt_ data-mentionid_eq__qt_22750_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/22750-georage/_qt_ rel_eq__qt__qt__gt_@georage_lt_/a_gt_ has been using physics engines for puck-drop and stick-collisions testing_co_ and both engines have been failing him due to puck-thru-floor hassles.  I think G had to leave the physics engines behind for now_co_ just because they were getting in the way of progress.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2016-07-13T17:08:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_135943_qt_ data-ipsquote-contentid_eq__qt_23794_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1468429457_qt_ data-ipsquote-userid_eq__qt_5733_qt_ data-ipsquote-username_eq__qt_Wingnut_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t3 minutes ago_co_ Wingnut said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tpuck-drop and stick-collisions testing\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tsounds like the physics bodies were too small - also could probably fake the stick-puck collision\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-07-13T17:55:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tInteresting thought_co_ A!  The thread is at _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/23718-physics-only-imposter-sphere-is-giving-ground-collisions/_qt_ rel_eq__qt__qt__gt_http_dd_//www.html5gamedevs.com/topic/23718-physics-only-imposter-sphere-is-giving-ground-collisions/_lt_/a_gt_ if you want to help_co_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4289-adam/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4289_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4289-adam/_qt_ rel_eq__qt__qt__gt_@adam_lt_/a_gt_.  G and I are not having much fun over there.  We can use all the help we can get.  (thx!)\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"georage","Date":"2016-07-13T20:45:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey_co_ thanks for all the help Wingnut and DK (and Adam). You guys rock. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have not figured out how to use the render loop correctly on the playgrounds_co_ but I have the _qt_game_qt_ in semi-working mode ... right now I just have one toy player chasing a puck and knocking it around. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//104.196.110.24/pucky/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//104.196.110.24/pucky/_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI will figure out how to integrate DK_t_s idea and the makePlayer function! Nice tips from everyone!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am happy enough with Cannon as a physics engine at the moment ... in my testing the puck stays inside the glass most of the time_co_ and I can make the glass higher if I have to_co_ but it obscures the view so I kept it kinda low.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-07-14T06:29:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tfunny scene _dd_-)\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"georage","Date":"2016-07-14T21:35:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tUPDATE_dd_ I_t_ve managed to get the makePlayer function working from an external file. Very nice! Thanks again for the help.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve also managed to set my collisions up in a foreach loop_co_ which is nice.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_scene.meshes.forEach(function(m) { m.checkCollisions _eq_ true_sm_ })_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tHow would I select only meshes that begin with a certain prefix like _qt_wall__qt_ instead of every mesh in the scene?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ is it possible to set up impostors in a foreach loop?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor example_co_ I have many players I will eventually set up_co_ and it would be nice to do them all in a loop like I did the collisions above. All the players are pushed onto the players array_co_ so I can loop through the array easily enough_co_ but how do I reference each so they have a unique identifier?\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_players.forEach(function(m) {\n                    ???.physicsImpostor _eq_ new BABYLON.PhysicsImpostor(???_co_ BABYLON.PhysicsImpostor.CylinderImpostor_co_ { mass_dd_ 5_co_ restitution_dd_ notBouncy_co_ friction_dd_ slippery }_co_ scene)_sm_\n                    )_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThanks for any tips! I still haven_t_t been able to get my little hockey dude_t_s to stay upright but I will turn to that next.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-07-15T00:41:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAhh_co_ I like THIS picture of you MUCH BETTER_co_ G-man!  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tLet_t_s see... _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#VGPA2%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#VGPA2#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI tried the tags system but it didn_t_t work for me.  (likely my fault).  Test code remarked out.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPretend line 20 is your makeAllPlayers() func.  Line 24 adds a property to each box called _lt_em_gt_isBox. _lt_/em_gt_ It is a type Boolean and thus true/false - sometimes called a _lt_em_gt_flag_lt_/em_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI also push all boxes into the allboxes array_co_ and line 37 starts an iteration through that array_co_ scaling all the x to 5.  Line 39 shows a physics setting that COULD be done_co_ but consider setting your physics on each box/player as it is created.... in your makePlayer func.  But you are certainly welcome to re-iterate through allboxes [or all players] as many times as you like.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow let_t_s head to line 42.  Here_co_ we are using scene.meshes as our array to iterate-thru_co_ and we happen to know that there are 20 spheres_co_ and THOSE we want to make tall_co_ but don_t_t touch our wide boxes.    Line 43... if (!m.isBox) { // it_t_s NOT a box.  Let_t_s make it tall! }  You get the idea.  And you should check into Javascript _lt_em_gt_predicates_lt_/em_gt__co_ too.  Lots written on the web... about those. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tLines 53 and 54 show that we do indeed have unique names_co_ generated by lines 11 and 21... which are inside loops that are NOT forEach loops_co_ but instead FOR loops.  Sometimes there is great advantage to using FOR instead of forEach... like the handy _t_i_t_ variable in ours.  I _lt_em_gt_append_lt_/em_gt_ that _lt_u_gt__lt_strong_gt_i_lt_/strong_gt__lt_/u_gt_ndexer onto the sphere and box names... and that way_co_ they each have a unique name.  You could use scene.getMeshByName(_qt_box_13_qt_).  The _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/2.4/Scene_qt_ rel_eq__qt_external nofollow_qt__gt_Babylon Scene class_lt_/a_gt_ object is PACKED with goodies... enough power to scare the dog!  Get to know it.  It will become your best friend.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tYeah_co_ I know what you_t_re going to say next.  You don_t_t want sequential numbers_co_ you want player jersey numbers_co_ right?  For this type of thing_co_ you might create a _qt_lookup_qt_ table.  OR_co_ in makeplayer()_co_ you could assign a jersey number... by adding a player.jerseyNumber just like we did with box.isBox and sphere.isBox.  Adding flags and extra properties_co_ and even extra functions... to standard JS objects... is sometimes called _lt_em_gt_overloading_lt_/em_gt_ and you can read all about it in JS forums. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor example... you might want to add a method (a function) to each player called .reportJerseyNumber().  Inside makeplayer()...\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_player.jerseyNumber _eq_ Math.floor(Math.random() * 90 + 10)_sm_  // random number 10-99\nplayer.reportJerseyNumber _eq_ function() { return this.jerseyNumber }_sm_ // add a func to player\n\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tNow you have added power to your player object... and anytime you need the player_t_s jersey number...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tvar jerseynum _eq_ allplayers[4].reportJerseyNumber()_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLater_co_ you might go as far as maintaining LOTS of info on each player_co_ and you might try things like var stinkyness _eq_ player[7].playerData.jersey.sweatStinkLevel  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  You might even consider _lt_em_gt_overloading _lt_/em_gt_allplayers array.  allplayers.getPlayerByJerseyNumber(43)_sm_   Lots of options.  That_t_s what makes JS so cool.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOh yeah_co_ physics imposters can be told to remain standing upright... with something called constraints.  There_t_s also _qt_springs_qt_.  A spring could make the player automatically return to upright_co_ when knocked over.  Physics engines have lots of toys_co_ too.  _qt_Weebles wobble but they don_t_t fall down._qt_  _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tLastly_co_ let it be known_co_ that you are asking JS questions... in a BabylonJS webGL forum.  You would probably get better answers about JS_co_ on JS forums.  Ok_co_ hope this helps.  JS _lt_em_gt_predicates _lt_/em_gt_might be able to eliminate the IF statement in line 43.  Read read read.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ (hope I didn_t_t say anything incorrect - sorry if I did)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"georage","Date":"2016-07-15T01:47:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWow! that is really cool. I had heard the term overloading and now I know what it is and how to use it. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI had already added a jersey number in makePlayer()! you read my mind!\n_lt_/p_gt_\n\n_lt_p_gt_\n\ti have done it like this ... \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_feet.jerseyNumber _eq_ Math.floor(Math.random()*100)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\twhich sounds a little weird_co_ adding a jersey number to feet_co_ but it works after I parent/child the three pieces of the toy to create the player.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tlots to digest here_co_ but I think I get it ... thanks again! I will be busy tinkering for a while.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-07-15T11:57:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi again.  You might want to have a tour around local superhero _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5218-temechon/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5218_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5218-temechon/_qt_ rel_eq__qt__qt__gt_@Temechon_lt_/a_gt__t_s tutorial site....  _lt_a href_eq__qt_http_dd_//www.pixelcodr.com/tutorials.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.pixelcodr.com/tutorials.html_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHe_t_s quite good at game structuring and OOP (object wrangling and sub-classing_co_ just like the BJS framework does_co_ too)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThink about this. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tvar player _eq_ new Object()_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s not even a mesh or sprite.  It_t_s just a blank JS object.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen_co_ you start _qt_loading_qt_... _lt_br /_gt_\n\tplayer.someprop _eq_ blah_sm__lt_br /_gt_\n\tplayer.somefunc _eq_ function() { blah blah }_sm_  _lt_br /_gt_\n\tand then...player.gfx _eq_ makeplayer()_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tInstead of overloading the babylon.mesh object(s) returned from makeplayer()_co_ you actually make your own player class object_co_ and put a babylon.mesh class in its .gfx property.  Interesting way of doing things_co_ eh?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOOP-guy Temechon might even create a generic playerClass_co_ and then have 2 sub-classes from that...  blueTeamPlayer and redTeamPlayer_co_ each having constructors (like a .create() function) on them.  When a class has a constructor_co_ it is often called with the _t_new_t_ keyword.  Our standard material is like that.  this.material _eq_ _lt_u_gt_new_lt_/u_gt_ BABYLON.StandardMaterial().\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOther classes_co_ like Babylon.Mesh... can do both.  _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1UHFAP%235_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1UHFAP#5_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSee line 5?  _t_new BABYLON.Mesh_t_ ... uses mesh_t_s constructor so it uses the _t_new_t_ keyword.... to make a shapeless mesh (used for plotting a shape a bit further below_co_ and _lt_u_gt_could be_lt_/u_gt_ used as an invisible _t_gizmo_t_ or _t_handle_t_ on your players) (an invisible yet lightweight master player-parent)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow look at line 26.  There_co_ we use the same BABYLON.Mesh class_co_ but we call its createGround() func.  CreateGround has no _lt_em_gt_return_lt_/em_gt_ _lt_em_gt_something_lt_/em_gt__sm_ as it_t_s last line of that func... because it doesn_t_t return anything.  Instead it places the result into the scene.meshes array.  Of course_co_ there_t_s also createBox()_co_ createSphere()_co_ etc.   So_co_ _t_new_t_ indicates that it is a constructor call and that it returns something to you.  It will take you a little while to master WHEN a function should _lt_em_gt_return something_sm_ _lt_/em_gt_as its last line_co_ and when it shouldn_t_t_co_ or doesn_t_t need-to.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThese _lt_em_gt_createXXX _lt_/em_gt_functions are non-constructor functions on the BABYLON.Mesh class_co_ which is an extension/subClass of BABYLON.AbstractMesh_co_ which is an extension/ subClass of BABYLON.Node.  Lights_co_ cameras_co_ and mesh... are all extensions of BABYLON.Node... so it is a _qt_universal_qt_ class.  It would contain properties and methods that are universal for ALL camera_co_ lights_co_ and mesh. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tConversely_co_ AbstractMesh... would contain things just for mesh.  All our lights start with a base class _lt_em_gt_light_lt_/em_gt__co_ and all cameras start with a base class _lt_em_gt_camera _lt_/em_gt_or maybe_lt_em_gt_ universalCamera._lt_/em_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is OOP... object oriented programming_co_ or as best it can be accomplished with datatype-wobbly javascript.  OOP is wonderful and results in massive code re-usability.  Your base player class... could be used for all sports players_co_ not just hockey.  So_co_ once you build your base class _lt_em_gt_player_lt_/em_gt__co_ you can re-use it in _lt_u_gt_many_lt_/u_gt_ sports games. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is how Temechon is able to produce game after game with very little programming changes between games.  As you tour around in his tutorials_co_ you may wish to _qt_borrow_qt_ a few of his base classes_co_ _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_ as he was kind enough to make them public_co_ and he_t_s OOP-smart_co_ so they are good base classes.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSpeaking of wobbly dataTyping_co_ Typescript is used because of that... providing stricter dataTYPE checking and regimentation than standard JS. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tJavascript allows things like CreateBox(_lt_span style_eq__qt_color_dd_#FF0000_sm__qt__gt__qt_box__qt_+i_lt_/span_gt__co_ 1_co_ scene)_sm_  We concatenated (+)... a _lt_strong_gt_string_lt_/strong_gt_ _qt_box__qt_... to a _lt_strong_gt_numeric integer_lt_/strong_gt_ i.  JS says _qt_that_t_s fine_co_ I know what you want to do_qt_.  A Typescript compiler would say _qt_What the heck are you trying there?!  You need to use String(i)_qt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m not very good at OOP_co_ but I sure want to be.  Watch Temechon_co_ and you watch a pro.  Watch the BJS framework_t_s structure_co_ and you are watching OOP pros_co_ too.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow_co_ are you wondering about all that _lt_strong_gt_extends_lt_/strong_gt_ and _lt_strong_gt_decorate_lt_/strong_gt_ crap at the top of BJS classes? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHell_co_ NOBODY knows what _lt_em_gt_that_lt_/em_gt_ debris is.  heh.  Maybe you can teach it to me_co_ later.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  Sorry for long-winded post.  Just wanted you to visit Temechon and have his knowledge in your pocket_co_ should you need it some day.  A web search for JS Objects and inheritance... should produce good results_co_ too... when you_t_re ready for it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAddenda_dd_  Superhero _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/?do_eq_hovercard_qt_ data-mentionid_eq__qt_10310_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/_qt_ rel_eq__qt__qt__gt_@RaananW_lt_/a_gt_ also has a fine_co_ but somewhat deep game tutorial... that starts at  _lt_a href_eq__qt_https_dd_//msdn.microsoft.com/en-us/magazine/mt595753_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//msdn.microsoft.com/en-us/magazine/mt595753_lt_/a_gt_ but I don_t_t know if he ever created part 2.  It_t_s ok_co_ there_t_s plenty of good stuff in part 1.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"georage","Date":"2016-07-15T20:46:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWow_co_ thanks a lot. You are working overtime my friend. I do appreciate all the info. I will be busy for a while trying to sort it all.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-07-18T19:58:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tPopping in! Part 2 - _lt_a href_eq__qt_https_dd_//msdn.microsoft.com/en-us/magazine/mt614269_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//msdn.microsoft.com/en-us/magazine/mt614269_lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]