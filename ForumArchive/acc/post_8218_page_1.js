[{"Owner":"JCPalmer","Date":"2014-07-29T21:39:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Well I got the playground the way I wanted it.  I hit the save button_co_ and the url does not change.  It is a crazy positional animation_co_ that at the createScene() level looks like the gingerbread should just be moving in a straight line while spinning. In fact_co_ that is NOT what happens_co_ yes!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I hit .Zip button &amp_sm_ I got a .Zip_co_ but the html it is not animated.  I just put everything on the clipboard_co_ and put it in a code section below.  That does not work_co_ because the site says the post was too long.  So I put it in a .Zip I made myself. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I really wanted to discuss this in a thread about the code_co_ not about how it does not save._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Any reason why?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Jeff_lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/applications/core/interface/file/attachment.php?id_eq_2337_qt__gt_playground.zip_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-07-30T00:29:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Do you reproduce this behavior each time or just with this specific code?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-07-30T00:34:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok this is because your code is too long_dd_) I have a limit on my backend to not get to big requests_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2014-07-30T00:55:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I thought so_co_ but no response the first time I or anyone uses a tool is tough to deal with.  An alert or console.log of the issue would be very helpful.  Might take double / front-end validation though._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I would also say that in a TOB world_co_ chunks of inline code is simple.  Maybe up the limit_co_ please._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-07-30T01:03:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Right I will add a message for the user_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-07-30T01:12:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Error message added_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2014-07-30T22:28:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Before I attempt to re-use this thread to talk about movePOV() / calcMovePOV()_co_ I tried to do additional saves with the code from the .ZIP above &amp_sm_ and saw no change_co_ no Alert_co_ and the message in the log was _qt_Empty string passed to getElementById()._qt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_On to movePOV() / calcMovePOV()_co_ see typescript below.  I made these methods while trying to develop closely integrated positional &amp_sm_ rotational changes that occurred during shape key deformations_co_ like walking / flying.  These functions are a later iteration of the moveForward() method in the above playground.zip_co_ that is too large to save.  The principal difference is the arguments of the amounts to shift are specified as individual numbers (not a Vector3)_co_ and the forwardAmount arg is now multiplied by -1.  Also_co_  movePOV() calls calcMovePOV()_co_ making 2 methods instead of 1._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This allows for reusable code to be made.  For example_co_  you could build a mesh in Blender with a couple of shape keys where the legs are in different positions.  You then export it_co_ which builds a .js with an Automaton sub-class for the mesh.  You write code  (better yet sub-class again) which makes it take a step forward.  Any corresponding _t_forward_t_ positional change could be interpolated from its current position to calcMovePOV(0_co_ 0_co_ amt) called just before the start.  This single calc works as long no rotation is also being applied. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If the mesh is making _t_a turn_t__co_ then iteratively call movePov(0_co_ 0_co_ amt / ratio complete).  Importantly_co_ you would not want to just specify a non-zero amount to amountRight in a calcMovePOV().  This would not rotate the mesh.  See the playground.  All movePOV(0_co_ 0_co_ amt / % complete) thinks it is doing is moving in a straight line_co_ but as each little bit of rotation occurs_co_ it is not!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This works regardless of the rotational orientation at the start!  The values are also amounts to change_co_ not absolute values.  The 2 _eq__eq_ reusable. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I am explaining what I intend to do_co_  because there are other possible uses for this.  I have no problem if it was decided that these could be implemented at AbstractMesh.  If so_co_ let me know._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Jeff_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_        /**         * Perform relative position change from the the point of view of behind the front of the mesh.         * This is performed taking into account the meshes current rotation_co_ so you do not have to care.         * @param {number} amountRight         * @param {number} amountUp         * @param {number} amountForward         */        public movePOV(amountRight _dd_ number_co_ amountUp _dd_ number_co_ amountForward _dd_ number) _dd_ void {            this.position.addInPlace(this.calcMovePOV(amountRight_co_ amountUp_co_ amountForward))_sm_        }                /**         * Calculate relative position change from the the point of view of behind the front of the mesh.         * This is performed taking into account the meshes current rotation_co_ so you do not have to care.         * @param {number} amountRight         * @param {number} amountUp         * @param {number} amountForward         */        public calcMovePOV(amountRight _dd_ number_co_ amountUp _dd_ number_co_ amountForward _dd_ number) _dd_ Vector3 {            var rotMatrix _dd_ Matrix _eq_ new Matrix()_sm_            var rotQuaternion _eq_ (this.rotationQuaternion) ? this.rotationQuaternion _dd_ Quaternion.RotationYawPitchRoll(this.rotation.y_co_ this.rotation.x_co_ this.rotation.z)_sm_            rotQuaternion.toRotationMatrix(rotMatrix)_sm_                        var translationDelta _dd_ Vector3 _eq_ Vector3.Zero()_sm_            Vector3.TransformCoordinatesFromFloatsToRef(amountRight_co_ amountUp_co_ amountForward * -1_co_ rotMatrix_co_ translationDelta)_sm_            return translationDelta_sm_        }_lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-07-31T16:42:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You should clear your cache _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]