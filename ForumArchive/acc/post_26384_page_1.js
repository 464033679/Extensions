[{"Owner":"Biz","Date":"2016-11-14T18:58:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI am very new to babylon and have been reading through tutorials and playing in the playground.  I am trying to create a representation of seismic data and am having trouble with performance. I have tried creating my own mesh using vectors and vector order and just a wireframe but  hit a size limitation at 100X1000 just trying to create a plane.  Chrome crashes after that.  But even at 100X100 plane size the rendering is so slow as to be unusable.  I also tried creating separate planes and positioning using the .position property along the xyz axis.  it works but has same issues as when creating mesh.  I see something in playground using particles that looks promising but before I invest to much time in that I was hoping someone could point me in the right direction as to the most efficient way to do something like this.  Thanks for any info you can provide.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2016-11-14T20:23:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tLarge Box\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1XFXGB%230_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1XFXGB#0_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo create a plane_co_ just set you clipping for the camera to be able to view te object.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1A2BHA%230_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1A2BHA#0_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Biz","Date":"2016-11-14T20:57:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tthanks.  so looking at the box example in the playground but do not see how i could assign 1000x1000 different colors to any given side of the box to represent my data.  my understanding is it has to be done with submesh and materials_co_ which i think is where the performance issue comes into play.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2016-11-14T21:23:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tHi Biz and welcome not really clear on your needs. It would be useful if you could produce an image illustrating what you want and how it represents the sort of data you mean. As they say - a picture is worth 1000 words. A rough drawing or a link to an image something similar on the web maybe?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Biz","Date":"2016-11-14T21:32:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi John_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthis is a test i did with a plane and a bitmap from actual data using babylon. it is only in 3 colors but will eventually be in many colors looked up in a color map.   i need to be able to hover over the plane and determine what amplitude value triggered the color displayed at that position. dont think this can be done using a bitmap.\n_lt_/p_gt_\n\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_11/babylonSeis.PNG.cb2d6b35e3fe6417348baa35778675ca.PNG_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_10268_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_11/babylonSeis.PNG.cb2d6b35e3fe6417348baa35778675ca.PNG_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_babylonSeis.PNG_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Biz","Date":"2016-11-14T21:53:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHere is something else I tried that works but performance is so slow it is not acceptable.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tnumTraces_eq_100_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tnumZ_eq_500_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tvar zz _eq_ 0_sm__lt_br /_gt_\n\t            for (i _eq_ 0_sm_ i &lt_sm_ numTraces_sm_ i++) {_lt_br /_gt_\n\t                zz _eq_ 0_sm__lt_br /_gt_\n\t                for (z _eq_ 0_sm_ z &lt_sm_ numZ_sm_ z++) {\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    var amplitude _eq_ response.Traces_lt_em_gt_.Values[z]_sm__lt_/em_gt__lt_br /_gt__lt_em_gt_\n\t                    //if (z &lt_sm_ 1400)_lt_/em_gt__lt_br /_gt__lt_em_gt_\n\t                    //    continue_sm__lt_/em_gt__lt_br /_gt__lt_em_gt_\n\t                    var square _eq_ BABYLON.Mesh.CreatePlane(_qt_square_qt__co_ .1_co_ scene)_sm_\n_lt_/em_gt__lt_/p_gt_\n_lt_em_gt_\n\n_lt_/em_gt__lt_p_gt__lt_em_gt_\n\t                    square.position _eq_ new BABYLON.Vector3(i * .1_co_ zz * .1_co_ 0)_sm__lt_/em_gt__lt_br /_gt__lt_em_gt_\n\t                    zz++_sm_\n_lt_/em_gt__lt_/p_gt_\n_lt_em_gt_\n\n_lt_/em_gt__lt_p_gt__lt_em_gt_\n\t                    //square.material _eq_ setMaterial(amplitude)_sm__lt_/em_gt__lt_br /_gt__lt_em_gt_\n\t                    square.material _eq_ redWireframeMaterial_sm_\n_lt_/em_gt__lt_/p_gt_\n_lt_em_gt_\n\n_lt_/em_gt__lt_p_gt__lt_em_gt_\n\t                }_lt_/em_gt__lt_br /_gt__lt_em_gt_\n\t            }\n_lt_/em_gt__lt_/p_gt_\n\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_11/babylonSeis2.PNG.d841dec1c984346634aec86ac2b03f3a.PNG_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_10269_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_11/babylonSeis2.thumb.PNG.5f35e190a0b2951e5a855c4f4092f7b4.PNG_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_babylonSeis2.PNG_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2016-11-14T23:57:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHave a look at _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/tutorials/Height_Map_qt_ rel_eq__qt_external nofollow_qt__gt_ground from height map  _lt_/a_gt_this could be one way that might be of use.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd do a search for terrain in this forum some of the ideas overlap. Instead of randomising to generate a terrain use your data.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2016-11-15T00:23:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt appears your calculations are destroying your cache at the proportions you_t_re implying - all browser related. Simply add in a cam min and cam max distance to avoid firing too many rays for rendering_co_ and you should be able to accomplish the scene. Just a thought...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Biz","Date":"2016-11-15T12:15:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tdbawel_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthanks.  i am using an arcRotateCamera so i set the upper and lower radius limit both to 30.  some improvement but still pretty slow (plus no zoom in and out).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWill have a look at ground from height map.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Biz","Date":"2016-11-15T21:46:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJohn_co_ dbawel_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for you help.  I have a lot to learn but am much closer now.  Creating a ground mesh from height map seems to do the trick.  The mesh I get is 500x1000 is the performance is great.  Do not understand why the mesh I created 100x100 is so slow but I think I can work with the ground mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2016-11-16T03:58:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou_t_re just trying to render 3D data as a 2D plane of colors_co_ right? Not as a 3D volume?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf so the most performant way would presumably be to bake the colors into a 500x1000 texture (using Canvas_co_ or manually if you like)_co_ and render that texture on a single plane that_t_s been scaled up to 500x1000. Reading back the value on mouseOver can be done by using Babylon_t_s pick function_co_ which can tell you the UV coordinates where a mesh was struck_co_ and looking up that UV value in the plane of values used to make the texture.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs for why your 100x100 version didn_t_t work_co_ it sounds like you were creating 10_co_000 separate meshes_co_ which is a lot (and 9999 more than it sounds like you need _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ )\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Biz","Date":"2016-11-17T14:15:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tfenomas_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthanks for the advice.  I have written a test and show the code and results below.  \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSome questions if you do not mind.\n_lt_/p_gt_\n\n_lt_p_gt_\n\twhy does the chessboard not take up the entire canvas?\n_lt_/p_gt_\n\n_lt_p_gt_\n\thow do the bu_co_ bv values relate to the x_co_y i used to build the chessboard?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tfunction TEST() {_lt_br /_gt_\n\t            //alert(_qt_TEST _qt_)_sm__lt_br /_gt_\n\t            var w _eq_ 80_sm__lt_br /_gt_\n\t            var h _eq_ 80_sm__lt_br /_gt_\n\t            var x _eq_ 0_sm__lt_br /_gt_\n\t            var y _eq_ 0_sm__lt_br /_gt_\n\t            var dynTex _eq_ new BABYLON.DynamicTexture(_qt_dyntex_qt__co_ {width_dd_w_co_ height_dd_h}_co_ scene_co_ true)_sm__lt_br /_gt_\n\t            var texCon _eq_ dynTex.getContext()_sm__lt_br /_gt_\n\t            for (var row _eq_ 0_sm_ row &lt_sm_ 8_sm_ row++) {_lt_br /_gt_\n\t                y _eq_ 0_sm__lt_br /_gt_\n\t                for (var column _eq_ 0_sm_ column &lt_sm_ 8_sm_ column++) {_lt_br /_gt_\n\t                    if (row % 2 _eq__eq_ 0) {_lt_br /_gt_\n\t                        if (column % 2 _eq__eq_ 0) {_lt_br /_gt_\n\t                            texCon.fillStyle _eq_ _qt_red_qt__sm__lt_br /_gt_\n\t                        }_lt_br /_gt_\n\t                        else {_lt_br /_gt_\n\t                            texCon.fillStyle _eq_ _qt_white_qt__sm__lt_br /_gt_\n\t                        }_lt_br /_gt_\n\t                    }_lt_br /_gt_\n\t                    else {_lt_br /_gt_\n\t                        if (column % 2 _eq__eq_ 0) {_lt_br /_gt_\n\t                            texCon.fillStyle _eq_ _qt_white_qt__sm__lt_br /_gt_\n\t                        }_lt_br /_gt_\n\t                        else {_lt_br /_gt_\n\t                            texCon.fillStyle _eq_ _qt_red_qt__sm__lt_br /_gt_\n\t                        }_lt_br /_gt_\n\t                    }\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    texCon.fillRect(x_co_ y_co_ 10_co_ 10)_sm__lt_br /_gt_\n\t                    y +_eq_ 10_sm__lt_br /_gt_\n\t                }_lt_br /_gt_\n\t                x +_eq_ 10_sm__lt_br /_gt_\n\t            }_lt_br /_gt_\n\t            _lt_br /_gt_\n\t            dynTex.update()_sm__lt_br /_gt_\n\t            var square _eq_ BABYLON.MeshBuilder.CreatePlane(_qt_square_qt__co_ 1_co_ scene)_sm__lt_br /_gt_\n\t            square.scaling.x _eq_ w_sm__lt_br /_gt_\n\t            square.scaling.y _eq_ h_sm__lt_br /_gt_\n\t            square.position.x _eq_ 0_sm__lt_br /_gt_\n\t            square.position.y _eq_ 0_sm__lt_br /_gt_\n\t            var seisMaterial _eq_ new BABYLON.StandardMaterial(_qt_seismic_qt__co_ scene)_sm__lt_br /_gt_\n\t            seisMaterial.diffuseTexture _eq_ dynTex_sm__lt_br /_gt_\n\t            square.material _eq_ seisMaterial_sm__lt_br /_gt_\n\t            _lt_br /_gt_\n\t            square.actionManager _eq_ new BABYLON.ActionManager(scene)_sm__lt_br /_gt_\n\t            square.actionManager.registerAction(new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnPickTrigger_co_ function (alertMe) {_lt_br /_gt_\n\t                var pickResult _eq_ scene.pick(scene.pointerX_co_ scene.pointerY)_sm__lt_br /_gt_\n\t                alert(_t_bu_eq__t_+pickResult.bu + _t_ bv_eq__t_+pickResult.bv)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t            }))_sm__lt_br /_gt_\n\t        }\n_lt_/p_gt_\n\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_11/chess.PNG.25cb362a081b6e66775d85c2b73cdac4.PNG_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_10306_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_11/chess.PNG.25cb362a081b6e66775d85c2b73cdac4.PNG_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_chess.PNG_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2016-11-17T14:33:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_151419_qt_ data-ipsquote-contentid_eq__qt_26384_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1479392159_qt_ data-ipsquote-userid_eq__qt_24408_qt_ data-ipsquote-username_eq__qt_Biz_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t9 minutes ago_co_ Biz said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\twhy does the chessboard not take up the entire canvas?\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\thow do the bu_co_ bv values relate to the x_co_y i used to build the chessboard?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\t1. My guess is that it has to do with BJS using power-of-two sizes internally - try making the canvas 128x128_co_ or 256x256?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. UV coords map to the texture - one corner of the texture is 0_co_0_co_ the other is 1_co_1. Just scale them up by whatever you need.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nabroski","Date":"2016-11-17T15:50:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\twhy you dont using a scale ratio e.g 1_dd_100_co_ works since ~800years_co_ webgl should handle it without exception. i image i open a webpage and wait for 3hours til a large cube appears on my screen. ..._lt_br /_gt__lt_a href_eq__qt_https_dd_//en.wikipedia.org/wiki/Scale_(map)_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//en.wikipedia.org/wiki/Scale_(map)_lt_/a_gt__lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Biz","Date":"2016-11-21T13:08:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThanks to everyone on this thread for your help.  I have something I can work with now.  Needs some work but the basics are there.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]