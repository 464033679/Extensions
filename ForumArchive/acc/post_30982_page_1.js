[{"Owner":"nicktendo","Date":"2017-06-11T03:00:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello there! Long time lurker_co_ first time poster here...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn the following example_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1NASOD%2313_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1NASOD#13_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhy does the sphere mesh overlap (or fall slightly into) the box mesh as the box moves upwards?  Is there a way to make the sphere not overlap the box as the box moves the sphere upwards?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-06-12T15:05:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHiya Nicktendo_co_ welcome to the forum!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t   No replies here yet_co_ huh?  What the heck?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI did just a little testing on your playground (thx for providing that_co_ btw).  Same symptom in CannonJS or OimoJS.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/?do_eq_hovercard_qt_ data-mentionid_eq__qt_10310_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/_qt_ rel_eq__qt__qt__gt_@RaananW_lt_/a_gt_ probably knows exactly what causes this_co_ but he_t_s been pretty busy in real life. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ there_t_s been some minor changes to our boundingBox class_co_ recently.  Check this out_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1NASOD%2316_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1NASOD#16_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs you can see_co_ I borrowed some code (2 funcs) from the BJS framework (physicsImpostor class)_co_ and moved it/them into the playground.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSee console reports.  gbi sphere1 report to console... doesn_t_t look healthy to me.  I don_t_t think we should be using .centerWorld in line 56.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe sphere is elevated_co_ so centerWorld might not be a good choice to get object center.  I_t_m not sure how to fix_co_ yet_co_ but... I will keep studying.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSorry for the slow replies.  We are on the case_co_ now.  Solution and more comments coming soon.  Thanks for the report about this issue.  Good eyes!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-06-12T15:50:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1NASOD%2317_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1NASOD#17_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI tried another version of _qt_get the center_qt_ that Deltakosh taught me_co_ for another thread.  (lines 56-60)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tConsole report_dd_ gbi sphere_dd_   Object { x_dd_ 1_co_ y_dd_ 1_co_ z_dd_ 1 }\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat looks better.  But_co_ the physics fails.  Darn.  hmm.  Perhaps .centerWorld IS the correct approach_co_ but that darned mud. _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tNote_dd_  _qt_mud_qt_ or _qt_muddy_qt_ is Wingy_t_s term for when physicsImpostors sink-into other impostors a small amount - in case you hadn_t_t heard.)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ll have some pancakes and then get back to work on this.  (Wingnut pushes his finger into the spongy-surface of the sphere_co_ and ponders.)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"nicktendo","Date":"2017-06-13T10:16:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_ Thank you for the explanation_co_ it_t_s nice to know the issue isn_t_t a result of my _qt_newbness_qt_ with BJS _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-06-13T11:54:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  Nope_co_ you_t_re doing just fine.  I wish I could say the same about our physics plugins or about my troubleshooting skills. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd my pancakes weren_t_t all that good_co_ either.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tForum friend _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/17776-ian/?do_eq_hovercard_qt_ data-mentionid_eq__qt_17776_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/17776-ian/_qt_ rel_eq__qt__qt__gt_@ian_lt_/a_gt_ has been asking-for a way to _qt_showPhysicsImpostor()_qt_... and to be frank_co_ I would LOVE to see a way to do that_co_ as well.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI recently began SOME work on .showEllipsoid() (for the non-physics-engine collision system built-into BJS). (see the wireframe _t_impostor tokens_t_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#WWCK0%2336_qt_ rel_eq__qt_external nofollow_qt__gt_here_lt_/a_gt_)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat system is about half-way complete_co_ but parts of it COULD be used for .showPhysicsImpostor().  That could sure help US_co_ here_co_ now.  We could see if the impostors... and the actual mesh... were TRULY the same exact size.  I think they are_co_ though.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPhysics engines have a _t__lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/using_the_physics_engine#setting-the-time-step_qt_ rel_eq__qt_external nofollow_qt__gt_timestep_lt_/a_gt__t_ system.  It runs at XX speeds_co_ user adjustable.  I_t_m not seeing much affect (upon sphere-sinking) in your playground... when changing it_co_ though.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1NASOD%2318_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1NASOD#18_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSame old stuff... just more Wingnut tools laying around.  I _qt_brought in_qt_ the oimo and cannon _qt_step_qt_ functions.  This playground is set-up to switch engines_co_ easily_co_ and I wanted to see the _qt_step_qt_ function for each.  I did not modify either_co_ though. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAside_dd_ In another thread_co_ using CannonJS heightMap impostors_co_ we saw some serious physics speed increases when we moved the Cannon .step() function into the playground.  I wanted to see if doing that... increased speed (increased sphere response-time) in your _qt_lifter_qt_ demo_co_ here.  No changes seen.  Perhaps a LITTLE improvement.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRemember in your other thread... where I implied that _qt_force-moving_qt_ a physics impostor is really _lt_u_gt_not_lt_/u_gt_ _qt_the right thing to do_qt_... and that mesh with physicsImpostors SHOULD really be moved-with setLinearVelocity or applyImpulse?  Well_co_ down in lines 71/72 of this latest playground_co_ we are force-moving box.  So_co_ I thought I would add a .forceUpdate in line 73... just in case.  Although .forceUpdate is rarely needed at a user-level_co_ I thought MAYBE it might be needed for this forced-mover in lines 71/72.  But_co_ no change in symptom.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe reason I am testing _qt_time_qt_ and _qt_step-time_qt_ so thoroughly... is because PERHAPS... our problem is HOW SLOW the physics engine is updating the sphere.  It is my (recently-deduced) opinion... that we have _lt_u_gt_no_lt_/u_gt_ _qt_mud_qt_ problem caused by unmatched size/position between impostors/mesh.  What we actually have... is a _qt__lt_strong_gt_sphere impostor is slow to recognize collider position change_lt_/strong_gt__qt_-situation.  _lt_u_gt_Maybe_lt_/u_gt_.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tSo far_co_ timestep adjustments (line 65) have not changed the _qt_sinking sphere_qt_ issue.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ I changed your _t_ground_t_ to be _t_box_t_.  Added another ground_co_ and now I am moving camera upward at same speed as box...  easier to see sphere-sinking.  Hope ya don_t_t mind.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tI will keep studying.  Feel free to do your own testings_co_ too.  I hope others test/comment_co_ as well.  thx!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-06-14T07:08:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1NASOD%2319_qt_ rel_eq__qt_external nofollow_qt__gt_Another test_lt_/a_gt_.  Added an _t_else_t_ in renderLoop_co_ re-aimed camera... that_t_s all.  Change step in line 70... for more/less sphere sinkage-into box.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m not sure I can solve this.  Difficult to make sphere/box surfaces impenetrable.  hmm.  Perhaps others will have ideas.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"nicktendo","Date":"2017-06-26T12:00:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_ Great progress here!  I ended up just implementing my own collision detection_co_ and it_t_s working out pretty well.  Using physics wasn_t_t entirely necessary to achieve my end goal_co_ and in reality added a lot more CPU overhead than just implementing the simple functionality I required myself.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs far as the sinking issue with the physics plugin - I_t_m thinking it may have something to do with the engine not beginning to _qt_process_qt_ the collision until the 2 meshes intersect_co_ which would mean if the colliding mesh doesn_t_t happen to hit the _qt_ground mesh_qt_ at precisely the surface (i.e. the distance the colliding mesh is moving every frame isn_t_t evenly divisible by the initial distance between the colliding mesh and the ground)_co_ it falls into the ground mesh by whatever distance it was being moved every frame.  I think that_t_s why the slower we move the colliding mesh the shallower it sinks into the ground.  I believe the ultimate solution to the sinking issue would be modifying the physics such that a function is triggered once the colliding mesh is within a distance where it_t_s movement vector divided by 2 is less than 1_co_ and on the last frame the position of the colliding mesh position is set to the surface of the ground mesh.  In this manner it may be possible to mitigate the sinking by taking manual control of the colliding mesh position for the last frame prior to collision.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust an idea _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]