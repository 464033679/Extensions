[{"Owner":"Punn","Date":"2015-09-27T01:07:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\tCompilation error_lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(185_co_74_co_72)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_background-color_dd_rgb(242_co_222_co_222)_sm__qt__gt_n.addMesh is not a function_lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The second link does not work._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-27T06:05:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1PGAPW%2331_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1PGAPW#31_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I guess the subdivisions parameter in CreateCylinder() was missing line21_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Ahiru","Date":"2015-09-27T13:11:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hmm ... but it worked before??_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-27T14:45:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Well_lt_/p_gt__lt_p_gt_I_t_m implementing the _lt_em_gt_options_lt_/em_gt_ parameter for _lt_em_gt_CreateCylinder_lt_/em_gt_ in order to add the per face texture feature for instance (maybe per ring texture then)_lt_/p_gt__lt_p_gt_This method had a check in the code on its signature to keep the retro-compatibility with a very old signature without the _lt_em_gt_subdivisions_lt_/em_gt_ paramater._lt_/p_gt__lt_p_gt_I just couldn_t_t keep this retro-compatibility working with the new signature (the _lt_em_gt_optionable_lt_/em_gt_ one) so I had a talk with DK to know if we could break this old support _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/dist/preview%20release/what%27s%20new.md_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/dist/preview%20release/what_t_s%20new.md_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The goal of _lt_em_gt_options_lt_/em_gt_ parameter is to simplify the work for the user by making all the parameters optional._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_CreateCylinder(_t_cyl_t__co_ {}_co_ scene)_sm__lt_/pre_gt__lt_p_gt_should create a default cylinder_lt_/p_gt__lt_p_gt_If you want to specify only one parameter_co_ you will do _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_CreateCylinder(_t_cyl_t__co_ {subdivisions_dd_ 4}_co_ scene)_sm__lt_/pre_gt__lt_p_gt_Obviously_co_ the current signature _lt_u_gt_with_lt_/u_gt_ the _lt_em_gt_subdivisions_lt_/em_gt_ parameter will still work._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In other words _dd_ _lt_em_gt_subdivisions_lt_/em_gt_ is no longer optional in the current signature_co_ but is optional in the _lt_em_gt_optionable_lt_/em_gt_ signature._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-09-27T15:19:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_We got a backward compat break?  Cooooool!  I love those. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Let_t_s do createSphere_co_ too_co_ then.  Size first_co_ then subdivs. (reverse params)  I_t_ve been bothering DK about this for 2 years now... it_t_s such fun.  heh._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_C_t_mon_co_ let_t_s go!  If folks need to update 25000 BJS scenes for broken cylinder syntax_co_ let_t_s make folks fix their spheres_co_ too.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  70% of all playgrounds will flop_co_ I predict.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Besides_co_ DK is going to write us a JS code processor... that looks through scene files and finds the line numbers that folks need to edit... to change to the newest BJS._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Yeah_co_ let_t_s clean house!   Make the big move!  BJS 3.0... lots of things work differently_co_ and ya_t_ll cope.  Cuz... this is the world of power dev on the bleeding edge.  It_t_s a hard-hat and steel-toed boots construction zone... expect to get dirty and bloody.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Ok_co_ what the heck is the subject here?  Oh yeah_co_ n.addMesh failure (or a lack of n)... caused by a missing (S)ubdivs parameter which used to be optional_co_ but is now required._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_BABYLON.Mesh.CreateCylinder(_qt_mycyl_qt__co_ 4_co_ 0_co_ 4_co_ 4_co_ _lt_strong_gt__lt_u_gt_S_lt_/u_gt__lt_/strong_gt__co_ scene)_sm_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Yeah_co_ that_t_s the subject... I think.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-27T18:12:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Once the _lt_em_gt_CreateCylinder()_lt_/em_gt_ is OK (seems to be a bug) with both signatures _dd_ current one + optionable one_co_ I will try to re-make the _lt_em_gt_subdivisions _lt_/em_gt_parameter optional._lt_/p_gt__lt_p_gt_Not sure it will be feasable however. I_t_ll check once the method is really OK with these two signatures._lt_/p_gt__lt_p_gt_Remember we are in an alpha version_co_ things aren_t_t frozen._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_At its time_co_ adding an optional parameter before the _lt_em_gt_scene_lt_/em_gt_ parameter in the signature wasn_t_t maybe the best idea (need to test _dd_ if this parameter is an instance of _lt_em_gt_Scene_lt_/em_gt_ then consider the former one is _lt_em_gt_subdivisions_lt_/em_gt_ else do this_co_ etc ... ) and this is the reason why the _lt_em_gt_options_lt_/em_gt_ parameter is provided _dd__lt_/p_gt__lt_p_gt_- to add simple feature extensibility to the mesh_lt_/p_gt__lt_p_gt_- to give to the user the ability to specify only what he needs since everything will be set by default to build a mesh _dd_ less code_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The _lt_em_gt_CreateSphere()_lt_/em_gt_ method won_t_t be changed because it has currently no optional parameter._lt_/p_gt__lt_p_gt_Optional parameters aren_t_t a problem actually_co_ but their position in the signature._lt_/p_gt__lt_p_gt_The real problem comes only from the strange _lt_em_gt_CreateCylinder()_lt_/em_gt_ signature what has an optional parameter (_lt_em_gt_subdivisions_lt_/em_gt_) before a mandatory one (_lt_em_gt_scene_lt_/em_gt_)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-28T09:24:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Be happy _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_I think I solved the backward compat problem _dd_ CreateCylinder _lt_em_gt_subdivisions_lt_/em_gt_ should keep optional in the current signature._lt_/p_gt__lt_p_gt_It works well now on my local compilation._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Waiting for the PR._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-28T18:35:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Backward compatibily on _lt_em_gt_CreateCylinder()_lt_/em_gt_ restored (sweat and blood in the TS multi-signature muds and github hell _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _dd_ DK will curse me to push such chaotic PR)_lt_/p_gt__lt_p_gt_AND_lt_/p_gt__lt_p_gt_diameterTop _eq_ 0 working back_lt_/p_gt__lt_p_gt_AND_lt_/p_gt__lt_p_gt_new _lt_em_gt_optionable _lt_/em_gt_signature working together_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_pfffewww_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-09-28T21:31:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Well done _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ everything is validated_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]