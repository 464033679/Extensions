[{"Owner":"amorgan","Date":"2015-01-30T15:05:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Arising from another thread_co_ currently BabylonJS does not change the bounding box of a model if it is moved by an animations with bones. This makes sense_co_ because the animation is not changing the object_co_ but the vertices of the object._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_My problem arose because I have a character mesh with a sword (two meshes). I have an attack animation where the character mesh is swinging the sword. In an ideal world the bounding box would move with the sword and I could use that detect collisions with an enemy using the OnIntersectEnter Action Trigger._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have some work around solutions to this specific problem_co_ but I would think this could be useful for other scenarios as well. Not knowing much about the inner workings_co_ I would guess you could calculate the bounding box during animation similar to doing a precise mesh calculation. Though it would be nice to do a normal bounding box that was just a max box dimension. It might be usefull for these to be variables_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_1) bounding box to track animations - boolean_lt_/p_gt__lt_p_gt_2) whether the bounding box is precise or simple (though this might be apart of the Action manager Trigger) - boolean_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Some of that is thinking out loud_co_ what do you guys think?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-01-30T17:40:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I get your point. I_t_m only concerned by performance. Doing this implies scanning all the meshes on CPU side. And this is even worse if you think that you will also have to apply bones with the CPU to the mesh to get the real boundib box_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-01-31T15:49:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I would recommend estimating the hit rather than using the action manager for this. Define a range to all your melee weapons_co_ then _qt_if attacking and enemy distance &lt_sm_ attack range_co_ play(deflect animation) and miss_qt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If I_t_m not mistaken_co_ babylon has too loop through all action manager events for every frame / trigger_co_ so while this may work for 1 enemy_co_ if you have... 20_co_ then it has to check the event for all 20 to see if you_t_re action should be triggered. Best to simplify your approach when possible._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I don_t_t like hit boxes unless they_t_re absolutely necessary. especially for something with performance limitations like this that runs on javascript._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2015-02-02T16:30:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_So I_t_ve been trying to think this through. Calculating whether or not something is a hit for an object like a sword should be easy enough. Get distance from enemy and if it_t_s facing you or blocking_co_ and calculate it in one shot. A projectile on the other hand is a little more dynamic_co_ so it seems like using an action manager or live calculations might not be too much different? Not sure how heavy the OnIntersectEnterTrigger and Actions are_co_ but I feel like it should be taking advantage of the engine if I am already doing collisions. Though I am not sure how or if that is optimized._lt_br_gt__lt_br_gt_For this type of scenario_co_ It would be awesome to be able to specify whether or not a specified mesh of animation has it_t_s bounding box follow_co_ whether or not it is implemented with bones._lt_br_gt__lt_br_gt_Thoughts?_lt_br_gt__lt_br_gt_Not sure if this is the intended usage of the OnIntersect Triggers_co_ for a game like scenario_co_ or how scalable it is_co_ to reddozen_t_s pont_co_ which I have been strugglin with and have found some solutions for scaling to N._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-02-02T17:12:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_A bullet can still have a range_co_ and you have to render it_t_s location per frame_co_ so it_t_s still a distance calc per frame. What I would probably do is use a more finite octree_co_ and then test distance to all targets in the bullets active lowest tree_co_ and take the closets target that_t_s in range to hit. If it_t_s explosive_co_ then that impact point is the epicenter. FPS games are very calculator intensive with as many bullets as you could have flying that need to be calculated._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I would honestly recommend using a client server setup and off load as much of the calculations to the server as possible. You will have to do a lot of testing to see what the fastest way to calculate everything is. i would push out a lot of bullets and see which method will save you the most overall frames. i think it_t_s the only way you_t_ll be able to find out._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2015-02-02T18:10:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Note_co_ I am newer to collisions and this side of things. That definitely makes sense_co_ what I am wondering is_co_ how is this different then using a collider system that is already in place (other than the advantage of using a server to do the grunt work if it_t_s just calculations)? I feel like the system is already there to determine if a moving object hits something_co_ in addition I have to already be animating/moving the object. It almost seems redundant_co_ unless the collision method is indeed way more costly on processing (which makes sense if it is examing all vertices_co_ etc). Granted this is probably being pretty naive on how the collisions are actually calculated._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So what you are telling me is that I will actually have to do some real work _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ hahaha_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The convenient part of about (in an ideal world) using the Actoin manager and collisions is that I would not have to redescribe the animations mathematically_co_ but I_t_m sure to optimize this_co_ I will have to do this. Granted I could also see a scheme where I am using the position of a mesh or it_t_s vertices and instead of calculating it_t_s position based off of it_t_s mathematical trajectory...hmmm._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_On another note (not really)_co_ is it possible to assign an objects position to a vertex_t_s position_co_ other than just updating it each frame manually. Sorry thinking out load again via typing._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-02-02T18:44:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You shouldn_t_t have to care about the animation state with what I_t_m referring to. for a sword_co_ Just trigger it to play and then test range for hit or miss._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Bullet would be a little different. I_t_m not sure this would really be an animation as much as it_t_s just a translation of X units per second. Wouldn_t_t want to calculate a bullet location per frame as frames can vary_co_ but I would test for a hit every 1~3 frames_co_ maybe more depending on how slow your bullet moves_co_ and how accurate you want the test._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2015-02-02T19:05:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yea a bullet is much more simple_co_ let_t_s replace it with_co_ let_t_s say_co_ a boomerang. You could see how that could be apart of the animation_co_ since it comes back to the player and is not a simple linear path. It doesn_t_t have to be part of the animation_co_ but just an example. A boomerang might be a bad example since it would move independently of the player_t_s position_co_ but let_t_s pretend it doesn_t_t._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-02-02T21:23:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Anything to do with battle can basically be expressed as an attack range._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If we want to take a boomerang as an example_co_ it_t_s just like the bullet in that you would look at position then range where range would define how big it is._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I know what you mean though. It_t_s a fight over accuracy_co_ where you have to make a choice between exact hit vs estimation of hit._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2015-02-03T14:29:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yea definitely. Thanks for the insight. I will be working on a solution for this._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]