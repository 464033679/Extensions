[{"Owner":"styxxx","Date":"2015-11-20T22:48:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_When setting (0_co_0_co_0) as initial vector all other normal and binormal vectors of points in the path will be (0_co_0_co_0) too (not just the first). I don_t_t know if this is a bug or a feature since the initial vector probably isn_t_t supposed to be (0_co_0_co_0). Maybe this should trigger a warning? _lt_br_gt__lt_br_gt_I almos went crazy since I didn_t_t find the error. _dd_/ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Example_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#7SQDY_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#7SQDY_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-11-21T07:24:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/2.2/Path3D_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/classes/2.2/Path3D_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The second parameter_co_ if you really need it_co_ is not the initial point of the path3D_co_ but the initial _lt_em_gt__lt_u_gt_normal direction_lt_/u_gt_. _lt_/em_gt__lt_/p_gt__lt_p_gt_It allows to set a wanted normal direction (example _dd_ colinear to Y World axis)_co_ so it can_t_t be (0_co_ 0_co_ 0) obviously. This should be better documented actually.I_t_ll do it._lt_/p_gt__lt_p_gt_If you don_t_t set the initial normal_co_ Path3D will compute one for you._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_example with the first normal direction equals to Y _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#7SQDY%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#7SQDY#1_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2015-11-21T14:37:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Is there currently a way to pass the initial normal direction to CreateTube? _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-11-21T17:37:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The initial normal direction is useful if you want that your Path3D has its first normal_co_ say_co_ orientated _qt_up_qt__lt_/p_gt__lt_p_gt_This doesn_t_t mean necesseraly colinear to Y because your path may not allow this._lt_/p_gt__lt_p_gt_Actually_co_ it will compute the projection of this first normal on the plane orthogonal to the first path tangent on the first path point (I know_co_ maths are boring  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ )_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In the case of a tube_co_ the underlying Path3D object is computed to make the tube twist smoothly around a curved path. The tube is built with many planar circles_co_ each orthogonal to the tangent of the curve on each path point._lt_/p_gt__lt_p_gt_So the normal of the Path3D on each point is just one of the many circle radius (point)._lt_/p_gt__lt_p_gt_What I mean is that_co_ while a circle is symetric on every direction around its center_co_ the first normal has no real importance for a tube._lt_/p_gt__lt_p_gt_So_co_ to answer your question _dd_ you can_t_t set the first normal direction for a tube._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_However_co_ it could have an effect for another Path3D mesh that may not be symetric _dd_ Extrusion._lt_/p_gt__lt_p_gt_That_t_s why_co_ the first normal of Extrusion is explicitly computed to fit the Y axis of the shape model to be extruded._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2015-11-21T19:09:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_What would be the best way to create a basic pipe like this with CreateTube?_lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.amazon.co.uk/White-PVC-U-Water-Connector-Adapter/dp/B00BG8XPI4#_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.amazon.co.uk/White-PVC-U-Water-Connector-Adapter/dp/B00BG8XPI4#_lt_/a_gt__lt_/p_gt__lt_p_gt_I was able to do it by doubling up on the first path vector_co_ but that seems hacky to me._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-11-21T19:56:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I think the best would be to define a path with a Bezier curve making a nice roundness_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2015-11-21T23:20:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m planning on fitting the pipes together_co_ so one end normal should be at (-1_co_ 0_co_ 0) and the other end normal should be at (0_co_ -1_co_ 0)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If I just pass it a quarter circle path_co_ I end up with this_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#19HCIZ_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#19HCIZ_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I probably can play with the curve to get something close to the end normals I need_co_ but I don_t_t think the tubes will end up fitting as nicely as I_t_d like on the map._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m thinking I_t_m going to have to use CSG with a simple Torus or model it in Blender.  It_t_s too bad because I really like how you can pass a scale function to CreateTube. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-11-22T09:28:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Well_co_ pipes are really specific kind of tubes_co_ because they don_t_t twist and can_t_t follow any type of path._lt_/p_gt__lt_p_gt_I guess it_t_s quite difficult to do a pipe from a BJS tube as it is actually._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The best way for this specific would_co_ imho_co_ to build a dedicated geometry (many circles orthogonal to the path_co_ but without twist) and then to ribbonize it._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ll check soon if the current CreateTube alog could get this behavior easily with a parameter (_qt_dontTwist_qt_ ?). Not that obvious as the current tube is built in purpose ontop the Path3D which solves the bad twistting default behavior._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2015-11-22T11:56:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks Jerome._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I thought I was able to overcome this problem in the past by doubling up on the first and last vectors to force the normal I want onto the path.  It doesn_t_t seem to work now._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#19HCIZ%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#19HCIZ#3_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I wish I could find the old PG where I thought I got that to work._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]