[{"Owner":"Vousk-prod.","Date":"2015-04-16T19:17:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello community_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Is there a way to know the distance between the camera and the nearest poly in front of the camera ? (not the pivot point of the first mesh hit_co_ its surface...)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_More clearly_co_ see attached graphic_co_ how to determine _dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_1. distance between camera and the nearest poly in the central axis of the camera  (red distance)_lt_/p_gt__lt_p_gt_2. distance between camera and the nearest poly in the whole viewport  (green distance)_lt_/p_gt__lt_p_gt_3. (more difficult I presume) _qt_orthographic distance_qt_ between camera and the nearest poly (I don_t_t know if it_t_s the right name_co_ it would be the distance between camera and the plane parallel to camera passing throught the nearest poly)  (blue distance)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Far above my math knowledge... _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wacko.png_qt_ alt_eq__qt__dd_wacko_dd__qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_04_2015/post-6528-0-90710400-1429211226.jpg_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_04_2015/post-6528-0-90710400-1429211226.jpg_qt_ data-fileid_eq__qt_4082_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_post-6528-0-90710400-1429211226.jpg_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-04-16T22:03:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_That_t_s quite a question _dd_-)_lt_/p_gt__lt_p_gt_As far as I know the only way to solve this is to use nearest neighbour algorithms. Sorting your points in a kd tree ( _lt_a href_eq__qt_http_dd_//en.m.wikipedia.org/wiki/K-d_tree_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//en.m.wikipedia.org/wiki/K-d_tree_lt_/a_gt_) or an octree will probably give you faster results_co_ but the preparation takes time. With a simple mesh like a cube inspecting that won_t_t take too long. With a complex mesh expect a performance reduction_co_ unless you use a web worker. Then expect late results _dd_-) _lt_/p_gt__lt_p_gt_Getting the nearest poly and not the vertex is possible using ray tracing. Maybe first run nearest neighbour search_co_ and then use ray tracing to all polys that they are a part of. But this is just a quick solution I thought if now_co_ never tested it._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2015-04-18T06:11:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_For the red part and green_co_ I would run a ray from the camera in the _t_Z_t_ direction (for the red) and _t_Z_t_ . camera.fov direction (green). These ray would return the first picked mesh_co_ and thus distance._lt_/p_gt__lt_p_gt_I have no idea for the blue part._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"NasimiAsl","Date":"2015-04-18T08:02:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_how much important that problem i have solution  with shader that is need new scene and some mathematical progress but it is faster than sorting and raycast._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-04-18T10:19:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Can you know the angle between red and green rays ?_lt_/p_gt__lt_p_gt_If yes_co_ a simple  green_distance * cosinus(angle) will give you the blue distance_co_ I guess_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-04-18T11:08:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks for your answers._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@RaanaW_dd_ that_t_s sounds a really heavy cost for performance_co_ and since result should be real time I can_t_t use webworkers..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@Temechon_dd_ that was my first idea_co_ but I thought that ray would give me the distance to the pivot point of the first mesh hit_co_ not the surface. Will I get the surface distance ? That would be great indeed._lt_/p_gt__lt_p_gt_For the green one_co_ I don_t_t understand what you mean by _t_Z_t_ camera.fov direction. The camera.fov is a float_co_ not a vector... I don_t_t see how to get a direction _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wacko.png_qt_ alt_eq__qt__dd_wacko_dd__qt__gt_  (and if by this method you mean getting the distance at the limit of the field of view - not sure if this was your idea_co_ since I don_t_t completly get it -_co_ my drawing is just an example and the corner of the box seams to be at the limit of the frustum but it_t_s not the case_co_ the idea is to manage to get the distance for any kind of mesh_co_ anywhere in the view_co_ as long as it is the closest to camera)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@NasimiAsl_dd_ so you_t_re creating real time a clone of your scene_co_ assigning material with proper shader to compute those kind of distance ? (and that is more performant than raycasting ?)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-04-18T11:13:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@jerome_dd_ No I don_t_t know any angle at all_co_ since the box in the drawing is just an example_co_ in real case that would be any mesh in a scene_co_ with any possible shape_co_ and those meshes are moving_co_ and the camera also... _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_And to make it even simpler_co_ the scene content is not known in advance _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_laugh.png_qt_ alt_eq__qt__dd_lol_dd__qt__gt_ _dd_lol_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But if I_t_m able to send the green ray to determine its distance_co_ I_t_ll be able to know the angle and calculate the blue one (well_co_ I presume... _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"NasimiAsl","Date":"2015-04-18T11:53:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_span_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/user/6528-vousk-prod/_qt_ title_eq__qt__qt__gt_Vousk-prod._lt_/a_gt__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_yes _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_performant than _lt_strong_gt_live _lt_/strong_gt_raycasting not single ray cast  ._lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_shader is not slower than standard material (standard material is a managed shader )._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt__lt_p_gt_for mesh id just set a color (256*256*256) and for distance just u need set alpha_sm__lt_/p_gt__lt_p_gt_// d is range of see_lt_/p_gt__lt_p_gt_// color_id converted from id_lt_/p_gt__lt_p_gt_shader fragment  _eq_ vec4(color_id _co_ distance(camera_co_ pos)*d)_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_so you have it just need  a many camera ( 3 or 4 ) and long viewport like (10px x 150px)   for  see all around and just find laower than alpha and read rgb to get id_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2015-04-18T11:59:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt_Will I get the surface distance ? That would be great indeed._lt_p_gt_ _lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_Yes_co_ ray.distance gives the distance between the ray origin and ray.pickedPoint._lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt_ I don_t_t understand what you mean by _t_Z_t_ camera.fov direction_lt_p_gt_ _lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_Z dot camera.fov _dd_ camera.fov is an angle (the max angle you can see in front of the camera)_co_ so you can get the vector result of the Z vector (0_co_0_co_1) multiply by this angle. I don_t_t know if I_t_m clear _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"NasimiAsl","Date":"2015-04-19T13:20:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@_lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/user/6528-vousk-prod/_qt_ title_eq__qt__qt__gt_Vousk-prod._lt_/a_gt_ can you fix it ? _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-04-19T14:29:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_79405_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_13885_qt_ data-ipsquote-username_eq__qt_NasimiAsl_qt_ data-cite_eq__qt_NasimiAsl_qt_ data-ipsquote-timestamp_eq__qt_1429449652_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_@_lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/user/6528-vousk-prod/_qt_ title_eq__qt__qt__gt_Vousk-prod._lt_/a_gt_ can you fix it ? _lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Not for the moment_co_ I_t_m pretty busy on some other (urgent) things_co_ this distance calculation stuff is for an idea I_t_ll eventually do later_co_ when I have time _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ve never written a shader so I don_t_t totally understand what your solution is_co_ but it seams pretty smart _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_happy.png_qt_ alt_eq__qt_^_^_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/happy@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Trying to understand your idea made me think of an other way_dd_ I may use the BJS depth renderer and analyse produced depth map to determine the closest point to the camera_co_ and then send a ray to that point to get the distance (or maybe the depth map can indicate me direclty the exact distance ?)._lt_/p_gt__lt_p_gt_Do you think this would cost much in terms of performance ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"NasimiAsl","Date":"2015-04-19T19:23:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_it is use more ram and make 2 scene but you can manage  it . if you can run all process in gpu (shader) you have performance ._lt_/p_gt__lt_p_gt_i ask you how match important this task. if it is necessary i can write sample shader for do this._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-04-20T17:40:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The purpose is to enhance the Babylon lens effect post process_co_ so the task is not _qt_important_qt__co_ but that would be great._lt_/p_gt__lt_p_gt_However_co_ I_t_m not sure if the need of creating a second scene would not be too much restrictive for the generic usage of BabylonJS._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]