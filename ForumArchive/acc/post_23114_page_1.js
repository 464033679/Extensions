[{"Owner":"yuccai","Date":"2016-06-10T12:49:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI know that the worldMatrix and projectionMatrix are computed from other properties (like position/rotation/rotationQuaternion/scaling for worldMatrix and fieldOfView/ZNear/ZFar for projectionMatrix). I would like to know if I can proceed the inverse way. I mean I want to set these 2 matrices and automatically update the other properties which depend on it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for your help_co_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2016-06-10T13:00:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThere is currently not a way to update in that direction.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2016-06-10T13:06:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYou could probably write a function that executes in beforeRender that could do this using Matrix.decompose.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Kesshi","Date":"2016-06-10T13:37:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tto set the matrix for a mesh i use this typescript function_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_public static setMatrix(pMesh_dd_ BABYLON.AbstractMesh_co_ pMatrix_dd_ BABYLON.Matrix)_dd_ boolean \n{\n    let tPos _eq_ BABYLON.Vector3.Zero()_sm_\n    let tRot _eq_ new BABYLON.Quaternion()_sm_\n    let tScale _eq_ new BABYLON.Vector3(1_co_ 1_co_ 1)_sm_\n    if (pMatrix.decompose(tScale_co_ tRot_co_ tPos)) {\n        pMesh.position _eq_ tPos_sm_\n        pMesh.rotationQuaternion _eq_ tRot_sm_\n        pMesh.scaling _eq_ tScale_sm_\n        return (true)_sm_\n    }\n    return (false)_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"yuccai","Date":"2016-06-10T13:56:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI know this possibility to set the worldMatrix but in this case I lost informations _dd_ \n_lt_/p_gt_\n\n_lt_ol_gt__lt_li_gt_\n\t\tI have the matrix to set A\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tI compute the the scaling_co_ rotation_co_ position from A thanks to decompose\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tI get a new matrix B but  B is similar to A but not exactly the same.\n\t_lt_/li_gt_\n_lt_/ol_gt__lt_p_gt_\n\tI found a solution for this case _dd_\n_lt_/p_gt_\n\n_lt_ol_gt__lt_li_gt_\n\t\tDefine a parent mesh that I call handler\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tUse handler.setPivotMatrix(A)\n\t_lt_/li_gt_\n_lt_/ol_gt__lt_p_gt_\n\tThe visual result is exactly the same as if I had set A to the worldMatrix of the mesh I want to move but I can_t_t find this kind of solution to set the projectionMatrix of a camera. I can retrieve fov/znear/zfar/aspectRatio from the original matrix_co_ then set these values to the corresponding properties of the camera but then the projection matrix is still different of the original.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-06-13T16:04:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tHey ProjectionMatrix is a different matrix computed here_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/babylon.camera.ts#L413_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/babylon.camera.ts#L413_lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]