[{"Owner":"masterdon","Date":"2017-06-29T18:49:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Everyone_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am working on 2D planner. I have this demo _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#SUXKHY%2337_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#SUXKHY#37_lt_/a_gt_8I am facing following issue_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) As you can see i have created custom mesh (window object named w1) on top left corner of design. The code is at\n_lt_/p_gt_\n\n_lt_p_gt_\n\tline 369_co_370.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis window object have y index greater than another slot element(green slots) on top of which it lies. So there is no collision. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am aware that mesh border rendering flickers when the borders of mesh collides with each other.but i am ensuring that it is not colliding with object below it. how can i fix flickering ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) The text(W1) is created on top of plane having default white color. this plane hides green slots which are behind them. I have tried setting alpha property to make the plane transparent. however it is also changing transparency for text on it. How can i fix this\n_lt_/p_gt_\n\n_lt_p_gt_\n\tline 138\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-06-29T20:42:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_180149_qt_ data-ipsquote-contentid_eq__qt_31363_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1498762189_qt_ data-ipsquote-userid_eq__qt_26793_qt_ data-ipsquote-username_eq__qt_masterdon_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t2 hours ago_co_ masterdon said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\ti am ensuring that it is not colliding with object below it.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tHi M.  I_t_m not believing that.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#SUXKHY%2339_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#SUXKHY#39_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFixed camera to better position_co_ moved renderLayout() into mainline (it had a var in front of it_co_ yet it was outside the scene code_co_ nesting-wise)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI moved w1a and w1b OFF-OF the green wall.  Notice that THEY are z-fighting within themselves (y-fighting_co_ in your case).  Why is there so many mesh... used to make a single window object?  5?  6?  Wow.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut anyway_co_ there is some y-fighting among those 5-6 objects that make a SINGLE window (use control-drag to see sparkling on w1a and w1b).  You need to fix that... before you can test if green wall has y-fighting issue with w1a and w1b window items.  Actually_co_ I think the green walls have some y-fighting_co_ too.  They flicker pretty good... with the mousewheel.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI added a scene.meshes dumper... see console.  Not very handy_co_ because the parts are named _qt_box1_qt__co_ and I can_t_t determine which mesh is for which window/wall segment.  Too many _t_box1_t_  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tSorry if this hurts your feelings_co_ but createWindow() func is out of control.  As you study programming more and more_co_ you_t_ll learn that no function... should be more than about 15 lines of code.  If it gets big_co_ often it can be made _qt_modular_qt_.  Your createWindow() func_co_ AND your renderLayout() can both be modularized into MANY smaller_co_ yet nicelyNamedPerPurpose() functions.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen you get modular_co_ and get your indents nice_co_ and get your func scoping mastered_co_ it will be LOTS EASIER for both you and us... to find troubles.  It is very difficult for us helpers to see exactly what createWindow() DOES_co_ because it is a complicated pile of _qt_spaghetti_qt_. What if createWindow looked like this...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tvar createWindow _eq_ function(windowOptionsObject) {_lt_br /_gt_\n\t     var base _eq_ createBasePart(windowOptionsObject)_sm__lt_br /_gt_\n\t     windowOptionsObject.base _eq_ base_sm_  // take base along... inside suitcase... to all future places_lt_br /_gt_\n\t     addFrameParts(windowOptionsObject)_sm_ // adds more crap to base_lt_br /_gt_\n\t     addTint(windowOptionsObject)_sm_ // adds more crap to base_lt_br /_gt_\n\t     // etc._lt_br /_gt_\n\t     return options.base_sm__lt_br /_gt_\n\t}\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSee how we are calling little do-specific-thing funcs_co_ one after another_co_ and sending a single _qt_suitcase_qt_ (windowOptionsObject) as a parameter? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tEach little func... adds another part to the window or base.  It is similar to a _qt_jump table_qt_.  See how clean it is to read and troubleshoot?  You can easily turn-off/on these _qt_modules_qt_ and that helps determine WHICH little _qt_module_qt_ is causing the y-fighting on the windows.  Easy troubleshooting.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBuild many little funcs_co_ each well-named_co_ and soon... your code will _qt_read_qt_ like a sentence.  CreateBasePart(options)_co_ AddFrameParts(options)_co_ AddGlassTint(options)_co_ etc.  Easy to read_co_ right?  Each function module... receives an options object.... the same one for each module/littleFunc.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou would NOT do this anymore...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t             createWindow(horizontalSlotWidth_co_ 0.001_co_ horizontalSlotHeight_co_ -92.5_co_ 54.1_co_ 59_co_ 1.5_co_ 1_co_ 3_co_ 1_co_ 1.5_co_ true_co_ _qt_w1a_qt_)_sm__lt_br /_gt_\n\t             createWindow(1_co_ 0.001_co_ 6_co_ -96_co_ 54.1_co_ 55.5_co_ 1_co_ 0.5_co_ 3_co_ 0.5_co_ 1_co_ false_co_ _qt_w1b_qt_)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt_\n\tYou would_co_ instead... do...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tw_options _eq_ {}_sm__lt_br /_gt_\n\tw_options.xpos _eq_ -92.5_sm__lt_br /_gt_\n\tw_options.ypos _eq_ 54.1_sm__lt_br /_gt_\n\tlots more...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen finished building the w_options object... then do...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tcreateWindow(w_options)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tw_options is like a suitcase full of settings and values_co_ and it can be sent to EACH module (each littleFunc) in your createWindow() function.  The _lt_em_gt_w_options_lt_/em_gt_ suitcase..._lt_em_gt_ _lt_/em_gt_contains ALL the values needed... to make a complete window.  At first... it will seem annoying to HAVE TO build a complete w_options object for EACH window you want to create_co_ but later_co_ when you want to make a change to a property name_co_ or add new features to your project... you will LOVE the w_options object... because it is so easy to expand or stream-line.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe w_options suitcase-o-values... will become a good friend.  It is like a giant bucket of _qt_everything needed to make a window_qt__co_ and you will find that your window making machine... LOVES IT.  If there are values in the suitcase set to _lt_em_gt_null_lt_/em_gt_ (such as w_options.tintColor)... then the createWindow() machine (or one of its sub-contractor funcs) can say... _qt_oh_co_ no tintColor... so I_t_ll make the glass perfectly clear_qt_.  The createWindow func becomes _qt_smart_qt_... and can check the w_options object to make sure it has everything it needs. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen... it starts sub-contracting to smaller companies.   First_co_ goto Ed_t_s BaseMaker shop (take the w_options suitcase).  Next_co_ goto Steve_t_s Framemakers shop (take the w_options suitcase).  Next... Mike_t_s Tinting Shop (take the suitcase).  Farm it out to little funcs... and your code will be MUCH more organized and MUCH easier to read/troubleshoot.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s called modularizing_co_ and it is a programmer_t_s best friend and lifelong companion.  It will make your code VERY re-usable_co_ too.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut meantime_co_ I think you still have some y-fighting issues.  Good luck.  Try to think about modularizing.  Right now_co_ your code is... umm... scary-big and difficult to read.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPS_dd_ I_t_m terrible at modularizing_co_ but I know it is needed... when projects get XX big.  You... are nearing that point_co_ M.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"masterdon","Date":"2017-07-01T10:56:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p style_eq__qt_color_dd_#222222_sm__qt__gt_\n\tHi_lt_span_gt_ _lt_/span_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ style_eq__qt_color_dd_#1155cc_sm__qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt__co_ \n_lt_/p_gt_\n\n_lt_p style_eq__qt_color_dd_#222222_sm__qt__gt_\n\tThanks a lot for quick response(as always) \n_lt_/p_gt_\n\n_lt_p style_eq__qt_color_dd_#222222_sm__qt__gt_\n\tI was going to optimize the code(based on some quality checkpoints that i have already listed down) once i am done with achieving the functionality. That is the reason for all this mess. and i apologize for sharing such messed up code. \n_lt_/p_gt_\n\n_lt_p style_eq__qt_color_dd_#222222_sm__qt__gt_\n\tI am trying to improvise on all the checkpoints that you have mentioned here. \n_lt_/p_gt_\n\n_lt_p style_eq__qt_color_dd_#222222_sm__qt__gt_\n\t1) For windows_co_ I am trying to create a custom mesh. using vertices and faces. instead of using 6-8 sub meshes.  I hope they will help in eliminating the flickering problem.\n_lt_/p_gt_\n\n_lt_p style_eq__qt_color_dd_#222222_sm__qt__gt_\n\t2) for green slots(non shear walls)_co_ some edges are still flickering. though they have not collided with the other meshes. why so?\n_lt_/p_gt_\n\n_lt_p style_eq__qt_color_dd_#222222_sm__qt__gt_\n\t3) In one of the thread_co_ you have discussed about using 2d lines as borders for boxes. I had hard time implementing that.l failed to scale such lines when camera is zoomed in and out. Do we have any example using meshes with 2d lines that scales down in such scenario.\n_lt_/p_gt_\n\n_lt_p style_eq__qt_color_dd_#222222_sm__qt__gt_\n\t \n_lt_/p_gt_\n\n_lt_p style_eq__qt_color_dd_#222222_sm__qt__gt_\n\tThanks a lot.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-07-03T05:53:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  I understand about messy code.  I do the same.  But_co_ difficult for helpers to find problem areas.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t#1.  That won_t_t help flickering.  Flickering is from z-fighting (y-fighting).... but... might be caused by edges renderer.  I turned it off_co_ and instead used .showBoundingBox _eq_ true_sm_... for NonShearWall_co_ ShearWall_co_ and Corridors.  Still got flicker on green walls_co_ but perhaps not as bad.  _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#SUXKHY%2340_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#SUXKHY#40_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t#2.  My theory is that the BORDERS are z-fighting (z and x fighting).   Due to the black border around each wall segment_co_ each is overlapping the black border line of the adjacent wall section (the one next to it).  That is why we ONLY see flickering on the black borders of the green walls (and w1a and w1b_co_ also_co_ but that_t_s later). _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tThe green parts of the green walls... is fine.  No flicker.  But the black borders are x/z-fighting... imho.  The wall segments are overlapping in X and Z axis.  We have been troubleshooting Y-axis overlap... and maybe that is why we are confused.  We have been searching for problems on _lt_u_gt_wrong axes_lt_/u_gt_.  Perhaps Y axis is fine... but X/Z... not so good.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere was one other thing I did in #40 PG.  ALMOST every time you used _lt_em_gt_verticalSlotWidth_lt_/em_gt_ and _lt_em_gt_horizontalSlotWidth_lt_/em_gt__co_ it was followed by a number...  0.001.  I changed ALL of those... to 0.01.  Not sure why.  heh.  I was playing.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI wanted to make more space between EACH green wall segment.  White-space.  I want to test... IF we had more _qt_gap_qt_ between green wall segments... would all flickering stop?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think it would.  Put gaps in-between each green wall section (if you can)_co_ and I think flickering is gone.  (maybe)  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tCan you test that?  Do you know how to tell renderLayout() to leave gaps between each green wall section?  Lots of gap/space... so we can see some white background in each gap.  THEN we look for flicker_co_ again.  I think it will be gone.  I think green wall flicker... is caused by black borders X/Z-fighting.  (I said that already_co_ didn_t_t I?)  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t#3.  Yes_co_ we can try BJS LinesSystem for borders on wall sections and/or other uses.  It should scale fine.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLines2D (part of the Canvas2D system) might _lt_u_gt_not_lt_/u_gt_ work well_co_ because-of scaling reasons (and perspective)_co_ as you stated. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut Lines_co_ DashedLines_co_ and _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#2K1IS4%2317_qt_ rel_eq__qt_external nofollow_qt__gt_LineSystem_lt_/a_gt_ should work fine.  They are part of our _qt__lt_a href_eq__qt_http_dd_//doc.babylonjs.com/tutorials/mesh_createxxx_methods_with_options_parameter#parametric-shapes_qt_ rel_eq__qt_external nofollow_qt__gt_parametric shapes_lt_/a_gt__qt_ system. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut... hmm.  I_t_m not sure that lines are the best way to put borders on the wall segments. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy opinion?  Use no edges renderer_co_ use no .showBoundingBox_co_ use no Lines borders_co_ use no custom mesh_co_ but instead...  use a black plane (base?) positioned underneath a slightly-smaller green/yellow plane.  If user wants all borders removed (continuous green wall)... then change color on all black base planes... to color of plane ATOP each base (either green or yellow_co_ so far).  The black bases (borders) would SEEM to disappear if user wanted to hide them_co_ but they are actually ONLY changing colors of base planes.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSoooo... your renderLayout would lay-out black bases (at its core/root).  Some bases would have yellow planes atop_co_ some green.  All your _qt_wall items_qt_ would start with a black base_co_ and be layered-up from there... using only planes.  The black planes would be slightly larger (x/z) than the green/yellow planes... so that would cause a black border.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  Pretty easy.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI know that flickering is driving you crazy.  Sorry.  Don_t_t be discouraged.  We are near-to discovering the reason.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  Try to add an easy-settable option to renderLayout()... so you can keep some whitespace between each wall segment... for testing purposes.  Then... we will look for flicker.  Sound ok?  Good luck!  Be well!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]