[{"Owner":"Vousk-prod.","Date":"2014-08-05T01:50:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yup everyone_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Some little questions about proper scene management._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_1. Is _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_scene.executeWhenReady(callback)_lt_/span_gt_ equivalent to something like _lt_em_gt__qt_as soon as _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_scene.isReady_lt_/span_gt__co_ call _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_callback_lt_/span_gt__qt__lt_/em_gt_ ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_2. We can load complete scene or meshes[ ] from _lt_em_gt_.babylon_lt_/em_gt_ files with_lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_SceneLoader.Load(rootUrl_co_ sceneFilename_co_ engine_co_ onsuccess_co_ progressCallBack_co_ onerror)_lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_SceneLoader.ImportMesh(meshesNames_co_ rootUrl_co_ sceneFilename_co_ scene_co_ onsuccess_co_ progressCallBack_co_ onerror)_lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Both methods have that great _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_onsuccess _lt_/span_gt_callback. The loading is processed in a parallel thread_co_ and it sounds like _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_onsuccess _lt_/span_gt_is called only when the scene/meshes[ ] is fully loaded._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But when I put this for my _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_onsuccess _lt_/span_gt_callback _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_function (scene -or meshes_co_ particles_co_ skeletons- ) {             scene.executeWhenReady( function() { ... do some init operations on meshes_co_ like changing material etc... } )_sm_}_lt_/pre_gt__lt_p_gt_Time tests show that the _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_scene.executeWhenReady_lt_/span_gt_ is sent later than the _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_onsuccess_lt_/span_gt__co_ as if it is waiting for some more stuff to load._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What the _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_onsuccess _lt_/span_gt_and _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_executeWhenReady _lt_/span_gt_callbacks are respectively waiting for ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"burbonvagin","Date":"2014-08-05T04:16:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_about two thirds of the way down _lt_a href_eq__qt_http_dd_//blogs.msdn.com/b/eternalcoding/archive/2013/06/28/babylon-js-how-to-load-a-babylon-file-produced-with-blender.aspx_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//blogs.msdn.com/b/eternalcoding/archive/2013/06/28/babylon-js-how-to-load-a-babylon-file-produced-with-blender.aspx_lt_/a_gt_ in a code comment it says that scene.executeWhenReady waits _qt__lt_span style_eq__qt_color_dd_#008000_sm__qt__gt_for textures and shaders to be ready_lt_/span_gt__qt_. Maybe images haven_t_t been loaded yet or maybe the textures and shaders just need to be prepared._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]