[{"Owner":"webGLmmk","Date":"2017-08-09T04:15:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tUsing a playground scene originating from this post/thread_dd_ @wingnut\n_lt_/p_gt_\n_lt_iframe allowfullscreen_eq__qt__qt_ data-controller_eq__qt_core.front.core.autosizeiframe_qt_ data-embedcontent_eq__qt__qt_ data-embedid_eq__qt_embed3923544830_qt_ scrolling_eq__qt_no_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/topic/22296-how-to-orbit-a-moving-object/?tab_eq_comments&amp_sm_do_eq_embed&amp_sm_comment_eq_127181&amp_sm_embedComment_eq_127181&amp_sm_embedDo_eq_findComment#comment-127181_qt_ style_eq__qt_height_dd_279px_sm_max-width_dd_500px_sm__qt__gt__lt_/iframe_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tadding another planet_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#2FPT1A%23157_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#2FPT1A#157_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tand I_t_m trying to figure out how to get  the planets to start at different locations along the orbit. I understand how adjusting the x and z parameters inside the planet.position _eq_Vector3  INSIDE the registerBeforeRender adjusts the orbit path itself_co_ making it oblong etc....right now im just sticking with the same circular orbit. I just want the outer green planet to start at a different place_co_ perhaps off to the right. Setting the position outside the registerBeforeRender does nothing - it gets overridden by the position inside RegisterBeforeRender. Im not sure if what Im missing is related to that function_co_ or what....i tried a few things but without 100% understanding of whats going on here...Trig skills a bit weak_co_ working on that...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"webGLmmk","Date":"2017-08-09T04:43:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOk so simply by playing with the numbers_co_ I got it to do what I wanted to do. _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#2FPT1A%23158_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#2FPT1A#158_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere are now two variables_co_ alpha_co_ and alpha 2_co_ they both store Math.PI. Outside the renderBeforeeRegister function.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tInside the rendereBeforeRegister function_co_ lines 87 and 90. set the  planet into orbit  with the parameters passed into X Y and Z.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI got what I wanted it to do by increasing the number of radians passed into Math.sin &amp_sm_ Math.cos_dd_ (alpha + 2_co_ or whatever).  Going to be struggling for a while to understand this entire line of code_co_ and why it works...any direction or insight on that would be very much appreciated_co_  like_co_ Why is it that If these lines are NOT inside registerBeforeRender_co_ the planets don_t_t orbit......tho I_qt_m sure other posts have more pressing issues ... _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tback to the unit circle...?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2017-08-09T19:33:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSorry you have had to wait for a while for a reply.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHope this helps.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBabylon.js draws or renders a frame up to 60 times a second. Where and at what angle a mesh is drawn depends on values you have set for position and rotation. RegisterBeforeRender updates any values set within this loop before drawing the next frame. So anything out side this loop is set on the first render call unless registerBeforeRender updates it. If registerBeforeRender does not change a particular value then this remains the same for every frame.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBy incrementing the angle inside the registerBeforeRender loop this increments the rotation each frame for an orbiting planet.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]