[{"Owner":"Pryme8","Date":"2016-08-31T03:35:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSo_co_ I_t_m sure some of you have heard that I_t_m working up a web worker and Physics Tutorial..._lt_br /_gt_\n\tI swear in the end this is gonna be all BJS related... I just gotta get to that point first._lt_br /_gt__lt_br /_gt_\n\tUmm Ive kinda ran into a thing that I_t_m having trouble wrapping my mind around... _lt_a href_eq__qt_https_dd_//pryme8.github.io/fishsticks/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//pryme8.github.io/fishsticks/_lt_/a_gt__lt_br /_gt_\n\tso I know its glitchy_co_ and I have not told it what to do when both objects have mass that_t_s why it freaks out when the little balls collide..._lt_br /_gt__lt_br /_gt_\n\tbut um how exactly do I get the distance I need to separate my objects after the collision?_lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_Core.Test.Circle2Circle _eq_ function (a_co_ b_co_ preCalc) {\n\t\n\n    var differenceV _eq_ b.position.clone().subtract(a.position)_sm_\t\n\t\n    var totalRadius _eq_ a.body.radius + b.body.radius_sm_\n\t\n    var totalRadiusSq _eq_ totalRadius * totalRadius_sm_\n\t\n    var distanceSq _eq_ differenceV.len2()_sm_\n    if (distanceSq &gt_sm_ totalRadiusSq) {\n      return false_sm_\n    }\n    \n\tvar response _eq_ {}_sm_\n  \n      var dist _eq_ Math.sqrt(distanceSq)_sm_\n      response.a _eq_ a_sm_\n      response.b _eq_ b_sm_\n      response.overlap _eq_ totalRadius - dist_sm_\n      response.overlapN _eq_ differenceV.clone().normalize()_sm_\n      response.overlapV _eq_ differenceV.clone().scale(response.overlap)_sm_\n      response.aInB_eq_ a.body.radius &lt_sm__eq_ b.body.radius &amp_sm_&amp_sm_ dist &lt_sm__eq_ b.body.radius - a.body.radius_sm_\n      response.bInA _eq_ b.body.radius &lt_sm__eq_ a.body.radius &amp_sm_&amp_sm_ dist &lt_sm__eq_ a.body.radius - b.body.radius_sm_\n   \n    return response_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tis the function generating the hit results for sphere on sphere action ^_^... umm I have everything I can think of... and tried doing it the way I thought I was supposed to which was take the overlapN and scale it by the overlap... which should give me the amount that the two need to separate...  but when I do that the ball makes a HUGE jump off the bottom ball..._lt_br /_gt__lt_br /_gt_\n\tI scaled the overlap normal by 10 just to see if that would work and it did (for general purposes)_co_ but before I start programing in bounciness and friction_co_ was really hoping to get a more accurate separation distance._lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-08-31T16:15:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_ who_t_s our math star?_lt_br /_gt__lt_br /_gt_\n\tIm starting to think i just need to move it by the overlapV - the radius of the sphere?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-08-31T17:48:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYOU are the current _qt_math star_qt_  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-08-31T19:16:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tthat made me want to smile and frown at the same tie &gt_sm__&lt_sm__lt_br /_gt__lt_br /_gt_\n\t**EDIT_lt_br /_gt_\n\tFigure it out_dd__lt_br /_gt_\n\tp _eq_ calc.newPos.clone().subtract(hit.overlapV)_sm__lt_br /_gt_\n\tv _eq_ calc.newVel.clone().reflect(hit.overlapN)_sm__lt_br /_gt__lt_br /_gt__lt_br /_gt_\n\tMy collision prediction works for pretty fast moving objects_co_ but ill include the option to do substeps if you need things that are really fast... Convex and Non-Convex Polygon support soon.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]