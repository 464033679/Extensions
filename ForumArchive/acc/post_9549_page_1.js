[{"Owner":"HugoMcPhee","Date":"2014-09-29T17:32:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi I_t_ve been trying to get a greyscale texture of the depth buffer to be able to use it to create a _qt_depth of field_qt_ post process_co_ however I can_t_t figure out the best way to go about it._lt_/p_gt__lt_p_gt_The result i_t_m after is like this _lt_img src_eq__qt_http_dd_//images.bit-tech.net/content_images/2006/11/nvidia_geforce_8800_gtx_g80/z-buffer2.jpg_qt_ alt_eq__qt_z-buffer2.jpg_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_To my understanding it seems a material has to be made with a custom vertex and fragment shader that converts (and linearises) values from gl_FragCoord.z into values in gl_FragColor_co_ and this has to be done outside of creating a post process because post processes can_t_t use vertex shaders. I_t_m wondering if there is a simple way to achieve this in babylon.js or if anyone has got it working so far?_lt_/p_gt__lt_p_gt_Any help or hints in the right direction would be greatly appreciated_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-09-29T17:57:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I suggest using custom render targets._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_First you have to create a _lt_em_gt_RenderTargetTexture_lt_/em_gt__lt_/p_gt__lt_p_gt_Then add it to scene._lt_em_gt_customRenderTargets_lt_/em_gt_. This way the scene will be first rendered into your texture_lt_/p_gt__lt_p_gt_Then create a material that output _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_gl_FragCoord.z into _lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_gl_FragColor_lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_Finally you can use _lt_/span_gt__lt_em_gt_RenderTargetTexture.onBeforeRender _lt_/em_gt_callback to affect your material to meshes and use _lt_em_gt_RenderTargetTexture.onAfterRender_lt_/em_gt_ callback to restore materials back_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Does it make sense?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"HugoMcPhee","Date":"2014-09-29T18:53:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thankyou! that worked perfectly here_t_s my result_lt_/p_gt__lt_p_gt__lt_img src_eq__qt_http_dd_//oi60.tinypic.com/166yalu.jpg_qt_ alt_eq__qt_166yalu.jpg_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The javascript code_dd__lt_span style_eq__qt_color_dd_rgb(0_co_0_co_0)_sm_font-size_dd_13px_sm_background-color_dd_rgb(250_co_250_co_250)_sm__qt__gt_ _lt_/span_gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var originalMaterials _eq_ []_sm_newScene.meshes.forEach(function(m) {        //if (predicate(m)) {            originalMaterials.push(m.material)_sm_        //}    })_sm_var depthMaterial _eq_ new BABYLON.ShaderMaterial(_qt_depthShader_qt__co_ newScene_co_ _qt_./depth_qt__co_{    attributes_dd_ [_qt_position_qt__co_ _qt_uv_qt_]_co_    uniforms_dd_ [_qt_worldViewProjection_qt_]})_sm_var depthTextureRTT _eq_ new BABYLON.RenderTargetTexture(_qt_depthRTT_qt__co_ 512_co_ newScene)_sm_newScene.customRenderTargets.push(depthTextureRTT)depthTextureRTT.onBeforeRender _eq_ function() {    newScene.meshes.forEach(function(m) {            // This is where the new screenshot is from            m.material _eq_ depthMaterial_sm_    })_sm_}_sm_depthTextureRTT.onAfterRender _eq_ function() {    newScene.meshes.forEach(function(m_co_i) {            // I commented out this part to get the screenshot            m.material _eq_ originalMaterials[i]_sm_    })_sm_}_sm_ _lt_/pre_gt__lt_p_gt_The fragment shader _qt_depth.fragment.fx_qt_ (with help taken from this page _lt_a href_eq__qt_http_dd_//www.ozone3d.net/tutorials/glsl_fog/p04.php?lang_eq_1_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.ozone3d.net/tutorials/glsl_fog/p04.php?lang_eq_1_lt_/a_gt_ )_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_#ifdef GL_ESprecision mediump float_sm_precision mediump int_sm_#endif        // Refs        uniform sampler2D textureSampler_sm_ void main() {    float z _eq_ 1.0 - (gl_FragCoord.z / gl_FragCoord.w) / 40.0_sm_    gl_FragColor _eq_ vec4(z_co_ z_co_ z_co_ 1.0)_sm_}_lt_/pre_gt__lt_p_gt_and the vertex shader _qt_depth.vertex.fx_qt__dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_#ifdef GL_ES        precision mediump float_sm_#endif    // Attributes    attribute vec3 position_sm_    attribute vec2 uv_sm_    uniform mat4 worldViewProjection_sm_void main(void) {    vec4 outPosition _eq_ worldViewProjection * vec4(position_co_ 1.0)_sm_\tgl_Position _eq_ outPosition_sm_}_lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-09-29T18:57:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_here is the code just for you_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs.com/?CUSTOMRENDERTARGET_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/?CUSTOMRENDERTARGET_lt_/a_gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var CreateCustomRenderTargetTestScene _eq_ function (engine) {    var scene _eq_ new BABYLON.Scene(engine)_sm_    var camera _eq_ new BABYLON.ArcRotateCamera(_qt_Camera_qt__co_ 0_co_ 0_co_ 10_co_ BABYLON.Vector3.Zero()_co_ scene)_sm_    var material _eq_ new BABYLON.StandardMaterial(_qt_kosh_qt__co_ scene)_sm_    var sphere1 _eq_ BABYLON.Mesh.CreateSphere(_qt_Sphere1_qt__co_ 32_co_ 3_co_ scene)_sm_    var sphere2 _eq_ BABYLON.Mesh.CreateSphere(_qt_Sphere2_qt__co_ 32_co_ 3_co_ scene)_sm_    var sphere3 _eq_ BABYLON.Mesh.CreateSphere(_qt_Sphere3_qt__co_ 32_co_ 3_co_ scene)_sm_    var sphere4 _eq_ BABYLON.Mesh.CreateSphere(_qt_Sphere4_qt__co_ 32_co_ 3_co_ scene)_sm_    var light _eq_ new BABYLON.PointLight(_qt_Omni0_qt__co_ new BABYLON.Vector3(-17.6_co_ 18.8_co_ -49.9)_co_ scene)_sm_    camera.setPosition(new BABYLON.Vector3(-15_co_ 3_co_ 0))_sm_    camera.minZ _eq_ 1.0_sm_    camera.maxZ _eq_ 100.0_sm_    engine.displayLoadingUI()_sm_    sphere1.position.x -_eq_ 5_sm_    sphere2.position.z -_eq_ 5_sm_    sphere3.position.z +_eq_ 5_sm_    sphere4.position.x +_eq_ 5_sm_    material.diffuseColor _eq_ BABYLON.Color3.Purple()_sm_    sphere1.material _eq_ material_sm_    sphere2.material _eq_ material_sm_    sphere3.material _eq_ material_sm_    sphere4.material _eq_ material_sm_    // Skybox    var skybox _eq_ BABYLON.Mesh.CreateBox(_qt_skyBox_qt__co_ 100.0_co_ scene)_sm_    var skyboxMaterial _eq_ new BABYLON.StandardMaterial(_qt_skyBox_qt__co_ scene)_sm_    skyboxMaterial.backFaceCulling _eq_ false_sm_    skyboxMaterial.reflectionTexture _eq_ new BABYLON.CubeTexture(_qt_Scenes/Customs/skybox/TropicalSunnyDay_qt__co_ scene)_sm_    skyboxMaterial.reflectionTexture.coordinatesMode _eq_ BABYLON.Texture.SKYBOX_MODE_sm_    skyboxMaterial.diffuseColor _eq_ new BABYLON.Color3(0_co_ 0_co_ 0)_sm_    skyboxMaterial.specularColor _eq_ new BABYLON.Color3(0_co_ 0_co_ 0)_sm_    skybox.material _eq_ skyboxMaterial_sm_    // depth material    BABYLON.Effect.ShadersStore[_qt_depthVertexShader_qt_] _eq_         _qt_#ifdef GL_ES\\n_qt_ +        _qt_precision mediump float_sm_\\n_qt_ +        _qt_#endif\\n_qt_ +        _qt_attribute vec3 position_sm_\\n_qt_ +        _qt_uniform mat4 worldViewProjection_sm_\\n_qt_ +        _qt_void main(void) {\\n_qt_ +        _qt_gl_Position _eq_ worldViewProjection * vec4(position_co_ 1.0)_sm_\\n_qt_ +        _qt_}_qt__sm_    BABYLON.Effect.ShadersStore[_qt_depthPixelShader_qt_] _eq_        _qt_#ifdef GL_ES\\n_qt_ +        _qt_precision mediump float_sm_\\n_qt_ +        _qt_#endif\\n_qt_ +        _qt_void main(void) {\\n_qt_ +        _qt_float depth _eq_  1.0 - (2.0 / (100.0 + 1.0 - gl_FragCoord.z * (100.0 - 1.0)))_sm_\\n_qt_ +        _qt_gl_FragColor _eq_ vec4(depth_co_ depth_co_ depth_co_ 1.0)_sm_\\n_qt_ +        _qt_}\\n_qt_ +        _qt__qt__sm_    var depthMaterial _eq_ new BABYLON.ShaderMaterial(_qt_depth_qt__co_ scene_co_ _qt_depth_qt__co_        {            attributes_dd_ [_qt_position_qt_]_co_            uniforms_dd_ [_qt_worldViewProjection_qt_]        })_sm_    depthMaterial.backFaceCulling _eq_ false_sm_    // Plane    var plane _eq_ BABYLON.Mesh.CreatePlane(_qt_map_qt__co_ 10_co_ scene)_sm_    plane.billboardMode _eq_ BABYLON.AbstractMesh.BILLBOARDMODE_ALL_sm_    // Render target    var renderTarget _eq_ new BABYLON.RenderTargetTexture(_qt_depth_qt__co_ 1024_co_ scene)_sm_    renderTarget.renderList.push(sphere1_co_ sphere2_co_ sphere3_co_ sphere4_co_ skybox)_sm_    scene.customRenderTargets.push(renderTarget)_sm_    renderTarget.onBeforeRender _eq_ function () {        for (var index _eq_ 0_sm_ index &lt_sm_ renderTarget.renderList.length_sm_ index++) {            renderTarget.renderList[index]._savedMaterial _eq_ renderTarget.renderList[index].material_sm_            renderTarget.renderList[index].material _eq_ depthMaterial_sm_        }    }    renderTarget.onAfterRender _eq_ function () {        // Restoring previoux material        for (var index _eq_ 0_sm_ index &lt_sm_ renderTarget.renderList.length_sm_ index++) {            renderTarget.renderList[index].material _eq_ renderTarget.renderList[index]._savedMaterial_sm_        }    }    // Plane material    var mat _eq_ new BABYLON.StandardMaterial(_qt_plan mat_qt__co_ scene)_sm_    mat.diffuseColor _eq_ BABYLON.Color3.Black()_sm_    mat.specularColor _eq_ BABYLON.Color3.Black()_sm_    mat.emissiveTexture _eq_ renderTarget_sm_    plane.material _eq_ mat_sm_    // Animations    var isReady _eq_ false_sm_    scene.registerBeforeRender(function () {        camera.alpha +_eq_ 0.01 * scene.getAnimationRatio()_sm_        if (!isReady &amp_sm_&amp_sm_ scene.isReady()) {            isReady _eq_ true_sm_            engine.hideLoadingUI()_sm_        }    })_sm_    return scene_sm_}_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"HugoMcPhee","Date":"2014-09-29T19:02:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Wow thanks heaps for making that example!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]