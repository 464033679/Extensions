[{"Owner":"amorgan","Date":"2017-07-05T02:13:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello all_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t    I found this tutorial for_co_ what seems like_co_ a good way to create terrain textures in blender_dd_ _lt_a href_eq__qt_https_dd_//www.youtube.com/watch?v_eq_p4Dt2S6uMGM_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.youtube.com/watch?v_eq_p4Dt2S6uMGM_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy question is about exporting this type of texture. If you don_t_t watch the video_co_ what is being done is a UV Map is being created_co_ and a material with several tiled textures. There is also a stencil layer that masks layers of tiled textures. This seems to work great_co_ since you get the benefit of a tiled textured. My questions are about how the current Blender Export to Babylon JS (4.6.1) works and if there is another way. I have not found this information yet.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) When exporting this type of material with multiple textures_co_ they seemed to get baked into a [filename]_[meshName]_TEXTURE.jpg. Not ideal_co_ but this can work for now_co_ but I am having troubles specifying the output resolution. Is there any documentation or tutorials on this?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) Is there a way to achieve the method above without baking the textures? Such as blending different textures_co_ if so is there documentation on this?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m not currently trying to do infinite terrains_co_ so I_t_m trying to work within this problem set at hand.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tamorgan\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"V!nc3r","Date":"2017-07-05T07:28:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tA blending material could be a great feature_co_ but I don_t_t know if this can be easily add to the exporter _dd_ I guess this require writing a specific shader_co_ to assign to the terrain once exported_co_ in javascript.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe someone already done that in playground_co_ but I _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/playground?code_eq_blending%20material_qt_ rel_eq__qt_external nofollow_qt__gt_could_t_nt find_lt_/a_gt_ a test scene.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-07-05T15:34:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t1) UScale &amp_sm_ VScale are specified for export the same way as in the video_co_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Extensions/blob/master/QueuedInterpolation/Blender/doc-assist/imageTexture.png_qt_ rel_eq__qt_external nofollow_qt__gt_see_lt_/a_gt_.  Not sure this will really remove the blur for large terrains.  There is not much substitute for 4K textures_co_ except for the infinite terrain project or repeatable textures.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) Blending is baking_co_ just time displaced.  Even if you were trying to code something for an exporter_co_ BJS actually needs to support it.  A BABYLON.StandardMaterial can use multiple textures_dd_ Diffuse_co_ bump_co_ etc_co_ but you can only assign one to each type.  Personally_co_ I think this ability would only slow the scene down to do it every frame when it only needs to be done once.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou might be able to perform the bake on the Javascript side_co_ before it is set to material.diffuse.  I am not sure what an HTMLImageElement is capable of.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"V!nc3r","Date":"2017-07-05T15:45:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_180722_qt_ data-ipsquote-contentid_eq__qt_31450_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1499268875_qt_ data-ipsquote-userid_eq__qt_8492_qt_ data-ipsquote-username_eq__qt_JCPalmer_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t6 minutes ago_co_ JCPalmer said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t2) Blending is baking_co_ just time displaced.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tAre you sure that baking can_t_t be avoid by writing a dedicated shader ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tExample in _lt_a href_eq__qt_https_dd_//docs.unrealengine.com/latest/INT/Engine/UI/LevelEditor/Modes/MeshPaintMode/VertexColor/MaterialSetup/3Way/_qt_ rel_eq__qt_external nofollow_qt__gt_Unreal engine_lt_/a_gt__co_ I_t_m almost sure that these 3 mixed textures keep tiling like classic diffuse textures_co_ and their influence is defined by vertex colors. But maybe in the engine side it is baked at each frame ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-07-05T15:59:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt is absolutely possible_co_ but BABYLON.StandardMaterial is a shader of course.  You would have to write your own either with instance ShaderMaterial &amp_sm_ specifying the vertex &amp_sm_ fragment shaders.  There is also the newer CustomMaterial in MaterialsLibrary.  Not sure how that works.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThese are very low level tools though.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2017-07-05T16:00:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8492_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/_qt_ rel_eq__qt__qt__gt_@JCPalmer_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) I_t_m not sure if that_t_s what I need. The baked texture that gets created on export is what is low resolution.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) I see that BabylonJS 3.0 has a terrainMaterial ( _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/extensions/terrain_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/extensions/terrain_lt_/a_gt_ ) which might be what I want. I wonder if that could be used for the exporter.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m trying to explore terrainMaterials_co_ but further conversation around achieving this in the exporter is welcomed.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-07-05T16:19:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis material has serialize tags_co_ so technically it could be put in a JSON file.  Coming from Blender_co_ know which texture goes to which in JSON would be a challenge.  Then you would UI to indicate to process as this not a standard material.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs you own personal fork in the exporter_co_ you might be able to take some short cuts.  I have no interest in this area.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2017-07-06T13:54:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tCan anyone else help provide clarity on how to change the exported texture resolution on export from Blender when it creates a baked texture?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-07-06T14:58:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou are changing the question.  There is UI at the mesh properties to change from the default of 1024.  Here is an old picture.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_meshSettings.png_qt_ class_eq__qt_ipsImage_qt_ src_eq__qt_https_dd_//raw.githubusercontent.com/BabylonJS/Extensions/master/QueuedInterpolation/Blender/doc-assist/meshSettings.png_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2017-07-06T15:32:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8492_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/_qt_ rel_eq__qt__qt__gt_@JCPalmer_lt_/a_gt_ I_t_m sorry if I rubbed you the wrong way_co_ but this was definitely my first question. So maybe there was a misinterpretation from the start.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway_co_ I appeared to have an old version of the exporter that did not have these settings_co_ even though the version I had showed 4.6.1. Thanks for helping out_co_ the Procedural Texture / Cycles Baking _qt_Texture Size_qt_ was what I was looking for.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn regards to my second question_co_ I will most likely need to look into the new TerrainMaterial in BJS 3.0 or come up with a custom solution.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tamorgan\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]