[{"Owner":"MattB","Date":"2018-11-18T17:59:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m building a scene with vehicles at an intersection.  I also have a bunch of tree instances that have Alpha in their leaf texture.  I_t_ve noticed some weird things with how the trees are being rendered_co_ but more importantly I noticed that you can see the vehicle_t_s transparent windows behind the trees (below)_co_ any advice on how to fix this?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_21064_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_11/image.png.262af4bb9390049c95d4c13388ac6df5.png_qt_ alt_eq__qt_image.png.262af4bb9390049c95d4c13388ac6df5.png_qt_ /_gt__lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_21063_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_11/image.png.ba02c8259eb5e38432e843958494a3cc.png_qt_ alt_eq__qt_image.png.ba02c8259eb5e38432e843958494a3cc.png_qt_ /_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-11-18T21:42:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tthat does look like a bug... can you post a screenshot to demonstrate that the car_t_s windows are transparent otherwise?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDo you think you can reproduce the bug by placing two planes with a transparent texture one on top of the other in the playground? _lt_a href_eq__qt_https_dd_//playground.babylonjs.com_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you can reproduce the bug in the playground_co_ people may be able to help telling you if that is a bug or a misuse of the engine. Then if it is clear that this is a bug_co_ you would file an issue on Github.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-11-19T02:59:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tthis is probably linked to the depth sorting of your scene (the window for some reason would be drawn before the leaves) _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/resources/transparency_and_how_meshes_are_rendered#alpha-blended-meshes_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/resources/transparency_and_how_meshes_are_rendered#alpha-blended-_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tif in your game you are sure the car is always behind the tree you could try forcing the alphaIndex of both the car and the trees to render them in the desired order?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MattB","Date":"2018-11-19T12:42:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tBelow are the two files (is there anyway to get non-https files into a playground?) - \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI should specify that the windows have a standard material with an Alpha set (in this case 75%)_co_ while the trees have a leaf texture with an Alpha channel.  The trees were exported as .glb files from blender_co_ the vehicle is also a glb file converted using an fbx to glb converter_co_ and then a new material is created and set with Alpha for the windows at runtime.  \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.forensic-visuals.com/appExamples/treetest.glb_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.forensic-visuals.com/appExamples/treetest.glb_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.forensic-visuals.com/appExamples/treetest.glb_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.forensic-visuals.com/appExamples/_lt_/a_gt_AcuraSedan1_body.glb\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe windows are set to transparent based on the mesh name using this_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_    for (var a_eq_0_sm_ a&lt_sm_scene.meshes.length_sm_ a++) {\n        if (name.indexOf(_t__MCT_t_) !_eq__eq_ -1){\n            var new_material _eq_ new BABYLON.StandardMaterial(_t_new_material_t__co_ scene)_sm_\n            index _eq_ name.indexOf(_t__MCT_t_)_sm_\n            alpha _eq_ name.substring(index+4_co_index+6)_sm_\n            new_material.alpha _eq_ alpha/100_sm_\n            scene.meshes[a].material _eq_ new_material_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MattB","Date":"2018-11-19T12:44:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHere is a screenshot of one of the windows close up_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_21075_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_11/image.png.49437b47256c30402b9b1870f8c40882.png_qt_ alt_eq__qt_image.png.49437b47256c30402b9b1870f8c40882.png_qt_ /_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-11-19T12:45:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOk so it sounds both trees and car glasses are transparent  creating the issue (due to alpha order).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAbout the trees_co_ could you try exporting as alpha test and not alpha blend from Blender. This would be more performant and prevent the sorting issue ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MattB","Date":"2018-11-19T12:56:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIs that an option for exporting?  I_t_m not exactly sure what you are suggesting - I_t_m using the official glb2.0 exporter from blender.  I_t_m also really struggling with how materials get translated from various programs _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-11-19T13:55:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAdding _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/30070-kcoley/?do_eq_hovercard_qt_ data-mentionid_eq__qt_30070_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/30070-kcoley/_qt_ rel_eq__qt__qt__gt_@kcoley_lt_/a_gt_ and _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/32589-patrickryan/?do_eq_hovercard_qt_ data-mentionid_eq__qt_32589_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/32589-patrickryan/_qt_ rel_eq__qt__qt__gt_@PatrickRyan_lt_/a_gt_ who could definitely help shine lights on the setup. (I am more than n00b with art tools)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"PatrickRyan","Date":"2018-11-19T18:51:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/31548-mattb/?do_eq_hovercard_qt_ data-mentionid_eq__qt_31548_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/31548-mattb/_qt_ rel_eq__qt__qt__gt_@MattB_lt_/a_gt__co_ to export with alpha clip from blender using the Blender shader_co_ set your AlphaMode in the shader to 1 (0 is alpha blend and 1 is alpha clip). The AlphaCutoff value above that will tell you what the cutoff is for transparency. For example_co_ if you enter 0.5 into AlphaCutoff_co_ any value in your alpha that is 0.5 or less will be transparent and any value above 0.5 will be opaque. Find more about alpha modes at _lt_a href_eq__qt_https_dd_//github.com/KhronosGroup/glTF-Blender-Exporter/blob/master/docs/user.md#pbr-materials_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/KhronosGroup/glTF-Blender-Exporter/blob/master/docs/user.md#pbr-materials_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe image below shows a blue cube (no alpha)_co_ a green cube (alpha blend with AlphaMode set to 0) and a red cube (with alpha clip and AlphaMode set to 1). In the glTF you should see the blue cube_co_ 50% transparency on the green cube and no red cube since the AlphaCutoff is set to 0.5 and so is the alpha. However_co_ I just updated the exporter to the latest build before writing this post to make sure the information was still accurate and I am not getting any material parameters exporting when using the Principled glTF shader. I am about to post an issue on that so if yours is working currently_co_ I would hold off updating. I did validate the shader wasn_t_t working on a second machine so I think something broke recently.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_11/BlenderAlphaMode.PNG.880920d28db6fe0cf5e4002ecaa711cd.PNG_qt_ data-fileid_eq__qt_21082_qt_ rel_eq__qt__qt__gt__lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_21082_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_11/BlenderAlphaMode.thumb.PNG.a3b0c2ab6dc4d9d37d8a13ce58c56647.PNG_qt_ alt_eq__qt_BlenderAlphaMode.thumb.PNG.a3b0c2ab6dc4d9d37d8a13ce58c56647.PNG_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUsing alpha clip will mean that you don_t_t get soft edges on your transparent objects_co_ but when you are talking about vegetation_co_ you want to avoid alpha blend on the individual leaves and go with alpha clip. The reason is that all the stacked leaves will cause a lot of overdraw where you need to calculate the alpha value of the edge of one leaf through others and can compound the calculations if your tree takes up a majority of the screen like in your example. Alpha clip is much cheaper because you don_t_t need to calculate the draw based on a portion of one leaf combined with what is below it_co_ it_t_s either full base color or whatever is below the object.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MattB","Date":"2018-11-19T20:06:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFirst off_co_ this forum is just the absolute best_co_ thanks so much for such quick responses and great information!  I_t_m actually working in Blender Render and not cycles so I_qt_m not using the GLTF PBR shader (hopefully I said that right)...The alphaMode for the trees was _qt_2_qt_ so I changed it in runtime to _qt_1_qt_ and they turned white (below).  I_t_ll play around with the materials some more.  Thanks again for your help!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_21083_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_11/image.png.86907aae5df0c7a72a748624adb2663a.png_qt_ alt_eq__qt_image.png.86907aae5df0c7a72a748624adb2663a.png_qt_ /_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"PatrickRyan","Date":"2018-11-19T23:27:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOk_co_ circling back to this because I reached out to Khronos on their GitHub about this and there are a couple of issues that can be misleading with their shader for export. I did notice that the standard Blender Renderer material will generate a glTF_co_ but the issue with that is glTF expects physically based rendering (PBR) metallic roughness materials and textures unless you are using an extension that allows for the specular glossiness model. Technically the glTF would not be valid without PBR properties so I don_t_t know if you will run into problems. If you are new to authoring for PBR_co_ there are a lot of resources out there like_dd_\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\t_lt_a href_eq__qt_https_dd_//www.allegorithmic.com/pbr-guide_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.allegorithmic.com/pbr-guide_lt_/a_gt_ This is a great guide to the theories behind PBR and how to author for it. Most of the industry references this guide.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\t_lt_a href_eq__qt_https_dd_//www.khronos.org/blog/art-pipeline-for-gltf_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.khronos.org/blog/art-pipeline-for-gltf_lt_/a_gt_ This is an article I wrote about a year ago for how to get assets from DCC tools into glTF including Blender. I need to write an update for it_co_ but the basics are the same.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\t_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/how_to/physically_based_rendering_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/how_to/physically_based_rendering_lt_/a_gt_ Starting with PBR in Babylon.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\t_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/how_to/physically_based_rendering_master_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/how_to/physically_based_rendering_master_lt_/a_gt_ Advanced PBR in Babylon\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n_lt_p_gt_\n\tNow_co_ back to what I was doing wrong in the last post. The Blender shader is a little misleading in that if you enter color values in the BaseColor input_co_ they are ignored. This input is only for textures even though you can manually set a color value. BaseColorFactor is where you can set your color and alpha in the RGBA channels if you aren_t_t attaching a texture. When you assign a texture_co_ you connect the color channels to the BaseColor input in the shader and alpha to the Alpha input. The BaseColorFactor will still be multiplied by BaseColor so you can add additional color or alpha information there for combination. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHowever_co_ if you want to have an alpha texture_co_ but assign RGB values through the BaseColorFactor_co_ you can_t_t just attach a texture to the Alpha input. The glTF format assumes alpha comes from the alpha channel of the base color texture so texture alpha won_t_t work in a glTF unless you have a base color texture. To remedy this_co_ you need to pass a white texture (RGB of 1_co_ 1_co_ 1) with the alpha you want to the BaseColor input and the Alpha input and can then assign the BaseColorFactor to the color you want. See the sample below which is the same as before_co_ blue is opaque_co_ green is alpha blend_co_ and red is alpha mask.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_11/BlenderWorkingAlpha.PNG.45641c23be9c1ed6f5df2c4a9366da84.PNG_qt_ data-fileid_eq__qt_21086_qt_ rel_eq__qt__qt__gt__lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_21086_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_11/BlenderWorkingAlpha.thumb.PNG.8cfc274390d5861682e13838a6df4943.PNG_qt_ alt_eq__qt_BlenderWorkingAlpha.thumb.PNG.8cfc274390d5861682e13838a6df4943.PNG_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe green cube here has the same texture applied to it that the red does (white RGB and checker alpha) but the difference is that AlphaMode is set to 0 (blend) and the BaseColorFactor is RGBA_dd_ 0_co_ 1_co_ 0_co_ 0.5. The factor is multiplied by the texture and you have a semi-transparent checker pattern. The red cube can_t_t have the 50% translucency that the green cube does_co_ but it is MUCH cheaper to render this way. Especially when you have overlapping geometry all with alpha on it. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd this is the shader setup showing the additional factor. Hope this helps in the long run.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_11/BlenderShaderSetup.png.f42396ad0a6737a872ffafd3cd9634f2.png_qt_ data-fileid_eq__qt_21087_qt_ rel_eq__qt__qt__gt__lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_21087_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_11/BlenderShaderSetup.thumb.png.aed2574f475f77864876266680ee121a.png_qt_ alt_eq__qt_BlenderShaderSetup.thumb.png.aed2574f475f77864876266680ee121a.png_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-11-20T12:08:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks Patrick _lt_span_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_🙂_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/31548-mattb/?do_eq_hovercard_qt_ data-mentionid_eq__qt_31548_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/31548-mattb/_qt_ rel_eq__qt__qt__gt_@MattB_lt_/a_gt_ if you want to turn alpha test on by code_co_ put _lt_span style_eq__qt_color_dd_#000000_sm__qt__gt_transparencyMode _eq_ 1 alphaMode is not about Opaque/Mask/Blend but about the blending technique you want to use._lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MattB","Date":"2018-11-20T16:35:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tPBR stuff is what I have been putting off_co_ I guess I need to get use to using it.  Your post is very helpful in explaining how all this stuff works.  Thank you all for the fantastic information!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MattB","Date":"2018-11-20T16:38:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSebavan - YES!  setting transparencyMode _eq_1 for all the trees fixed all the problems.  Thanks so much!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"PatrickRyan","Date":"2018-11-20T17:48:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tRemember that setting the transparencyMode in your javascript code will always work for your scene but is a local fix_co_ but if you send that glTF to another project_co_ view it in a glTF viewer_co_ or share it in a 3D model repository the glTF itself will render incorrectly. If you don_t_t have the time to go through and convert your materials and textures to PBR_co_ you can simply edit the glTF to set the blending mode manually.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you exported a glb_co_ and are on windows_co_ you can download this _lt_a href_eq__qt_https_dd_//github.com/bghgary/glTF-Shell-Extensions_qt_ rel_eq__qt_external nofollow_qt__gt_tool_lt_/a_gt_ from github which is a shell extension written by one of our team_t_s engineers that will add an option to the right-click context menu to convert between glTF and glb. Once you have a glTF file (the json file) available open it in VSCode or similar editor and search for _qt_alphaMode_qt_ and your three options are _lt_a href_eq__qt_https_dd_//github.com/KhronosGroup/glTF/tree/master/specification/2.0#alpha-coverage_qt_ rel_eq__qt_external nofollow_qt__gt_OPAQUE_co_ BLEND_co_ and MASK_lt_/a_gt_. If you change the material that your trees use to _qt_alphaMode_qt__dd_ MASK and save the file_co_ your glTF will render correctly in any glTF viewer. Since glTF is a transmission format and tooled to render the same no matter what renderer displays it_co_ I always err on the side of generating a valid and complete glTF without the need for local fixes as I never know when I will need to use that file again elsewhere.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow you have plenty of approaches and I hope this all helps you in planning out your pipeline and getting the most out of the power of glTF and Babylon! Let us know if you have more questions.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]