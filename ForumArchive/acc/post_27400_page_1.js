[{"Owner":"tranlong021988","Date":"2017-01-02T15:49:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi everyone and happy new year 2017! Hope that this will be great year for all of us !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m building my personal porfolio web site using Boostrap and BabylonJS_co_ thank for this wonderful engine_co_ my progress come faster than my imagine. It_t_s still not finished_co_ but you can visit here_dd_ _lt_a href_eq__qt_http_dd_//dragonmakeit.com/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//dragonmakeit.com/_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t I _t_m finding best solution for optimiztion case. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tTil now_co_ I applied some of recommended solution from community_co_ such as texture size limitation_co_ freeze Normal_co_ freeze Material_co_ disable anti-alias and then result look good but I notice that rendering process burn my Nexus 6 a little bit. I_t_m using ArcRotateCamera_co_ so I wonder how to force engine just update rendering when getting interaction from user_co_ (start updating render when user mouse down and then stop updating after mouse up). DO you have any idea ?    \n_lt_/p_gt_\n\n_lt_p_gt_\n\tsorry my poor English. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-01-02T16:26:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tMaybe putting some checking in your render loop function to bail when _qt_nothing_qt_ has changed_co_ and use the last render generated.  How you determine _qt_something_qt_ I cannot help you with.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"tranlong021988","Date":"2017-01-03T08:02:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t Actually_co_ I already apply a flag variable to manage when run render loop_co_ but it_t_s only for wall view situation. I want to mange when user drag-drop camera around room. Ofcourse I can catch mouse event to determine user interaction_co_ but ArcRotateCamera have a little glide after drop(smooth animation)_co_ do you know any way to disable it  ? \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2017-01-03T09:24:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThat property is called _qt_inertia_qt_ and you can set it to 0 but that_t_s probably not what you want because it somehow feels weird ... example_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1LKJPI%230_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1LKJPI#0_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe you can simply check if your camera is still moving by comparing its position to a saved previous position_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1OQIXC%230_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1OQIXC#0_lt_/a_gt_ .. and then combine that with the user input check.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"tranlong021988","Date":"2017-01-03T16:11:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_157340_qt_ data-ipsquote-contentid_eq__qt_27400_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1483435442_qt_ data-ipsquote-userid_eq__qt_12304_qt_ data-ipsquote-username_eq__qt_iiceman_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t6 hours ago_co_ iiceman said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThat property is called _qt_inertia_qt_ and you can set it to 0 but that_t_s probably not what you want because it somehow feels weird ... example_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1LKJPI%230_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1LKJPI#0_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tMaybe you can simply check if your camera is still moving by comparing its position to a saved previous position_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1OQIXC%230_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1OQIXC#0_lt_/a_gt_ .. and then combine that with the user input check.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tchanging  _lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_background-color_dd_rgb(255_co_255_co_255)_sm_float_dd_none_sm__qt__gt__qt_inertia_qt__lt_/span_gt_ to zero cause slow animation dragging on camera. Solution #2 seem promise_co_ I will do some test. Thank you. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2017-01-03T19:01:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-size_dd_16px_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_\n\tUm_co_ ok top of the head never start the engine (or start it then disable everything) and then do not attach camera controls_co_ but do attach a mouse down event to the document that fires the engine render to turn on (or enable everything) and enables the camera controls_co_ then on mouse up grab the context of the canvas and then shut down the engine maybe and turn off the camera controls_co_ then place a canvas over the area and put the context you stored into the new canvas?\n_lt_/p_gt_\n\n_lt_p style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-size_dd_16px_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_\n\t \n_lt_/p_gt_\n\n_lt_p style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-size_dd_16px_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_\n\tsome of that might be overkill like the secondary canvas... which you would want to ignore all pointer event on so it does not cover the scene canvas for noise events.  And Turing off and on the engine I have no idea what the results of it would be.  It would prolly be smarter just to enable or disable all elements as opposed to toggling the engine.\n_lt_/p_gt_\n\n_lt_p style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-size_dd_16px_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_\n\t \n_lt_/p_gt_\n\n_lt_p style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-size_dd_16px_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_\n\tany questions let me know this is possible though.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]