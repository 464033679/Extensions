[{"Owner":"ssbarbee","Date":"2015-11-26T23:55:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello everyone!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ve recently started playing with BabylonJS and I have to say it_t_s really a wonderful library to work with. The learning curve is really smooth but I_t_m having issues with the physics engine (mostly due to my ignorance_co_ although I_t_ve googled a bit trying to find a solution)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So the problem I am having is following _dd__lt_/p_gt__lt_p_gt_In the following playground _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2DQWXU%230_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2DQWXU#0_lt_/a_gt_ we can see a ball in the top left corner and a cube in the bottom right corner. The user can interact with the ball and by selecting it you can move it around the grid (without physics enabled ). The movement is a simple increasing/decreasing of the values for ball position until a certain clicked position is reached (the vector expressed by variables _lt_strong_gt_xreach_lt_/strong_gt__co_ _lt_strong_gt_yreach_lt_/strong_gt__co_ _lt_strong_gt_zreach_lt_/strong_gt_). Now a strange thing happens when physics is enabled (just set the variable _lt_strong_gt_enablePhysics _lt_/strong_gt_to true). The user cannot move the ball_co_ it wont respond to the action and the ball and the cube start dancing and jittering a bit._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I am curios what is happening? Should the movement of the ball happen by calling some physics function when physics engine is enabled? If so can you tell me which one?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Can someone also review my render code (should i be calling render function for the cube also)? Is there something that I can improve overall?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thank you for reading my question(s). _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-11-27T21:53:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#2DQWXU%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#2DQWXU#3_lt_/a_gt_  (starting to come alive)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHi ssbarbee_co_ welcome to the forum!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t   I_t_m a bit short on time right now_co_ but_co_ there are two TYPES of collision systems available in BJS.  First_co_ there is a collision/intersect system built-into BJS.  It most-often uses a function called _lt_em_gt_.moveWithCollisions()_lt_/em_gt_ to move objects and it checks for intersection between any two mesh.  You can see it in action... here..._lt_a href_eq__qt_http_dd_//playground.babylonjs.com/?9_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/?9_lt_/a_gt_ and here... _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/?10_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/?10_lt_/a_gt_ .  It is a highly useful intersection system and runs much faster than using the third-party add-on Cannon or Oimo physics libraries.  But it won_t_t bounce and deflect things like a physics engine will.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou chose to use the Cannon physics engine in your demo_co_ and_co_ generally speaking_co_ physics engines use _lt_em_gt_mesh.applyImpulse(forceDirectionAndMagnitude_co_ contactPoint)_lt_/em_gt_ (a little jet engine) to do mesh moving.  Impulsing has no brakes_co_ so it is difficult to STOP a ball that_t_s been impulsed.  Spheres have no significant surface area at the ground contact point - so friction has no effect.  (Wingy gives a nod of thx to Fenomas.)  Simulated wind-drag has been discussed_co_ recently.  One idea was to constantly multiply the physics imposter _lt_em_gt_.angularVelocity_lt_/em_gt_  by .999 - introducing a _qt_drag factor_qt_.)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut there is another way to move physics-active mesh (and stop them in the right place)_co_ and I used that in the #3 demo.  (lines 422_co_ 427_co_ 439_co_ and 444)...  _lt_em_gt_.updatePhysicsBodyPosition()_lt_/em_gt_.  It will cause the mesh.body.body (sometimes called a physics imposter) to track-to the .position of the mesh. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ right after you did your moves_co_ I added the_lt_em_gt_ .updatePhysicsBodyPosition()_lt_/em_gt_ calls.  I also removed the restitution on your ground to reduce/eliminate _qt_jiggle_qt_.  I also added some serious friction to ground and box... so that the box doesn_t_t fall off the grid so easily.  _lt_img alt_eq__qt__dd_)_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ data-emoticon_eq__qt__qt_ /_gt_  I also turned off your camera limiters_co_ but you can turn them back-on as wanted.  I probably adjusted a few more things_co_ too.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway_co_ now you can roll the ball into the box and the box will tip over and move around when the sphere hits it.  It_t_s not perfect_co_ but maybe it helps.  I_t_ll discuss these systems more with you_co_ when I have a bit more time.  Others are nearby_co_ too.   You have an interesting coding style... I like it.  More soon_co_ good luck_co_ and again_co_ welcome!  Party on!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-11-28T05:33:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Sweet demo wingy!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_To expand/pontificate a little_co_ physics-based contents tend to work best if you treat objects as either being static (where you might set the position manually_co_ but the physics engine treats it as a static immovable object) or dynamic (where you might apply forces or impulses_co_ but you leave it up to the engine to decide the actual position). If you get into the middle ground where you want an object to move dynamically but you also want to force it into certain positions sometimes_co_ things tend to get unstable. (I mean to be clear_co_ manually setting an object_t_s position _lt_em_gt_always_lt_/em_gt_ has the potential to make things blow up_co_ but if it_t_s necessary it_t_s necessary.)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So wingnut_t_s demo is a perfect example of the former approach. The ball goes just where its told_co_ being moved by the hand of god as it were. But if you also wanted the ball to bounce off things_co_ or slow down when moving very heavy objects_co_ or generally behave like an object with mass and velocity and so forth_co_ then you_t_ll probably need to give up control over its precise position_co_ and switch to pushing it where you want it to go._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Incidentally one very common way to do this is with springs - attaching a short_co_ strong spring between the sphere and a desired location will move it precisely but in a physics-friendly way. I don_t_t know how one does this in cannon - maybe a resident expert can chime in?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-11-28T13:53:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks for the kind words and info_co_ Fenomas.  Well said.  It_t_s actually ssbarbee_t_s demo_co_ though.  I just added a few lines and did some minor tweaks._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_AND_co_ I consider Fenomas to be one of the resident experts.  He might not be an expert on Cannon or Oimo_co_ but he_t_s got some physics expertise from somewhere... and he_t_s fixed my incorrect physics thinking on numerous occasions.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  I_t_m pretty glad he hangs around with us._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-11-28T16:12:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Well! That_t_s a nice thread _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_Here is my take on it - Wingnut_co_ fenomas_co_ you are both right._lt_/p_gt__lt_p_gt_Once physics is enabled_co_ the mesh_t_s tranformation (position_co_ rotation) is fully controlled by the physics engine. If you just want to change the mesh_t_s position_co_ you could do that - _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2DQWXU%235_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2DQWXU#5_lt_/a_gt__lt_/p_gt__lt_p_gt_try colliding against the box_co_ you will see that it actually bumps into it and _qt_reflects_qt_ back. is this what you wanted to achieve? _lt_/p_gt__lt_p_gt_to get the physics body_co_ check lines 322 and 324. 322 - you can assign directly when creating it. You could also use line 324 everywhere in your code - this will return the mesh_t_s physics body._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ssbarbee","Date":"2015-11-28T17:14:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thank you guys for the fast responses. Just a quick summary below as a future reference _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So from what I can tell updating the physics body can be done by keeping a reference of the physics body once we set the physics engine and then updating that object. This approach was recommended by RaananW and is summed in the following lines _lt_strong_gt_pB _eq_ scene.getPhysicsEngine().getPhysicsBodyOfMesh(mesh)_lt_/strong_gt_ and then somewhere below _lt_strong_gt_pB.position.x _eq_ someX_lt_/strong_gt_ instead of _lt_strong_gt_mesh.position.x _eq_ someX_lt_/strong_gt_._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Another way of doing the same thing is calling the function _lt_strong_gt_mesh.updatePhysicsBodyPosition()_lt_/strong_gt_ right after updating the mesh position ( _lt_strong_gt_mesh.position.x _eq_ someX_sm__lt_/strong_gt_ ) which was suggested by Wingnut. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Both of the suggestions resolved my issue and helped me get a better grasp of using a physics engine in Babylon JS for which I am grateful. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-11-29T09:55:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yeah_co_ I think you_t_ve got it_co_ ss!  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m quite new at this_co_ and have not had too many needs to _qt_hand-of-God_qt_ (hog)-move physics-active mesh.  I was rather surprised to see .position and .rotation on the rigidBody (physics body).  I had to go look at my _lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/misc/j2h02.htm_qt_ rel_eq__qt_external nofollow_qt__gt_bad Oimo map_lt_/a_gt_ and about 3/4 down... in the rigidBody class... there it was_co_ #8... .position.  Whooda thunkit?  Raanan is who.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Hand of God.  Hog.  HOG-movin_t_ physics mesh...  being a pig... grunting the impostor into positions and orientations... HOGgin_t_ all the forces.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  I like it.  HOG move!  I think we just created a new term. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__qt_I just HOGGED the imposter into position._qt_  yeah!   I LIKE IT!  (I_t_m SO easily entertained.)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Good thread... I learned a bunch of stuff... and we all got to meet ssbarbee_co_ future physics mad scientist.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  Can we expect a _lt_a href_eq__qt_http_dd_//s3.amazonaws.com/digitaltrends-uploads-prod/2015/09/rube-goldberg-machine.jpg_qt_ rel_eq__qt_external nofollow_qt__gt_Rube Goldberg machine_lt_/a_gt_ by mid-summer 2016_co_ ss?  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]