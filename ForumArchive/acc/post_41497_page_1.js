[{"Owner":"Sme","Date":"2018-11-25T06:44:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tonBeforeKeyAddObservable doesn_t_t pick up Enter presses_co_ and onBlurAddObservable doesn_t_t differentiate between the user pressing Enter and clicking outside of the TextInput. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat I_t_m trying to do is have a chat box_co_ so that the user can send the message simply by pressing Enter_sm_ but I can_t_t find a way to determine when the user actually presses Enter.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sme","Date":"2018-11-25T07:56:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAnswering my own question...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe solution I came up with was remove the event listeners from the InputText_co_ and add a _t_keydown_t_ event listener to the canvas. Then in the canvas_t_ keydown event_co_ if the user presses enter_co_ I process the chat input_t_s current text and then clear it. Otherwise_co_ I call the InputText.processKeyboard(e) method_co_ with e being the KeyboardEvent passed via the onkeydown event_co_ and let the InputText control process it from there.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_private _chatInput _dd_ GUI.InputText_sm_\n\n...\n\ndocument.getElementById(_t_canvas_t_).addEventListener(_t_keydown_t__co_ this._handleKeyDown.bind(this))_sm_\n\n...\n\nprivate _handleKeyDown(e _dd_ KeyboardEvent) _dd_ void {\n    if (this._chatInput) {\n        if (e.key _eq__eq__eq_ _t_Enter_t_) {\n            this._chatInput.text _eq_ _t__t__sm_\n        } else {\n            this._chatInput.processKeyboard(e)_sm_\n        }\n    }\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-11-26T00:24:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou could try this to not break the underlying handlers_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#UWS0TS%2323_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#UWS0TS#23_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBasically detecting the next enter after onBlur to be sure.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]