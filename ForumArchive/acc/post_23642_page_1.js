[{"Owner":"Flake","Date":"2016-07-06T09:12:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tShaders are still new to me_co_ so this might be a silly question_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs it possible to chain_co_ or merge shaders?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve got a PBRMaterial which uses the ColorCurves_co_ and a custom shader that generates a texture. I_t_d love to be able to be able to combine or chain them_co_ so I can have both effects.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy initial thought was_dd_ _t_grab the PBRMaterial and Shader from github_co_ and hack in the properties/functions from my custom shader_t_. But those files have ~2000 lines of code in them_co_ so if anyone knows an easier approach I_t_d be grateful. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tPseudo code_co_ because one can never be too clear _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tWhat I_t_ve got_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_...\nvar mesh _eq_ new Mesh()_sm_\n\nvar materialA _eq_ new BABYLON.PBRMaterial(_qt_pbrMat_qt__co_ scene)_sm_\nvar curve _eq_ new BABYLON.ColorCurves()_sm_\ncurve.GlobalHue _eq_ 250_sm_ \nmaterialA.cameraColorCurves _eq_ curve_sm_\n\n\nvar materialB _eq_ new BABYLON.ShaderMaterial(_qt_otherMat_qt__co_ scene_co_ _qt_./assets/shaders/otherMat_qt__co_ \n  {\n    attributes_dd_ [_qt_position_qt__co_ _qt_uv_qt_]_co_\n    uniforms_dd_ [_qt_worldViewProjection_qt__co_ _qt_attribute_qt_]\n  })_sm_\n\nmaterialB.setFloat(_qt_attribute_qt__co_ someVar)_sm_\n\n\nmesh.material _eq_ materialA_sm_ // or materialB.. but not both\n..._lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tWhat I_t_d want_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var mesh _eq_ new Mesh()_sm_\n\nvar materialA _eq_ new BABYLON.PBRMaterial(_qt_pbrMat_qt__co_ scene)_sm_\nvar materialB _eq_ new BABYLON.ShaderMaterial(_qt_otherMath_qt__co_ scene_co_ _qt_./assets/shaders/specialMat_qt_)_sm_\n\n\nmesh.material.Add([materialA_co_ materialB])_sm_\n\n// or \n\nmesh.material _eq_ materialA.chain(materialB)_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThanks for your time!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Luaacro","Date":"2016-07-06T15:42:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tDo you mean that the two materials may be mixed ? That means the final color of each pixel may be a mix between the ouput colors of the PBR material and the Other material\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"NasimiAsl","Date":"2016-07-06T18:05:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\thi \n_lt_/p_gt_\n\n_lt_p_gt_\n\tyou most make a one shader if you haven_t_t any conflate in variable and uniforms .\n_lt_/p_gt_\n\n_lt_p_gt_\n\tyou can draw it with renderTarget too and mix it with postprocess \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#QRWB4%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#QRWB4#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#QRWB4%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#QRWB4#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#QRWB4%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#QRWB4#4_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Flake","Date":"2016-07-07T00:21:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for the reply guys.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_135161_qt_ data-ipsquote-contentid_eq__qt_23642_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1467819743_qt_ data-ipsquote-userid_eq__qt_11802_qt_ data-ipsquote-username_eq__qt_Luaacro_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t13 hours ago_co_ Luaacro said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tDo you mean that the two materials may be mixed ? That means the final color of each pixel may be a mix between the ouput colors of the PBR material and the Other material\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tNot a direct mix_sm_ rather I want to run shaderA and feed the output into shaderB_co_ and render the result of that.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_135179_qt_ data-ipsquote-contentid_eq__qt_23642_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1467828345_qt_ data-ipsquote-userid_eq__qt_13038_qt_ data-ipsquote-username_eq__qt_NasimiAsl_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t11 hours ago_co_ NasimiAsl said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tYou must make a one shader if you haven_t_t any conflict in variable and uniforms . you can draw it with renderTarget too and mix it with postprocess.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI have to take a closer look at your code_co_ but the helperMaterial_qt_ looks promising!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ll post an update_co_ once I_t_ve gone through the code.. Also the sphere in the third example looks amazing!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEdit 1_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI could not get the  BABYLONX.ShaderBuilder to behave how I wanted.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t// avrage m1 and m2_lt_br /_gt_\n\t.InLine(_t_result _eq_ vec4( m2.xyz*0.5 +m1.xyz*0.5  _co_0.0)_sm__t_) // when the alpha was zero_co_ the entire mesh was talk transparent and ghostlike\n_lt_/p_gt_\n\n_lt_p_gt_\n\t.InLine(_t_result _eq_ vec4( m2.xyz*0.5 +m1.xyz*0.5  _co_q.0)_sm__t_) // and when the alpha was one_co_ the mesh was fine_co_ but the entire scene was completely back (the alpha component of the clear colour was ignored)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny help is still appreciated_co_ i_t_ll get back to trying around _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]