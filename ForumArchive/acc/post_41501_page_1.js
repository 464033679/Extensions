[{"Owner":"ParadoxMaster","Date":"2018-11-25T16:49:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWhen I run my game in Firefox_co_ after a few minutes of gaming or even just rotating the camera_co_ the FPS in the game starts periodically drops. Of the stable 60 FPS drops by about a couple of seconds to 20-30 or even just stops. And it starts to happen more and more often. To fix this i need to reboot the browser_co_ nothing else helps. I researched in the performance devtools in the browser and found that this is due by _qt_Cycle Collection_qt_ process.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t( _lt_span lang_eq__qt_en_qt_ xml_dd_lang_eq__qt_en_qt__gt__lt_span_gt_Note_dd_ when I start recording performance_co_ all FPS drops disappear_co_ as if I restarted the browser. And I have to wait again for a while before they start._lt_/span_gt__lt_/span_gt_ )\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHas anyone else experienced this issue? What could it be? Another Firefox_t_s WebGL bug? In Chrome and Edge i have no problems.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ data-fileid_eq__qt_21190_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_11/screenshot1.JPG.0eb9643698b8d99931c2cca00ea62676.JPG_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_screenshot1.JPG_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_21190_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_11/screenshot1.thumb.JPG.6b7cb036281b071c22b50153a9f7ad27.JPG_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-11-25T19:05:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAs we have absolutely no idea about what your code actually does_co_ it_t_s quite difficult to answer ...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-11-25T23:14:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tLooks like you are instanciating items during the render loop adding pressure to the GC.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBasically all the code in your render loop should not contain new keyword (of course a new happening every 10 seconds during a special event might be ok as long as it is not instanciating a big chunck of data)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ParadoxMaster","Date":"2018-11-26T15:50:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for your replies! _lt_span lang_eq__qt_en_qt_ xml_dd_lang_eq__qt_en_qt__gt__lt_span_gt_It_t_s strange_co_ but I can_t_t reproduce this situation anymore...Â _lt_/span_gt__lt_/span_gt_ _lt_span lang_eq__qt_en_qt_ xml_dd_lang_eq__qt_en_qt__gt__lt_span_gt_Without any significant changes in the code._lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en_qt_ xml_dd_lang_eq__qt_en_qt__gt__lt_span_gt_I will describe in more detail what is happening in my code if it appears again._lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en_qt_ xml_dd_lang_eq__qt_en_qt__gt__lt_span_gt_About my render loop_dd_ i use it for the vector calculations for moving my characters. Like this_dd__lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_move(deltaTime) {\n\n        let ratio _eq_ deltaTime * this.FPS / 1000_sm_\n        let alignedEps _eq_ this.epsVector.scale(ratio * SPEED)_sm_\n        let nextPosition _eq_ this._mesh.position.add(alignedEps)_sm_\n        let nextNormale _eq_ this.targetPos.subtract(nextPosition).normalize()_sm_\n        if (Math.sign(nextNormale.x) !_eq_ Math.sign(this.normale.x) &amp_sm_&amp_sm_\n            Math.sign(nextNormale.y) !_eq_ Math.sign(this.normale.y) &amp_sm_&amp_sm_\n            Math.sign(nextNormale.z) !_eq_ Math.sign(this.normale.z)\n        ) {\n\n            // Stop walking_sm_\n            if (this._walkPath.length _eq__eq_ 0) {\n\n                this._needMove _eq_ false_sm_\n                this.targetPos _eq_ this._mesh.position_sm_\n                this.blendAnim(this.walkAnim_co_ this.idleAnim_co_ BLEND_TIME.WalkToIdle)_sm_\n\n            } else {\n\n                this._calculate()_sm_\n\n            }\n\n        } else {\n\n            this._mesh.position _eq_ nextPosition_sm_\n\n        }\n\n    }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tIt_t_s okay? Or may cause this problem?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUPD_dd_ Now looking at it_co_ I have guesses that a whole bunch of temporary vectors are being allocated here ...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-11-26T16:06:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYup _lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ™‚_lt_/span_gt_Â you should allocate or several tmp vectors on load and then use only the vector method containing toRef like addToRef and so on. This will make the computation to an already existing vector vs allocating a new one increasing GC pressure.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]