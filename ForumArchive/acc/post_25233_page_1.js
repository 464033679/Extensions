[{"Owner":"mightymarcus","Date":"2016-09-17T02:51:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI am very new to OpenGL and to get into it I started coding a little GUI on top of BJS. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBefore the scene.render() I draw some textured triangles (a spritesheet with a font) to a framebuffer object that is connected to a BJS-Texture which I use on a regular BJS Plane Mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt all works as desired_co_ when I draw to the texture before the first scene.render() call. But when I want to update the text (drawing again to the texture) on the next scene.render() call it gives me_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere is no texture bound to the unit 0.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe strange thing is_co_ when I create a new Texture that is not connected to anything_co_ just creating it_co_ it works. And it has to be a texture that was not loaded before (is not in the cache).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t    \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_\tpublic static function update()\n\t{\n\t\tfor (props in _textsToDraw)\n\t\t{\n\t\t\tvar texture _eq_ new Texture(_qt_textures/_qt_ + _textures[_texturenum]_co_ Gfx.scene)_sm_\n\t\t\tvar instance_dd_TextRenderer _eq_ props.instance_sm_\n\t\t\tinstance._drawText(cast props.text_co_ cast props.posX_co_ cast props.posY)_sm_\n\t\t\t_texturenum++_sm_\t\t\n\t\t}\n\t\t\n\t\t_textsToDraw.splice(0_co_ _textsToDraw.length)_sm_\n\t}\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt_\n\tSo I think on the scene.render() function it happens something like that the texture with the font is overriden or is changing somehow. I really can_t_t tell.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBecause I am just starting with OpenGL/WebGL I have not really the idea of changing states and what exactly happens _qt_inside_qt_ BJS.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe someone can give me a pointer how I could solve this problem with the _qt_disappearing_qt_ texture.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOnce again what happens_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. Drawing to the framebuffer that is connected to the BJs Texture.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. first scene.render()_sm_ call\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOK. The texture is updated with the text.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t3. Drawing to the framebuffer again\n_lt_/p_gt_\n\n_lt_p_gt_\n\t4. scene.render()\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere is no texture bound to the unit 0 (it has to be the font texture_co_ becaus when I just draw the background which has no texture it works)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut doing\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. Drawing to the framebuffer that is connected to the BJs Texture.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. first scene.render()_sm_ call\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOK. The texture is updated with the text.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t3. creating a temporary BJS Texture before drawing to the framebuffer\n_lt_/p_gt_\n\n_lt_p_gt_\n\t4. scene.render()\n_lt_/p_gt_\n\n_lt_p_gt_\n\t5. It is working ...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is the relevant code that renders the buffers..\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_\tfunction _render()\n\t{\n\t\tGL.enable(GL.BLEND)_sm_\n\t\tGL.blendFunc(GL.SRC_ALPHA_co_ GL.ONE_MINUS_SRC_ALPHA)_sm_\t\t\n\t\tGL.viewport(0_co_ 0_co_ 512_co_ 512)_sm_\t\t\n\t\tGL.clearColor(0.0_co_ 0.0_co_ 0.0_co_ 1.0)_sm_\n\t\tGL.colorMask(true_co_ true_co_ true_co_ true)_sm_\n\t\tGL.disable(GL.DEPTH_TEST)_sm_\n\t\tGL.disable(GL.CULL_FACE)_sm_\t\t\n\t\tGL.clear(GL.COLOR_BUFFER_BIT)_sm_\n\t\t//GL.blendEquation(GL.FUNC_ADD)_sm_\n\t\t\n\t\tGL.bindFramebuffer(GL.FRAMEBUFFER_co_ _textureFramebuffer)_sm_\t\t\n\t\t\n\t\t_drawBackground()_sm_\n\t\t_drawContent()_sm_\n\t\t\n\t\tGL.bindFramebuffer(GL.FRAMEBUFFER_co_ null)_sm_\t\t\n\t\tGL.useProgram(null)_sm_\n\t\tGL.enable(GL.DEPTH_TEST)_sm_\n\t\tGL.enable(GL.CULL_FACE)_sm_\n\t}\t\n\t\n\tfunction _drawContent()\n\t{\n\t\tGL.useProgram(_textContentProgram)_sm_\n\t\t\n\t\tvar matrix _eq_ Matrix4.createOrtho(0_co_ 512_co_ 512_co_ 0_co_ -1000_co_ 1000)_sm_\n\t\tGL.uniformMatrix4fv(_textContentMatrixUniform_co_ false_co_ matrix)_sm_\n\t\t\n\t\tGL.uniform4fv(_textContentTextColorUniform_co_ new Float32Array([_textColor.r_co_ _textColor.g_co_ _textColor.b_co_ _textColor.a]))_sm_\n\t\t\n\t\tGL.activeTexture(GL.TEXTURE0)_sm_\n\t\t\n\t\tGL.bindTexture (GL.TEXTURE_2D_co_ _fontTexture)_sm_\n\t\t\n\t\tGL.bindBuffer(GL.ARRAY_BUFFER_co_ _contentVertexBuffer)_sm_\n\t\t\t\t\t\t\t\t\n\t\tGL.enableVertexAttribArray(_textContentVertexAttr)_sm_\n\t\tGL.enableVertexAttribArray(_textContentTextureAttr)_sm_\n\t\tGL.vertexAttribPointer (_textContentVertexAttr_co_ 3_co_ GL.FLOAT_co_ false_co_ 5 * Float32Array.BYTES_PER_ELEMENT_co_ 0)_sm_\n\t\tGL.vertexAttribPointer (_textContentTextureAttr_co_ 2_co_ GL.FLOAT_co_ false_co_ 5 * Float32Array.BYTES_PER_ELEMENT_co_ 3 * Float32Array.BYTES_PER_ELEMENT)_sm_\n\t\t\n\t\tGL.drawArrays(GL.TRIANGLES_co_ 0_co_ _numVertices)_sm_\n\t\t\n\t\tGL.disableVertexAttribArray(_textContentVertexAttr)_sm_\n\t\tGL.disableVertexAttribArray(_textContentTextureAttr)_sm_\n\t\t\n\t\t//GL.activeTexture(GL.TEXTURE0 )_sm_\n\t\tGL.bindTexture(GL.TEXTURE_2D_co_ null)_sm_\n\t}\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mightymarcus","Date":"2016-09-17T05:11:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tLook at this. FakeTexture is almost empty_co_ I deleted almost the entire code an there is no image loaded. But with that it works. That_t_s the ugliest _qt_workaround_qt_ of all time I think..\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_\tpublic static function update()\n\t{\n\t\tfor (props in _textsToDraw)\n\t\t{\n\t\t\t// _dd_(\n\t\t\tvar texture _eq_ new FakeTexture(_qt_ugly_qt__co_ Engine3D.fakeScene)_sm_\n\t\t\ttexture.dispose()_sm_\n\t\t\t\n\t\t\tvar instance_dd_TextRenderer _eq_ props.instance_sm_\n\t\t\tinstance._drawText(cast props.text_co_ cast props.posX_co_ cast props.posY)_sm_\n\t\t}\n\t\t\n\t\t_textsToDraw.splice(0_co_ _textsToDraw.length)_sm_\n\t}\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mightymarcus","Date":"2016-09-17T10:37:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOh man oh man. I_t_m such a noob. And is was so easy ... \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAfter drawing the text I had to GL.bindTexture the texture that was bound before I bount the sprite sheet. I thought BJS would do this in every render call itself. That was all ... Now I only have to find out what textureID was bound before the text drawing ...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-09-19T17:10:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI would say_dd_ Good job _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]