[{"Owner":"RobS","Date":"2016-10-03T10:23:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve been messing with mesh.applyDisplacementMapFromBuffer() using a separate canvas to create a dynamic image (just messing with gradients at the moment). I_t_m hoping to animate the result but currently when you apply applyDisplacementMapFromBuffer() repeatedly it adds the new displacement map to the existing displaced map so things get a bit crazy looking. So basically I need something to call to before applyDisplacementMapFromBuffer() that restores the mesh to it_t_s original state. I_t_ve looked at setVerticesData_co_ updateVerticesData_co_ setVertexBuffer and not got anywhere_co_ once they_t_re called the applyDisplacementMapFromBuffer has no effect.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere_t_s some vague example code_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var plane _eq_ BABYLON.Mesh.CreateGround(_qt_plane_qt__co_ 192_co_ 108_co_ 100_co_ scene_co_ true)_sm_\nvar originalVertices _eq_ plane.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm_\n\nmergeCanvas _eq_ document.getElementById(_qt_mergemap_qt_)\nvar mergeCTX _eq_ mergeCanvas.getContext(_t_2d_t_)_sm_\nvar mw _eq_ mergeCanvas.width_sm_\nvar mh _eq_ mergeCanvas.height_sm_\n\n\nengine.runRenderLoop(function() {\n\n   // imagine some stuff happens here to draw into the mergeCTX\n\n   var buffer _eq_ mergeCTX.getImageData(0_co_ 0_co_ mw_co_ mh).data_sm_\n\n   // reset needs to happen here\n   plane.updateVerticesData(BABYLON.VertexBuffer.PositionKind_co_originalVertices)\n\n   plane.applyDisplacementMapFromBuffer(buffer_co_ mw_co_ mh_co_ 0_co_ 1)_sm_\n\n})_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tSorry for the fairly vague info but any pointers will be much appreciated.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheers_co__lt_br /_gt_\n\tRob\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RobS","Date":"2016-10-03T11:02:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tTypical_co_ 5 minutes after posting I find a solution!\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var plane _eq_ BABYLON.Mesh.CreateGround(_qt_plane_qt__co_ 192_co_ 108_co_ 100_co_ scene_co_ true)_sm_\nvar originalVertices _eq_ plane.getVerticesData(BABYLON.VertexBuffer.PositionKind).slice(0)_sm_\n\nmergeCanvas _eq_ document.getElementById(_qt_mergemap_qt_)\nvar mergeCTX _eq_ mergeCanvas.getContext(_t_2d_t_)_sm_\nvar mw _eq_ mergeCanvas.width_sm_\nvar mh _eq_ mergeCanvas.height_sm_\n\nvar updatePositions _eq_ function (positions) {\n\tfor (var idx _eq_ 0_sm_ idx &lt_sm_ positions.length_sm_ idx++) {\n\t\tpositions[idx] _eq_ originalVertices[idx]\n\t}\n}_sm_\n\nengine.runRenderLoop(function() {\n\n\t// imagine some stuff happens here to draw into the mergeCTX\n\n\tvar buffer _eq_ mergeCTX.getImageData(0_co_ 0_co_ mw_co_ mh).data_sm_\n\n\tplane.updateMeshPositions(updatePositions)_sm_\n\n\tplane.applyDisplacementMapFromBuffer(buffer_co_ mw_co_ mh_co_ 0_co_ 1)_sm_\n\n})_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tIs that the best way?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheers_co__lt_br /_gt_\n\tRob\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-10-03T15:01:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThis is exactly what I would have suggested _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]