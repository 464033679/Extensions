[{"Owner":"georage","Date":"2017-02-10T17:20:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey_co_ I am not great with Babylonjs_co_ but have managed to put together a few timesaving functions. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am sure you have too. If you have any that you thought were clever_co_ please share them. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tNone of mine are clever_co_ but they are useful. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is the humblest of all to get the ball rolling. All it does it output to the console for development. But once you go into production you can turn off all the console messages by commenting out one line instead of hundreds or thousands.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_function log(msg) {\n  console.log( msg )_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI set and get global values with the following. There may be a better way but this is how I store player login information instead of using PHP sessions.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_function setGlobal(varName_co_ varValue){\n    var global _eq_ $( _qt_body_qt_ ).data( varName_co_ varValue )_sm_\n    return global_sm_\n}\n\nfunction getGlobal(varName){\n    var global _eq_ $( _qt_body_qt_ ).data( varName )_sm_\n    return global_sm_\n}\n\nfunction removeGlobal(varName){\n    $( _qt_body_qt_ ).removeData( varName )_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThree more utility functions you may find helpful\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_//converts from degrees to radians\nfunction degreesToRadians(degrees) {\n    return degrees * Math.PI / 180_sm_\n}\n \n//converts from radians to degrees\nfunction radiansToDegrees(radians) {\n    return radians * 180 / Math.PI_sm_\n}\n\nfunction deleteAllMeshes(scene){\n        console.log(scene.meshes.length + _qt_ meshes detected_qt_)_sm_\n        var countMesh _eq_ 0_sm_\n        for (var i _eq_ 0_sm_ i &lt_sm_ scene.meshes.length_sm_ i++) {\n            scene.meshes[i].dispose()_sm_\n            countMesh++_sm_\n            i--_sm_\n        }    \n        console.log(countMesh + _qt_ meshes deleted_qt_)_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tHere_t_s a way to format a date so it has leading zeroes with numbers under 10. Otherwise the width of the output will jump around. Remember to use a monospaced font. \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_function formatDate(d){\n    function pad(n){return n&lt_sm_10 ? _t_0_t_+n _dd_ n_sm_}\n    function pad2(n){ if (n &lt_sm_ 10) return _t_00_t_+n_sm_ else if (n &lt_sm_ 100) return _t_0_t_+n_sm_ else return n_sm_ }\n    return d.getFullYear()+_t_-_t_+ pad(d.getMonth()+1)+_t_-_t_+ pad(d.getDate())+_t_ _t_+ pad(d.getHours())+_t__dd__t_+ pad(d.getMinutes())+_t__dd__t_+ pad(d.getSeconds())+_t_._t_+ pad2(d.getMilliseconds())_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tCalculate distance between meshes? \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_function getDistanceBetweenMeshes( mesh1_co_ mesh2 )\n{\n    //log(_qt_mesh1_eq__qt_+mesh1)_sm_\n    //log(_qt_mesh2_eq__qt_+mesh2)_sm_\n    \n    var v1 _eq_ mesh1.position_sm_\n    var v2 _eq_ mesh2.position_sm_\n    \n    var dx _eq_ v1.x - v2.x_sm_\n    var dy _eq_ v1.y - v2.y_sm_\n    var dz _eq_ v1.z - v2.z_sm_\n\n    var result _eq_ Math.sqrt( dx * dx + dy * dy + dz * dz )_sm_\n    return result.toFixed(5)_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tand the final entry for now ... it could be refactored to find the orbit distance of a planet based on the planet speed. \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_function calculateOrbitalSpeed(starSize_co_ planetSize_co_ planetOrbit) {\n    //the formula for obital speed is ... planet velocity _eq_ SQRT (gravity constant • mass of star / radius of orbit)\n    //but since the planet mass is negligible we are just using the mass of the star\n    var planetOrbitRadius _eq_ planetOrbit/2_sm_\n    //var gravityConstant _eq_ (starSize*planetSize)/Math.pow(planetOrbitRadius_co_ 2)_sm_\n    var gravityConstant _eq_ (starSize)/Math.pow(planetOrbitRadius_co_ 2)_sm_\n    planetSpeed _eq_ Math.sqrt(gravityConstant*starSize)/planetOrbitRadius_sm_\n    return planetSpeed_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-02-10T18:24:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThank you for this_co_ this will surely help a lot of beginners!\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]