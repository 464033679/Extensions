[{"Owner":"JCPalmer","Date":"2015-11-19T18:03:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I am informed by the behavior of the Blender exporter for BabylonJS. If you assign a skeleton to a mesh_co_ it no longer writes an optimized list of verts/normals/UV/etc.  It writes them all.  Now I do not really know why this required_co_ but lets assume it (I will challenge this through experimentation @ another time)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This can create a choke point.  As your mesh gets larger_co_ if you have a skeleton you could reach the 65k limit of indices (likely causing problems for mobile)_co_ where as if they were optimized they would not.  If you are not optimizing_co_ would not requiring indices completely solve the problem?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_That is if it works.  There is much checking if indices are defined in JS_co_ but will the other buffers work without the index?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-11-19T19:23:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_First part_co_ are optional? No.  when I pass a mesh setting no indices_co_ I get the error _qt_Error_dd_ WebGL_dd_ drawElements_dd_ bound element array buffer doesn_t_t have any data_qt_.  I am not sure where or why it is being bound yet._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-19T20:56:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Optional_dd_ no _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-11-19T21:00:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I jumped over to the Blender side to start allowing meshes with skeletons to be optimized_co_ and put in the same checking that the matrix weights &amp_sm_ indices also matched_co_ like normals_co_ UV_t_s_co_ &amp_sm_ color.  Was a lot easier with the calling of this new method_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_def same_array(arrayA_co_ arrayB)_dd_    if len(arrayA) !_eq_ len(arrayB)_dd_ return False    for i in range(len(arrayA))_dd_        if arrayA[i] !_eq_ arrayB[i] _dd_ return False            return True_lt_/pre_gt__lt_p_gt_Got real good optimization_co_ and the runtime as actually 20% faster.  DK_co_ you just gave up on optimizing with skeletons_co_ right?  _lt_strike_gt_I hate to mark this as answered_co_ cause thought the first way should have worked._lt_/strike_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This is actually much better than no indices.  This reduces_co_ by a lot_co_ positions_co_ normals_co_ uvs_co_ skeleton weights &amp_sm_ indices_co_ and the skeleton extras when # of influencers &gt_sm_ 4. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Gryff_co_ you should redo your Blue Lady_co_ once this is implemented in the Repo.  Actually anyone who has an existing .babylon generated with a Blender exporter v3.0 or less with a skeleton._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-19T22:07:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_it was more a timing issue_dd_) so I_t_m glad you did it _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]