[{"Owner":"cpu_sam","Date":"2018-01-27T22:51:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello again people!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWell_co_ I have a little problem with collisions in babylon with cannon js. For example_dd_ I move my player with translate_co_ it_t_s just a box with box impostor_co_ and when I go and crash with another  box the player is  throw in the other sense_co_ here it_t_s all ok but the force with the player is throw it_t_s very strong. I tried with resitution _eq_ 0 or friction _eq_ 1 but happens the same strong counter force.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ can anyone help me?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-01-28T11:35:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi again_co_ Sam!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#15AFCG%2328_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#15AFCG#28_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tA little testing playground.  Cursor keys move the green box... slowly.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe _lt_em_gt_translate_lt_/em_gt_ command... moves a mesh REAL FAST.  Not always _lt_u_gt_far_lt_/u_gt__co_ but _lt_u_gt_fast_lt_/u_gt_... and _lt_u_gt_with lots of physics force_lt_/u_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn this playground_co_ I made line 72 power... real low/small.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPower is not the correct term.  We should name it _qt__lt_strong_gt_distance_lt_/strong_gt__qt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet_t_s imagine that a _lt_em_gt_translate..._lt_/em_gt_ happens at 1000 KPH speed_co_ with 100000 newtons of force_co_ because _lt_u_gt_IT DOES_lt_/u_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMass_co_ friction_co_ and restitution settings have little affect (or unexpected affect)... against a 1000 KPH 100000 newtons force_co_ right?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_em_gt_Translate_lt_/em_gt_ and _lt_em_gt_rotate_lt_/em_gt_ are _lt_u_gt_not_lt_/u_gt_ physics engine commands.  They are designed to move mesh_co_ not impostors/p-mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe BETTER way to move physics-active mesh (call them _t_p-mesh_t_ if you like)... is with applyImpulse_co_ applyforce_co_ setLinearVelocity_co_ and setAngularVelocity.  Those methods are physics-engine-based movers_co_ and therefore_co_ they can be _qt_counter-acted_qt_ by mass_co_ friction_co_ and restitution calculations.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tConversely_co_ _lt_em_gt_translate_lt_/em_gt_ and _lt_em_gt_rotate_lt_/em_gt_ cares nothing about impostor counter-action/opposing forces.  _lt_em_gt_Translate_lt_/em_gt_ and _lt_em_gt_rotate_lt_/em_gt_ ignore calculations made by the physics engines.  They move distance or turn angles_co_ no matter what.  After the _lt_em_gt_translate_lt_/em_gt_ or _lt_em_gt_rotate _lt_/em_gt_finishes_co_ the physics engine re-syncs the impostor to the new mesh position_co_ then it discovers a positional overlap in two of its impostors_co_ and goes counter-force crazy... trying to de-overlap the impostors.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ I think.... applyImpulse_co_ applyForce_co_ setLinearVelocity... those are _lt_u_gt_better ways_lt_/u_gt_ to move a _lt_u_gt_physics-active mesh_lt_/u_gt_ (p-mesh).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd_co_ in my opinion_co_ it is very difficult to get good player control... using physics engine forces.  P-mesh tend to slide too far_co_ tip over_co_ do unwanted spin_co_ it is just not easy.  It is because... with p-mesh... the physics engine is the boss of movements... not Sam_t_s keypresses.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNotice that there are few or none... _qt_drive a player with physics forces_qt_ demos/playgrounds.  Why?  Because it is very difficult.  In a way_co_ using p-forces (impulse/force/lin-velocity) is like BLOWING AIR on your p-mesh player.... to make it move.  Ever try to accurately-control/move an empty styro-foam cup... by blowing on it?  Almost impossible_co_ eh?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway_co_ I THINK this is the heart of your problems.  I hope you understand.  Feel free to ask questions.  We can discuss/test keypress-repeat micro-impulsings or taper-up/taper-down setLinearVelocity systems_co_ if you like. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBe patient with yourself.  This is advanced stuff.  Do tests... think hard.  Use this playground to make edits_co_ and more saves_co_ more tests_co_ and paste the URLs from those saves... here... and we will discuss them_co_ if you wish.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Back on-subject_lt_/strong_gt__dd_  To stop a moving p-mesh instantly... try things like this...\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_player.physicsImpostor.setLinearVelocity(BABYLON.Vector3.Zero())_sm_\nplayer.physicsImpostor.setAngularVelocity(BABYLON.Vector3.Zero())_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThat should work_co_ or something similar.  Physics impostors have _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/3.1/physicsimpostor#oncollide-e-body-any-gt-void_qt_ rel_eq__qt_external nofollow_qt__gt_an onCollide() function_lt_/a_gt_.  That might be a good place to put those _qt_stop the p-mesh_qt_ commands above. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBUT... keep in mind that player.physicsImpostor is constantly colliding with the ground... so... there might be problems testing-for collision... in this way. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe _qt_intersectsMesh_qt_ feature... as seen in _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/?10_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/?10_lt_/a_gt_  - lines 68-73... might work for collide testing.  But_co_ you will need to test for player intersecting with ANY collide-able objects in the scene (use for-loop_co_ checking player collisions with all other collide-able mesh).  That sort-of sucks_co_ eh?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI hope I have been helpful.  Not very much good news for Sam.  Sorry.  Others may comment soon_co_ so stay tuned.  Party on!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-01-28T15:10:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey Sam_co_ I forgot to tell you something.  One of our users... said that it would be wise... to place an invisible p-mesh above the player_co_ and attach a physics joint... possibly a lockJoint or a stiff springJoint... between the invisible mesh impostor... and the player impostor. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen_co_ try your translate on the invisible mesh... and let the force travel down thru the joint... into the player p-mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis way_co_ there is a physics _qt_isolator_qt_ (insulator?) between the powerful_co_ fast translate force_co_ and the ACTUAL player.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have never tried this_co_ but it MIGHT be worth testing.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOk_co_ bye again.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"cpu_sam","Date":"2018-01-28T15:44:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThank you again Wingnut_co_  the real problem it_t_s not the force of translate_co_ because I had seen that translate it_t_s very power full (even more than 9K!!! hehe) and I saw that it_t_s not proper to my test.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI had change mesh.rotate() by impostor.setAngularVelocity and works fine_co_ but change mesh.translate to impostor.setLinearVelocity and the same problem of before_dd_ the mesh move in the world axis_co_ not in the local axis (that change with rotation). So_co_ appears me that 3D it_t_s not to play_co_ but it_t_s far very fun!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you have some book_co_ tutorial_co_ or any think (free please) to show me_co_ please_co_ share it. I want to be good with 3D environments like I do with 2D\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe I just need something like collision detection and response _qt_hard_qt__co_ like in general 2d world.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-01-28T15:49:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#15AFCG%2330_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#15AFCG#30_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI made a _qt_drag-player-from-overhead-physics-joint_qt_ demo.  Arrow keys.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWorks pretty good.  Interesting_co_ at least.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI could make a snow plow_co_ bulldozer_co_ or road-grader... out of this.  _lt_img alt_eq__qt__dd_o_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_ohmy.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/ohmy@2x.png 2x_qt_ title_eq__qt__dd_o_qt_ width_eq__qt_20_qt_ /_gt_  heh  FUN!  We got motorEnabled_co_ so we can tilt and angle the plow blade.  And we can just raise the Y of ibox (which is invisibleBox_co_ in the end)... to lift the plow.  Just need to generate 2.5 million physics-active dirt clods_co_ now_co_ and we_t_re in Tonka Truck Land!  Yay!  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAside_dd_  Are any of you guys seeing a one-line-scroll... of the PG app... when up/down arrowing?   Annoying_co_ eh?  CSS issue_co_ somewhere.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Update_dd_  _lt_/strong_gt_Url changed to #30... fixed an ibox z-position.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Another_dd_  _lt_/strong_gt__lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#15AFCG%2331_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#15AFCG#31_lt_/a_gt__lt_strong_gt_  Line 141...  _lt_/strong_gt_speed up Cannon timestep... 3 times faster.  I like fast physics engine.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"cpu_sam","Date":"2018-01-28T18:58:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWingnut_co_ ok thanks.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust an off-question_dd_ which is the javascript version that should I use with Babylon?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-01-28T22:22:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tif you_t_re asking for the version of the physics engine Cannon - I think we are meant to stick with the one included with babylonJS distribution_dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/tree/master/dist_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/tree/master/dist_lt_/a_gt__lt_br /_gt_\n\tI think it_t_s a modified cannon.js to work with the framework.  The newer versions I found on the internet I did not get working.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you mean BabylonJS version for timestep_co_ I don_t_t think it was added until 3.0_co_ but there were bug fixes for it in 3.1.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"cpu_sam","Date":"2018-01-28T22:44:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks brianzinn but I_t_m talkiing aboutECMAS version used by babylon_co_ I suppose be &gt_sm__eq_ 6\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWith your link I got the correct cannon to babylon_co_ thank you.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-01-29T03:10:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt only depends on what clients you want to support what version YOU are using.  If you are using javascript then you can use babel to target ES5_co_ because probably you want to use all the ES6 (ES2015) goodness when writing your app!  I even use ES7 decorators with babel and target es2015 when I use javascript.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you_t_re wondering about BabylonJS_co_ it_t_s written in typescript and compiled to target ES5 (from 2009)_co_ so it will support a wide variety of browsers_dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Tools/Gulp/gulpfile.js#L52_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Tools/Gulp/gulpfile.js#L52_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]