[{"Owner":"thomasc","Date":"2016-08-05T16:18:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m currently working on a Google Street View like in-browser app _dd_ I use pictures projected on a sphere with back face culling and an ArcCamera located at the center to allow the user to scroll the view around_co_ and in every such sphere_co_ I put a few arrow billboards that send the user to another view when clicked on (a parameter in the url holds a view id_co_ and clicking such a link changes the document.location.href with the correspoding id in parameter). Very similar to _lt_a href_eq__qt_https_dd_//www.simplicity.be/article/vr-photo-sphere-webgl/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.simplicity.be/article/vr-photo-sphere-webgl/_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy problem is that the memory usage of my browser keeps growing when I_t_m changing view (in fact only when I_t_m clicking on point not visited before_co_ i.e. whose picture have not been loaded yet). I_t_m using Firefox_co_ and the pictures used weight between 500 kb and 1 Mo size_co_ but every new view visited adds several Mo to my computer memory_co_ as seen on the Task Manager for the Firefox process. I_t_ve tryed things like calls to engine.dispose or engine.resetTextureCache before page changing_co_ but nothing changed. Before using babylon.js to correct projection_co_ pictures where simply rendered on a canvas and this problem was not encountered.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m guessing that babylon is holding some data in memory / cache even if the webpage has changed_co_ so how can I rmove this ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"aWeirdo","Date":"2016-08-05T19:11:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_ without any code_co_ we can only guess_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tit could be because babylon caches..\n_lt_/p_gt_\n\n_lt_p_gt_\n\ttry_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tengine.enableOfflineSupport _dd_ false_sm_ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"thomasc","Date":"2016-08-06T23:22:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThank you for your reply aWeirdo _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tThe method I used initially was pretty bad I think_co_ since changing document.location.href implied the engine_co_ scene_co_ textures... to be destroyed and recreated for the new point of view each time. I_t_ve swtched to a more efficient approach where only the texture mapped on the sphere is changed (and the associated material updated) when the user want to change his point of view.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have another question yet on textures_co_ because I don_t_t understand how the engine is managing them _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet say that the place for which I wan_t_t to create a street view like experience is made of 10 points of view_co_ i.e. i have 10 * 360° pictures_co_ one being mapped on my sphere at a time_co_ depending on the point of view currently visited by the user.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tInitially_co_ I used the following piece of code for updating my sphere texture _dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_materialPicture.diffuseTexture.dispose_sm_\npictureTexture _eq_ new BABYLON.Texture(picturesPathnames[i]_co_ scene_co_ false_co_ true_co_ BABYLON.Texture.TRILINEAR_SAMPLINGMODE)_sm_\nmaterialPicture.diffuseTexture _eq_ pictureTexture_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tTextures where not loaded in advance (because there can be an important number of point of views)_co_ so this code resulted in the texture being loaded from the corresponding file each time the user changed location_co_ even if the point of view has already been visited_co_ and took quite some time each time (~1 s. with 1MB files). Note that I_t_m only working with local file (enabling the access to local file in my browser parameter to perform test). Inspecting the task manager on windows shown that changin the view point increased significatively the memory consumption of the web browser (Firefox) for a few seconds_co_ due to the texture loading apparently_co_ before diminishing.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut I relalized that if the instruction _t_materialPicture.diffuseTexture.dispose_sm__t_ is removed_co_ then visiting a new point of view still takes a bit of time in order to load the associated texture_co_ but once a view point has already been seen_co_ then the texture loading (call to _t_new BABYLON.Texture) is instant and the memory consumption shown on the task manager remain constant and low (memory usage being the same after visiting a few points than at startup on the first point of view being loaded).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt seems like some sort of caching is being performed internally (I_t_l not keeping track of textured loaded on my side)_co_ but why doesn_t_t it increase the amount of memory being used by the browser ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen I keep textures by hand in an array as they are loaded_co_ or when I load every textures at the launch of the webpage before allowing the user to travel (which does not require to access the files after the loading then)_co_ the amount of memory used by the webbrowser is significatly more important.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat is going on here ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"aWeirdo","Date":"2016-08-06T23:43:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/23076-thomasc/?do_eq_hovercard_qt_ data-mentionid_eq__qt_23076_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/23076-thomasc/_qt_ rel_eq__qt__qt__gt_@thomasc_lt_/a_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf i was you_co_ i would load all textures at once_co_ and then switch between them as needed_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAn edit of the materials PG as example_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#29DGQU%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#29DGQU#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\ton-the-go loading of stuff is rarely a good idea _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tyou could store them in an array or something and and find them depending on where the user is going.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs for why cached textures doesn_t_t increase the memory when _qt_reloaded_qt_ is because it_t_s already there ^^\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"thomasc","Date":"2016-08-07T10:15:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello aWeirdo_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m now loading my 10 textures at application launch so it_t_s efficient once everything is loaded _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ (on task manager_co_ memory foot-print for Firefox is ~200 MB). But during textures loading_co_ the memory consumption rise up to more than 1 Go (for 10 * 1 MB textures being loaded)_co_ and when executed on a weaker computer_co_ this results in a memory shortage with errors like this _dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_texImage2D _dd_ Ran out of memory when allocating a buffer for doing format conversion_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tApparently loading my *.jpeg texture implies conversions which require a lot of memory to be performed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat_t_s the best way to deal with this ? Should I encode my textures in a different file format to avoid conversion ? It_t_s seems also that babylon is loading the 10 textures in parallel_co_ or at least memory allocated to perform loading is not liberated immediately an remains for a short time if this is sequential_co_ because the memory footprint of Firefox during loading time is proportionnal to the number of textures being loaded.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"thomasc","Date":"2016-08-07T13:33:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis thing is driving me crazy _lt_img alt_eq__qt__dd_(_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ title_eq__qt__dd_(_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tOn the laptop I_t_m using at work with Firefox_co_ loading those 10 jpeg of roughly 1 MB of size each_co_ with the code you_t_ve posted on playground wWeirdo_co_ results in an increase of several hundred of MB of memory usage _lt_strong_gt_for a few seconds_lt_/strong_gt_ (as seen on Task Manager) before decreasing back to the standard Firefox memory usage of ~200-300 Mo. In this loading process_co_ between 1/3 and 1/2 of the textures are not loaded due to lack of memory_co_ and displayed black on the rotation.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen I used to load the images one at a time_co_ I was not facing this problem unless switching view rapidly_co_ meaning that if I _qt_pause_qt_ the loading process between each texture loading a few seconds_co_ this problem is not encountered (and the material are all present in memory in the end).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat surprises me is that I_t_ve searched the web for similar problem and couldn_t_t find another topic_co_ whereas some demos are far more complex and heavy than what I_t_m trying to do here. I mean nobody else as been facing such an issue for now ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"aWeirdo","Date":"2016-08-07T17:02:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/23076-thomasc/?do_eq_hovercard_qt_ data-mentionid_eq__qt_23076_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/23076-thomasc/_qt_ rel_eq__qt__qt__gt_@thomasc_lt_/a_gt_ something is clearly wrong..\n_lt_/p_gt_\n\n_lt_p_gt_\n\tin firefox_co_ on my pc_co_ at start-up it takes about 100MB of memory_co_ loading the PG i provided above increases it to about 138Mb and then after loading it is running smoothly_co_ going up and down between 135Mb and 138Mb.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthere are two textures on that PG_co_ around 320Kb in total_co_ and opening the PG on the basic scene example uses around 134-135Mb_co_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tnot a big difference tbh..\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut even with 10Mb of textures_co_ it shouldn_t_t jump that high..\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m loading roughly 75Mb of assets (both 3d models_co_ animations &amp_sm_ textures) on my project and firefox jumps to 435Mb on a clean start.. and that 435Mb also includes roughly 3Mb of html_co_ css_co_ Ui textures_co_ fonts &amp_sm_ js files.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf possible_co_ please try to re-create an example of your scene in the PG_co_ or host a live demo somewhere_co_ so we see what is happening.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nabroski","Date":"2016-08-08T07:14:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tHello_lt_br /_gt__lt_br /_gt_\n\tyou have to debug your code_lt_br /_gt__lt_br /_gt_\n\tsomething is wrong\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]