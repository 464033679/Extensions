[{"Owner":"ShimShamSam","Date":"2013-11-22T01:50:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/wiki/11---Picking-collisions_qt_ rel_eq__qt_external nofollow_qt__gt_The current mouse picking tutorial_lt_/a_gt_Â only deals with picking objects from the scene. Often_co_ when getting the 3D mouse position_co_ you only want to get the point at which the mouse ray intersects a ground plane. I could manually create a ground plane and use intersectsWith_co_ but it seems inefficient to create a mesh for the sole purpose of detecting the mouse position. Other 3D engines I have worked with allow creating a plane without actually attaching it to the scene. The calculation would still work because all of the transform data is there. Is there a way to do this? My current solution is to create a _qt_ground_qt_ plane and set isVisible to false_co_ but this seems hacky especially since there seems to be a limit to the size of ground._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2013-11-22T21:17:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This is the right way to do that. The plane will available for picking but ignored by the scene_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]