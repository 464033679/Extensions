[{"Owner":"San","Date":"2015-08-11T09:19:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Is Babylonjs support Inverse Kinematics ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BSS","Date":"2015-08-11T10:08:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I have same doubt._lt_/p_gt__lt_p_gt_If supported how ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"San","Date":"2015-08-11T11:23:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Guys_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Please help_co_ with out Inverse Kinematics support I can_t_t continue my project in Babylon  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_!San_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2015-08-11T11:55:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_As far as I know Babylonjs doesn_t_t support inverse kinematics.  What is it that you are trying to accomplish?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-08-11T15:51:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_There is no support for inverse kinematics. but everything is possible _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"San","Date":"2015-08-12T04:49:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I have an arm like structure_co_ it is loaded in to babylon as 3 different meshes. I would like to input the XYZ point in 3D space as to move the arm to that coordinate position._lt_/p_gt__lt_p_gt_Without Inverse kinematics (IK) is it possible ?. If yes_co_ could you please share a sample code._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-08-12T05:29:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_San_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If I understand correctly_co_ you are looking to translate an end effector of a bone chain to an (x_co_y_co_z) position and have this single transform update each bone/joint orientation of an IK chain hierarchy?  If this is your goal_co_ then I believe this is not currently possible the way you desire - to automatically update bone orientation in an IK chain.  At least not without a complex series of constraints to _qt_simulate_qt_ the behavior of an IK joint/bone hierarchy.  The only other current possibility might be to constrain the centers of each joint/bone in a skeleton hierachy (with additional constraints required  to simulate the relationships in the skeleton hierarchy) and to constrain these joint centers to the points on a spline_co_ and articulate/translate the points on the spline affecting the centers of the bone chain - known as spline IK ( if you are unfamiliar with this specific IK relationship.)  But the results are odd at best for any decent character animation._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_However_co_ I believe IK support is needed and essential for babylon.js.  I_t_ll try and find code for a robust_co_ flexible_co_ and reliable IK chain method_co_ as there are several we could choose from - however_co_ we should only choose one method of function_co_ attributes_co_ and behaviors_co_ and completely commit to that one method for all of eternity.  This function_co_ attribute... whatever - IK - is far more difficult to impliment than most people probably perceive it might be_co_ as it relies so heavily on multiple key functions such as parenting hierarchies_co_ inherant dependancies_co_ very specific constraint relationships_co_ bone mesh attributes which specifically apply to the IK behavior_co_ joint area limits and behaviors inherited from and between parent and child bones_co_ _qt_special_qt_ objects and unique object attribues and behaviors such as chain roots_co_ end effectors_co_ etc._co_ and a plethera of quaternion formula no one will want to ever know - and that_t_s simply a slice of what is ESSENTIAL for any IK chain worth using at all._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_We could start out with a simple _qt_simulated_qt_ IK chain constraint along with additional additive constraints to cover specific needs_co_ but this would end up being a complete waste of time.  Please trust me on this_co_ as I_t_ve been down this road many times and for many years - repreatedly.  I personally would suggest choosing the IK chain functions which Kaydara wrote (and was aquired by Autodesk) which is written into the .fbx file format and adopted by all Autodesk products following the Kaydara Filmbox software aquisition.  This will provide the most flexibility in the short term_co_ and in the long term allow for maximum flexability in retargetting animation as well as simplifying a whole host of tools for blending animation_co_ managing/handling bone _qt_flipping_qt_ (rotation order matrix limitations in joint rotational behavior)_co_ allow for additional and rational joint/chain transforms such as translation and scaling_co_ and a long_co_ long list of functions that EVERYONE (even those not working with character animation_co_ rigging_co_ vertex weighting_co_ etc.) will find useful and even essential in solving more complex animations in their scenes and projects._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_When I return from vacation next week_co_ I_t_ll contact Andre Guatier who founded Kaydara_co_ wrote the .fbx file format and the Motionbuilder software suite (originally licensed as Kaydara _qt_Filmbox_qt_)_co_ and ask if he might provide or assist in writing the support for IK in Babylon.  I_t_ll do my best to post the scope of what he might contribute to let the community know if he is available (and even interested) for his invaluable guidance - however_co_ the bad news for those who need this immediately_co_ is that there will be virtually no movement and no IK available for at least a month or more - which actually is a VERY OPTIMISTIC timetable (regardless of who gets involved) - unless I can push Andre into a multi night / massive cigarette pack coding binge like we used to have in _qt_the good old days._qt_  Or unless someone unknown to me (which I strongly vote against any short term or temp solution) decides to write a simple IK solution which I can assure would be a mistake for a miriad of reasons - not to mention the ugly legacy that always survives when pushing an incomplete IK solution into a well oiled machine such as babylon.js.  The regret of doing so lasts indefinately_co_ and limitations and incompatabilities makes this path a very poor choice._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_As mentioned_co_ I_t_ll let the forum know as soon as I hear from Andre.  In the meantime_co_ for those who believe they might try to tackle this one - _qt_good luck with that._qt_  But don_t_t fret_co_ we_t_ll get it done_sm_ we have to - and hopefully in a reasonable time frame.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_DB_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]