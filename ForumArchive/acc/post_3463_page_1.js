[{"Owner":"neoRiley","Date":"2014-01-30T17:35:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Are there any examples of how to use the Octree feature with babylon? _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What I_t_m trying to do is have a fish tank with several fish and be able to call a method like _qt_getNeighbors()_qt_ for avoidance essentially._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks for the help!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-01-30T21:38:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_to create the octree_co_ you have to call_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_scene.createOrUpdateSelectionOctree()_lt_/pre_gt__lt_p_gt_The octree is then saved into scene._selectionOctree._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_See here for implementation details_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/tree/master/Babylon/Culling/Octrees_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/tree/master/Babylon/Culling/Octrees_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"neoRiley","Date":"2014-01-30T22:39:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok so_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_1.  Does _qt__lt_span_gt_scene_lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(102_co_102_co_0)_sm__qt__gt_._lt_/span_gt__lt_span_gt_createOrUpdateSelectionOctree_lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(102_co_102_co_0)_sm__qt__gt_()_qt_ go into the loop or is that a one time call?  If it_t_s a one time call_co_ do I have to call Update() on the octree in the render loop?_lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(102_co_102_co_0)_sm__qt__gt_2.  To get neighbors_co_ do I simply call _qt_select()_qt_ on the octree object?  if so_co_ what do I pass for the frustrumPlanes argument?  I can see that it is a _lt_/span_gt__lt_span style_eq__qt_background-color_dd_rgb(249_co_249_co_249)_sm_color_dd_rgb(44_co_62_co_80)_sm_font-family_dd_Lato_co_ _t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_15px_sm__qt__gt_BABYLON.Plane[] array_co_ but where do I derive this array?_lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_background-color_dd_rgb(249_co_249_co_249)_sm_color_dd_rgb(44_co_62_co_80)_sm_font-family_dd_Lato_co_ _t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_15px_sm__qt__gt_Can you shed just a little more light on this?_lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_background-color_dd_rgb(249_co_249_co_249)_sm_color_dd_rgb(44_co_62_co_80)_sm_font-family_dd_Lato_co_ _t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_15px_sm__qt__gt_Thanks for your time_lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_background-color_dd_rgb(249_co_249_co_249)_sm_color_dd_rgb(44_co_62_co_80)_sm_font-family_dd_Lato_co_ _t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_15px_sm__qt__gt_John_lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-01-31T17:49:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_span style_eq__qt_color_dd_#1f497d_sm__qt__gt__lt_span style_eq__qt_font-family_dd_calibri_co_ sans-serif_sm__qt__gt__lt_span style_eq__qt_font-size_dd_11pt_sm__qt__gt_In Babylon.js I create octree to help me finding visible objects_lt_/span_gt__lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_#1f497d_sm__qt__gt__lt_span style_eq__qt_font-family_dd_calibri_co_ sans-serif_sm__qt__gt__lt_span style_eq__qt_font-size_dd_11pt_sm__qt__gt_To do so_co_ you have to call scene.createOrUpdateOctree().This will take all the submeshes of every mesh and put them into the octree._lt_/span_gt__lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_#1f497d_sm__qt__gt__lt_span style_eq__qt_font-family_dd_calibri_co_ sans-serif_sm__qt__gt__lt_span style_eq__qt_font-size_dd_11pt_sm__qt__gt_If you want to create your own octree_co_ you can call_dd__lt_/span_gt__lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_#1f497d_sm__qt__gt__lt_span style_eq__qt_font-family_dd_calibri_co_ sans-serif_sm__qt__gt__lt_span style_eq__qt_font-size_dd_11pt_sm__qt__gt_var octree _eq_ _lt_/span_gt__lt_/span_gt__lt_/span_gt__lt_span style_eq__qt_color_dd_#0000FF_sm__qt__gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_new_lt_/span_gt__lt_/span_gt__lt_/span_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_ BABYLON.Octree()_sm__lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_#1f497d_sm__qt__gt__lt_span style_eq__qt_font-family_dd_calibri_co_ sans-serif_sm__qt__gt__lt_span style_eq__qt_font-size_dd_11pt_sm__qt__gt_then you can call octree.update(min_co_ max_co_ meshes) to dispatch submeshes of meshes into the octree (min and max  defining the extends of the world. There are vector3)_lt_/span_gt__lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_#1f497d_sm__qt__gt__lt_span style_eq__qt_font-family_dd_calibri_co_ sans-serif_sm__qt__gt__lt_span style_eq__qt_font-size_dd_11pt_sm__qt__gt_The octree has now a function called select(frustrumPlanes). This function go through the octree and select visible submeshes accordingly to the frustrum planes._lt_/span_gt__lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_#1f497d_sm__qt__gt__lt_span style_eq__qt_font-family_dd_calibri_co_ sans-serif_sm__qt__gt__lt_span style_eq__qt_font-size_dd_11pt_sm__qt__gt_Basically the octree is a collection of of OctreeBlock which in turn can contain submeshes or octreeblocks_lt_/span_gt__lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_#1f497d_sm__qt__gt__lt_span style_eq__qt_font-family_dd_calibri_co_ sans-serif_sm__qt__gt__lt_span style_eq__qt_font-size_dd_11pt_sm__qt__gt_In you case_co_ you can write a function which can go through all blocks and which try to get block around a given position_dd__lt_/span_gt__lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_Var select _eq_ _lt_span style_eq__qt_color_dd_#0000FF_sm__qt__gt_function_lt_/span_gt__lt_/span_gt_(position) {_lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_#0000FF_sm__qt__gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_        var _lt_/span_gt__lt_/span_gt__lt_/span_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_selection _eq_ _lt_span style_eq__qt_color_dd_#0000FF_sm__qt__gt_new_lt_/span_gt__lt_/span_gt_ BABYLON.Tools.SmartArray(256)_sm__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_        _lt_span style_eq__qt_color_dd_#0000FF_sm__qt__gt_for_lt_/span_gt__lt_/span_gt_ (_lt_span style_eq__qt_color_dd_#0000FF_sm__qt__gt_var_lt_/span_gt__lt_/span_gt_ index _eq_ 0_sm_ index &lt_sm_ _lt_span style_eq__qt_color_dd_#0000FF_sm__qt__gt_octree_lt_/span_gt_.blocks.length_sm_ index++) {_lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_            _lt_span style_eq__qt_color_dd_#0000FF_sm__qt__gt_var_lt_/span_gt__lt_/span_gt_ block _eq_ _lt_span style_eq__qt_color_dd_#0000FF_sm__qt__gt_octree_lt_/span_gt__lt_/span_gt_.blocks[index]_sm__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_            blockSelect(block_co_ position_co_selection)_sm__lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_        }_lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_        _lt_span style_eq__qt_color_dd_#0000FF_sm__qt__gt_return_lt_/span_gt__lt_/span_gt_ selection_sm__lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_    }_sm__lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_Var blockSelect _eq_ _lt_span style_eq__qt_color_dd_#0000FF_sm__qt__gt_function_lt_/span_gt__lt_/span_gt_ (block_co_ position_co_ selection) {_lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_        _lt_span style_eq__qt_color_dd_#0000FF_sm__qt__gt_if_lt_/span_gt__lt_/span_gt_ (block.blocks) {_lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_            _lt_span style_eq__qt_color_dd_#0000FF_sm__qt__gt_for_lt_/span_gt__lt_/span_gt_ (_lt_span style_eq__qt_color_dd_#0000FF_sm__qt__gt_var_lt_/span_gt__lt_/span_gt_ index _eq_ 0_sm_ index &lt_sm_ block.blocks.length_sm_ index++) {_lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_                _lt_span style_eq__qt_color_dd_#0000FF_sm__qt__gt_var_lt_/span_gt__lt_/span_gt_ block _eq_ block.blocks[index]_sm__lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_                blockSelect(block_co_ position_co_ selection)_sm__lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_            }_lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_            _lt_span style_eq__qt_color_dd_#0000FF_sm__qt__gt_return_lt_/span_gt__lt_/span_gt__sm__lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_        }_lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_        _lt_span style_eq__qt_color_dd_#0000FF_sm__qt__gt_// Here you can use block._boundingVectors which define the extends of the block_lt_/span_gt__lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_#0000FF_sm__qt__gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_       // If block is near the position then _lt_/span_gt__lt_/span_gt__lt_/span_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_selection.push(_lt_span style_eq__qt_color_dd_#0000FF_sm__qt__gt_this_lt_/span_gt__lt_/span_gt_)_sm__lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_consolas_sm__qt__gt__lt_span style_eq__qt_font-size_dd_9.5pt_sm__qt__gt_   }_sm__lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_#1f497d_sm__qt__gt__lt_span style_eq__qt_font-family_dd_calibri_co_ sans-serif_sm__qt__gt__lt_span style_eq__qt_font-size_dd_11pt_sm__qt__gt_The select function just below will return you the list of octreeblocks near the position. You just have to use octreeblock.meshes to get the inner meshes._lt_/span_gt__lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_#1f497d_sm__qt__gt__lt_span style_eq__qt_font-family_dd_calibri_co_ sans-serif_sm__qt__gt__lt_span style_eq__qt_font-size_dd_11pt_sm__qt__gt_BUT (because there is always a but)_co_ this will only work if your fishes are not moving too much (Because else they may change their containing octreeblock)_lt_/span_gt__lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_#1f497d_sm__qt__gt__lt_span style_eq__qt_font-family_dd_calibri_co_ sans-serif_sm__qt__gt__lt_span style_eq__qt_font-size_dd_11pt_sm__qt__gt_Does it make sense?_lt_/span_gt__lt_/span_gt__lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"neoRiley","Date":"2014-02-01T03:03:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_That does help!  Thanks very much_co_ I appreciate it_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]