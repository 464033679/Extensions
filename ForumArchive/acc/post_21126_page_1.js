[{"Owner":"Pryme8","Date":"2016-03-12T05:48:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe first should have no problem._lt_br_gt_\n\tfor some reason the ball always pushes through the slope about halfway down... it just started doing that once I made the curves more exaggerated._lt_br_gt_\n\tThere has to be a work around for this anybody know of one?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#IXJQI%236_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#IXJQI#6_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-03-12T19:39:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am enjoying your physics questions _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n_lt_p_gt_\n\tThis is a limitation enforced by Cannon. The simplest solution would be... increase the sphere_t_s size - _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#IXJQI%239_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#IXJQI#9_lt_/a_gt_ _co_ or create a thicker mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI didn_t_t debug fully_co_ but this usually happens due when the physics engine _qt_misses_qt_ the next collision if it happens too fast. I will try debugging this further and see if there is a better solution (another would be to _qt_thicken_qt_ the path you created with more points).\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-03-12T19:57:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis may be kinda a heavy question... but what direction should I start looking in for simulating _qt_soft bodies_qt_  I was thinking of somehow grouping areas of vertices and making a object that tracks their velocity and other physical factors then somehow iterate though the groups of vertices updating the mesh to the forces being applied?_lt_br_gt__lt_br_gt_\n\tSo Im assuming then I would need to track the points and the indices_co_  with the points being the elements that move and the indices being used for the surface spring calculations?_lt_br_gt__lt_br_gt_\n\tIm not gonna get into it to much quite yet_co_ but its on the white board..._lt_br_gt__lt_br_gt__lt_br_gt_\n\talso wanna see something freakout?  _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#IXJQI%2310_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#IXJQI#10_lt_/a_gt__lt_br_gt__lt_br_gt_\n\tI dont think the system likes the idea of contact points.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-03-12T20:51:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSoft bodies are usually simulated using particles_co_ or using a lot of linked sphere impostors. Theoretically you could place a sphere on each index of a mesh and connect them using a fixed constraint (for example cannon_t_s distance constraint that keep bodies in a certain distance from one another). Those impostors will be _qt_tracking_qt_ the mesh_t_s indices without you needing to do anything.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCannon has a particles system (which can be seen in the cloth demo on cannon_t_s website - _lt_a href_eq__qt_http_dd_//schteppe.github.io/cannon.js/examples/threejs_cloth.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//schteppe.github.io/cannon.js/examples/threejs_cloth.html_lt_/a_gt_). I have yet to integrate the particles system_co_ but as this is a cannon-only feature I will have to come up with a good solution for Oimo as well. I think this will be a part of the custom-body implementations I am about to release (the first would be a car. You saw the cannon car_co_ here is Oimo_t_s - _lt_a href_eq__qt_http_dd_//raananweber.com/oimocar/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//raananweber.com/oimocar/_lt_/a_gt_) . One of the custom bodies will be a kind of _qt_cloth_qt_ system that will be constructed from a plane with a certain number of subdivisions. But this is a dream at the moment.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-03-12T20:58:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI might start working on it once I finish some other projects._lt_br_gt__lt_br_gt_\n\tI ask because for one of my demos I want to simulate rope physics_co_ and I think the particle system might be a good solution for that._lt_br_gt__lt_br_gt_\n\tAlso while I have you here is there a way to process blob meshs?  for example if I generate a set of points with like a 3d perlin_co_ and then only grab certain points_co_ is there a way to convert that into a mesh without having to figure anything out but the points?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-03-12T21:02:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tTo the rope - this will require joints/constraints which already exist (you even have a spring constraint if using CannonJS). Will be documented soon _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt_ I know I am repeating myself_co_ but I really want to first finish all features before documenting.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo your second question - you can create a mesh (using new Mesh(...)) and set its vertices and indices to the points you need. This will require you to also triangulate those points. I don_t_t know the exact use-case_co_ but this would be the easiest way to create a mesh from points. BUT! _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5453_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/_qt__gt_@jerome_lt_/a_gt_ might be able to provide a better answer for that (or better - the math wizard will be helping you for sure _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt_ ). I would however recommend you to start a new thread for that_co_ since this will create confusion for future users that would read this _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-03-12T21:11:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOk ive done ropes with the joint solution_co_ so if that_t_s what you recommend that_t_s what Ill stick to! thanks_lt_br_gt__lt_br_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_ [wheel1_co_ wheel2_co_ wheel3_co_ wheel4].forEach(function(w) {\n        w.physicsImpostor _eq_ new BABYLON.PhysicsImpostor(w_co_ BABYLON.PhysicsImpostor.SphereImpostor_co_ { mass_dd_ 10_co_ friction_dd_ 4_co_ restitution_dd_ 0.5_co_ nativeOptions_dd_  {\n        move_dd_ true\n    } })_sm_\n    })_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tby the way this is beautiful script!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-03-13T07:24:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/?do_eq_hovercard_qt_ data-mentionid_eq__qt_19199_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/_qt__gt_@Pryme8_lt_/a_gt_ for your blob mesh_co_ ribbons may be the solution\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/tutorials/Parametric_Shapes_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/tutorials/Parametric_Shapes_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/tutorials/Ribbon_Tutorial_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/tutorials/Ribbon_Tutorial_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]