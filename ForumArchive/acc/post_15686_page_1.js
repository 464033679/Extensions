[{"Owner":"adam","Date":"2015-07-12T15:53:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The shading on this simple tube mesh does not look correct_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1A4DON_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1A4DON_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Can someone tell me what I am doing wrong?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Edit_dd_  light is shining from above so I wouldn_t_t expect there to be a gradient on one side and a hard edge on the other._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2015-07-12T16:18:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m guessing the default texture has a simple linear gradient and to get rid of it_co_ I just need to assign a texture that doesn_t_t have a gradient.  Is that correct?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-07-12T16:30:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I don_t_t think it has something to do with a gradient. The  standard material should not do something like that as far as I know. I think it_t_s more about how the light gets calculated... something about the normals? I don_t_t know enough to tell you why _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ Let_t_s wait for Jerome or somebody else who can tell you more about it _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But the effect is less visible the more tessellation you use_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1A4DON%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1A4DON#1_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-07-12T16:41:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_No_co_ I know why this behaves that way._lt_/p_gt__lt_p_gt_Well_co_ it_t_s a hard choice _dd_ the tube is done with a tubular closed ribbon. So we have two choices to close the ribbon _dd__lt_/p_gt__lt_p_gt_- either set the last vertices at the same positions than the first ones (this is this case)_co_ so if you apply a texture_co_ it will be stretched along the full circle. But the normals will be different on first and last vertices_co_ so you notice this artefact (unless maybe you increase the tessellation)._lt_/p_gt__lt_p_gt_- either re-use the first vertices as last ones. In this case_co_ the normals will be continuous along the circle and no artefact will appear... but as last and first vertices are the same_co_ they will be assigned only one uv pair... so you won_t_t be able to stretch a texture along the complete circle. In this case_co_ a higher tessellation will hide the texture problem._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This kind of problem appears with all BJS continuous closed shape _dd_ cylinder_co_ sphere. A choice had to be done _dd_ priority to normals or to textures._lt_/p_gt__lt_p_gt_As people usually give a texture to their meshes_co_ the priority is given to textures._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So_co_ what are the options _dd__lt_/p_gt__lt_p_gt_- increase the tessellation so the artefact is acceptable (or lower it if you want sharp egdes and it will be acceptable also... maybe)_lt_/p_gt__lt_p_gt_or_lt_/p_gt__lt_p_gt_- use _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/page.php?p_eq_24847_qt_ rel_eq__qt_external nofollow_qt__gt_ExtrudeCustom_lt_/a_gt_() instead with a circular shape ... and set the _lt_em_gt_ribbonClosePath_lt_/em_gt_ parameter to true. Actually this will build a tube by re-using the first and last vertices_lt_/p_gt__lt_p_gt_or_lt_/p_gt__lt_p_gt_- let me know people if you prefer that I change the _lt_em_gt_CreateTube_lt_/em_gt_() code to give priority to normals over textures._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-07-12T16:54:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Maybe add a parameter in the createTube function to let the user decide if the _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_first vertices should be _lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_re-use _lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_as last ones?_lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2015-07-12T17:16:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_That parameter in createTube would be a nice option._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For now_co_ I got it working using ExtrudeCustom and a circular shape._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1A4DON%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1A4DON#2_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-07-12T18:47:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_one more parameter ? Wingy will have a heart attack !  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_why not (despite it would be many parameters) ? but this wouldn_t_t solve the other continuous closed mesh problem (sphere_co_ cylinder) ..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@adam _dd_ for your PG with ExtrudeCustom_co_ you don_t_t need so many points in your path. I guess two only (start and stop) would be enough_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2015-07-13T07:52:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The trick is that _lt_em_gt_relying on VertexData.ComputeNormals for a closed shape will inevitably produce this sort of artifact on seams_lt_/em_gt_ (since polygons at the seams are not actually connected to each other_co_ their normals orientations cannot be correctly interpolated)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_BJS standard closed shapes (torus_co_ sphere_co_ cylinder...) have their normals set directly during mesh creation_co_ and do not rely on ComputeNormals. As such_co_ they avoid these artifacts._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Not saying there is actually a better way of doing things when it comes to ribbons... I just though it needed clarification._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-07-13T08:44:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The tube (or any ribbon) is constructed as other BJS standard meshes. You_t_ve got the same artifact on a cylinder for instance _dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1A4DON%238_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1A4DON#8_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It just depends on the choice to re-use vertices or not in the indices array._lt_/p_gt__lt_p_gt_If you re-use vertices (so the first and the last are the same vertex)_co_ then the normals are continuous and you don_t_t have any artifact. But in this case_co_ as only one uvs pair can set associated to this very vertex_co_ you can_t_t easily stretch a texture along the closed part _dd__lt_/p_gt__lt_p_gt_example _dd_ the first vertex has uvs _eq_ [0_co_0]... this vertex is re-used in indices as the last vertex _eq_&gt_sm_ its uvs is still [0_co_ 0] and not [1_co_ 0]_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_A workaround could be to change the way the shape are closed when building them._lt_/p_gt__lt_p_gt_Example _dd_ for a sphere you can choose to iterate first on latitudes then on longitudes or the contrary. This means the seam will etiher on a pole either on a start/end longitude. It is easier to hide a seam_co_ reduced to one point_co_ at a pole _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I suggested to DK an improvement (he agreed to) to_lt_em_gt_ computeNormals()_lt_/em_gt_ where we could pass it an optional extra-parameter (an array) to explicitly define what vertices should be considered as other ones in the computation. So in this case_co_ no need for vertex re-use _dd_ the normals would be computed as if they were reused for these declared vertices only. This means they could then have their own uvs each (right texture stretching) but normals computed as if they would belong to the next face._lt_/p_gt__lt_p_gt_Not sure I_t_m very clear._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But I had no time so far to code this_co_ because it needs a deep thinking and amount of concentration _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_laugh.png_qt_ alt_eq__qt__dd_lol_dd__qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2015-07-13T09:29:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_89010_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_15686_qt_ data-ipsquote-username_eq__qt_jerome_qt_ data-cite_eq__qt_jerome_qt_ data-ipsquote-timestamp_eq__qt_1436777040_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_The tube (or any ribbon) is constructed as other BJS standard meshes. You_t_ve got the same artifact on a cylinder for instance _dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1A4DON%238_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1A4DON#8_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Ha_co_ true_co_ I thought cylinders were built like spheres and torus. You can see the use of ComputeNormals here_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.mesh.vertexData.ts#L791_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.mesh.vertexData.ts#L791_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Spheres are fine on the other hand_co_ see_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1A4DON%239_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1A4DON#9_lt_/a_gt__lt_/p_gt__lt_p_gt_But as soon as you use the dreaded ComputeNormals... _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1A4DON%2310_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1A4DON#10_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I don_t_t know_co_ this is all pretty complicated. There must have been standard solutions found for this over the years_co_ so some research would certainly be a good start._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-07-13T12:59:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Actually the BJS sphere is particuliar case because it doesn_t_t use the _lt_em_gt_computeNormals()_lt_/em_gt_ method._lt_/p_gt__lt_p_gt_Indeed_co_ as we know each vertex is at radius distance from the sphere center_co_ the normals are just set from the vertex positions themselves _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.mesh.vertexData.ts#L647_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.mesh.vertexData.ts#L647_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So no _qt_seam_qt_ problem here _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-07-13T16:06:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_After a deeper look with Jahow_t_s eye_co_ it seems that ThreeJS has exactly the same behavior about continuous closed shapes._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-07-14T16:03:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_We_t_ve got a lead to fix this actually._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-07-15T11:18:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m working on it currently (ribbon case_co_ what is the basis for all parametric shapes)._lt_/p_gt__lt_p_gt_Tougher than I expected so far with all these f%$*&amp_sm_!#g  crossed indices ... _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_angry.png_qt_ alt_eq__qt__dd_angry_dd__qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-07-15T13:32:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_PR for ribbons ... for now_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The _lt_em_gt_closePath_lt_/em_gt_ parameter don_t_t make a light artifact any longer. And there is no more priority to textures over normals _dd_ both work together now (and better than 3js _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ )_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I need to report the fix for tubes_co_ lathes_co_ extruded shapes... this should be quite simple (I hope)_lt_/p_gt__lt_p_gt_And to report it to the mesh update method for morphing (more difficult)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-07-15T13:57:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok _dd_ done and PR for tubes_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_There was nothing more to add for lathe and extrusion_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Need to investigate the update function now_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_[EDIT] _dd_ will do this tomorrow_co_ enough for today _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2015-07-15T14:14:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Go jerome go!!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-07-16T13:08:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_PRed._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Works fine locally here with dynamically morphed ribbons or tubes _dd_ no more light artifact and full texture around the closed shape _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//jerome.bousquie.fr/BJS/test/ribbonfix.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//jerome.bousquie.fr/BJS/test/ribbonfix.html_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thank you Jahow for the discussion and the given ideas _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-07-16T13:16:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Btw_co_ if someone would like to fix the cylinder mesh normals_co_ it would be great_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I could do it_co_ but I_t_m on holiday tomorrow and will have a break from BJS for some time _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2015-07-16T13:25:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_So... wiggly..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ll fix the cylinder_co_ don_t_t worry _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ enjoy your time off._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_PS_dd_ the PG in the first post now looks perfect! magic!!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-07-16T13:34:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_did they already pushed the new built engine into the PG ?_lt_/p_gt__lt_p_gt_so fast ..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-07-16T14:06:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_for the cylinder I took a look at the algo_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Imho_co_ there are two ways to do it easily _dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_- without _lt_em_gt_computeNormals() _lt_/em_gt__co_ you compute the normals on each vertex when computing the positions as they do in threejs (or like for the BJS sphere)_dd_ just beware of an eventual angle because top and bottom diameters could be different_lt_/p_gt__lt_p_gt_- keep the algo as it is_co_ just store  in a temporary array what vertices are the seam during the positions computation_co_ then compute normals with _lt_em_gt_computeNormals()_lt_/em_gt_ (unchanged) and finally just change the seam vertex normal values to the average of seam start and end normal values._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2015-07-17T12:06:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_PR done_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/pull/623_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/pull/623_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I ended up reusing CreateTube with simplified parameters to create cylinders. After all_co_ a cylinder is a subset of a tube which is a subset of a ribbon (ie parametric surface)..._lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1S6POH%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1S6POH#2_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_As such_co_ VertexData.CreateCylinder is no longer used!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_By the way_co_ I couldn_t_t just ask for CreateTube to add caps to both sides_co_ since the way it does caps is not really statisfying for a cylinder (no hard edge). IMHO_co_ CreateTube could be enhanced by supporting hard edge at caps._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-07-17T12:50:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You are right _dd_ the tube caps were added quickly (and dirty) to solve someone_t_s problem._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-07-17T15:50:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Considering the ribbon_co_ I suppose I will have to change the _lt_em_gt_closeArray_lt_/em_gt_ parameter behavior also although it is rarely used._lt_/p_gt__lt_p_gt_I_t_ll do this_co_ of course_co_ ... later_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]