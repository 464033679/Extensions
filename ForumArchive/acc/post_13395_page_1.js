[{"Owner":"jdurrant","Date":"2015-03-26T09:13:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_ve been playing with BABYLON.SceneOptimizer. It_t_s great to be able to reduce the render quality in response to low FPS. I_t_d also like to be able to UPGRADE the quality if the FPS recovers. For example_co_ if I start running another application in the background that_t_s keeping my computer busy_co_ the render quality should decrease to compensate for the lower FPS. But once I close the background application and the FPS increases_co_ I_t_d like to restore the old quality._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Some of the built-in optimization functions could be easily adapted to upgrade quality_co_ but_co_ if I_t_m reading the js code correctly_co_ BABYLON.TextureOptimization permanently decreases the texture resolution. Is that right? In general_co_ is there any way to use the existing BABYLON.SceneOptimizer to also upgrade quality when appropriate?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ve done some preliminary experiments_co_ thinking I could store the original textures in an array for later restoring_co_ but I can_t_t even resize existing textures without going through BABYLON.TextureOptmization. Here_t_s some example code_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#KYPUJ_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#KYPUJ_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Can anyone tell me why the texture is not being resized in the sample code?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks for all your help!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-03-26T16:27:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_this is because there is no .scale() function on texture _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jdurrant","Date":"2015-03-27T03:03:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Well_co_ that would definitely explain why it doesn_t_t work! _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ I assumed this function exists because of this code from BABYLON.TextureOptimization (babylon.sceneOptimizer.js)_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_    var TextureOptimization _eq_ (function (_super) {        __extends(TextureOptimization_co_ _super)_sm_        function TextureOptimization(priority_co_ maximumSize) {            var _this _eq_ this_sm_            if (priority _eq__eq__eq_ void 0) { priority _eq_ 0_sm_ }            if (maximumSize _eq__eq__eq_ void 0) { maximumSize _eq_ 1024_sm_ }            _super.call(this_co_ priority)_sm_            this.priority _eq_ priority_sm_            this.maximumSize _eq_ maximumSize_sm_            this.apply _eq_ function (scene) {                var allDone _eq_ true_sm_                for (var index _eq_ 0_sm_ index &lt_sm_ scene.textures.length_sm_ index++) {                    var texture _eq_ scene.textures[index]_sm_                    if (!texture.canRescale) {                        continue_sm_                    }                    var currentSize _eq_ texture.getSize()_sm_                    var maxDimension _eq_ Math.max(currentSize.width_co_ currentSize.height)_sm_                    if (maxDimension &gt_sm_ _this.maximumSize) {                        texture.scale(0.5)_sm_                        allDone _eq_ false_sm_                    }                }                return allDone_sm_            }_sm_        }        return TextureOptimization_sm_    })(SceneOptimization)_sm__lt_/pre_gt__lt_p_gt_The _qt_texture_qt_ variable_co_ taken from scene.textures_co_ isn_t_t the same kind of texture used in materials_co_ then?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Jacob_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-03-27T19:14:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_OMG! You_t_re right...I_t_m totally stupid. Yes there is a scale()function on textures _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ I just forgot about it (...)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But scaling up won_t_t give you great result as we already scale the texture down and then we already lost texture data_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jdurrant","Date":"2015-03-28T17:56:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_No worries Deltakosh! I know how hard it can be to keep track of so many functions_co_ especially as a library gets more and more complex._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_My plan isn_t_t to scale up the image resolution. My plan is to store all the original textures in an array and then scale down from there (always from the originals) depending on the current FPS. But I can_t_t get resized textures to appear on their respective meshes. I think it_t_s likely I_t_m overlooking something obvious. This link illustrates my current (flawed) approach to resizing textures_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#KYPUJ_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#KYPUJ_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_As you can see in the example_co_ the texture on the sphere doesn_t_t change when I resize. Thanks!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-03-30T20:06:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_OOOKKK I know why _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I know that they were something special with scale _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  Scale is only implemented by renderTargetTexture. Scale has no effect on regular textures _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jdurrant","Date":"2017-04-28T22:51:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSeems silly to be following up two years after this question was originally posted_co_ but I once again need to resize textures in babylonjs. If scale() does not apply to standard textures_co_ then how is BABYLON.TextureOptimization able to scale all the textures in the scene? I_t_d now like to be able to create a function that resizes all the textures on the fly_co_ independent of scene optimization. Something like resizeAllTextures(scene_co_ maxWidth). Is it possible? This doesn_t_t work_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_for (var index _eq_ 0_sm_ index &lt_sm_ scene.textures.length_sm_ index++) {\n    var texture _eq_ scene.textures[index]_sm_            \n    var currentSize _eq_ texture.getSize()_sm_\n    var maxDimension _eq_ Math.max(currentSize.width_co_ currentSize.height)_sm_\n    var scale _eq_ 128.0 / maxDimension_sm_\n    if (scale &lt_sm_ 1.0) {\n        texture.scale(scale)_sm_\n    }\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-28T23:38:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tHello this should work. Do you mind creating a PG to repro the issue?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jdurrant","Date":"2017-04-28T23:52:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThanks for your help. Here_t_s the PG_dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#H52JTC_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#H52JTC_lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-30T00:15:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks! I_t_ll check\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/issues/2078_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/issues/2078_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-30T00:20:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOk actually I should have read my own previous response _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tScale is not supported by regular textures. Only renderTargetTextures can be scaled \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-30T00:29:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tBut actually there is a way to control the max size of your textures_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#H52JTC%235_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#H52JTC#5_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSee line #81\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jdurrant","Date":"2017-04-30T05:55:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tVery handy function! But it seems it has to be called early in the load process. See _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#H52JTC%237_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#H52JTC#7_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn that example_co_ the first resize works great_co_ but when I try to resize the textures again later (on click)_co_ it doesn_t_t work. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI show a settings page when the user starts my app. The scene begins to load immediately in the background. One of the options on the settings page is to use low-res textures. But by the time the user presses _qt_Start_qt_ on that page_co_ the load process in the background has progressed to the point that the texture resize doesn_t_t work.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDoes that make sense? Hopefully the PG example shows what I mean... Thanks!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-05-01T17:55:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYes it makes sense _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tIf you have an option to resize your textures after having already loading them_co_ you will be forced to dispose all of them first (to remove them from cache)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]