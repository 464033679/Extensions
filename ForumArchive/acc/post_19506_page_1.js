[{"Owner":"david028","Date":"2015-12-28T18:30:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I am working on a scene exported from 3ds Max. It_t_s great for making the bulk of the scene but I always end up making minor adjustments to materials in the browser because it never quite looks the same in babylon.js._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have tried using the SceneSerializer to save the scene after making changes and noticed that it is saving with a larger array of materials than the original. For example I use the SceneLoader to load a scene with 8 materials and then SceneSerializer exports a scene with twice as many materials_co_ some with duplicate names._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Does anyone know the reason for this or a workaround?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-12-28T19:14:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I noticed that also and I asked myself the same question. it appears that the materials are serialize twice.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_blink.png_qt_ alt_eq__qt__dd_blink_dd__qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-12-28T20:39:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hmmm.... Let_t_s fix that!_lt_/p_gt__lt_p_gt_Which one of you can prepare a playground with the error?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-12-28T21:03:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_One change I made _lt_strong_gt_recently_lt_/strong_gt_ to Materials.Parse is to check if the ID of a material already exists_co_ then ignore loading it and return the first.  The intention is to allow sharing of materials across .babylons._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I mention this_co_ so you are not confused using debug layer not loading everything._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]