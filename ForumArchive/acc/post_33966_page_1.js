[{"Owner":"fort","Date":"2017-11-13T07:14:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI _lt_em_gt_think _lt_/em_gt_this is going to be another one of those_co_ _qt_oh right_co_ it_t_s this_qt_ sort of questions_co_ but after tinkering with it for far too long_co_ I figured I_t_d tap into the brain trust that is this forum. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have a cylinder nested inside _lt_s_gt_Epcot Center_lt_/s_gt_ an icosphere. Both of these will have a mass of zero. Here_t_s the PG_dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#UGTGRU_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#UGTGRU_lt_/a_gt_.\n_lt_/p_gt_\n\n_lt_ol_gt__lt_li_gt_\n\t\tMove your mouse over the icosphere—the cylinder positions/rotates along the picked facet/normal.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tClick the icosphere to enable physics and set the impostors starting with the cylinder_co_ then the icosphere.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tNotice that the icosphere_t_s rotation jumps\n\t_lt_/li_gt_\n_lt_/ol_gt__lt_p_gt_\n\tHere_t_s what I_t_m wondering_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSince these things aren_t_t supposed to move in my scene (since the mass _eq__eq__eq_ 0)_co_ how could I go about setting up these physics impostors in such a way that would preserve the rotation/position of the icosphere and the cylinder at the moment it_t_s clicked? Also_co_ what if the impostor hierarchy is three+ levels deep? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso wondering_dd_ Could the icosphere and cylinder (parent/child) impostors have different restitution and friction values?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks!!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-11-13T10:05:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi fort!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLove your questions _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tBabylon_t_s parent hierarchy should be discussed in depth. I will finish the physics documentation until 3.1 will be released and I hope those questions will be answered in full in those docs.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAbout your issue - \n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) When setting two impostors _co_one of them being a parent of the other_co_ the two meshes will create a compound_co_ which means - a single body for the physics engine_co_ with both meshes _qt_merged_qt_ together. From this moment_co_ only the parent object can be controlled by the physics engine_co_ the rest of the impostors are not being taken into account. The mass of all child impostors is being accumulated_co_ but the rest (restitution_co_ friction) is being set solely on the parent level.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) There is a new option that was introduced in 3.1_dd_ ignoreParent_dd_ true (in the physics impostor options). This will create an impostor of a child mesh irgnoring the fact that it has a parent. The catch here_co_ however_co_ is that the parent cannot have its own impostor. So_co_ in your case_co_ it will not work correctly.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t3) You are enabling physics and creating new impostors with every click on the meshes. Try setting the impostors once_co_ and changing them when needed_co_ instead of recreating them. It will be much more stable. If you do_co_ however_co_ want to recreate the impostors every time_co_ don_t_T forget to dispose of the old ones (impostor.dispose())_co_ otherwise the physics engine will still have them as a reference (Garbage collection will not work_co_ and they will not be disposed by themselves).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t4) Setting the rotation (Quaternion!!) and the position of a mesh with an already-existing impostor will update the impostor_t_s position as well. So you should simply change the transformation of the mesh. Expect some strange behavior if you move an impostor INSIDE a different impostor (my guess - it will be shot right out very very fast)_co_ but in general_co_ it should work without a problem.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI ho9pe I answered everything!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fort","Date":"2017-12-03T23:37:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThanks_co_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/?do_eq_hovercard_qt_ data-mentionid_eq__qt_10310_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/_qt_ rel_eq__qt__qt__gt_@RaananW_lt_/a_gt_—that clears things up nicely. _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]