[{"Owner":"JohnK","Date":"2016-09-05T13:12:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe following function minimizes the number of vertices in a mesh.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_\tBABYLON.Mesh.prototype.minimizeVertices _eq_ function() {\n\t\t\n\t\tvar _pdata _eq_ this.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm_\n\t\tvar _ndata _eq_ this.getVerticesData(BABYLON.VertexBuffer.NormalKind)_sm_\n\t\tvar _idata _eq_ this.getIndices()_sm_\t\n\n\t\tvar _newPdata _eq_ []_sm_ //new positions array\n\t\tvar _newIdata _eq_[]_sm_ //new indices array\n\t\n\t\tvar _mapPtr _eq_0_sm_ // new index_sm_\n\t\tvar _uniquePositions _eq_ []_sm_ // unique vertex positions\n\t\tfor(var _i_eq_0_sm_ _i&lt_sm__idata.length_sm_ _i+_eq_3) {\n\t\t\tvar _facet _eq_ [_idata[_i]_co_ _idata[_i + 1]_co_ _idata[_i+2]]_sm_ //facet vertex indices\n\t\t\tvar _pstring _eq_ []_sm_ //lists facet vertex positions (x_co_y_co_z) as string _qt_xyz_qt__qt_\n\t\t\tfor(var _j _eq_ 0_sm_ _j&lt_sm_3_sm_ _j++) { //\n\t\t\t\t_pstring[_j] _eq_ _qt__qt__sm_\n\t\t\t\tfor(var _k _eq_ 0_sm_ _k&lt_sm_3_sm_ _k++) {\n\t\t\t\t\t//small values make 0\n\t\t\t\t\tif (Math.abs(_pdata[3*_facet[_j] + _k]) &lt_sm_ 0.0001) {\n\t\t\t\t\t\t_pdata[3*_facet[_j] + _k] _eq_ 0_sm_\n\t\t\t\t\t}\n\t\t\t\t\t_pstring[_j] +_eq_ _pdata[3*_facet[_j] + _k] + _qt_|_qt__sm_\n\t\t\t\t}\n\t\t\t\t_pstring[_j] _eq_ _pstring[_j].slice(0_co_ -1)_sm_\t\t\n\t\t\t}\n\t\t\t//check facet vertices to see that none are repeated\n\t\t\t// do not process any facet that has a repeated vertex_co_ ie is a line\n\t\t\tif(!(_pstring[0] _eq__eq_ _pstring[1] || _pstring[0] _eq__eq_ _pstring[2] || _pstring[1] _eq__eq_ _pstring[2])) {\t\t\n\t\t\t\t//for each facet position check if already listed in uniquePositions\n\t\t\t\t// if not listed add to uniquePositions and set index pointer\n\t\t\t\t// if listed use its index in uniquePositions and new index pointer\n\t\t\t\tfor(var _j _eq_ 0_sm_ _j&lt_sm_3_sm_ _j++) { \n\t\t\t\t\tvar _ptr _eq_ _uniquePositions.indexOf(_pstring[_j])\n\t\t\t\t\tif(_ptr &lt_sm_ 0) {\n\t\t\t\t\t\t_uniquePositions.push(_pstring[_j])_sm_\n\t\t\t\t\t\t_ptr _eq_ _mapPtr++_sm_\n\t\t\t\t\t\t//not listed so add individual x_co_ y_co_ z coordinates to new positions array newPdata\n\t\t\t\t\t\t//and add matching normal data to new normals array newNdata\n\t\t\t\t\t\tfor(var _k _eq_ 0_sm_ _k&lt_sm_3_sm_ _k++) {\n\t\t\t\t\t\t\t_newPdata.push(_pdata[3*_facet[_j] + _k])_sm_\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// add new index pointer to new indices array newIdata\n\t\t\t\t\t_newIdata.push(_ptr)_sm_\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t_newNdata _eq_[]_sm_ //new normal data\n\t\n\t\tBABYLON.VertexData.ComputeNormals(_newPdata_co_ _newIdata_co_ _newNdata)_sm_\n\t\n\t\t//create new vertex data object and update\n\t\tvar _vertexData _eq_ new BABYLON.VertexData()_sm_\n\t\t_vertexData.positions _eq_ _newPdata_sm_\n\t\t_vertexData.indices _eq_ _newIdata_sm_\n\t\t_vertexData.normals _eq_ _newNdata_sm_\n\n\t\t_vertexData.applyToMesh(this)_sm_\n\t\n\t}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tIf you check this playground _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1JBMJ3%2315_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1JBMJ3#15  _lt_/a_gt_and switch on the Debug Layer you will see the number of vertices is 366.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tComment out line 78 (ie do not apply the minimize vertices function) the number of vertices is 435.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tReplacing line 78 with sphere.optimizeIndices() leaves the number of vertices as 435\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_EDIT _lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust to bring to the top RaananW_t_s warning from his post_co_ this will only help if the mesh material is a uniform colour or texture. Textures such as the map of the earth will not seam correctly if the above function is applied to the sphere.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Questions_lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_ol_gt__lt_li_gt_\n\t\tIs this a useful function?\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tIs there anything made not possible by applying the function?\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tCould this already be done with existing functions?\n\t_lt_/li_gt_\n_lt_/ol_gt__lt_p_gt_\n\t_lt_u_gt_Some Background to The Developement_lt_/u_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlaying around with  sphere with a small number of segments (1) (below) I counted 14 vertices but the Debug Layer showed 28\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_sm2.jpg_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_9353_qt_ height_eq__qt_199_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_09/sm2.jpg.6aa6cb5e476b7cc5321f5bc9e9224930.jpg_qt_ width_eq__qt_215_qt_ /_gt__lt_img alt_eq__qt_sm1.jpg_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_9352_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_09/sm1.jpg.fa18e48689daa856b32fc2ec0644f84d.jpg_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tThe console for the vertex data positions gave Array [ 0_co_ 5_co_ 0_co_ 0_co_ 5_co_ 0_co_ 0_co_ 5_co_ 0_co_ 0_co_ 74 more… ]  and\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthat for the indices gave Array [ 0_co_ 1_co_ 7_co_ 7_co_ 1_co_ 8_co_ 1_co_ 2_co_ 8_co_ 8_co_ 98 more… ]\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis showed two things\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(1) vertex positions are repeated_co_ eg  0_co_ 5_co_ 0 is repeated at least three times\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(2) The indices for the first facet (one of the triangles used to construct a mesh) 0_co_ 1_co_ 7 gives the vertex positions as (0_co_ 5_co_ 0)_co_ (0_co_ 5_co_ 0) and (4.330126941204071_co_ 2.5_co_ 0). Since (0_co_ 5_co_ 0) accounts for two positions the facet 0_co_ 1_co_ 7 is not a true triangle but is a straight line.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo I set about seeing if I could remove the redundancies.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis playground _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1JBMJ3%2316_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1JBMJ3#16_lt_/a_gt_ shows it was possible.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNext question was did the function affect sub meshes?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis playground _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1JBMJ3%2313_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1JBMJ3#13_lt_/a_gt_ shows that it does not appear to?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis playground _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1JBMJ3%2314_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1JBMJ3#14_lt_/a_gt_ (by uncommenting lines 79 and 80) seems to show  that the function will take a flat shaded mesh and reverse it back. Is there a name for a mesh that is not flat shaded? A round shaded mesh does not sound correct.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-09-05T13:31:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi John_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe babylon vertices format is sometimes redundant_co_ I agree. But minimizing vertices also mean modifying the UV vertex data as well. Try adding a material to the minimzed sphere - _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1JBMJ3%2317_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1JBMJ3#17_lt_/a_gt_ and you will see how it is changed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI remember trying to do something similar when I implemented the simplification class. The function is still there_co_ but should be used very carefully. Especially due to this problem with the textures.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo - I think it is helpful_co_ but only when you don_t_t require any material on the mesh. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2016-09-05T14:10:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_u_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/?do_eq_hovercard_qt_ data-mentionid_eq__qt_10310_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/_qt_ rel_eq__qt__qt__gt_@RaananW_lt_/a_gt__lt_/u_gt_ see what you mean_co_ though it depends on the detail in the image used whether the result is acceptable or not. Will continue to experiment and see if there is some way of getting close to the non minimized version.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAm I right in my assumption that the first pair of numbers in uv array are for vertex index 0_co_ next pair for vertex index 1_co_ and so on?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-09-05T14:13:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYep_co_ the uv coordinates in the n index are the two positions in uvs[n*2] and uvs[n*2+1]\n_lt_/p_gt_\n\n_lt_p_gt_\n\tso_co_ technically if you find two positions AND uv that are the same_co_ you can minimize them. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2016-09-08T08:54:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/?do_eq_hovercard_qt_ data-mentionid_eq__qt_10310_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/_qt_ rel_eq__qt__qt__gt_@RaananW_lt_/a_gt_ I think I have got my head around why the need for facets that are in fact lines and hope what I have added to my developing BabylonJS Guide _lt_a href_eq__qt_http_dd_//babylonjsguide.github.io/advanced/Facets_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjsguide.github.io/advanced/Facets_lt_/a_gt_ makes sense?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-09-09T10:15:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tGot a question about the inbetweens - \n_lt_/p_gt_\n\n_lt_p_gt_\n\tif you set 3 and 8 to have the same position_co_ the shape of the mesh will eventually change. Wouldn_t_t it?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-09-09T14:04:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis is largely what the Blender &amp_sm_ I think 3DX Max exporters do.  They also check for the sharing of normals_co_ vertex colors_co_ UV1_co_ UV2_co_ matrix weights_co_ &amp_sm_ matrix indexes.  The last 2 are more involved since there is either 4 or 8 per vertex.  Think you should make note that exported meshes will not improve.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOne other thing is that multi-materials duplicate the border verts and are sorted within each corresponding sub-mesh.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2016-09-09T14:08:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/?do_eq_hovercard_qt_ data-mentionid_eq__qt_10310_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/_qt_ rel_eq__qt__qt__gt_@RaananW_lt_/a_gt__lt_/span_gt_ sorry I don_t_t think I have made myself clear. After reading your first answer and looking at some other threads I realised  why my comment about facets just being lines was necessary for some meshes.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_142763_qt_ data-ipsquote-contentid_eq__qt_24981_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1473081167_qt_ data-ipsquote-userid_eq__qt_14282_qt_ data-ipsquote-username_eq__qt_JohnK_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 05/09/2016 at 2_dd_12 PM_co_ JohnK said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t(2) The indices for the first facet (one of the triangles used to construct a mesh) 0_co_ 1_co_ 7 gives the vertex positions as (0_co_ 5_co_ 0)_co_ (0_co_ 5_co_ 0) and (4.330126941204071_co_ 2.5_co_ 0). Since (0_co_ 5_co_ 0) accounts for two positions the facet 0_co_ 1_co_ 7 is not a true triangle but is a straight line.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThese are needed so that adjacent facets can have different colours. So in the guide what I was trying to say was that these _t_line_t_ facets are necessary as a way of allowing a colour change between facets.  With the extra face 3_co_ 7_co_ 9_co_ 8 in place the shape you would get would not be a cube_co_ but as the shape I want is a cube then I obtain this by letting vertices with indices 3 and 8 have the same positions and 7 and 9 have the same positions.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think_co_ but I may be wrong_co_ that this is the way you would create a shape such as a sphere if you do not want it to be flat shaded.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNot sure whether that has made it better or worse. Still confused let me know.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]