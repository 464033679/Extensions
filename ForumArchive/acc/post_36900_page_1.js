[{"Owner":"Batucrion","Date":"2018-04-07T11:59:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSo hello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am working on a maze game project. There are two players and both of the players send 2 velocity data as i try to simulate the players like a line follower robot(left motor and right motor). I use Cannonjs to create a heightmap impostor as the maze and 2 sphere impostors as the players. I move the players inside the maze as one of them tries to catch the other. Data is communicated with websocket. When players send 2 velocity data(left motor and right motor) i send them back their positions and an array of 180 distances like a view so they can locate eachother in the maze and decide where to go. So i move each of them like this_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tleft_motor_co_ right_motor as the velocities one of the players_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\ti calculate angle with motors and use the angle for x_vel and z_vel_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tlinear_vel _eq_ (left_motor + right_motor)/2\n_lt_/p_gt_\n\n_lt_p_gt_\n\tplayer.physicsImpostor.setLinearVelocity(new BABYLON.Vector3(x_co_0_co_z))\n_lt_/p_gt_\n\n_lt_p_gt_\n\tsetTimeout(function(){\n_lt_/p_gt_\n\n_lt_p_gt_\n\t    player.physicsImpostor.setLinearVelocity(new BABYLON.Vector3(0_co_0_co_0))\n_lt_/p_gt_\n\n_lt_p_gt_\n\t}_co_ 10)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tand when sending message back to players i put a setTimeout(sendmessage(player1_co_ player2)_co_ 50)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tso when i create a test game and set players_t_ velocities to 10 for both motors and print players_t_ positions everytime players send new values_co_ i realised that the difference between positions of both players change by 10 and sometimes 20.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis happens for both players and it does not happen at the same time to both of them.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI use a password system so i am sure a player_t_s data does not get sent over to other player.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI tried to increase the timeout on send message to 1000 and that made no difference.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI checked that linear_vel is always 10 so it never gets doubled.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am curious about the reason why it is sometimes 20 sometimes 10? Is it some weird interaction between setTimeout and setLinearVelocity?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-04-07T12:56:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi B!  Welcome to the forum.  Not easy to troubleshoot this... for forum helpers.  Still_co_ we try.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tplayer.physicsImpostor.setLinearVelocity(new BABYLON.Vector3(0_co_0_co_0))  [ Sidenote_dd_  Can be done with...  player.physicsImpostor.setLinearVelocity(BABYLON.Vector3.Zero())  ]\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe symptom you describe... COULD be caused by THAT line... being missed_co_ sometimes.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut perhaps_co_ if a player missed a STOP MOVEMENT command... it would keep going forever and would not stop at 20.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI dunno.  It just _qt_feels_qt_ like... the first STOP command is sometimes missed_co_ and the NEXT one (IS there a next one... for a single move?  Unlikely)... is used instead.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust a hunch - based upon the fact that the unwanted value is exactly double the wanted value.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you ONLY run X motor_co_ or ONLY run Z motor... does the distance stay at 10... more often?  ie.  Is the unwanted 20 value MORE likely... when BOTH X &amp_sm_ Z velocities are activated?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(thx for info).  I_t_ll keep thinking.  Weird problem.  Can you create a _qt_server simulator_qt_ so we could try to get your project into the BabylonJS playground?  It seems... we could hang some function on the renderLoop... that _qt_sims the server_qt_ for the rest of the playground scene.  (fake message sends_co_ etc).  I think that would help us figure this out.  Maybe.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tStay tuned for more comments from others... let_t_s see what shows-up in the minds of our friends.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Batucrion","Date":"2018-04-07T14:58:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI was designing this as a competition so players actually run their algorithms on their computers so i have not implemented it into a small simulation since i have like 4  days until deadline _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHowever its a really basic scene with a height map(i do not know how to use heightmaps in playground except the world map one in the tutorial) with either ground or a wall and 2 spheres moving inside it. Movements do not happen until both players send their motor values so its event based movement. Both players keep sending motor values (4-5 times per second) for like 3 minutes. I actually do not know how to make a playground that changes when an event happens _dd_/\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI tried the vector3.zero one didn_t_t change anything unfortunately.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI also tried to put console.log before_co_ after the movement section and inside the setTimeout and have not found any clue. It looks like it triggers once every time a player sends data.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen i looked at the frequency of 20_t_s i saw that even though the code is exactly the same player2 had more 20_t_s while player1 had more 10_t_s. 10 is the normal movement. In my tests player1 was moving in x axis while player2 was moving in the z.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t\t\t\n\n_lt_span class_eq__t_ipsType_reset ipsType_medium ipsType_light_t_ data-excludequote_gt_\n\t_lt_strong_gt_Edited _lt_time datetime_eq__t_2018-04-07T15_dd_17_dd_03Z_t_ title_eq__t_04/07/2018 03_dd_17  PM_t_ data-short_eq__t_Apr 7_t__gt_April 7_lt_/time_gt_ by Batucrion_lt_/strong_gt_\n\t\n\t\t_lt_br_gt_Added more info\n\t\n\t\n_lt_/span_gt_\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Batucrion","Date":"2018-04-07T15:28:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou can see the exact code below that triggers when someone with the right password sends a message to cat_t_s websocket. For the player(cat) that is chasing the other one(rat)_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tangular is for how much the angle is going to change when the mesh moves. game[_qt_players_qt_][_qt_cat_qt_][_qt_mesh_qt_] holds the actual mesh_co_ game[_qt_players_qt_][_qt_cat_qt_][_qt_mesh_qt_].physicsImpostor is the Impostor_co_ game[_qt_players_qt_][_qt_cat_qt_][_qt_angle_qt_] is the angle the mesh is facing_co_ data is the values player sends.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tQuote\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t            var right_velocity _eq_ parseFloat(data[_qt_right_velocity_qt_])_lt_br /_gt_\n\t\t\t            var left_velocity _eq_ parseFloat(data[_qt_left_velocity_qt_])_lt_br /_gt_\n\t\t\t            var angular_sm_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t            var linear _eq_ (right_velocity + left_velocity)/2_lt_br /_gt_\n\t\t\t            if(left_velocity &gt_sm_ right_velocity){_lt_br /_gt_\n\t\t\t              angular _eq_ ((left_velocity - right_velocity))*Math.PI/180_lt_br /_gt_\n\t\t\t            }_lt_br /_gt_\n\t\t\t            else if(left_velocity &lt_sm_ right_velocity){_lt_br /_gt_\n\t\t\t              angular _eq_ (right_velocity - left_velocity)*Math.PI/180_lt_br /_gt_\n\t\t\t            }_lt_br /_gt_\n\t\t\t            else{_lt_br /_gt_\n\t\t\t              angular _eq_ 0_sm__lt_br /_gt_\n\t\t\t            }_lt_br /_gt_\n\t\t\t            game[_qt_players_qt_][_qt_cat_qt_][_qt_mesh_qt_].rotation.y _eq_ -angular_sm__lt_br /_gt_\n\t\t\t            game[_qt_players_qt_][_qt_cat_qt_][_qt_angle_qt_] +_eq_ angular_sm__lt_br /_gt_\n\t\t\t            game[_qt_players_qt_][_qt_cat_qt_][_qt_angle_qt_] %_eq_ 2*Math.PI_lt_br /_gt_\n\t\t\t            var x _eq_ Math.cos(game[_qt_players_qt_][_qt_cat_qt_][_qt_angle_qt_])*linear_sm__lt_br /_gt_\n\t\t\t            var z _eq_ Math.sin(game[_qt_players_qt_][_qt_cat_qt_][_qt_angle_qt_])*linear_sm_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_br /_gt_\n\t\t\t            game[_qt_players_qt_][_qt_cat_qt_][_qt_mesh_qt_].physicsImpostor.setLinearVelocity(new BABYLON.Vector3(x_co_0_co_z))_lt_br /_gt_\n\t\t\t            setTimeout(function(){_lt_br /_gt_\n\t\t\t              game[_qt_players_qt_][_qt_cat_qt_][_qt_mesh_qt_].physicsImpostor.setLinearVelocity(BABYLON.Vector3.Zero())_lt_br /_gt_\n\t\t\t            }_co_ 10)\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t\t\t\n\n_lt_span class_eq__t_ipsType_reset ipsType_medium ipsType_light_t_ data-excludequote_gt_\n\t_lt_strong_gt_Edited _lt_time datetime_eq__t_2018-04-07T15_dd_36_dd_23Z_t_ title_eq__t_04/07/2018 03_dd_36  PM_t_ data-short_eq__t_Apr 7_t__gt_April 7_lt_/time_gt_ by Batucrion_lt_/strong_gt_\n\t\n\t\t_lt_br_gt_Typo_co_ Info\n\t\n\t\n_lt_/span_gt_\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Gijs","Date":"2018-04-07T17:13:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI don_t_t know what causes it_co_ but can_t_t you just remove the timeout?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Batucrion","Date":"2018-04-07T17:15:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI do not know how frequent players are going to send data_co_ so if i remove the timeout_co_ mesh will keep moving so both players are not going to move same amount per velocity data sent. Movements are turn based so when player1 sends data and moves_co_ player1 cant move again before player2 moves. At least thats what im trying to make.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Batucrion","Date":"2018-04-07T18:31:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSo_co_ i_t_ve been experimenting for sometime and i realized that if i change the delay on setTimeout the second value changes. So when i made the setTimeout 50_co_ i got 2 values again. However this time one was 10 the other one was 26~. I am not sure what to think anymore.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]