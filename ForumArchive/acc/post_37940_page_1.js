[{"Owner":"royibernthal","Date":"2018-05-30T15:12:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI extend Mesh and override the _qt_parent_qt_ setter_co_ which is defined in Node. Any calls to super.parent seem to be ignored.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy guess is it has something to do with bjs being exported to es5 (or lower?)_co_ while I_t_m extending the classes using the es6 classes syntax.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tes6 classes are just syntactical sugar over prototypes_co_ but it seems to matter here.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs bjs exported to es6 as well somewhere? Would I have to call Node_t_s prototype manually from within my es6 code?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-05-30T15:30:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI don_t_t think you can override properties in es6 (but I may be wrong)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-05-30T15:32:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI am computer generating ES6 classes in Blender which sub-class BABYLON.Mesh.  Here is a summary output_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var camera_anim_sm_\n(function (camera_anim) {\n    class Cylinder_003_4 extends BABYLON.Mesh {\n        constructor(name_co_ scene_co_ materialsRootDir_co_ source) {\n            super(name_co_ scene_co_ null_co_ source_co_ true)_sm_\n\n            if (!materialsRootDir) { materialsRootDir _eq_ _qt_./_qt__sm_ }\n            . . .\n        }\n\n        dispose(doNotRecurse) {\n            super.dispose(doNotRecurse)_sm_\n            if (this.skeleton) this.skeleton.dispose()_sm_\n        }\n    }\n    camera_anim.Cylinder_003_4 _eq_ Cylinder_003_4_sm_\n})(camera_anim || (camera_anim _eq_ {}))_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThe only time I use super is when I override a method.  Everything has worked_co_ but am not .  There is an ES6 output in distribution_co_ but it is not hold generated class.  I cannot remember what it is for.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tProbably worth the small amount of time to just make 2 small classes (maybe PG) where you sub-class one that has a setter. Just to make sure your problem is what you think it is_co_ and you can override a setter.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"royibernthal","Date":"2018-05-31T15:16:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_216529_qt_ data-ipsquote-contentid_eq__qt_37940_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1527694200_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t23 hours ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI don_t_t think you can override properties in es6 (but I may be wrong)\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tSetters are functions_co_ so you can override them the same way you_t_d override any other function.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_216531_qt_ data-ipsquote-contentid_eq__qt_37940_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1527694334_qt_ data-ipsquote-userid_eq__qt_8492_qt_ data-ipsquote-username_eq__qt_JCPalmer_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t23 hours ago_co_ JCPalmer said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThe only time I use super is when I override a method.  Everything has worked_co_ but am not .  There is an ES6 output in distribution_co_ but it is not hold generated class.  I cannot remember what it is for._lt_span_gt_﻿_lt_/span_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tProbably worth the small amount of time to just make 2 small classes (maybe PG) where you sub-class one that has a setter. Just to make sure your problem is what you think it is_co_ and you can override a setter.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI_t_m extending classes using es6 as well_co_ and never had problems with calls to super_co_ the only issue is with super of a setter (and possibly also a getter_co_ not sure I checked).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCan you elaborate on the solution you offered? Do you mean I should create an es6 class wrapper for the bjs class which shares its whole API (and delegates calls to the wrapped class)? If not_co_ what do you mean? A small example / pseudo code would be great.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-05-31T15:18:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tQuote\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents ipsClearfix_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t_lt_span style_eq__qt_background-color_dd_#ffffff_sm_ color_dd_#353c41_sm_ font-size_dd_14px_sm_ text-align_dd_start_qt__gt_Setters are functions_co_ so you can override them the same way you_t_d override any other function._lt_/span_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI HIGHLY doubt that as for instance TS does not support overloading properties\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"royibernthal","Date":"2018-05-31T23:11:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_216643_qt_ data-ipsquote-contentid_eq__qt_37940_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1527779932_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t7 hours ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI HIGHLY doubt that as for instance TS does not support overloading properties\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI_t_m doing it in more than 1 place in my ts project_co_ give it a try. Why overloading properties? How is it connected to overriding a setter function?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-06-01T15:13:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI trust you_co_ no problem. overloading a setter is ok in TS but you cannot call super. So that_t_s why I told you that\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t(btw_co_ property _eq_ getter + setter functions)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"royibernthal","Date":"2018-06-01T15:45:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_pre_gt_\n_lt_code_gt_class A {\n    \n    set name(value) {\n        console.log(value)_sm_\n    }\n    \n}\n\nclass B extends A {\n    \n    set name(value) {\n        super.name _eq_ value_sm_\n        \n        console.log(value.toUpperCase())_sm_\n    }\n    \n}\n\nvar instance _eq_ new B()_sm_\n\ninstance.name _eq_ _t_Test_t__sm_\n\n\n\n/*\n\noutput_dd_\n\n_qt_Test_qt_\n\n_qt_TEST_qt_\n\n*/_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Just to make sure we_t_re on the same page_co_ this is what I mean _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Not sure I_t_m familiar with _lt_/span_gt__lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_overloading a setter without being able to call super_co_ got a code example?_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-06-01T17:10:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tNot a perfect solution_co_ but in class B you could have a setter for nickName that had _t_this.name _eq_ value_sm__t_. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"royibernthal","Date":"2018-06-01T19:59:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_216762_qt_ data-ipsquote-contentid_eq__qt_37940_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1527873026_qt_ data-ipsquote-userid_eq__qt_8492_qt_ data-ipsquote-username_eq__qt_JCPalmer_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t2 hours ago_co_ JCPalmer said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tNot a perfect solution_co_ but in class B you could have a setter for nickName that had _t_this.name _eq_ value_sm__t_. \n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tYeah_co_ that_t_s the workaround I_t_m currently using. I wonder if there_t_s a more straightforward solution.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-06-01T21:13:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWe are on the same page _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt_ What you mentioned is not support by TS when using ES5 as output but I clearly see it should work in ES6_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI don_t_t know why it is not working in your initial case\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"royibernthal","Date":"2018-06-01T23:36:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_216781_qt_ data-ipsquote-contentid_eq__qt_37940_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1527887609_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t2 hours ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tWe are on the same page _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ What you mentioned is not support by TS when using ES5 as output but I clearly see it should work in ES6_lt_/span_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tI don_t_t know why it is not working in your initial case\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tYup _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ Fr_lt_/span_gt_om what I understood ts didn_t_t really find a good way to emit that into es5_co_ so they gave up on it after deciding it was not worth the trouble.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think the problem in my initial case is that bjs is exported to es5_co_ while my project is exported to es6. I believe that an es6 export of bjs would solve this.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2018-06-03T07:06:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWe write everything in ES6_co_ and compile to ES5 at runtime. There is no choice at this time_co_ until all browsers are ES6 compatible. I don_t_t know why it_t_s taking so long_co_ but that is the circumstance which we find ourselves. However_co_ I highly recommend to write ES6 compatible code_co_ as it is far more efficient and offers functionality everyone can use - such as far more capabilities manipulating arrays. Just use ESLint to compile to ES5 for compatability. But I hope the browser developers get their butts out of the clouds and bring ES6 to spec in their browsers. This time_co_ they are WAY behind the curve - and  it_t_s going to hurt everyone when half the world is living in ES6_co_ and the other half stuck in the limitations of ES5.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mattstyles","Date":"2018-06-03T08:42:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_216865_qt_ data-ipsquote-contentid_eq__qt_37940_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1528009589_qt_ data-ipsquote-userid_eq__qt_11286_qt_ data-ipsquote-username_eq__qt_dbawel_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ dbawel said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThere is no choice at this time_co_ until all browsers are ES6 compatible.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tModern browsers (and not so modern ones) are almost 100% compliant with the initial es6 specifications_co_ _lt_a href_eq__qt_http_dd_//kangax.github.io/compat-table/es6/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//kangax.github.io/compat-table/es6/_lt_/a_gt__co_ most are compliant with newer language features as well. Whether they are as performant as the transpiled es5-compliant code is far more shaky ground.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_216865_qt_ data-ipsquote-contentid_eq__qt_37940_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1528009589_qt_ data-ipsquote-userid_eq__qt_11286_qt_ data-ipsquote-username_eq__qt_dbawel_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ dbawel said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tJust use ESLint to compile to ES5 for compatability.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tNot sure what you mean here_co_ ESLint is for checking certain syntaxes and structures in your source code and informing you of where you contravene a given ruleset. It doesn_t_t do compilation or transpilation. Did you mean another tool?\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_216865_qt_ data-ipsquote-contentid_eq__qt_37940_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1528009589_qt_ data-ipsquote-userid_eq__qt_11286_qt_ data-ipsquote-username_eq__qt_dbawel_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ dbawel said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tHowever_co_ I highly recommend to write ES6 compatible code_co_ as it is far more efficient_lt_span_gt_﻿_lt_/span_gt_ and offers functionality everyone can use - such as far more capabilities manipulating arrays.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tBy efficient you should probably clarify that you mean it has a number of sugar methods that make code less verbose (not that verbosity is always a bad thing though).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(almost) Everything from ES6 can be transpiled back to es5 so es6 doesn_t_t support anything new_co_ it just has a new syntax making some things a little nicer to write and less error-prone for the developer (the browser doesn_t_t actually care and in many cases the old way is better optimised for the engine_co_ if not for the developer writing it). (I think there are some odd things in the spec like tail call ops which are impossible to shim_co_ but_co_ everything else_co_ including tricky stuff like generators and proxies_co_ _can_ be shimmed_co_ you_t_d probably never want to write code like that but transpilers can do it just fine).\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2018-06-04T20:50:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/7157-mattstyles/?do_eq_hovercard_qt_ data-mentionid_eq__qt_7157_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/7157-mattstyles/_qt_ rel_eq__qt__qt__gt_@mattstyles_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI should have been clear that using ESLint will allow devs to check ES6 compliance_co_ and that it_t_s necessary to set up your runtime environment to compile back to ES5 - which I highly recommend. Compatability is getting better and very close_co_ but there are still disparities which in working for a company that produces consumer products_co_ we still must compile back to ES6.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs for features of ES6_co_ there are many efficiencies_co_ but specifically for arrays_co_ there are many operations which don_t_t exist or are not synonymous with ES5 array operations. I_t_m certain you can name many which make working with arrays much faster and simpler. Of course_co_ you can do practically everything in ES5 that you can do using ES6_co_ however_co_ there is more code and in my opinion less efficiency of code writing.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBottom line_co_ it_t_s simply a matter of preference_co_ however I personally wouldn_t_t release a consumer product using ES6 quite yet.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheers_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]