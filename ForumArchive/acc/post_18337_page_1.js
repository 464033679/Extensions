[{"Owner":"strmnati","Date":"2015-11-03T04:00:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello everyone._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ve found some issue._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have a mesh with skeleton animation. Also_co_ I have a specific shader used in ShaderMaterial._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_When I assign the ShaderMaterial to the mesh. The animation disappear_co_ but the effect of shader is working._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_How do I have the animation with my shader?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-03T15:10:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Unfortunately_co_ you will have to code the skeletal animation support in your shaders _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_but I have a good fallback_co_ you can ask Babylon.js to compute skeletal animations for you not using GPU but using CPU_dd_ mesh._lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm_font-family_dd_Consolas_co_ _t_Liberation Mono_t__co_ Menlo_co_ Courier_co_ monospace_sm_font-size_dd_12px_sm__qt__gt_computeBonesUsingShaders_lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(51_co_51_co_51)_sm_font-family_dd_Consolas_co_ _t_Liberation Mono_t__co_ Menlo_co_ Courier_co_ monospace_sm_font-size_dd_12px_sm__qt__gt_ _eq_ false_lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-11-03T15:15:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_strike_gt_More info will need to be provided.  What version are you using?  If 2.3_co_ date &amp_sm_ time of JS file_co_ in addition to any console messages.  I am not familiar with which vertex shader is called_co_ but it changed yesteday._lt_/strike_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Never mind_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"strmnati","Date":"2015-11-04T00:59:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks_co_ _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/user/4442-deltakosh/_qt_ title_eq__qt__qt__gt_Deltakosh_lt_/a_gt_._lt_/p_gt__lt_p_gt_Your reply is helpful._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jCarrasco","Date":"2016-01-01T17:48:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi!_lt_/p_gt__lt_p_gt_I_t_m working on this right now_co_ and managed to make it work_co_ somehow._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_First of all_co_ having a look at the basic shader source we can see we need to inject 3 values to the shader_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_attribute vec4 matricesIndices_sm_attribute vec4 matricesWeights_sm_uniform mat4 mBones[BonesPerMesh]_sm__lt_/pre_gt__lt_p_gt_Fortunately_co_ Babylon will do this work for us. All we have to do is specify this values in the attributes and uniforms list when defining the shader_co_ and Babylon will fill in this values automaticly. Like this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var myMaterial _eq_ new BABYLON.ShaderMaterial(_qt_myMaterial_qt__co_ scene_co_ _qt_/path/to/myShader_qt__co_ {  attributes_dd_ [_qt_position_qt__co_ _qt_uv_qt__co_ _qt_normal_qt__co_ _qt_matricesIndices_qt__co_ _qt_matricesWeights_qt_]_co_  uniforms_dd_ [_qt_worldViewProjection_qt__co_ _qt_world_qt__co_ _qt_cameraPosition_qt__co_ _qt_lightPosition_qt__co_ _qt_ambient_qt__co_  _qt_mBones_qt_]})_sm__lt_/pre_gt__lt_p_gt_You can check Babylon source code to see how this values are filled_co_ if curious. It_t_s relatively easy to understand._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Going back to the basic shader source_co_ let_t_s see how this values are used_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_void main(void) {    mat4 finalWorld _eq_ world_sm_    #ifdef BONES        mat4 m0 _eq_ mBones[int(matricesIndices.x)] * matricesWeights.x_sm_        mat4 m1 _eq_ mBones[int(matricesIndices.y)] * matricesWeights.y_sm_        mat4 m2 _eq_ mBones[int(matricesIndices.z)] * matricesWeights.z_sm_        #ifdef BONES4            mat4 m3 _eq_ mBones[int(matricesIndices.w)] * matricesWeights.w_sm_            finalWorld _eq_ finalWorld * (m0 + m1 + m2 + m3)_sm_        #else            finalWorld _eq_ finalWorld * (m0 + m1 + m2)_sm_        #endif    #endif    gl_Position _eq_ worldViewProjection * finalWorld * vec4(position_co_ 1.0)_sm_}_lt_/pre_gt__lt_p_gt_BONES and BONES4 defines will be also be generated automaticly if bones deformations by shader is set. _lt_/p_gt__lt_p_gt_So_co_ basicly_co_ the mat4 finalWorld will hold the bone deformation and you multiply it by the original vertex position. You can check if you remove it from the operation_co_ the mesh will remain static._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And that_t_s all. You will have your shader ready for other operations you want to apply._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]