[{"Owner":"sqfield","Date":"2017-05-24T03:05:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m trying to build a realistic 3D star map.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut my stars are too faint to see_co_ because they are far away. I need them to be far away so the constellations look right from Earth.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_d like the light from the stars to have infinite range_co_ even if they end up being single pixels to the camera.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have set up a playground where I had hoped to see the constellation Orion_co_ but I see no stars.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is the playground_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#Q8JA09%231_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#Q8JA09#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy actual database has over 100_co_000 stars_co_ but I can limit the ones I draw to only the brightest N if needed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn the end_co_ I_t_d like to animate a faster-than-light trip from star to star.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"inteja","Date":"2017-05-24T06:22:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tInstead of using just a sphere to represent each star_co_ I_t_d take a hybrid LOD approach_co_ using a single mesh rendered as a point cloud for all stars in the database e.g. like this PG\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#OCR2S_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#OCR2S_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf material.pointSize _eq_ 1 then all stars should be visible irrespective of distance.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen I_t_d use a star mapped billboards for stars when they are closer_co_ centred on (and hiding) the respective point. Then for close stars I_t_d use a sphere. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI made a celestial sphere from the Tyco2 star data many years ago using a similar approach_co_ which displayed points and mapped tris that accurately depicted star magnitude and colour etc.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Convergence","Date":"2017-05-24T14:16:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tSince the camera supposedly will be around our solar system_co_ the stars don_t_t actually have to be at their true distances_co_ just have to appear at their correct location in space_co_ relative to the camera_sm_ so you could scale down the distances quite a bit. Changing px_per_ly to .01 already makes them appear.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-05-24T15:57:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYour sun is at 0_co_0_co_0_co_ and earth.x is -100.  From where your camera is_co_ the distance between sun &amp_sm_ earth is about half of my display.  Some of your x_t_s are &gt_sm_ 10k.  That is about 10 feet to the right of my display. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe Z of your Rigel is -24k_co_ but your camera_t_s Z is only -300.  Rigel is way way way behind the camera.  I moved the camera z_offset to -2000_co_ and the sun approached 4 pixels.  I do not think that light is your problem.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"sqfield","Date":"2017-05-25T02:04:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThank you all for the help -- I_t_m getting much closer to a solution.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn reverse order_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJCPalmer -- You are absolutely correct. The camera was not aimed at Orion_co_ so the stars seemed to be all over the place. I fixed that in the following playground.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tConvergence -- You are also absolutely correct. I was not clear in my problem statement. If the camera is stuck on Earth_co_ we can play games with the distances. But my plan is to allow the user to travel from star to star_co_ and watch how the constellations change as the perspective changes. In the following playground_co_ I multiply the distance by 0.01 as you suggest_co_ and the stars do indeed appear. However_co_ they are not quite in the right places_co_ because that will only happen if they are very far away. Changing 100_co_000 star positions to get them to look right at closer distances is not a task I feel capable of completing. _dd_-)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat said_co_ the suggestion to make them closer was a great help in discovering my other problems_co_ and at least now you can see something that almost looks like Orion. I was ecstatic when that happened.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tInteja -- I am convinced that your suggestion is the way to go. However_co_ I am too new at Babylon.js to figure out what I am doing wrong when I try to implement it. I think there is something fundamental about mesh creation that I don_t_t understand yet.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn this playground_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#OCR2S%235_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#OCR2S#5_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthere is a variable called use_custom_mesh. When it is false_co_ you can see Orion_co_ thanks to Convergence_t_s help. When it is true_co_ you can see my failed attempt to make a mesh out of the star positions. Is it easy for anyone to see what I am missing? I_t_ve been looking at playgrounds that create meshes_co_ and I can_t_t see what I am doing wrong.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks again to all of you -- I think I am getting really close...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-05-25T15:57:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAlong the lines of scaling to 100_co_000 stars_co_ you will not get there.  The actual number I do not know_co_ but you cannot have that many meshes each with its own material.  You can get down to 3 meshes earth_co_ sun_co_ &amp_sm_ masterStar_co_ and making all the stars instances of masterStar(instances must use the same material_co_ or the sun could be used).  This will reduce your draw calls to 2_co_ and the geometry to load to the gpu.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou will then have a javascript problem.  Each frame_co_ the render thread will have to calculate a 16 element world matrix for each mesh_co_ whether it is a instance of not.  This contains the location_co_ scale_co_ and rotation.  You cannot get rid of the checking on of each_co_ but since the stars are fixed_co_ you can make the calc be avoided by freezing.  See  _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#OCR2S%236_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#OCR2S#6 _lt_/a_gt__lt_span_gt_   _lt_/span_gt_Not sure why my sun is read.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe points cloud will not let you travel to them_co_ I think.  When you get there they should no-longer be points.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"sqfield","Date":"2017-05-25T18:21:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIn this playground_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#OCR2S%2310_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#OCR2S#10_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have 6_co_000 stars. I tried 60_co_000_co_ and my machine could handle it (i7-5960 @ 3 GHz and 64 GB of ram)_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tbut things got slow_co_ so I backed off. I_t_d like it to run on cheap laptops. _dd_-) 6_co_000 stars is more than the naked eye can see_co_ so I think it will do nicely. I_t_ll recalculate which stars are in the 6_co_000 as we visit each star.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe sun was red for you because your masterStar was on top of it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI moved that out of the loop_co_ and we got Rigel back in Orion.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe are left with the problem of keeping the stars visible when we go full scale (needed to keep the constellations right_co_ and to prevent nearby stars from being disks). The pointCloud was going to fix that_co_ but I still haven_t_t found out what I am doing wrong there. If there is a way to make the spheres visible at infinity_co_ that would make the pointCloud unnecessary. But I haven_t_t given up on pointCloud -- it still seems to me like it should work.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]