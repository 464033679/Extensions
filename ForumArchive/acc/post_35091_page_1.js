[{"Owner":"satguru","Date":"2018-01-16T00:00:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI see that the babylonjs loader does not convert the glb or gltf meshes from right-handed system (their native format) to left handed system.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tInstead it seems it parents them with _qt___root___qt_  nodes to handle them in a left handed system.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs it not possible to convert them entirely to left handed-system?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"bghgary","Date":"2018-01-16T17:53:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/16886-satguru/?do_eq_hovercard_qt_ data-mentionid_eq__qt_16886_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/16886-satguru/_qt_ rel_eq__qt__qt__gt_@satguru_lt_/a_gt_ The loader does not currently convert the data from right-handed to left-handed. It is computationally expensive to do this. glTF is intended to be a runtime format_co_ so it is intended to load fast. You have two choices with the loader. Either continue with the _qt___root___qt_ transform that flips the z scale or change the coordinate system of BabylonJS to right-handed. Do you have a scenario that requires the data to be converted?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"satguru","Date":"2018-01-16T19:36:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/26831-bghgary/?do_eq_hovercard_qt_ data-mentionid_eq__qt_26831_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/26831-bghgary/_qt_ rel_eq__qt__qt__gt_@bghgary_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat if there are multiple meshes in the file and I want to import just one mesh?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso I tried using right using BabylonJS using right handed system but ran into a problem.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tsee this post\n_lt_/p_gt_\n_lt_iframe allowfullscreen_eq__qt__qt_ data-controller_eq__qt_core.front.core.autosizeiframe_qt_ data-embedcontent_eq__qt__qt_ data-embedid_eq__qt_embed826356157_qt_ scrolling_eq__qt_no_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/topic/35094-glb-loader-flips-faces-in-right-handed-scene/?do_eq_embed_qt_ style_eq__qt_height_dd_207px_sm_max-width_dd_502px_sm__qt__gt__lt_/iframe_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ with right handed system I still see __root__ nodes.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"bghgary","Date":"2018-01-16T19:51:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/16886-satguru/?do_eq_hovercard_qt_ data-mentionid_eq__qt_16886_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/16886-satguru/_qt_ rel_eq__qt__qt__gt_@satguru_lt_/a_gt_ The loader always creates a _qt___root___qt_ node right now. If you just want to import one mesh_co_ pass in the name of the node in the glTF to the importMesh function of the SceneLoader.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"satguru","Date":"2018-01-18T05:22:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/26831-bghgary/?do_eq_hovercard_qt_ data-mentionid_eq__qt_26831_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/26831-bghgary/_qt_ rel_eq__qt__qt__gt_@bghgary_lt_/a_gt_ __root__ and a scaling of -z doesn_t_t seem right.  A quick way to bring gltf to babylonjs perhaps but not sure if it is a good long term solution. It makes gltf feel like a special case. People will have to take special care to handle it. They will have to remember that in babylonjs each gltf mesh comes with am extra parent node of __root__. Every time they scale they would need to make sure scale in z is -ve. Rotation around z would be counterclockwise  _co_ baking seems to be an issue and so on. A gltf mesh will feel different from other babylonjs meshes. Not a good idea if we want to make gltf native to babylonjs.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"bghgary","Date":"2018-01-22T21:14:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/16886-satguru/?do_eq_hovercard_qt_ data-mentionid_eq__qt_16886_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/16886-satguru/_qt_ rel_eq__qt__qt__gt_@satguru_lt_/a_gt_ We can add an option to convert the data on load_co_ but it will be expensive.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ What do you think?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"satguru","Date":"2018-01-23T01:30:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAn option would be nice._lt_br /_gt_\n\tHow expensive can it get?_lt_br /_gt_\n\t_lt_br /_gt_\n\tAlso what about an offline converter?_lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-01-23T21:33:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tNot a problem for me as long as it stays off by default\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"bghgary","Date":"2018-01-23T23:13:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tQuote\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t_lt_span style_eq__qt_float_dd_none_sm_background-color_dd_transparent_sm_color_dd_rgb(53_co_60_co_65)_sm_font-family_dd_Roboto_co_ _t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_400_sm_letter-spacing_dd_normal_sm_text-align_dd_left_sm_text-decoration_dd_none_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_How expensive can it get?_lt_/span_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThe cost is iterating through every single float of positions_co_ normals_co_ tangents_co_ indices_co_ etc. Depending on the model_co_ it can be quite expensive. It certainly does not scale well.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tQuote\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t_lt_span style_eq__qt_float_dd_none_sm_background-color_dd_transparent_sm_color_dd_rgb(53_co_60_co_65)_sm_font-family_dd_Roboto_co_ _t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_400_sm_letter-spacing_dd_normal_sm_text-align_dd_left_sm_text-decoration_dd_none_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_Also what about an offline converter?_lt_/span_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThis isn_t_t possible. glTF is expected to use right-handed data. If you are going to convert offline_co_ might as well convert to a .babylon file.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"satguru","Date":"2018-01-24T00:59:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t1) won_t_t we have to iterate through each of the elements anyway_co_ to move them from gltf data structure to babylon data structure? Or is the gltf data structure so similar to the babylon data structure that that won_t_t be an issue?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) by offline I did mean creating a .babylon file _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t3) not sure about making the option off by default. In a right handed scene I am assuming we won_t_t be adding a _qt___root___qt_ node. So by default in right handed scene the meshes would show up without _qt___root___qt_. Whereas_co_ if the default is off_co_ then by default in a left handed scene meshes will show up with _qt___root___qt_ node. Potential for confusion? \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"bghgary","Date":"2018-01-24T01:09:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t1) No. Once the array is created_co_ we can put it straight into Babylon vertex buffer. This is not fully happening yet though.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t3) _qt___root___qt_ is always added to ensure consistency.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2018-01-24T01:18:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou might be better suited to just run all your meshes through a batch and get them converted to a more BJS usable convention.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"satguru","Date":"2018-01-24T01:43:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t3) One of the reason I was advocating converting to left handed system was to avoid adding extraneous nodes._lt_br /_gt_\n\tIn other words keep things as close as possible to the original._lt_br /_gt_\n\tWe don_t_t want users scratching their head wondering _qt_from where  did this node come from?  I didn_t_t have this in my gltf file_qt_._lt_br /_gt_\n\t_lt_br /_gt_\n\tSo I was thinking that there should be  something like a _qt_fast-left-handed-load_qt_ option which should be off by default._lt_br /_gt_\n\tThat option would come with the caveat that if the user turns it on then they would get faster load time but at the cost of having to deal with an extra nodes called _qt___root___qt_ and  -ve scaling.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]