[{"Owner":"Raggar","Date":"2016-11-23T23:08:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAs I don_t_t have an external server at the moment_co_ I_t_m trying to fake a bit of latency using SetTimeout.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe code is based on Gabriel Gambetta_t_s code for handling an authoritative server_dd_ _lt_a href_eq__qt_http_dd_//www.gabrielgambetta.com/fpm_live.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.gabrielgambetta.com/fpm_live.html_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd yeah. I know the code is very ugly and prototypish_co_ no handling of multiple users_co_ etc. etc..\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am sending inputs as well as the time the key is pressed_co_ as a way of making it time-independent_co_ but I have no sanity checks.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf I keep the networkLatency at 0_co_ it seems to run very smoothly_co_ and both reconciliation and prediction works very well. However_co_ if I add a delay_co_ of say_co_ 200 ms_co_ it behaves strangely_co_ and I can_t_t really see why.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is the code handling the updating of the position_co_ and the prediction based on previously saved inputs_co_ and as far as I can see_co_ this should work_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_iosocket.on(_t_updatePOS_t__co_ function(message) {\n                     \n                     \n                   \n\t\t\tsetTimeout(function () {\n\t\n\t\n\t\t\n                     sphereBody.position.x _eq_ message.x_sm_\n                     sphereBody.position.y _eq_ message.y_sm_\n                     sphereBody.position.z _eq_ message.z_sm_\n                     ghostSphere.position.x _eq_ message.x_sm_\n                      ghostSphere.position.y _eq_ message.y_sm_\n                      ghostSphere.position.z _eq_ message.z_sm_\n                          \n              lastSequence _eq_ message.last_sm_\n                     console.log(lastSequence)_sm_\n                     for (var x in pending_inputs){\n                        if (x &lt_sm__eq_ lastSequence){\n                            console.log(x)_sm_\n                           delete pending_inputs[x]_sm_\n                            pending_inputs.splice(x_co_ 1)_sm_\n                            delete inputsToSend[x]_sm_\n                            inputsToSend.splice(x_co_ 1)_sm_\n                            \n                        } else {\n                             //console.log(x)_sm_\n                            //  console.log(pending_inputs[x])_sm_\n                         applyInputs(pending_inputs[x])_sm_ \n                        }\n                         \n                      \n                         \n                         \n                     }\n                  \n               }_co_ networkLatency)_sm_\n                     \n                })_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tEven with a delay/latency_co_ the function should still take into consideration the saved inputs_co_ and apply these when the new positional updates are received.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo even when apllying updates as old as 200ms_co_ the result should be the same as the predicted state.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf someone can spot where the issue is_co_ that would be awesome. If someone has a VPS with some real latency_co_ a test of that woulld be appreciated too.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tindex.html_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_&lt_sm_!doctype html&gt_sm_\n&lt_sm_html&gt_sm_\n&lt_sm_head&gt_sm_\n   &lt_sm_meta charset_eq__qt_utf-8_qt_&gt_sm_\n   &lt_sm_title&gt_sm_Babylon - Basic scene&lt_sm_/title&gt_sm_\n   &lt_sm_style&gt_sm_\n      html_co_ body {\n         overflow_dd_ hidden_sm_\n         width_dd_ 100%_sm_\n         height_dd_ 100%_sm_\n         margin_dd_ 0_sm_\n         padding_dd_ 0_sm_\n      }\n      #renderCanvas {\n         width_dd_ 100%_sm_\n         height_dd_ 100%_sm_\n         touch-action_dd_ none_sm_\n      }\n   &lt_sm_/style&gt_sm_\n   &lt_sm_script src_eq__qt_https_dd_//cdnjs.cloudflare.com/ajax/libs/babylonjs/2.4.0/babylon.js_qt_&gt_sm_&lt_sm_/script&gt_sm_\n   &lt_sm_script src_eq__qt_https_dd_//cdnjs.cloudflare.com/ajax/libs/socket.io/1.4.8/socket.io.js_qt_&gt_sm_&lt_sm_/script&gt_sm_\n   &lt_sm_script src_eq__qt_https_dd_//cdnjs.cloudflare.com/ajax/libs/cannon.js/0.6.2/cannon.js_qt_&gt_sm_&lt_sm_/script&gt_sm_ &lt_sm_!-- optional physics engine --&gt_sm_\n    &lt_sm_script src_eq__qt_http_dd_//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js_qt_&gt_sm_&lt_sm_/script&gt_sm_\n&lt_sm_/head&gt_sm_\n&lt_sm_body&gt_sm_\n   &lt_sm_canvas id_eq__qt_renderCanvas_qt_&gt_sm_&lt_sm_/canvas&gt_sm_\n   &lt_sm_script type_eq__qt_text/javascript_qt_&gt_sm_\n       \n       \n       \n       var sphere_co_ inputs _eq_ []_sm_\n       var globalGravity _eq_ new CANNON.Vec3(0_co_-30_co_0)_sm_\n       var camera_sm_\n       var lastSequence _eq_ 0_sm_\n       var client _eq_ {}_sm_\n       client.left _eq_ false_sm_\n       client.right _eq_ false_sm_\n       client.forward _eq_ false_sm_\n       client.back _eq_ false_sm_\n       pending_inputs _eq_ []_sm_\n       inputsToSend _eq_ []_sm_\n       input_sequence_number _eq_ -1_sm_\n       var networkLatency _eq_ 0_sm_\n     //  var keys_sm_\n     //  keys.left_eq_1_sm_\n       this.playerDirection _eq_ [0_co_0_co_0_co_0]_sm_\n       quat _eq_ new CANNON.Quaternion()_sm_\n\n    \n            var iosocket _eq_ io.connect(_qt_http_dd_//localhost_dd_8080_qt_)_sm_\n            iosocket.on(_t_connect_t__co_ function () {\n               console.log(_qt_connect_qt_)_sm_\n                iosocket.on(_t_message_t__co_ function(message) {\n                 // console.log(message)_sm_\n                })_sm_\n                \n                 iosocket.on(_t_updatePOS_t__co_ function(message) {\n                     \n                     \n                   \n\t\t\tsetTimeout(function () {\n\t\n\t\n\t\t\n                     sphereBody.position.x _eq_ message.x_sm_\n                     sphereBody.position.y _eq_ message.y_sm_\n                     sphereBody.position.z _eq_ message.z_sm_\n                     ghostSphere.position.x _eq_ message.x_sm_\n                      ghostSphere.position.y _eq_ message.y_sm_\n                      ghostSphere.position.z _eq_ message.z_sm_\n                          \n              lastSequence _eq_ message.last_sm_\n                     console.log(lastSequence)_sm_\n                     for (var x in pending_inputs){\n                        if (x &lt_sm__eq_ lastSequence){\n                            console.log(x)_sm_\n                           delete pending_inputs[x]_sm_\n                            pending_inputs.splice(x_co_ 1)_sm_\n                            delete inputsToSend[x]_sm_\n                            inputsToSend.splice(x_co_ 1)_sm_\n                            \n                        } else {\n                             //console.log(x)_sm_\n                            //  console.log(pending_inputs[x])_sm_\n                         applyInputs(pending_inputs[x])_sm_ \n                        }\n                         \n                      \n                         \n                         \n                     }\n                  \n               }_co_ networkLatency)_sm_\n                     \n                })_sm_\n                \n                \n                iosocket.on(_t_spawnPlayer_t__co_ function(player) {\n          \n                    console.log(_qt_Spawning Player_qt_)_sm_\n              \n                })_sm_\n                \n                \n                iosocket.on(_t_disconnect_t__co_ function() {\n                  \n                })_sm_\n            })_sm_\n        \n     \n      \n      var canvas _eq_ document.querySelector(_qt_#renderCanvas_qt_)_sm_\n \n      var engine _eq_ new BABYLON.Engine(canvas_co_ true)_sm_\n\n// setTimeout(sendInput_co_ 2000)_sm_\n       \n       function sendInput(){\n           console.log(_qt_2 sek_qt_)_sm_\n           for (var x in inputsToSend){\n             iosocket.emit(_t_input_t__co_ inputsToSend[x])_sm_  \n               \n           }\n        setTimeout(sendInput_co_ 2000)_sm_   \n       }\n \n var createScene _eq_ function () {\n\t  \tthis.playerDirection _eq_ [0_co_0_co_0_co_0]_sm_\n         // Now create a basic Babylon Scene object\n         var scene _eq_ new BABYLON.Scene(engine)_sm_\n        scene.debugLayer.show()_sm_\n         // Change the scene background color to green.\n         scene.clearColor _eq_ new BABYLON.Color3(0_co_ 1_co_ 0)_sm_\n         // This creates and positions a free camera\n         camera _eq_ new BABYLON.FreeCamera(_qt_camera1_qt__co_ new BABYLON.Vector3(0_co_ 5_co_ -10)_co_ scene)_sm_\n         // This targets the camera to scene origin\n         camera.setTarget(BABYLON.Vector3.Zero())_sm_\n         // This attaches the camera to the canvas\n         camera.attachControl(canvas_co_ false)_sm_\n         // This creates a light_co_ aiming 0_co_1_co_0 - to the sky.\n         var light _eq_ new BABYLON.HemisphericLight(_qt_light1_qt__co_ new BABYLON.Vector3(0_co_ 1_co_ 0)_co_ scene)_sm_\n         // Dim the light a small amount\n         light.intensity _eq_ .5_sm_\n         // Let_t_s try our built-in _t_sphere_t_ shape. Params_dd_ name_co_ subdivisions_co_ size_co_ scene\n         this.sphere _eq_ BABYLON.Mesh.CreateSphere(_qt_sphere1_qt__co_ 16_co_ 2_co_ scene)_sm_\n\t\t this.sphere.quaternion _eq_ new CANNON.Quaternion(0_co_0_co_0_co_0)_sm_\n         this.box _eq_ BABYLON.MeshBuilder.CreateBox(_qt_box_qt__co_ {height_dd_ 5}_co_ scene)_sm_\n         // Move the sphere upward 1/2 its height\n         this.sphere.position.y _eq_ 2_sm_\n         this.box.position.y _eq_ 2.5_sm_\n         this.box.position.z _eq_ 2_sm_\n         this.box.parent _eq_ this.sphere_sm_\n        ghostSphere _eq_ BABYLON.Mesh.CreateSphere(_qt_ghost_qt__co_ 16_co_ 2_co_ scene)_sm_\n         var ghostMat _eq_ new BABYLON.StandardMaterial(_qt_texture1_qt__co_ scene)_sm_\n         ghostMat.diffuseColor _eq_ new BABYLON.Color3(0.5_co_ 0.2_co_ 0.7)_sm_\n         ghostMat.alpha _eq_ 0.6_sm_\n         ghostSphere.material _eq_ ghostMat_sm_\n         // Let_t_s try our built-in _t_ground_t_ shape. Params_dd_ name_co_ width_co_ depth_co_ subdivisions_co_ scene\n         this.ground _eq_ BABYLON.Mesh.CreateGround(_qt_ground1_qt__co_ 6_co_ 6_co_ 2_co_ scene)_sm_\n         this.ground.rotation _eq_ new CANNON.Vec3(-0_co_0_co_0)_sm_\n\t\n         \n     \n        BABYLON.SceneLoader.ImportMesh(_qt__qt__co_ _qt_https_dd_//raw.githubusercontent.com/RaggarDK/Baby/baby/_qt__co_ _qt_height.babylon_qt__co_ scene_co_ function (newMeshes) {\n\t\t      setTimeout(function () {\n\t\t\tground _eq_ newMeshes[1]_sm_\n\t\t\tvar material _eq_ new BABYLON.StandardMaterial(_qt_texture1_qt__co_ scene)_sm_\n\t\t\t//window.ground _eq_ ground_sm_\n\t\t\t//ground.parent _eq_ undefined_sm_\n\t\t\tground.scaling.copyFromFloats(.3_co_ .3_co_ .3)_sm_\t\n\t\t\tground.bakeCurrentTransformIntoVertices()_sm_\n\t\t\tmaterial.diffuseTexture _eq_ new BABYLON.Texture(_qt_https_dd_//raw.githubusercontent.com/RaggarDK/Baby/baby/plan.png_qt__co_ scene)_sm_\n\t\t\tground.material _eq_ material_sm_\n\t\t\t//ground.physicsImpostor _eq_ new BABYLON.PhysicsImpostor(ground_co_ BABYLON.PhysicsEngine.HeightmapImpostor_co_ { mass_dd_ 0 }_co_ scene)_sm_\n\t\t\tcreateHeightmap(newMeshes[1])_sm_\n\t\t}_co_ 2000)\n\t\t\n\t})_sm_ \n        \n         \n         // window.addEventListener(_qt_keydown_qt__co_ handleKeyDown_co_ false)_sm_\n         // window.addEventListener(_qt_keyup_qt__co_ handleKeyUp_co_ false)_sm_\n          \n          \n          \n        \n          \n          window.addEventListener(_qt_mousemove_qt__co_ function(e) {\n\t   //\tconsole.log(_qt_mouse_qt_)_sm_\n             event _eq_ e_sm_ \n              \n             var movementX _eq_ event.movementX || event.mozMovementX || event.webkitMovementX || 0_sm_\n             var movementY _eq_ event.movementY || event.mozMovementY || event.webkitMovementY || 0_sm_\n\n\t\t\t//this.sphereBody.quaternion.y +_eq_ movementX * 0.002_sm_\n           //  this.sphereBody.quaternion.x +_eq_ movementY * 0.002_sm_\n\n             sphereBody.rotation.y +_eq_ movementX * 0.008_sm_\n             sphereBody.rotation.x +_eq_ movementY * 0.008_sm_\n\t\t\t \n\t\t\t \n\n\t})_sm_ \n   \n\n          \n          \n          \n          \n         seq _eq_ 0_sm_ \n          \n          function handleKeyDown(evt){   \n              seq +_eq_ 1_sm_\n              \n              \n               if (evt.keyCode_eq__eq_16){\n               if(inputs){\n                  console.log(inputs)_sm_ \n                   \n               }\n                   \n             }\n       \n              \n              if (evt.keyCode_eq__eq_65){\n                  inputs[seq] _eq_ {left_dd_1_co_ rot_dd_sphereBody.rotation}_sm_\n                  this.playerDirection[0] _eq_ 1_sm_\n                  applyInput(seq_co_ _qt_left_qt__co_ sphereBody.rotation)_sm_\n                  console.log(seq)_sm_\n                 // iosocket.emit(_t_input_t__co_ { left_dd_1_co_ rot_dd_sphereBody.rotation})_sm_\n             \n        \n                 // shootBullet(sphereBody.rotation.y_co_ sphereBody.position)_sm_\n                  \n                  \n             }\n              \n          \n              \n             if (evt.keyCode_eq__eq_68){  \n                 sphereBody.position.x +_eq_ .1_sm_\n                 inputs[seq] _eq_ {right_dd_1_co_ rot_dd_sphereBody.rotation}_sm_\n                 this.playerDirection[1] _eq_ 1_sm_\n                 //applyInput(seq_co_ _qt_right_qt__co_ sphereBody.rotation)_sm_\n           //iosocket.emit(_t_input_t__co_ { right_dd_1_co_ rot_dd_sphereBody.rotation})_sm_\n             }\n              \n              if (evt.keyCode_eq__eq_87){ \n                  inputs[seq] _eq_ {forward_dd_1_co_ rot_dd_sphereBody.rotation}_sm_\n                  applyInput(seq_co_ _qt_forward_qt__co_ sphereBody.rotation)_sm_\n                 this.playerDirection[2] _eq_ 1_sm_\n                //  iosocket.emit(_t_input_t__co_ { forward_dd_1_co_ rot_dd_sphereBody.rotation})_sm_\n            \n              }\n                          \n              if (evt.keyCode_eq__eq_83){  \n                  inputs[seq] _eq_ {back_dd_1_co_ rot_dd_sphereBody.rotation}_sm_\n                  this.playerDirection[3] _eq_ 1_sm_\n                  applyInput(seq_co_ _qt_back_qt__co_ sphereBody.rotation)_sm_\n       // iosocket.emit(_t_input_t__co_ { back_dd_1_co_ rot_dd_sphereBody.rotation})_sm_\n                                  }\n          }\n                              \n        function handleKeyUp(evt){    \n            if (evt.keyCode_eq__eq_65){  \n            this.playerDirection[0] _eq_ 0_sm_\n               // iosocket.emit(_t_input_t__co_ { left_dd_0})_sm_\n            }\n                                 \n            if (evt.keyCode_eq__eq_68){ \n              //  iosocket.emit(_t_input_t__co_ { right_dd_0})_sm_\n            this.playerDirection[1] _eq_ 0_sm_\n               \n            }\n            if (evt.keyCode_eq__eq_87){ \n               //  iosocket.emit(_t_input_t__co_ { forward_dd_0})_sm_\n            this.playerDirection[2] _eq_ 0_sm_\n           \n            }\n            if (evt.keyCode_eq__eq_83){  \n              //   iosocket.emit(_t_input_t__co_ { back_dd_0})_sm_\n            this.playerDirection[3] _eq_ 0_sm_\n            }\n                              }\n               \n     \n     \n     \n     \n     \n     \n     \n     var keyHandler _eq_ function(e) {\n  e _eq_ e || window.event_sm_\n  if (e.keyCode _eq__eq_ 65) {\n      console.log(_qt_Lefty_qt_)_sm_\n   client.left _eq_ (e.type _eq__eq_ _qt_keydown_qt_)_sm_\n  } \n  \n  if (e.keyCode _eq__eq_ 68) {\n       console.log(_qt_righty_qt_)_sm_\n   client.right _eq_ (e.type _eq__eq_ _qt_keydown_qt_)_sm_\n  }\n  if (e.keyCode _eq__eq_ 87) {\n      console.log(_qt_forward_qt_)_sm_\n    client.forward _eq_ (e.type _eq__eq_ _qt_keydown_qt_)_sm_\n  } else if (e.keyCode _eq__eq_ 83) {\n    client.back _eq_ (e.type _eq__eq_ _qt_keydown_qt_)_sm_\n      console.log(_qt_back_qt_)_sm_\n  }\n}_sm_\n     \n     \nwindow.addEventListener(_qt_keydown_qt__co_ keyHandler_co_ false)_sm_\nwindow.addEventListener(_qt_keyup_qt__co_ keyHandler_co_ false)_sm_\n     \n     \n     \n     \n     \n     \n     \n     \n         return scene_sm_\n      }_sm_\n       \n     \n       \n   \nvar createPhysics _eq_ function(){\n  \nconsole.log(_qt_createPhysicsFunction Called!_qt_)_sm_   \n     \n   \nworld _eq_ new CANNON.World()_sm_\n  \nworld.gravity.set(0_co_-30_co_0)_sm_\nworld.broadphase _eq_ new CANNON.NaiveBroadphase()_sm_\n        \nvar mass _eq_ 5_co_ radius _eq_ 1_sm_\nsphereShape _eq_ new CANNON.Sphere(radius)_sm_ // Step 1\nsphereBody _eq_ new CANNON.Body({mass_dd_ 1_co_ shape_dd_ sphereShape})_sm_ // Step 2\nsphereBody.position.set(0_co_2_co_2)_sm_\nsphereBody.rotation _eq_ new CANNON.Vec3()_sm_    \nworld.add(sphereBody)_sm_ // Step 3\nconsole.log(_qt_sphereBodyPosition0_dd_ _qt_ + sphereBody.position)_sm_  \n\nsphereBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1_co_0_co_0)_co_-Math.PI/2)_sm_     \n     \ngroundShape _eq_ new CANNON.Plane()_sm_\ngroundBody _eq_ new CANNON.Body({ mass_dd_ 0_co_ shape_dd_ groundShape })_sm_\nconsole.log(groundBody.rotation)_sm_\n\ngroundBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1_co_0_co_0)_co_-Math.PI/2)_sm_\n\nconsole.log(groundBody.quaternion)_sm_     \nworld.add(groundBody)_sm_\n        \n        \ntimeStep _eq_ 1.0 / 60.0_sm_ // seconds\nvelocity _eq_ sphereBody.velocity_sm_      \n        \nsphereBody.velocity _eq_ new CANNON.Vec3(0_co_0_co_0)_sm_    \n\nreturn world_sm_ \n     \n }      \n       \n       \n\n      \n      \n      \n      var scene _eq_ createScene()_sm_\n      this.world _eq_ createPhysics()_sm_ \n      var zeroVel _eq_ new CANNON.Vec3(0_co_0_co_0)_sm_\n      var inputVelocity _eq_ new CANNON.Vec3()_sm_\n      var lastTime _eq_ (new Date()).getTime()_sm_\n      var currentTime _eq_ 0_sm_\n      var delta _eq_ 0_sm_\n       \n      engine.runRenderLoop(function () {\n         \n    \n          currentTime _eq_ (new Date()).getTime()_sm_\n          delta _eq_ (currentTime - lastTime) / 1000_sm_\n      \n          //   console.log(delta)_sm_\n          processInputs()_sm_\n          scene.render()_sm_\n          world.step(1.0 / 60.0)_sm_\n          \n          velocity _eq_ sphereBody.velocity_sm_ \n          this.sphere.position _eq_ sphereBody.position_sm_\n    \n\t\t  this.sphere.rotation _eq_ sphereBody.rotation_sm_\n\t\n          moveSpeed _eq_ .1_sm_\n\t\n        //  camera.position.x _eq_ sphereBody.position.x\n        //  camera.position.z _eq_ sphereBody.position.z\n          \n         // camera.rotation _eq_ sphereBody.rotation_sm_\n          \n\t\t  //sphereBody.position.z +_eq_ moveSpeed_sm_\n          \n          //console.log(sphereBody.position.x)_sm_\n          \n          \n       \n    \n            \n          \n       velocity.x _eq_ inputVelocity.x_sm_\n       velocity.z _eq_ inputVelocity.z_sm_  \n     \n          lastTime _eq_ currentTime_sm_\n          \n      })_sm_\n       \n    \n    \n       \n    \n       \n   \n      window.addEventListener(_qt_resize_qt__co_ function () {\n         engine.resize()_sm_\n      })_sm_\n\t  \n\t\n    \n       \n       \n       \nfunction processInputs() {\n  // Compute delta time since last update.\n  var now_ts _eq_ +new Date()_sm_\n  var last_ts _eq_ this.last_ts || now_ts_sm_\n  var dt_sec _eq_ (now_ts - last_ts) / 1000.0_sm_\n  this.last_ts _eq_ now_ts_sm_\n\n  // Package player_t_s input.\n  var input_sm_\n  if (client.right) {\n    input _eq_ {dir_dd__qt_right_qt__co_ press_time_dd_ dt_sec }_sm_\n  }else if (client.forward &amp_sm_&amp_sm_ client.left) {\n    input _eq_ {dir_dd__qt_sfLeft_qt__co_ press_time_dd_ dt_sec }_sm_\n  } else if (client.left) {\n    input _eq_ {dir_dd__qt_left_qt__co_ press_time_dd_ dt_sec }_sm_\n  }else if (client.forward) {\n    input _eq_ {dir_dd__qt_forward_qt__co_ press_time_dd_ dt_sec }_sm_\n  }else if (client.back) {\n    input _eq_ {dir_dd__qt_back_qt__co_ press_time_dd_ dt_sec }_sm_\n  \n  } else {\n    // Nothing interesting happened.\n    return_sm_\n  }\n\n  // Send the input to the server.\n  input.input_sequence_number _eq_ input_sequence_number++_sm_\n    console.log(input.input_sequence_number)_sm_\n // input.entity_id _eq_ this.entity_id_sm_\n    \n    applyInputs(input)_sm_  \n \n    inputsToSend.push(input)_sm_\n    iosocket.emit(_t_input_t__co_ input)_sm_\n                      \n               \n\n\n  // Save this input for later reconciliation.\n  pending_inputs.push(input)_sm_\n} \n       \nfunction applyInputs(input) {\n //   console.log(input.dir)_sm_\n    if (input.dir _eq__eq_ _qt_left_qt_){\n  sphereBody.position.x +_eq_ -input.press_time*5_sm_\n}\n    \n   if (input.dir _eq__eq_ _qt_right_qt_){\n  sphereBody.position.x +_eq_ input.press_time*5_sm_\n}\n    \nif (input.dir _eq__eq_ _qt_forward_qt_){\n  sphereBody.position.z +_eq_ input.press_time*5_sm_\n}\n    \nif (input.dir _eq__eq_ _qt_back_qt_){\n  sphereBody.position.z +_eq_ -input.press_time*5_sm_\n}\n    \n if (input.dir _eq__eq_ _qt_sfLeft_qt_){\n  sphereBody.position.z +_eq_ input.press_time*2.5_sm_\n     sphereBody.position.x +_eq_ -input.press_time*2.5_sm_\n}\n    \n    \n    \n    }       \n\n       \n      \n       \n\nfunction createHeightmap (object_co_ pointDepth) {\n            var pos _eq_ object.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm_\n            var matrix _eq_ []_sm_\n            //For now pointDepth will not be used and will be automatically calculated.\n            //Future reference - try and find the best place to add a reference to the pointDepth variable.\n            var arraySize _eq_ pointDepth || ~~(Math.sqrt(pos.length / 3) - 1)_sm_\n            var dim _eq_ Math.min(object.getBoundingInfo().boundingBox.extendSize.x_co_ object.getBoundingInfo().boundingBox.extendSize.z)_sm_\n            var elementSize _eq_ dim * 2 / arraySize_sm_\n            var minY _eq_ object.getBoundingInfo().boundingBox.extendSize.y_sm_\n            for (var i _eq_ 0_sm_ i &lt_sm_ pos.length_sm_ i _eq_ i + 3) {\n                var x _eq_ Math.round((pos[i + 0]) / elementSize + arraySize / 2)_sm_\n                var z _eq_ Math.round(((pos[i + 2]) / elementSize - arraySize / 2) * -1)_sm_\n                var y _eq_ pos[i + 1] + minY_sm_\n                if (!matrix[x]) {\n                    matrix[x] _eq_ []_sm_\n                }\n                if (!matrix[x][z]) {\n                    matrix[x][z] _eq_ y_sm_\n                }\n                matrix[x][z] _eq_ Math.max(y_co_ matrix[x][z])_sm_\n            }\n            for (var x _eq_ 0_sm_ x &lt_sm__eq_ arraySize_sm_ ++x) {\n                if (!matrix[x]) {\n                    var loc _eq_ 1_sm_\n                    while (!matrix[(x + loc) % arraySize]) {\n                        loc++_sm_\n                    }\n                    matrix[x] _eq_ matrix[(x + loc) % arraySize].slice()_sm_\n                }\n                for (var z _eq_ 0_sm_ z &lt_sm__eq_ arraySize_sm_ ++z) {\n                    if (!matrix[x][z]) {\n                        var loc _eq_ 1_sm_\n                        var newValue_sm_\n                        while (newValue _eq__eq__eq_ undefined) {\n                            newValue _eq_ matrix[x][(z + loc++) % arraySize]_sm_\n                        }\n                        matrix[x][z] _eq_ newValue_sm_\n                    }\n                }\n            }\n            var shape _eq_ new CANNON.Heightfield(matrix_co_ {\n                elementSize_dd_ elementSize\n            })_sm_\n    \n            console.log(elementSize)_sm_\n    \n            //Output Matrix Info for Node.js\n            console.log(matrix.length)_sm_\n\t\t\tfor (i_eq_0_sm_i&lt_sm_matrix.length_sm_i++){\n\t\t\t\t\n\t\t\t\t//GET MATRIX DATA\n\t\t\t//console.info(JSON.stringify(matrix[0]_co_ null_co_ _t_  _t_))\n\t\t\tconsole.log(_qt_\\n_qt_ + _qt_matrix2[_qt_ + i + _qt_] _eq_ _qt_ + JSON.stringify(matrix[i]_co_ null_co_ _t_ _t_))\t\n\t\t\t}\n          \n\t\t\theightBody _eq_ new CANNON.Body({mass_dd_ 0_co_ shape_dd_ shape})_sm_ // Step 2\n\t\t\theightBody.position.y _eq_ -4.5_sm_\n\t\t\theightBody.position.x _eq_ -30_sm_\n\t\t\theightBody.position.z _eq_ 30_sm_\n\t\t\theightBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1_co_0_co_0)_co_-Math.PI/2)_sm_  \n\t\t\tconsole.log(heightBody.position)_sm_\n\t\t\tworld.add(heightBody)_sm_\n\t\t\n\t\n            \n}_sm_      \n        \n    \n\n\n       \n       \n   &lt_sm_/script&gt_sm_\n&lt_sm_/body&gt_sm_\n&lt_sm_/html&gt_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tserver.js_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_/*  Copyright (c) 2012 Sven _qt_FuzzYspo0N_qt_ Bergström \n    \n    http_dd_//underscorediscovery.com\n    \n    MIT Licensed. See LICENSE for full license.\n    Usage _dd_ node simplest.app.js\n*/\n\n   var \n        gameport        _eq_ process.env.PORT || 4004_co_\n        CANNON _eq_ require(_t_cannon_t_)_co_\n        io              _eq_ require(_t_socket.io_t_)_co_\n       socketio              _eq_ require(_t_socket.io_t_)_co_\n        express         _eq_ require(_t_express_t_)_co_\n        UUID            _eq_ require(_t_node-uuid_t_)_co_\n        fs _eq_ require(_t_fs_t_)_co_\n        gameloop _eq_ require(_t_node-gameloop_t_)_co_\n        verbose         _eq_ false_sm_\n\n\n\nvar fs _eq_ require(_t_fs_t_)\n    _co_ http _eq_ require(_t_http_t_)\n    _co_ socketio _eq_ require(_t_socket.io_t_)_sm_\nvar server _eq_ http.createServer(function(req_co_ res) {\n    res.writeHead(200_co_ { _t_Content-type_t__dd_ _t_text/html_t_})_sm_\n    res.end(fs.readFileSync(__dirname + _t_/index.html_t_))_sm_\n}).listen(8080_co_ function() {\n    console.log(_t_Listening at_dd_ http_dd_//localhost_dd_8080_t_)_sm_\n})_sm_\n\n\ntimeStep _eq_ 1.0 / 60.0_sm_ \nmoveSpeed _eq_ .1_sm_\nlastProcessedInput _eq_ -1_sm_\nsocketio.listen(server).on(_t_connection_t__co_ function (socket) {\n    \n    socket.emit(_t_spawnPlayer_t_)_sm_\n    var testLat _eq_ 0_sm_\n    var networkLoop _eq_ gameloop.setGameLoop(function(delta) {\n        \n     //socket.emit(_t_news_t__co_ { x_dd_  sphereBody.position.x_co_ y_dd_  sphereBody.position.y_co_ z_dd_  sphereBody.position.z_co_ last_dd_lastProcessedInput})_sm_\n\n    socket.emit(_t_updatePOS_t__co_ { x_dd_  sphereBody.position.x_co_ y_dd_  sphereBody.position.y_co_ z_dd_  sphereBody.position.z_co_ last_dd_lastProcessedInput})_sm_\n            \n        \n}_co_ 1000 / 10)_sm_ \n    \n    \n    \n   \n    socket.on(_t_input_t__co_ function (inp) {\n\n        \n   applyInput(inp)_sm_\n     console.log(inp.input_sequence_number)_sm_   \n      \n    })_sm_\n    sphereBody.velocity _eq_ new CANNON.Vec3(0_co_0_co_0)_sm_\n    \n    \n  /*socket.on(_t_arrayInput_t__co_ function (ainput) {\n\n   for (var input in ainput){\n       if (ainput.input_sequence_number &gt_sm_ lastProcessedInput){\n          applyInput(ainput[input])_sm_  \n       }\n       \n   }\n      \n      \n    })_sm_   \n  */  \n    \n})_sm_\n\n\n \n\n\nfunction applyInput(inp){\n    sphereBody.velocity.x _eq_ 0_sm_  \n  \n    if (inp.dir _eq__eq_ _qt_right_qt_){\n        sphereBody.position.x +_eq_ inp.press_time*5_sm_\n        \n    }\n    \n    if (inp.dir _eq__eq_ _qt_sfLeft_qt_){\n       sphereBody.position.z +_eq_ inp.press_time*2.5_sm_\n     sphereBody.position.x +_eq_ -inp.press_time*2.5_sm_\n        \n    }\n    \n      if (inp.dir _eq__eq_ _qt_left_qt_){\n        sphereBody.position.x +_eq_ -inp.press_time*5_sm_\n        \n    }\n    \n        if (inp.dir _eq__eq_ _qt_forward_qt_){\n        sphereBody.position.z +_eq_ inp.press_time*5_sm_\n        \n    }\n    \n    \n        if (inp.dir _eq__eq_ _qt_back_qt_){\n        sphereBody.position.z +_eq_ -inp.press_time*5_sm_\n        \n    }\n    \n    lastProcessedInput _eq_ inp.input_sequence_number_sm_\n        console.log(lastProcessedInput)_sm_   \n    \n    \n}   \n\n\n\n\nvar initPhysics _eq_ function() {\n\nworld _eq_ new CANNON.World()_sm_\n  \nworld.gravity.set(0_co_-30_co_0)_sm_\nworld.broadphase _eq_ new CANNON.NaiveBroadphase()_sm_\n        \nvar mass _eq_ 5_co_ radius _eq_ 1_sm_\nsphereShape _eq_ new CANNON.Sphere(radius)_sm_ \nsphereBody _eq_ new CANNON.Body({mass_dd_ 1_co_ shape_dd_ sphereShape})_sm_ \nsphereBody.position.set(0_co_2_co_2)_sm_\nsphereBody.rotation _eq_ new CANNON.Vec3()_sm_    \nworld.add(sphereBody)_sm_ \n \nsphereBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1_co_0_co_0)_co_-Math.PI/2)_sm_     \n\n  \n\ncreateHeightfield()_sm_\n \n  \n}\n    \n\n\n\nvar frameCount _eq_ 0_sm_\nvar mainLoop _eq_ gameloop.setGameLoop(function(delta) {\n   \n  //  console.log(_t_Hi there! (frame_eq_%s_co_ delta_eq_%s)_t__co_ frameCount++_co_ delta)_sm_\n    world.step(timeStep)_sm_\n   // console.log(sphereBody.position)_sm_\n    if (sphereBody){\n        velocity _eq_ sphereBody.velocity_sm_      \n//sphereBody.velocity.z _eq_ 0_sm_ \n      var inputVelocity _eq_ new CANNON.Vec3()_sm_    \n      sphereBody.velocity.x _eq_ 0_sm_  \n        sphereBody.velocity.z _eq_ 0_sm_  \n       velocity.x _eq_ inputVelocity.x_sm_\n       velocity.z _eq_ inputVelocity.z_sm_  \n    }\n}_co_ 1000 / 60)_sm_   \n\n\n        \n\n function createHeightfield(){\n    \nmatrix2 _eq_ []_sm_     \nelementSize _eq_ 2.9999426007270813_sm_     \n     \n     \nmatrix2[0] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 10.294019762537854_co_\n 10.293962222532453_co_\n 10.293904682527053_co_\n 10.293847142521653_co_\n 10.293789602516252_co_\n 10.293732062510852_co_\n 10.293674522505452_co_\n 10.293616982500051_co_\n 10.29355944249465_co_\n 10.29350190248925_co_\n 10.29344436248385_co_\n 10.29338682247845_co_\n 10.29332928247305_co_\n 10.293271742467649_co_\n 10.293214202462249_co_\n 10.293156662456848_co_\n 10.293099122451448_co_\n 10.293041582446047_co_\n 10.292984042440647\n]_sm_\n\nmatrix2[1] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 10.294019762537854_co_\n 10.293962222532453_co_\n 10.293904682527053_co_\n 10.293847142521653_co_\n 10.293789602516252_co_\n 10.293732062510852_co_\n 10.293674522505452_co_\n 10.293616982500051_co_\n 10.29355944249465_co_\n 10.29350190248925_co_\n 10.29344436248385_co_\n 10.29338682247845_co_\n 10.29332928247305_co_\n 10.293271742467649_co_\n 10.293214202462249_co_\n 10.293156662456848_co_\n 10.293099122451448_co_\n 10.293041582446047_co_\n 10.292984042440647\n]_sm_\n\nmatrix2[2] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 4.517270291725772_co_\n 4.517212751720372_co_\n 4.517155211714972_co_\n 4.517097671709571_co_\n 4.517040131704171_co_\n 4.5169825916987705_co_\n 4.51692505169337_co_\n 4.51686751168797_co_\n 4.516809971682569_co_\n 4.516752431677169_co_\n 4.516694891671769_co_\n 4.516637351666368_co_\n 4.516579811660968_co_\n 4.5165222716555675_co_\n 4.516464731650167_co_\n 4.516407191644767_co_\n 4.516349651639366_co_\n 10.293041582446047_co_\n 10.292984042440647\n]_sm_\n\nmatrix2[3] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 4.517270291725772_co_\n 4.517212751720372_co_\n 4.517155211714972_co_\n 4.517097671709571_co_\n 4.517040131704171_co_\n 4.5169825916987705_co_\n 4.51692505169337_co_\n 4.51686751168797_co_\n 4.516809971682569_co_\n 4.516752431677169_co_\n 4.516694891671769_co_\n 4.516637351666368_co_\n 4.516579811660968_co_\n 4.5165222716555675_co_\n 4.516464731650167_co_\n 4.516407191644767_co_\n 4.516349651639366_co_\n 10.293041582446047_co_\n 10.292984042440647\n]_sm_\n\nmatrix2[4] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 4.517270291725772_co_\n 4.517212751720372_co_\n 4.517155211714972_co_\n 4.517097671709571_co_\n 4.517040131704171_co_\n 4.5169825916987705_co_\n 4.51692505169337_co_\n 4.51686751168797_co_\n 4.516809971682569_co_\n 4.516752431677169_co_\n 4.516694891671769_co_\n 4.516637351666368_co_\n 4.516579811660968_co_\n 4.5165222716555675_co_\n 4.516464731650167_co_\n 4.516407191644767_co_\n 4.516349651639366_co_\n 10.293041582446047_co_\n 10.292984042440647\n]_sm_\n\nmatrix2[5] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 4.517270291725772_co_\n 4.517212751720372_co_\n 4.517155211714972_co_\n 1.260629979194317_co_\n 1.2605724391889166_co_\n 1.2605148991835162_co_\n 4.51692505169337_co_\n 4.51686751168797_co_\n 4.516809971682569_co_\n 4.516752431677169_co_\n 4.516694891671769_co_\n 4.516637351666368_co_\n 4.516579811660968_co_\n 4.5165222716555675_co_\n 4.516464731650167_co_\n 4.516407191644767_co_\n 4.516349651639366_co_\n 10.293041582446047_co_\n 10.292984042440647\n]_sm_\n\nmatrix2[6] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 4.517270291725772_co_\n 4.517212751720372_co_\n 4.517155211714972_co_\n 1.260629979194317_co_\n 1.2605724391889166_co_\n 1.2605148991835162_co_\n 4.51692505169337_co_\n 4.51686751168797_co_\n 4.516809971682569_co_\n 4.516752431677169_co_\n 4.516694891671769_co_\n 4.516637351666368_co_\n 4.516579811660968_co_\n 4.5165222716555675_co_\n 4.516464731650167_co_\n 4.516407191644767_co_\n 4.516349651639366_co_\n 10.293041582446047_co_\n 10.292984042440647\n]_sm_\n \nmatrix2[7] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 4.517270291725772_co_\n 4.517212751720372_co_\n 4.517155211714972_co_\n 1.260629979194317_co_\n 1.2605724391889166_co_\n 1.2605148991835162_co_\n 4.51692505169337_co_\n 4.51686751168797_co_\n 4.516809971682569_co_\n 4.516752431677169_co_\n 4.516694891671769_co_\n 4.516637351666368_co_\n 4.516579811660968_co_\n 4.5165222716555675_co_\n 4.516464731650167_co_\n 4.516407191644767_co_\n 4.516349651639366_co_\n 10.293041582446047_co_\n 10.292984042440647\n]_sm_\n \nmatrix2[8] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 4.517270291725772_co_\n 4.517212751720372_co_\n 4.517155211714972_co_\n 4.517097671709571_co_\n 4.517040131704171_co_\n 4.5169825916987705_co_\n 4.51692505169337_co_\n 4.51686751168797_co_\n 4.516809971682569_co_\n 4.516752431677169_co_\n 4.516694891671769_co_\n 4.516637351666368_co_\n 4.516579811660968_co_\n 4.5165222716555675_co_\n 4.516464731650167_co_\n 4.516407191644767_co_\n 4.516349651639366_co_\n 10.293041582446047_co_\n 10.292984042440647\n]_sm_\n \nmatrix2[9] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 4.517270291725772_co_\n 4.517212751720372_co_\n 4.517155211714972_co_\n 4.517097671709571_co_\n 4.517040131704171_co_\n 4.5169825916987705_co_\n 4.51692505169337_co_\n 4.51686751168797_co_\n 4.516809971682569_co_\n 4.516752431677169_co_\n 4.516694891671769_co_\n 4.516637351666368_co_\n 4.516579811660968_co_\n 4.5165222716555675_co_\n 4.516464731650167_co_\n 4.516407191644767_co_\n 4.516349651639366_co_\n 4.516292111633966_co_\n 4.516234571628566\n]_sm_\n\nmatrix2[10] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 4.517270291725772_co_\n 4.517212751720372_co_\n 4.517155211714972_co_\n 4.517097671709571_co_\n 4.517040131704171_co_\n 4.5169825916987705_co_\n 4.51692505169337_co_\n 4.51686751168797_co_\n 4.516809971682569_co_\n 4.516752431677169_co_\n 4.516694891671769_co_\n 4.516637351666368_co_\n 4.516579811660968_co_\n 4.5165222716555675_co_\n 4.516464731650167_co_\n 4.516407191644767_co_\n 4.516349651639366_co_\n 4.516292111633966_co_\n 4.516234571628566\n]_sm_\n\nmatrix2[11] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 4.517270291725772_co_\n 4.517212751720372_co_\n 4.517155211714972_co_\n 4.517097671709571_co_\n 4.517040131704171_co_\n 4.5169825916987705_co_\n 4.51692505169337_co_\n 4.51686751168797_co_\n 4.516809971682569_co_\n 4.516752431677169_co_\n 4.516694891671769_co_\n 4.516637351666368_co_\n 4.516579811660968_co_\n 4.5165222716555675_co_\n 4.516464731650167_co_\n 4.516407191644767_co_\n 4.516349651639366_co_\n 4.516292111633966_co_\n 4.516234571628566\n]_sm_\n\nmatrix2[12] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 4.517270291725772_co_\n 4.517212751720372_co_\n 4.517155211714972_co_\n 4.517097671709571_co_\n 4.517040131704171_co_\n 4.5169825916987705_co_\n 4.51692505169337_co_\n 4.51686751168797_co_\n 4.516809971682569_co_\n 4.516752431677169_co_\n 4.516694891671769_co_\n 4.516637351666368_co_\n 4.516579811660968_co_\n 4.5165222716555675_co_\n 4.516464731650167_co_\n 4.516407191644767_co_\n 4.516349651639366_co_\n 10.293041582446047_co_\n 10.292984042440647\n]_sm_\n\nmatrix2[13] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 4.517270291725772_co_\n 4.517212751720372_co_\n 4.517155211714972_co_\n 4.517097671709571_co_\n 4.517040131704171_co_\n 4.5169825916987705_co_\n 4.51692505169337_co_\n 4.51686751168797_co_\n 4.516809971682569_co_\n 4.516752431677169_co_\n 4.516694891671769_co_\n 4.516637351666368_co_\n 4.516579811660968_co_\n 4.5165222716555675_co_\n 4.516464731650167_co_\n 4.516407191644767_co_\n 4.516349651639366_co_\n 10.293041582446047_co_\n 10.292984042440647\n]_sm_\n\nmatrix2[14] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 4.517270291725772_co_\n 4.517212751720372_co_\n 4.517155211714972_co_\n 4.517097671709571_co_\n 4.517040131704171_co_\n 4.5169825916987705_co_\n 4.51692505169337_co_\n 4.51686751168797_co_\n 4.516809971682569_co_\n 4.516752431677169_co_\n 4.516694891671769_co_\n 4.516637351666368_co_\n 7.674529389168344_co_\n 7.674471849162944_co_\n 7.674414309157544_co_\n 4.516407191644767_co_\n 4.516349651639366_co_\n 10.293041582446047_co_\n 10.292984042440647\n]_sm_\n\nmatrix2[15] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 4.517270291725772_co_\n 4.517212751720372_co_\n 4.517155211714972_co_\n 4.517097671709571_co_\n 4.517040131704171_co_\n 4.5169825916987705_co_\n 4.51692505169337_co_\n 4.51686751168797_co_\n 4.516809971682569_co_\n 4.516752431677169_co_\n 4.516694891671769_co_\n 4.516637351666368_co_\n 7.674529389168344_co_\n 7.674471849162944_co_\n 7.674414309157544_co_\n 4.516407191644767_co_\n 4.516349651639366_co_\n 10.293041582446047_co_\n 10.292984042440647\n]_sm_\n\nmatrix2[16] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 4.517270291725772_co_\n 4.517212751720372_co_\n 4.517155211714972_co_\n 4.517097671709571_co_\n 4.517040131704171_co_\n 4.5169825916987705_co_\n 4.51692505169337_co_\n 4.51686751168797_co_\n 4.516809971682569_co_\n 4.516752431677169_co_\n 4.516694891671769_co_\n 4.516637351666368_co_\n 7.674529389168344_co_\n 7.674471849162944_co_\n 7.674414309157544_co_\n 4.516407191644767_co_\n 4.516349651639366_co_\n 10.293041582446047_co_\n 10.292984042440647\n]_sm_\n\nmatrix2[17] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 4.517270291725772_co_\n 4.517212751720372_co_\n 4.517155211714972_co_\n 4.517097671709571_co_\n 4.517040131704171_co_\n 4.5169825916987705_co_\n 4.51692505169337_co_\n 4.51686751168797_co_\n 4.516809971682569_co_\n 4.516752431677169_co_\n 4.516694891671769_co_\n 4.516637351666368_co_\n 4.516579811660968_co_\n 4.5165222716555675_co_\n 4.516464731650167_co_\n 4.516407191644767_co_\n 4.516349651639366_co_\n 10.293041582446047_co_\n 10.292984042440647\n]_sm_\n\nmatrix2[18] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 4.517270291725772_co_\n 4.517212751720372_co_\n 4.517155211714972_co_\n 4.517097671709571_co_\n 4.517040131704171_co_\n 4.5169825916987705_co_\n 4.51692505169337_co_\n 4.51686751168797_co_\n 4.516809971682569_co_\n 4.516752431677169_co_\n 4.516694891671769_co_\n 4.516637351666368_co_\n 4.516579811660968_co_\n 4.5165222716555675_co_\n 4.516464731650167_co_\n 4.516407191644767_co_\n 4.516349651639366_co_\n 10.293041582446047_co_\n 10.292984042440647\n]_sm_\n\nmatrix2[19] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 10.294019762537854_co_\n 10.293962222532453_co_\n 10.293904682527053_co_\n 10.293847142521653_co_\n 10.293789602516252_co_\n 10.293732062510852_co_\n 10.293674522505452_co_\n 10.293616982500051_co_\n 10.29355944249465_co_\n 10.29350190248925_co_\n 10.29344436248385_co_\n 10.29338682247845_co_\n 10.29332928247305_co_\n 10.293271742467649_co_\n 10.293214202462249_co_\n 10.293156662456848_co_\n 10.293099122451448_co_\n 10.293041582446047_co_\n 10.292984042440647\n]_sm_\n\nmatrix2[20] _eq_ [\n 10.294134842548655_co_\n 10.294077302543254_co_\n 10.294019762537854_co_\n 10.293962222532453_co_\n 10.293904682527053_co_\n 10.293847142521653_co_\n 10.293789602516252_co_\n 10.293732062510852_co_\n 10.293674522505452_co_\n 10.293616982500051_co_\n 10.29355944249465_co_\n 10.29350190248925_co_\n 10.29344436248385_co_\n 10.29338682247845_co_\n 10.29332928247305_co_\n 10.293271742467649_co_\n 10.293214202462249_co_\n 10.293156662456848_co_\n 10.293099122451448_co_\n 10.293041582446047_co_\n 10.292984042440647\n]_sm_\n     \n     \n    shape _eq_ new CANNON.Heightfield(matrix2_co_ {\n                elementSize_dd_ elementSize\n            })_sm_\n   \n    heightBody _eq_ new CANNON.Body({mass_dd_ 0_co_ shape_dd_ shape})_sm_ // Step 2\n\t\t\theightBody.position.y _eq_ -4.5_sm_\n\t\t\theightBody.position.x _eq_ -30_sm_\n\t\t\theightBody.position.z _eq_ 30_sm_\n\t\t\theightBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1_co_0_co_0)_co_-Math.PI/2)_sm_  \n\t\t\tconsole.log(heightBody.position)_sm_\n\t\t\tworld.add(heightBody)_sm_\n\n\n }   \n  \n\n\n\n\n\n        \n        \ninitPhysics()_sm_\n\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tNode.js for the server.js\n_lt_/p_gt_\n\n_lt_p_gt_\n\tChrome for the index.html\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWASD to move around.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Raggar","Date":"2016-11-25T07:41:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tNo one who has the slightest idea of why ir behaves like this?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Raggar","Date":"2016-11-28T16:48:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tStupid me....\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI add the input to the pending array_co_ with a normal incrementing index_co_ as shown here_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_pending_inputs.push(input)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYet_co_ when a new update is received from the server_co_ I _t_assume_t__co_ that the index is the same as the sequence number.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_lastSequence _eq_ message.last_sm_ \nconsole.log(lastSequence)_sm_ \nfor (var x in pending_inputs){ \nif (x &lt_sm__eq_ lastSequence)\n{ \nconsole.log(x)_sm_ \ndelete pending_inputs[x]_sm_\npending_inputs.splice(x_co_ 1)_sm_ \ndelete inputsToSend[x]_sm_ \ninputsToSend.splice(x_co_ 1)_sm_ \n} \nelse { \n//console.log(x)_sm_ //  \nconsole.log(pending_inputs[x])_sm_ \n\napplyInputs(pending_inputs[x])_sm_ }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo the fix was to change the if condition in the for loop to_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_ if (pending_inputs[x].input_sequence_number &lt_sm__eq_ lastSequence){_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n\t_lt_/p_gt_\n_lt_p_gt_\n\t\tThis fixed the major issue_co_ and it now runs _qt_Okay_qt_ even with a latency of ~400ms and low server tick rates like ~5.\n\t_lt_/p_gt_\n\n\n_lt_p_gt_\n\tI still have an issue_co_ as there is minor jumps in the end of applied input_co_ almost like the client predicts the position -&gt_sm_ then gets the server position -&gt_sm_ then rewinds to this position -&gt_sm_ then applies the not yet acknowledged input. It feels like this is the jump I see_co_ but I_t_m not sure.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ll have a look at it_co_ but I_t_m more or less satisfied by how it turned out now.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-11-28T17:13:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tGood catch _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Raggar","Date":"2016-11-28T19:01:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt was a mistake that shouldn_t_t have happened in the first place _lt_img alt_eq__qt__dd_P_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ title_eq__qt__dd_P_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tGood thing this is nothing more than a hobby-project.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo far it seems to run decently smooth_co_ as long as I keep the latency under about 80 ms.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]