[{"Owner":"jerome","Date":"2017-09-15T20:14:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tthanks for the feedback... I_t_m no shader expert_co_ it_t_s my first one ever. The message seems to tell us that Edge doesn_t_t like my float array declaration _dd_ float[11] rotMatrix\n_lt_/p_gt_\n\n_lt_p_gt_\n\tnot sure... I_t_ll ask to the shader gods.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn order to better understand the comparisons between all these versions_co_ the GPU one ( _lt_a href_eq__qt_http_dd_//jerome.bousquie.fr/BJS/test/SPSGpu/spsShader.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//jerome.bousquie.fr/BJS/test/SPSGpu/spsShader.html_lt_/a_gt_ ) is actually exactly the same than the monothreaded typed array based one ( _lt_a href_eq__qt_http_dd_//jerome.bousquie.fr/BJS/test/spsBuffer.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//jerome.bousquie.fr/BJS/test/spsBuffer.html_lt_/a_gt_ )_co_ except that the transformations are computed GPU side instead of CPU side.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis means that_co_ without any worker_co_ the gain is really important.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCompared to the worker versions_co_ on my not-that-strong laptop_co_ the GPU version is a bit faster than the worker version.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tShould I add workers now to the GPU version ? not sure actually_co_ because all the heaviest computation part is deported to the GPU and the CPU only does now simple array element assignements. Splitting the array among different workers won_t_t bring anything more because the memory shared between these workers can_t_t be also shared with the GPU_co_ meaning that we have to loop over the whole worker shared array_co_ once updated_co_ to copy it into the GPU buffer anyway.. so the same loop size in final_co_ once more_co_ to fill the vertex buffer.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Raggar","Date":"2017-09-15T21:45:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJust as I_t_m reading about this tech_co_ this thread pops up _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tThe GPU version runs at 40FPS on my rig_co_ and both the 2 latest worker versions run at 60FPS_co_ although you can spot some slight stutter.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-09-16T12:30:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tSo maybe it_t_s worth the try to add the worker to the GPU version and check ... I_t_ll do it next week if I can.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Raggar","Date":"2017-09-16T14:00:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI honestly have no idea. I_t_m still trying to wrap my head around shared arrays and atomics_co_ to see whether_co_ and how much_co_ these are usable for running physics in workers. Why not give it a try. At least you_t_ll gain some knowledge. It_t_s just a matter of time before it_t_s as compatible as WebGL. I_t_ll be interesting in your findings and experiments..\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Spankied","Date":"2017-09-17T22:14:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI_t_m using an old office desktop and the final worker version was remarkably faster. Wasn_t_t able to discern the _lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#222222_sm_font-size_dd_16px_sm_text-align_dd_left_sm__qt__gt_∞ _lt_/span_gt_symbol in previous versions cause was taking too long. \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Convergence","Date":"2018-01-31T22:29:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSince the security patch where SharedArrayBuffer was disabled_co_ this doesn_t_t work anymore _lt_img alt_eq__qt__dd_(_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ title_eq__qt__dd_(_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-02-01T07:37:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tyes_co_ AFAIK_co_ because of Spectre/Meltdown everything related to shared memory is disabled everywhere _lt_img alt_eq__qt__dd_(_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ title_eq__qt__dd_(_qt_ width_eq__qt_20_qt_ /_gt_ (I think that it can be manually enabled though)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-05-13T16:35:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI just had an idea to make it work with the same efficiency without the (disabled) SharedBufferArray feature.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNot sure I_t_ll have the time and the energy to implement it soon though\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-09-19T07:58:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tLet_t_s go on now with the WASM SPS.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFirst remember the former tests on a 40 K solid particle SPS _lt_span_gt_and the perfs I get in my Chrome _dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLegacy SPS _lt_span_gt__dd_ _lt_/span_gt__lt_a href_eq__qt_http_dd_//jerome.bousquie.fr/BJS/test/spsReference.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//jerome.bousquie.fr/BJS/test/spsReference.html     (8 fps)_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLighter Buffer SPS _dd_ _lt_a href_eq__qt_http_dd_//jerome.bousquie.fr/BJS/test/spsBuffer.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//jerome.bousquie.fr/BJS/test/spsBuffer.html   (7 fps)_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTwo worker SPS _dd_ _lt_a href_eq__qt_http_dd_//jerome.bousquie.fr/BJS/test/SPSWorker/twoWorkers/spsProtoWorker.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//jerome.bousquie.fr/BJS/test/SPSWorker/twoWorkers/spsProtoWorker.html (37-42 fps)_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tand now the WASM SPS _dd_ _lt_a href_eq__qt_http_dd_//jerome.bousquie.fr/BJS/test/SPSWasm/spsWasm.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//jerome.bousquie.fr/BJS/test/SPSWasm/spsWasm.html  (31 fps)_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis last version has done with AssemblyScript like explained here _lt_span_gt__dd_ _lt_/span_gt_\n_lt_/p_gt_\n_lt_iframe allowfullscreen_eq__qt__qt_ data-controller_eq__qt_core.front.core.autosizeiframe_qt_ data-embedcontent_eq__qt__qt_ data-embedid_eq__qt_embed8120815880_qt_ scrolling_eq__qt_no_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/topic/38859-web-assembly/?do_eq_embed&amp_sm_comment_eq_228634&amp_sm_embedComment_eq_228634&amp_sm_embedDo_eq_findComment_qt_ style_eq__qt_height_dd_265px_sm_max-width_dd_502px_sm__qt__gt__lt_/iframe_gt_\n\n_lt_p_gt_\n\tIt_t_s the Buffer SPS version ported to AssemblyScript_co_ then compiled in WASM. It brings a gain of 4.4 more speed\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can get the AS source here _dd_ _lt_a href_eq__qt_http_dd_//jerome.bousquie.fr/BJS/test/SPSWasm/index.ts_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//jerome.bousquie.fr/BJS/test/SPSWasm/index.ts_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlease let me know how this behaves in your browser.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNote that WASM is compatible with workers and that a double-worker-wasm SPS could be implemented... not sure I_t_ll do it because it_t_s quite complex.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t[EDIT] _dd_ a test with 20K particles runs at 60 fps here. So I guess that a two-worker implementation_co_ each computing 20K in wasm_co_ could also run at 60 fps for a total of 40K particles.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-09-19T13:00:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tlet_t_s also recap what dimensions we are talking about _lt_span_gt__dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t20 K boxes_co_ each having 24 vertices _eq_ 480K vertices\n_lt_/p_gt_\n\n_lt_p_gt_\n\t+ 20K tetrahedrons_co_ each having 12 vertices _eq_ 240K vertices\n_lt_/p_gt_\n\n_lt_p_gt_\n\tA total of 720 K vertices_co_ knowing each has 3 floats (x_co_y_co_z)  for the positions and 3 floats for the normals_co_ so 4.320 millions floats just for the coordinates.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEach particle stores a shape length_co_ an integer_co_ so 40K integers more.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEach particle is set a transformation (a position_co_ a rotation and a scaling) so 9 floats per particle_co_ so 360 K floats.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn total 4.680 millions floats and 40K integers as input data.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFrom these  input data_co_ 4.320 millions floats_co_ the transformed vertex positions and normals_co_ are computed and stored in the same buffer... in 18 ms\n_lt_/p_gt_\n\n_lt_p_gt_\n\t[EDIT] and meanwhile 40K quaternions and 40K rotation matrices_co_ one per particle_co_ are also computed !\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-09-19T18:24:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tReally cool experiment!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]