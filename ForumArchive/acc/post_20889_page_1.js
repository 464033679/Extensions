[{"Owner":"Pryme8","Date":"2016-03-02T03:02:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHow would one go about making different materials have different restitution and friction?  and is this possible with multiMats?_lt_br_gt__lt_br_gt_\n\talso changing my friction does not seem to effectively do anything...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-03-02T05:13:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi P8!    Friction_co_ restitution_co_ mass_co_ these are characteristics of a _qt_physics impostor_qt_ and not of the mesh itself.  Pardon my over-teaching... I don_t_t know your experience.  You can think of the impostor as an invisible _qt_inner mesh_qt_.  After mesh.setPhysicsState(...)_co_ the impostor... essentially_co_ commandeers the mesh... controlling it_t_s forces and movements.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet_t_s pretend that you have a 3-colored box _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#9SJ4A_qt_ rel_eq__qt_external nofollow_qt__gt_such as this_lt_/a_gt_.  Let_t_s pretend that the blue sides _eq_ ice_co_ the red sides _eq_ sandpaper_co_ and the green sides _eq_ wood.  You get the idea. You must determine the orientation of the physics impostor... to determine which surface is currently contacting the ground. The physics impostor is color blind.  It has no material_co_ and cannot see the box colors.  I don_t_t know which physics engine you are using_co_ but the physics _lt_em_gt_body_lt_/em_gt_ that is returned (_lt_em_gt_ var body _eq_ mesh.setPhysicsState(..) _lt_/em_gt_)...  has an orientation property.  (or body.body does_co_ depending upon the engine).  It is likely a Quaternion_co_ but look for a toEuler() or toEulerAngles() on _lt_em_gt_any_lt_/em_gt_ Quaternion... you will often find them.  Ask if you need more help finding it and seeing it_t_s values.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe more important... the _lt_strong_gt__lt_u_gt_mesh_lt_/u_gt__lt_/strong_gt_.rotationQuaternion.toEulerAngles()_lt_em_gt_ might be _lt_/em_gt_staying in sync with physics body orientation.  So_co_ perhaps you can use that method to deduce which color-side of the box... is currently contacting the ground or sliding-ramp.  Smarter people than I are nearby... should you have troubles.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOn another subject_co_ spheres have no friction_co_ so if you are using a sphere... you will see little or no friction affect/effect.  Spheres do not provide enough surface contact.  Possibly_co_ you can get SOME sphere surface friction... by using a physics heightMap ground (meshImposter - CannonJS only) to create a ground with tiny little bumps... spread uniformly.  Do this by using a bitmap image for the heightMap... that has alternating pixels white-lightgray-white-lightgray_co_ etc. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t(Actually_co_ you can use white-black-white-black_co_ etc... and then set the max-height of the heightMap... to a tiny value.)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSearch the forum carefully_co_ because SOME similar tests were done_co_ and conversations have happened about friction (and air-resistance) for spheres.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLastly_co_ Schteppe_co_ the author of CannonJS... recently visited our forum (my nipples got erect cuz he_t_s a superstar)_co_ and he told us that we should _qt_expose_qt_ a way for programmers to monitor and intervene during each _qt_step_qt_ (schtepp?) of a physics motion_co_ and with that... we could apply a force PER STEP  (wind resistance_co_ sphere friction_co_ curved trajectories_co_ etc). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust after that_co_ local superhero Raanan... reprogrammed our physics plugins.  I have not looked at the new interfaces... but I hear they ROCK!  SO... ahem... using our render loop_co_ you can continuously apply some resisting forces to _qt_stuff_qt_.  (Although we could ALWAYS do that by using a little continuous applyImpulse()_co_ too.  hmm.)  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n_lt_p_gt_\n\tI hope this helps.  Stay in touch.  Thanks for hanging out with us... I look forward to your experiments/playgrounds.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-03-02T05:52:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI figured out that the friction was not a divider but a multiplier  setting my fiction to 0.1 ended up working._lt_br_gt__lt_br_gt_\n\tAlso_co_ what I mean is if I have lets say a Grass material_co_ and a Stone material on the same mesh_co_ is there a way like in unity to have the material of the mesh matter?_lt_br_gt__lt_br_gt_\n\tI figured I could always split the object up_co_ but seeing how some of the areas of texture will transition in areas other then polygons it seems this method will be limited.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-03-02T06:21:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI think it can be done_co_ but it just hasn_t_t been built-into BJS_co_ yet (or an extension).  Not that I know-of. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou know how it would work_co_ though.  Build a set of 3 materials as stated in my last post_co_ over-load them with a .friction value_co_ then build _qt_the determiner_qt_... some unGodly contraption that uses UVs and physics to determine which material is rubbing against which material_co_ and how large of a surface (if possible).  Then live-set the friction values of the mesh impostors_co_ depending upon what _t_the determiner_t_ wants.  If the object is tumbling_co_ and each bounce is landing on a different material (or a combination of materials _lt_span_gt_@_lt_/span_gt_ intersection between mats)_co_ you have your work cut-out for you.  _lt_img alt_eq__qt__dd_o_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_ohmy.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/ohmy@2x.png 2x_qt_ title_eq__qt__dd_o_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n_lt_p_gt_\n\tGruesome project!  Please wait for others to add answers_co_ as this puppy is pretty far over my head.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-03-02T16:10:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWingnut_co_ your a boss! you just inspired me to figure this out!  I think what I am going to do it write a sub process_co_ that takes the contact point from the physics method and checks that point for the closest point on the actual mesh check the uV of that point and then have the meshs Imposters change properties._lt_br_gt__lt_br_gt_\n\tSo to make this happen first I need to figure out_dd__lt_br_gt_\n\t- How to listen for a _qt_hit_qt_ from the physics system and have a callback_lt_br_gt_\n\t- Convert Location of hit to Global coordinates_co_ and then check this global point for the closest uV point on the original mesh_lt_br_gt_\n\t- Get the information for the material from the current UV in the form of [Texture A_dd_ 0.8_co_ Texture_dd_ B 0.2] in case there are blended textures_lt_br_gt_\n\t- Check my object that I constructed to hold the Texture references to their physical properties and do what ever blending is needed so like in the above example of a return if Texture A_t_s friction was stored as 0.5 and texture B was a friction of 1 so the blended physics properties would be like a 0.55 friction or something like that off the top of my head_lt_br_gt_\n\t- Change the Imposters Physics attributes to match response from Object._lt_br_gt__lt_br_gt_\n\tdoes this sound about right or am I a loony toon?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-03-02T18:32:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\thaha!  I love it!  I think you_t_ve got a plan.  As far as sounding _qt_right_qt__co_ I_t_m not sure there IS such a thing_co_ here. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ if possible_co_ I would consider trying to incorporate SIMD and webWorkers... both of which I know ZERO about_co_ but I hear good things.  Both are available in BJS... search the source for examples.  Good luck!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-03-02T23:08:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSetting the friction and restitution when creating the mesh impostor creates a physics material for your physics body. This physics material will be used when the impostor collides against other meshes.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tChanging it dynamically (if that is the question) will force you to recreate the physics material of this object (and_co_ honestly_co_ it is easier to recreate the physics body_co_ due to initializations both oimo and cannon are doing to the rigid body objects).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheck restitution for example - \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#STVJ2%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#STVJ2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tvs \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#STVJ2%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#STVJ2#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tyou can see that the ball_t_s restitution is not taken into account in this case - it_t_s the ground_t_s restitution that is important. Note also_co_ that those factors are being taken into account only when the body actually collides. friction is not _qt_air_qt_ friction. The ball will free fall until it collides against the ground.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-03-02T23:11:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_118905_qt_ data-ipsquote-contentid_eq__qt_20889_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1456935041_qt_ data-ipsquote-userid_eq__qt_19199_qt_ data-ipsquote-username_eq__qt_Pryme8_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t6 hours ago_co_ Pryme8 said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tSo to make this happen first I need to figure out_dd__lt_br_gt_\n\t\t\t- How to listen for a _qt_hit_qt_ from the physics system and have a callback_lt_br_gt_\n\t\t\t- Convert Location of hit to Global coordinates_co_ and then check this global point for the closest uV point on the original mesh_lt_br_gt_\n\t\t\t- Get the information for the material from the current UV in the form of [Texture A_dd_ 0.8_co_ Texture_dd_ B 0.2] in case there are blended textures_lt_br_gt_\n\t\t\t- Check my object that I constructed to hold the Texture references to their physical properties and do what ever blending is needed so like in the above example of a return if Texture A_t_s friction was stored as 0.5 and texture B was a friction of 1 so the blended physics properties would be like a 0.55 friction or something like that off the top of my head_lt_br_gt_\n\t\t\t- Change the Imposters Physics attributes to match response from Object.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tAnswering your questions_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) There is an onCollide callback_co_ added just now. I need to document it_co_ so stay tuned.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) you will get the collision point in world coordinates_co_ and will have to find that yourself _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt_ but PickingInfo does that nicely_co_ check how it is being done there.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t3) Not sure what you mean. I think you mix styling material (color_co_ texture etc_t_) with physics material_co_ which is constant to the entire mesh/body\n_lt_/p_gt_\n\n_lt_p_gt_\n\t4) I need an explanation for this one _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n_lt_p_gt_\n\t5) Same as 4 _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n_lt_p_gt_\n\tBut_co_ and I know I repeat myself_co_ I think you will get all your questions answered once I finish the documentation. My fault_co_ I know_co_ but it is first on my todo list_co_ now that the challenge is over.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]