[{"Owner":"²Digitalgames","Date":"2015-12-14T13:01:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_co_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_i need to apply _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_renderingGroupId_eq_ 1 _sm_ to all meshes loaded in one babylon scene. _lt_/span_gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_BABYLON.SceneLoader.ImportMesh(_qt__qt__co_ _qt_scenes/_qt__co_ _qt_InterfaceObjects.babylon_qt__co_ scene_co_ function (newMeshes) {            var InterfaceMeshes _eq_ newMeshes            InterfaceMeshes.renderingGroupId _eq_ 1_sm_})_sm__lt_/pre_gt__lt_p_gt_I want to avoid calling newMeshes[0] _co_newMeshes[1] ...and so on and apply to the whole array of meshes. Is that possible ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-12-14T13:05:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_well_co_ iterate _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_newMeshes.forEach(function(mesh) {    mesh.renderingGroupId _eq_ 1_sm_})_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"²Digitalgames","Date":"2015-12-14T13:35:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_span_gt_I would not have found this by myself and its working ! Great _co_ thank you._lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span_gt_But i would be interested how arrays are used or can be used in Babylon.js. I am using arrays alot in another scripting language. _lt_/span_gt__lt_/p_gt__lt_p_gt_What i found was smart array _co_ but it can´t see a connection to regular uses of arrays. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-12-14T13:43:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Most of the arrays used in BabylonJS are the regular JavaScript arrays._lt_/p_gt__lt_p_gt_I find Mozilla_t_s pages very helpful - _lt_a href_eq__qt_https_dd_//developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The SmartArray (implemented in Babylon.js) is seldom used. You can find the API here - _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/2.2/SmartArray_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/classes/2.2/SmartArray_lt_/a_gt__lt_/p_gt__lt_p_gt_It is a wrapper around the regular JS Array to add a bit more functionality. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-12-14T16:35:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The SmartArray is here for only one reason_dd_ the garbage collector._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_SmartArray has a way to clear its content without stressing the GC which is really important internally_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]