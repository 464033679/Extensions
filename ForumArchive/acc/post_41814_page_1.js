[{"Owner":"Shb","Date":"2018-12-12T00:15:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi all_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI was wondering if it was possible to access variables from a previous pass in the shader_co_ i.e color of fragment or something along those lines.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI want to have something that changes color over time after an event occurs. So if I can access a time delta plus a previous color then I can slowly modify it to a new state_co_ is this possible?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t*Note this is my first time working with shaders_co_ please excuse any stupid questions _lt_span_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ˜•_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"thrice","Date":"2018-12-12T00:35:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt_t_s possible_co_ just not directly from within the shader.Â Instead you pass the data to the shader on the JS side of things_co_ i.e. assuming you have an instance of shader material_co_ pseudocode_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_shader_material.setVector3(_t_inputColor_t__co_ new BABYLON.Vector3(1_co_0_co_0)_sm_\nshader_material.setFloat(_t_time_t__co_ 0.0)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThen after event occurs you can do something like\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_current_time _eq_ 0.0_sm_\ntime_step _eq_ 0.01_sm_\nscene.onBeforeRenderObservable.add(() _eq_&gt_sm_ {\n  shader_material.setFloat(_t_time_t__co_ current_time + time_step)_sm_\n})_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Shb","Date":"2018-12-12T00:52:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/24959-thrice/?do_eq_hovercard_qt_ data-mentionid_eq__qt_24959_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/24959-thrice/_qt_ rel_eq__qt__qt__gt_@thrice_lt_/a_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for the quick response _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe event in this case is local to that part of the mesh and is calculated by passing an array of objects_positions into the shader\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI wanted to retain the values calculated by the previous render because calculating them again seems inefficient (as I_t_d need to pass in old values &amp_sm_ new values_co_ then do the calculation for both_co_ which still doesn_t_t achieve what I want to do as it gets rid of the calculations done before the immediately last one).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor example in the pictures below I wan there to be slow transition between the color not an instant one on movement of the sphere.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_ss1.png.4f91f6278e9a13f77817848380ee087b.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_21440_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_12/ss1.png.4f91f6278e9a13f77817848380ee087b.png_qt_ /_gt__lt_img alt_eq__qt_ss2.png.67f520c79f6deb9500a7a6f1937c262f.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_21439_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_12/ss2.png.67f520c79f6deb9500a7a6f1937c262f.png_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Shb","Date":"2018-12-12T00:57:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tBasically something like what the OP of this question was trying to do\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//stackoverflow.com/questions/2740874/how-do-i-get-the-current-color-of-a-fragment_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//stackoverflow.com/questions/2740874/how-do-i-get-the-current-color-of-a-fragment_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(I couldn_t_t really get an answer that I understood from this either)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"thrice","Date":"2018-12-12T01:02:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYa so_co_ you_t_d either have to do the calculations on the javascript side_co_ and pass it to the shader as a uniform_co_ or something else_co_ but you can_t_t store computed variables in the shader for the next pass if that_t_s what you are asking. Are the sphere / background 2 different textures you_t_re passing into the shader?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Shb","Date":"2018-12-12T01:23:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/24959-thrice/?do_eq_hovercard_qt_ data-mentionid_eq__qt_24959_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/24959-thrice/_qt_ rel_eq__qt__qt__gt_@thrice_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe sphere is a mesh_co_ the ground is a separate mesh (height map)_co_ then there is a custom mesh on top of both of them (Â _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#KDUJ4Z_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#KDUJ4Z_lt_/a_gt_Â like this_co_ except using the material to set the opacityÂ ) which is where the shader does it_t_s work_co_ I pass the shader the location of the sphere (and all objects like it) along with theirÂ radius of influence_co_Â using a float array (i.e [obj1.x_co_obj1.z_co_radius_co_obj2.x_co_obj2.z_co_radius_co_...]) for a lack of a better way of passing the data.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI had been doing the computation on the cpu but wanted to move it to the gpu side to reduce the load but it seems like that_t_s not possible if I want the fade out effect ?Â \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"thrice","Date":"2018-12-12T01:47:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tEh_co_ not like that at least_co_ you def can_t_t store variables within the fragment shader itself. Part of your question sounds like maybe it could be solved with vertex shader_co_ which is mostly outside my knowledge domain_co_ but maybe not. However It also sounds like there might be a better way of doing what you are trying to achieve. You could probably use a custom render target to essentially bake the image as the sphere moves through it_co_ or something to that effect? Then you_t_d just pass the baked image as a sampler to the mainÂ shader and use that to diff it? IDK I don_t_t have much experience with render targets_co_ but that is essentially how I would try to approach the problem_co_ baking the image as some sort of 2d map of the fog of war as it_t_s lifted_co_ then you_t_d only need to update it as the circle is moving. (And you_t_d probably simulate that inÂ another shader_co_ in which you could pass the heightmap texture_co_ and draw a circle on it_co_ at the same scale of the main sphere / ground ratio_co_ then you_t_d move the sphere by just passing in a xy offset to the circle_co_ as the sphere moves_co_Â which would be drawn on top of the height map_co_ which would be the thing you_t_d be baking)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"thrice","Date":"2018-12-12T01:55:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCould also maybe create a ribbon and update that as the sphere moves_co_ and use that to track the spheres path_co_ if that_t_s what you are trying to do? (i_t_m assuming you_t_re going for a 2d fog of war effect i.e. warcraft/diablo?)Â idk_dd_Â _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/how_to/ribbon_tutorial_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/how_to/ribbon_tutorial_lt_/a_gt_Â \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Shb","Date":"2018-12-12T09:18:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/24959-thrice/?do_eq_hovercard_qt_ data-mentionid_eq__qt_24959_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/24959-thrice/_qt_ rel_eq__qt__qt__gt_@thrice_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for all your input _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYea I was going for a fog of war effect_co_ I am actually doing the calculation on the vertex shader_co_ and passing it down to the fragment shader.Â \n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_237679_qt_ data-ipsquote-contentid_eq__qt_41814_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1544579225_qt_ data-ipsquote-userid_eq__qt_24959_qt_ data-ipsquote-username_eq__qt_thrice_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t7 hours ago_co_ thrice said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tYou could probably use a custom render target to essentially bake the image as the sphere moves through it_co_ or something to that effect? Then you_t_d just pass the baked image as a sampler to the mainÂ shader and use that to diff it?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tNever heard of custom render targets I guess that_t_s something I could look into.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]