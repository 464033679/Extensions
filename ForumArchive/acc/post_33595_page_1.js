[{"Owner":"snupas","Date":"2017-10-22T20:34:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m trying to test out morphtargets_co_ so I load up a scene and try to create a copy of the original mesh to then scale it and morph between the two_co_ but for some reason the original mesh isn_t_t being rendered anymore_co_ plus the copy isn_t_t hidden with setEnabled().\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf I remove all of the copy code_co_ the original mesh starts being rendered fine again.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var scene_sm_\nvar mesh_sm_\nvar meshCopy_sm_\n    if (BABYLON.Engine.isSupported()) {\n        var canvas _eq_ document.getElementById(_qt_renderCanvas_qt_)_sm_\n        var engine _eq_ new BABYLON.Engine(canvas_co_ true)_sm_\n\n        BABYLON.SceneLoader.Load(_qt_assets/2/_qt__co_ _qt_untitled.babylon_qt__co_ engine_co_ function (newScene) {\n \n            newScene.executeWhenReady(function () {\n                // Attach camera to canvas inputs\n                newScene.activeCamera.attachControl(canvas)_sm_\n                scene _eq_ newScene_sm_\n                mesh _eq_ scene.meshes[0]_sm_\n                mesh.convertToFlatShadedMesh()_sm_\n                meshCopy _eq_ mesh.clone(_qt_1_qt_)_sm_\n                meshCopy.x -_eq_10_sm_\n                // meshCopy.parent _eq_ mesh_sm_\n                meshCopy.setEnabled(false)_sm_\n                meshCopy.position.y _eq_+ 1_sm_\n                meshCopy.scaling _eq_ new BABYLON.Vector3(1.1_co_ 1.5_co_ 1.0)_sm_\n                meshCopy.bakeCurrentTransformIntoVertices()_sm_\n                var manager _eq_ new BABYLON.MorphTargetManager()_sm_\n                mesh.morphTargetManager _eq_ manager_sm_\n                //var target _eq_ BABYLON.MorphTarget.FromMesh(meshCopy_co_ _qt_instance1_qt__co_ 0.25)_sm_\n               \n                engine.runRenderLoop(function() {\n                    newScene.render()_sm_\n                })_sm_\n            })_sm_\n        }_co_ function (progress) {\n\n        })_sm_\n    }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"snupas","Date":"2017-10-22T21:37:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAhh firefox properly outputs the error_dd_\n_lt_/p_gt_\n\n_lt_div_gt_\n\t_lt_pre_gt_\n_lt_code_gt__lt_span_gt_Error_lt_/span_gt__dd_ WebGL warning_dd_ Exceeded _lt_span_gt_16_lt_/span_gt_ live WebGL contexts _lt_span_gt_for_lt_/span_gt_ _lt_span_gt_this_lt_/span_gt_ principal_co_ losing the least recently used one._lt_/code_gt__lt_/pre_gt_\n_lt_/div_gt_\n\n_lt_p_gt_\n\tHow am I exceeding 16 live webgl contexts with a single copy?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEDIT_dd_ Nevermind_co_ that doesn_t_t relate to this error_co_ I don_t_t get this error in Chrome or Edge.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nabroski","Date":"2017-10-23T15:48:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tSo you have 2 Scenes_co_ i can_t_t spot a second renderloop ? What would happen if you just use newScene for debugging purposes \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-10-23T17:35:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYour fireFox error is unrelated.  It just means you hit the refresh button too many times.  Query forum should you care more.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYour real problem is clone.  It does not do what you think like in Java &amp_sm_ other languages.  It allows multiple meshes to share the same vertex data.  It is for saving space_co_ yet still allows for different materials on each mesh.  When you scaled it you did it for both.  You could load it twice_co_ if it that is possible.  FYI_co_ doing 2 Loads is highly ill-advised.  Use Append for more than one.  Also do not use the callback option_co_ or it gets really messy when you have 2.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var scene _eq_ new BABYLON.Scene(engine)_sm_\n\nBABYLON.SceneLoader.Append(_qt_assets/2/_qt__co_ _qt_untitled.babylon_qt__co_ scene)_sm_\nBABYLON.SceneLoader.Append(_qt_assets/2/_qt__co_ _qt_untitled.babylon_qt__co_ scene)_sm_\n\nscene.executeWhenReady(function () {\n\n    // do your stuff here\n    // Once the scene is loaded_co_ register a render loop\n    engine.runRenderLoop(function() {\n        scene.render()_sm_\n     })_sm_\n})_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThe trick is you will now have 2 meshes with the same name.  There is probably a better way to do this by just copying the positions / normals/ etc_co_ and making a new mesh.  I never needed to look into that_co_ as I use a source code exporter.  I just say _t_var mesh1 _eq_ new moduleNm.MyMesh(scene)_sm__t_ twice. JSON is a pile.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-10-23T17:43:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYou can also still using clone() but then you have to call mesh.makeGeometryUnique() so you can update geometry on only one mesh\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]