[{"Owner":"mache","Date":"2016-06-10T09:54:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI need to set a bunch of textures array in my shaders_co_ is there a simple way to achieve that in babylon js or should I use something like here _eq_&gt_sm_ _lt_a href_eq__qt_http_dd_//stackoverflow.com/questions/19592850/how-to-bind-an-array-of-textures-to-a-webgl-shader-uniform_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//stackoverflow.com/questions/19592850/how-to-bind-an-array-of-textures-to-a-webgl-shader-uniform_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheers\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-06-13T16:06:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAre you using the ShaderMaterial? If yes_co_ you can directly call setTexture to set a texture (!!!)_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/babylon.shaderMaterial.ts#L47_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/babylon.shaderMaterial.ts#L47_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor a texture array_co_ we can think about adding the same function\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mache","Date":"2016-06-14T08:08:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYes Iam using ShaderMaterial (you could do the same with an Effect as long you can get the WebGlProgram)_co_ finally I did it this way_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_//this._nbIndexTextures _eq_ length of each array\n\nfor (let i _eq_ 0_sm_ i &lt_sm_ this._nbIndexTextures + 1_sm_ i++) {\n\t//ini texture units\n\ttextureUnitsId.push(i)_sm_\n\ttextureUnitsNormal.push(i + this._nbIndexTextures + 1)_sm_\n\ttextureUnitsPosition.push(i + 2 * (this._nbIndexTextures + 1))_sm_\n}\n\nvar program _eq_ materialBuffer._effect.getProgram()_sm_\nthis._gl.useProgram(program)_sm_\nvar idLocation _eq_ this._gl.getUniformLocation(program_co_ _qt_idSamplers[0]_qt_)_sm_\nvar normalLocation _eq_ this._gl.getUniformLocation(program_co_ _qt_normalSamplers[0]_qt_)_sm_\nvar positionLocation _eq_ this._gl.getUniformLocation(program_co_ _qt_positionSamplers[0]_qt_)_sm_\n\nthis._gl.uniform1iv(idLocation_co_ textureUnitsId)_sm_\nfor (let i _eq_ 0_sm_ i &lt_sm_ this._nbIndexTextures + 1_sm_ i++) {\n\t//id\n\tthis._gl.activeTexture(this._gl.TEXTURE0 + i)_sm_\n\tthis._gl.bindTexture(this._gl.TEXTURE_2D_co_ this._idTextures[i]._texture)_sm_\n}\n\nthis._gl.uniform1iv(normalLocation_co_ textureUnitsNormal)_sm_\nfor (let i _eq_ this._nbIndexTextures + 1_sm_ i &lt_sm_ 2 * (this._nbIndexTextures + 1)_sm_ i++) {\n\tvar index _eq_ i - (this._nbIndexTextures + 1)_sm_\n\t//normal\n\tthis._gl.activeTexture(this._gl.TEXTURE0 + i)_sm_\n\tthis._gl.bindTexture(this._gl.TEXTURE_2D_co_ this._normalTextures[index]._texture)_sm_\n}\n\nthis._gl.uniform1iv(positionLocation_co_ textureUnitsPosition)_sm_\nfor (let i _eq_ 2 * (this._nbIndexTextures + 1)_sm_ i &lt_sm_ 3 * (this._nbIndexTextures + 1)_sm_ i++) {\n\tvar index _eq_ i - 2 * (this._nbIndexTextures + 1)_sm_\n\t//position\n\tthis._gl.activeTexture(this._gl.TEXTURE0 + i)_sm_\n\tthis._gl.bindTexture(this._gl.TEXTURE_2D_co_ this._positionTextures[index]._texture)_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tSince iam not using babylon js to set my uniforms textures I had bug when using setTexture function_co_ so I also set other single texture this way. (texture unit were not well allocated i guess).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthis function could just looks like this _eq_&gt_sm_ setTextureArray(name_co_ textures) each time before binding babylon check textures.length and manage texture units.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-06-14T17:56:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tAgree this could be a cool PR_dd_)\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mache","Date":"2016-06-17T09:24:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOK cool_co_ I let you know about it.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mache","Date":"2016-06-17T15:59:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo I took a look at the babylon code. It looks like setTexture and the hypothetic setTextures are going to be in conflict since they share texture units. For now I don_t_t really know how to do it without breaking everything _dd_p.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is the part which stuck me \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_Engine.prototype.setTexture _eq_ function (channel_co_ texture) {\n            if (channel &lt_sm_ 0) {\n                return_sm_\n            }\n            // Not ready?\n            if (!texture || !texture.isReady()) {\n                if (this._activeTexturesCache[channel] !_eq_ null) {\n                    this._gl.activeTexture(this._gl[_qt_TEXTURE_qt_ + channel])_sm_\n                    this._gl.bindTexture(this._gl.TEXTURE_2D_co_ null)_sm_\n                    this._gl.bindTexture(this._gl.TEXTURE_CUBE_MAP_co_ null)_sm_\n                    this._activeTexturesCache[channel] _eq_ null_sm_\n                }\n                return_sm_\n            }\n            // Video\n            var alreadyActivated _eq_ false_sm_\n            if (texture instanceof BABYLON.VideoTexture) {\n                this._gl.activeTexture(this._gl[_qt_TEXTURE_qt_ + channel])_sm_\n                alreadyActivated _eq_ true_sm_\n                texture.update()_sm_\n            }\n            else if (texture.delayLoadState _eq__eq__eq_ Engine.DELAYLOADSTATE_NOTLOADED) {\n                texture.delayLoad()_sm_\n                return_sm_\n            }\n            if (this._activeTexturesCache[channel] _eq__eq__eq_ texture) {\n                return_sm_\n            }\n            this._activeTexturesCache[channel] _eq_ texture_sm_\n            var internalTexture _eq_ texture.getInternalTexture()_sm_\n            if (!alreadyActivated) {\n                this._gl.activeTexture(this._gl[_qt_TEXTURE_qt_ + channel])_sm_\n            }\n            if (internalTexture.isCube) {\n                this._gl.bindTexture(this._gl.TEXTURE_CUBE_MAP_co_ internalTexture)_sm_\n                if (internalTexture._cachedCoordinatesMode !_eq__eq_ texture.coordinatesMode) {\n                    internalTexture._cachedCoordinatesMode _eq_ texture.coordinatesMode_sm_\n                    // CUBIC_MODE and SKYBOX_MODE both require CLAMP_TO_EDGE.  All other modes use REPEAT.\n                    var textureWrapMode _eq_ (texture.coordinatesMode !_eq__eq_ BABYLON.Texture.CUBIC_MODE &amp_sm_&amp_sm_ texture.coordinatesMode !_eq__eq_ BABYLON.Texture.SKYBOX_MODE) ? this._gl.REPEAT _dd_ this._gl.CLAMP_TO_EDGE_sm_\n                    this._gl.texParameteri(this._gl.TEXTURE_CUBE_MAP_co_ this._gl.TEXTURE_WRAP_S_co_ textureWrapMode)_sm_\n                    this._gl.texParameteri(this._gl.TEXTURE_CUBE_MAP_co_ this._gl.TEXTURE_WRAP_T_co_ textureWrapMode)_sm_\n                }\n                this._setAnisotropicLevel(this._gl.TEXTURE_CUBE_MAP_co_ texture)_sm_\n            }\n            else {\n                this._gl.bindTexture(this._gl.TEXTURE_2D_co_ internalTexture)_sm_\n                if (internalTexture._cachedWrapU !_eq__eq_ texture.wrapU) {\n                    internalTexture._cachedWrapU _eq_ texture.wrapU_sm_\n                    switch (texture.wrapU) {\n                        case BABYLON.Texture.WRAP_ADDRESSMODE_dd_\n                            this._gl.texParameteri(this._gl.TEXTURE_2D_co_ this._gl.TEXTURE_WRAP_S_co_ this._gl.REPEAT)_sm_\n                            break_sm_\n                        case BABYLON.Texture.CLAMP_ADDRESSMODE_dd_\n                            this._gl.texParameteri(this._gl.TEXTURE_2D_co_ this._gl.TEXTURE_WRAP_S_co_ this._gl.CLAMP_TO_EDGE)_sm_\n                            break_sm_\n                        case BABYLON.Texture.MIRROR_ADDRESSMODE_dd_\n                            this._gl.texParameteri(this._gl.TEXTURE_2D_co_ this._gl.TEXTURE_WRAP_S_co_ this._gl.MIRRORED_REPEAT)_sm_\n                            break_sm_\n                    }\n                }\n                if (internalTexture._cachedWrapV !_eq__eq_ texture.wrapV) {\n                    internalTexture._cachedWrapV _eq_ texture.wrapV_sm_\n                    switch (texture.wrapV) {\n                        case BABYLON.Texture.WRAP_ADDRESSMODE_dd_\n                            this._gl.texParameteri(this._gl.TEXTURE_2D_co_ this._gl.TEXTURE_WRAP_T_co_ this._gl.REPEAT)_sm_\n                            break_sm_\n                        case BABYLON.Texture.CLAMP_ADDRESSMODE_dd_\n                            this._gl.texParameteri(this._gl.TEXTURE_2D_co_ this._gl.TEXTURE_WRAP_T_co_ this._gl.CLAMP_TO_EDGE)_sm_\n                            break_sm_\n                        case BABYLON.Texture.MIRROR_ADDRESSMODE_dd_\n                            this._gl.texParameteri(this._gl.TEXTURE_2D_co_ this._gl.TEXTURE_WRAP_T_co_ this._gl.MIRRORED_REPEAT)_sm_\n                            break_sm_\n                    }\n                }\n                this._setAnisotropicLevel(this._gl.TEXTURE_2D_co_ texture)_sm_\n            }\n        }_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThis is where texture are binded_co_ so this part of code need to know if there is array of textures as Engine.prototype.setTextures need to know how many single texture are binded. The shaderMaterial which is calling effect function which is calling this function (engine) could know these informations_co_ but I feel that to pass it as parameter is not the right way to do it... \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHow do you think it should be done ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHave a nice weekend _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-06-17T23:22:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tWhat about calling this function in a loop from the Effect?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mache","Date":"2016-06-20T09:32:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI tried a for loop into the effect function. Here are main changes into the code_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_BABYLON.ShaderMaterial.prototype.setTextures _eq_ function(name_co_ textures) {\n\tif (this._options.samplers.indexOf(name) _eq__eq__eq_ -1) {\n\t\tthis._options.samplers.push(name)_sm_\n\t\tfor (let i _eq_ 1_sm_ i &lt_sm_ textures.length_sm_ i++) {\n\t\t\tthis._options.samplers.push(name + i)_sm_//to match texture unit when binding\n\t\t}\n\t}\n\tthis._textureArrays[name] _eq_ textures_sm_\n\treturn this_sm_\n}_sm_\n\nBABYLON.Effect.prototype.setTextures _eq_ function(channel_co_ textures) {\n\tvar textureUnits _eq_ []_sm_\n\tfor (let i _eq_ 0_sm_ i &lt_sm_ textures.length_sm_ i++) {\n\t\ttextureUnits.push(this._samplers.indexOf(channel) + i)_sm_\n\t}\n\tvar location _eq_ this._engine._gl.getUniformLocation(this._program_co_ channel)_sm_\n\tthis._engine._gl.uniform1iv(location_co_ textureUnits)_sm_\n\tfor (let i _eq_ 0_sm_ i &lt_sm_ textures.length_sm_ i++) {\n\t\tthis._engine.setTexture(textureUnits[i]_co_ textures[i])_sm_\n\t}\n}_sm_\n\n//part of code added into ShaderMaterial.prototype.bind\n\nfor (name in this._textureArrays) {\n    this._effect.setTextures(name_co_ this._textureArrays[name])_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tthis code works fine when I only use setTextures function on a material_co_ but not when I am using in addition a setTexture function. This is caused by _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthis._samplers.indexOf(channel)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen I only use setTextures this.samplers is ok so I got the right one index of nameOfMyArray (0). If I used setTexture in addition this.samplers don_t_t index my array (so I get -1) and texture unit are not well manage.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI tested to replace _qt_this._samplers.indexOf(channel)_qt_ by the right index hard coded (if i added a single texture then my array index should be 1) and it_t_s working.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny ideas of why setTexture erase nameOfMyArray in this.samplers into Effect ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-06-20T15:55:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tcan you share a small shader using textures array? I_t_ll try to make it works _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mache","Date":"2016-06-21T07:45:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tok_co_ I joined my .fx files.\n_lt_/p_gt_\n_lt_p_gt__lt_a class_eq__qt_ipsAttachLink_qt_ href_eq__qt_//www.html5gamedevs.com/applications/core/interface/file/attachment.php?id_eq_8279_qt__gt_debug.fragment.fx_lt_/a_gt__lt_/p_gt_\n_lt_p_gt__lt_a class_eq__qt_ipsAttachLink_qt_ href_eq__qt_//www.html5gamedevs.com/applications/core/interface/file/attachment.php?id_eq_8280_qt__gt_debug.vertex.fx_lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-06-21T16:08:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOK I_t_ll work on it soon (tough week but I_t_ll find some time)\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-06-21T18:34:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tDone _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#NJRT3%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#NJRT3#4_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-06-21T18:41:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tWait no..I forgot one thing _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-06-21T21:33:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOk goooood now_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#NJRT3%236_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#NJRT3#6_lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mache","Date":"2016-06-22T07:20:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tnice _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]