[{"Owner":"ua4192","Date":"2017-05-16T13:15:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi all.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have a problem.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn my scene I am using instances.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe problem I have is that the first time I use the mesh (imported GLTF) I am positioning and rotating the GLTF according to the product structure inherited transformation matrix.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy problem is that the instances seem to take this transformation and are not properly transformed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs there any way to reset the already applied transformations(relative rotation + position to its parent)from the imported meshes (GLTF) and create the instances with no transformations?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tMany thanks in advanced.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-05-16T16:27:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p style_eq__qt_color_dd_#000000_sm__qt__gt_\n\tI_t_ve never used GLTF_co_ so maybe this does not apply.  I have done similar things to set/reset transformations on meshes_co_ you might find the setParent() method useful.  I created a reset parent method that unwinds the transformations_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/13fe95b15653e683a51dbe64d10efdacf495ee99/src/Mesh/babylon.abstractMesh.ts_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/13fe95b15653e683a51dbe64d10efdacf495ee99/src/Mesh/babylon.abstractMesh.ts_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you are on &lt_sm__eq_ 2.5 or want to see a PG_co_ check this one out (I think it_t_s from Adam)_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#28IXSE%2317_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#28IXSE#17_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ua4192","Date":"2017-05-17T10:02:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tMany thanks for your support.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tFinally at the end I found a workaround. I create a symbolic box (a-dimensional) and make parent of meshes included in GLTF. IN this way I have not to apply any transformation on the GLTF meshes_co_ I do it on the box instead.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tMany many thanks\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_dd_ )\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]