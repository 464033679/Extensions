[{"Owner":"HoloLite","Date":"2018-02-26T16:27:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI just synced to npm package alphaA. It built ok but I am getting the following run-time errors (from console log).\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_babylon.inspector.bundle.js_dd_1 Uncaught TypeError_dd_ Cannot read property _t_Vector2_t_ of undefined\n    at i (babylon.inspector.bundle.js_dd_1)\n    at Object.eval (babylon.inspector.bundle.js_dd_1)\n    at t (babylon.inspector.bundle.js_dd_1)\n    at Object.eval (babylon.inspector.bundle.js_dd_1)\n    at t (babylon.inspector.bundle.js_dd_1)\n    at eval (babylon.inspector.bundle.js_dd_1)\n    at eval (babylon.inspector.bundle.js_dd_1)\n    at n (babylon.inspector.bundle.js_dd_1)\n    at eval (babylon.inspector.bundle.js_dd_1)\n    at Object.../../../../babylonjs-inspector/babylon.inspector.bundle.js (vendor.bundle.js_dd_29)_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2018-02-27T13:37:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/28694-hololite/?do_eq_hovercard_qt_ data-mentionid_eq__qt_28694_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/28694-hololite/_qt_ rel_eq__qt__qt__gt_@HoloLite_lt_/a_gt__co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tcould you try removing the inspector_t_s package from package.json and try loading babylon again? the inspector should load even if it is not included. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have tested the inspector a few times and made sure it is working_co_ so I just want to debug it a bit further and understand the base for this error.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"HoloLite","Date":"2018-02-27T18:51:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOK I will try your suggestion as soon as I get into the office. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"HoloLite","Date":"2018-02-27T21:47:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI kept the inspector package from package.json_co_ but I did remove it from the .ts file (the import babylonjs-inspector was removed) and the problem goes away.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2018-02-27T22:10:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJust to let you know - I found the core of the problem_co_ and the next npm package will have a working inspector package. but even if you don_t_t include the inspector_co_ it will be loaded async when needed.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"HoloLite","Date":"2018-02-27T23:44:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI understood that I did not need to explicitly import the inspector - I should_t_ve had those import lines removed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAfter removing the imports_co_ the issue was gone in alphaA as I mentioned previously_co_ and the thing is the inspector is working as far as I can tell. I can see the inspector windows on the right. So my question is what is broken here ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2018-02-28T09:41:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tNothing is broken_co_ it all works as expected.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe problem was the way the inspector was declared and the dependencies it took when initialized.  \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you want to use a specific version of the inspector_co_ you can force a specific version. if not_co_ BABYLON will download the latest version and add it to the current context. In this case_co_ it won_t_t use module.exports_co_ exports or defines (in case of amd)_co_ but will use the regular vanilla JS way_co_ which works as expected.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNext NPM package is coming up later on today_co_ and it will have a fix for that issue.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]