[{"Owner":"cendri11on","Date":"2016-11-26T12:21:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI am building a game using babylon.js and I just ran into a problem. The game is about a chicken that has to find its way back to the henhouse_co_ and on the way there are several tractors driving around that can run over the chicken. The scene loads allright_co_ but when I add animation so that the tractors can move_co_ the scene doesn_t_t load when I start it and I have to refresh it a few times. Does anyone know what could be the problem and how to solve it so that the scene will load when you start the game?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\there is my main code_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var engine_sm_\nvar scene_sm_\nvar canvas_sm_\nvar chicken_sm_\nvar henhouse_sm_\nvar tractor_sm_\nvar tractor2_sm_\nvar tractor3_sm_\n\ndocument.addEventListener(_qt_DOMContentLoaded_qt__co_ function () {\n    onload()_sm_\n}_co_ false)_sm_\n\nwindow.addEventListener(_qt_resize_qt__co_ function () {\n\tif (engine) {\n\t\tengine.resize()_sm_\n\t}\n}_co_false)_sm_\n\nvar onload _eq_ function () {\n    canvas _eq_ document.getElementById(_qt_renderCanvas_qt_)_sm_\n\tengine _eq_ new BABYLON.Engine(canvas_co_ true)_sm_\n\n\tinitScene()_sm_\n\n\tengine.runRenderLoop(function () {\n        scene.render()_sm_\n\t})_sm_\n}_sm_\n\nvar createSkybox _eq_ function() {\n    var skybox _eq_ BABYLON.Mesh.CreateSphere(_qt_skyBox_qt__co_ 100_co_ 1000_co_ scene)_sm_\n\n    BABYLON.Engine.ShadersRepository _eq_ _qt_shaders/_qt__sm_\n\n    var shader _eq_ new BABYLON.ShaderMaterial(_qt_gradient_qt__co_ scene_co_ _qt_gradient_qt__co_ {})_sm_\n    shader.setFloat(_qt_offset_qt__co_ 10)_sm_\n    shader.setColor3(_qt_topColor_qt__co_ BABYLON.Color3.FromInts(0_co_119_co_255))_sm_\n    shader.setColor3(_qt_bottomColor_qt__co_ BABYLON.Color3.FromInts(240_co_240_co_ 255))_sm_\n\n    shader.backFaceCulling _eq_ false_sm_\n\n    skybox.material _eq_ shader_sm_\n}_sm_\n\n\nvar initScene _eq_ function() {\n    scene _eq_ new BABYLON.Scene(engine)_sm_\n\n    scene.clearColor_eq_new BABYLON.Color3(0.8_co_0.8_co_0.8)_sm_\n\n    // Camera attached to the canvas -&gt_sm_ chicken doesnt move\n\t//var camera _eq_ new BABYLON.ArcRotateCamera(_qt_Camera_qt__co_ 0.67_co_ 1.2_co_ 150_co_ BABYLON.Vector3.Zero()_co_ scene)_sm_\n\t//camera.attachControl(canvas)_sm_\n\t\n\t//Create the camera -&gt_sm_ chicken is moving\n\tcamera _eq_ new BABYLON.FreeCamera(_qt_camera_qt__co_ new BABYLON.Vector3(200_co_ 6_co_-300)_co_ scene)_sm_\n\tcamera.setTarget(new BABYLON.Vector3(0_co_0_co_0))_sm_\n\t\n    var h _eq_ new BABYLON.HemisphericLight(_qt_hemi_qt__co_ new BABYLON.Vector3(0_co_ 1_co_ -1)_co_ scene)_sm_\n\th.intensity _eq_ 0.85_sm_\n\t\n    var d _eq_ new BABYLON.DirectionalLight(_qt_dir_qt__co_ new BABYLON.Vector3(1_co_ -1_co_ -2)_co_ scene)_sm_\n    d.position _eq_ new BABYLON.Vector3(-300_co_300_co_600)_sm_\n    var shadowGenerator _eq_ new BABYLON.ShadowGenerator(2048_co_ d)_sm_\n\n\tcreateSkybox()_sm_\n\n    var ground _eq_ BABYLON.Mesh.CreateGround(_qt_ground_qt__co_ 1000_co_ 2000_co_ 2_co_ scene)_sm_\n    ground.material _eq_ new BABYLON.StandardMaterial(_qt_ground_qt__co_ scene)_sm_\n    ground.material.diffuseColor _eq_ BABYLON.Color3.FromInts(193_co_ 181_co_ 151)_sm_\n    ground.material.specularColor _eq_ BABYLON.Color3.Black()_sm_\n\n    ground.receiveShadows _eq_ true_sm_\n\n\tscene.gravity _eq_ new BABYLON.Vector3(0_co_ -0.9_co_ 0)_sm_\n\t\n    var tg _eq_ new TreeGenerator(scene_co_ shadowGenerator)_sm_\t\n\t\n    // Number of lanes\n    var LANE_NUMBER _eq_ 4_sm_\n    var LANE_INTERVAL _eq_ 160_sm_ // distance between lanes\n    var LANES_POSITIONS _eq_ []_sm_\n\n    // Function to create lanes\n    var createLane _eq_ function (id_co_ position) {\n        var lane _eq_ BABYLON.Mesh.CreateBox(_qt_lane_qt_+id_co_ 1_co_ scene)_sm_\n        lane.scaling.y _eq_ 0.1_sm_\n        lane.scaling.x _eq_ 15_sm_ \n        lane.scaling.z _eq_ 1100_sm_\n        lane.position.x _eq_ position_sm_\n        lane.position.z _eq_ lane.scaling.z/2-600_sm_\n\t\tlane.rotation.y _eq_ 180_sm_\n    }_sm_\n\n    var currentLanePosition _eq_ LANE_INTERVAL * -1 * (LANE_NUMBER/2)_sm_\n    for (var i _eq_ 0_sm_ i&lt_sm_LANE_NUMBER_sm_ i++){\n        LANES_POSITIONS[i] _eq_ currentLanePosition_sm_\n        createLane(i_co_ currentLanePosition)_sm_\n        currentLanePosition +_eq_ LANE_INTERVAL_sm_\n    }\n\n\t// MESH IMPORTS\n\tBABYLON.SceneLoader.ImportMesh(_qt__qt__co_ _qt_assets/_qt__co_ _qt_chicken.babylon_qt__co_ scene_co_ function (newMeshes) {\n\t\tchicken _eq_ newMeshes[0]_sm_\n\t\tchicken.position.y _eq_ 1_sm_\n\t\tchicken.position.x _eq_ 180_sm_\n\t\tchicken.position.z _eq_ -280_sm_\n\t\t\n\t\tcamera.target _eq_ chicken_sm_\n\t\t\n\t\tchicken.rotation.y _eq_ -1_sm_\n\t})_sm_\n\t\n\tBABYLON.SceneLoader.ImportMesh(_qt__qt__co_ _qt_assets/_qt__co_ _qt_henhouse.babylon_qt__co_ scene_co_ function (newMeshes) {\n        henhouse _eq_ newMeshes[0]_sm_\n        henhouse.scaling.x _eq_ 4_sm_\n        henhouse.scaling.y _eq_ 4_sm_\n        henhouse.scaling.z _eq_ 4_sm_\n        henhouse.position.z _eq_ 350 _sm_//+ 50_sm_\n\t\thenhouse.position.x _eq_ -200_sm_\n\t\thenhouse.rotation.y +_eq_ -0.5_sm_\n\t})_sm_\n\t\n\tBABYLON.SceneLoader.ImportMesh(_qt__qt__co_ _qt__qt__co_ _qt_assets/tractor.babylon_qt__co_ scene_co_ function (newMeshes) {\n        \n        tractor _eq_ newMeshes[0]_sm_\n        tractor.scaling.x _eq_ 4_sm_\n        tractor.scaling.y _eq_ 4_sm_\n        tractor.scaling.z _eq_ 4_sm_\n\t\ttractor.position.y _eq_ 3.6_sm_\n\t\ttractor.position.x _eq_ -72_sm_\n\t\ttractor.rotation.z _eq_ 0.04_sm_\n\t\ttractor.rotation.y _eq_ -0.6_sm_\n\t\t\n\t})_sm_\t\n\t\t\n\tBABYLON.SceneLoader.ImportMesh(_qt__qt__co_ _qt__qt__co_ _qt_assets/tractor.babylon_qt__co_ scene_co_ function (newMeshes) {\n\t\ttractor2 _eq_ newMeshes[0]_sm_\n        tractor2.scaling.x _eq_ 4_sm_\n        tractor2.scaling.y _eq_ 4_sm_\n        tractor2.scaling.z _eq_ 4_sm_\n\t\ttractor2.position.y _eq_ 3.6_sm_\n\t\ttractor2.position.x _eq_ 95_sm_\n\t\ttractor2.position.z _eq_ -20_sm_\n\t\ttractor2.rotation.z _eq_ 0.04_sm_\n\t\ttractor2.rotation.y _eq_ -3.5_sm_\n\t})_sm_\t\n\t\n\tBABYLON.SceneLoader.ImportMesh(_qt__qt__co_ _qt__qt__co_ _qt_assets/tractor.babylon_qt__co_ scene_co_ function (newMeshes) {\n\t\ttractor3 _eq_ newMeshes[0]_sm_\n        tractor3.scaling.x _eq_ 4_sm_\n        tractor3.scaling.y _eq_ 4_sm_\n        tractor3.scaling.z _eq_ 4_sm_\n\t\ttractor3.position.y _eq_ 3.6_sm_\n\t\ttractor3.position.x _eq_ -15_sm_\n\t\ttractor3.position.z _eq_ -190_sm_\n\t\ttractor3.rotation.z _eq_ 0.04_sm_\n\t\ttractor3.rotation.y _eq_ -0.6_sm_\n\t})_sm_\t\n\t\n\t//tractor animation\n\tscene.registerBeforeRender(function() {   \n\t\ttractor.position.x +_eq_ 0.6_sm_\n\t\tif(tractor.position.x &gt_sm__eq_90){\n\t\t\ttractor.position.x _eq_ -72_sm_\n\t\t}\n\t\ttractor2.position.x -_eq_ 0.6_sm_\n\t\tif(tractor2.position.x &lt_sm__eq_-80){\n\t\t\ttractor2.position.x _eq_ 95_sm_\n\t\t}\n\t\ttractor3.position.x +_eq_ 0.6_sm_\n\t\tif(tractor3.position.x &gt_sm__eq_170){\n\t\t\ttractor3.position.x _eq_ -15_sm_\n\t\t}\n\t})_sm_\n}_sm_\n\n//moving the chicken\nwindow.addEventListener(_qt_keydown_qt__co_ function (event) {\n  switch(event.keyCode) {\n    \n\t/*case 76_dd_\n\t    chicken.position.z +_eq_ 1_sm_\n\t\tchicken.rotation.x +_eq_ 0.5_sm_\n\t\tcamera.position.z +_eq_ 1_sm_\n\tbreak_sm_*/\n\tcase 37_dd_\n\t\t//right\n\t\tchicken.position.x +_eq_ -1_sm_\n\t\tchicken.rotation.y +_eq_ -0.001_sm_\n\t\tcamera.position.x +_eq_ -1_sm_\n\t\t//camera.rotation.y +_eq_ -0.01_sm_\n\t\tbreak_sm_\n    case 39_dd_\n\t\t//left\n\t    chicken.rotation.y +_eq_ 0.001_sm_\n\t\tchicken.position.x +_eq_ 1_sm_\n\t\tcamera.position.x +_eq_ 1_sm_\n\t\t//camera.rotation.y +_eq_ 0.005_sm_\n\t\tbreak_sm_\n    case 40_dd_\n\t\t//backwards\n\t\tchicken.position.z +_eq_ -1_sm_\n\t\tcamera.position.z +_eq_ -1_sm_\n\t\tbreak_sm_\n    case 38_dd_\n\t\t//forward\n\t\tchicken.position.z +_eq_ 1_sm_\n\t\tcamera.position.z +_eq_ 1_sm_\n\t\tbreak_sm_\n\tcase 32_dd_\n\t\t//jumping\n\t\tchicken.position.y +_eq_ 2_sm_\n\t\tcamera.position.z +_eq_ 1_sm_\n\t\tchicken.position.z +_eq_ 1_sm_\n\t\t//pause\n\t\t//yield to.sleep(.500)_sm_\n\t\tsetTimeout(function(){\n\t\t\tchicken.position.y -_eq_ 2_sm_\n\t\t}_co_150)_sm_ \n\t\tbreak_sm_\n  }\n}_co_ true)_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-11-28T09:13:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMy assumption - you didn_t_T pay attention to the async nature of JavaScript. But this is really just an assumption _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tNotice that you are calling a function before each render_co_ that ready the tractors_t_ positions_co_ but you load the before using the (async) ImportMesh function_co_ that only sets them after loading the scene file. So an exception is expected to be thrown_co_ and your scene will not render correctly (or not at all).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTry using the assets manager to define mesh loading tasks_co_ and start your game only after all tasks have ended. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAgain - I have no idea if this is the problem_co_ but give it a try. Can_t_t hurt _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2016-11-28T10:28:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tUse the asset manager to load all assets - only then initiate your scene.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]