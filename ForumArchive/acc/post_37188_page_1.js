[{"Owner":"legallon","Date":"2018-04-23T14:47:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi everyone ! \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve seen that a particleSystem as an emitter attribute_co_ where the particles come from. However I didn_t_t see anything about a _qt_receiver_qt_ attribute_co_  in order not only to emit particles from one point but to really create a stream of particles between 2 points. I know I can kind of simulate that with the direction of the particles_co_ their speed_co_ their lifetime_co_ etc... but the point here is to have a simple way to change emitters and receivers so we can create stream between 2 objects on demand. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs there a way to do so ? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBig thanks ! \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-04-23T18:35:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt sounds like a good idea_co_ Would you like to create a PR for it ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"legallon","Date":"2018-04-24T07:12:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWell I probably would if I knew what it was ^^ !  Can you explain me ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-04-24T13:04:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi L!  Cool idea.  For now_co_ I think you will need to use direction1/2.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCan I ask... do you want particle stream to get wider in the middle?  That would require making the particle stream target.... be a _qt_particle attractor_qt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut think about this_dd_  If you use a box as particle emitter_co_ you can..._lt_br /_gt_\n\t  - Set direction1/2 to something like vector3(0_co_0_co_1)_lt_br /_gt_\n\t  - Set min/max emitbox to vector3(0_co_0_co_0)  [particles start at center of box]\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow_co_ there is a narrow stream of particles departing _qt_front_qt_ (forward vector) of box.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow just use emitter.lookAt(someMeshTarget)_co_ and the particle stream will automatically aim-at the target.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAfter that_co_ you need no more direction1/2 adjusting.  Just aim the emitter at some target [using lookAt()]... and the particle stream will aim that direction.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is a playground demo that G.I. JS  _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/22401-gijs/?do_eq_hovercard_qt_ data-mentionid_eq__qt_22401_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/22401-gijs/_qt_ rel_eq__qt__qt__gt_@Gijs_lt_/a_gt_ used yesterday... to show how to do lerped/animated lookAt().  I added a particle system_co_ and set its emitBox values so the particles start at the tip of the cone.  Then I set its directions to emit in one direction... (+y in this case)_co_ and here we go.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#JEHHJ2%231_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#JEHHJ2#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWorking good_co_ eh?  Why re-aim the particleSystem directions... when you can simply re-aim it_t_s emitter.  The emitter could be invisible_co_ too.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis might work for you_co_ eh?  It_t_s not as cool as a particle _qt_attractor point_qt_... but it is sure easier to code.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBe sure to answer my question about wanting/not... the particle stream to get wider in the middle and narrow as it arrives at target.  That will be more difficult_co_ but maybe still possible.  Party on!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"legallon","Date":"2018-04-24T13:27:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOh yeah this behaviour is  near the one I want to implement _co_   I can easily change the lookAt target to redirect the stream toward any mesh I want  and act like a receive point. Thanks for the idea !  \n_lt_/p_gt_\n\n_lt_p_gt_\n\tOther thing now is to handle some collisions and stop the stream when it reaches the target_co_ and after that it would be just as cool as a real emitter/receiver stream.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo answer your question_co_ my need is to create a 3D interface_co_ acting like a _qt_digital twin_qt_ to represent a real time factory_co_ so i need streams betweens my machines_co_ thus the stream provided in the PG is definitely ok for me\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-04-24T14:26:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCool.  You understand perfectly.  And thx for the info about your streams not needing to be fat in the middle.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere is a STATIC method/function on vector3 objects... called .Distance().\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/api/classes/babylon.vector3#distance_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/api/classes/babylon.vector3#distance_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can get the distance... between target and gun. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tvar distance _eq_ BABYLON.Vector3.Distance(gun.position_co_ target.position)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSometimes_co_ if gun or target has be translated/moved in its LocalSpace_co_ you might wish to use  _lt_em_gt_.getAbsolutePosition()_lt_/em_gt_ in place-of ._lt_em_gt_position_lt_/em_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ now_co_ you have a distance.  Now_co_ you need a fancy converter function.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tvar setParticleSystemMaxLifeTimeAndMaxEmitPowerFromDistanceValue _eq_ function (particleSystem_co_ distanceValue){code stuff}_sm_  WOW_co_ huh?  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNo colliding involved... but this function will need some basic math formulas_co_ and serious trial_t_n_t_error tweaking.  Should be do-able_co_ though.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI wonder if the function will stay in _qt_calibration_qt_ when FPS changes_co_ and when run on machines with different performance traits.  hmm.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t------------------\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere might be other ways.  Particle systems allow a _qt_custom update function_qt_ which COULD test each particle... to see if the particle is too far from emitter_co_ and stop/kill it_co_ if it is.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere are actually THREE easily-customizable functions in a BJS particleSystem.  You can see them here... _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1PQT7P%2313_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#1PQT7P#13_lt_/a_gt_  lines 18-75..\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThey are _qt_installed_qt_ in the particleSystem... in lines 89-91.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe _lt_em_gt_my_updateFunction()_lt_/em_gt_ is the one we would be interested-in.   Lines 53-57... I did some experimenting with distance between particle position... and emitter position.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCurrently_co_ particles are free-flying_co_ but if you de-activate line 53_co_ and activate lines 55-57_co_ you can see that we have limited the flying distance.  I did not KILL the particle if it flies too far_co_ but I keep it from further flying... with lines 55-57.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow you know all the fancy stuff about BabylonJS particleSystems.  You should be able to take over the world_co_ now.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUpdate_dd_  I fixed code typos in 5th and 8th sentences.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"legallon","Date":"2018-04-24T14:36:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThat_t_s a lot of stuff to deal with ! _lt_img alt_eq__qt__dd_o_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_ohmy.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/ohmy@2x.png 2x_qt_ title_eq__qt__dd_o_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks a lot for your time and your precise answers_co_ I will take some time to read this all and to try these functions_co_ I_t_m pretty sure there_t_s everything here to fulfill all my dreams about particles streams !\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(and if not i_t_ll be sure to reply to this topic and to expose you my problems _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_ )\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-04-24T15:49:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/31075-legallon/?do_eq_hovercard_qt_ data-mentionid_eq__qt_31075_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/31075-legallon/_qt_ rel_eq__qt__qt__gt_@legallon_lt_/a_gt__co_ reading back the thread_co_ my answer sounds harsh but what i meant is that it would be a nice feature and I can provide support if you decide to make a PR for it 😊\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI guess you ll be on the right track with _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_ answer.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"legallon","Date":"2018-04-24T15:55:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/20193-sebavan/?do_eq_hovercard_qt_ data-mentionid_eq__qt_20193_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/20193-sebavan/_qt_ rel_eq__qt__qt__gt_@Sebavan_lt_/a_gt_  yeah  his answer may (and surely will) help me implement what I wanted to implement_co_  but sure thing is that this would be  nice to have this feature available !  We can do without_co_ but it would be way simpler with _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_  _lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"legallon","Date":"2018-04-26T08:52:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_ _lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/20193-sebavan/?do_eq_hovercard_qt_ data-mentionid_eq__qt_20193_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/20193-sebavan/_qt_ rel_eq__qt__qt__gt_@Sebavan_lt_/a_gt__lt_/span_gt__lt_/span_gt_  I_t_ve found a simpler and easier way to do it _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou take a basic object_co_ let_t_s take a sphere_co_  you animate it between a point A and a point B_co_ and you add to this sphere a particleSystem with direction1/2(0_co_0_co_0). Then you make your sphere invisible and you_t_re done !  Just play a little with the life time and the speed of the particles to have a perfect effect_co_ but the result is very clean _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tedit _dd_ i did a short example on the pg_co_ not optimized at all but still works  _dd__lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#QR20Y9%239_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#QR20Y9#9_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]