[{"Owner":"timmyelliot","Date":"2015-04-12T20:34:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I was trying to move a sprite using keyboard _t_a_t_ and _t_d_co__t_ using the sprite sample from the playgroud saved here_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#14OAYQ%2312_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#14OAYQ#12_lt_/a_gt__lt_/p_gt__lt_p_gt_(lines 37 - 46_co_ also listed below)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The movement looks very choppy and flickers_co_ is there a better way of doing this so that the sprite appears to move more smoothly?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_div_gt_scene.actionManager _eq_ new BABYLON.ActionManager(scene)_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_scene.actionManager.registerAction(_lt_/div_gt__lt_div_gt_new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnKeyDownTrigger_co_ function (evt) {_lt_/div_gt__lt_div_gt_   _lt_span_gt_ _lt_/span_gt_if (evt.sourceEvent.keyCode _eq__eq_ 65) {_lt_/div_gt__lt_div_gt_       _lt_span_gt_ _lt_/span_gt_player.position.x _eq_ player.position.x + .05_sm__lt_/div_gt__lt_div_gt_        player.invertU _eq_ false_sm__lt_/div_gt__lt_div_gt_   _lt_span_gt_ _lt_/span_gt_}_lt_/div_gt__lt_div_gt_    if(evt.sourceEvent.keyCode _eq__eq_ 68){_lt_/div_gt__lt_div_gt_      player.position.x _eq_ player.position.x + -.05_sm_ _lt_/div_gt__lt_div_gt_      player.invertU _eq_ true_sm__lt_/div_gt__lt_div_gt_   }_lt_/div_gt__lt_div_gt_}))_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2015-04-13T06:31:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_co_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You can use registerBeforeRender (that will be called 60 times per seconds). I used window events keydown and keyup to trigger the movement (cause it_t_s a copy paste from a project of mine)_co_ but it should work too with ActionManager and OnKeyDownTrigger._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#14OAYQ%2313_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#14OAYQ#13_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Good luck _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-04-13T06:34:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It_t_s choppy because it_t_s running off the browser_t_s keyDown events. When you hold down a key_co_ the OS normally fires one key event_co_ then pauses_co_ then fires more at regular intervals_co_ depending on OS settings. It works exactly the same as when you_t_re typing in a text field._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_To get regular movement you need to use both keyDown and keyUp listeners to track whether keys are down (there is no _qt_isKeyPressed_qt_ in JS)._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-04-13T06:40:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Incidentally_co_ a while back I wrote a library to manage things like this._lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/andyhall/game-inputs_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/andyhall/game-inputs_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_With that_co_ you_t_d do something like_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var inputs _eq_ require(_t_game-inputs_t_)()inputs.bind( _t_moveLeft_t__co_  _t_A_t__co_ _t_&lt_sm_left&gt_sm__t_ )inputs.bind( _t_moveRight_t__co_ _t_D_t__co_ _t_&lt_sm_right&gt_sm__t_ )scene.registerBeforeRender(function() {  if (inputs.state.moveLeft) { /* ... */ }  if (inputs.state.moveRight) { /* ... */ }})_lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-04-13T11:33:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Nice lib fenomas!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]