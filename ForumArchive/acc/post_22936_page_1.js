[{"Owner":"OXY11","Date":"2016-06-02T12:28:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI have a SPS with about 60.000 particles_co_ and it works well (30fps) on Chrome_co_ Safari and FF too. (With pick off)_lt_br /_gt_\n\tIf I activate the _qt_pick_qt_ to intercept the collision with the pointer on Safari and FF_co_ the result is more than acceptable (25fps)_co_ but on Chrome drops down to 4/5fps.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) There is a reason to explain this difference in performance on Chrome?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt_\n\t2) I can not explain that even if after activating the _qt_pick_qt__co_ I off it_co_ the fps does not increase more_co_ remain low as if the _qt_pick_qt_ was still active. (There is a way to free the CPU computation once the _qt_picking_qt_ is no longer needed)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-06-02T12:36:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWell_co_ not that easy to tell without a PG to check what or where it happens for 1 and 2\n_lt_/p_gt_\n\n_lt_p_gt_\n\t60K is still a big number... and maybe your solid particles have also each many faces_co_ so the picking algo must test among 60 000 * the number of faces_co_ what may increase quite fast\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"OXY11","Date":"2016-06-02T12:52:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\thi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\ti_t_ve modified an existing PG_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2FPT1A%2374_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2FPT1A#74_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen camera is close to the SPS _qt_pick_qt_ is active and vice versa (camera radius 90 is the point of switch)\n_lt_/p_gt_\n\n_lt_p_gt_\n\talready this PG works much worse on Chrome that of Safari or FF._lt_br /_gt_\n\tand once you have activated the _qt_pick_qt__co_ even if you walk away (pick off) performance remains low\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tin my real work particles are simple planes_co_ in billboard mode\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-06-02T13:07:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tok_co_ those are tetrahedrons_co_ so 4 faces... multiplied by the particle number _dd_ 2000\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWell_co_ as your particles don_t_t need to be updated each frame with setParticles()_co_ I moved it in the rollover callback function. This function is called only when a particle is picked_co_ to the SPS is recomputed only when needed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthis one runs at 60 fps here _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2FPT1A%2376_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2FPT1A#76 _lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthis one also with 6000 particles and a cam radius limit increased to 900 _dd__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2FPT1A%2377_qt_ rel_eq__qt_external nofollow_qt__gt_ http_dd_//www.babylonjs-playground.com/#2FPT1A#77_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"OXY11","Date":"2016-06-02T19:31:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThank you_co__lt_br /_gt_\n\tI try it on my project._lt_br /_gt_\n\tThanks again\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"OXY11","Date":"2016-06-03T07:47:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tunfortunately I can not do it this way because I need to update each frame with _lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-size_dd_14px_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_setParticles()_lt_/span_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tactually I need to _qt_pick_qt_ only 1/10 of the total particles. (the blue ones) here_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2FPT1A%2380_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2FPT1A#80_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tcan I make _qt_pickable_qt_ only a part of the total? so as to avoid unnecessary _qt_pick_qt_ computation of the other?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis could be a solution to improve performance?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tany other solution?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-06-03T08:23:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tActually_co_ if all your particles are to be rotated or updated in any way each frame_co_ you really need to call _lt_em_gt_setParticles()_lt_/em_gt_ in the render loop. The main bottleneck is here as you can see here where there_t_s no pick detection _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2FPT1A%2381_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2FPT1A#81_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t30 FPS in FF for me and 60 FPS in chrome here ... on my linux_co_ chrome is ever twice faster than FF regarding WebGL. Are you sure that your WebGL settings are correct in Chrome ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tbtw_co_ Chrome on my machines can usually deal with up to 8-10K solid particles before the FPS starts to decrease from 60 depending on the logical custom process (aka particle behavior)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe only leads to improve the perfs would be in your case _dd_\n_lt_/p_gt_\n\n_lt_ul_gt__lt_li_gt_\n\t\tnot to use a rollover (what tests the picked result each frame _dd_ expensive)  but rather a mouse click event so the pick process would be triggered only on user clicks\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tuse some SPS optimizers if possible _dd_ not compute the colors each frame (computeParticleColor _eq_ false) and just enable it when a color is to changed_co_ then disable it back\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tuser lesser particles ?\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tor use two mixed SPS _dd_ one for the green particles with no interaction process and all optimizers on and another only for few blue particles\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tthe SPS is a mesh_co_ so if it doesn_t_t move_co_ you can freeze its world matrix and maybe its material also_co_ if any\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"OXY11","Date":"2016-06-08T16:18:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI solved._lt_br /_gt_\n\tI blamed picking form the poor performance_co_ instead was due to another wrong function._lt_br /_gt_\n\tNow 60.000 particles - 45 / 60fps_lt_br /_gt_\n\tThanks again for your help.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-06-08T18:09:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tyou_t_re welcome\n_lt_/p_gt_\n\n_lt_p_gt_\n\tglad to help you and to be confirmed that your huge SPS works well  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]