[{"Owner":"Deltakosh","Date":"2016-04-04T20:04:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tevolution of webgl (current version is 1.0) but support is really early so far.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tKey points we can use from webgl2_dd_ more precise texture format for shadows_co_ completely GPU processed particles_co_ etc...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-04-04T20:24:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHow about Uniform buffers that are in WebGL 2.0?  This would allow many more than 128 than uniform variables mobile platforms have.  With each bone taking up 4_co_ this causes cpu skinning when you have more than 25ish bones.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMight be faster assigning a single buffer_co_ than 30 uniforms too.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-04-05T15:47:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tAgree as well!\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"NasimiAsl","Date":"2016-04-05T16:05:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tback to Post _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBJS  Have ShaderBuilder TOO _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-04-05T19:53:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_123829_qt_ data-ipsquote-contentid_eq__qt_21631_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1459872317_qt_ data-ipsquote-userid_eq__qt_13038_qt_ data-ipsquote-username_eq__qt_NasimiAsl_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t3 hours ago_co_ NasimiAsl said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tback to Post _dd_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tBJS  Have ShaderBuilder TOO _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tohh yea! I forgot that_co_ right out the box you can do powerful shaders and post process effects.  Something you have to have Unity pro to even think about. They even block you from using them even if you wrote it yourself.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"away168","Date":"2016-04-09T05:02:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tBablyon.js_co_ Three.js_co_ and any JS frameworks are open and we are able to code with JavaScript directly and extend them_co_ but not Unity and Unreal.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor example_co_ putting a JavaScript code in your gameplay code in Unity and Unreal where the only feature exists in JavaScript is a pain in the ash-tray._lt_br /_gt_\n\tThings like_co_ why use C# or C++ for simple XHR request that is converted to JS when you can just do it easily with JS?_lt_br /_gt_\n\tYou also easily add a &lt_sm_div&gt_sm_ on your JS application to open up a new web layer (for web news_co_ guide_co_ or anything else)_co_ when in Unity and Unreal you need to setup a whole new object to display web contents.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe other reason would be some people just want to stick with JavaScript environment. Adding libraries through &lt_sm_script&gt_sm__co_ load them right away in the web without getting through the builds from Unity or Unreal. It_t_s like Flash in web all over again_co_ and it_t_s not always easy to embed JS codes from web to Flash_sm_ so are Unity and Unreal.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThese are the things that will never change in the future when you are using Unity or Unreal for web.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWeb itself is simple. You can just add chrome engine here and there (Like Crosswalk and Cocoon) or through chrome browser directly_co_ and you can just put your whole JS environment with (almost) no change of code.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2016-04-09T14:38:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_124332_qt_ data-ipsquote-contentid_eq__qt_21631_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1460178176_qt_ data-ipsquote-userid_eq__qt_6403_qt_ data-ipsquote-username_eq__qt_alectora_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t9 hours ago_co_ alectora said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tbut not Unity and Unreal.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tTo be fair_co_ you can extend Unreal Engine 4.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.unrealengine.com/ue4-on-github_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.unrealengine.com/ue4-on-github_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"meteoritool","Date":"2016-04-09T16:40:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t+1_dd_ When a bug is discovered_co_ it is fixed within a few hours _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_ !_lt_br /_gt_\n\tBABYLON.js can evolve and work the way YOU want ! It is still young but very welcome to evolution !\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Entropy_86","Date":"2018-04-30T11:52:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi all\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust wanted to drop in to add few words. Babylonjs sounds good_co_ but \n_lt_/p_gt_\n\n_lt_p_gt_\n\tthe tools Unity provide outmatch babylonjs. Babylonjs looks to be in babyshoes and if you are trying to create a competitive game \n_lt_/p_gt_\n\n_lt_p_gt_\n\tfrom scratch... I_t_m afraid babylonjs falls in short. I looked at the documentation and examples. Features like machine learning\n_lt_/p_gt_\n\n_lt_p_gt_\n\tadvanced multi threading framework(no webgl support currently at Unity and they are working on it) are missing. But yea you could use babylon js to create anything. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tLook at the Unity_t_s  c# jobs system and the 120 000 skinned soldiers they are bombarding with magic and tell if babylon js can achieve similar performance.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAdvanced camera tools like intents Unity provide? Scriptable rendering pipelines?  How about vr tools? Downsides of Unity? I think that it_t_s that you have to know what you are doing since not all the goodies are supported on all platforms.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBuild size was mentioned too. Webgl is not that greatly supported on Unity_co_ but people who go to Unity usually don_t_t care about that. Not when you need to create high performance desktop vr game of whatever you are developing. Build size can be optimized on Unity and content streamed with the help of asset bundles. You could think of webgl as nice addittion for game development since how many actually plays webgl games purchased on steam?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think the question more likely is is there are business for webgl games can webgl run it?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAll the Best\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-04-30T13:51:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHiya E86_co_ welcome to the forum.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think you are talking about 2 different subjects... BabylonJS and webGL. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_On the subject of BJS lib_dd__lt_/strong_gt_  Believe it or not_co_ BabylonJS is the fastest webGL framework to be found... because its core programmers are performance junkies.  They LIVE to shave off cycles and remove logjams.  And_co_ they try to farm-out as much as possible... to the GPU_co_ leaving the CPU free for us game/art proggers.  BJS is ahead of the game_co_ but not by much.  Other webGL libraries are right on our tail_co_ perf-wise.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_On the subject of webGL/browsers/JS_dd_  _lt_/strong_gt_BJS is handcuffed by the limitations of the browsers/dom_co_ by sandboxes_co_ by threading models/JS_co_ etc.  ALL the webGL frameworks suffer from these same handcuffs.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCan webGL browsers do _lt_a href_eq__qt_http_dd_//race.assassinscreedpirates.com/_qt_ rel_eq__qt_external nofollow_qt__gt_games_lt_/a_gt_?  You bet.  Can it get insane perf?  You bet_co_ if you _lt_a href_eq__qt_https_dd_//www.babylonjs.com/demos/dancers/_qt_ rel_eq__qt_external nofollow_qt__gt_follow the (SIMD) rules_lt_/a_gt_.  Can _lt_a href_eq__qt_https_dd_//www.babylonjs.com/_qt_ rel_eq__qt_external nofollow_qt__gt_webGL scenes_lt_/a_gt_ be asked/expected to perform similar to machine language/low-level code?  Not a chance.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUnity games are different... you can_t_t run them in a standard browser until they are converted to webGL_co_ right?  (I don_t_t know much about Unity).  A user named _lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/24012-mackeyk24/?do_eq_hovercard_qt_ data-mentionid_eq__qt_24012_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/24012-mackeyk24/_qt_ rel_eq__qt__qt__gt_@MackeyK24_lt_/a_gt_ is spearheading a Unity-to-BJS project_co_ and he is dedicated and motivated beyond belief.  Perhaps he will visit and provide his insights._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Ok_co_ that_t_s my take on it.  Others will comment soon_co_ I_t_m sure.  Be well_co_ nice to have you here_co_ and you have asked good questions_co_ but you have your subjects blurred together a bit. _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ (that_t_s common and understood/done by all of us)_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-04-30T15:12:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou cannot compare Unity and Babylon.js as _lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_ said._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_You can compare Unity export for WebGL and Babylon.js though. And with the incredible work done by _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/24012-mackeyk24/?do_eq_hovercard_qt_ data-mentionid_eq__qt_24012_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/24012-mackeyk24/_qt_ rel_eq__qt__qt__gt_@MackeyK24_lt_/a_gt_ there is no problem to use Unity env to work on your game while exporting to Babylon.js for the final rendering environment_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"HoratioHuffnagel","Date":"2018-05-04T03:54:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI have to ask though - I work in a studio that uses both WebGL and Unity - (Unity only for native at the moment) and if you have been watching the recent Unity press releases on _t_unity for small devices_t_ - you_t_ll see a massive shift in the way their engine works. Making it_t_s prospects for high performance WebGL export a reality. So once this is released_co_ what value do engines like Babylon offer?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUnity seems to be promising performance improvements_co_ tiny export sizes and a studio quality editor. So now you have a viable pipeline in Unity_co_ with AMAZING tooling_co_ and improved performance... the reason to use standalone 3D engines becomes harder to justify from a commercial point of view.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo me - this is the biggest hurdle for open source engines - how to compete with tooling and asset pipelines like those offered by Unity. Once the performance issue becomes less of an issue_co_ and bundle size is no longer an issue - the evaluation now becomes_co_ performance vs tooling. And most studios_co_ unless they are really pushing the platform_co_ will probably pick tooling. And if you are indie - time is valuable - so again - tooling would likely win out.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"inteja","Date":"2018-05-04T04:39:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_ve used Unity for a few projects in the past but_co_ at the time_co_ export to WebGL was buggy and file sizes were monstrous (unjustifiable for web deployment - users wouldn_t_t have the patience to wait). Sure_co_ stability has and will continue to improve but I doubt they_t_ll be able to make a significant dent in the actual engine file size or memory requirements for WebGL deployment_co_ at least not until web assembly is available everywhere.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHaving said that_co_ I think there_t_s plenty of room in the market for the likes of Unity_co_ Unreal_co_ Babylon_co_ Three etc_co_ just like Blender can thrive in the face of heavyweights like 3dsmax and Maya (I switched from 3dsmax to Blender myself). Diversity is strength. I_t_ve been around long enough to know that defacto commercial monopolies and proprietary technology never last. It_t_s always good to have viable alternatives that leverage open standards.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat I value most about Babylon is the ability to capitalise on the web stack of standard web technologies I_t_m most familiar with e.g. javascript_co_ typescript_co_ html5_co_ nodejs etc. Tight integration with standard web technologies and rapid prototyping_co_ testing and deployment make a big difference to me. Yes this can be done with Unity to a certain extent_co_ but it_t_s many steps removed and the process is obfuscated by the compiler.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCall me crazy but another thing I like is truly writing once and deploying everywhere. Unity promises this_co_ but as a content author you still need to make allowances and compromises and test_co_ test and retest for every target platform. I know that if I develop with Babylon I don_t_t have to worry so much about platform capabilities because WebGL (version 1 at least) is almost universally supported. It may seem like we_t_re targeting _qt_the lowest common denominator_qt_ but sweet baby cheeses have you seen what can be accomplished with WebGL 1 and 2 these days!? I_t_d argue that if you_t_re aiming to target web deployment then all those extra bells and whistles that Unity and Unreal offer don_t_t matter so much. I like having clearly defined constraints as it forces me to come up with novel solutions.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway_co_ that_t_s just a few random thoughts. At the end of the day you_t_ve got to choose what works best for you.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-05-04T17:30:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tEven if they are fast_co_ small or whatever_co_ they will not generate a 3d engine that you can use inside other JS code.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThey will dump a complete ready to use game that you can host on a page. Keep in mind that it will generate webasm code that you can poorly (if possible) interact with from JS.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-05-04T21:18:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_ol_gt_\n\t_lt_li_gt_\n\t\tNot everything is a game.  While BJS is _qt_tuned_qt_ for a game_co_ there are many non-game reasons for a native webGL framework.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tI saw mobile gaming revenue surpassed other streams last year (cannot remember where).  Current priorities for commercial games is probably going to tie use of Unity Light to how it works for mobile_co_ not dev tools.\n\t_lt_/li_gt_\n_lt_/ol_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]