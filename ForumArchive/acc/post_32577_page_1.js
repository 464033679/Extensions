[{"Owner":"MackeyK24","Date":"2017-08-26T18:22:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey guys...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEspecially you _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ ... I need your help... I have created a Built-In Character Controller (like the one in unity) that basically controls character movement with full jumping_co_ falling and grounding support. Also allows complete user input control with one toggle _t_player.enableInput _eq_ true_t_... I am have trouble with the last line...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tif the _t_Auto-Turning_t_ feature is enabled I want the character to always face the direction of the horizontal and vertical input... Kinda like Unreal Engine Third Person Camera usage... I am using the _t_lookAt_t_ function to do that now but it _t_Snaps To_t_ that direction... so if you went from left to right it would slap to face the other direction instead of rotating _t_a it more slower_t_ to the that direction... I don_t_t see a lookAt speed so I don_t_t know how to handle that... I am still a newbie so I don_t_t know all the _t_Translation/Rotation_t_ code I could manually using to achieve the same thing... Anyways... any help on fixing the lookout issue... Again ... would be awesome...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is my current Character Controller code for your reference_co_ have a look... this is how you will use components in the BabylonJS Toolkit _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_u_gt__lt_strong_gt_UPDATE_lt_/strong_gt__lt_/u_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNew Character Controller Code_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_/* Babylon Character Movement Controller Component */\n/* &lt_sm_reference path_eq__qt_{*path*}/Assets/Babylon/Library/babylon.d.ts_qt_ /&gt_sm_ */\n\nmodule BABYLON {\n    export class CharacterController extends BABYLON.MeshComponent {\n        public gravity_dd_number _eq_ 0.0_sm_\n        public moveSpeed_dd_number _eq_ 6.0_sm_\n        public jumpForce_dd_number _eq_ 8.0_sm_\n        public dropForce_dd_number _eq_ 20.0_sm_\n        public enableInput_dd_boolean _eq_ false_sm_\n        public autoTurning_dd_boolean _eq_ false_sm_\n        public rotateSpeed_dd_number _eq_ 0.25_sm_\n        public applyGrounding_dd_boolean _eq_ true_sm_\n        public keyboardJump_dd_number _eq_ BABYLON.UserInputKey.SpaceBar_sm_\n        public buttonJump_dd_number _eq_ BABYLON.Xbox360Button.A_sm_\n        public isJumping()_dd_boolean { return this._jumping_sm_ }\n        public isFalling()_dd_boolean { return this._falling_sm_ }\n        public isGrounded()_dd_boolean { return this._grounded_sm_ }\n        public getVelocity()_dd_BABYLON.Vector3 { return this.manager.getLinearVelocity(this.mesh)_sm_ }\n        public getAngular()_dd_BABYLON.Vector3 { return this.manager.getAngularVelocity(this.mesh)_sm_ }\n        public onUpdateInput_dd_(velocity_dd_BABYLON.Vector3_co_ horizontal_dd_number_co_ vertical_dd_number_co_ mousex_dd_number_co_ mousey_dd_number_co_ jumped_dd_boolean)_eq_&gt_sm_void _eq_ null_sm_\n\n        private _jumping_dd_boolean _eq_ false_sm_\n        private _falling_dd_boolean _eq_ false_sm_\n        private _grounded_dd_boolean _eq_ true_sm_\n        private _turnIdentity_dd_boolean _eq_ false_sm_\n        private _slerpIndentity_dd_BABYLON.Quaternion _eq_ null_sm_\n        private _lookPosition_dd_BABYLON.Vector3 _eq_ BABYLON.Vector3.Zero()_sm_\n        private _inputVelocity_dd_BABYLON.Vector3 _eq_ BABYLON.Vector3.Zero()_sm_\n        private _movementVelocity_dd_BABYLON.Vector3 _eq_ BABYLON.Vector3.Zero()_sm_\n        private _contactThreashold_dd_number _eq_ 0.5_sm_\n        public constructor(owner_dd_ BABYLON.AbstractMesh_co_ scene_dd_ BABYLON.Scene_co_ tick_dd_ boolean _eq_ true_co_ propertyBag_dd_ any _eq_ {}) {\n            super(owner_co_ scene_co_ tick_co_ propertyBag)_sm_\n            this.gravity _eq_ this.scene.gravity.y_sm_\n            this.moveSpeed _eq_ this.getProperty(_qt_moveSpeed_qt__co_ 6.0)_sm_\n            this.jumpForce _eq_ this.getProperty(_qt_jumpForce_qt__co_ 8.0)_sm_\n            this.dropForce _eq_ this.getProperty(_qt_dropForce_qt__co_ 20.0)_sm_\n            this.applyGrounding _eq_ this.getProperty(_qt_grounding_qt__co_ true)_sm_\n            this.enableInput _eq_ this.getProperty(_qt_enableInput_qt__co_ false)_sm_\n            this.autoTurning _eq_ this.getProperty(_qt_autoTurning_qt__co_ false)_sm_\n            this.rotateSpeed _eq_ this.getProperty(_qt_rotateSpeed_qt__co_ 0.25)_sm_\n            this._turnIdentity _eq_ false_sm_\n            this._slerpIndentity _eq_ BABYLON.Quaternion.Identity()_sm_\n            this._movementVelocity.y _eq_ this.gravity_sm_\n        }\n\n        public move(velocity_dd_BABYLON.Vector3_co_ angular_dd_BABYLON.Vector3 _eq_ null_co_ jump_dd_boolean _eq_ false)_dd_void {\n            this._movementVelocity.x _eq_ velocity.x * this.moveSpeed_sm_\n            this._movementVelocity.z _eq_ velocity.z * this.moveSpeed_sm_\n            if (jump _eq__eq__eq_ true &amp_sm_&amp_sm_ this._grounded _eq__eq__eq_ true &amp_sm_&amp_sm_ this.jumpForce &gt_sm_ 0.0) {\n                this._jumping _eq_ true_sm_\n                this._movementVelocity.y _eq_ this.jumpForce_sm_\n                this.updateGroundingState()_sm_\n            }\n            // Apply scene gravity with drop force delta\n            if (this._movementVelocity.y &gt_sm_ this.gravity) {\n                this._movementVelocity.y -_eq_ (this.dropForce * this.manager.deltaTime)_sm_\n                if (this._movementVelocity.y &lt_sm_ this.gravity) {\n                    this._movementVelocity.y _eq_ this.gravity_sm_\n                }\n            }\n            // Update current movement velocity with physics\n            this.manager.moveWithPhysics(this.mesh_co_ this._movementVelocity_co_ angular)_sm_\n        }\n\n        protected start()_dd_void {\n            this._jumping _eq_ false_sm_\n            this._falling _eq_ false_sm_\n            this._grounded _eq_ true_sm_\n            this.updateGroundingState()_sm_\n            this.onCollisionEvent((collider_dd_BABYLON.AbstractMesh_co_ tag_dd_string) _eq_&gt_sm_ {\n                if (this.manager.checkCollision(this.mesh_co_ collider_co_ BABYLON.CollisionContact.Bottom_co_ this._contactThreashold) _eq__eq__eq_ true) {\n                    this._jumping _eq_ false_sm_\n                    this._movementVelocity.y _eq_ this.gravity_sm_\n                    this.updateGroundingState()_sm_\n                }\n            })_sm_\n        }\n\n        protected fixed() _dd_void {\n            var falling_dd_boolean _eq_ false_sm_\n            var velocity_dd_BABYLON.Vector3 _eq_ this.getVelocity()_sm_\n            if (velocity !_eq_ null &amp_sm_&amp_sm_ velocity.y &lt_sm_ -0.1) {\n                falling _eq_ true_sm_\n            }\n            this._falling _eq_ falling_sm_\n            this.updateGroundingState()_sm_\n            // Update user input velocity\n            if (this.enableInput _eq__eq__eq_ true) {\n                var horizontal_dd_number _eq_ this.manager.getUserInput(BABYLON.UserInputAxis.Horizontal)_sm_\n                var vertical_dd_number _eq_ this.manager.getUserInput(BABYLON.UserInputAxis.Vertical)_sm_\n                var mousex_dd_number _eq_ this.manager.getUserInput(BABYLON.UserInputAxis.MouseX)_sm_\n                var mousey_dd_number _eq_ this.manager.getUserInput(BABYLON.UserInputAxis.MouseY)_sm_\n                var jumped_dd_boolean _eq_ false_sm_\n                // Apply movement and jumping input\n                if (this._grounded _eq__eq__eq_ true) {\n                    this._inputVelocity.x _eq_ horizontal_sm_\n                    this._inputVelocity.z _eq_ vertical_sm_\n                    jumped _eq_ (this.manager.getKeyInput(this.keyboardJump) || this.manager.getButtonInput(this.buttonJump))_sm_\n                }\n                // Update custom movement user input\n                if (this.onUpdateInput !_eq_ null) {\n                    this.onUpdateInput(this._inputVelocity_co_ horizontal_co_ vertical_co_ mousex_co_ mousey_co_ jumped)_sm_\n                }\n                // Update avatar position and rotation\n                this.move(this._inputVelocity_co_ null_co_ jumped)_sm_\n                if (this.autoTurning _eq__eq__eq_ true &amp_sm_&amp_sm_ (horizontal !_eq__eq_ 0.0 || vertical !_eq__eq_ 0.0)) {\n                    if (this._turnIdentity _eq__eq__eq_ false) {\n                        this.mesh.rotationQuaternion _eq_ BABYLON.Quaternion.Identity()_sm_\n                        this._turnIdentity _eq_ true_sm_\n                    }\n                    // Rotate actor to face horizontal and vertical movement direction\n                    this._lookPosition.x _eq_ -horizontal_sm_\n                    this._lookPosition.z _eq_ -vertical_sm_\n                    var position _eq_ this.mesh.position.add(this._lookPosition)_sm_\n                    this.manager.lookAtPosition(this.mesh_co_ position_co_ this._slerpIndentity_co_ this.rotateSpeed)_sm_\n                }\n            }\n        }\n\n        private updateGroundingState()_dd_void {\n            this._grounded _eq_ (this.applyGrounding _eq__eq__eq_ false || (this._jumping _eq__eq__eq_ false &amp_sm_&amp_sm_ this._falling _eq__eq__eq_ false))_sm_\n        }\n    }\n}\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MackeyK24","Date":"2017-08-26T18:29:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tTo be clear_co_ this is the line I need to fix_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_this.mesh.lookAt(this.mesh.position.add(new BABYLON.Vector3(-horizontal_co_ 0.0_co_ -vertical)))_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t... It snaps to direction instead of a more natural rotation... Maybe I shouldn_t_t be using that for this use case... I don_t_t know_co_ I_t_m still new _lt_img alt_eq__qt__dd_(_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ title_eq__qt__dd_(_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Virax","Date":"2017-08-26T19:10:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe Vector3 class has a Lerp method !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou should try it! It should smooth the transition between the position you_t_re adding \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/classes/2.5/vector3#static-lerp-start-end-amount-rarr-vector3-classes-2-5-vector3-_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/classes/2.5/vector3#static-lerp-start-end-amount-rarr-vector3-classes-2-5-vector3-_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut do you have a playground example to be more clear ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MackeyK24","Date":"2017-08-26T20:39:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_186799_qt_ data-ipsquote-contentid_eq__qt_32577_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1503774653_qt_ data-ipsquote-userid_eq__qt_23725_qt_ data-ipsquote-username_eq__qt_Virax_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ Virax said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tHello_co_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThe Vector3 class has a Lerp method !\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tYou should try it! It should smooth the transition between the position you_t_re adding \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/classes/2.5/vector3#static-lerp-start-end-amount-rarr-vector3-classes-2-5-vector3-_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/classes/2.5/vector3#static-lerp-start-end-amount-rarr-vector3-classes-2-5-vector3-_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tBut do you have a playground example to be more clear ?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tCant do playground ... its a toolkit typescript component... but the lookAt like is where I_t_m talking about....\n_lt_/p_gt_\n\n_lt_p_gt_\n\tif you were going to rewrite that _t_lookAt_t_ line with a Leap ... How would you do it... Can you pleas write re-write that _t_lookAt_t_ line from above to do your leaping to replace look at _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Mythros","Date":"2017-08-26T22:25:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYea_co_ I_t_d like to see this in JS form with proper terrain slope sliding. I tried to get an answer in my other thread on this_co_ &amp_sm_ the people in there are great_co_ they_t_re WONDERFUL people_co_ but it didn_t_t pan out too well. Players shouldn_t_t be able to climb steep &gt_sm_ 30 degree inclines. Nor_t_ should they be able to jump the steep incline. And a camera that can slide across the ground and zoom in on the player smoothly when looking up. If you want a Unity Character Controller_co_ this is the way to go about one.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2017-08-26T23:27:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#UMQ4UR%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#UMQ4UR#2_lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MackeyK24","Date":"2017-08-27T06:15:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_186814_qt_ data-ipsquote-contentid_eq__qt_32577_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1503790069_qt_ data-ipsquote-userid_eq__qt_4289_qt_ data-ipsquote-username_eq__qt_adam_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t6 hours ago_co_ adam said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#UMQ4UR%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#UMQ4UR#2_lt_/a_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tYo _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4289-adam/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4289_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4289-adam/_qt_ rel_eq__qt__qt__gt_@adam_lt_/a_gt_  Thanks man... thats perfect... But something I just didn_t_t get... I saw the Lerp examples but what I don_t_t understand is how the box.lookAt(sphere.position) get influenced by the slerping_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_    var tempQuat _eq_ BABYLON.Quaternion.Identity()_sm_\n    var slerpAmount _eq_ .2_sm_\n\n    box.rotationQuaternion _eq_ BABYLON.Quaternion.Identity()_sm_\n\n    scene.registerBeforeRender(function(){\n\n        tempQuat.copyFrom(box.rotationQuaternion)_sm_\n        box.lookAt(sphere.position)_sm_\n        BABYLON.Quaternion.SlerpToRef(tempQuat_co_ box.rotationQuaternion_co_ slerpAmount_co_ box.rotationQuaternion)\n\n    })_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt looks the SLERP code is some kinda of _t_WRAPPER_t_ around the lookAt that ALWAYS applies _t_Slerped Rotation_t_ factor to handle the change in rotation from the tempQuat to what it is AFTER the lookAt has changed rotation and kinda of OVERIDE what the lookAt did with an _t_EASED_t_ rotation...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo we really get the Current rotation and store in tempQuat... Then do the LookAt to update the box rotation  (that does not change from before) but after that in the the same frame (so you never immediate see the initial lookAt snapping position) we adjust that rotation using our tempQuat and snapped to LookAt rotations and ease between them... I think... Thats what I was not to sure about... being a newbie at all the actual 3D gaming code and translations and rotations and matrix stuff.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for that snippet ... so I can try to understand why it works and how works _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MackeyK24","Date":"2017-08-27T07:16:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYo _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4289-adam/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4289_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4289-adam/_qt_ rel_eq__qt__qt__gt_@adam_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat is working perfectly... So much so I created a helper function on my unity like scene manager API to handle look at position wit option rotation slerping_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_/** Rotates owner to look at the vector position and optionally apply slerping to the rotation\n    * \n    *  To use slerping the owner mesh rotation should be set to identity before loop\n    *  Example_dd_ owner.rotationQuaternion _eq_ BABYLON.Quaternion.Identity()_sm_\n    * \n    *  The slerpIdentity is a temp reference holder for the current owner rotation\n    *  Example_dd_ var slerpIdentity _eq_ BABYLON.Quaternion.Identity()_sm_\n    * \n    *  The slerpAmount control the amouts of slerping applied to rotation. default 0.25\n    */\npublic lookAtPosition(owner_dd_ BABYLON.AbstractMesh_co_ position_dd_BABYLON.Vector3_co_ slerpIdentity_dd_BABYLON.Quaternion _eq_ null_co_ slerpAmount_dd_number _eq_ 0.25)_dd_BABYLON.AbstractMesh {\n    if (slerpIdentity !_eq_ null &amp_sm_&amp_sm_ slerpAmount &gt_sm_ 0.0) slerpIdentity.copyFrom(owner.rotationQuaternion)_sm_\n    var result_dd_BABYLON.AbstractMesh _eq_ owner.lookAt(position)_sm_\n    if (slerpIdentity !_eq_ null &amp_sm_&amp_sm_ slerpAmount &gt_sm_ 0.0) BABYLON.Quaternion.SlerpToRef(slerpIdentity_co_ owner.rotationQuaternion_co_ slerpAmount_co_ owner.rotationQuaternion)\n    return result_sm_\n}\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen in my character controller update loop_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// Rotate actor to face horizontal and vertical movement direction\nthis._lookPosition.x _eq_ -horizontal_sm_\nthis._lookPosition.z _eq_ -vertical_sm_\nvar position _eq_ this.mesh.position.add(this._lookPosition)_sm_\nthis.manager.lookAtPosition(this.mesh_co_ position_co_ this._slerpIndentity_co_ this.rotateSpeed)_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThanks again bro... very much _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MackeyK24","Date":"2017-08-27T07:30:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_186811_qt_ data-ipsquote-contentid_eq__qt_32577_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1503786317_qt_ data-ipsquote-userid_eq__qt_11513_qt_ data-ipsquote-username_eq__qt_Mythros_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t8 hours ago_co_ Mythros said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tYea_co_ I_t_d like to see this in JS form with proper terrain slope sliding. I tried to get an answer in my other thread on this_co_ &amp_sm_ the people in there are great_co_ they_t_re WONDERFUL people_co_ but it didn_t_t pan out too well. Players shouldn_t_t be able to climb steep &gt_sm_ 30 degree inclines. Nor_t_ should they be able to jump the steep incline. And a camera that can slide across the ground and zoom in on the player smoothly when looking up. If you want a Unity Character Controller_co_ this is the way to go about one.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tSup _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/11513-mythros/?do_eq_hovercard_qt_ data-mentionid_eq__qt_11513_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/11513-mythros/_qt_ rel_eq__qt__qt__gt_@Mythros_lt_/a_gt_ ... Thanks for the response  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI would imagine this would deal with more the Physics Imposter setup ... Plus you could always (in the toolkit scene component life-cycle) compensate the character position and velocity  (and even utilize the underlying physics imposter to calculate at what angle you are colliding with)... I do this in onCollisionEvent to check whether after a jump or any collision really_co_ if the source collision _t_normal axis_t_ is pointing with a certain _t_threshold_t_...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo you could augment the physics and help is out to provide this _t_Sloping_t_ issues....  \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBTW... Using my toolkit for unity... If I create a terrain that has heavy sloped hills and I move around with collision... I can just run up... it slides back down just fine... now I_t_m not sure exactly what property in Babylon and or the physics engine controls that... But seems to work just fine on the Terrain Meshes that I create in the toolkit and use as a ground mesh in Babylon_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var canJump _eq_ false_sm_\n\n    var contactNormal _eq_ new CANNON.Vec3()_sm_ // Normal in the contact_co_ pointing *out* of whatever the player touched\n    var upAxis _eq_ new CANNON.Vec3(0_co_1_co_0)_sm_\n    cannonBody.addEventListener(_qt_collide_qt__co_function(e){\n        var contact _eq_ e.contact_sm_\n\n        // contact.bi and contact.bj are the colliding bodies_co_ and contact.ni is the collision normal.\n        // We do not yet know which one is which! Let_t_s check.\n        if(contact.bi.id _eq__eq_ cannonBody.id)  // bi is the player body_co_ flip the contact normal\n            contact.ni.negate(contactNormal)_sm_\n        else\n            contactNormal.copy(contact.ni)_sm_ // bi is something else. Keep the normal as it is\n\n        // If contactNormal.dot(upAxis) is between 0 and 1_co_ we know that the contact normal is somewhat in the up direction.\n        if(contactNormal.dot(upAxis) &gt_sm_ 0.5) // Use a _qt_good_qt_ threshold value between 0 and 1 here!\n            canJump _eq_ true_sm_\n    })_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf that helps any _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MackeyK24","Date":"2017-08-27T20:30:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_186811_qt_ data-ipsquote-contentid_eq__qt_32577_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1503786317_qt_ data-ipsquote-userid_eq__qt_11513_qt_ data-ipsquote-username_eq__qt_Mythros_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t22 hours ago_co_ Mythros said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tIf you want a Unity Character Controller_co_ this is the way to go about one.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tBTW... My toolkit always uses the phrase _t_Unity-Like_t_ ... So I am actually implementing from scratch using the BabylonJS API every feature in the the toolkit...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthere is never a UNITY content or script that gets exported... Just the Toolkit Script Components that use WHATEVER logic you put and the built in components that the toolkit internally supports...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust to clarify the phrase _t_Unity-Like_t_ _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]