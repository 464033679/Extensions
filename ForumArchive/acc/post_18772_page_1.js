[{"Owner":"G&#039;kar","Date":"2015-11-21T00:31:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I was checking around the latest code of icosphere and find out that the normal are corrupted when radiusX/radiusY/radiusZ are used._lt_br_gt_More over the BABYLON.MeshBuilder.CreateSphere seems to have the same issue if diameterX/Y/Z are used._lt_br_gt_Both spheres use the normal define as line between vertex position to sphere center line._lt_br_gt_Fine_co_ but if the sphere is scaled to a flat ellipsoid with radiusY or diameterY for instance_co_ then the (center --&gt_sm_ ellipse point) is not the normal anymore._lt_br_gt__lt_br_gt_I setup a basic playground to illustrate the issue (added blue line matching normal for several vertices)_dd__lt_br_gt_flat sphere_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#24XHJP%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#24XHJP#2_lt_/a_gt__lt_br_gt_flat icosphere_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#24XHJP%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#24XHJP#3_lt_/a_gt__lt_br_gt__lt_br_gt_This can be fix _qt_easily_qt_ in BJS code_dd__lt_/p_gt__lt_p_gt_I have a tentative fix commit in my fork_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/regis-c/Babylon.js/commit/f7d6b0159e8498943a689744cd5d019692e70191_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/regis-c/Babylon.js/commit/f7d6b0159e8498943a689744cd5d019692e70191_lt_/a_gt__lt_/p_gt__lt_p_gt_(normals and shading seems much better when I run the playground code with the fix in my local setup)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Let me know if you think it is done in the right way (I didn_t_t check much so side effect still possible)._lt_/p_gt__lt_p_gt_Then I can send a PR if OK._lt_br_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-11-21T07:14:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#24XHJP%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#24XHJP#4_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I used our little showNormals() function instead._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You_t_re right_co_ the normals weren_t_t recomputed rightly when changing X_co_Y_co_ or Z diameter values._lt_/p_gt__lt_p_gt_Could you check your fix with showNormals() ? you_t_ll see at a glance if it_t_s OK._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"G&#039;kar","Date":"2015-11-21T23:42:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks for the showNormals() code _dd_ gives nice visual check for normal._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I play around with sphere_co_ icosphere (flat_eq_true)_co_ icosphere (flat_eq_false)_co_ changing the radius scaling to see what happen._lt_/p_gt__lt_p_gt_(using my local BJS recompiled with the fix _dd_ _lt_a href_eq__qt_https_dd_//github.com/regis-c/Babylon.js/commit/f7d6b0159e8498943a689744cd5d019692e70191_qt_ title_eq__qt_External link_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/r...d5d019692e70191_lt_/a_gt_)_lt_/p_gt__lt_p_gt_The fix seems ok for me. The normals looks as I expect now._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]