[{"Owner":"Hagop","Date":"2016-01-05T08:02:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi all_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I want to create a _lt_strong_gt_box (or a mesh) _lt_/strong_gt_which should be open from top side. I will use it to drop items into it  using a physics engine such as cannon.js_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For example the physics applied to the box will be_lt_/p_gt__lt_p_gt__lt_strong_gt_box _lt_/strong_gt_.setPhysicsState(BABYLON.PhysicsEngine.BoxImpostor_co_ {mass_dd_0_co_ friction_dd_0.5_co_ restitution_dd_ 0.4})_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The items dropped into the box will use physics_lt_/p_gt__lt_p_gt__lt_strong_gt_items_lt_/strong_gt_.setPhysicsState(BABYLON.PhysicsEngine.BoxImpostor_co_ { mass_dd_ 1  })_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-01-05T08:09:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_You could create the box using CSG - put a smaller box in a bigger box and subtract._lt_/p_gt__lt_p_gt_About physics - box impostor won_t_t work_co_ as it won_t_t know of the open end. You could use a height map impostor (if the box_t_s width _eq__eq_ depth) or the mesh impostor _co_ if you want to deal with spheres only (inside the open box)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Hagop","Date":"2016-01-05T08:26:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thank you RannanW for the prompt answer._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Basically I have a shopping cart and I want to drop products in the shopping cart. Because of the shopping carts_t_ complexity_co_ it takes _lt_strong_gt_ages _lt_/strong_gt_for the physics engine to calculate the Mesh impostor. So I thought to place a _lt_strong_gt_rectangular _lt_/strong_gt_box (open from top side) within the shopping cart and make it invisible._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-01-05T09:07:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Just build _qt_walls_qt_ (can be invisible) and use the box impostor on them. This will work wonderfully. Same thing is done in the physcis example on babylonjs.com - _lt_a href_eq__qt_http_dd_//www.babylonjs.com/Demos/Physics/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/Demos/Physics/_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Hagop","Date":"2016-01-05T09:42:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I thought so. By walls_co_ i guess you mean planes right?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-01-05T10:10:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Box impostors would be much better. In Babylon they can be planes_co_ but use the mesh impostors_co_ as they are double sides and limited in size. the plane impostor (at least in cannon.js) is a one-sided unlimited plane (to simulate an endless floor)._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Hagop","Date":"2016-01-05T12:44:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_RaananW_co_ one more question._lt_/p_gt__lt_p_gt_After applying setPhysicsState to my shopping cart (or the _qt_walls_qt_ in the shopping cart)_co_ the shopping cart does not move with the camera._lt_/p_gt__lt_p_gt_globalCart.setPhysicsState(BABYLON.PhysicsEngine.PlaneImpostor_co_ {mass_dd_0_co_ friction_dd_0.5_co_ restitution_dd_ 0.4})_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have something like this_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_em_gt__lt_strong_gt_scene.registerBeforeRender(function () {_lt_br_gt_                   _lt_br_gt_                    currPosition _eq_ scene.activeCamera.position.clone()_sm__lt_br_gt_                    globalCart.position.z _eq_ currPosition.z + 220_sm__lt_/strong_gt__lt_/em_gt__lt_/p_gt__lt_p_gt__lt_em_gt__lt_strong_gt_})_sm__lt_/strong_gt__lt_/em_gt__lt_br_gt_                 _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-01-05T17:45:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_After changing the position_co_ update the mesh_t_s physics state using globalCart.updatePhysicsBodyPosition() _lt_/p_gt__lt_p_gt_This will update the ... Physics body position _dd_-)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]