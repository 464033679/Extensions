[{"Owner":"Rolento","Date":"2017-01-22T13:46:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi All\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am experimenting with displacement mapping and have had a degree of success_co_ but have encountered some issues that the community might be able to help with.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLooking at the &lt_sm_shape&gt_sm_.applyDisplacementMap() function it can be seen that it does not support the ability to control how a displacement map texture is applied to the shape.  Therefore_co_ if you create a complex 3D model that requires greater control over how the displacement map is applied (i.e. tiled) to it then unfortunately you will encounter problems.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI started out by creating a 3D model and then applying texture_co_ bump and displacement map to it.  I used the standard applyDisplacementMap() function which produced the following result_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1PLEVL%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1PLEVL#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe above example illustrates how the displacement map is being stretched across the entire geometry of the shape – which is not what I want.  I want the ability to control how the displacement map is tiled across the geometry of the shape – similar to that of uScale &amp_sm_ vScale for bumpTexture_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\te.g._lt_br /_gt_\n\t        mat2.bumpTexture.uScale _eq_ 5_sm__lt_br /_gt_\n\t        mat2.bumpTexture.vScale _eq_ 9_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI looked at the underlying functionality of applyDisplacementMapFromBuffer() in an attempt to try and extend it to have greater control over the tiling – but TBH I am not understanding how some of the key lines of code are working.  So_co_ I decided to take another approach.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBefore I explain my solution “I KNOW” this is not a scalable solution and not efficient on many levels.  However_co_ it enabled me to apply a tiled displacement map to small geometry shapes – this allowed me to envisage what shapes will look like when displacement maps are applied correctly.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNOTE_dd_ the main issue with the approach I took is memory allocation – i.e. you will hit out of memory if you try and apply my method to a large 3D model mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe interim solution I created is to create a displacement map texture (image) that is sized and tiled appropriately such that I can apply it to the 3D model geometry using the applyDisplacementMapFromBuffer() function.  The solution I created is below_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1PLEVL_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1PLEVL_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tExplanation_dd__lt_br /_gt_\n\tline 94_dd_ obtains the displacement map image (not tiled)_lt_br /_gt_\n\tline 97_dd_ creates a tiled displacement map image (mirroring that of the bumpTexture uScale/vScale)_lt_br /_gt_\n\tline 99_dd_ apply tiled displacement map to 3D mesh_lt_br /_gt_\n\tline 101~102_dd_ free resources (because line 97 is very resource intensive!)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe above solution generates nice results as per the PG example – but this is not something that is scalable (the right approach is ofcourse to tile a smaller texture across the geometry of the 3D mesh).  I am hoping (praying) that one of the Babylon JS arch master developers can tweak the applyDisplacementMap() function such that the uScale/vScale tiling can be controlled.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPerhaps someone can point me in the right direction so I can do this myself?  Anyway_co_ I hope this example is of some use to the community.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-01-23T19:33:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tTadam! _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tCheck line 94_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1PLEVL%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1PLEVL#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI added two new parameters_dd_ uvOffset and uvScale(_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/commit/0a69de96d7adb9d632792065164ed674770782e6#diff-275ef6355aab4f0ea954727a7a424f72_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/commit/0a69de96d7adb9d632792065164ed674770782e6#diff-275ef6355aab4f0ea954727a7a424f72_lt_/a_gt_)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Rolento","Date":"2017-01-23T21:17:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Deltakosh\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAwesome!!!!!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut... I have a problem (I think) - when I click on the PG link for some reason the rendered scene does not seem to have the displacement map applied correctly (i.e. it looks stretched as per the original PG I posted). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWould I be correct in assuming that the PG is not referencing the latest source code as contained within the GIT repo?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-01-23T21:19:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tJust clear your cache _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Rolento","Date":"2017-01-23T21:22:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tDOH!  Yep that fixed it!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDeltakosh you are....  a super star!  Thanks for this enhancement (im sure others will love this too).\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]