[{"Owner":"brianzinn","Date":"2017-09-21T19:45:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJust noticing that there was a big changeset for the NPM modules for gui!!¬†(_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/pull/2840_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/pull/2840_lt_/a_gt_) ¬†This is really a big move and I want to try it out and hopefully get GUI working with my setup.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m wondering how long that¬†takes to get to npm (3.1.0-alpha3?) ¬†Otherwise is it¬†recommended to build my own from source¬†to try it out or copying from github/dist/preview release/ to node_modules?¬† Thanks.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-09-22T14:02:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tbefore I finish the documentation_co_ here is a quick overview_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tbabylonjs¬†_lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_3.1.0-alpha3.4 and all of its modules (materials_co_ serializers_co_ loaders_co_ GUI_co_ post processes and procedural textures) are now npm (and webpack) compatible._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_To use it_dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t¬†\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_npm install --save babylonjs babylonjs-gui_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_If you are using TypeScript_co_ the typing needs to be added to tsconfig.json_dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_....\n\n_qt_types_qt__dd_ [\n   _qt_babylonjs_qt__co_\n   _qt_babylonjs-gui_qt__co_\n   _qt_iAmTheWalrus_qt_\n]_co_\n\n...._lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_Afterwards it can be imported to the project using_dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_import * as BABYLON from _t_babylonjs_t__sm_\nimport * as GUI from _t_babylonjs-gui_t__sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t¬†\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe next step is you programming a mean game and showing us what came out! _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-09-22T17:53:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThis will deserve an announcement post _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-09-22T17:53:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYes boss... üòÅ\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-09-22T21:04:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/?do_eq_hovercard_qt_ data-mentionid_eq__qt_10310_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/_qt_ rel_eq__qt__qt__gt_@RaananW_lt_/a_gt_¬†for this great contribution - I will have more questions probably once your docs are ready. ¬†To start I noticed for example you are doing namespace import (import *). ¬†Are you not having any side effects (ie_dd_ import _t_babylonjs_t_)?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRight now I am using named exports¬†(import * as BABYLON would work just as well...)_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_import { SceneLoader_co_ Scene } from _t_babylonjs_t__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tIn same file¬†I am manually calling to register my loader_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_import { OBJFileLoader } from _t_../../babylonJS/babylon.objFileLoader_t_\n\nSceneLoader.RegisterPlugin(new OBJFileLoader()) // how are these managed?\nSceneLoader.ImportMesh(_qt__qt__co_ _qt_folder/_qt__co_ _qt_File.obj_qt__co_ scene_co_ loadedMeshes _eq_&gt_sm_ { ... })_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI have copied¬†.ts files from babylon source into my project to get loaders_co_ procedural textures_co_ GUI_co_ etc. ¬†All done manually of course_co_ so this will be a huge improvement for me.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am curious how you have registered imported plugins. ¬†I¬†will be checking¬†the _qt_side-effects_qt_ and namespace import effect on tree-shaking. ¬†Happy to test it out and provide any comments.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-09-22T23:40:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAll will probably be answered when I finish the doc. To answer your questions specifically_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe way you use the imports should be working as well. But it will have no effect on tree shaking and I therefore see no reason to do that. The reason it doesn_t_t do any tree shaking is because of the way babylon is currently built (as a large single unit). My first attempt at solving this was to transform the entire framework to an es6-import-based project. The problem was circular dependencies_co_ that prevented commonjs from working correctly. We are serving a single minified file. So importing a single class will actually load the entire namespace (including executing loaded code) and send back the requested class.¬†We can discuss this further if you wish_co_ but it_t_s not the scope here. Maybe I will find the time to write a blog post about it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe modules are extending the BABYLON namespace. The code is being executed after _qt_requiring_qt_ babylonjs_co_ which is a singleton holding BabylonJS_t_s classes. When extending it_co_ any code ran on this imported variable is simply executed_co_ thus - the loaders should be registered automatically when you import them. If they don_t_t_co_ please let me know. Same things goes to materials_co_ post processes_co_ procedural textures_co_ ¬†serializers. The GUI has its own namespace_co_ so it can be imported independently.¬†\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHope this clear things a bit!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-09-23T01:44:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tGot it - that was a lot of effort to get to this point_co_ so really appreciated! _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_¬†\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]