[{"Owner":"RaananW","Date":"2014-11-30T21:26:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi guys_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Working with web designers and old school web devs I have come to realize that they are sometimes very fixed about the way they work. I was looking for a way to integrate babylon and the jquery generation_co_ and came up with this_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//my-cac.com/babylon/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//my-cac.com/babylon/_lt_/a_gt__lt_/p_gt__lt_p_gt_Try hovering over the meshes and clicking on them_co_ you will get the idea. Also see the html markup - it is all added dynamically. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The idea is that - I have extended the action manager_t_s functionality in babylon_t_s scene to trigger (async) javascript events with the needed details. For that I had to change the way nodes are added to the scene._lt_/p_gt__lt_p_gt_Supported events_dd__lt_/p_gt__lt_p_gt_Canvas is triggering _qt_nodeAdded_qt_ and _qt_nodeRemoved_qt_ for three kinds of bjs nodes - camera_co_ light and mesh. It is also triggering _qt_keyUp_qt_ and _qt_keyDown_qt_ with babylon_t_s ActionEvent._lt_/p_gt__lt_p_gt_a mesh node is triggering _qt_pick_qt__co_ _qt_pointerOver_qt_ and _qt_pointerOut_qt_. It can also trigger the intersection events_co_ but for that we need an active actionManager (otherwise intersections will have to be constantly inspected)._lt_/p_gt__lt_p_gt_This all can be turned on and off with a flag in the scene _dd_ scene.asyncEventTriggers _eq_ true_lt_/p_gt__lt_p_gt_The changes are in my bjs github fork_co_ if someone wants to see how it was done._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Hope someone finds it useful! _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I believe this will be a wonderful way of separating between a 3d canvas and the rest of the website_co_ if a canvas is not in full screen. I think everyone can benefit from this. I know that it could have been developed using an actionManager_co_ but then i would have to add an action manager to each mesh. Since the pick_co_ pointerOut and pointerOver events are already being constantly tested_co_ why not simply trigger them _dd_-)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_** Note - I write _qt_async_qt__co_ because js event are exactly that - async. meaning_co_ you can_t_t really know if they got triggered before the scene was rendered or after. I wouldn_t_t use it to make immediate changes in the scene itself. Or simply know that it can take a frame or two before the changes are there._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-11-30T22:04:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It_t_s interesting_co_ this can be used according to some cases. it is possible that this is useful to me for a current project._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2014-12-01T21:28:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi dad72_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_this relies on some changes made inside the scene class and other nodes_co_ and based on the current master branch of babylon. You are more than welcomed to take the js file i used on the site i posted and use it_co_ I can also explain fully how to use it. I will pull the changes made to the engine and try updating it if you (or anyone else) wants. I guess it might be useful for some projects._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]