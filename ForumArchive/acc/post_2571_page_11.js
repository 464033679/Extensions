[{"Owner":"Wingnut","Date":"2014-03-25T14:43:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi girls!  Last night_co_ I got demented again.  After talking about lighting and normals and mesh faces with buddy Bob_co_ he found a link to this thread... _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/2217-double-sided-normals/#entry14901_qt__gt_http_dd_//www.html5gamedevs.com/topic/2217-double-sided-normals/#entry14901_lt_/a_gt_ .  Yep_co_ this is the secret behind my lack of spotlight shine on the back face of planes.  Interesting._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So_co_ Wingnut thought about..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Mesh.CreateWall(name_co_ outsideWidth_co_ outsideHeight_co_ insideWidth_co_ insideHeight_co_ gap_co_ scene_co_ updateable)_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Although similar 2-sided walls can be made by scaling a Mesh.CreateBox_co_ it is not easy to texture ONLY two sides of that standard box.  It might be easier to texture 2 planes of a box made from 6 planes.  To reword_co_ a user likely wants a texture on the inside wall_co_ and a texture on the outside wall_co_ but no need for texture on the end-caps and top/bottom caps of the wall.  (4 planes are used as _t_caps_t_).  My new CreateWall will produce a wall that has wall.nx_co_ wall.px_co_ wall.ny_co_ wall.py_co_ wall.nz_co_ wall.pz.  Each of those can have a StandardMaterial_co_ so the user will have full choice of which planes to texture_co_ and which to not texture._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So_co_ today_co_ I am building planes.  (No_co_ not the kind of plane that Lindbergh landed at Le Bourget Field.)  I started by referencing my own goofy forum post here... _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/4530-create-a-mesh-from-a-list-of-vertices-and-faces/#entry30755_qt__gt_http_dd_//www.html5gamedevs.com/topic/4530-create-a-mesh-from-a-list-of-vertices-and-faces/#entry30755_lt_/a_gt_ ._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_There was a time when the data in the positions array (plotting data) would make me confused.  But if you imagine each line as a Vector3(-size_co_ -size_co_ 0)... then it becomes easier._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I needed a plane to use as the outside plane of my new CreateWall() constructor. And I needed its front face to aim outward_co_ in the opposite direction of my inside wall. I discovered something very fascinating when I was building my plane.  I will try to show you with code_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_\tBABYLON.Wall.prototype.makeplane _eq_ function () {\t\tvar hpw _eq_ this.owidth/2_sm_\t\tvar hph _eq_ this.oheight/2_sm_\t\tvar plane _eq_ new BABYLON.Mesh(_qt_plane_qt__co_ this.scene)_sm_/*\t\t// counter-clockwise plotting - front face is +z\t\tvar positions _eq_ [  \t\t\t-hpw_co_ -hph_co_ 0_co_  \t\t\t-hpw_co_ hph_co_ 0_co_  \t\t\thpw_co_ hph_co_ 0_co_  \t\t\thpw_co_ -hph_co_ 0\t\t]_sm_*/\t\t// clockwise plotting - front face is -z\t\tvar positions _eq_ [  \t\t\thpw_co_ -hph_co_ 0_co_  \t\t\thpw_co_ hph_co_ 0_co_  \t\t\t-hpw_co_ hph_co_ 0_co_  \t\t\t-hpw_co_ -hph_co_ 0\t\t]_sm_..._lt_/pre_gt__lt_p_gt_owidth is outside wall width_co_ oheight is its height_co_ hpw is half plane width_co_ hph is half plane height_co_ etc.  The fascinating part is the clockwise vs. counter-clockwise.  Plot the positions _lt_u_gt_clockwise_lt_/u_gt__co_ and the normals/frontface are in ONE direction. Plot the positions _lt_u_gt_counter-clockwise_lt_/u_gt__co_ and the normals/frontface are in the opposite direction!  Isn_t_t that cool?  ahhh_co_ fun with babylon.js plane-making!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What_t_s the big picture_co_ you ask?  Well_co_ I_t_m going to make a propeller.  Likely 6-bladed.  I am going to make the propeller blades with my new CreateWall constructor... so I get two-sided normals.  Then I am going to place the propeller (sideways) into the light testing box from the previous fun._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Then I am going to spin the propeller_co_ and shine one light from the left side of it_co_ and another light from the right side.  FUN!!!  Then I am going to turn on two ShadowGenerators (one for each light)... so I can see the propeller blade shadows against the walls.  Then I am going to MirrorTexture the walls WHILE the shadowGenerators are still running... but I_t_m going to alpha (transparent) the wall.diffuseTexture/MirrorTexture a small amount... so the shadows can be seen_co_ still. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Its going to get REAL UGLY and FUN!!  Look out!  Demos coming!  Mad scientist on the loose!  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  Be good!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ps - off-topic_dd_ The Big Blower drove down Wingnut_t_s street today_dd_ _lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/bigblower.jpg_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//urbanproductions.com/wingy/bigblower.jpg_lt_/a_gt_  Now THAT is a particle emitter!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-03-26T02:26:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi again_co_ friends!  Did you miss me?  (yeah_co_ right)_lt_/p_gt__lt_p_gt_   Here... is Wally1 ... _lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/walls/wally1.htm_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//urbanproductions.com/wingy/babylon/walls/wally1.htm_lt_/a_gt_  (wally1.zip is there too)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In this goofy thing_co_ we have completed our first version of wall _lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/walls/js/wall01.js_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//urbanproductions.com/wingy/babylon/walls/js/wall01.js_lt_/a_gt_  It likely has mistakes_co_ but I_t_ll work on it more. Take it_co_ use it_co_ abuse it_co_ improve it_co_ its free for all to use in any way you like.  Tell us of your discoveries._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In the demo above_co_ we have a wall_co_ slowly rotating.  Its big -z and +z faces are green_co_ its -x and +x caps are red_co_ and its -y and +y caps are blue.  The big work box is 100 x 100 x 100_co_ the cam is looking mostly +z and a directional light is at .position -50_co_ -50_co_ -50 (near lower left corner).  The directional light .direction is aiming at 50_co_ 50_co_ 50 (far upper right corner) (where the shadow is). _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I think I have all the normals on the rotating wall... pointed outward_co_ though I am still learning about normals. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I was somewhat disappointed to see that spotlights don_t_t make shadows_co_ apparently.  Apparently_co_ pointlights do not make shadows_co_ either.  (I could be wrong.)  No mention of which types of lights to use... in the current shadows tutorial. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For those who are thinking about holes in walls for doors and windows_co_ you might want to look at babylon.js CSG (constructive solid geometry) system_co_ which surely has boolean subtraction power.  CSG is brand new for babylon.js.  _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/4427-csg-in-babylon/_qt__gt_http_dd_//www.html5gamedevs.com/topic/4427-csg-in-babylon/_lt_/a_gt_  We want to send a huge THANKS to Feldspar for kindly donating his excellent libraries!!!  They are still being tested_co_ and demos are still in the works_co_ but it looks to be a VERY promising and welcomed addition to babylon.js systems. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Also_co_ thanks to the Sokrate team for mapping the new CSG api SO QUICKLY!  The Sokrate team is definitely HOT HOT HOT_co_ baby!  Code on!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-03-27T05:20:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_What_t_s that?  You want yet ANOTHER stupid demo?  Fine.  _lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/polygun/polygun01.htm_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//urbanproductions.com/wingy/babylon/polygun/polygun01.htm_lt_/a_gt_ .  Yep_co_ we left lights and walls for a moment_co_ and wandered into the beginnings of _qt_Artillery Duel_qt_ (see earlier posts).  Here we have the physics engine turned-on_co_ and we are applyImpulse-ing a polygon into the air.  Polygon Gun... Poly-Gun?  With me?  FUN!! _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I think it is an adorable name_co_ personally.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  A mesh cannon!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Oh_co_ you say that I should turn-off the physics engine_co_ and just learn to fly tumbling polygons the old fashioned way_co_ with Math.Sin and Math.Cos?  Well get real_co_ Clyde!  I let cannon.js do the parabolic tumbling mesh-flying_co_ and the propulsion system.  Easy!  This cannon is currently locked to fire 5 units of force northward_co_ 5 units eastward_co_ and 17 units upward. _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_\tvar cntptvec _eq_ cb1.position_sm_\tcntptvec.x -_eq_ .5_sm_\tcntptvec.y -_eq_ .5_sm_\tcntptvec.z -_eq_ .5_sm_\tvar forcevec _eq_ new BABYLON.Vector3(5_co_ 17_co_ 5)_sm__lt_/pre_gt__lt_p_gt_The cannonball (cb1) is 1.4 units wide_co_ and as you can see_co_ I moved my point of contact a half-unit left_co_ back_co_ and down.  (Don_t_t ask me why.  Maybe it helps the box tumble.)  The cannonball is now _qt_armed_qt_.  Next step_co_ press _lt_u_gt_fire_lt_/u_gt_!_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_cb1.applyImpulse(forcevec_co_ cntptvec)_sm__lt_/pre_gt__lt_p_gt_POOM!   I still have some _qt_box going through floor_qt_ problems (Firefox only).  No zip this time.  A better version coming soon.  Impulse On!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-03-31T03:11:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi kids!  I have been working hard on custodianship of the forum lately (without being anywhere near qualified to do that)_co_ tweaking tutorial #6_co_ and playing with planes and lights.  No fun demos to present_co_ but I have turned-on some rather significant keyframe animations_co_ and boy_co_ are they fun!  I came across the need for ANIMATIONTYPE_COLOR3_co_ though.  I wonder if that is possible.  *shrug*  Instead I built 3 separate float animators for discrete r_co_g_co_b colors... like this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var anim3 _eq_ new BABYLON.Animation(_qt_ani3_qt__co_ _qt_material.diffuseColor.r_qt__co_ 20_co_     BABYLON.Animation.ANIMATIONTYPE_FLOAT_co_ BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE)_sm_var anim4 _eq_ new BABYLON.Animation(_qt_ani4_qt__co_ _qt_material.diffuseColor.g_qt__co_ 20_co_      BABYLON.Animation.ANIMATIONTYPE_FLOAT_co_ BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE)_sm_var anim5 _eq_ new BABYLON.Animation(_qt_ani5_qt__co_ _qt_material.diffuseColor.b_qt__co_ 20_co_      BABYLON.Animation.ANIMATIONTYPE_FLOAT_co_ BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE)_sm__lt_/pre_gt__lt_p_gt_Animating material properties.  It works! _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Then I thought about... _qt_What if StandardMaterial had an .animations[] array?_qt_  What then?  Scary!  Demented! _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_How about... ANIMATIONTYPE_ARRAYOFTEXTUREURLS ?  Oh my goodness.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ That would probably be easier done via incrementing/decrementing an index into an array of texture urls and then setting material.diffuseTexture _eq_ arrayOfUrls[index]... inside the render loop.  *nod*  Texture page-flipping. Fun!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Cameras and lights allow keyframe animation_co_ too!  How cool is that?  And look at that mysterious BABYLON.Animation.animate() method_co_ with those interesting args/parameters.  I wonder what _lt_u_gt_that_lt_/u_gt_ is used for. Mad scientist experiments_co_ I bet. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_BABYLON.Animation sure is an interesting class with a dump truck full of power... and its easy.  It_t_s a mad scientist_t_s dream come true.  See ya there!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-04-01T04:26:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi gang!  Another demo?  Okay.  This time I am back at work in my light testing box.  Doing what?  Testing lights.  I also brought along that RGB color animator from my previous post.  I put that _t_color sweeper_t_ on a plane_co_ and hit it with a tiny amount of hemispheric light and a substantial amount of spotlight.  Have a look.  _lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/lights/lightplay6.htm_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//urbanproductions.com/wingy/babylon/lights/lightplay6.htm_lt_/a_gt_ (zip is there too)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So you think that the light is animated in _lt_u_gt_some_lt_/u_gt_ way?  You think I am animating spotlight.exponent or spotlight.angle or spotlight.intensity?  Well wrong-o_co_ deer breath.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  The only animation happening in this demo... is a ping-pong (LOOPMODE_CYCLE) color-sweep between Color3(1_co_0_co_0) and Color3(0_co_1_co_0) ... on the plane._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But yes_co_ it sure _lt_u_gt_appears_lt_/u_gt_ like there is animation on the light.  This shows that the _t_saturation_t_ levels on a material.diffuseColor ... has a fun and interesting relationship... with spotlight hot-spots._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So far_co_ in my experiments_co_ I have found the babylon.js spotlight to be very powerful and bright_co_ and its .intensity seems to do very little to _t_dim_t_ the light.  Have others noticed this?  Once you turn-on a spotlight_co_ its difficult to get that thing under control!  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Anyway_co_ I think this demo is fun_co_ interesting_co_ and pretty.  Shine on! (harvest moon?)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-01T17:43:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Humm.. I should add a Color3 interpolator right ? _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-01T17:44:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Roadmap updated ^^_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-04-01T20:38:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co_ fellow babylonians!  (and thanks for the future toy_co_ dk!)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_    Here we go with _lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/walls/wally3.htm_qt_ rel_eq__qt_external nofollow_qt__gt_yet another demo_lt_/a_gt__lt_/u_gt_.  (The _lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/walls/wally3.zip_qt_ rel_eq__qt_external nofollow_qt__gt_zipped version_lt_/a_gt__lt_/u_gt_ is there_co_ too).  This is Wally3_co_ from Uncle Wingnut_t_s world famous _t_Adventures in Wall Making_t_ series.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  This is early work in plotting a wall with a window hole in it.  All the vertices are currently hard-plotted (but _lt_u_gt_you_lt_/u_gt_ can change them to variables easily)_co_ and I have only 6 indices connected so far.  This is a flat-shaded mesh with a pair of point lights (needed for flat shading)_co_ and a tiny amount of hemispheric light.  All the fun takes place in _lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/walls/js/wallplot01.js_qt_ rel_eq__qt_external nofollow_qt__gt_the JS file called wallplot01.js_lt_/a_gt__lt_/u_gt_.  This is a 16 point wall_co_ and it_t_s a whole lot of fun and learning about mesh plotting._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This originally started as a Gmax/3DMax slightly-extruded rectangular spline.  Then I used the _t_Boolean_t_ choice in the Compound Objects section... to create the window hole.  Next_co_ I saved it as an ASE file (an ascii format).  I adjusted that small file_co_ pasted it into a plane-making function_co_ adjusted some more_co_ and that is how I attained the 16 basic vertex coordinates.  Holey Wall_co_ Batman!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you want to experiment with plotting your own meshes... in a super-friendly test area_co_ then this is definitely worth downloading the zip. I have had nothing but fun... playing with this demo... learning about plotting directions_co_ indexing directions_co_ backfaces and frontfaces_co_ per-vertex coloring_co_ normals_co_ you name it.  Plot on!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ps_dd_ Aren_t_t you glad that Wingnut finally learned how to make links that don_t_t include the entire URL?  Me too!  Just highlight the text you want to be the link_co_ before you hit the link button.  Simple. Thanks for showing me that_co_ gryff!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-04-02T12:40:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Alright_co_ babylon.js 1.10.0 has been released!  YAY!  Thanks deltakosh!  Thanks to the contributors_co_ too.  Wow_co_ nice added features_co_ and lots of them!  DK_co_ you and the other contributors have been working like crazy!  Excellent!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Clouds.  Cool.  Shader code right in the main page_co_ and then abuse it like a mad man in clouds.js.  Sweet.  I think that demo can run offline_co_ too_co_ without hassles from XHR object.  Look out!  I am SURE I can blow up my monitor by doing mad scientist activity on _lt_u_gt_that_lt_/u_gt_ demo. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  I have wanted to have an easy shader experimenting system for a long time... and there it is.  YAY!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-04-02T19:41:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@deltakosh/codebase maintainers_dd_  BJS 1.10.0 - BABYLON.VertexData.prototype.applyToMesh_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Should that also have..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_if (this.colors) {_lt_br_gt_     mesh.setVerticesData(this.colors_co_ BABYLON.VertexBuffer.ColorKind_co_ updatable)_sm__lt_br_gt_}_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_??  One would think so_co_ IF applyToMesh is a user-callable method.  *shrug*  (thx)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Oh_co_ you want another stupid demo_co_ readers?  Well_co_ the _lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/walls/wallyT/wallyT01.htm_qt_ rel_eq__qt_external nofollow_qt__gt_retarded wallpaper_lt_/a_gt__lt_/u_gt_ lady was here_co_ again_co_ today.  She left a _lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/walls/wallyT/wallyT01.zip_qt_ rel_eq__qt_external nofollow_qt__gt_zipped version_lt_/a_gt__lt_/u_gt_ laying on the coffee table_co_ too.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  Don_t_t try to adjust your cameras_co_ its a wall_co_ not a floor. Front face aiming -z_co_ ya know?  Treating a vertical grid like a floor and trying to fly the camera across it like it were a chunk of farm land... will quickly show you bad flight-sim banking.  It_t_s wall paper_co_ not carpeting.  Pft.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-03T23:44:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I added colors to applyToMesh _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-04-04T02:50:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi dk_co_ thank you for the modification_co_ and I hope you_t_re well!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Speaking of colorkind_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ground.setVerticesData(colors_co_ BABYLON.VertexBuffer.ColorKind)_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Huh?  Well_co_ I was setting up a fresh scene today... and I was going to start torturing cameras... to make sure that I had good knowledge to improve tutorial #5.  But_co_ as you all know_co_ I have been playing with mesh plotting (in a modified createPlane function).  Now_co_ most of you don_t_t know this about me_co_ but I am a color junkie (a color addict).  The more colors_co_ the better_co_ on anything.  And I have been setting _t_colorkind_t_ data on the planes that I have been experimenting with_co_ lately_co_ so I am in a coloring mood_co_ I guess.  But in the planes experiments_co_ I plotted my own mesh and then added colors._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Today_co_ I needed to make a _t_ground_t__co_ so I made one_co_ and I aimed my freeCamera at it_co_ and all was fine... but_co_ then I thought... _qt_I wonder if I can set per-vertex _t_colorkind_t_ on a plane that I did not plot myself... like this ground on my screen._qt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_First_co_ I set it to wireframe so I could see how many vertices it had.  25.  So then_co_ I knew I needed 3 values for each color [r_co_ g_co_ b]_co_ and then I built a simple FOR-NEXT loop_co_ and put a Math.random() inside it_co_ and I pushed 75 random numbers into a colors[] array.  Then_co_ just after I created my ground_co_ I used that colorkind line from earlier in this post... and poom_co_ I got a pile of pretty colors on my no-diffuseColor ground plane.  Cooooool!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Well_co_ of course_co_ I could not stop there.  I needed animation... in order to be a real demented _t_mad scientist_t_.  So_co_ it all got ugly from there_co_ and_co_ well_co_ _lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/colorkind/colorkind.htm_qt_ rel_eq__qt_external nofollow_qt__gt_check out the demo!_lt_/a_gt__lt_/u_gt_  There is a _lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/colorkind/colorkind.zip_qt_ rel_eq__qt_external nofollow_qt__gt_zipped version_lt_/a_gt__lt_/u_gt_ nearby_co_ too. Watch it for some time.  It toggles wireframe on and off._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I am never going to get any real work done... if I keep playing like this.  But I sure do enjoy it.  I had to use a strange method to apply new colorkind to an already-made ground_co_ though.  It seems that...  when I do..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ground _eq_ scene.getMeshByName(_qt_ground_qt_) ... and then try to apply new colorkind data to it_co_ my console reports..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Error_dd_ WebGL_dd_ drawElements_dd_ no VBO bound to enabled vertex attrib index 0!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So_co_ I made the ground mesh global_co_ and then inside the animation loop_co_ I did ground.dispose()_co_ and then created a new ground mesh_co_ and applied new random colorkind.  It makes for a _t_stuttery_t_ animation_co_ and I am still studying why mesh retrieved with scene.getMeshByName... no longer has a VBO to poke colorkind into.  Learning_co_ learning_co_ learning... and having too much fun doing it!  Color on!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-04-06T16:16:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_strong_gt_Attention all geniuses_dd__lt_/strong_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have a dream.  It is a big dream_co_ too big for me._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Earlier in this thread... I showed everyone a Spherical Harmonics demo... one which I love.  It uses a complicated JS library called ToxiclibsJS_co_ along with added support for ThreeJS.  Toxiclibs produces a mesh_co_ but some conversion is needed for it to render in ThreeJS.  This spherical harmonics thing... is how I make my forum icons.  It makes very beautiful primitive objects._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I started working on a babylon.js version... but it is very difficult.  Would someone like to try to finish it?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/SphericalHarmonics/sh6.htm_qt_ rel_eq__qt_external nofollow_qt__gt_Here is the demo_lt_/a_gt__lt_/u_gt_.  (slow loading) (control-mousewheel for sizing)  _lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/SphericalHarmonics/sh6.zip_qt_ rel_eq__qt_external nofollow_qt__gt_Here is the zip_lt_/a_gt__lt_/u_gt_._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It currently runs on ThreeJS_co_ included in the zip.  Toxiclibs2.js is also in the zip.  So is BJS-110 and Hand-137._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_u_gt_I_lt_/u_gt_ named the toxiclibs2 file_co_ because I removed the threeJS support functions from the standard toxiclibs file_co_ and put them in the sh6.html.  All those ThreeJS _t_support_t_ functions... are on a small object in the html... named _t_sup_t_.  Inside the html_co_ you will easily see the _t_sup_t_ object.  It has very few functions._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_All that needs to be done_co_ is to make a _t_sup_t_ object for babylon.js.  Maybe impossible at this time.  Maybe not.  Just replace the methods on the _t_sup_t_ object... with babylon.js-ready methods... and we will have a babylon.js version of Spherical Harmonics. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If anyone can complete this project_co_ and make a _t_sup_t_ object for babylon.js_co_ and produce the same beautiful results_co_ then I will forever worship the water you walk-on.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  Harmonize on!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-04-08T00:36:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi gang!_lt_/p_gt__lt_p_gt_   Well_co_ I have begun work on learning everything I can about babylon.js cameras.  This is so I can possibly add-to our Basic Series tutorial #5... flesh-it-out to some degree.  I am just beginning my adventures_co_ but I have found a unique _t_thing_t_ about camera.fov (field of view).  That property is Math.PI related.  I guess that is not so unexpected_co_ but I still find it fascinating._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/cameras/camplay01.htm_qt_ rel_eq__qt_external nofollow_qt__gt_Here is a demo_lt_/a_gt__lt_/u_gt_ where I animate an ArcRotateCamera .fov property... starting at 0_co_ and incrementing upward forever.  Watch what happens to the scene as the number nears 3.14 and 6.28_co_ etc.  The _lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/cameras/camplay01.zip_qt_ rel_eq__qt_external nofollow_qt__gt_zipped version_lt_/a_gt__lt_/u_gt_ is available_co_ too.  Pardon the messy code in my _t_camera workshop_t_.  It is a workshop... and workshops are always messy when work (play) is happening inside.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  I hope everyone is well.  FOV on!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ps_dd_  Did you know that babylon.js is less than 90 kbytes when zipped?  THAT IS AWESOME!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-04-09T07:39:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi kids!  Well_co_ if you have been following my escapades in Tutorial Talk_co_ then you know I have a need to do further study on light.directions.  So_co_ as usual_co_ I built a testing _t_jig_t__co_ and as normal_co_ it turned out to be fun._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So_co_ _lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/lights/direction/directions01e.htm_qt_ rel_eq__qt_external nofollow_qt__gt_here is a demo (in English)_lt_/a_gt__lt_/u_gt_ that will help me (and others) learn about the .direction property on many types of babylon.js lights.  And_co_ _lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/lights/direction/directions01f.htm_qt_ rel_eq__qt_external nofollow_qt__gt_here is a badly-translated French version_lt_/a_gt__lt_/u_gt_.  Here is _lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/lights/direction/directions01.zip_qt_ rel_eq__qt_external nofollow_qt__gt_a zip that contains both versions_lt_/a_gt__lt_/u_gt_.  This demo requires some time to watch it and see what is happening.  It also might run too fast in IE11_co_ so you might want to view this in something with a slow frame rate.  The light is red in IE11_co_ and white in FF21.  It is not very exciting_co_ but it explains a semi-difficult subject._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_As a reminder... the .direction property on the babylon.js DirectionalLight_co_ SpotLight_co_ and HemisphericLight... takes an unusual Vector3(x_co_ y_co_ z)...  where x_co_ y and z are floats that range from -1.0... to 1.0.  Negative 1 to positive 1.  Each value can be said to define the amount of _t_pull_t_ or _t_influence_t_ they place upon a light... to aim in that direction.   Now try the demo_co_ and sit back and relax as you watch _t_influencing_t_ happen.  Party on!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-04-10T14:14:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi friends!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_No demos today.  Today_co_ I talk.  (What_t_s new there_co_ Uncle Wingnut?)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_As you might know_co_ I have been working on tutorials_co_ and recently_co_ I did a little adjusting to tutorial #7 - animation._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_One thing I noticed right away_co_ is that the author said that there are TWO ways to animate.  Well_co_ I disagreed right away_co_ and said that there are THREE ways to animate._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_1.  Do direct animating... or insert function calls... _lt_u_gt_inside the render loop_lt_/u_gt_... like these two examples_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_engine.runRenderLoop(function () {      scene.render()_sm_      scene.getLightsByID(_qt_spot1_qt_).position.x +_eq_ .05_sm_})_sm__lt_/pre_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_engine.runRenderLoop(function () {      scene.render()_sm_      animateLights(scene)_sm_})_sm__lt_/pre_gt__lt_p_gt_2_dd_ Use a babylon.js _lt_u_gt_Animation-class object_co_ with keys_lt_/u_gt_.  (I think it should be called _t_Animator_t_ class_co_ but that is a different subject.)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_3a. Use a _lt_u_gt__t_complex_t_ animation_lt_/u_gt_ by putting a function inside a call to _lt_u_gt_scene.registerBeforeRender_lt_/u_gt_... like this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_scene.registerBeforeRender(function () {    // Your code here})_sm__lt_/pre_gt__lt_p_gt_3b. You can also insert the _lt_u_gt_NAME_lt_/u_gt_ of a function as the parameter/arg for registerBeforeRender()... like this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_scene.registerBeforeRender(animateLights)_sm__lt_/pre_gt__lt_p_gt_(And then you can place the animateLights() function in some other place within your JS)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I use #1 often_co_ but then I thought about it more. #1 and #3b_co_ are really the same thing_co_ right?  But there IS one difference.  I cannot send _t_args_t_ (parameters) to the animateLights function... when using method #3b.  In other words... THIS does NOT work_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_scene.registerBeforeRender(animateLights(scene))_sm_  // fails_lt_/pre_gt__lt_p_gt_So_co_ let us pretend that #1 is a bad way to animate because it loads-down the render loop.  Lets pretend I was wrong_co_ (I probably REALLY AM wrong)...  and lets AGREE that there IS only two ways to animate_co_ like the tutorial claims._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Since I cannot send _t_scene_t_ as a parameter to my animateLights function_co_ I must instead _t_look-up_t_ a handle/reference to _t_scene_t_... inside my animateLights() function.  _t_scene_t_ is NOT a global variable.  But WAY BACK when I did...  var engine _eq_ new BABYLON.Engine(canvas_co_ true) ...when I built my basic scene_co_ _t_engine_t_ became global.  Careful with capital letters here.  Notice _t_engine_t_ is a global variable_co_ but Engine is a function._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Let us look at my NEW animateLights() function (with no _t_scene_t_ arg/parameter).  Here_co_ I will use the global _t_engine_t_ variable_co_ to get a handle/reference to _t_scene_t_ _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_function animateLights() {     var scene _eq_ engine.scenes[0]_sm_     var myspot _eq_ scene.getLightsByID(_qt_spot1_qt_)_sm_     // animate the light like a crazy person     [...]  &lt_sm__eq_  this symbol means add more code here}_lt_/pre_gt__lt_p_gt_Quite easy_co_ yes? I did not need to send _t_scene_t_ to this function.  I quickly looked it up.  (Quick speed is important in animation functions.) _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  I could have taken a shortcut_co_ like this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_function animateLights() {     var myspot _eq_ engine.scenes[0].getLightsByID(_qt_spot1_qt_)_sm_[...]}_lt_/pre_gt__lt_p_gt_BUT... I think... if you need to _t_lookup_t_ MANY scene items in your animation function_co_ it is best to do it the first way.  That is  only my opinion.  It depends upon the amount of scene item lookups.  Do speed tests if you like._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Continuing on_co_ often I have more than one animation function that I want to call.  Like a good mad scientist_co_ I tried and failed at this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_scene.registerBeforeRender(animateLights_co_ animateMeshes)_sm_  // fails_lt_/pre_gt__lt_p_gt_But_co_ I discovered that you can easily call registerBeforeRender() two or more times_co_ like this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_scene.registerBeforeRender(animateLights)_sm_scene.registerBeforeRender(animateMeshes)_sm__lt_/pre_gt__lt_p_gt_Success!  Works fine! _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Of course_co_ you can also _t_cascade_t_ the functions by calling ONLY animateLights()_co_ and then calling animateMeshes() just before the closing brace in animateLights().  But I think using multiple calls to registerBeforeRender... like shown above_co_ is a smarter way to do multiple animation function calls_co_ and it_t_s VERY easy_co_ yes?  Let babylon.js do the animation time management FOR you._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_A little warning_dd_  Avoid using FOR loops in your animation functions.  Instead... use STEP... one step forward or backward... of the animation sequence._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So_co_ from here forward_co_ I am _lt_u_gt_not_lt_/u_gt_ going to use animation method #1.  It is clumbsy_co_ and it risks bogging (slowing down) the render loop.  From now-on_co_ in my demos and projects_co_ I am going to use #3a or #3b.  They both work GREAT!  I might use #1 just for tiny little quick-tests_co_ but I think it is wise to use #3a and #3b most of the time._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Readers_co_ coders_co_ please comment to this freely.  Show me better ways_co_ fix my mistakes_co_ teach me about animation _t_time management_t_ inside of babylon.js_co_ because soon_co_ I (and all of you) will be adjusting some wording inside the animation tutorial.  I could use all the help and knowledge I can get.  THANKS!  Hey... umm... Animate On!  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-04-12T04:43:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi gang!  Wow_co_ the response is ear-shattering!  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  (The forum has been a bit sleepy_co_ lately.)  Oh well_co_ keep that animation stuff in mind if you please.  I put it into action_co_ recently.  Check out  _lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/lights/direction/directions04.htm_qt_ rel_eq__qt_external nofollow_qt__gt_this new demo_lt_/a_gt__lt_/u_gt_.  The _lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/lights/direction/directions04.zip_qt_ rel_eq__qt_external nofollow_qt__gt_zipped version_lt_/a_gt__lt_/u_gt_ is there_co_ too._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This demo does lots of new (for me) things.  First_co_ it uses some cool sine/cosine orbiting fun that deltakosh showed me_co_ seen at the bottom of our lights test demo... in our Samples/Custom folder at GitHub.  I love orbiting!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This demo also uses my cool new setLightDirectionByTarget(spotlight_co_ orbitbox)_sm_  I love it... it works great_co_ and it keeps the spotlight aimed at the orbiting box perfectly.  I would LOVE to see it installed in the BJS framework_co_ on lights that use .direction_co_ but particularly on spotLights and directionalLights.  HemisphericLights are fairly simple to set .directions on._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This also uses two (new to me) occurences of mesh.lookAt()_co_ both with offsets in the args.  That function works real fine_co_ too_co_ but it takes a bit of experimenting to get the offsets correct.  (The offsets are in radians and are often factors of Math.PI)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Mesh.lookAt is used on the white wireframe spotlight-matching cone_co_ and on the randomly-colored utility arrow that points at the box as it orbits.  The Mesh.lookAt function has quite a few _t_helpful notes_t_ inside the source code for BABYLON.Mesh._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And last_co_ just for fun_co_ I turned-on a cool babylon.js particleSystem for a vapor trail coming from the orbiting box.  (The box is its emitter.)  This demo is also fairly well commented_co_ which is quite unusual for a Wingnut-made demo.  Enjoy the fun_co_ and party on!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-12T04:55:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Could you share the code you used for _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_setLightDirectionByTarget? It is absolutely possible to include it in bjs_lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-04-12T12:00:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi dk.  I am happy and proud to share.  Free to use_co_ by anybody for anything.  Please adjust and improve_co_ though._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_\tfunction setLightDirectionByTarget(light_co_ item) {\t\tlight.direction _eq_ BABYLON.Vector3.Normalize(item.position.subtract(light.position))_sm_\t\treturn light.direction_sm_\t}_lt_/pre_gt__lt_p_gt_You and other JS Gods write functions like this... blindfolded with one hand (very easily).  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I don_t_t know if it should return a value.  I don_t_t know if it should check IF the light HAS a .direction property and if not_co_ raise an error.  Maybe _t_item_t_ should be changed to _t_mesh_t_ or maybe _t_target_t_?  Maybe setLightDirection_lt_u_gt_To_lt_/u_gt_Target?  Maybe setLightDirection_lt_u_gt_ToMesh_lt_/u_gt_?  Your decision is fine.  I am easy._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In other BJS functions_co_ _t_target_t_ is a vector_co_ not a mesh/item.  SO... IF... target is a vector_co_ the code would look like this..._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_\tfunction setLightDirectionByTarget(light_co_ target) {\t\tlight.direction _eq_ BABYLON.Vector3.Normalize(target.subtract(light.position))_sm_\t\treturn light.direction_sm_\t}_lt_/pre_gt__lt_p_gt_Maybe that way is more wise.  Your decision.  Adjust and change.  Add your expertise_co_ please.  This function has not been well-tested_co_ and I am not able to predict problems that could happen.  I am scared!  _dd_/  I am not qualified to write code for the framework.  I make too many mistakes.  Adjust adjust adjust... and... THANKS!  I am honored by your interest._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Of course_co_ if it is installed on light-class objects_co_ it would be called .setDirectionByTarget.  No need to put the word _t_light_t_ in its name_co_ when it is ON light-class objects. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  Then_co_ assuming _t_target_t_ is a vector_co_ it might be_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_\tfunction setDirectionByTarget(target) {\t\tthis.direction _eq_ BABYLON.Vector3.Normalize(target.subtract(this.position))_sm_\t\treturn this.direction_sm_\t}_lt_/pre_gt__lt_p_gt_You know all this_co_ already.  No need for me to tell you how to adjust.  You are a code genius_co_ DK.  Be well!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-04-15T04:15:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi girls!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t     Tonight_co_ _lt_strong_gt__lt_u_gt__lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#UKD4ZI%234_qt_ rel_eq__qt_external nofollow_qt__gt_yet another demo_lt_/a_gt__lt_/u_gt__lt_/strong_gt_.   My standard _t_utility arrow_t_ (seen in a few of my demos) has always been a 2-mesh thing... made from 2 cylinders.  It makes it difficult to use_co_ sometimes.  Also_co_ I did recent work with mesh.lookAt()_co_ and it wants meshes that are drawn facing you.  My old utility arrow did not do that well_co_ and it had a bad pivot point_co_ etc etc.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ it was time to plot a new one-mesh arrow.  I put some air vents into it... to keep it from over-heating_co_ too.  It is a racing arrow.  It has racing colors_co_ and has been tested in the wind tunnel to ensure low air drag and minimum mesh-skin friction coefficients.  _lt_img alt_eq__qt__sm_)_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ data-emoticon_eq__qt__qt_ /_gt_  I also used my new best friends... Math.sin and Math.cos.  They make WONDERFUL circles on the graph paper for me.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt is not quite done yet_co_ and OH MAN... I HAD A TOTAL _lt_u_gt_GOOD TIME MAKING IT_lt_/u_gt_!  TOO MUCH FUN!!!  I really love my mesh-plotting laboratory.  It makes beautiful things (in my opinion).  I am also using the new BABYLON.VertexData() device to install my dataKinds.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHey DK... I am using a BJS 110 minified that I DL_t_d tonight.  Has IT got the colorkind addition done yet?  Take a look near the bottom of _lt_strong_gt__lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/plotting/arrow_plot/js/arrowplot01.js_qt_ rel_eq__qt_external nofollow_qt__gt_my arrow-making code_lt_/a_gt__lt_/u_gt__lt_/strong_gt_.   vertexData.colors _eq_ colors_sm_ failed for me... so I had to use the old way.  I could be making a mistake_co_ too.  And maybe_co_ the colorKind addition has not been installed in the BJS 110 minified version yet.  The old method of installing colorKind still works fine_co_ thanks to the Knight of Backward Compat.  _lt_img alt_eq__qt__dd_)_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ data-emoticon_eq__qt__qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tRemember_co_ the missing faces are part of the design.  IndicesKind on the new vertexData object are working perfect.  Those are air vents.  It is a racing arrow_co_ and needs to stay cool at high speeds.  _lt_img alt_eq__qt__dd_)_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ data-emoticon_eq__qt__qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI hope everyone is well!  Point On!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-15T20:16:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The colorKind was added after 1.10 _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-04-16T00:00:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ahh_co_ thanks for the information_co_ DK!  No hassle for me at all.  Easily worked-around._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Ok_co_ but now_co_ I have a challenge from hell.  I put this function on a mesh of mine_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_// Wingnut playing_co_ trying to get hFrame01 to be both wireframe and not_co_ at the same time.hFrame01.bindAndDraw _eq_ function (subMesh_co_ effect_co_ wireframe) {\tvar indexToBind _eq_ hFrame01._indexBuffer_sm_\tvar indexToBind2 _eq_ subMesh.getLinesIndexBuffer(hFrame01._indices_co_ engine)_sm_\t// VBOs\tengine.bindMultiBuffers(hFrame01._vertexBuffers_co_ indexToBind_co_ effect)_sm_\tengine.bindMultiBuffers(hFrame01._vertexBuffers_co_ indexToBind2_co_ effect)_sm_\t// Draw order\tvar useTriangles _eq_ true_sm_\tengine.draw(useTriangles_co_ useTriangles ? subMesh.indexStart _dd_ 0_co_ useTriangles ? subMesh.indexCount _dd_ subMesh.linesIndexCount)_sm_\tvar useTriangles _eq_ false_sm_\tengine.draw(useTriangles_co_ useTriangles ? subMesh.indexStart _dd_ 0_co_ useTriangles ? subMesh.indexCount _dd_ subMesh.linesIndexCount)_sm_}  // Even if successful this way_co_ I would not see the wires. Same color as shaded faces._lt_/pre_gt__lt_p_gt_Of course_co_ it finishes in wireframe_co_ because the final time I call engine.draw_co_ I have useTriangles _eq_ false_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_u_gt__lt_strong_gt_Objective_dd__lt_/strong_gt__lt_/u_gt_  I would like to have a mesh draw _lt_u_gt_with_lt_/u_gt_ triangles_co_ and then have it re-drawn in wireframe atop_co_ in color choice black or white.  Can it be done?  Would it be useful to other users?  I do not want to use a texture with wires painted on it.  I want to see the real wireframe lines (indices) in user-choice of black or white_co_ over-layed atop the faces of the non-wireframe material._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The wires would need to be in black or white_co_ and drawn on top the faces._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Possible?  Nightmare?  Thoughts?  Thanks. (.wirediameter or .wirewidth would be fun_co_ too.)  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_material.wirewidth &lt_sm_float number&gt_sm__lt_/p_gt__lt_p_gt_material.wirecolor &lt_sm_Color3&gt_sm__lt_/p_gt__lt_p_gt_material.wireframe &lt_sm_true/false/also&gt_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Insane_co_ huh?  What?  You say _t_also_t_ is not a legal boolean?  Yeah_co_ I know.  hmmm._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-16T16:35:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Your code should work with just a slightly update. The wireframe should be drawn without the current material else you won_t_t see the wireframe_lt_/p_gt__lt_p_gt_i think you should change code when a mesh is rendered and re-launch a render with a white material using wireframe_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-04-16T19:02:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thx for the comments and help_co_ DK.  I think I understand..._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var boundermat1 _eq_ new BABYLON.StandardMaterial(_qt_boundermat_qt__co_ scene)_sm_boundermat1.diffuseColor _eq_ new BABYLON.Color3(1_co_0_co_0)_sm_boundermat1.specularColor _eq_ new BABYLON.Color3(1_co_1_co_1)_sm_boundermat1.wireframe _eq_ 0_sm_var boundermat2 _eq_ new BABYLON.StandardMaterial(_qt_boundermat2_qt__co_ scene)_sm_boundermat2.diffuseColor _eq_ new BABYLON.Color3(1_co_1_co_1)_sm_boundermat2.specularColor _eq_ new BABYLON.Color3(1_co_1_co_1)_sm_boundermat2.wireframe _eq_ 1_sm_var bound1 _eq_ new BABYLON.Bounder(_qt_bound1_qt__co_ scene_co_ 1)_sm_// bound1.convertToFlatShadedMesh()_sm_// Wingnut playing_co_ trying to get bound1 to be both wireframe and not_co_ at the same time.bound1.bindAndDraw _eq_ function (subMesh_co_ effect_co_ wireframe) {\tvar engine _eq_ bound1._scene.getEngine()_sm_\t// install red shaded material\tbound1.material _eq_ boundermat1_sm_\tvar indexToBind _eq_ bound1._indexBuffer_sm_\tvar useTriangles _eq_ true_sm_\tif (wireframe) {  // false\t\tindexToBind _eq_ subMesh.getLinesIndexBuffer(bound1._indices_co_ engine)_sm_\t\tuseTriangles _eq_ false_sm_\t}\t// VBOs\tengine.bindMultiBuffers(bound1._vertexBuffers_co_ indexToBind_co_ effect)_sm_\t// Draw\tengine.draw(useTriangles_co_ useTriangles ? subMesh.indexStart _dd_ 0_co_ useTriangles ? subMesh.indexCount _dd_ subMesh.linesIndexCount)_sm_\t// --------------\t// Change to a white wireframe material\tbound1.material _eq_ boundermat2_sm_\tif (wireframe) {  // true\t\tindexToBind _eq_ subMesh.getLinesIndexBuffer(bound1._indices_co_ engine)_sm_\t\tuseTriangles _eq_ false_sm_\t}\t// VBOs\tengine.bindMultiBuffers(bound1._vertexBuffers_co_ indexToBind_co_ effect)_sm_\t// Draw again - seems to erase first draw\tengine.draw(useTriangles_co_ useTriangles ? subMesh.indexStart _dd_ 0_co_ useTriangles ? subMesh.indexCount _dd_ subMesh.linesIndexCount)_sm_}_lt_/pre_gt__lt_p_gt_Ends in white wireframe with no shaded red beneath it. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_See any mistakes?  (thx)  Sadly_co_ I think the 2nd draw is erasing the 1st.  What a great idea_co_ though_co_ DK!  I can feel it _lt_u_gt_wanting_lt_/u_gt_ to work.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  Here is _lt_strong_gt__lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/plotting/bounder2/bounder02.htm_qt_ rel_eq__qt_external nofollow_qt__gt_a big fat demo that uses it_lt_/a_gt__lt_/u_gt__lt_/strong_gt_.  And _lt_strong_gt__lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/plotting/bounder2/bounder02.zip_qt_ rel_eq__qt_external nofollow_qt__gt_here is the zipped version_lt_/a_gt__lt_/u_gt__lt_/strong_gt_.  Its a fat pig.  Slow loader... because I kept all the positioning boxes active in the plotting laboratory.  The white wireframe mesh is the only mesh of concern.  Ignore the rest._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Btw_co_ page-up_co_ page-down (camera lift/drop) is active here.  So is _t_w_t_ for wireframe toggle.  So is ` key (upper left keyboard) for memorizing camera location (fails in IE11).  (yawn)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks for the try_co_ deltakosh.  Continued suggestions certainly welcome._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In case anyone cares_co_ _lt_strong_gt__lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/plotting/bounder2/js/bounder01.js_qt_ rel_eq__qt_external nofollow_qt__gt_bounder01.js_lt_/a_gt__lt_/u_gt__lt_/strong_gt_ is going to MAYBE be a new primitive for BJS (along with my arrow_co_ maybe).  It is a user-createable completely-dynamic bounding box... used to highlight meshes when they are clicked-on (and other times too).  It has user-settable width_co_ height_co_ depth_co_ padding-around-mesh (all 3 axis)_co_ arms-reach (all 3 axis)_co_ tubing size_co_ bounding frame material_co_ and mesh-fogging (highlighting) material.  It won_t_t have all those numbered blue boxes when finished_co_ though.  Those are only to help me do indices._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_As far as I know_co_ we don_t_t have a _qt_show bounding box_qt_ kind of thing... to highlight meshes-with (like when they are clicked-on).  This device will hopefully make that task easier. Maybe the bounder has too many vertices to be useful for anything.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_   Too complicated_co_ probably.  160 vertices for a _qt_mesh-selected_qt_ highlighting box?  Maybe that is ridiculous_co_ eh?  *nod*_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_BABYLON.Mesh.CreateBounder(name_co_ width_co_ height_co_ depth_co_ tubesize_co_ widthreach_co_ heightreach_co_ depthreach_co_ widthpadding_co_ heightpadding_co_ depthpadding_co_ scene_co_ updatable_co_ framematerial_co_ fillmaterial )  // last two are optional. Send it material_co_ or set materials after instantiation.  (Maybe the padding will be eliminated.  Not sure that I need it.  Just make the bounder bigger than the mesh.) _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What a project.  I think I am getting a tumor.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks again_co_ DK.  See mistakes?  Got more ideas?  I would love to hear them_co_ if/when you have time.  Party on!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-17T03:30:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You cannot do that at the level of bindAndDraw because the material must be applied before _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What about cloning your object ?_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var boundermat1 _eq_ new BABYLON.StandardMaterial(_qt_boundermat_qt__co_ scene)_sm_boundermat1.diffuseColor _eq_ new BABYLON.Color3(1_co_0_co_0)_sm_boundermat1.specularColor _eq_ new BABYLON.Color3(1_co_1_co_1)_sm_boundermat1.wireframe _eq_ 0_sm_var boundermat2 _eq_ new BABYLON.StandardMaterial(_qt_boundermat2_qt__co_ scene)_sm_boundermat2.diffuseColor _eq_ new BABYLON.Color3(1_co_1_co_1)_sm_boundermat2.specularColor _eq_ new BABYLON.Color3(1_co_1_co_1)_sm_boundermat2.wireframe _eq_ 1_sm_var bound1 _eq_ new BABYLON.Bounder(_qt_bound1_qt__co_ scene_co_ 1)_sm_var bound2 _eq_ bound1.clone(_qt_toto_qt_)_sm_bound1.material _eq_ boundermat1 _sm_bound2.material _eq_ boundermat2 _sm__lt_/pre_gt__lt_p_gt_BTW I was thinking about adding a .showBoundingBox property on meshes _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]