[{"Owner":"Converge","Date":"2018-01-09T20:24:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey everyone_co_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe are building an environment that contains many thin lines and grills. While in normal mode everything looks fine (with Babylon_t_s AA enabled)_co_ however after entering the VR mode (using the VRhelper) jagged edges become very apparent to the point that it_t_s impossible to distinct some of the details. I have made a few screenshots with test environment to demonstrate the problem. Solutions like FXAA plugged to post processing pipeline make everything blurrier and worse. I_t_m wondering why is it happening (stereo cameras are super low-res?) and is there a way to deal with it? It would be ok to take some performance hits and render everything internally in much higher resolution for example. What are the good practices for fighting the jagged edges in VR in general? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tMany thanks in advance! \n_lt_/p_gt_\n\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_01/VR_fullscreen.png.f9b7f94c2b0e18a51c414d777f66e469.png_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_16551_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_01/VR_fullscreen.thumb.png.57786021dc622c5ea359c13e8fab9dbe.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_VR_fullscreen.png_qt__gt__lt_/a_gt__lt_/p_gt_\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_01/normal_mode_fullscreen.PNG.7836f8da31eefe44ebd17928e07f9c31.PNG_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_16557_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_01/normal_mode_fullscreen.thumb.PNG.b3cbecb74d7c6c0bba263fc06e3c4389.PNG_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_normal_mode_fullscreen.PNG_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2018-01-10T11:30:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWelcome to the forum!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have a question - is it blurred inside the glasses_co_ or outside on the screen?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe VR devices have relatively good resolution nowadays. Could always be better_co_ but should look fine. And as you are using the same canvas_co_ AA should be the same as in a regular scene. The issue here_co_ however_co_ is that WebVR forces us to resize the canvas to the resolution of the VR device before streaming the data. Meaning_co_ the canvas_t_s size changes_co_ but not its real screen size. you can pack a 1000x1000 canvas in a 100x100 pixels container - it will look very bad on the screen_co_ but will still look ok in the glasses.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"max123","Date":"2018-01-10T11:49:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tSame thing happens with _lt_strong_gt_VRDeviceOrientationFreeCamera_lt_/strong_gt__co_ when _lt_strong_gt_compensateDistortion_lt_/strong_gt_ is set to true_dd_ antialiasing is just gone.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-01-10T17:35:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tcompensateDistortion has to rely on postprocesses and unless you are on webgl2 we cannot enable antialiasing on them\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Converge","Date":"2018-01-11T12:02:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_200909_qt_ data-ipsquote-contentid_eq__qt_34969_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1515583827_qt_ data-ipsquote-userid_eq__qt_10310_qt_ data-ipsquote-username_eq__qt_RaananW_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t22 hours ago_co_ RaananW said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tHi_co_ \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tWelcome to the forum!\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tI have a question - is it blurred inside the glasses_co_ or outside on the screen?\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThe VR devices have relatively good resolution nowadays. Could always be better_co_ but should look fine. And as you are using the same canvas_co_ AA should be the same as in a regular scene. The issue here_co_ however_co_ is that WebVR forces us to resize the canvas to the resolution of the VR device before streaming the data. Meaning_co_ the canvas_t_s size changes_co_ but not its real screen size. you can pack a 1000x1000 canvas in a 100x100 pixels container - it will look very bad on the screen_co_ but will still look ok in the glasses.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tHey_co_ thanks for the welcome! Original canvas takes 100% of the page so it_t_s technically a fullscreen. Pixel count shouldn_t_t be a problem here as far as I understand. Lines looked very jagged both on my display and windows mixed reality device (2k monitor_co_ 1440x1440 per eye on mixed reality). \n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_200914_qt_ data-ipsquote-contentid_eq__qt_34969_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1515584949_qt_ data-ipsquote-userid_eq__qt_23143_qt_ data-ipsquote-username_eq__qt_max123_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t22 hours ago_co_ max123 said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tSame thing happens with _lt_strong_gt_VRDeviceOrientationFreeCamera_lt_/strong_gt__co_ when _lt_strong_gt_compensateDistortion_lt_/strong_gt_ is set to true_dd_ antialiasing is just gone.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tYes_co_ disabling compensateDistortion in the constructor resulted in everything looking nice back again. \n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_200980_qt_ data-ipsquote-contentid_eq__qt_34969_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1515605744_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t18 hours ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tcompensateDistortion has to rely on postprocesses and unless you are on webgl2 we cannot enable antialiasing on them\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tCould you please elaborate what_t_s the problem here? PostProcess pipeline conflict? And how WebGL2 helps us to solve it? Would love to have a better understanding of this _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tThanks everyone! \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-01-11T22:24:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\twebgl1 does not support to enable antialiasing on render textures (used by post processes)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOn webgl2_co_ you can turn it on easily_dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#18QHZC#2_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#18QHZC#2_lt_/a_gt_ (check line _lt_span_gt_#23)_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"HoloLite","Date":"2018-02-01T23:47:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi everyone_co_ so is this problem solved ? How specifically ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve also noticed the jagged lines when viewing the scene inside the vr headset. I would like to see how this problem can be eliminated.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve tried applying the _lt_span style_eq__qt_float_dd_none_sm_background-color_dd_rgb(240_co_240_co_240)_sm_color_dd_rgb(68_co_68_co_68)_sm_font-family_dd_Inconsolata_sm_font-size_dd_16px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_300_sm_letter-spacing_dd_normal_sm_text-align_dd_left_sm_text-decoration_dd_none_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_pre_sm_word-spacing_dd_0px_sm__qt__gt_FxaaPostProcess on the vr camera_co_ but not getting any results._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p style_eq__qt_background-color_dd_transparent_sm_color_dd_rgb(53_co_60_co_65)_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_400_sm_letter-spacing_dd_normal_sm_text-align_dd_left_sm_text-decoration_dd_none_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]