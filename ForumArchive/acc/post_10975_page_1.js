[{"Owner":"Mimetis","Date":"2014-12-10T12:35:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi everyone !_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Today I want to show a pre-version of a pretty cool feature incoming in the _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js_qt_ rel_eq__qt_external nofollow_qt__gt_next version of BABYLON_lt_/a_gt_ _dd_ _lt_strong_gt_The easing functions_lt_/strong_gt_._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But before starting_co_ just to presenting myself_co_ I_t_m Sebastien_co_ I work for Microsoft France_co_ and like David and David_co_ I_t_m a technical evangelist._lt_/p_gt__lt_p_gt_Ok_co_ no more_co_ let_t_s start !_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You can add some behaviors to your animations_co_ using easing functions. If you want more informations about easing functions_co_ here are some useful links _dd__lt_/p_gt__lt_ul_gt__lt_li_gt__lt_a href_eq__qt_http_dd_//msdn.microsoft.com/en-us/library/ee308751.aspx_qt_ rel_eq__qt_external nofollow_qt__gt_MSDN Easing functions documentation_lt_/a_gt__lt_/li_gt__lt_li_gt__lt_a href_eq__qt_http_dd_//easings.net/fr_qt_ rel_eq__qt_external nofollow_qt__gt_Easing functions cheat sheet_lt_/a_gt__lt_/li_gt__lt_/ul_gt__lt_p_gt_All those easing functions are implemented in _lt_strong_gt_BABYLON _lt_/strong_gt_allowing you to apply custom mathematical formulas to your animations._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here is a small demonstration using the _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/babylon.2.0-alpha.debug.js_qt_ rel_eq__qt_external nofollow_qt__gt_2.0 alpha version of BABYLON_lt_/a_gt_ _dd_ _lt_a href_eq__qt_http_dd_//jsfiddle.net/897cjccg/3/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//jsfiddle.net/897cjccg/3/_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_img src_eq__qt_http_dd_//www.dotmim.com/sitefiles/babylon/torus.jpg_qt_ alt_eq__qt_torus.jpg_qt__gt__lt_/p_gt__lt_p_gt__lt_em_gt__lt_span style_eq__qt_font-size_dd_10px_sm__qt__gt_Ok A screenshot is not so obvious to show how an easing function work _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/span_gt__lt_/em_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here are the predefined easing functions you can use _dd_ _lt_/p_gt__lt_ul_gt__lt_li_gt_BABYLON.CircleEase()_lt_/li_gt__lt_li_gt_BABYLON.BackEase(amplitude)_lt_/li_gt__lt_li_gt_BABYLON.BounceEase(bounces_co_ bounciness)_lt_/li_gt__lt_li_gt_BABYLON.CubicEase()_lt_/li_gt__lt_li_gt_BABYLON.ElasticEase(oscillations_co_ springiness)_lt_/li_gt__lt_li_gt_BABYLON.ExponentialEase(exponent)_lt_/li_gt__lt_li_gt_BABYLON.PowerEase(power)_lt_/li_gt__lt_li_gt_BABYLON.QuadraticEase()_lt_/li_gt__lt_li_gt_BABYLON.QuarticEase()_lt_/li_gt__lt_li_gt_BABYLON.QuinticEase()_lt_/li_gt__lt_li_gt_BABYLON.SineEase()_lt_/li_gt__lt_/ul_gt__lt_p_gt_You can use the _lt_strong_gt_EasingMode _lt_/strong_gt_property to alter how the easing function behaves_co_ that is_co_ change how the animation interpolates. There are three possible values you can give for EasingMode_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_ul_gt__lt_li_gt_BABYLON.EasingFunction.EASINGMODE_EASEIN  _dd_ Interpolation follows the mathematical formula associated with the easing function._lt_/li_gt__lt_li_gt_BABYLON.EasingFunction.EASINGMODE_EASEOUT  _dd_ Interpolation follows 100% interpolation minus the output of the formula associated with the easing function._lt_/li_gt__lt_li_gt_BABYLON.EasingFunction.EASINGMODE_EASEINOUT  _dd_ Interpolation uses EaseIn for the first half of the animation and EaseOut for the second half._lt_/li_gt__lt_/ul_gt__lt_p_gt_Here is a straightforward sample to animate a torus within a _lt_strong_gt_CirleEase _lt_/strong_gt_easing function _dd__lt_br_gt_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_//Create a Vector3 animation at 30 FPSvar animationTorus _eq_ new BABYLON.Animation(_qt_torusEasingAnimation_qt__co_ _qt_position_qt__co_ 30_co_                      BABYLON.Animation.ANIMATIONTYPE_VECTOR3_co_ BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE)_sm_// the torus destination positionvar nextPos _eq_ torus.position.add(new BABYLON.Vector3(-80_co_ 0_co_ 0))_sm_// Animation keysvar keysTorus _eq_ []_sm_keysTorus.push({ frame_dd_ 0_co_ value_dd_ torus.position })_sm_keysTorus.push({ frame_dd_ 120_co_ value_dd_ nextPos })_sm_animationTorus.setKeys(keysTorus)_sm_// Creating an easing functionvar easingFunction _eq_ new BABYLON.CircleEase()_sm_// For each easing function_co_ you can choose beetween EASEIN (default)_co_ EASEOUT_co_ EASEINOUTeasingFunction.setEasingMode(BABYLON.EasingFunction.EASINGMODE_EASEINOUT)_sm_// Adding the easing function to the animationanimationTorus.setEasingFunction(easingFunction)_sm_// Adding animation to my torus animations collectiontorus.animations.push(animationTorus)_sm_//Finally_co_ launch animations on torus_co_ from key 0 to key 120 with loop activatedscene.beginAnimation(torus_co_ 0_co_ 120_co_ true)_sm__lt_/pre_gt__lt_p_gt_You can play with bezier curve algorithm too_co_ using the_lt_strong_gt_ BezierCurveEase(x1_co_ y1_co_ x2_co_ y2)_lt_/strong_gt_ function. For purpose_co_ here is a good reference to create your curve algorithm _dd_ _lt_a href_eq__qt_http_dd_//cubic-bezier.com_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//cubic-bezier.com_lt_/a_gt__lt_br_gt_ _lt_br_gt_Here is a pretty cool implementation using the bezier curve algorithm _dd__lt_br_gt_ _lt_br_gt_ _lt_br_gt__lt_img src_eq__qt_http_dd_//dotmim.com/sitefiles/babylon/bezier.jpg_qt_ alt_eq__qt_bezier.jpg_qt__gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var bezierEase _eq_ new BABYLON.BezierCurveEase(0.32_co_ -0.73_co_ 0.69_co_ 1.59)_sm__lt_/pre_gt__lt_p_gt_Finally_co_ you can extend the _lt_strong_gt_EasingFunction _lt_/strong_gt_base function to create your own easing function_co_ like this _dd__lt_br_gt_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var FunnyEase _eq_ (function (_super) {    __extends(FunnyEase_co_ _super)_sm_    function FunnyEase() {        _super.apply(this_co_ arguments)_sm_    }    FunnyEase.prototype.easeInCore _eq_ function (gradient) {        // Here is the core method you should change to make your own Easing Function        // Gradient is the percent of value change        return Math.pow(Math.pow(gradient_co_ 4)_co_ gradient)_sm_    }_sm_    return FunnyEase_sm_})(BABYLON.EasingFunction)_sm__lt_/pre_gt__lt_p_gt_I really hope you will enjoy this new feature_co_ and that you will create some cool animations in your games _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Sebastien_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2014-12-10T12:46:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Awesome!! It was really missing in Babylon_co_ and I can_t_t wait to try it _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-12-10T12:51:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Wow this has have interest._lt_/p_gt__lt_p_gt_You should do a tutorial on the wiki and an example on the playground._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Mimetis","Date":"2014-12-10T12:54:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Wiki is already ready_co_ you will find the tutorial in the animation section of the wiki _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/wiki/07-Animation_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/wiki/07-Animation_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The playground will be updated when the next version of BABYLON will be release _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Sebastien_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-12-10T13:04:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thank you Mimetis_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-12-10T14:21:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Fantastic!  What a great piece of work_co_ Mimetis_co_ and welcome!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]