[{"Owner":"jerome","Date":"2015-09-13T09:35:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Since we have now the new CreateXXX() methods_co_ I would like to implement tha ability for the user to set its own UVs per face of a box with CreateBox()._lt_/p_gt__lt_p_gt_A bit like you can set the UVs per particle in the SPS _dd_  _lt_a href_eq__qt_https_dd_//github.com/BabylonJSX/SolidParticleSystem_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJSX/SolidParticleSystem_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This would be a set a of 4 values per face [utop_co_ Vtop_co_ Ubottom_co_ Vbottom] (_qt_top_qt_ is top left corner_co_ _qt_bottom_qt_ the bottom right one). So 6 sets of 4 values for a box._lt_/p_gt__lt_p_gt_U and V values will be in the range [0_co_ 1]_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What will this be useful to ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_With such a parameter_co_ you could load only one texture for the box. This texture could be a picture with different images a bit like an texture atlas. You could then choose what image should be displayed onto what face at the mesh creation._lt_/p_gt__lt_p_gt_Easy and quick _dd_ no need to play then with multimaterials_co_ submeshes_co_ etc although they keep obviously their utility._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So how would you call such a parameter and how would you structure it ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_suggestion _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_options.faceUV _eq_ [ [ut0_co_ vt0_co_ ub0_co_ vb0]_co_ [ut1_co_ vt1_co_ ub1_co_ vb1]_co_ ... [ut5_co_ vt5_co_ ub5_co_ vb5] ]_sm_// an array of 6 quadruplet arrays _dd_ one quadruplet per face of the box ? _lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2015-09-13T15:15:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_As someone who is still swimming on the surface of BJS and am currently only just getting my face wet and maybe thinking of snorkeling but enjoying watching you deep sea divers at work I would like something along the lines of_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_mesh.paintFaces([image1_co_ image2_co_ image3_co_ image4_co_ image5_co_ image6]) for a box_lt_/p_gt__lt_p_gt_mesh.paintFaces([image1_co_ image2_co_ image3]) for a cylinder_lt_/p_gt__lt_p_gt_mesh.paintFaces(image1) for a sphere_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I would imagine the scuba divers would like your suggestion._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MidnightCow","Date":"2015-09-13T15:39:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Probably using pixel positions on the image rather than uv-style 0-1_co_ because it would make it easier for texture creation_co_ and rather than passing values like 0.324565 etc you_t_d be using more readable integers..  And the uvFace could do the conversion to UV behind the scenes._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So like_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_mymesh.faceUV[0] _eq_ [0_co_0_co_20_co_20]_sm__lt_/p_gt__lt_p_gt_mymesh.faceUV[1] _eq_ [20_co_0_co_40_co_20]_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Etc..  Or_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_mymesh.faceUV _eq_ [[0_co_0_co_20_co_20]_co_[2_co_0_co_40_co_20]_co_...etc]_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-13T16:23:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_thank you for your suggestions_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@MidnightCow _dd_ having ratios (0-1) instead of pixel positions allows to work with any image size _lt_/p_gt__lt_p_gt_@JohnK _dd_ I like your readable and easy to code suggestion but...._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_this _lt_em_gt__qt_but_qt__lt_/em_gt_ concerns both of your suggestions. I think it_t_s my fault _dd_ when I said this new parameter could easily paint a box face with an image positioned in single picture file_co_ it was just an example about what this feature could bring._lt_/p_gt__lt_p_gt_remember in the SPS _dd_ a texture from an atlas per particle  _eq_&gt_sm_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2KSQ1R%2338_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2KSQ1R#38_lt_/a_gt__lt_/p_gt__lt_p_gt_Actually it would be far more powerful than just painting a box face with a dedicated image _dd_ it would allow to do_co_ well_co_ whatever you want about texturing per face !_lt_/p_gt__lt_p_gt_SPS again _dd_ playing with the same image on each particle_co_ different shift _eq_&gt_sm_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2KSQ1R%2333_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2KSQ1R#33_lt_/a_gt__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2KSQ1R%2334_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2KSQ1R#34_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_That_t_s why I wouldn_t_t reduct its behavior (and its name) to something like _dd_ _qt_please just paint this face with this image set at these coordinates in the picture file_qt_.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-09-14T01:30:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_an array of vector4 should be enough I guess_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-14T11:24:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok_co_ let_t_s go for_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_options.faceUV[0] _eq_ vector4_var1_sm_...options.faceUV[5] _eq_ vector4_var5_sm__lt_/pre_gt__lt_p_gt_with vector4 _eq_ (Utop_co_ Vtop_co_ Ubottom_co_ Vbottom) like  defined in the first post_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I propose that each element of _lt_em_gt_faceUV_lt_/em_gt_ will be set by default to _dd_ _lt_em_gt_new Vector4(0_co_0_co_1_co_1) _co_ _lt_/em_gt_so everyone will be able to change directly only one face UV_lt_/p_gt__lt_p_gt_ex _dd_ face 3_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_options.faceUV[3].x _eq_ 0.3_sm_options.faceUV[3].y _eq_ 0.3_sm_options.faceUV[3].z _eq_ 0.6_sm_options.faceUV[3].w _eq_ 0.6_sm__lt_/pre_gt__lt_p_gt_this would display on face 3 only the part of the texture from 30% up and left to 60 % right and bottom (% from texture total width and height)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_just need to find a little time to do this now _sm_-)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-14T15:03:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_PRed_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_easy usage !_lt_/p_gt__lt_p_gt_Example _dd_ you want a different UV than the default one (0_co_0_co_1_co_1) for the box face 1_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var faceUV _eq_ new Array(6)_sm_faceUV[1] _eq_ new BABYLON.Vector4(0.5_co_ 0.5_co_ 0.6_co_ 0.6)_sm_var options _eq_ { width_dd_ 10_co_ height_dd_ 3_co_ depth_dd_ 5_co_ faceUV_dd_  faceUV }_sm_var box _eq_ BABYLON.Mesh.CreateBox(_t_box_t__co_ options_co_ scene)_sm__lt_/pre_gt__lt_p_gt_Imagine now your loaded texture is an atlas with 4 rows ot 6 sprites like this one _dd_ _lt_a href_eq__qt_http_dd_//jerome.bousquie.fr/BJS/images/spriteAtlas.png_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//jerome.bousquie.fr/BJS/images/spriteAtlas.png_lt_/a_gt__lt_/p_gt__lt_p_gt_and you want a different sprite per face _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_  var hSpriteNb _eq_  6_sm_  // 6 sprites per raw  var vSpriteNb _eq_  4_sm_  // 4 sprite raws  var faceUV _eq_ new Array(6)_sm_  for (var i _eq_ 0_sm_ i &lt_sm_ 6_sm_ i++) {    faceUV[i] _eq_ new BABYLON.Vector4(i/hSpriteNb_co_ i/vSpriteNb_co_ (i+1)/hSpriteNb_co_ (i+1)/vSpriteNb)_sm_  }var options _eq_ { width_dd_ 10_co_ height_dd_ 3_co_ depth_dd_ 5_co_ faceUV_dd_ faceUV }_sm_var box _eq_ BABYLON.Mesh.CreateBox(_t_box_t__co_ options_co_ scene)_sm__lt_/pre_gt__lt_p_gt_That_t_s all... no need to play anymore with submeshes and multimaterials _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I will do a PG to show this once it will be pushed in the PG engine._lt_/p_gt__lt_pre_gt__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-15T07:32:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Something funnier and as easy to do_lt_/p_gt__lt_p_gt_Say_co_ you want to flip horizontally the image only on one face _dd_ just swap x and z values_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_example _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_  var hSpriteNb _eq_  6_sm_  // 6 sprites per raw  var vSpriteNb _eq_  4_sm_  // 4 sprite raws  var faceUV _eq_ new Array(6)_sm_  for (var i _eq_ 0_sm_ i &lt_sm_ 6_sm_ i++) {    faceUV[i] _eq_ new BABYLON.Vector4(i/hSpriteNb_co_ i/vSpriteNb_co_ (i+1)/hSpriteNb_co_ (i+1)/vSpriteNb)_sm_  }// flip the image on face 1var f _eq_ 1_sm_var temp _eq_ faceUV[f].x_sm_faceUV[f].x _eq_ faceUV[f].z_sm_faceUV[f].z _eq_ temp_sm_var options _eq_ { width_dd_ 10_co_ height_dd_ 3_co_ depth_dd_ 5_co_ faceUV_dd_ faceUV }_sm_var box _eq_ BABYLON.Mesh.CreateBox(_t_box_t__co_ options_co_ scene)_sm__lt_/pre_gt__lt_p_gt__lt_span_gt_done _dd_-)_lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span_gt_note _dd_ just swap y and w values for vertical flip... _qt_horizontal_qt_ and _qt_vertical_qt_ are relative to the initial image of course_co_ not to the face_lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]