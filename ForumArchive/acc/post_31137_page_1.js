[{"Owner":"Fedor","Date":"2017-06-18T09:31:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tStill working on my sculpting tool_co_ I am now testing basic texture paint functions.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am using a single dynamictexture that is only updated just before rendering IF anything has been painted. When I keep the texture small - say 1024^2 -_co_ the speed is reasonable_co_ when increasing it - to 4096^2 - performance drops dramatically.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am pretty sure it is not the drawing functions or the canvas_co_ I have created applications in the past that draw much more in a single frame then I do now. (see _lt_a href_eq__qt_http_dd_//www.traxeditor.com_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.traxeditor.com_lt_/a_gt_ if you like)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt looks like it is the Dynamictexture update() method. Does anyone have any ideas how to speed it up or work around it? Is there an other way to paint the texture?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"inteja","Date":"2017-06-18T10:32:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tSorry I don_t_t have any insights into DynamicTexture update() but could you use smaller texture tiles (like in Google Maps for instance) where each small texture is only copied to the correct location on the larger texture on pen up or when pen down moves into next tile? Or possibly the larger texture only needs to be created on save. I suspect using many smaller tiles like this would increase performance.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-06-18T11:43:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tActually when you use a 4096² dynamicTexture_co_ you use also an underlying canvas 2d sized at 4096² from the html5 context 2d canvas API. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you update this texture each frame_co_ you clear and redraw this underlying 2d canvas each frame. This operation may be not that fast depending on the canvas 2d implementation of your browser. Anyway it_t_s always far more slower than the identical operation in genuine webGL.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe should you either not redraw the canvas each frame_co_ etiher use a small canvas_co_ etiher ... both _dd_-)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"NasimiAsl","Date":"2017-06-18T11:47:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tyou most stop drawing in each frame that is last solution\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Fedor","Date":"2017-06-18T12:56:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5453_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/_qt_ rel_eq__qt__qt__gt_@jerome_lt_/a_gt_ and _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/13038-nasimiasl/?do_eq_hovercard_qt_ data-mentionid_eq__qt_13038_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/13038-nasimiasl/_qt_ rel_eq__qt__qt__gt_@NasimiAsl_lt_/a_gt_ my application does not clean the canvas or redraws a lot - it just ad the last brush strokes on the canvas. This involves drawing the brush image 30 times on average per frame. This is nothing to the canvas element performance wise. The size of the canvas does not really affect performance while drawing.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI did test _t_stop drawing each frame_t__co_ now using update() at certain intervals. Here are some benchmarks_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAction_dd_ continuous drawing by holding down the mouse button and moving it over the mesh_co_ measured on Firefox\n_lt_/p_gt_\n\n_lt_ol_gt__lt_li_gt_\n\t\tDrawing on 1024 texture_co_ update every frame (provided something has been drawn)_dd_ around 20FPS_co_ allmost smooth\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tDrawing on 4096 texture_co_ update every frame (provided something has been drawn)_dd_ around 5FPS_co_ drawing stutters\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tDrawing on 4096 texture_co_ update only every 100ms_dd_ 3FPS (15FPS on Chrome)_co_ drawing stutters heavily\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tDrawing on 4096 texture_co_ update only every 200ms_dd_ 5FPS_co_ drawing stutters heavily\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tDrawing on 4096 texture_co_ update only every 500ms_dd_ 8FPS_co_ drawing stutters heavily\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tDrawing on 4096 texture_co_ not updating at all_dd_ 20FPS_co_ but we don_t_t see any results \n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tDrawing on 4096 texture_co_ not updating and drawing commented out in the onMouseMove_dd_ ALSO 20FPS (same on Chrome)_co_ but we don_t_t see any results  \n\t_lt_/li_gt_\n_lt_/ol_gt__lt_p_gt_\n\tI took the frame rate from the debuging layer. It looks like texture update is not the only problem. Holding the mouse button down somehow also eats a lot of time. But it could also be the scene.pick(scene.pointerX_co_ scene.pointerY)-function which I had not commented out. Tested that_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t8. Drawing on 4096 texture_co_ not updating and drawing commented AND picking out in the onMouseMove_dd_ 45FPS (55FPS on Chrome) --- WOW!!!!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTested it a second and third time. Looks like Picking is even more time consuming! I_t_m now trying to mock up a demo in Playground to proof it and allow further investigation.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-06-18T18:43:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\ta PG to investigate what you mean would be nice _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Fedor","Date":"2017-06-18T18:54:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWorking on it...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Fedor","Date":"2017-06-18T20:23:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tGot it_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#460BZJ%2312_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#460BZJ#12_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOn my machine the frame rate of this example is around 8FPS.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-06-19T04:32:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tthis is a good start to investigate (althoug your PG doesn_t_t fit the usual standard with the function createScene() to be sure to be rightly evaluated by the PG engine). As you can see in this example (sps + rollover) _dd_  _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2FPT1A%2368_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2FPT1A#68_lt_/a_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tthe pickInfo obejct_co_ what emit a ray_co_ can be called each frame in the render loop without a significative FPS loss. So I suppose all this will need some profiling to get where the time is spent.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Fedor","Date":"2017-06-19T04:46:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tDo you base that conclusion_co_ that Picking can be called every frame_co_ on this example? There is a difference_dd_ this scene has a lot of objects with each just a few faces. My scene only has one object with a lot of faces. That may be significant.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI tested it and put the picking function in the draw function so it is now executed every frame. Frame rate when doing nothing drops from 60FPS to around 40FPS. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#460BZJ%2313_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#460BZJ#13_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut in a sence you are right_co_ it is not the only problem... I tried switching of the texture.update() (which fired every 10th second) and the FPS went back to 60_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#460BZJ%2314_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#460BZJ#14_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"sable","Date":"2017-06-19T05:00:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_s_gt_Stopping the default render loop (Line 63) speeds this up quite a bit for me_co_ from about 25fps when moving mouse over the sphere to 60fps. _lt_/s_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_s_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#460BZJ%2315_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#460BZJ#15_lt_/a_gt__lt_/s_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEdit_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tActually that just caused the fps to stop updating. But the double render prob isn_t_t helping anyway.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLooks like you_t_re right regarding faces being the issue_co_ as if fastcheck is not enabled_co_ it will loop over every single one ( see _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.subMesh.ts#L218_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.subMesh.ts#L218_lt_/a_gt_)_co_ which is over a million in your pg.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"NasimiAsl","Date":"2017-06-19T07:52:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#U6GDTV%2312_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#U6GDTV#12_lt_/a_gt_ move with right click\n_lt_/p_gt_\n\n_lt_p_gt_\n\tmanage drawing in second loop \n_lt_/p_gt_\n\n_lt_p_gt_\n\tin move state _dd_ interval _dd_ 50 - size_dd_ 256\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t2 texture _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#U6GDTV%2318_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#U6GDTV#18_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\twith normal _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#U6GDTV%2321_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#U6GDTV#21_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_13455_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_06/Untitled.png.ed1a12515545e3a72727e6525c733649.png_qt_ alt_eq__qt_Untitled.png.ed1a12515545e3a72727e6525c733649.png_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"NasimiAsl","Date":"2017-06-19T18:10:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#U6GDTV%2322_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#U6GDTV#22_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tfixed bug\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Fedor","Date":"2017-06-19T19:26:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOk_co_ but in fact I am doing the same_dd_ the texture.update is my example is also in it_t_s own loop...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd you leave out Picking here_co_ which seems to be the biggest problem...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Fedor","Date":"2017-06-20T19:05:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/24742-sable/?do_eq_hovercard_qt_ data-mentionid_eq__qt_24742_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/24742-sable/_qt_ rel_eq__qt__qt__gt_@sable_lt_/a_gt__co_ Fastcheck does not help me here. I need accuracy when picking UV coordinates. Fastcheck does picking using only the bounding box.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd what do you mean with the double render - I have one scene.render() in the code...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-06-20T19:08:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe PG engine already calls scene.render() for you.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe PG engine only expects that you create a function called createScene() returning a Scene object. All the rest is done_co_ run_co_ managed by the PG engine.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tvar createScene _eq_ function() {  // stuff_sm_ return scene_sm_ }\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlease have a look as the basic PG code skeleton _dd_ _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Fedor","Date":"2017-06-20T19:33:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThat helps... for the PG example...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/index2_5.html#460BZJ%2317_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/index2_5.html#460BZJ#17_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]