[{"Owner":"Cytexx","Date":"2018-05-17T15:45:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey Folks_co_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m pretty new to Babylon JS so don_t_t be too rude. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn a project I_t_m currently working on_co_ I stumbled over the problem_co_ that my Code doesn_t_t seem to run correctly in any other Browser than Chrome. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe initial positioning is fine. But then I reposition vertices with_dd_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t                      var positionsRightedge _eq_ rightSink.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm__lt_br /_gt_\n\t                      for(var q _eq_ 0_sm_ q &lt_sm_ innerFace.length_sm_ q++){_lt_br /_gt_\n\t                        positionsRightedge[innerFace[q]] _eq_ 0.5_sm__lt_br /_gt_\n\t                      }_lt_br /_gt_\n\t                      rightSink.setVerticesData(BABYLON.VertexBuffer.PositionKind_co_ positionsRightedge)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd the outcome isn_t_t the desired one. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs there maybe a difference in World-Space-Calculation across the browsers or anything like this? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf more code or examples are needed I will provide them.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHope someone recognizes the problem and can help _lt_span_gt__dd_) _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Best regards_co__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Cytexx_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-05-17T16:36:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFirst welcome!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis should work exactly the same way everywhere. Can you reproduce the issue here_dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Cytexx","Date":"2018-05-22T08:21:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey_co_ _lt_br /_gt_\n\tsorry for the late reply couldn_t_t get access to my data because i was not in office. _lt_br /_gt_\n\tI can_t_t reproduce the issue on the playground because I use custom models and it seems to be a general problem in my code or smthing like this. _lt_br /_gt_\n\tI can provide those screenshots_dd_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd an example from my code_dd_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t             var bottom _eq_ newScene.getMeshByName(_t_bottom_t_)_sm_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t             var rightSink _eq_ newScene.getMeshByName(_t_rightSink_t_)_sm__lt_br /_gt_\n\t             var leftSink _eq_ newScene.getMeshByName(_t_leftSink_t_)_sm__lt_br /_gt_\n\t             var originalPositions _eq_ bottom.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm__lt_br /_gt_\n\t             var outerFace _eq_ [0_co_ 3_co_ 6_co_ 9_co_ 18_co_ 21_co_ 30_co_ 33_co_ 42_co_ 45_co_ 54_co_ 57]_sm__lt_br /_gt_\n\t             var innerFace _eq_ [12_co_ 15_co_ 24_co_ 27_co_ 36_co_ 39_co_ 48_co_ 51]_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_o_1ce3ekcfg1iqv76m1707fs914arh_qt_ src_eq__qt__qt_ alt_eq__qt__qt_ /_gt__lt_br /_gt_\n\tfor(var i _eq_ 0_sm_ i &lt_sm_ 24_sm_ i++){_lt_br /_gt_\n\t                        var actualPosBottom _eq_ new BABYLON.Vector3(originalPositions[i*3]*value_co_ originalPositions[i*3+1]*value_co_ originalPositions[i*3+2]*value)_sm__lt_br /_gt_\n\t                        if( (i+3) % 3 _eq__eq_ 0){_lt_br /_gt_\n\t                          var positionsRightedge _eq_ rightSink.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm__lt_br /_gt_\n\t                          for(var q _eq_ 0_sm_ q &lt_sm_ outerFace.length_sm_ q++){_lt_br /_gt_\n\t                            positionsRightedge[outerFace[q]] _eq_ -actualPosBottom.x_sm__lt_br /_gt_\n\t                          }_lt_br /_gt_\n\t                          rightSink.setVerticesData(BABYLON.VertexBuffer.PositionKind_co_ positionsRightedge)_sm__lt_br /_gt_\n\t                          var positionsLeftedge _eq_ leftSink.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm__lt_br /_gt_\n\t                          for(var q _eq_ 0_sm_ q &lt_sm_ outerFace.length_sm_ q++){_lt_br /_gt_\n\t                            positionsLeftedge[outerFace[q]] _eq_ actualPosBottom.x_sm__lt_br /_gt_\n\t                          }_lt_br /_gt_\n\t                          leftSink.setVerticesData(BABYLON.VertexBuffer.PositionKind_co_ positionsLeftedge)_sm__lt_br /_gt_\n\t                        }_lt_br /_gt_\n\t                      }\n_lt_/p_gt_\n\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_05/problem.jpg.62c9059d0608a7535fa4f9967c773aab.jpg_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_18368_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_05/problem.thumb.jpg.2cb0d3755273b7c70f4f3e312595579c.jpg_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_problem.jpg_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-05-22T15:36:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tno error in the console?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-05-22T16:44:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMaybe_co_ because you did not say the vertices were update-able_co_ in the original setVertices().  Are you using a .babylon_co_ if so that is the case.  Then maybe chrome just kind of ignores this_co_ but others are not so leniant?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt is just a theory.  If it is found to be the case_co_ I know there is a topic about converting vertices from a .babylon to updateable.  Try searching.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Cytexx","Date":"2018-05-23T07:55:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOk_co_ it was just my stupidity because the Mesh had not the right scaling and no deleted history within Maya. _lt_br /_gt_\n\tBut after that I uploaded my whole thing on our server and it blew up again._lt_br /_gt_\n\tSomehow the overall world-matrix seems to be different. _lt_br /_gt_\n\tOn my local network it runs correctly as described above_co_ but after the upload on the server it looks like this_dd_ _lt_br /_gt_\n\t_lt_a href_eq__qt_http_dd_//www.virtualkoeln.de/projects/max/babylonjs/index2.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.virtualkoeln.de/projects/max/babylonjs/index2.html_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]