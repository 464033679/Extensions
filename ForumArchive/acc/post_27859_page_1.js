[{"Owner":"binki","Date":"2017-01-21T02:26:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWhen I look at the docs for [Scene.createCompoundImpostor](_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/2.5/Scene#createcompoundimpostor-parts-options-rarr-any_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/classes/2.5/Scene#createcompoundimpostor-parts-options-rarr-any)_co_ it says that it’s deprecated without any explanation about what I should be using instead. [in the source](_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/a39bc290e505bd2ced0fa1c3fa5bf346b84d88bf/src/babylon.scene.ts#L3089_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/a39bc290e505bd2ced0fa1c3fa5bf346b84d88bf/src/babylon.scene.ts#L3089) I see the same thing—a mark of deprecation with no explanation._lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs there an example of how to create compound impostors? E.g._co_ can I get two or more spheres to be tied together as if there were such a thing as a rigid joint constraint without using the deprecated function or physicsBody hacks?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"binki","Date":"2017-01-21T02:38:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tFWIW_co_ here’s my attempt at unrolling the code from createCompoundImpostor_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2HLXWU%230_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2HLXWU#0 But as you can see_co_ the sphereChild doesn’t collide with the ground like I expect it to._lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2017-01-21T03:53:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/?do_eq_hovercard_qt_ data-mentionid_eq__qt_10310_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/_qt_ rel_eq__qt__qt__gt_@RaananW_lt_/a_gt_ will be your man on this one _dd_-)\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"binki","Date":"2017-01-21T05:23:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOh_co_ seems like the code requires you to write to `AbstractMesh.physicsImpostor` because it just does. If it is really required to write to `AbstractMesh.physicsImpostor`_co_ why doesn’t `new PhysicsImpostor()` just do that for you? It’s sort of confusing in the same way that requiring you to call `PhysicsImpostor.forceUpdate()` is.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnother question_dd_ why does making a compound impostor require this parent-child relationship? Shouldn’t all of the impostors be siblings instead of arbitrarily choosing one as the parent? I can sort of see that there should be a parent (as the compound impostor thing sort of eats the child impostors)_co_ but it seems weird that one of the child Mesh object has to be the root of the compound grouping. Is there a way to group the spheres without any of them being the parent and using some non-Mesh grouping thing (or something like `AbstractMesh` as a grouping thing?) to group them together in a more logical way?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs there a way to set a mesh’s parent without having to remember things like “I need to call `parent.physicsImpostor.forceUpdate()` whenver I do this”?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"binki","Date":"2017-01-21T05:23:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOh_co_ my updated playground_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2HLXWU%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2HLXWU#2_lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-01-24T13:49:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\they!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSorry_co_ I am busy as always!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ compound impostors are now being implementing using babylon_t_s parenting system.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tan object with an impostor that has a child with an impostor_co_ will be a compound of them both. Does it make sense?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe thing with the force update - it is not needed_co_ when you create your impostors after setting the parent attribute. So_co_ updating your playground - _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2HLXWU%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2HLXWU#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHope it helps_co_ and I do hope I actually answered the question...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"binki","Date":"2017-02-05T01:48:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for the comments.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI still find it confusing that I have to choose one of the meshes to be the parent just to get a compound impostor. Is there a non-mesh grouping object I could use as the parent instead of a mesh with an impostor attached?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ it is confusing that the parenting system requires an exact sequence in setting the physicsImpostor on the parent and child (i.e._co_ child must be set first). Shouldn’t it not matter and you be able to recompose arbitrary groups of meshes into/out of compound impostor groupings? The parent/child of BabylonJS without physics is a lot less constrained than when using physics. But if you start using impostors and expecting things to work when you parent things_co_ suddenly you have to follow rules such as the sequence you set impostors. It seems like the type system/API makes it easy to do things that won’t work with the new way _sm_-).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe some of these issues could be resolved with documentation updates.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-02-08T00:38:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi guys!  This is some heavy thinking_co_ here.  Binki_co_ I feel your pain and curiosity.  Here_t_s my take.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe best compound impostor... is made-of various other impostors... which are cooperating (grouped).  But_co_ think about that.  When two sphereImpostors are linked/jointed together_co_ they are in battle.  So_co_ to build a compound impostor_co_ it is more sane to _qt_sum_qt_ the area of the two shapes_co_ and attach a box impostor of THAT general size.  Since ONE of the two shapes will be ONE _qt_extent_qt_ of this new _qt_summed low-detail boxImpostor_qt__co_ we might as well use it as the _qt_master_qt_ of the compoundImpostor.  I think this is why ONE of the shape-parts... is used as the master.  It is considered a boundingBox _lt_em_gt_extent_lt_/em_gt_ (one edge/corner of the new derived bounding area).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOR_co_ I could be completely wrong!   _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tHas anyone ever wondered... what would happen... if child mesh overlapped parent mesh? (both physics-active) \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou know how those darned impostors HATE being inside one another_co_ and prefer to _qt_spit-out_qt_ each other?  Coooool.  Would one impostor be put into constant _qt_barf it out_qt_ mode_co_ while the parenting says... _qt_you ain_t_t going nowhere_co_ overlapped child impostor_qt_.  Parent-child wars!  CPU mega-chow!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPretty soon your browser_t_s immune system would start breaking-down_co_ and then... blue screen of death!  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\terr... okay_co_ maybe not that.  Good questions/thinkings_co_ Binki!   Gotta think about... _qt_What IS compounding?_qt_  When the sphere impostor is attached to the box impostor... don_t_t you lose the best features of _lt_strong_gt_both_lt_/strong_gt_?  Really_co_ they should be distance-jointed together_co_ so sphere keeps its sphere-ness physics_co_ and box keeps its box-ness physics.  _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_  Even then... that joint... hurts the box and the sphere.  They are both hands-tied... so they can_t_t roll with the flow.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tOver in another thread_co_ I think _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/25374-hans/?do_eq_hovercard_qt_ data-mentionid_eq__qt_25374_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/25374-hans/_qt_ rel_eq__qt__qt__gt_@Hans_lt_/a_gt_ and I discovered that we shouldn_t_t ever scale the parent_co_ but that_t_s all I have learned.  (I hope you weren_t_t expecting anything wonderful from me)  heh\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-02-23T08:07:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_162173_qt_ data-ipsquote-contentid_eq__qt_27859_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1486259320_qt_ data-ipsquote-userid_eq__qt_25335_qt_ data-ipsquote-username_eq__qt_binki_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 2/5/2017 at 2_dd_48 AM_co_ binki said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThanks for the comments.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tI still find it confusing that I have to choose one of the meshes to be the parent just to get a compound impostor. Is there a non-mesh grouping object I could use as the parent instead of a mesh with an impostor attached?\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tAlso_co_ it is confusing that the parenting system requires an exact sequence in setting the physicsImpostor on the parent and child (i.e._co_ child must be set first). Shouldn’t it not matter and you be able to recompose arbitrary groups of meshes into/out of compound impostor groupings? The parent/child of BabylonJS without physics is a lot less constrained than when using physics. But if you start using impostors and expecting things to work when you parent things_co_ suddenly you have to follow rules such as the sequence you set impostors. It seems like the type system/API makes it easy to do things that won’t work with the new way _sm_-).\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tMaybe some of these issues could be resolved with documentation updates.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tBeing the one who implemented this_co_ I can tell you I think you are (partly) right. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere were a few architecture decisions that had to be made while implementing the compound system. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI understand what you are saying_co_ I_t_ll try thinning of a solution. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]