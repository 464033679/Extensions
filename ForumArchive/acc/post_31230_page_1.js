[{"Owner":"Borjan","Date":"2017-06-22T20:04:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_ve written a code that displays 3D graphs. It works fine with a limited number of nodes and edges. However_co_ with 400 nodes and some 600 edges_co_ the scene is rather slow. The panning is extremely slow. My assumption is that I_t_m doing something very wrong (Although I_t_m experienced programmer_co_ I_t_ve started programming javascript and babylon.js yesterday and ave no experince with 3D ...).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe code follows here (attaching files seems not to work at this moment_dd_ error code -200)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tvar canvas _eq_ document.getElementById(_t_renderCanvas_t_)_sm__lt_br /_gt_\n\tscene _eq_ new BABYLON.Scene(engine)_sm__lt_br /_gt_\n\tvar camera _eq_ new BABYLON.ArcRotateCamera(_qt_Camera_qt__co_ 1_co_ 0.8_co_ 600_co_ new BABYLON.Vector3(0_co_ 0_co_ 0)_co_ scene)_sm__lt_br /_gt_\n\tcamera.attachControl(canvas_co_ false)_sm__lt_br /_gt_\n\tvar light _eq_ new BABYLON.HemisphericLight(_qt_hemi_qt__co_ new BABYLON.Vector3(0_co_ 1_co_ 0)_co_ scene)_sm__lt_br /_gt_\n\tvar material1 _eq_ new BABYLON.StandardMaterial(_qt_mat_qt__co_ scene)_sm__lt_br /_gt_\n\tfor (var key in displayModel.Applications) {_lt_br /_gt_\n\t    if (displayModel.Applications.hasOwnProperty(key)) {_lt_br /_gt_\n\t        var sphere _eq_ BABYLON.Mesh.CreateSphere(displayModel.Applications[key].Name_co_ 16_co_ 4_co_ scene)_sm__lt_br /_gt_\n\t        sphere.position.x _eq_ displayModel.Applications[key].X_sm__lt_br /_gt_\n\t        sphere.position.y _eq_ displayModel.Applications[key].Y_sm__lt_br /_gt_\n\t        sphere.position.z _eq_ displayModel.Applications[key].Z_sm__lt_br /_gt_\n\t        sphere.material _eq_ material1_sm__lt_br /_gt_\n\t    }_lt_br /_gt_\n\t}_lt_br /_gt_\n\tmaterial1.diffuseColor _eq_ new BABYLON.Color3(1.5_co_ 0_co_ 0)_sm__lt_br /_gt_\n\tfor (var key in displayModel.Services) {_lt_br /_gt_\n\t    if (displayModel.Services.hasOwnProperty(key)) {_lt_br /_gt_\n\t        var obj _eq_ BABYLON.Mesh.CreateSphere(displayModel.Services[key].Name_co_ 16_co_ 4_co_ scene)_sm__lt_br /_gt_\n\t        obj.position.x _eq_ displayModel.Services[key].X_sm__lt_br /_gt_\n\t        obj.position.y _eq_ displayModel.Services[key].Y_sm__lt_br /_gt_\n\t        obj.position.z _eq_ displayModel.Services[key].Z_sm__lt_br /_gt_\n\t        var pId _eq_ displayModel.Services[key].ProviderId_sm__lt_br /_gt_\n\t        var myLines _eq_ BABYLON.Mesh.CreateLines(_qt_a_qt__co_ [_lt_br /_gt_\n\t            new BABYLON.Vector3(obj.position.x_co_ obj.position.y_co_ obj.position.z)_co__lt_br /_gt_\n\t            new BABYLON.Vector3(displayModel.Applications[pId].X_co_ displayModel.Applications[pId].Y_co_ displayModel.Applications[pId].Z)_co__lt_br /_gt_\n\t        ]_co_ scene)_sm__lt_br /_gt_\n\t        myLines.color _eq_ new BABYLON.Color3(1_co_0.2_co_0.1)_sm__lt_br /_gt_\n\t    }_lt_br /_gt_\n\t}_lt_br /_gt_\n\tfor (var key in displayModel.ConsumingRelations) {_lt_br /_gt_\n\t    if (displayModel.ConsumingRelations.hasOwnProperty(key)) {_lt_br /_gt_\n\t        var idA _eq_ displayModel.ConsumingRelations[key].ConsumerId_sm__lt_br /_gt_\n\t        var idS _eq_ displayModel.ConsumingRelations[key].ServiceId_sm__lt_br /_gt_\n\t        var myLines _eq_ BABYLON.Mesh.CreateLines(_qt_a_qt__co_ [_lt_br /_gt_\n\t            new BABYLON.Vector3(displayModel.Services[idS].X_co_ displayModel.Services[idS].Y_co_ displayModel.Services[idS].Z)_co__lt_br /_gt_\n\t            new BABYLON.Vector3(displayModel.Applications[idA].X_co_ displayModel.Applications[idA].Y_co_ displayModel.Applications[idA].Z)_co__lt_br /_gt_\n\t        ]_co_ scene)_sm__lt_br /_gt_\n\t    }_lt_br /_gt_\n\t}_lt_br /_gt_\n\treturn scene_sm_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-06-23T16:07:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tit is tough to help without a repro. Do you mind creating one on playground.babylonjs.com ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-06-23T16:39:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tif a node is a sphere_co_ you have 400_co_ so you have 400 draw calls.  You are not assigning a material_co_ but if you did_co_ as long as it is the same material_co_ then you could create 1 sphere.  399 of them could be instances.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf edges are LinesMesh_co_ then you are creating 600 of them.  A Line_lt_span style_eq__qt_color_dd_#e74c3c_sm__qt__gt__lt_u_gt__lt_strong_gt_s_lt_/strong_gt__lt_/u_gt__lt_/span_gt_Mesh can have more than one line.  accumulate all the point then use the _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.meshBuilder.ts#L366_qt_ rel_eq__qt_external nofollow_qt__gt_MeshBuilder.createLineSystem()_lt_/a_gt_.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Borjan","Date":"2017-06-23T17:13:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_179416_qt_ data-ipsquote-contentid_eq__qt_31230_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1498234054_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tHello !\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tit is tough to help without a repro. Do you mind creating one on playground.babylonjs.com ?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI_t_ll try to do it tomorrow - have never done that before ...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Borjan","Date":"2017-06-23T17:32:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_179422_qt_ data-ipsquote-contentid_eq__qt_31230_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1498235976_qt_ data-ipsquote-userid_eq__qt_8492_qt_ data-ipsquote-username_eq__qt_JCPalmer_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t35 minutes ago_co_ JCPalmer said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tif a node is a sphere_co_ you have 400_co_ so you have 400 draw calls.  You are not assigning a material_co_ but if you did_co_ as long as it is the same material_co_ then you could create 1 sphere.  399 of them could be instances.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tIf edges are LinesMesh_co_ then you are creating 600 of them.  A Line_lt_span style_eq__qt_color_dd_#e74c3c_sm__qt__gt__lt_u_gt__lt_strong_gt_s_lt_/strong_gt__lt_/u_gt__lt_/span_gt_Mesh can have more than one line.  accumulate all the point then use the _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.meshBuilder.ts#L366_qt_ rel_eq__qt_external nofollow_qt__gt_MeshBuilder.createLineSystem()_lt_/a_gt_.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThanks_co_ I was looking for an advice like yours - will look into examples of instances. Maybe you could suggest me one that is easy to follow? LinesMesh would be the next step.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tActually_co_ I_t_ve made some improvements in the code by reusing vectors (see the code in my other post_dd_ _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/31228-error-no-camera-defined-on-scenedispose/_qt_ rel_eq__qt__qt__gt_http_dd_//www.html5gamedevs.com/topic/31228-error-no-camera-defined-on-scenedispose/_lt_/a_gt_).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMoreover_co_ I believe that the performance would definitely be good enough when I find the way how to dispose everything that needs to be disposed when reloading the underlying model (retrieved as JSON by an API call). Every time I invoke API_co_ the browser_t_s memory goes up by 100MB and the CPU usage goes insane. I_t_ve looked in the solution MOLVWR  that disposes and loads scenes without loosing memory and killing CPU (_lt_a href_eq__qt_http_dd_//gleborgne.github.io/molvwr/#cyanocobalamin_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//gleborgne.github.io/molvwr/#cyanocobalamin_lt_/a_gt_) but that is too complex for me to use as an example. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Borjan","Date":"2017-06-29T09:42:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe performance has improved by the following changes_dd_\n_lt_/p_gt_\n\n_lt_ul_gt__lt_li_gt_\n\t\tall unneeded meshes removed before loading a new data_co_ while keeping the scene and the camera_dd_ _lt_span style_eq__qt_color_dd_#16a085_sm__qt__gt_var meshes _eq_ scene.meshes_sm_ while (meshes.length) { meshes[0].dispose(true)_sm_}_lt_/span_gt_\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tdrawing of spheres optimized by reducing the number of segments\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tcreateInstance used wherever possible.\n\t_lt_/li_gt_\n_lt_/ul_gt__lt_p_gt_\n\tThis appears sufficient. Yet_co_ I need to find some time to check _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.meshBuilder.ts#L366_qt_ rel_eq__qt_external nofollow_qt_ style_eq__qt_color_dd_#3c6994_sm__qt__gt_MeshBuilder.createLineSystem()_lt_/a_gt__co_ suggested by _lt_strong_gt__lt_a data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/?do_eq_hovercard&amp_sm_referrer_eq_http%253A%252F%252Fwww.html5gamedevs.com%252Ftopic%252F31230-performance-problems%252F_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/_qt_ style_eq__qt_color_dd_inherit_sm__qt_ title_eq__qt_Go to JCPalmer_t_s profile_qt_ rel_eq__qt__qt__gt_JCPalmer_lt_/a_gt_ _lt_/strong_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Borislav","Date":"2017-06-29T10:17:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIf you are using _lt_strong_gt_Google Chrome 60 Beta or 61 Dev._lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_b_gt_That means_dd_ the problem is the browser._lt_/b_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]