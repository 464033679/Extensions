[{"Owner":"EvilMax","Date":"2016-06-03T09:01:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI cant solve this problem_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat i want to do is to create an FSP camera attached to a character and move character + camera with mouse ad keys.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPS_dd_ I already read all similar posts but nothing really useful.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDetails (my thoughts)_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) Lock mouse in browser (v)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) move camera with mouse_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWorks with free camera_co_ if i parent mesh to camera_co_ but in this way mesh moves not in regular way and i cant apply gravity_co_ etc...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI assume i should use FollowCamera_co_ but in this way i cant move it with mouse anymore\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe i will need create a new type of camera? (Becouse the idea is that the camera should be attached to mesh in some point and should be movable by mouse)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t3) Mesh should move forward/backward/left/right accordingly to camera direction\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t4)If you need_co_ here you are my stupid code_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_function CharacterController(character_co_ scene){\n\n\t//keys variables\n\tvar forwardKey_sm_\n\tvar backwardKey_sm_\n\tvar leftwardKey_sm_\n\tvar rightwardKey_sm_\n\n\t//settings\n\tvar inAir _eq_ true_sm_\n\tvar speed _eq_ 5_sm_\n\tvar jumpHeight _eq_ 300_sm_\n\tvar runSpeed_sm_\n\tvar crouchSpeed_sm_\n\n\t//gravity settings\n\tvar mass_sm_\n\tvar friction_sm_\n\tvar restitution_sm_\n\n\t//var controller_sm_\n\tvar camera_sm_\n\n\t/*LOCAL FUNCTIONS*/\n\n\t//create new following camera\n\t/*var attachCamera _eq_ function(target){\n\t\t//create following camera\n\t\tvar camera _eq_ new BABYLON.FollowCamera(_qt_FollowCam_qt__co_ new BABYLON.Vector3(5_co_ 50_co_ 45)_co_ scene)_sm_\n\t  camera.target _eq_ target_sm_ // target any mesh or object with a _qt_position_qt_ Vector3\n\n\t\tcamera.radius _eq_ 15_sm_ // how far from the object to follow\n\t\tcamera.heightOffset _eq_ 8_sm_ // how high above the object to place the camera\n\t\tcamera.rotationOffset _eq_ 180_sm_ // the viewing angle\n\t\tcamera.cameraAcceleration _eq_ 0.05 // how fast to move\n\t\tcamera.maxCameraSpeed _eq_ 20 // speed limit\n\n\t\tscene.activeCamera _eq_ camera_sm_\n\n\n\n\t\treturn camera_sm_\n\n\t}_sm_*/\n\tvar attachCamera _eq_ function() {\n    var cam _eq_ new BABYLON.FreeCamera(_qt_camera_qt__co_ new BABYLON.Vector3(0_co_ 5_co_ -10)_co_ scene)_sm_\n    cam.attachControl(scene.getEngine().getRenderingCanvas())_sm_\n\n\n    // Remap keys to move with ZQSD\n    cam.keysUp _eq_ [87]_sm_ // W\n    cam.keysDown _eq_ [83]_sm_ // S\n    cam.keysLeft _eq_ [65]_sm_ // A\n    cam.keysRight _eq_ [68]_sm_ // D\n    cam.speed _eq_ 1_sm_\n    cam.inertia _eq_ 0.5_sm_\n    cam.angularSensibility _eq_ 1000_sm_\n\n\t\tscene.activeCamera _eq_ cam_sm_\n\n    return cam_sm_\n\t}\n\n\t//create custom physic settings for character\n\tvar setCustomPhysicsState _eq_ function(newMass_co_ newFriction_co_ newRestitution){\n\t\tcharacter.setPhysicsState(BABYLON.PhysicsEngine.SphereImpostor_co_ {\n\t\t\t\tmass_dd_ newMass_co_\n\t\t\t\tfriction_dd_ newFriction_co_\n\t\t\t\trestitution_dd_ newRestitution\n\t\t})_sm_\n\t}_sm_\n\n\t//manage inputs\n\tvar initPlayerActions _eq_ function(){\n\n\t\tvar forward _eq_ false_sm_\n\t\tvar turnLeft _eq_ false_sm_\n\t\tvar turnRight _eq_ false_sm_\n\n\t\tscene.actionManager _eq_ new BABYLON.ActionManager(scene)_sm_\n\t    scene.actionManager.registerAction(new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnKeyDownTrigger_co_ function (evt) {\n\n\t        switch(evt.sourceEvent.keyCode){\n\t            //space button\n\t            case 32_dd_\n\t                //character.jump()_sm_\n\t                break_sm_\n\t            //w button\n\t            case 87_dd_\n\t                forward _eq_ true_sm_\n\t                break_sm_\n\t            //a button\n\t            case 65_dd_\n\t                turnLeft _eq_ true_sm_\n\t                break_sm_\n\t            //d button\n\t            case 68_dd_\n\t                turnRight _eq_ true_sm_\n\t                break_sm_\n\t            //s button\n\t            case 83_dd_\n\t                //character.moveBackward()_sm_\n\t                break_sm_\n\t        }\n\n\t    }))_sm_\n\t    scene.actionManager.registerAction(new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnKeyUpTrigger_co_ function (evt) {\n\n\t        switch(evt.sourceEvent.keyCode){\n\t            //space button\n\t            case 32_dd_\n\t                //character.jump()_sm_\n\t                break_sm_\n\t            //w button\n\t            case 87_dd_\n\t                forward _eq_ false_sm_\n\t                break_sm_\n\t            //a button\n\t            case 65_dd_\n\t                turnLeft _eq_ false_sm_\n\t                break_sm_\n\t            //d button\n\t            case 68_dd_\n\t                turnRight _eq_ false_sm_\n\t                break_sm_\n\t            //s button\n\t            case 83_dd_\n\t                //character.moveBackward()_sm_\n\t                break_sm_\n\t        }\n\n\t    }))_sm_\n\n\n\t    scene.registerBeforeRender(function () {\n\t    \tif(forward){\n\t    \t\t//player.position.z +_eq_ 0.1_sm_\n\t    \t\t/*var forwards _eq_ new BABYLON.Vector3(parseFloat(Math.sin(player.rotation.y)) / speed_co_ 0_co_ parseFloat(Math.cos(player.rotation.y)) / speed)_sm_\n\t\t\t\tforwards.negate()_sm_\n\t\t\t\tplayer.moveWithCollisions(forwards)_sm_*/\n\n\n\t\t\t\tvar posX _eq_ Math.sin(character.rotation.y) / speed_sm_\n\t\t\t\tvar posZ _eq_ Math.cos(character.rotation.y) / speed_sm_\n\t\t\t\t//console.log(posX_co_ posZ)_sm_\n\t\t\t\tcharacter.position.x +_eq_ posX_sm_\n\t\t\t\tcharacter.position.z +_eq_ posZ_sm_\n\n\n\n\n\t    }\n\t    if (turnLeft){\n\t\t\t\tcharacter.rotation.y +_eq_ 0.1_sm_\n\n\t\t\t}\n\t\t\tif (turnRight){\n\t\t\t\tcharacter.rotation.y -_eq_ 0.1\n\t\t\t}\n\n\n\t    })_sm_\n\n\t}_sm_\n\n\n\n\n\n\tvar LockMousePointer _eq_ function() {\n\n    // Request pointer lock\n    var canvas _eq_ scene.getEngine().getRenderingCanvas()_sm_\n    // On click event_co_ request pointer lock\n    canvas.addEventListener(_qt_click_qt__co_ function(evt) {\n        canvas.requestPointerLock _eq_ canvas.requestPointerLock || canvas.msRequestPointerLock || canvas.mozRequestPointerLock || canvas.webkitRequestPointerLock_sm_\n        if (canvas.requestPointerLock) {\n            canvas.requestPointerLock()_sm_\n        }\n    }_co_ false)_sm_\n\n    // Event listener when the pointerlock is updated (or removed by pressing ESC for example).\n    var pointerlockchange _eq_ function (event) {\n        controlEnabled _eq_ (\n                           document.mozPointerLockElement _eq__eq__eq_ canvas\n                        || document.webkitPointerLockElement _eq__eq__eq_ canvas\n                        || document.msPointerLockElement _eq__eq__eq_ canvas\n                        || document.pointerLockElement _eq__eq__eq_ canvas)_sm_\n        // If the user is alreday locked\n        if (!controlEnabled) {\n            camera.detachControl(canvas)_sm_\n        } else {\n            camera.attachControl(canvas)_sm_\n        }\n    }_sm_\n\n    // Attach events to the document\n    document.addEventListener(_qt_pointerlockchange_qt__co_ pointerlockchange_co_ false)_sm_\n    document.addEventListener(_qt_mspointerlockchange_qt__co_ pointerlockchange_co_ false)_sm_\n    document.addEventListener(_qt_mozpointerlockchange_qt__co_ pointerlockchange_co_ false)_sm_\n    document.addEventListener(_qt_webkitpointerlockchange_qt__co_ pointerlockchange_co_ false)_sm_\n}\n\n\t/*window.addEventListener(_qt_mousemove_qt__co_ function () {\n\t\t// We try to pick an object\n\t\tvar pickResult _eq_ scene.pick(scene.pointerX_co_ scene.pointerY)_sm_\n\n\n\t\t\tcamera.rotationOffset +_eq_ scene.pointerX/1000_sm_\n\n\t\t\tconsole.log(scene.pointerX)_sm_\n\t\t\t//console.log(scene.pointerY)_sm_\n\n\n\t})_sm_*/\n\n\t/*END LOCAL FUNCTIONS*/\n\n  var init _eq_ function(){\n\n\t\tmass _eq_ 10_sm_\n\t\tfriction _eq_ 50_sm_\n\t\trestitution _eq_ 0_sm_\n\n\t\tLockMousePointer()_sm_\n\n\t\tcamera _eq_ attachCamera(character)_sm_\n\ncharacter.position.z _eq_ 10_sm_\n\t\tcharacter.parent _eq_ camera_sm_\n\n\t\tsetCustomPhysicsState(mass_co_ friction_co_ restitution)_sm_\n\t\t//initPlayerActions()_sm_\n\n  }_sm_\n  init()_sm_\n\n\n\n}\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Boz","Date":"2016-06-03T18:12:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI gave an aswer on this topic _dd_ \n_lt_/p_gt_\n_lt_iframe data-embedcontent_eq__qt__qt_ frameborder_eq__qt_0_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/topic/22317-manipulating-the-free-camera/?do_eq_embed&amp_sm_embedComment_eq_127159&amp_sm_embedDo_eq_findComment#comment-127159_qt__gt__lt_/iframe_gt_\n\n_lt_p_gt_\n\tIt works pretty well for me_co_ FPS-style controls with keyboard and mouse _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]