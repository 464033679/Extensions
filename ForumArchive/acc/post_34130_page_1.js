[{"Owner":"lagauche","Date":"2017-11-21T01:00:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHaving more Three.js experience where the general practice is to define your variables globally at the top_co_ I_t_m getting used to keeping them local when that_t_s all I need (most Babylon.js examples seem to do this)_co_ but I_t_m of course unable to inspect them in the browser console to look at the topology. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is a pretty general open-ended question_co_ but mostly I_t_m wondering what_t_s the best way to still be able to inspect when using local variables? I_t_m more generally wondering what_t_s the best Babylon.js practices with respect to what I_t_m asking.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-11-21T05:11:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThere_t_s nothing preventing you from using global variables_co_ although it is arguably a better practice to encapsulate variables - javascript hoisting can be a hard thing to find/fix.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you need to inspect local variables you can break in the code by placing a breakpoint in the developer tools or reference from a global variable and composition. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBabylonJS team has also provided two very useful tools_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. The Inspector itself is very useful for seeing what is going on. _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/how_to/debug_layer_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/how_to/debug_layer_lt_/a_gt__lt_br /_gt_\n\t2. Spector.js even more low level down to WebGL (_lt_a href_eq__qt_https_dd_//spector.babylonjs.com/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//spector.babylonjs.com/_lt_/a_gt_)  \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"lagauche","Date":"2017-11-24T02:37:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThanks!\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]