[{"Owner":"sparkbuzz","Date":"2015-07-13T07:41:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The following code in my application is used to move a tiny sphere to the x_co_ y_co_ z picked point on a plane as the mouse moves._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_document.addEventListener(_t_mousemove_t__co_ function (event_dd_MouseEvent) {var pickingInfo_dd_BABYLON.PickingInfo _eq_ this.scene.pick(event.x_co_ event.y_co_ function(mesh_dd_BABYLON.AbstractMesh) {        return mesh.name _eq__eq_ _t_pick_plane_t__sm_    })_sm_    if(pickingInfo.pickedMesh !_eq_ null) {        sphere.position _eq_ pickingInfo.pickedPoint_sm_    }}.bind(this))_sm__lt_/pre_gt__lt_p_gt_The problem I_t_m noticing is that_co_ even during moderate mouse movement_co_ the sphere_t_s position lags behind the browsers_t_ mouse cursor._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m assuming that BabylonJS uses _lt_strong_gt_requestAnimationFrame()_lt_/strong_gt_ for managing the render loop_co_ and I suppose_co_ because the sphere position is updated in a _t__lt_strong_gt_mousemove_lt_/strong_gt__t_ event handler_co_ outside of that context_co_ is what_t_s causing the lagging sphere._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Perhaps also_co_ because the mouse movement event handler doesn_t_t get called at the same frame rate as the requestAnimationFrame() handler_co_ is what_t_s causing the lag? Would have been awesome if I could get the mouse x_co_ y coordinates on the spot_co_ say for example from the _lt_strong_gt_window_lt_/strong_gt_ object._lt_/p_gt__lt_div_gt_ _lt_/div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Is there a way I can get the sphere to more closely track the position of the mouse cursor?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-07-13T08:21:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Maybe show us in a playground so that we can play around? _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-07-13T08:32:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_89003_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_15698_qt_ data-ipsquote-username_eq__qt_iiceman_qt_ data-cite_eq__qt_iiceman_qt_ data-ipsquote-timestamp_eq__qt_1436775703_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Maybe show us in a playground so that we can play around? _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_That should be a boilerplate automated answer after scanning a new message and seeing there is no link to a playground scene  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Regarding your question - the scene has pointerX and pointerY exactly for this reason. no need to access the event_t_s data._lt_/p_gt__lt_p_gt_Maybe_co_ if possible (I am not sure about your usecase)_co_ try implementing the movement tracking inside the before-render loop (again_co_ only if possible)_co_ this way you don_t_t use any external js events (which_co_ as you perfectly said_co_ will be triggered only _qt_between frames_qt_.)._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"sparkbuzz","Date":"2015-07-13T09:10:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_ll try getting into the habit of creating playground samples. I_t_m coding in Typescript_co_ so not always certain the code spat out by the tsc compiler will be human readable._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks for the pointerX and pointerY pointer_co_ hehe_co_ will incorporate that and see if performance improves._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"sparkbuzz","Date":"2015-07-13T09:37:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_ Ok_co_ so a quick test with the pointerX and pointerY gives MUCH better performance..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks RaananW!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]