[{"Owner":"dsman","Date":"2015-05-20T23:03:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_So in my scene I will have _dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_1. dynamically generated meshes of type Plane_lt_/p_gt__lt_p_gt_2. meshes will be in large number  (200-300)  _lt_/p_gt__lt_p_gt_3. meshes will have same texture _lt_/p_gt__lt_p_gt_4. position of meshes could vary_co_ but size will be same_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Which feature of babylon should I use here to optimze speed in my scene in such case ? _lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-05-21T01:53:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Sounds like a job for Sprites_co_ if you are okay with a couple of limitations (sprites don_t_t cast or receive shadows_co_ and they don_t_t depth-composite with transparent objects or particles)._lt_/p_gt__lt_p_gt_With that said_co_ for only a few hundred meshes I_t_d bet performance will be very good even with no optimization. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-05-21T06:50:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Instances will do the job also _dd_ _lt_a href_eq__qt_http_dd_//babylondoc.azurewebsites.net/page.php?p_eq_22571_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylondoc.azurewebsites.net/page.php?p_eq_22571_lt_/a_gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var instance _eq_ mesh.createInstance(_qt_instanceName_qt_)_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2015-05-21T07:42:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_And most importantly_co_ sprite cannot be picked !_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dsman","Date":"2015-05-21T19:05:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Not picked_co_ won_t_t receive shadow  will not do the job. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And yes performance is affected greatly affected even with 200+ plane mesh. Plane mesh  doesn_t_t have many vertices. Just 4 I guess. Still it FPS is reduced to 2/3. May be because I have mirror in scene. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So I think instance is way to go.  _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dsman","Date":"2015-05-22T08:15:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Another question on same line. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If I have instantiated mesh picked up_co_ how do I change its texture _co_ affectively changing texture of all mesh instantiated from same root mesh ? _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It seems I can_t_t access _qt_.material_qt_  property of instantiated mesh. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-05-22T09:02:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Try changing the material of the object used to create those instances. But this will change all instances as well..._lt_/p_gt__lt_p_gt_Maybe try finding a different way to highlight the selected mesh._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dsman","Date":"2015-05-22T09:44:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Actually is fine if it changes texture of all instantiated mesh. And that is in fact how instance functions. So that_t_s not a problem. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It_t_s only that I have an instantiated mesh with me (picked by mouse click) and not the original mesh from which it was instantiated (along with dozens other) ._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So  question is how do I find mesh from which the given mesh was instantiated. Is there any standard way ? Or I have to add custom properties like _qt_myParent_qt_ to instantiated mesh object on fly like_dd_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var instancemesh _eq_ origmesh.createInstance(_qt__qt_)_sm_instancemesh.myParent  _eq_ origmesh _sm__lt_/pre_gt__lt_p_gt_And then changing original mesh_t_s texture when instantiated mesh is picked_dd_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_ pickedMesh _eq_ scene.getMeshByName(pickResult.pickedMesh.name)_sm_ pickedMesh.myParent.material.DiffuseTexture _eq_ new BABYLON.Texture(_t_texture.jpg_t__co_ scene)_sm__lt_/pre_gt__lt_p_gt_Is this the only way? Though_co_ this might work. I am not fan of adding properties on the fly as long as I can avoid ._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-05-22T10:42:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You could give the material a proper name and get it from the scene using getMaterialByName (or id). Then you can change the material_co_ which ultimately will change the material of the instances._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]