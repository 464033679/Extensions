[{"Owner":"Kesshi","Date":"2017-03-02T11:40:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMaybe someone can help me to understand this._lt_br /_gt_\n\tBecause there is no _qt_nice_qt_ way to enable/disable a post-process i have to call attachPostProcess/detachPostProcess very frequently in my project. Not so nice but it works.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tToday i noticed that the internal textures of the post-processes are recreated all the time. After looking at the BJS sources i saw that attachPostProcess and detachPostProcess both are calling _cascadePostProcessesToRigCams which always invalidates the texture of the first post-process_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/babylon.camera.ts#L298_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/babylon.camera.ts#L298_lt_/a_gt__lt_br /_gt_\n\tThat means every time i disable/enable a post-process the texture will be recreated.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy question is_co_ why is it necessary to invalidate the post-process textures (and only for the first one??) in this case?_lt_br /_gt_\n\tI disabled this for a short test and everything was working as expected without that annoying texture recreation.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-03-02T17:42:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe main reason to do it is because the canvas size may have changed while the postprocess was detached so we need to recreate it (just in case).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhy do you find it _qt_not nice_qt_ ? We could think also about a postprocess.isEnabled but this will force us to go through the list of camera.postProcesses on every frame to determine the actual postproces chain.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Kesshi","Date":"2017-03-02T19:10:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_165696_qt_ data-ipsquote-contentid_eq__qt_28795_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1488476572_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThe main reason to do it is because the canvas size may have changed while the postprocess was detached so we need to recreate it (just in case).\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tBut then it should be done for the post process which was added and not for the first one or? And the resizing is checked for every frame already in the activate function here_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/PostProcess/babylon.postProcess.ts#L168_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/PostProcess/babylon.postProcess.ts#L168_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tWhy do you find it _qt_not nice_qt_ ? We could think also about a postprocess.isEnabled but this will force us to go through the list of camera.postProcesses on every frame to determine the actual postproces chain.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tOften the order of the post processes is important to get the same result. If i remove some post processes in the middle of the chain_co_ i need to be careful later when i add some of them again that i add them at the correct position. It would be easier to add all frequently used post processes once in the correct order and just enabling/disabling them. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-03-03T16:12:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m not opposed to add more flexibility here to be honest.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe check is done for the first one only because we need the first one to provide a depth buffer for the chain. So if you remove the first one_co_ bjs need to attach a depth buffer to the new first one.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPerhaps we could think about a bool to turn off postprocesses completely for a camera\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]