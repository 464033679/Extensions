[{"Owner":"ozRocker","Date":"2015-04-01T14:11:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I have a .babylon file that_t_s 1.171MB.  If I gzip it its only 259KB.  I_t_m wondering if there_t_s a way to work with a gzipped .babylon file.  Apparently javascript can unzip files but they remain in memory and can_t_t be saved to disk.  Is there another way to work with a compressed file?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-04-01T14:25:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_If enabled on your web server_co_ the transmission is compressed_co_ then saved on the client at full size. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-04-01T14:32:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_may be with a _lt_strong_gt_.htaccess_lt_/strong_gt__dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_#compress text_co_ html_co_ javascript_co_ css_co_ xml_co_ json_co_ babylon_dd_AddOutputFilterByType DEFLATE text/plainAddOutputFilterByType DEFLATE text/htmlAddOutputFilterByType DEFLATE text/xmlAddOutputFilterByType DEFLATE text/cssAddOutputFilterByType DEFLATE application/xmlAddOutputFilterByType DEFLATE application/xhtml+xmlAddOutputFilterByType DEFLATE application/rss+xmlAddOutputFilterByType DEFLATE application/javascriptAddOutputFilterByType DEFLATE application/jsonAddOutputFilterByType DEFLATE application/x-javascript_lt_/pre_gt__lt_p_gt_This allows compression to server and to decompression to client automatically_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.feedthebot.com/pagespeed/enable-compression.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.feedthebot.com/pagespeed/enable-compression.html_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-04-01T14:37:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_A more radical way would be to reduce the precision of the data written to file_co_ and see if the results are acceptable.  Close to the beginning of the file are some constants_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_# output related constantsMAX_VERTEX_ELEMENTS _eq_ 65535VERTEX_OUTPUT_PER_LINE _eq_ 1000MAX_FLOAT_PRECISION _eq_ _t_%.4f_t_MAX_INFLUENCERS_PER_VERTEX _eq_ 4_lt_/pre_gt__lt_p_gt_Changing MAX_FLOAT_PRECISION to say _t_%.3f_t_ would reduce the length of some numbers.  Not all_co_ since exporter already removes trailing 0_t_s and un-neccessary dots.  VERTEX_OUTPUT_PER_LINE could also be increased_co_ but savings would be negligible_co_ make looking a the file really hard if you had to._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2015-04-01T16:02:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Turns out my web server is already compressing the files before serving them so GZIP is already enabled.  IE turned my 1.1MB file into a 115KB file but for some reason Chrome didn_t_t compress it even though it compressed all the other files.  I saw a bug report about Chrome not compressing static files bigger than 1MB but it mentioned it had been fixed.  I have the latest Chrome so I thought it could be something I_t_ve done_co_ unless the bug returned somehow_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]