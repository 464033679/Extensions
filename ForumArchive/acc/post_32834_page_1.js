[{"Owner":"masterdon","Date":"2017-09-10T02:20:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Everyone_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var scalingObject _eq_ BABYLON.Mesh.CreatePlane(_qt_scalez_qt__co_ 1_co_ scene_co_ false)_sm_\n    scalingObject.material _eq_ new BABYLON.StandardMaterial(_qt_outputplane_qt__co_ scene)_sm_\n    scalingObject.position _eq_ scalorPosition\n    if (isXScalor)\n        scalingObject.material.diffuseTexture _eq_ new BABYLON.Texture(_qt_../images/icons/icons-Resize-Horizontal.png_qt__co_ scene)_sm_\n    else\n        scalingObject.material.diffuseTexture _eq_ new BABYLON.Texture(_qt_../images/icons/icons-Resize-Vertical.png_qt__co_ scene)_sm_\n\n    scalingObject.rotate(BABYLON.Axis.X_co_ 1.5_co_ BABYLON.Space.LOCAL)_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI am using above code to create little boxes as re-sizable controllers. i have set a image icon material as texture to plane for giving them look of resizable controller . However the background of material(or color of mesh) is coming black instead of transparent. what could be the reason? \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_09/2017-09-10_07-41-38.png.645460863674072ec0b5057acf8d5b17.png_qt_ data-fileid_eq__qt_14780_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_2017-09-10_07-41-38.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_14780_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_09/2017-09-10_07-41-38.png.645460863674072ec0b5057acf8d5b17.png_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-09-10T02:42:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tDid you try setting hasAlpha? _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/3.0/basetexture#hasalpha-boolean_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/classes/3.0/basetexture#hasalpha-boolean_lt_/a_gt_ I think you need to split up your assignment and texture creation to set a property_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var horizontalTexture _eq_ new BABYLON.Texture(_qt_../images/icons/icons-Resize-Horizontal.png_qt__co_ scene)\nhorizontalTexture.hasAlpha _eq_ true\nscalingObject.material.diffuseTexture _eq_ horizontalTexture_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThere is more info in the tutorial as well like_dd_ _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/tutorials/materials_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/tutorials/materials_lt_/a_gt__co_ so you may need_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tscalingObject.material.useAlphaFromDiffuseTexture (for alpha blending).  If that doesn_t_t work maybe a full PG - encode your image as base64\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"masterdon","Date":"2017-09-10T04:26:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tPerfect....thanks a lot _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2017-09-10T06:36:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI know this doesn_t_t relate to your current issue_co_ but I thought I_t_d provide an answer to a seperate problem which appears often when loading a large # of textures for a scene - where the last few image files don_t_t buffer and appear black in your scene. Again_co_ that_t_s not what_t_s happenning here_co_ but it occurs so often for myself and others_co_ that I tought it might be valuable to methion for future reference by others.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs an example_co_ I have a GUI which requires approx. 30 power of 2 image files to use as GUI buttons_co_ and the last one or two appear black as they don_t_t load before the scene is initialized. The code is as follows_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_    var assets _eq_ []_sm_ _lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_    var loader _eq_ new BABYLON.AssetsManager(scene)_sm__lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_//Load textures for GUI_lt_br /_gt_\n\t    var toLoad _eq_ [_lt_br /_gt_\n\t        {name _dd_ _qt_bgnd_color_qt__co_ src _dd_ _qt_./textures/bgnd_color.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_color_picker_qt__co_ src _dd_ _qt_./textures/color_picker.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_brush_size_icon_qt__co_ src _dd_ _qt_./textures/brush_size_icon.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_increase_brush_qt__co_ src _dd_ _qt_./textures/increase_brush.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_decrease_brush_qt__co_ src _dd_ _qt_./textures/decrease_brush.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_eraser_qt__co_ src _dd_ _qt_./textures/eraser.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_video_slate_qt__co_ src _dd_ _qt_./textures/video_slate.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_button_d_qt__co_ src _dd_ _qt_./textures/3d_icon.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_frame_start_qt__co_ src _dd_ _qt_./textures/frame_start.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_frame_end_qt__co_ src _dd_ _qt_./textures/frame_end.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_video_pause_qt__co_ src _dd_ _qt_./textures/video_pause.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_video_play_qt__co_ src _dd_ _qt_./textures/video_play.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_button_play_qt__co_ src _dd_ _qt_./textures/button_play.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_button_pause_qt__co_ src _dd_ _qt_./textures/button_pause.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_button_rev_qt__co_ src _dd_ _qt_./textures/button_rev.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_button_fwd_qt__co_ src _dd_ _qt_./textures/button_fwd.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_button_notes_qt__co_ src _dd_ _qt_./textures/session_notes.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_button_slider1_qt__co_ src _dd_ _qt_./textures/slider1.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_button_slider2_qt__co_ src _dd_ _qt_./textures/slider2.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_admin_button_qt__co_ src _dd_ _qt_./textures/admin_button.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_console_button_qt__co_ src _dd_ _qt_./textures/console_button.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_s_notes_button_qt__co_ src _dd_ _qt_./textures/s_notes.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_m_list_button_qt__co_ src _dd_ _qt_./textures/m_list.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_login_button_qt__co_ src _dd_ _qt_./textures/login_button.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_about_button_qt__co_ src _dd_ _qt_./textures/about_button.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_erase_all_qt__co_ src _dd_ _qt_./textures/erase_all_button.png_qt_ }_co__lt_br /_gt_\n\t    {name _dd_ _qt_brush_size_qt__co_ src _dd_ _qt_./textures/brush_size.png_qt_ }_co__lt_br /_gt_\n\t    {name _dd_ _qt_undo_icon_qt__co_ src _dd_ _qt_./textures/undo_icon.png_qt_ }_co__lt_br /_gt_\n\t    {name _dd_ _qt_redo_icon_qt__co_ src _dd_ _qt_./textures/redo_icon.png_qt_ }_co__lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_    ]_sm__lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_    toLoad.forEach(function(obj) {_lt_br /_gt_\n\t        var img _eq_ loader.addTextureTask(obj.name_co_ obj.src)_sm__lt_br /_gt_\n\t        img.onSuccess _eq_ function(t) {_lt_br /_gt_\n\t            assets[t.name] _eq_ t.texture_sm__lt_br /_gt_\n\t        }_sm__lt_br /_gt_\n\t    })_sm__lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_    loader.onFinish _eq_ function() { _lt_/strong_gt__lt_u_gt__lt_em_gt_/* I initialize my scene_co_ canvas_co_ GUI extension_co_ etc from this point forward within this function*/_lt_/em_gt__lt_/u_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_        }_sm__lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs you can see_co_ I attempt to verify that all textures are loaded before I initialize the scene and canvas_co_ yet practically 50% of the time_co_ one or many more of my GUI images and textures are not loaded and appear black in the scene.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe only solution I_t_ve found for this is to load additional _qt_dummy images_qt_ into my texture array which are not used. This allows me to always load all essential textures into the texture array_co_ as the loader still skips loading all textures_co_ but will miss the last one or more textures I call simply to ensure all textures are loaded. In the following case_co_ I load two additional _qt_dummy textures_qt_ immediately following my rquired textures which the two dummy textures are never called in my scene_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_        {name _dd_ _qt_dummy_image_qt__co_ src _dd_ _qt_./textures/dummy_image.png_qt_ }_co__lt_br /_gt_\n\t        {name _dd_ _qt_dummy_image_2_qt__co_ src _dd_ _qt_./textures/dummy_image_2.png_qt_ }_co__lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs I find that missing textures and other assets to be a problem when loading large scenes and/or large dynamic GUIs_co_ adding these _qt_dummy textures_qt_ or other assets always assure that I do load the assets my scene requires as the loader will load from the list in order_co_ missing only the last textures I_t_m loading ito my image array.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAgain_co_ this doesn_t_t apply to the initial question in this post_co_ but as I thought this might initially be the problem until I read through the post_co_ I thought I_t_d add this scenario ad solution so others don_t_t have to waste considerable time on a solution when it happens to them - and if you are building large scenes_co_ it almost always will happen to you at some time.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-09-11T05:24:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_pre_gt_\n_lt_code_gt_var toLoad _eq_ [\n   {name _dd_ _qt_bgnd_color_qt__co_ src _dd_ _qt_./textures/bgnd_color.png_qt_ }_co_\n   {name _dd_ _qt_color_picker_qt__co_ src _dd_ _qt_./textures/color_picker.png_qt_ }_co_\n   ...\n]_sm_\n\nlet loadedImageCount _eq_ 0\n\ntoLoad.forEach(function(obj) {\n   var img _eq_ loader.addTextureTask(obj.name_co_ obj.src)_sm_\n   img.onSuccess _eq_ function(t) {\n       assets[t.name] _eq_ t.texture_sm_\n       loadedImageCount++\n\n       if (loadedImageCount _eq__eq__eq_ toLoad.length) {\n          loadScene(...)\n       }\n   }_sm_\n})_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThis is a bit hacky_co_ but so is adding dummy textures!  This would only work if all the textures loaded successfully (could always add a onTaskError otherwise)... there must be something else going on_co_ though.  I was looking at the code from _lt_a href_eq__qt_http_dd_//www.babylonjs.com/scenes/assets/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/scenes/assets/_lt_/a_gt_ and has what you have followed by assetsManager.load()_sm_  Anyway_co_ I_t_ve never used the assets manager_co_ but will add it at some point to my game.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]