[{"Owner":"BlackMojito","Date":"2017-10-23T12:06:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Folks_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am working on a view which must support very large (but quite static) scenes. To optimize the performance_co_ one of the idea is to use progressive rendering. Basically I would like to split the scene into small fragments based on their properties (e.g. material and some other meta information). Then they are rendered out progressively when static. If I manipulate the mouse_co_ then based on the current performance_co_ I can choose how many fragments which should be rendered until being idle again.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ my question is what is the best way to implement this concept with Babylon? Just marking Nodes visible/invisible on the fly is not cool though...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-10-23T17:41:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can rely on node.setEnabled() to remove them completely from the visual tree\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUsing setEnabled(false) on a node will turn off all its descendants\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]