[{"Owner":"Dos","Date":"2018-04-19T14:41:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello everybody_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m currently working on a project implying a serious amount of materials (including textures) and would like to store them as separate files (one per material). So_co_ at first_co_ I decided to store the _qt_material_qt_ object as a json file including textures as base64 strings.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI simply tried to merge the object from this json file onto the mesh.material with _lt_a href_eq__qt_https_dd_//github.com/KyleAMathews/deepmerge_qt_ rel_eq__qt_external nofollow_qt__gt_deepmerge_lt_/a_gt_ resulting in a _qt_RangeError_dd_ Maximum call stack size exceeded_qt_ (probably due to the base64 textures inside of it)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo I was wondering _dd_ what would be the best way to store my materials as separate files so I could load them when needed?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSorry if this question looks stupid but I can_t_t manage to find a suitable solution.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks in advance _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"babbleon","Date":"2018-04-19T15:23:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI store mine in a MySQL database_co_ have a PHP script output the json_co_ eg. materials.php?materialid_eq_1\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere may well be a better way_co_ but it works well for me.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dos","Date":"2018-04-19T15:34:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tDo you have textures in your materials ? How do you apply them to a mesh ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI tried\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// material is the object from the json file and deepmerge a library I use\nmesh.material _eq_ deepmerge(mesh.material_co_ material)_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tBut it throws a _qt__lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_RangeError_dd_ Maximum call stack size exceeded_qt_ _dd__t_(_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dos","Date":"2018-04-20T08:40:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOK_co_ I finally found it. No need for deepmerge here (as it throws the error above probably because the material objects are too big to be processed that way)_lt_br /_gt_\n\t_lt_br /_gt_\n\tAll I needed to do was _dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_mesh.material _eq_ BABYLON.Material.Parse(material_co_ this.scene)_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThe UVs and normals aren_t_t fine for now but the materials are loaded correctly !\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]