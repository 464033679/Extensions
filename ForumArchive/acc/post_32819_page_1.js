[{"Owner":"deez","Date":"2017-09-08T19:02:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_ I_t_m new to all this but I have exhausted my search results so I though I would reach out to the community.  I_t_m leaning toward babylon.js for a project but I am looking specifically for support for two distinct features. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. ability to have camera fly to another point in a scene_lt_br /_gt_\n\t2. use occluded annotations\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSee example_dd_ _lt_a href_eq__qt_http_dd_//xeogl.org/examples/#presentation_annotations_tronTank_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//xeogl.org/examples/#presentation_annotations_tronTank_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDoes babylon have any build in functionality to support this?  Is there a similar demo available in the playground?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks in advance!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-09-09T01:25:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t#1 If you change camera position and target - should work as you expect.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t#2.  if that is the label - there are things like trackable labels (_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/gui_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/overviews/gui_lt_/a_gt_).  If you mean occlusion queries that is in 3.1 (_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/occlusionquery_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/overviews/occlusionquery_lt_/a_gt_)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"deez","Date":"2017-09-10T03:14:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for the response.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1.  I was looking for a way to pan the camera to a new position.  I found a technique using animation.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2.  Trackable labels.  Got it.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-09-10T03:38:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCool you got #2.  For #1 you can do animation and that_t_s a pretty good way - just set start and end position and # frames with animation target as camera (animations have easing functions_co_ which look nice_co_ too).  You can also move yourself in one go by setting position or gradually by Lerp (_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/3.0/vector3#static-lerp-start-end-amount-rarr-vector3-classes-3-0-vector3-_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/classes/3.0/vector3#static-lerp-start-end-amount-rarr-vector3-classes-3-0-vector3-_lt_/a_gt_)\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_runRenderLoop(() _eq_&gt_sm_ {\n     var lerp _eq_ BABYLON.Vector3.Lerp(startPosition_co_ endPosition_co_ fracDistance)_sm_\n     camera.position _eq_ lerp\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tAdam put up a cool PG using SlerpToRef_co_ but it_t_s for rotation and you just want position_co_ but at least you can play with the fraction and see how it affects movements_dd__lt_br /_gt__lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#UMQ4UR%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#UMQ4UR#2_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]