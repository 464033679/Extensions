[{"Owner":"snupas","Date":"2018-08-20T12:01:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m importing roughly 22 .obj models via the AssetsManager_co_ but I want the user to be able to see the first model loaded in the scene while the others are being imported. I_t_ve tried separating the main mesh that_t_s supposed to appear in a separate AssetsManager like so_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_  var mainAssetsManager _eq_ new BABYLON.AssetsManager(scene)_sm_\n  var secondaryAssetsManager _eq_ new BABYLON.AssetsManager(scene)_sm_\n  var userId _eq_ _qt_example_qt__sm_\n\n        mainAssetsManager.useDefaultLoadingScreen _eq_ true_sm_\n        secondaryAssetsManager.useDefaultLoadingScreen _eq_ false_sm_\n        var mainMesh_eq_mainAssetsManager.addMeshTask(_qt_mesh_qt_+0_co__qt__qt__co__qt_./dist/assets/_qt__co_userId+_qt___qt_+0+_qt_.obj_qt_)\n        var meshTasks _eq_ []_sm_\n\n        for(var x _eq_ 2_sm_ x&lt_sm_23_sm_ x++){\n            if(x%2_eq__eq_0){\n                meshTasks.push(secondaryAssetsManager.addMeshTask(_qt_mesh_qt_+x_co__qt__qt__co__qt_./dist/assets/_qt__co_userId+_qt___qt_+x+_qt_.obj_qt_))_sm_\n                // meshTasks.onSuccess _eq_ function (task) {\n                //     fatsos.push([task.loadedMashes[0]_co_task.loadedMashes[1]_co_task.loadedMashes[2]])_sm_\n                //     console.log(_qt_mesh_qt_+x+_qt_ loaded succesfuly._qt_)_sm_\n                // }\n            }\n        }\n       \n        mainAssetsManager.load()_sm_\n        secondaryAssetsManager.load()_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThe loading screen disappears after half a second_co_ so I assume the first model gets loaded_co_ but it doesn_t_t appear in the scene until the rest of the models have been loaded_co_ even though for the other models I_t_ve disabled the loading screen.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-08-20T13:25:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe scene will not be ready until the full end of the loading sequence so using isReady_co_ _lt_span style_eq__qt_color_dd_#000000_sm__qt__gt_onReadyObservable or executeWhenReady to start the render loop will all be defered until the end of the loading._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_font color_eq__qt_#000000_qt__gt_Be careful as your scene might hang a bit while loading due to shader compilation being synchronous (so far) in the browsers._lt_/font_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCould you share the code on the playground so that we can take a deeper look at the root cause ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"snupas","Date":"2018-08-20T14:06:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSure.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is the playground with the stripped down code and stock meshes_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#ZJ6S91_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#ZJ6S91_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd this is a gif video of my website loading the actual models.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//i.imgur.com/Y0xcHCk.gifv_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//i.imgur.com/Y0xcHCk.gifv_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe first model should be an extremely skinny one_co_ but it starts off with displaying a model loaded with the secondary assetsmanager. And as you can see it only loads the material at the end_co_ even though all of the models come with a material. You can also see it first displays all the manifest errors for all of the models from both assetsmanagers before any model is loaded from either.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-08-20T14:19:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe manifest check is normal_co_ but the material is weird_co_ it does not repro at all in the playground. By stopping caching in the browser_co_ I see first the body and then the cats all in correct order.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt would be amazing if you could repro in the playground.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#ZJ6S91%231_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#ZJ6S91#1_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"snupas","Date":"2018-08-20T14:34:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt would be kinda hard to reproduce cause of the custom meshes and materials.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI sorta solved it though. Put the secondaryAssetsManager.load() function in the success callback of the mainAssetsManager like so_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var mainAssetsManager _eq_ new BABYLON.AssetsManager(scene)_sm_\n        var secondaryAssetsManager _eq_ new BABYLON.AssetsManager(scene)_sm_\n        mainAssetsManager.useDefaultLoadingScreen _eq_ false_sm_\n        secondaryAssetsManager.useDefaultLoadingScreen _eq_ false_sm_\n        var userId _eq_ _qt_example_qt__sm_\n\n        var mainMesh _eq_ mainAssetsManager.addMeshTask(_qt_mesh_qt_+0_co__qt__qt__co__qt_./dist/assets/_qt__co_userId+_qt___qt_+0+_qt_.obj_qt_)_sm_\n        var meshTasks _eq_ []_sm_\n        for(var x _eq_ 2_sm_ x&lt_sm_23_sm_ x++){\n            if(x%2_eq__eq_0){\n                meshTasks.push(secondaryAssetsManager.addMeshTask(_qt_mesh_qt_+x_co__qt__qt__co__qt_./dist/assets/_qt__co_userId+_qt___qt_+x+_qt_.obj_qt_))_sm_        \n            }\n        }\n        mainMesh.onSuccess _eq_ function (task) {\n                    console.log(task)_sm_\n                    secondaryAssetsManager.load()_sm_\n                }\n      \n        mainAssetsManager.load()_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThe loading looks like this now_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//i.imgur.com/hNFXqk0.gifv_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//i.imgur.com/hNFXqk0.gifv_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMakes sense since before the secondary assetsmanager was firing off right after the first in code_co_ but not in execution.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDon_t_t mind the lag as long as there_t_s the initial mesh up in the scene with the correct material loaded.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]