[{"Owner":"steffenk","Date":"2015-11-17T21:02:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey _co__lt_br_gt__lt_br_gt_this is a verry early stage of a little pythonscript to make the work with Babylon a little bit faster._lt_br_gt__lt_br_gt_Its a CLI wich makes it easy to create a bisc proejct structure ( including a simple webserver )_co_ add basic shapes_co_ include .babylon files and add a prototype class for more complex objects._lt_br_gt__lt_br_gt__lt_a href_eq__qt_https_dd_//github.com/steffenkre/babylonbackbone_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/steffenkre/babylonbackbone_lt_/a_gt__lt_br_gt__lt_br_gt__lt_br_gt_Here are the parameters_dd__lt_br_gt__lt_br_gt_new &lt_sm_name&gt_sm_ _lt_em_gt_creates a new project_lt_/em_gt__lt_/p_gt__lt_p_gt_newclass &lt_sm_name&gt_sm_ _lt_em_gt_creates a new prototype class in man.js_lt_/em_gt__lt_br_gt_newplane &lt_sm_name&gt_sm_ _lt_em_gt_creates a simple plane in middle of the scene_lt_/em_gt__lt_br_gt_newcube &lt_sm_name&gt_sm_ _lt_em_gt_creates a simple plane in middle of the scene_lt_/em_gt__lt_br_gt_newmesh &lt_sm_name&gt_sm_ _lt_em_gt_imports a new .babylon mesh from the assets Folder_lt_/em_gt__lt_br_gt__lt_br_gt_What do you think about it? Whats missing?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-12-08T14:13:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi steffenk!  We would use _t_new_lt_u_gt_Box_lt_/u_gt__t_ of course.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Sorry for the slow response.  I was hiding under a haystack for the cold Michigan upper peninsula winter_co_ but the weather has been real mild so far_co_ so I emerged_co_ and then discovered your cool idea/project.  I like it._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If I understand this correctly_co_ this could be very useful.  Building basic/starter scenes from a CLI.  Seems like it would have some potential to be dynamic_co_ easy-fast_co_ and quite powerful.  Possibly addCamera and addLight could be used_co_ too.  Maybe _lt_em_gt_bindColor(meshName_co_ someColor) - _lt_/em_gt_puts a material on a mesh and sets it to a color.  *shrug*_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And_co_ maybe... a runScene command.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  Would your CLI commands be writing lines of JS to a file_co_ realtime?  Or would the BJS scene open in a new process right away_co_ and THEN addStuff() commands?  Hmm.  Maybe use chromium so you are within scope of node?  err.  hmm.  Or could the python be used to generate a Blender-exporter-like file... a scene.babylon? _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Heck_co_ I guess all of it could be tried/done.  I like dynamic scene generation.  But really_co_ you would be using Python_co_ to generate JS... that uses the BJS framework to dynamically generate a webGL scene.  At some point_co_ one might consider a webGL framework written IN Python... maybe cut some corners.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  I dunno._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Hmm... Python in browsers (to build webGL-with).  Hmm.  SOME talking went on here... _lt_a href_eq__qt_http_dd_//programmers.stackexchange.com/questions/190273/would-python-be-too-slow-for-client-side-use-in-browsers_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//programmers.stackexchange.com/questions/190273/would-python-be-too-slow-for-client-side-use-in-browsers_lt_/a_gt_   *shrug*_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Your idea might be a start to a Python-based data visualizer.  You could dynamically generate BabylonJS scenes from nearly any data model/structure.  Interesting! _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Keep us posted! _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Update_dd_  Jerome has a fine LIVE data visualizer (a WAN map?) running at _lt_a href_eq__qt_http_dd_//jerome.bousquie.fr/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//jerome.bousquie.fr/_lt_/a_gt_ ... using BabylonJS_co_ with git source available.  (drool)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-12-08T23:36:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_That_t_s definitely an unexplored space and I_t_m glad you go this way!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]