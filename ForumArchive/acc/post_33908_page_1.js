[{"Owner":"Pryme8","Date":"2017-11-09T17:54:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSo_co_ now I am getting to the point in my project where I need to ensure that the speeds of the animations are consistent per client and do not drastically change with fps changes._lt_br /_gt__lt_br /_gt_\n\tI was thinking of passing a uniform of a targetFPS_co_ and a currentFPS._lt_br /_gt__lt_br /_gt_\n\tso lets say the target FPS is 60_co_ and the current fps is 30 which means the animations should play at twice the _qt_time_qt_ value in order to keep up with a client updating at 60 fps._lt_br /_gt__lt_br /_gt_\n\tSo I guess something like_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tfloat rate _eq_ targetFPS/currentFPS_sm__lt_br /_gt_\n\tthen when I do my time equation multiply the time by the rate?_lt_br /_gt__lt_br /_gt_\n\tThis is just theory and before I go about testing it I wanted to get others opinions on the idea.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-11-09T18:34:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYes a uniform_co_ but not 2.  Would not just passing a timestamp_co_ zeroed from when the mesh was created_co_ be what you pass?  Based on the value_co_ be where you gotta be at that point in time.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2017-11-09T18:47:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tExample please?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-11-09T19:09:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMy only example currently working are the shader based _qt_grand entrances_qt_ of teleport &amp_sm_ poof.  They done by the first 2 models _lt_a href_eq__qt_https_dd_//palmer-jc.github.io/scenes/QueuedInterpolation/automaton/index.html_qt_ rel_eq__qt_external nofollow_qt__gt_here_lt_/a_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe code is not obvious using shader builder_co_ but in a beforerender_co_ I am setting the uniform time.  Since these shaders are are short lived_co_ so they are getting a _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Extensions/blob/master/QueuedInterpolation/src/entrances/ShaderBuilderEntrance.ts#L251_qt_ rel_eq__qt_external nofollow_qt__gt_maximum of a value * percent complete_lt_/a_gt__co_ not actually the time.  Does not make them a perfect example_co_ but is close.  No framerate is involved when determining percent_co_ just timestamp subtraction.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]