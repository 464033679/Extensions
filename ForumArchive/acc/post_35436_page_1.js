[{"Owner":"trollolloo","Date":"2018-02-02T13:35:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p style_eq__qt_margin_dd_0px 0px 1em_sm_padding_dd_0px_sm_border_dd_0px_sm_font-style_dd_normal_sm_font-weight_dd_400_sm_font-size_dd_15px_sm_line-height_dd_inherit_sm_font-family_dd_Arial_co_ _t_Helvetica Neue_t__co_ Helvetica_co_ sans-serif_sm_vertical-align_dd_baseline_sm_clear_dd_both_sm_color_dd_rgb(36_co_39_co_41)_sm_letter-spacing_dd_normal_sm_text-align_dd_left_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_\n\tI_t_m using BabylonJS V3 with Blender 2.79 to create product visualizations. Many times_co_ it is necessary for me to define more complex shaders in the JS code. I_t_m using lines like \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_scene.meshes[1].material.emissiveColor _eq_ new BABYLON.Color3(1_co_ 0_co_ 0)_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p style_eq__qt_margin_dd_0px 0px 1em_sm_padding_dd_0px_sm_border_dd_0px_sm_font-style_dd_normal_sm_font-weight_dd_400_sm_font-size_dd_15px_sm_line-height_dd_inherit_sm_font-family_dd_Arial_co_ _t_Helvetica Neue_t__co_ Helvetica_co_ sans-serif_sm_vertical-align_dd_baseline_sm_clear_dd_both_sm_color_dd_rgb(36_co_39_co_41)_sm_letter-spacing_dd_normal_sm_text-align_dd_left_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_\n\tto define the shaders after export. Usually every mesh can get it_t_s own shader this way. Unfortunately_co_ I can_t_t get it to work somehow. Even in small test scenes (one red icosphere_co_ one green cube_co_ a hemi lamp and a camera)_co_ both objects get the same material. When trying to change the appearance like shown above_co_ both meshes change color.\n_lt_/p_gt_\n\n_lt_p style_eq__qt_margin_dd_0px 0px 1em_sm_padding_dd_0px_sm_border_dd_0px_sm_font-style_dd_normal_sm_font-weight_dd_400_sm_font-size_dd_15px_sm_line-height_dd_inherit_sm_font-family_dd_Arial_co_ _t_Helvetica Neue_t__co_ Helvetica_co_ sans-serif_sm_vertical-align_dd_baseline_sm_clear_dd_both_sm_color_dd_rgb(36_co_39_co_41)_sm_letter-spacing_dd_normal_sm_text-align_dd_left_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_\n\tWhen I navigate the camera_co_ so that one object isn_t_t visible_co_ the right material gets loaded (green_co_ in my sample scene). Here is a small video of the strange behavior_dd_ _lt_a href_eq__qt_https_dd_//imgur.com/a/zYlLT_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//imgur.com/a/zYlLT_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p style_eq__qt_margin_dd_0px 0px 1em_sm_padding_dd_0px_sm_border_dd_0px_sm_font-style_dd_normal_sm_font-weight_dd_400_sm_font-size_dd_15px_sm_line-height_dd_inherit_sm_font-family_dd_Arial_co_ _t_Helvetica Neue_t__co_ Helvetica_co_ sans-serif_sm_vertical-align_dd_baseline_sm_clear_dd_both_sm_color_dd_rgb(36_co_39_co_41)_sm_letter-spacing_dd_normal_sm_text-align_dd_left_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_\n\tBoth blender meshes have individual datablocks and individual materials. No duplication_co_ instancing ...\n_lt_/p_gt_\n\n_lt_p style_eq__qt_margin_dd_0px 0px 1em_sm_padding_dd_0px_sm_border_dd_0px_sm_font-style_dd_normal_sm_font-weight_dd_400_sm_font-size_dd_15px_sm_line-height_dd_inherit_sm_font-family_dd_Arial_co_ _t_Helvetica Neue_t__co_ Helvetica_co_ sans-serif_sm_vertical-align_dd_baseline_sm_clear_dd_both_sm_color_dd_rgb(36_co_39_co_41)_sm_letter-spacing_dd_normal_sm_text-align_dd_left_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_\n\tDo the mesh indices change_co_ when a mesh gets unloaded? Where could I have made the mistake? In blender or in my .js?\n_lt_/p_gt_\n\n_lt_p style_eq__qt_margin_dd_0px 0px 1em_sm_padding_dd_0px_sm_border_dd_0px_sm_font-style_dd_normal_sm_font-weight_dd_400_sm_font-size_dd_15px_sm_line-height_dd_inherit_sm_font-family_dd_Arial_co_ _t_Helvetica Neue_t__co_ Helvetica_co_ sans-serif_sm_vertical-align_dd_baseline_sm_clear_dd_both_sm_color_dd_rgb(36_co_39_co_41)_sm_letter-spacing_dd_normal_sm_text-align_dd_left_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_\n\tI am greatful for every hint!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-02-02T16:13:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis probably won_t_t get to the root of the problem_co_ but did you try something like_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_scene.meshes[1].material _eq_ scene.meshes[1].material.clone()\nscene.meshes[1].emmissiveColor _eq_ ..._lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tJust to make sure they aren_t_t the same material - otherwise they should change color independently.  Possibly you have merged the meshes_co_ in which case they would share the same material.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-02-02T19:06:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tPinging _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8492_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/_qt_ rel_eq__qt__qt__gt_@JCPalmer_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-02-02T19:17:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI not know.  2 things_dd_\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\tIs this behavior happen if you make no changes to materials?\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tThis is a diagram of what blender properties are used to construct materials in export.\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n_lt_p_gt_\n\t_lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_16860_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_02/StdMaterials.png.8b811a5185a07967976637249c45964b.png_qt_ alt_eq__qt_StdMaterials.png.8b811a5185a07967976637249c45964b.png_qt_ /_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"trollolloo","Date":"2018-02-05T10:55:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThank you all for your suggestions! Unfortunately_co_ the problem still remains.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/?do_eq_hovercard_qt_ data-mentionid_eq__qt_25365_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/_qt_ rel_eq__qt__qt__gt_@brianzinn_lt_/a_gt__lt_/span_gt__co_ adding _lt_em_gt_material.clone() _lt_/em_gt_only made changes to the initial state of the materials. But both materials get changed by one line of code_co_ and also the _qt_old_qt_ (blender defined) material is loaded_co_ when the other object leaves the screen.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8492_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/_qt_ rel_eq__qt__qt__gt_@JCPalmer_lt_/a_gt__co_ it also happens without any changes to the material. Meshes seem to be _qt_combined_qt_ (or materials linked) without any apparent reason. In my test scene this is true for both icospheres_co_ in more complex scenes_co_ several objects seem to be _qt_combined_qt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI really don_t_t know what is going on there_co_ the problem never occurred before. I attached the test scene as blender file and our current framework. For the upload_co_ I stripped out all products (for legal reasons) and only left the testscene in our framework. The materials for the ico spheres can be changed in line 119 in the _lt_em_gt_tx-cgi.js_lt_/em_gt_ file.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRight now_co_ the changes in the .js file seem to have no effect on the spheres_co_ for reasons I don_t_t understand either. I am quite helpless right now_co_ I hope you can make sense of the test scene.\n_lt_/p_gt_\n\n_lt_p_gt__lt_a class_eq__qt_ipsAttachLink_qt_ href_eq__qt_//www.html5gamedevs.com/applications/core/interface/file/attachment.php?id_eq_16892_qt__gt_babylon.zip_lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-02-05T16:35:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYour framework does not concern me.  I looked at your .blend &amp_sm_ .babylon.  I also loaded your .babylon in sandbox &amp_sm_ zoomed so the spheres disappear_co_ but nothing turns green.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYour .babylon is just 2 separate meshes_co_ each referencing a separate standard material.  I think this is a down stream problem.  Kind of reminds me of the Firxfox _qt_things turn green_qt_ bug.  I have not been updating my FireFox in a while for that reason. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSorry.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-02-06T21:47:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIf it is the infamous Firefox 58 bug_co_ you should switch to bjs 3.2 where we have a workaround\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]