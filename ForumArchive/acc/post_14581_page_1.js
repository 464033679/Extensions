[{"Owner":"fenomas","Date":"2015-05-18T04:44:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Just in case anyone else finds this useful_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/andyhall/babylon-atlas-sprite_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/andyhall/babylon-atlas-sprite_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_A container class that takes a texture atlas (JSON format)_co_ creates a plane mesh_co_ and handles the messy job of texturing that mesh with any given sprite out of the atlas._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Note_dd_ this uses a regular plane mesh internally_co_ so it doesn_t_t have any of the advantages or drawbacks of babylon _qt_Sprite_qt_ objects. _lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-05-18T06:44:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_really really smart _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-05-20T04:54:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Demo link_co_ to show what this is doing_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//andyhall.github.io/babylon-atlas-sprite/example/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//andyhall.github.io/babylon-atlas-sprite/example/_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The demo cycles through the sprites in this atlas_dd__lt_/p_gt__lt_p_gt__lt_img src_eq__qt_https_dd_//raw.githubusercontent.com/andyhall/babylon-atlas-sprite/master/example/sprites.png_qt_ alt_eq__qt_sprites.png_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-05-20T17:39:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey it could be great to add this directly to the SpriteManager _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-05-21T02:24:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I was thinking about that. I figure_co_ right now this module is just a convenience - it does some math and async loading for the user but it doesn_t_t use the fact that your textures are sewn into an atlas to create any performance or rendering benefit._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So if BJS was going to add atlas support_co_ I guess it would be ideal if there_t_s some way to exploit the atlas for performance. I don_t_t know how of course_co_ that_t_s your department _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-05-21T02:39:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Side note_dd_ I did my module this way to keep it simple_co_ but if BJS were to support atlases_co_ it would be more powerful (and maybe easier to understand) if the atlas acted like a provider for textures. Like_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var atlas _eq_ new BABYLON.Atlas(_t_atlas.png_t__co_ _t_atlas.json_t_)var texture _eq_ atlas.getTexture(_t_walk_0001_t_)myMesh.material.diffuseTexture _eq_ texture_lt_/pre_gt__lt_p_gt_I don_t_t know if that would work in practice. I guess it would be very difficult to make the derived texture work like a normal texture (e.g._co_ I guess it would require shader changes for the extracted texture to support uv-offset and scale and repeat modes). But if this could be done_co_ it would be a very clean and easy way for the user to use texture atlases._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-05-21T07:31:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt_Hi fenomas_co__lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_I have to notice that you to often forget (can voluntarily be) to put semicolons in all your codes. But if your code is to compress_co_ that is likely to cause many bug. Moreover the engine Javascript_co_ him_co_ systematically add them at the time of interpretation if they are missing. what makes make works in more with the engine Javascript unnecessarily if the semicolon existed._lt_/div_gt__lt_br_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-05-21T09:32:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi dad72_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Semicolons in JS are basically a matter of preference and coding style. Leaving them out doesn_t_t affect performance_co_ and the code I linked should run fine minimized. The arguments for and against semicolons have been well hashed out by the JS gods_co_ but mostly I omit them lately because I work with other libraries written in that style._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-05-21T10:23:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt_The performances have a very tiny impact_co_ even at all_co_ but it is a work furthermore for the JavaScripts engine which adds the semicolons if they are missing._lt_/div_gt__lt_div_gt_Your code cannot be minimized. I already tested and you to find itself with bugs._lt_/div_gt__lt_div_gt_I think that those which omit to add points commas by style_co_ is not a good thing. Javascript and enough _qt_cool_qt_ not to inform us of this kind of error_co_ but it is an error_co_ not a style._lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt__lt_div_gt_If you to look in all the other languages (C#_co_ C_co_ C++_co_ PHP_co_ CSS and others) the semicolon is obligatory_co_ if not that an error announces you. Javascript does not say anything to him_co_ but it is an invisible error which appears if you to minimize your code for example. I read that in books writes by experts that this semicolon forget is an error._lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt__lt_div_gt_I think it is not because some libraries do not put of semicolon_co_ did not make a mistake. Their code can not be compressed down and put the work in JavaScript engine. Look in Babylon engine_co_ the semicolon is present everywhere._lt_/div_gt__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_/div_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-05-21T18:42:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_dad72_co_ omitting semicolons in JS (when they_t_re optional) is a matter of style_co_ and not something we need to debate here. It_t_s not an error_co_ and the performance difference is not measurable (you might as well tell me to use shorter variable names!)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Also_co_ the module works for me when minified with closure compiler. If you_t_ve found a bug please file a github issue!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-05-21T20:07:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_a href_eq__qt_http_dd_//davidwalsh.name/javascript-semicolons_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//davidwalsh.name/javascript-semicolons_lt_/a_gt_  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_laugh.png_qt_ alt_eq__qt__dd_lol_dd__qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-05-21T21:44:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_oh_co_ sorry about your topic_co_ I did not want to offend you._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-05-22T03:23:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_No offense taken _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  It_t_s just that ASI was a big thing in the JS world a few years ago_co_ and has already been debated by the experts from every angle. _lt_a href_eq__qt_https_dd_//brendaneich.com/2012/04/the-infernal-semicolon/_qt_ rel_eq__qt_external nofollow_qt__gt_Brendan Eich_lt_/a_gt_ summed the whole thing up as well as anyone._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And again_co_ if my module breaks under minification please file a bug or tell me how to reproduce._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-05-22T10:11:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I send you the file minimize and what I use for minimize _dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.castorengine.com/babylon/atlas.zip_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.castorengine.com/babylon/atlas.zip_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_div_gt_I do not use your script personally_co_ but it is that I is so much to accustom to write my code with semicolons_co_ especially on languages like PHP or C#_co_ if a semicolon is to forget_co_ it is an error_co_ therefore I take the good practice to put some at each end of instruction. (I think that it is a good practice to take when one uses several computer programming languages.)_lt_/div_gt__lt_div_gt_ _lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-05-22T13:57:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Uh_co_ what minifier did you use on that? Was it made to minimize specific code in a specific format? It appears to have randomly stripped all linebreaks without regard to context._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you try a general-purpose minifier like closure/jsmin/uglify it should work okay._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-05-22T14:56:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt_minifier simply removes the line breaks_co_ like Babylon does. What I used was previously used by babylon._lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_If you add semicolons_co_ this fixes the problem_co_ and the script works. That is why I said that the missing semicolon is a syntax error that Javascript does not report (javascript is less strict)._lt_/div_gt__lt_br_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-05-23T05:26:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Sigh._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_1. Syntax rules for JS are defined by the ECMA 262 specification_co_ not by this or that minifier._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_2. Stripping all linebreaks out of JS code isn_t_t minifying_co_ it_t_s just stripping linebreaks_co_ and it will break some valid JS -- _lt_em_gt_even if semicolons are used_lt_/em_gt_. It happens not to break babylon_co_ but that_t_s a result of how babylon is formatted - it_t_s not something that_t_s true of all valid javascript._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It_t_s fine that you have a coding style you_t_re happy with_co_ but that_t_s no reason to claim anything else is a syntax error. If you want to understand when semicolons in JS are and aren_t_t required_co_ _lt_a href_eq__qt_http_dd_//www.ecma-international.org/ecma-262/5.1/#sec-7.9_qt_ rel_eq__qt_external nofollow_qt__gt_here is the spec_lt_/a_gt_._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-05-23T10:43:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt_I think we do not we understand_co_ probably the language barrier for me._lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_Try to code in another language with your style_co_ genre PHP you will have problems. I_t_m just saying it_t_s a good habit to have._lt_/div_gt__lt_div_gt_I show you with me fichier.min adding semicolons_co_ I run your script_co_ it work_co_ so now it does not work because they are missing altogether._lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_brief_dd_ Try to forget semicolons in compiled languages_co_ you do not compile._lt_/div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I use the word _qt_error_qt__co_ I should not. Javascript not consider it really a mistake_co_ but Javascript engine added them when it is missing. why not add them to his place by good habit._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-05-23T11:29:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_mmh.. plenty of other current languages don_t_t have semi-colons either _dd_ python_co_ ruby_co_ bash_co_ etc_lt_/p_gt__lt_p_gt_so just a question of style for everyone_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-05-23T13:33:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_But_co_ Java_co_ C#_co_ C++_co_ PHP and other use semicolons._lt_/p_gt__lt_p_gt_but good_co_ I do not go further_co_ that is useless. You are right_co_ that it bad idea to put semicolons._lt_br_gt_But one distant from my simple matter from _qt_why?_qt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Let_t_s go about it_co_ I necessarily wrong. But for me_co_ it stings my eyes_co_ it_t_s like punctuation in a book. I_t_m sure the other person thinks that the semicolons are useful but say they are not useful._lt_/p_gt__lt_p_gt_Forget my question. I do not say that you should do otherwise_co_ I wondered why this style._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Jerome_dd_ je parle dans des langages que l_t_on utilise que un point virgules oublier est une erreur et cela dans beaucoup de langage et que c_t_est une bonne habitude à prendre_co_ pas un style. C’est comme dans un livre_co_ la ponctuation_co_ c’est pas une question de style elle est la pour aider la lecture. mais chacun fait ce qu_t_il veux_co_ je demandait pourquoi cela (ce que vous appeler _qt_style_qt_) moi je vois pas ou est le style_co_ mais bon_co_ la mode et le style_co_ c’est comme les couleurs ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-05-23T16:13:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_Tu avais dit à Fenomas que c_t_était une erreur de syntaxe corrigée par l_t_insertion automatique de points virgules à la compilation._lt_/p_gt__lt_p_gt_Ce n_t_est pas une erreur de syntaxe_co_ il a raison _dd_ les points virgules ne sont pas obligatoires comme séparateur d_t_expressions (sauf cas très particuliers)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Donc ne pas mettre ou mettre des points virgules n_t_est ensuite que ce que l_t_on appelle une question de style._lt_/p_gt__lt_p_gt_On peut argumenter que c_t_est une bonne habitude_co_ que c_t_est cohérent avec beaucoup d_t_autres langages (pas tous _dd_ ruby et python sont bien plus lisibles que JS et n_t_ont pas de points virgules)_co_ etc._lt_/p_gt__lt_p_gt_Tout est valable _dd_ il n_t_y a pas de jugement de bonne ou mauvaise pratique ici._lt_/p_gt__lt_p_gt_Le mot _qt_style_qt_ est utilisé par Fenomas pour dire que c_t_est juste un choix syntaxique particulier du développeur (tout comme cela pourrait être autre chose_co_ comme mettre des points virgules au début de chaque ligne par exemple_co_ ce qui reste valide) et pas une règle du langage._lt_/p_gt__lt_p_gt_Il préfère ne pas en mettre_co_ c_t_est son choix et c_t_est valide._lt_/p_gt__lt_p_gt_Je sais que ça n_t_a pas d_t_utilité en fin de ligne_co_ j_t_en mets par habitude (parce que je suis habitué à lire du JS comme ça_co_ comportement purement humain... et un peu stupide parce que quand je repasse à Ruby_co_ je continue d_t_en mettre et le compilateur Ruby râle _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ ) et ça reste valide._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_English in brief _dd__lt_/p_gt__lt_p_gt_Fenomas is right. JS is a standardized language and its rules are written _dd_ the semi-colons are not mandatory after statements (except some special case)._lt_/p_gt__lt_p_gt_So omitting semi-colons is definetly not a syntax error._lt_/p_gt__lt_p_gt_That_t_s why choosing to put or to omit them is then just a question of style... as any other syntaxly correct style would be acceptable _dd_ put semi-colons on each line start_co_ ident with 36 tabs_co_ etc_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-05-23T16:22:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_&gt_sm_ You are right_co_ that it bad idea to put semicolons._lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_I don_t_t think anyone is saying that. Both styles are valid_co_ and I think using semicolons is safer for most people_co_ especially beginners. All I_t_m saying here is that it_t_s a matter of style_co_ not errors_co_ correctness_co_ performance_co_ etc._lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_&gt_sm_ _lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_I wondered why this style._lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_As I said_co_ recently I_t_ve been working with a lot of libraries written in this style. So I_t_m used to it. No other reason._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-05-25T06:31:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Incidentally I_t_m eager to hear any further thoughts on Babylon and texture atlases_co_ but at this point it might be better to start a new thread._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]