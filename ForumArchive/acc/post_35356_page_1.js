[{"Owner":"Pryme8","Date":"2018-01-29T22:32:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#d73a49_sm_font-size_dd_12px_sm__qt__gt_#include_lt_/span_gt__lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#24292e_sm_font-size_dd_12px_sm__qt__gt_&lt_sm___decl__lightFragment&gt_sm_[_lt_/span_gt__lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#005cc5_sm_font-size_dd_12px_sm__qt__gt_0_lt_/span_gt__lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#24292e_sm_font-size_dd_12px_sm__qt__gt_..maxSimultaneousLights]_lt_br /_gt_\n\tin_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Shaders/default.fragment.fx#L40_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Shaders/default.fragment.fx#L40_lt_/a_gt__lt_br /_gt_\n\t_lt_br /_gt_\n\tOk... so what does this end up looking like after it compiles?_lt_br /_gt_\n\tI am trying to add multi-light/shadow support identical to the standard material for a customShader._lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-01-29T23:37:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSo this is my little baby _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_1_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt is a system that will automatically generates X times the same code with X from 0 to maxSimultaneousLights\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn this case_co_ the includes will either pick this file_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Shaders/ShadersInclude/lightFragmentDeclaration.fx_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Shaders/ShadersInclude/lightFragmentDeclaration.fx_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tor this one (if webgl2)_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Shaders/ShadersInclude/lightUboDeclaration.fx_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Shaders/ShadersInclude/lightUboDeclaration.fx_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tbased on webgl2 support\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen it will add it to the current shader replacing {X} by 0_co_ 1_co_ etc..\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2018-01-29T23:39:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tjebus... that is slick.  Gotcha thank you!_lt_br /_gt_\n\t_lt_br /_gt_\n\tSo it would compile to something like this then?_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_\n\tuniform vec4 vLightData0_sm_\n\tuniform vec4 vLightDiffuse0_sm_\n    uniform vec3 vLightSpecular0_sm_\n    uniform samplerCube shadowSampler0_sm_\n\tuniform vec4 shadowsInfo0_sm_\n\tuniform vec2 depthValues0_sm_\n\tuniform vec4 vLightDirection0_sm_\n\tuniform vec3 vLightGround0_sm_\n\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]