[{"Owner":"Pryme8","Date":"2017-05-11T00:37:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI really am struggling with trying to figure out how extend babylon to be able to parse binary STL files.  Does anyone have any good sources on how like Three.js or sketchfab does it?  I have been googling my heart out and seem to keep hitting dead ends._lt_br /_gt__lt_br /_gt_\n\tMaybe a different angle will help me figure things out.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gryff","Date":"2017-05-11T01:57:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_174169_qt_ data-ipsquote-contentid_eq__qt_30352_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1494463029_qt_ data-ipsquote-userid_eq__qt_19199_qt_ data-ipsquote-username_eq__qt_Pryme8_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ Pryme8 said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tDoes anyone have any good sources on how like Three.js or sketchfab does it?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/?do_eq_hovercard_qt_ data-mentionid_eq__qt_19199_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/_qt_ rel_eq__qt__qt__gt_@Pryme8_lt_/a_gt_ _sm_ Well P8_co_ I don_t_t claim to have any skills with this type of thing_co_ but a program called _lt_a href_eq__qt_http_dd_//www.meshlab.net/#download_qt_ rel_eq__qt_external nofollow_qt__gt_MeshLab_lt_/a_gt_ can parse .stl files. It is open source and the source files are available  - so maybe you can find something at that link.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tcheers_co_ gryff _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"yorke","Date":"2017-05-11T12:27:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_ I never used STL format but three.js has an ASCII .stl importer_co_ you can try reverse engineering that_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//threejs.org/examples/js/loaders/STLLoader.js_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//threejs.org/examples/js/loaders/STLLoader.js_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere are also converters for binary &lt_sm_--&gt_sm_ ascii STL formats_co_ you can search on the internet. By example I found this_dd_  _lt_a href_eq__qt_https_dd_//github.com/cmpolis/convertSTL/blob/master/convertSTL.rb_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/cmpolis/convertSTL/blob/master/convertSTL.rb_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]