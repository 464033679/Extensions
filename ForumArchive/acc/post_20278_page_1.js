[{"Owner":"jwagonr","Date":"2016-02-02T01:25:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIs there a way to setup a ShaderMaterial such that it will be passed the uniforms for all the lights within the scene? I_t_m looking for something similar to the ShaderMaterial.lights property from three.js (_lt_a href_eq__qt_http_dd_//threejs.org/docs/#Reference/Materials/ShaderMaterial_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//threejs.org/docs/#Reference/Materials/ShaderMaterial_lt_/a_gt_). If the babylon ShaderMaterial does not support this is there any recommendations on the best way to share the scene lights with a ShaderMaterial?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"NasimiAsl","Date":"2016-02-02T12:50:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tyou can make any customized uniform you want in ShaderMaterial and you can send any type info(like lights _co_ directions _co_ point _co_ ...)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tjust look shadermaterial in Babylonjs document (_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/2.1/ShaderMaterial_qt_ rel_eq__qt_external nofollow_qt__gt_here_lt_/a_gt_) and if you have any problem make a playground (_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/_qt_ rel_eq__qt_external nofollow_qt__gt_here_lt_/a_gt_) and ask again _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tyou need build your light  _co_ try with _lt_a href_eq__qt_http_dd_//www.babylonjs.com/cyos/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/cyos/_lt_/a_gt_ this tools use the phong template\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Blax","Date":"2016-02-02T12:52:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tyes_co_ you can set lights coord through uniform instruction._lt_br_gt_\n\tIf have we many lights perhaps help declare array in uniforms (i can_t_t normal send arrays in supported GLSL version _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jwagonr","Date":"2016-02-02T15:09:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI understand that you can manually setup and send whatever uniforms you would like_co_ but what I_t_m looking for is a way to have babylon setup all the lighting uniforms automatically with the values of the lights within the scene where the ShaderMaterial is being used. It sounds like this functionality does not exist in babylon. With the three.js ShaderMaterial.lights property you just set it to true and the lighting uniforms are setup automatically so that it_t_s very easy to use the same lights within your custom shaders that is being used by all the other meshes within the scene that are using _qt_built in_qt_ materials.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-02-02T16:57:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tShadermaterial populates matrices and bones for you. But you are right lights are not populated\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]