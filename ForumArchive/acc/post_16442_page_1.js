[{"Owner":"jacquesr","Date":"2015-08-13T13:40:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I create boxes using the BABYLON.Mesh.CreateBox factory method._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Afterwards_co_ I see that the only way to resize the box is to use the scaling vector._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_However_co_ if I do that_co_ retreiving the bounding box of the mesh will always give me a 0.5/-0.5 info on each axis_co_ althrough the mesh is of course not 1/1/1 in size but resized using scaling._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I understand that theoretically_co_ scaling is different from actually creating a cube of different size. But I just cannot think that it is possible in babylon.js to create a cube with a factory method of a specific size and have its bounding box scale with it correctly._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The problem is e. g. that babylon offers focus / zoom methods on the arcrotatecamera_co_ but if I hand it the cube mesh_co_ it will always fail to correctly focus it since internally_co_ the cubes are all 1/1/1 in size..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What am I missing?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Regards_lt_/p_gt__lt_p_gt_Jacques_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-08-13T17:55:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey and welcome_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You have to manually call mesh.computeWorldMatrix(true) if you want to get an updated boundingBox (this is automatically done for you when a frame is rendered)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]