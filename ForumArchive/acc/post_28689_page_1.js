[{"Owner":"Nockawa","Date":"2017-02-25T11:03:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis post might interest _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8420-royibernthal/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8420_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8420-royibernthal/_qt_ rel_eq__qt__qt__gt_@royibernthal_lt_/a_gt_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/17014-masterk/?do_eq_hovercard_qt_ data-mentionid_eq__qt_17014_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/17014-masterk/_qt_ rel_eq__qt__qt__gt_@MasterK_lt_/a_gt_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/25416-tmth/?do_eq_hovercard_qt_ data-mentionid_eq__qt_25416_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/25416-tmth/_qt_ rel_eq__qt__qt__gt_@TMTH_lt_/a_gt_ and _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4289-adam/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4289_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4289-adam/_qt_ rel_eq__qt__qt__gt_@adam_lt_/a_gt_ I think.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMost of you have reported issues with using scale/origin and the positioning engine_co_ I_t_ve looked to these issues and then to my code and I finally ended up wondering if what I_t_m currently doing is the right way and also if there_t_s a right way to do things.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOk_co_ let_t_s be a bit clearer_co_ for now_co_ here_t_s how things work_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou create a Prim_co_ set its margin_co_ marginAlignment_co_ origin_co_ scale_co_ rotation\n_lt_/p_gt_\n\n_lt_ol_gt__lt_li_gt_\n\t\tDuring the pre rendering phase I compute the position/size of this prim based on the margin and marginAlignment properties\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\t_lt_strong_gt_Then_lt_/strong_gt__co_ I compute the globalTransformation matrix using the position computed by the positioning engine_co_ the rotation_co_ the scale (both considering the origin).\n\t_lt_/li_gt_\n_lt_/ol_gt__lt_p_gt_\n\tThe thing is the rotation/scale/origin are processed _lt_strong_gt_after_lt_/strong_gt_ the positioning engine. So let_t_s take some example to illustrate the consequences of that\n_lt_/p_gt_\n\n_lt_ol_gt__lt_li_gt_\n\t\tIf you set a scale of 0.5 and align center the prim the result will be as expected if the prim_t_s origin is 0.5_co_0.5_co_ because the scale shrink the prim at _lt_strong_gt_its center_lt_/strong_gt_ so the align center is still good because there_t_s the same amount of pixel shrunk to the left and right (let_t_s just consider the X axis_co_ the same apply to the Y). If the origin is 0_co_0_co_ then the Prim shrink related to its bottom/left corner_co_ so all the pixels that are shrunk will be _lt_strong_gt_on the right_lt_/strong_gt_ of the prim_co_ hence resulting to a bad align center.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tIf you set the scale to 0.5 and align left_co_ then the result will be good if you set an origin of 0_co_0 and it will be bad for other values (0.5_co_0.5_co_ 1_co_0_co_ etc.)_co_ if you think about it a bit_co_ you will understand why and realize it makes sense considering the current implementation of things.\n\t_lt_/li_gt_\n_lt_/ol_gt__lt_p_gt_\n\tNow I could solve this issue by changing my code with the following_dd_ applying the scale to the prim _lt_strong_gt_before_lt_/strong_gt_ doing the positioning_co_ the positioning engine would center the prim with its actualSize_dd_ after the scale was applied.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI first thought it would be the right solution_dd_ apply scale and rotation (in respect of origin as always) before the positioning engine_co_ but now consider this_dd_\n_lt_/p_gt_\n\n_lt_ol_gt__lt_li_gt_\n\t\tYou create a prim with origin 0_co_0_co_ align it at left and then make it spin by increment its rotation each frame.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tThe result is a prim that rotates around its left/bottom corner (imagine the motion_co_ the prim doesn_t_t rotate around its center_co_ but rotation forming a large circle with its right/top corner).\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tHow will the align left behave in this situation? I mean I can code it_co_ it_t_s easy_co_ but the result would be weird_co_ don_t_t you think? At least I do_co_ I don_t_t think it as a solution...\n\t_lt_/li_gt_\n_lt_/ol_gt__lt_p_gt_\n\tSo what is the solution? That_t_s my question for you guys and I need your input/feedback/thoughts_co_ anything.\n_lt_/p_gt_\n\n_lt_ul_gt__lt_li_gt_\n\t\tWould the solution be applying the scale before the positioning and the rotation after_co_ would it make more sense?\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tI already have two scales internally_dd_ one you know about and a _qt_post_qt_ scale I had to introduce to fix a bug reported by _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/25416-tmth/?do_eq_hovercard_qt_ data-mentionid_eq__qt_25416_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/25416-tmth/_qt_ rel_eq__qt__qt__gt_@TMTH_lt_/a_gt_ where a Sprite with a SpriteSize of 64 and a Size (display size) of 100 was not positioned correctly_co_ because I was changing the scale to 1.5 (roughly) for the sprite to be 100 on screen and it was bad because scale was considering origin and I needed a scale that wasn_t_t_co_ so I_t_ve introduced a postScale_co_ computed at the very end. _lt_br /_gt_\n\t\tAnyway_co_ I could introduce a third scale_co_ (a second for the user)_co_ which would be a preScale and that would be applied before everything_co_ I think it would solve _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8420-royibernthal/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8420_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8420-royibernthal/_qt_ rel_eq__qt__qt__gt_@royibernthal_lt_/a_gt_ issues. But I don_t_t know if it_t_s clever to expose to the user more than one scale property.\n\t_lt_/li_gt_\n_lt_/ul_gt__lt_p_gt_\n\tSo basically_co_ I need to know what you guys want when positioning is used with primitive rotation/scale_co_ because now that_t_s what is missing_dd_ a behavior_co_ a model that fits any needs._lt_br /_gt_\n\tSo please take the time to think about it as much as needed and...talk_co_ give me Use Cases_co_ propose solution if you can_co_ anything! _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tThanks\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2017-02-25T13:24:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tScale_co_ Rotate_co_ Translate\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s the only way to accurately position an object with an origin that isn_t_t touching the side it is being aligned to.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"royibernthal","Date":"2017-02-26T00:12:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHow does alignment behave at the moment?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere_t_s a PG where origin doesn_t_t change anything_co_ can you please help me understand it?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//babylonjs-playground.com/#1EJUJH%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjs-playground.com/#1EJUJH#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn the case you described above_co_ if I got it right_co_ I_t_d imagine the following order_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) internal align of object according to its origin\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) scale\n_lt_/p_gt_\n\n_lt_p_gt_\n\t3) external align (in this case left align)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t4) rotation\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nockawa","Date":"2017-02-26T14:26:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8420-royibernthal/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8420_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8420-royibernthal/_qt_ rel_eq__qt__qt__gt_@royibernthal_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLook at this PG_dd_ _lt_a href_eq__qt_http_dd_//babylonjs-playground.com/#272WI1%2381_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjs-playground.com/#272WI1#81_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow imagine that we set a marginAlign of _qt_h_dd_ left_co_ v_dd_center_qt__co_ I rotation is made before the positioning_co_ I think the result will be the rect spining weirdly_co_ but still sticking the left border and being centered vertically.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy feeling about this is it_t_s not really what the user would want. but I don_t_t really know_co_ I need the feedback of as many people as possible\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"royibernthal","Date":"2017-02-26T14:34:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/18979-nockawa/?do_eq_hovercard_qt_ data-mentionid_eq__qt_18979_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/18979-nockawa/_qt_ rel_eq__qt__qt__gt_@Nockawa_lt_/a_gt_ Why is it weird?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//babylonjs-playground.com/#272WI1%2382_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjs-playground.com/#272WI1#82_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAligned to left and rotates around its origin_co_ seems fine to me.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nockawa","Date":"2017-02-26T14:39:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIf I perform the rotation/scale _lt_strong_gt_before_lt_/strong_gt_ the positioning you won_t_t get this result_dd_ the position of the rect will be changed in order for it to match the _qt_h_dd_ left_co_ v_dd_center_qt_ alignment. You will always see the rect in the canvas and its position will always be left/center. It will probably spin as if its origin would be 0.5_co_0.5 but I_t_m not even sure of that_co_ I think it_t_ll be spinning differently_co_ because I_t_ll change the position of the rect.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCurrently I_t_m using actualSize to perform the positioning_co_ but if I compute the rotation/scale before_co_ I will have to use the resulted boundingRectangle to do the positioning_co_ I don_t_t think how I could do this differently.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"TMTH","Date":"2017-02-28T11:00:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_Just a few thoughts_co_ unstructured_co_ stream of consciousness style._lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_1. Working with primitives we have two very different areas – primitive transformations (all that matrix things) and primitive alignment (something to make developer’s life easier). On can leave without the latter_co_ doing everything by hands_co_ without any help from the framework_co_ but not without the former. So_co_ that transformation layer has to be stable and has to have very predictable behavior. Now_co_ the framework has some problems with that predictable behavior._lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_1.1. Origin is not origin. _lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_Origin is the point (0_co_ 0) in the coordinate system where our primitive is defined. It is natural to define primitive in its parent local coordinate system – we can define scale_co_ rotation and translation inside the parent_co_ based on parent’s origin point_co_ and using _lt_/span_gt__lt_span_gt__lt_span lang_eq__qt_en_qt_ xml_dd_lang_eq__qt_en_qt__gt_translate * rotate * scale_lt_/span_gt__lt_/span_gt__lt_span lang_eq__qt_en_qt_ xml_dd_lang_eq__qt_en_qt__gt_ _lt_/span_gt__lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_transformation we can place the primitive anywhere we like. _lt_span_gt_ _lt_/span_gt__lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_That is not the case of Prim2DBase. _lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_1.2 In search of underlying model_lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_Now I’ll try to reproduce the model as I managed to understand it during my evaluation of canvas2d_dd_ _lt_span_gt_ _lt_/span_gt__lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_* Size of the primitive is specified with respect to local coordinate system of the _lt_b_gt_parent_lt_/b_gt__co_ so scaling parent will scale child also_co_ and setting child.size _eq_ parent.size will make child to fill the parent. No problems here._lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_* Position of the primitive is specified in some kind of local coordinate system of the _lt_b_gt_parent_lt_/b_gt__co_ with origin point moved to its bottom left corner. You can set parent’s origin to any value you like_co_ it will not change child position. So_co_ it is not the local coordinates of the parent – child positions ignore parent’s origin. And one more thing – position of the primitive is a vector_co_ that corresponds to some point inside the primitive. And that point is not the origin of the primitive. And we can’t change it. And the only way to find that point is to read the docs or to try use it._lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_* Rotation is specified in local coordinate system of a _lt_b_gt_child_lt_/b_gt__co_ with respect to child’s origin. As I understand it_co_ applying several rotations to primitive is not directly supported. If you want to create some rotation animation about _lt_/span_gt__lt_span_gt__lt_span lang_eq__qt_en_qt_ xml_dd_lang_eq__qt_en_qt__gt_arbitrary_lt_/span_gt_ point (rotation2) of already rotated primitive (rotation1)_co_ you have to use two primitives. One with scale_co_ position and rotation2 and another (child of first) with rotation1._lt_/span_gt__lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt__lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_* Scale. I give up here. I can’t understand the logic of scale (see PG for example _lt_a href_eq__qt_http_dd_//babylonjs-playground.com/#1P2NDU%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjs-playground.com/#1P2NDU#1_lt_/a_gt_). From general considerations I see only two ways to apply scale – based on parent origin or based on child origin. Neither seems to be implemented (or it is_co_ but with the current implementation of primitive position it’s hard to understand how it is working)._lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_1.3 And …_lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_My current opinion is the following – the whole module is over-engineered_co_ it lost the simplicity and logic of OpenGL transformations_co_ and gained nothing in return. It’s easier for me to position thing using matrix transforms then to understand the logic of canvas2d._lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_What I suggest is to refactor the system using the following principle – provide user with a simple way to do simple things_co_ and let him do complex things any way he wants._lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_One way to do it_dd__lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_State that Canvas2d – is 2D vector graphics library. Vector graphics is all about vectors and transformations. The framework does not have to hide that fact from user. Parent-child hierarchy has to be interpreted as coordinate systems hierarchy. Framework have to simplify some standard thing_co_ providing some tools to deal with complex things. _lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_For example_co_ in the pair of two primitives – parent and child_co_ parent will have origin property_co_ that will affect child primitives only. Every child will have scale_co_ rotation and position properties that will be used to build most _lt_/span_gt__lt_span_gt__lt_span lang_eq__qt_en_qt_ xml_dd_lang_eq__qt_en_qt__gt_frequent_lt_/span_gt_ transformation (translate * rotate * scale). For every other possible transformation_co_ child provides method to add user defined transformation matrix_co_ maybe providing some helper method. (child.addTransfrom(new RotationTransform(point_co_ angle)). _lt_span_gt_ _lt_/span_gt__lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span_gt__lt_span lang_eq__qt_en_qt_ xml_dd_lang_eq__qt_en_qt__gt_I warn_lt_/span_gt_ed that it would be a _lt_/span_gt__lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_stream of consciousness _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_2. About primitive alignment_lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_First let say_co_ that there are two very different kind of alignments – positioning (left_co_ right_co_ top_co_ bottom_co_ center) and fill-stretch. _lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_2.1 Let’s talk about first group. May be I don’t understand something_co_ but I see the problem in the following way – we have user defined scale and rotation transform_co_ and we have to calculate translation transform by ourselves. And…where is the rocket science? _lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_1. Take bounding rectangle of scaled and rotated primitive (AABB_co_ in coordinates of parent)_co__lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_2. Apply margin vector (+ to tr_co_ - to bl) to get primitive effective rectangle_co__lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_3. Take parent primitive rectangle (AABB_co_ in self coordinates)_lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_4. Apply padding vector (+ to bl_co_ - to tr) to get layout area_lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_5. Calculate required translation (align one rectangle inside another)_lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_But if you take into account current implementation of origin/position things_co_ you will get the rocket science. _lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_2.2 Scale also have to be computed … oh my_lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt__lt_/span_gt__lt_/p_gt_\n_lt_p_gt_ _lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_That’s all is only my opinion after more than a month of canvas2d evaluation. May be I just don’t understand something_sm_ may I don’t get the idea of the framework. But what I see now _lt_span_gt_ _lt_/span_gt_– canvas2d tries to hide the complexity of WebGL_co_ but the abstraction used to do it is itself more complex than WebGL (in the part of transformations)_lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nockawa","Date":"2017-02-28T13:30:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWow_co_ thank you for taking the time to answer with such detailed info_co_ I don_t_t mind the stream of consciousness at all_co_ on the contrary!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1.1 The origin property has nothing to do with translation and parent/children relationship. It_t_s used to define the point that will act as the center for rotation and scale. To take the rotation for instance_co_ with 0.5_co_0.5 the prim will rotate around its center_co_ with 0_co_0 it will rotate around the left/bottom corner of its BoundingBox. It is very useful because based on your need this point may have to be positioned at different places. Changing the origin won_t_t move the primitive (if you change either or both of the parent_t_s or the prim_t_s origin)._lt_br /_gt_\n\tIf these rules are not true as of today_co_ then there_t_s a bug.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1.2\n_lt_/p_gt_\n\n_lt_p_gt_\n\t* Size_dd_ OK\n_lt_/p_gt_\n\n_lt_p_gt_\n\t* Position. The transformation origin is the bottom/left of the prim_co_ as it_t_s state clearly and many time in the doc_co_ as I say above_co_ it has nothing to do with the origin property.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t* Rotation. It will consider the primitive_t_s origin to determine the center of rotation_co_ it currently works\n_lt_/p_gt_\n\n_lt_p_gt_\n\t* Scale. You gave up and you were right to do so_co_ because it _lt_strong_gt_was_lt_/strong_gt_ bugged. I_t_ve tested your PG locally with the latest version and it works as expected now. The rule is the same as for rotation_co_ the primitive will scale (with the amount of the accumulated scale through the parent/child hierarchy which is actualScale) relative to the center defined by the origin property. I think it_t_s also something that the user could expect_co_ well_co_ I hope.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1.3 Well_co_ with what you test_co_ I can understand this opinion_co_ because all the features didn_t_t work as expected_co_ but it_t_s getting solved. Believe me_co_ I would have _lt_strong_gt_loved_lt_/strong_gt_ to keep it simple and never consider a custom origin_co_ it drove me mad_co_ but it_t_s a needed feature. By default the origin is 0.5_co_0.5_co_ maybe that was a mistake because when everything will work as expected this indeed make things still a little complicated. 0_co_0 would have set the origin to bottom/left and all the transformations would have applied as you expect_co_ simply... I think the current model (again_co_ once debugged) will be easy enough for people to use things_co_ again_co_ your experiments was unfortunately made at a time when I changed the scale behavior and origin to make a feature for _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8420-royibernthal/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8420_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8420-royibernthal/_qt_ rel_eq__qt__qt__gt_@royibernthal_lt_/a_gt_ and I_t_ve crashed everything_co_ then I went to refactor the positioning because it_t_s was bugged too...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo I won_t_t change the current properties/state_co_ the only thing that could change and it_t_s something for us to discuss (because this would be a breaking change) is the default origin value. 0_co_0 would lead to a _qt_simpler_qt_ library as the concept of origin would be inexistant (it_t_s useful when the value are different of 0).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOk..._dd_) 2.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2.1 YES! I completely agree_co_ and even if it_t_s not rocket science_co_ I was dumb enough to make the positioning computation _lt_b_gt_before_lt_/b_gt_ the rotation/scale was applied...Well to my (poor) defense_co_ I never intended to add positioning in C2D (and I never should have_co_ one of the biggest regret so far_co_ it should have been a GUI Lib stuff) and when I did_co_ well_co_ I didn_t_t think that much and put it in a place where it was computed before..._lt_br /_gt_\n\tBut no_co_ it_t_s not rocket science (anymore_co_ since I_t_ve refactored the positioning engine) to invert the process and make everything in the order you stated.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTaking the origin into consideration won_t_t change anything_co_ the origin will only change the position of the primitive_co_ as you stated_co_ we compute the position during alignment_co_ so origin should be harmless_co_ I_t_m not sure an animated prim that is rotation will act the same if its origin is 0_co_0 or 0.5_co_0.5_co_ it_t_s something that should be tested. But the more I think about it the more I_t_m convinced that origin should be _lt_u_gt_ignored when positioning is on_lt_/u_gt_. I don_t_t think this property brings added value in case of positioning..._lt_br /_gt_\n\tThe good thing now I_t_ve refactored the positioning engine is that internally I know/flag if a prim is using it or not. There_t_re two separate states and something two separate code paths.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tConcerning your conclusion_co_ well_co_ I think it_t_s a bit harsh but I understand it because you tested thoroughly at a time when there was regressions and also with things that never worked as expected (scale and scale propagation_co_ designMode_co_ positioning...).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThing is_dd_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/17014-masterk/?do_eq_hovercard_qt_ data-mentionid_eq__qt_17014_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/17014-masterk/_qt_ rel_eq__qt__qt__gt_@MasterK_lt_/a_gt_ came with the need of the designSize_co_ I thought it was a great idea and I understood the need_co_ but the way I_t_ve implemented it broke lots of stuffs and I had hard time to make cohabite designSize and regular mode._lt_br /_gt_\n\tI_t_m solving this issues right now_co_ I_t_m also supporting Device Pixel Ratio (DPR) now a changes of hardwareScalingLevel.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor now_co_ I think I_t_ll release first a version that works better with scale_co_ scale propagation_co_ origin_co_ DPR/hardwareScalingLevel and designMode. Hopefully bug free. Then I don_t_t think it will take a lot of time to invert the transformation/positioning computing order.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nockawa","Date":"2017-02-28T20:05:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tok guys_co_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/25416-tmth/?do_eq_hovercard_qt_ data-mentionid_eq__qt_25416_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/25416-tmth/_qt_ rel_eq__qt__qt__gt_@TMTH_lt_/a_gt_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/17014-masterk/?do_eq_hovercard_qt_ data-mentionid_eq__qt_17014_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/17014-masterk/_qt_ rel_eq__qt__qt__gt_@MasterK_lt_/a_gt_ and _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8420-royibernthal/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8420_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8420-royibernthal/_qt_ rel_eq__qt__qt__gt_@royibernthal_lt_/a_gt_ there_t_s a new preview and updated PG with many fixes... the designMode_co_ scaling through hierarchy_co_ origin and now the DevicePixelRatio (DPR) is supported (so please _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/17014-masterk/?do_eq_hovercard_qt_ data-mentionid_eq__qt_17014_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/17014-masterk/_qt_ rel_eq__qt__qt__gt_@MasterK_lt_/a_gt_ if you can test your game on a mobile with the latest preview_co_ that would be nice).\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nockawa","Date":"2017-03-02T19:33:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello people_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI just wanted to give you some info about what I did lately. I have a nasty little test where I combine DesignMode_co_ Scale in a Group2D and Primitives aligned inside this Group2D with also scale and margins..._lt_br /_gt_\n\tAnd right now this is working!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve followed one rule which makes sense_dd_ ignore the origin when a margin different than bottom/left is used. Then I had to consider scaling before the positioning and now things work as expected.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy last challenge and clearly not the least will be supporting also rotation with margin alignment. _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/25416-tmth/?do_eq_hovercard_qt_ data-mentionid_eq__qt_25416_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/25416-tmth/_qt_ rel_eq__qt__qt__gt_@TMTH_lt_/a_gt_ it_t_s not that easy one might think! _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_br /_gt_\n\tMy first test of a rotation Rect2D with no origin (so left/bottom corner) clearly demonstrate that to find the right offset won_t_t be an easy task... But I hope I_t_ll succeed.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nockawa","Date":"2017-03-03T13:01:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello Guys_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou_t_ll find attached a video of the progress_co_ here_t_s the code_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_let primScale _eq_ 2_sm_\nlet primSize _eq_ new BABYLON.Size(10_co_ 5)_sm_\n\nlet ssc _eq_ new BABYLON.ScreenSpaceCanvas2D(scene_co_\n    {\n        id_dd_ _qt_ScreenCanvas_qt__co_\n        designSize_dd_ new BABYLON.Size(500_co_ 300)_co_\n        designUseHorizAxis_dd_ false_co_\n        backgroundBorder_dd_ _qt_#80C080FF_qt__co_\n    })_sm_\n\nlet group _eq_ new BABYLON.Group2D({\n    parent_dd_ ssc_co_ width_dd_ 150_co_ height_dd_ 100_co_ scale_dd_ 2_co_ x_dd_ 100_co_ y_dd_ 100_co_ id_dd_ _qt_group_qt__co_ children_dd_\n    [\n        new BABYLON.Rectangle2D({ id_dd_ _qt_groupBackground_qt__co_ fill_dd_ _qt_#8080C0FF_qt_ })\n    ]\n})_sm_\n\nlet rect2 _eq_ new BABYLON.Rectangle2D({\n    parent_dd_ group_co_\n    marginHAlignment_dd_ BABYLON.PrimitiveAlignment.AlignRight_co_\n    marginVAlignment_dd_ BABYLON.PrimitiveAlignment.AlignTop_co_\n    marginRight_dd_ 10_co_\n    marginTop_dd_ 20_co_\n    size_dd_ primSize_co_\n    fill_dd_ _qt_#00FF00FF_qt__co_\n    scale_dd_ primScale_co_\n    rotation_dd_ Math.PI / 2_co_\n    padding_dd_ 1_co_\n    children_dd_ [\n        new BABYLON.Rectangle2D({ fill_dd_ _qt_#C0C0FFFF_qt_ })\n    ]\n})_sm_\n\nlet inc _eq_ 0.01_sm_\nsetInterval(() _eq_&gt_sm_ {\n    rect2.rotation +_eq_ 0.005_sm_\n    if (rect2.scale &gt_sm__eq_ 4) {\n        inc _eq_ - inc_sm_\n    }\n    else if (rect2.scale &lt_sm__eq_ 1) {\n        inc _eq_ - inc_sm_\n    }\n\n    rect2.scale +_eq_ inc_sm_\n}_co_ 10)_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI have still things to deal with but I_t_m near the end of this dev.\n_lt_/p_gt_\n\n_lt_p_gt__lt_a class_eq__qt_ipsAttachLink_qt_ href_eq__qt_//www.html5gamedevs.com/applications/core/interface/file/attachment.php?id_eq_11869_qt__gt_posEngine.mp4_lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nockawa","Date":"2017-03-08T11:29:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/tree/master/dist/preview%20release/canvas2D_qt_ rel_eq__qt_external nofollow_qt__gt_O_lt_/a_gt_k folks_co_ I_t_ve just commit on the master branch the new release with the updated positioning engine and few fixes_co_ I_t_ll write a post about it this afternoon_co_ there_t_s two little things left to be done_co_ but not regarding positioning\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Raitch","Date":"2017-03-09T15:07:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m quite confused currently. I was using origin (0.5_co_ 0.5) to scale from the center. How could I achieve similar results currently?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI tried creating a giant Group2D and have my Sprite2D have_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_    marginHAlignment_dd_ BABYLON.PrimitiveAlignment.AlignCenter_co_\n    marginVAlignment_dd_ BABYLON.PrimitiveAlignment.AlignCenter_co__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tBut I_t_m not really sure what happens.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_s_gt_Changing the rotation value seems to alter the position of the Sprite2D for some reason. _lt_/s_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tChanging the scaling seems to move the position of the up for some reason. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI can set different _t_scale_t_ values upon creating the Sprite2D_co_ but when I try to change .scale afterwards it just _qt_escapes_qt_ out of the screen after a couple of frames. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nockawa","Date":"2017-03-10T14:50:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tit is still the case_co_ there was a but with sprite2d but I have fixed it yesterday but I didn_t_t create a release yet.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m away right now I will do it asap\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nockawa","Date":"2017-03-10T21:19:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/7531-raitch/?do_eq_hovercard_qt_ data-mentionid_eq__qt_7531_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/7531-raitch/_qt_ rel_eq__qt__qt__gt_@Raitch_lt_/a_gt_ I_t_ve made a new release_co_ the bug was that a Sprite2D was always considered as using the positioning engine_co_ and then the origin was forced to 0_co_0. It_t_s now fixed.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"AlbertTJames","Date":"2017-03-11T13:34:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tGreat job Nock !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet us know when you have the documentation post done_co_ or if we can help for something. _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nockawa","Date":"2017-03-12T08:26:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI_t_ve already updated some doc_co_ but now we don_t_t update it on the fly_co_ it_t_s a weekly build so you_t_ll have to wait a bit_co_ well_co_ I didn_t_t update that much but you can see a new _lt_a href_eq__qt_http_dd_//babylonjs-playground.com/#BN6OY_qt_ rel_eq__qt_external nofollow_qt__gt_pg here_lt_/a_gt_. The latest posts I_t_ve made in the Canvas Main post thread are pretty much summarizing things well. \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"AlbertTJames","Date":"2017-03-24T16:12:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/18979-nockawa/?do_eq_hovercard_qt_ data-mentionid_eq__qt_18979_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/18979-nockawa/_qt_ rel_eq__qt__qt__gt_@Nockawa_lt_/a_gt__co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tCould you explain this behavior _dd_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//babylonjs-playground.com/#BN6OY%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjs-playground.com/#BN6OY#1_lt_/a_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t- What makes the rectangle float away like that ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_s_gt_- Should the design aera crop overflow from children view ? _lt_/s_gt_just saw one of your post mentioning that as a future feature\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks !\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nockawa","Date":"2017-03-24T23:04:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_168527_qt_ data-ipsquote-contentid_eq__qt_28689_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1490371954_qt_ data-ipsquote-userid_eq__qt_22270_qt_ data-ipsquote-username_eq__qt_AlbertTJames_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t6 hours ago_co_ AlbertTJames said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tHey _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/18979-nockawa/?do_eq_hovercard_qt_ data-mentionid_eq__qt_18979_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/18979-nockawa/_qt_ rel_eq__qt__qt__gt_@Nockawa_lt_/a_gt__co_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tCould you explain this behavior _dd_ \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_a href_eq__qt_http_dd_//babylonjs-playground.com/#BN6OY%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjs-playground.com/#BN6OY#1_lt_/a_gt_ \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t- What makes the rectangle float away like that ?\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_s_gt_- Should the design aera crop overflow from children view ? _lt_/s_gt_just saw one of your post mentioning that as a future feature\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThanks !\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tWell_co_ apparently if you don_t_t use alignment and animate scale of the rect things get bugged....\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve just created a _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/issues/1929_qt_ rel_eq__qt_external nofollow_qt__gt_new issue_lt_/a_gt_ I_t_ll take a look after I_t_ve coded the Clip feature that I started few minutes ago (the area crop you talk about).\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"AlbertTJames","Date":"2017-03-25T10:06:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYou_t_re the best _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2017-06-11T14:32:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis bug has been fixed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNote_dd_ Even though this has been fixed_co_ newcomers should choose GUI over Canvas2D.\n_lt_/p_gt_\n_lt_iframe data-embedcontent_eq__qt__qt_ frameborder_eq__qt_0_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/topic/30983-canvas2d-moved-to-extensions/?do_eq_embed_qt__gt__lt_/iframe_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]