[{"Owner":"EJanuszewski","Date":"2015-09-30T23:38:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi all_co_ I_t_m pretty new to this and I_t_m only really a beginner JavaScript developer too so sorry for potentially being naive._lt_/p_gt__lt_p_gt_I can_t_t share code as I_t_m not at my PC now but essentially I_t_ve got a mesh that I_t_m moving with the arrow keys_co_ (player.position.x +_eq_ .1_sm_ as an example) however on my 144hz monitor it moves twice as fast due to running more frames_co_ does anyone know what the solution to this would be_co_ or point me in the right direction and I_t_d love to try solve it myself._lt_/p_gt__lt_p_gt_Cheers_co__lt_/p_gt__lt_p_gt_Edward _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Ahiru","Date":"2015-10-01T01:51:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You could use_dd_ player.position.x +_eq_ 0.1 * scene.getAnimationRatio()_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This should give you an equal movement independent of the actual FPS-Rate._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-10-01T06:03:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey_co_ just wondering - how does your [N]Hz monitor affect the FPS? _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Ahiru","Date":"2015-10-01T06:42:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Don_t_t think it_t_s really the monitor? I understood he tried on two different computers - one with better specs (and the better monitor) and one on a lower one? That was just my guess  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"EJanuszewski","Date":"2015-10-01T06:43:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@Ahiru_lt_/p_gt__lt_p_gt_Awesome I_t_ll give that a try out later._lt_/p_gt__lt_p_gt_@RaananW_lt_/p_gt__lt_p_gt_Since I request animation frame and it refreshes 144hz that means it requests frames at 144fps_co_ I confirmed this with the debug layer too_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Ahiru","Date":"2015-10-01T06:47:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The monitor actually won_t_t make any difference - the rendering is using requestAnimatonFrame_co_ which limits the FPS to 60 FPS max - independent if your monitor has 50_co_ 100 or 144Hz._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-10-01T06:56:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_That_t_s what I thought_co_ and this is why I asked..._lt_/p_gt__lt_p_gt_You can fake a higher fps with setTimeout (or setInterval fro that matter)._lt_/p_gt__lt_p_gt_Besides_co_ babylon_t_s engine is actually taking out the need to use requestAnimationFrame._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-10-01T07:00:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt_Besides_co_ babylon_t_s engine is actually taking out the need to use requestAnimationFrame._lt_p_gt_ _lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_What do you mean ? no RAF any longer ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-10-01T07:09:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_What I mean is that you never use it yourself. It is already integrated in the framework _dd_-) So using it on your own will (i can only assume) drive the engine a bit crazy_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-10-01T07:12:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_aahhh... oki oki oki _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"chg","Date":"2015-10-01T07:58:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_98926_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_17550_qt_ data-ipsquote-username_eq__qt_Ahiru_qt_ data-cite_eq__qt_Ahiru_qt_ data-ipsquote-timestamp_eq__qt_1443682071_qt__gt__lt_div_gt__lt_p_gt_The monitor actually won_t_t make any difference - the rendering is using requestAnimatonFrame_co_ which limits the FPS to 60 FPS max - independent if your monitor has 50_co_ 100 or 144Hz._lt_/p_gt__lt_/div_gt__lt_/blockquote_gt_To quote Mozilla_t_s docs_dd_ _qt_The number of callbacks is usually 60 times per second_co_ _lt_em_gt_but will generally match the display refresh rate in most web browsers as per W3C recommendation._lt_/em_gt__qt_ _lt_a href_eq__qt_https_dd_//developer.mozilla.org/en/docs/Web/API/window/requestAnimationFrame_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//developer.mozilla.org/en/docs/Web/API/window/requestAnimationFrame_lt_/a_gt__lt_p_gt_\nI believe the standard offers no promise that rAF will max out at 60Hz_co_ and instead that browsers are encouraged to sync to the refresh rate of the video mode (it just happens that 60Hz is somewhat common)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"EJanuszewski","Date":"2015-10-01T08:00:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I am actually using runRenderLoop and scene.render() _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ my pc at home has a 144hz and a 60hz_co_ that_t_s how I spotted the issue_co_ so apparently it doesn_t_t limit to 60 _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ll try out Ahiru_t_s suggestion tonight at home and see if it fixes it._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-10-01T08:07:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_that_t_s really nice to know _dd_-) Will keep that in mind. 60 is not the holy grail anymore..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Ahiru","Date":"2015-10-01T09:00:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yes_co_ keep us informed - would be nice to know if the monitor frequency can really influence the FPS - Rate in the browser!!  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_ohmy.png_qt_ alt_eq__qt__dd_o_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/ohmy@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-10-01T09:43:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_98897_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_17550_qt_ data-ipsquote-username_eq__qt_EJanuszewski_qt_ data-cite_eq__qt_EJanuszewski_qt_ data-ipsquote-timestamp_eq__qt_1443656307_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_I_t_ve got a mesh that I_t_m moving with the arrow keys_co_ (player.position.x +_eq_ .1_sm_ as an example) however on my 144hz monitor it moves twice as fast due to running more frames_co_ _lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Short answer_dd_ Many games solve this problem by doing _qt_game rules_qt_ (processing inputs_co_ doing physics_co_ etc.) in one loop and rendering in another. The idea is that your game rules should probably use a fixed timestep - you don_t_t want physics behaving differently on slow and fast machines - but the render loop can run as fast as the player_t_s machine will go._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Long answer - go read _lt_a href_eq__qt_http_dd_//gafferongames.com/game-physics/fix-your-timestep/_qt_ rel_eq__qt_external nofollow_qt__gt_this article_lt_/a_gt_ right now! Required game developer reading in my humble opinion.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-10-01T09:55:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_this reminds me some parallelized dream _dd_ _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/14372-demo-webworkers-for-babylon/?p_eq_81799_qt__gt_http_dd_//www.html5gamedevs.com/topic/14372-demo-webworkers-for-babylon/?p_eq_81799_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-10-01T10:05:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_For my game I just run both loops in the same thread_co_ it_t_s pretty straightforward. The render loop runs off RAF like normal_co_ and for the tick loop_co_ I call it at 30fps and I always always pass it dt_eq_33ms_co_ regardless of how long it_t_s really been since the last tick._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"EJanuszewski","Date":"2015-10-01T12:09:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Interesting read fenomas_co_ a lot of it goes over my head as an amatuer but I_t_m sure I_t_ll understand it in the future _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Can_t_t believe how much of a discussion I stirred up _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-10-01T12:19:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@fenomas _dd_ what do you mean with _qt_I call it at 30fps and I always always pass it dt_eq_33ms_qt_ ?_lt_/p_gt__lt_p_gt_Do you simply use some JS _lt_em_gt_setInterval() _lt_/em_gt_or do you manage your own ticks with some embedded loops (so you get your own time measures) ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-10-01T13:07:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_jerome_dd_ It took me a while to figure it all out_co_ but basically I have functions like_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_function tick(dt) {   // step game world forward in time by tick_time}function render(tick_dt) {   // for each mesh_dd_ position +_eq_ velocity * tick_dt   // render world}_lt_/pre_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_tick()_lt_/span_gt_ does things like step the physics engine_co_ handle the AI_co_ apply game rules_co_ etc. The function takes a time step but I always pass it a fixed amount._lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_ render()_lt_/span_gt_ renders the state of the world (including calling BJS render). Note that the render function also takes a _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_dt_lt_/span_gt__co_ and moves meshes along their velocities a little - this lets you run physics less often and still get smooth movement._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_As for how I call the functions_co_ I use a handy library called _lt_a href_eq__qt_https_dd_//github.com/mikolalysenko/game-shell_qt_ rel_eq__qt_external nofollow_qt__gt_game-shell_lt_/a_gt_ that manages the timing_co_ along with other features. But I think it would work just as well to do use a _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_setInterval_lt_/span_gt_ for _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_tick()_lt_/span_gt_ and an RAF loop for _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_render()_lt_/span_gt_._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"EJanuszewski","Date":"2015-10-03T17:46:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Just a follow up on this_co_ scene.getAnimationRatio()_sm_ seems to do the job  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So as for tick_co_ as I need the same thing are you saying I can just run a setInterval outside of the runRenderLoop? Do you happen to have a code example you can share?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-10-04T01:40:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Like I said I use that game-shell library_co_ and it manages the timings for me. To do it manually_co_ I would do something like this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var tick_time _eq_ 40  // desired ms between ticks.. 40 would be for 25 ticks/secondfunction RAF() {   var now _eq_ performance.now()   var dt _eq_ now - _last   _last _eq_ now   if (game_paused) { return }      accumulator +_eq_ dt   if (accumulator &gt_sm_ tick_time) {       accumulator -_eq_ tick_time       game.tick(tick_time)       last_tick _eq_ now   }   var time_since_tick _eq_ now - last_tick   game.render(time_since_tick)   requestAnimationFrame(RAF)}_lt_/pre_gt__lt_p_gt_That_t_s off the top of my head_co_ but something along those lines. Note that I don_t_t pass _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_dt_lt_/span_gt_ to the tick function_co_ I pass a constant value so that I get fixed timesteps. The _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_accumulator_lt_/span_gt_ variable is so that you get the right number of ticks over the long run_co_ and the _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_time_since_tick_lt_/span_gt_ variable being passed to the render function is so that it can update mesh positions (assuming they_t_re driven by key inputs or a physics engine.. for a plain animation I guess this would work differently)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Does that make any sense? _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-10-04T05:43:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_What does exactly _lt_em_gt__lt_span_gt_game_lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(102_co_102_co_0)_sm__qt__gt_._lt_/span_gt__lt_span_gt_tick_lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(102_co_102_co_0)_sm__qt__gt_(_lt_/span_gt__lt_span_gt_tick_time_lt_/span_gt__lt_/em_gt__lt_span style_eq__qt_color_dd_rgb(102_co_102_co_0)_sm__qt__gt__lt_em_gt_)_lt_/em_gt_ do ?_lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-10-04T13:11:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The tick function advances game rules - steps the physics engine_co_ NPC AI_co_ checks for collisions_co_ or whatever. The purpose of that code is to avoid running the game rules at variable timesteps._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-10-04T13:46:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Nice_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_and what are the pro/con compared to an equivalent of _lt_em_gt_tick()_lt_/em_gt_ just called by a simple _lt_em_gt_setInterval()_lt_/em_gt_ indepedant from the RAF of course ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I mean _dd__lt_/p_gt__lt_ul_gt__lt_li_gt_render only in the _lt_em_gt_requestAnimationFrame()_lt_/em_gt_ callback_lt_/li_gt__lt_li_gt_physics_co_ AI_co_ controls_co_ etc in the _lt_em_gt_setInterval()_lt_/em_gt_ callback_lt_/li_gt__lt_/ul_gt__lt_p_gt_say_co_ with _lt_em_gt_setInterval_lt_/em_gt_ called every 33 ms for instance_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]