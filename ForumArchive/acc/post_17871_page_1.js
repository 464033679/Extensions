[{"Owner":"nomadic_aviator","Date":"2015-10-14T19:59:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have another question about the real estate project I am working on._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I am using Node.js as the server for this project. It is fairly straightforward and I have gotten the application to work except for one part._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_When i look at the console_co_ it appears that the app wont get the .babylon file I am importing into my scene. I am not sure how to solve this but I have uploaded this project on Github if you would like to take a look_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/nomadicvince/WebGL-and-Node_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/nomadicvince/WebGL-and-Node_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have found an Babylon.js npm_co_ but I don_t_t see any tutorials on how to use it in the app. Is my approach to this wrong?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dotJayEss","Date":"2015-10-14T21:13:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Your Express server is not aware of how to handle the .babylon extension. You will experience this issue in pretty much any server environment as most servers will not recognize this extension and thus will not know the mime type. In your app.js you will need to add to the mime table._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I haven_t_t used express in a while_co_ but this used to be done like this_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_margin_dd_0px_sm__qt__gt_app_lt_/span_gt__lt_span style_eq__qt_font-family_dd_Consolas_co_ Menlo_co_ Monaco_co_ _t_Lucida Console_t__co_ _t_Liberation Mono_t__co_ _t_DejaVu Sans Mono_t__co_ _t_Bitstream Vera Sans Mono_t__co_ _t_Courier New_t__co_ monospace_co_ sans-serif_sm_margin_dd_0px_sm__qt__gt_._lt_/span_gt__lt_span style_eq__qt_font-family_dd_Consolas_co_ Menlo_co_ Monaco_co_ _t_Lucida Console_t__co_ _t_Liberation Mono_t__co_ _t_DejaVu Sans Mono_t__co_ _t_Bitstream Vera Sans Mono_t__co_ _t_Courier New_t__co_ monospace_co_ sans-serif_sm_margin_dd_0px_sm__qt__gt_mime_lt_/span_gt__lt_span style_eq__qt_font-family_dd_Consolas_co_ Menlo_co_ Monaco_co_ _t_Lucida Console_t__co_ _t_Liberation Mono_t__co_ _t_DejaVu Sans Mono_t__co_ _t_Bitstream Vera Sans Mono_t__co_ _t_Courier New_t__co_ monospace_co_ sans-serif_sm_margin_dd_0px_sm__qt__gt_._lt_/span_gt__lt_span style_eq__qt_font-family_dd_Consolas_co_ Menlo_co_ Monaco_co_ _t_Lucida Console_t__co_ _t_Liberation Mono_t__co_ _t_DejaVu Sans Mono_t__co_ _t_Bitstream Vera Sans Mono_t__co_ _t_Courier New_t__co_ monospace_co_ sans-serif_sm_margin_dd_0px_sm__qt__gt_type_lt_/span_gt__lt_span style_eq__qt_font-family_dd_Consolas_co_ Menlo_co_ Monaco_co_ _t_Lucida Console_t__co_ _t_Liberation Mono_t__co_ _t_DejaVu Sans Mono_t__co_ _t_Bitstream Vera Sans Mono_t__co_ _t_Courier New_t__co_ monospace_co_ sans-serif_sm_margin_dd_0px_sm__qt__gt_[_lt_/span_gt__lt_span style_eq__qt_font-family_dd_Consolas_co_ Menlo_co_ Monaco_co_ _t_Lucida Console_t__co_ _t_Liberation Mono_t__co_ _t_DejaVu Sans Mono_t__co_ _t_Bitstream Vera Sans Mono_t__co_ _t_Courier New_t__co_ monospace_co_ sans-serif_sm_margin_dd_0px_sm__qt__gt__t_.fx_t__lt_/span_gt__lt_span style_eq__qt_font-family_dd_Consolas_co_ Menlo_co_ Monaco_co_ _t_Lucida Console_t__co_ _t_Liberation Mono_t__co_ _t_DejaVu Sans Mono_t__co_ _t_Bitstream Vera Sans Mono_t__co_ _t_Courier New_t__co_ monospace_co_ sans-serif_sm_margin_dd_0px_sm__qt__gt_]_lt_/span_gt__lt_span style_eq__qt_font-family_dd_Consolas_co_ Menlo_co_ Monaco_co_ _t_Lucida Console_t__co_ _t_Liberation Mono_t__co_ _t_DejaVu Sans Mono_t__co_ _t_Bitstream Vera Sans Mono_t__co_ _t_Courier New_t__co_ monospace_co_ sans-serif_sm_margin_dd_0px_sm__qt__gt_ _lt_/span_gt__lt_span style_eq__qt_font-family_dd_Consolas_co_ Menlo_co_ Monaco_co_ _t_Lucida Console_t__co_ _t_Liberation Mono_t__co_ _t_DejaVu Sans Mono_t__co_ _t_Bitstream Vera Sans Mono_t__co_ _t_Courier New_t__co_ monospace_co_ sans-serif_sm_margin_dd_0px_sm__qt__gt__eq__lt_/span_gt__lt_span style_eq__qt_font-family_dd_Consolas_co_ Menlo_co_ Monaco_co_ _t_Lucida Console_t__co_ _t_Liberation Mono_t__co_ _t_DejaVu Sans Mono_t__co_ _t_Bitstream Vera Sans Mono_t__co_ _t_Courier New_t__co_ monospace_co_ sans-serif_sm_margin_dd_0px_sm__qt__gt_ _lt_/span_gt__lt_span style_eq__qt_font-family_dd_Consolas_co_ Menlo_co_ Monaco_co_ _t_Lucida Console_t__co_ _t_Liberation Mono_t__co_ _t_DejaVu Sans Mono_t__co_ _t_Bitstream Vera Sans Mono_t__co_ _t_Courier New_t__co_ monospace_co_ sans-serif_sm_margin_dd_0px_sm__qt__gt__t_application/fx_t__lt_/span_gt__lt_span style_eq__qt_font-family_dd_Consolas_co_ Menlo_co_ Monaco_co_ _t_Lucida Console_t__co_ _t_Liberation Mono_t__co_ _t_DejaVu Sans Mono_t__co_ _t_Bitstream Vera Sans Mono_t__co_ _t_Courier New_t__co_ monospace_co_ sans-serif_sm_margin_dd_0px_sm__qt__gt__sm__lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_Consolas_co_ Menlo_co_ Monaco_co_ _t_Lucida Console_t__co_ _t_Liberation Mono_t__co_ _t_DejaVu Sans Mono_t__co_ _t_Bitstream Vera Sans Mono_t__co_ _t_Courier New_t__co_ monospace_co_ sans-serif_sm_margin_dd_0px_sm__qt__gt_app.mime.type[_t_.babylon_t_] _eq_ _t_application/babylon_t__sm__lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_Consolas_co_ Menlo_co_ Monaco_co_ _t_Lucida Console_t__co_ _t_Liberation Mono_t__co_ _t_DejaVu Sans Mono_t__co_ _t_Bitstream Vera Sans Mono_t__co_ _t_Courier New_t__co_ monospace_co_ sans-serif_sm__qt__gt_app.mime.type[_t_.babylonmeshdata_t_] _eq_ _t_application/babylonmeshdata_t__sm__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_Consolas_co_ Menlo_co_ Monaco_co_ _t_Lucida Console_t__co_ _t_Liberation Mono_t__co_ _t_DejaVu Sans Mono_t__co_ _t_Bitstream Vera Sans Mono_t__co_ _t_Courier New_t__co_ monospace_co_ sans-serif_sm__qt__gt_While the syntax may not be right it should point you in the right direction_co_ you are looking for a way for the server to respond with the proper mime type in the header when the .babylon extension is being requested._lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"nomadic_aviator","Date":"2015-10-18T00:56:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thank you very much. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"KarelAnker","Date":"2015-10-23T14:39:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_How did you fix it?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ve tried this_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_div_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_express.static.mime.define({_t_application/babylon_t__dd_ [_t_babylon_t_]_co__t_application/fx_t__dd_ [_t_fx_t_]_co__t_application/babylonmeshdata_t__dd_ [_t_babylonmeshdata_t_]})_sm__lt_/pre_gt__lt_p_gt_but that didn_t_t really work_lt_/p_gt__lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JackFalcon","Date":"2017-01-09T02:44:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello Babylon community_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t--&gt_sm_Here is good example_co_ of NodeJS serving .babylon files&lt_sm_--\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt uses Dynamic Mime Types to populate the response.Content-type field_co_ from the request file sent.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut_co_ at just the right moment in Node.createServer(...).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBasically this_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    res.writeHead(200_co_{_lt_br /_gt_\n\t                        _qt_Content-type_qt_ _dd_ mimeType_co_                      //&lt_sm_-- SET dynamic MIME TYPE when .babylon files come through._lt_br /_gt_\n\t                        _qt_Content-Length_qt_ _dd_ contents.length_lt_br /_gt_\n\t                    })_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tInstructions_dd_ With node installed_co_ clone git_co_ then cmd line run&gt_sm_ node server\n_lt_/p_gt_\n\n_lt_p_gt_\n\tResult (localhost_dd_8080)_dd_ .babylon meshes loaded successfully by Node in two ways_dd_ AssetsManager &amp_sm_&amp_sm_ SceneLoader.ImportMesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ data-fileid_eq__qt_11081_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_01/twomeshesinnode3.png.20694636d332c5bec1f8892de6a2f7d1.png_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_twomeshesinnode3.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_11081_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_01/twomeshesinnode3.png.20694636d332c5bec1f8892de6a2f7d1.png_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]