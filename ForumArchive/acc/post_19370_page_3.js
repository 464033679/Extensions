[{"Owner":"Deltakosh","Date":"2015-12-21T18:06:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The problemis that our shader handle light range_co_ light attenuation_co_ specular over alpha_co_ we are using index where 3js does not here_co_ etc... _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-12-21T19:59:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yep_lt_/p_gt__lt_p_gt_In other words_co_ the scenes aren_t_t comparable under the hood_co_ because our standard material does much more by default than the 3js phong material. Am I right ?_lt_/p_gt__lt_p_gt_(btw_co_ as I learnt a bit 3js_co_ I believe they have the light attenuation) _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now_co_ I_t_m playing the devil_t_s advocate ..._lt_/p_gt__lt_p_gt_The problem could be then _dd_ a newcomer that doesn_t_t see nor know the differences (I sincerely can_t_t on this specific scene) will wonder why there is such a performance difference about a so simple example ? _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have no argument to answer this._lt_/p_gt__lt_p_gt_I don_t_t even know if provinding many many parameters to make the standard material behaves lightly is really worth it ? Who will tune this ? This won_t_t be simple ... so not _qt_simple and powerful_qt__lt_/p_gt__lt_p_gt_This is the 3js approach _dd_ something is provided_co_ then you can set plenty of complex parameters to improve it._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Another question (mine this time_co_ not the devil_t_s advocate_t_s one)._lt_/p_gt__lt_p_gt_On my old laptop_co_ I had these results _dd__lt_/p_gt__lt_p_gt_- Marcuse_t_s 3js scene with 1000 boxes _dd_ 55 fps_lt_/p_gt__lt_p_gt_- DK_t_s optimized bjs scene on catuhe.com with 1000 boxes _dd_ 50 fps_lt_/p_gt__lt_p_gt_- current bjs ol_t_good PG with a sps and 1700 boxes _dd_ 60 fps (near 58 fps with 2000 boxes)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So if the SPS can so easily handle similar object instances whereas it uses the same underlying shader_co_ material_co_ rendering than any other bjs standard mesh_co_ isn_t_t there a lead to investigate into the way the draw calls are done or the geometries are buffered ?_lt_/p_gt__lt_p_gt_I know it_t_s a naive question._lt_/p_gt__lt_p_gt_Just wondering how to meet this challenge._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mightymarcus","Date":"2015-12-21T20:22:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_109937_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_19370_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1450711658_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_hey marcus_co_ thanks for this!_lt_/p_gt__lt_p_gt_There is a typo_dd_ Can you please rename checkOnlyOnce by checkReadyOnlyOnce? (and can you reference directly _lt_a href_eq__qt_http_dd_//www.babylonjs.com/babylon.max.js_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/babylon.max.js_lt_/a_gt_ ?)_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_Ok_co_ did it. Now bjs 11 fps and three.js 15 fps for me _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It_t_s getting better and better. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ I_t_d love to stick with Babylon_co_ I should try to get more into it. I_t_m pretty new to 3D stuff at all._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_One thing that I noticed is in the scene class when I comment out the mousemove pick test it gets some fps more. So when I dont want to be able to pick any mesh maybe it_t_d be good to not pick test at all._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_div_gt_        // Pointers handling_lt_/div_gt__lt_div_gt_        Scene.prototype.attachControl _eq_ function () {_lt_/div_gt__lt_div_gt_            var _this _eq_ this_sm__lt_/div_gt__lt_div_gt_            this._onPointerMove _eq_ function (evt) {_lt_/div_gt__lt_div_gt_                var canvas _eq_ _this._engine.getRenderingCanvas()_sm__lt_/div_gt__lt_div_gt_                _this._updatePointerPosition(evt)_sm__lt_/div_gt__lt_div_gt_                /*var pickResult _eq_ _this.pick(_this._pointerX_co_ _this._pointerY_co_ function (mesh) { return mesh.isPickable &amp_sm_&amp_sm_ mesh.isVisible &amp_sm_&amp_sm_ mesh.isReady()_sm_ }_co_ false_co_ _this.cameraToUseForPointers)_sm__lt_/div_gt__lt_div_gt_                if (pickResult.hit) {_lt_/div_gt__lt_div_gt_                    _this._meshUnderPointer _eq_ pickResult.pickedMesh_sm__lt_/div_gt__lt_div_gt_                    _this.setPointerOverMesh(pickResult.pickedMesh)_sm__lt_/div_gt__lt_div_gt_                    if (_this._meshUnderPointer.actionManager &amp_sm_&amp_sm_ _this._meshUnderPointer.actionManager.hasPointerTriggers) {_lt_/div_gt__lt_div_gt_                        canvas.style.cursor _eq_ _qt_pointer_qt__sm__lt_/div_gt__lt_div_gt_                    }_lt_/div_gt__lt_div_gt_                    else {_lt_/div_gt__lt_div_gt_                        canvas.style.cursor _eq_ _qt__qt__sm__lt_/div_gt__lt_div_gt_                    }_lt_/div_gt__lt_div_gt_                }_lt_/div_gt__lt_div_gt_                else {_lt_/div_gt__lt_div_gt_                    _this.setPointerOverMesh(null)_sm__lt_/div_gt__lt_div_gt_                    canvas.style.cursor _eq_ _qt__qt__sm__lt_/div_gt__lt_div_gt_                    _this._meshUnderPointer _eq_ null_sm__lt_/div_gt__lt_div_gt_                }*/_lt_/div_gt__lt_div_gt_            }_sm__lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-12-21T20:47:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_strong_gt_@Jerome_lt_/strong_gt__dd_ Correct. And you are right_co_ we want to stick to _qt_simple and powerful_qt_. But I also want to provide advanced controls for people who want them. For instance_co_ advanced users can call material.freeze() to get more performance._lt_/p_gt__lt_p_gt_Being simple to use force us to_co_ sometimes_co_ have complex behaviors under the hood._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Regarding what you said with SPS_co_ the problem with the test that Marcus did is that cubes in 3js do not use indexing and instead send plain buffers where bjs always use indexing. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Indexing here is counterproductive because it is more efficient to send 32 vertices instead of 24 vertices and 36 indices. Obviously this changes with bigger objects where indexing becomes quickly a must have to save bandwidth_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_strong_gt_@marcus_lt_/strong_gt__dd_ you can ask the scene to avoid checking mouse states with scene.detachControl()_sm__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-12-21T21:08:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_cool ... material.freeze() stays a simple thing to do for anyone  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_em_gt_Capice_lt_/em_gt_ about indexing...we were here in a very specific case._lt_/p_gt__lt_p_gt_So such a specific challenge could then have a specific answer _dd_ 3js and bjs don_t_t behave the same in the way they pass stuff to the GPU_co_ so please don_t_t try to reproduce exactly the same code from the one to the other_co_ but use the best tool of each to reach the goal (in this very case_co_ this might be instances or sps for bjs)  _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mightymarcus","Date":"2015-12-21T21:33:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_109991_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_19370_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1450730859_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt__lt_strong_gt_@Jerome_lt_/strong_gt__dd_ Correct. And you are right_co_ we want to stick to _qt_simple and powerful_qt_. But I also want to provide advanced controls for people who want them. For instance_co_ advanced users can call material.freeze() to get more performance._lt_/p_gt__lt_p_gt_Being simple to use force us to_co_ sometimes_co_ have complex behaviors under the hood._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Regarding what you said with SPS_co_ the problem with the test that Marcus did is that cubes in 3js do not use indexing and instead send plain buffers where bjs always use indexing. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Indexing here is counterproductive because it is more efficient to send 32 vertices instead of 24 vertices and 36 indices. Obviously this changes with bigger objects where indexing becomes quickly a must have to save bandwidth_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_strong_gt_@marcus_lt_/strong_gt__dd_ you can ask the scene to avoid checking mouse states with scene.detachControl()_sm__lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Ah_co_ ok. Or perhaps no attachControl at all ..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Will try it with some more complex meshes than cubes._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-12-21T21:36:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_On the mouse thing_co_ you could just not attach it in the first place_co_ instead of detaching it afterward (oh see a reply saying that too).  I remember saying that to someone_co_ but they said the wanted to still move the camera with keys.  Maybe optional args on attach like _t_notMouse_t_ and _t_notkeyboard_t__co_ but not important for me._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mightymarcus","Date":"2015-12-21T23:36:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok. I updated the uh benchmarks. Now three.js meshes has specular color too_co_ both use indiced vertices._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_500 Objects._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Three.js ~40 fps_lt_/p_gt__lt_p_gt_BJs  ~36 fps._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ Everything is all right. Thanks for the patience. I did not knew some things before._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-12-22T00:53:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_are you using latest 2.3 version?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mightymarcus","Date":"2015-12-22T01:33:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I think so._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs.com/babylon.max.js_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/babylon.max.js_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_My game-prototype runs very well now. I really don_t_t care about some fps more or less._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have a terrain mesh with 1700 vertices in the background and a bump-map and it performs good on my phone with that low-end graphics card._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The real problem was updating a 2D canvas every frame with fillText. So I thought it had something to do with babylonjs and made some noobish tests and tried out the HexGL game on my smartphone which is using three.js and came to wrong conclusions. I_t_m really satisfied now and can continue with my game. Cheers!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-12-22T08:04:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_on my old laptop_co_ the Marcuse_t_s updated scene (uboat) runs at 40 fps now for both 3js and bjs !_lt_/p_gt__lt_p_gt_exactly the same framerate _dd_-)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MarianG","Date":"2015-12-22T11:58:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I have 25 fps in babylonjs scene_co_ and 28 fps in threejs scene_co_ but in threejs_co_ nothing show_co_ ....white window._lt_/p_gt__lt_p_gt_I used Chrome on ASUS tab. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-12-22T14:55:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_strike_gt_I saw your commit about this param set to false by default_co_ but I think he had not updated yet the version on the test site because still same results for me on Galaxy S4_co_ Chrome android _dd_ BJS 17 fps average_co_ 3JS 40 fps average._lt_/strike_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_EDIT _dd_ forget about this message_co_ a stupid manipulation on my phone made me publish this post many hours after I wrote it _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mightymarcus","Date":"2015-12-23T09:01:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_110007_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_19370_qt_ data-ipsquote-username_eq__qt_mightymarcus_qt_ data-cite_eq__qt_mightymarcus_qt_ data-ipsquote-timestamp_eq__qt_1450741003_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Ok. I updated the uh benchmarks. Now three.js meshes has specular color too_co_ both use indiced vertices._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_500 Objects._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Three.js ~40 fps_lt_/p_gt__lt_p_gt_BJs  ~36 fps._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ Everything is all right. Thanks for the patience. I did not knew some things before._lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Just for the record_co_ i made a little mistake (again) ..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The Stats fps in the babylon scene showed more fps than it actually was._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now with 200 objects the fps in the three.js scene is ~55_co_ in the babylon scene it_t_s ~35._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_With 500 meshes three.js scene was 40fps_co_ babylon.js actually not 36 but only 19 fps._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_EDIT_dd_ Now that_t_s strange. When I use instances instead of clones I get just 3 fps more ..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_My guess is that BJs is using many method calls which burdens the CPU if there are many objects. The differences in fps are growing with the number of objects. Have to test this with BabylonHx_co_ where functions can be inlined by the haxe compiler which often gives a significant performance boost if it_t_s done right. (or are functions inlined with typescript anyway?). Unfortunately inlining for the javascript target is working not very well because it produces anonymous functions which can make it even worse than not inlining._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I think I_t_ll have to do 2 versions of my game-prototype to get a more realistic insight_co_ but this should be not much work._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mightymarcus","Date":"2015-12-23T09:17:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_110061_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_19370_qt_ data-ipsquote-username_eq__qt_Vousk-prod._qt_ data-cite_eq__qt_Vousk-prod._qt_ data-ipsquote-timestamp_eq__qt_1450796157_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt__lt_strike_gt_I saw your commit about this param set to false by default_co_ but I think he had not updated yet the version on the test site because still same results for me on Galaxy S4_co_ Chrome android _dd_ BJS 17 fps average_co_ 3JS 40 fps average._lt_/strike_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_EDIT _dd_ forget about this message_co_ a stupid manipulation on my phone made me publish this post many hours after I wrote it _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_That_t_s the same results that I get._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-12-23T17:31:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Can you share both scenes with FPS counters?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-12-23T17:45:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Other interesting finding_dd_ bjs is clearly faster on my PC (by nearly 20%) using your current demos._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I also detected that 3js version still uses non indexed content which is fairly more efficient when vertices are simple (only position and normal here) and vertex reuse low. I will work on a feature to convert a mesh to a non indexed version on demand _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-12-23T17:47:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_cool !_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_[EDIT] @DK _dd_ do you mean they don_t_t use _lt_em_gt_indices_lt_/em_gt_ at all ?_lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/mrdoob/three.js/issues/6926_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/mrdoob/three.js/issues/6926_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_[EDIT2] _dd_ or has it to do_co_ behind the scene_co_ with the glDrawArrays vs the glDrawElements use ? _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mightymarcus","Date":"2015-12-23T18:20:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_110183_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_19370_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1450892738_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Other interesting finding_dd_ bjs is clearly faster on my PC (by nearly 20%) using your current demos._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I also detected that 3js version still uses non indexed content which is fairly more efficient when vertices are simple (only position and normal here) and vertex reuse low. I will work on a feature to convert a mesh to a non indexed version on demand _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_That_t_s because I used instances for babylon_co_ where the three.js demo doesn_t_t share the meshes geometry. If both using clones with 5000 Meshes 3Js get 21 fps and BJs 13 on my PC._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But if both use instances (share same geometry and material) Bjs have 20 fps and 3Js 22 fps._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Hehe._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mightymarcus","Date":"2015-12-23T18:53:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_110179_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_19370_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1450891894_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Can you share both scenes with FPS counters?_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I don_t_t know why_co_ but the babylon stats show more fps than the chrome fps counter ..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But I noticed that with gpu-z both demos have only like 20% gpu load and 420 Mhz GPU Core Clock (three) or 460 Mhz (babylon) from 1075 Mhz._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Hm... If the chrome stats are wrong babylon is faster than 3js (in that case). But it_t_s not_co_ firefox shows the same fps like chrome._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-12-23T19:33:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@Jerome_dd_ Yep_co_ no indices at all_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@Marcus_dd_ can you still turn FPS on to see why this is different?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mightymarcus","Date":"2015-12-23T19:53:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_110196_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_19370_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1450899234_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_@Jerome_dd_ Yep_co_ no indices at all_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@Marcus_dd_ can you still turn FPS on to see why this is different?_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Yes_co_ maybe you need to clear the cache._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-12-23T20:00:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Here is my new version with the new mesh.convertToUnIndexedMesh()_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.catuhe.com/trash/perf.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.catuhe.com/trash/perf.html_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-12-23T20:03:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@Marcus_dd_ Beware BJS version is rendered twice_dd_ There is a call to render in the assets loaded function and one outside hence two call to requestFrameAnimation   _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mightymarcus","Date":"2015-12-23T20:19:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The first call starts the loop function. Inside the loop function it_t_s rendered once. If that like you say then it would be in three.js the same._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_UPDATE_dd_ You_t_re right. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Oh my god ..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now Bjs with instances is really faster. I_t_m such a fool sometimes _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now 3Js 22 fps_lt_/p_gt__lt_p_gt_Bjs 39 fps_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_With clones_co_ not intances_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_both 22 fps._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And in smartphone with less objects_co_ let_t_s do 500. (I_t_m cooking right now ...) and clones not instances_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Bjs 25 fps_lt_/p_gt__lt_p_gt_3Js 28 fps_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Puh ... great news. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]