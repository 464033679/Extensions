[{"Owner":"MarianG","Date":"2015-10-09T06:28:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi guys. I have a little task that I can_t_t complet it_lt_/p_gt__lt_p_gt_Let me explain._lt_/p_gt__lt_p_gt_I have a sphere with 3 bones. Using bones and a slider I modify the sphere geometry_co_ I can scale_co_ translate or rotate the bones_co_ It works like a morph._lt_/p_gt__lt_p_gt_After deform the mesh I want to save it as new babylon file_co_ without bones_co_ but keep deform geometry_co_ not original._lt_/p_gt__lt_p_gt_In this scope I update positions_co_ normals_co_ compute normals_co_ but all time the new babylon file is saved like original_co_ and not deform._lt_/p_gt__lt_p_gt_I have to update anything else?_lt_/p_gt__lt_p_gt_Or I have to save the skeleton too? ....If yes_co_ than I have a problem_co_ because I want to add an animation to the new mesh_co_ that I think will overwrite the skeleton._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here are 2 picture that show my problem_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//prntscr.com/8pd0co_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//prntscr.com/8pd0co_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//prntscr.com/8pd0qd_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//prntscr.com/8pd0qd_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_first sphere is the original_co_ and second is sphere saved._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And I make a playground._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1WKAQI%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1WKAQI#2_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Any opinion is welcome. Thanks_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MarianG","Date":"2015-10-09T07:48:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I did it. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_) _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_with this piece of code_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_        var positionsData _eq_ mesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm_\tvar normalsData _eq_ mesh.getVerticesData(BABYLON.VertexBuffer.NormalKind)_sm_\tvar matricesIndicesData _eq_ mesh.getVerticesData(BABYLON.VertexBuffer.MatricesIndicesKind)_sm_\tvar matricesWeightsData _eq_ mesh.getVerticesData(BABYLON.VertexBuffer.MatricesWeightsKind)_sm_\tvar skeletonMatrices _eq_ skeleton.getTransformMatrices()_sm_\tvar tempVector3 _eq_ BABYLON.Vector3.Zero()_sm_\tvar finalMatrix _eq_ new BABYLON.Matrix()_sm_\tvar tempMatrix _eq_ new BABYLON.Matrix()_sm_\t\tfor (var index _eq_ 0_sm_ index &lt_sm_ positionsData.length_sm_ index +_eq_ 3) {\t\tvar index4 _eq_ (index / 3) * 4_sm_\t\tvar matricesWeight0 _eq_ matricesWeightsData[index4]_sm_\t\tvar matricesWeight1 _eq_ matricesWeightsData[index4 + 1]_sm_\t\tvar matricesWeight2 _eq_ matricesWeightsData[index4 + 2]_sm_\t\tvar matricesWeight3 _eq_ matricesWeightsData[index4 + 3]_sm_\t\tif (matricesWeight0 &gt_sm_ 0) {\t\t\tBABYLON.Matrix.FromFloat32ArrayToRefScaled(skeletonMatrices_co_ matricesIndicesData[index4] * 16_co_ matricesWeight0_co_ tempMatrix)_sm_\t\t\tfinalMatrix.addToSelf(tempMatrix)_sm_\t\t}\t\tif (matricesWeight1 &gt_sm_ 0) {\t\t\tBABYLON.Matrix.FromFloat32ArrayToRefScaled(skeletonMatrices_co_ matricesIndicesData[index4 + 1] * 16_co_ matricesWeight1_co_ tempMatrix)_sm_\t\t\tfinalMatrix.addToSelf(tempMatrix)_sm_\t\t}\t\tif (matricesWeight2 &gt_sm_ 0) {\t\t\tBABYLON.Matrix.FromFloat32ArrayToRefScaled(skeletonMatrices_co_ matricesIndicesData[index4 + 2] * 16_co_ matricesWeight2_co_ tempMatrix)_sm_\t\t\tfinalMatrix.addToSelf(tempMatrix)_sm_\t\t}\t\tif (matricesWeight3 &gt_sm_ 0) {\t\t\tBABYLON.Matrix.FromFloat32ArrayToRefScaled(skeletonMatrices_co_ matricesIndicesData[index4 + 3] * 16_co_ matricesWeight3_co_ tempMatrix)_sm_\t\t\tfinalMatrix.addToSelf(tempMatrix)_sm_\t\t}\t\tBABYLON.Vector3.TransformCoordinatesFromFloatsToRef(positionsData[index]_co_ positionsData[index + 1]_co_ positionsData[index + 2]_co_ finalMatrix_co_ tempVector3)_sm_\t\ttempVector3.toArray(positionsData_co_ index)_sm_\t\tBABYLON.Vector3.TransformNormalFromFloatsToRef(normalsData[index]_co_ normalsData[index + 1]_co_ normalsData[index + 2]_co_ finalMatrix_co_ tempVector3)_sm_\t\ttempVector3.toArray(normalsData_co_ index)_sm_ \t\tfinalMatrix.reset()_sm_\t}\tmesh.updateVerticesData(BABYLON.VertexBuffer.PositionKind_co_ positionsData)_sm_\tmesh.updateVerticesData(BABYLON.VertexBuffer.NormalKind_co_ normalsData)_sm_  _lt_/pre_gt__lt_p_gt_ instead of simple update_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_    var positions _eq_ mesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)\tmesh.updateVerticesData(BABYLON.VertexBuffer.PositionKind_co_ positions_co_ false_co_ false)    var indices _eq_ mesh.getIndices()_sm_\tvar normals _eq_ mesh.getVerticesData(BABYLON.VertexBuffer.NormalKind)_sm_ \tBABYLON.VertexData.ComputeNormals(positions_co_ indices_co_ normals)_sm_\tmesh.updateVerticesData(BABYLON.VertexBuffer.NormalKind_co_ normals_co_ false_co_ false)_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-10-09T15:52:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Congrats _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Myjestic","Date":"2016-07-26T15:31:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWow! This is exactly what I was looking for.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI created a scene with different single meshes consisting of cubes. Because there are many of them and all have the same geometry and purpose I merged them all together.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis drastically pushed my perfomance.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow I used the _qt_doDownload_qt_ function from bulisors playground example to save the merged meshes to a *.babylon file.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEverything works fine_co_ export and import again.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe only problem I have is_co_ that the import of the file imports everything as single parts_co_ they aren_t_t merged anymore.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHow can I solve the problem?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Myjestic","Date":"2016-07-26T20:52:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJust to simplify my question_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHow can I save and serialize a MERGED Mesh? And load it as merged mesh again?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Myjestic","Date":"2016-07-29T15:05:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tProblem solved. Bulisors code work like a charme. It was my fault.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe merged meshes will be imported correctly.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]