[{"Owner":"grire974","Date":"2016-08-21T18:19:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis might be due to a lack of general understanding - however I would like to know if there is a way (within bablyonjs) to convert a rotation (e.g. rotation.x _eq_ a_co_ rotation.y _eq_ b_co_ rotation.z _eq_ c) to a quaternion (axis of rotation_co_ and an angle for rotation around that axis_sm_ e.g. x_co_y_co_z_co_w).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAccording to the babylonjs docs_sm_ they seem to be exclusive of each other_sm_ e.g. if you set the AbstractMesh.rotate property (quaternion) then the .rotation property is automatically set to the Zero vector &amp_sm_ vice versa.  Basic rotation around each of the three axes (e.g. .rotation) is easier for most people (e.g. users of my code) to understand (compared to quaternions) but some other software that I_t_m trying to integrate with works better with quaternions. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tRotation matrix seems to have the same problem (e.g. setting the .rotation property doesn_t_t affect it).  I converted some C++ code from cocos2dx into JS to convert a rotation matrix to a quaternion_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1H0QGF%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1H0QGF#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHowever this also doesn_t_t give me a the desired result (because BJS is returning an identity matrix I think).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny Thoughts? \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2016-08-21T19:17:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe following topic should provide you with the math you_t_re looking for_co_ as well as issues you might run into_dd_\n_lt_/p_gt_\n_lt_iframe data-embedcontent_eq__qt__qt_ frameborder_eq__qt_0_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/topic/19901-eulerquaternoin-conversion-bug/?page_eq_2&amp_sm_do_eq_embed_qt__gt__lt_/iframe_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-08-21T19:53:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_pre_gt_\n_lt_code_gt_BABYLON.Quaternion.RotationYawPitchRoll(rotation.y_co_ rotation.x_co_ rotation.z)_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tShould do the trick.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"grire974","Date":"2016-08-22T14:33:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThank you both!  I think _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/?do_eq_hovercard_qt_ data-mentionid_eq__qt_10310_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/_qt_ rel_eq__qt__qt__gt_@RaananW_lt_/a_gt_ suggestion will work nicely_sm_ great to have some background on it though _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/?do_eq_hovercard_qt_ data-mentionid_eq__qt_11286_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/_qt_ rel_eq__qt__qt__gt_@dbawel_lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"grire974","Date":"2016-08-25T13:46:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFinal update - I think I had my definition of Quaternion wrong_sm_ in fact I was actually looking for axis of rotation and angle of rotation_sm_ which is also expressed as 4 numbers and used in things like OpenGL_t_s glRotate function and other libraries such as Open Scene Graph (OSG).  The Quaternion class has functions for creating Quaternions from axis+angle_sm_ but nothing (as far as I could tell) for creating axis + angle from a quaternion (or from a matrix_co_ or from standard rotation angles).  Found some useful math pages though to help do this_sm_ The easiest one to follow is based off of a Quaternion_sm_ so if you don_t_t have a Quaternion already - use _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/?do_eq_hovercard_qt_ data-mentionid_eq__qt_10310_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/_qt_ rel_eq__qt__qt__gt_@RaananW_lt_/a_gt__t_s code above &amp_sm_ then convert the Java code listed at the bottom of this page - to convert that Quaternion to axis + angle_sm_ worked like a charm for me_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Emil","Date":"2017-02-16T05:07:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/16528-grire974/?do_eq_hovercard_qt_ data-mentionid_eq__qt_16528_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/16528-grire974/_qt_ rel_eq__qt__qt__gt_@grire974_lt_/a_gt_ I think I am having the same issue. I have a code in python_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_z_axis _eq_ (0.0_co_ 0.0_co_ -1.0)\nsegments _eq_ 32\ntable_radius _eq_ 0.6\nheight_flat _eq_ 0.35\nfor index in range(segments)_dd_\n    quat _eq_ Quaternion(z_axis_co_ (index / segments) * PI_2)\n    result _eq_ quat * Vector((table_radius_co_ 0.0_co_ height_flat))_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tconverted_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var segments _eq_ 32_sm_\nvar table_radius _eq_ 0.6_sm_\nvar height_flat _eq_ 0.35_sm_\nfor(var index _eq_ 0_sm_index &lt_sm_ segments_sm_index++){\n     var quat _eq_ new BABYLON.Quaternion(0.0_co_0.0_co_-1.0_co_(index / segments) * PI_2)_sm_ \n     var a _eq_ new BABYLON.Vector3(table_radius_co_ 0.0_co_ height_flat)_sm_\n     var result _eq_ quat*a_sm_ //does not work\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI also tried the code from your suggested math page_co_ but I get negative numbers under sqrt and even with abs still nothing useful. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tCan you share your piece of code with the conversion? I am stuck at this point...thanks\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2017-02-16T09:41:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHave a look at the pages on rotations and quaternions here\n_lt_/p_gt_\n\n_lt_p_gt_\n\t   _lt_a href_eq__qt_http_dd_//babylonjsguide.github.io/advanced.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjsguide.github.io/advanced.html_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThey might help.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]