[{"Owner":"xtreemze","Date":"2017-08-02T13:35:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello Everyone_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve been trying to go at this on my own but I_t_ve been stuck for days trying to add some basic AI to a cube.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlay the FPS style game here on desktop or mobile_dd_ _lt_a href_eq__qt_https_dd_//xtreemze.github.io/Ballistic_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//xtreemze.github.io/Ballistic_lt_/a_gt_ you can find the full JavaScript here_dd_ _lt_a href_eq__qt_https_dd_//github.com/xtreemze/Ballistic/blob/master/js/master.js_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/xtreemze/Ballistic/blob/master/js/master.js_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tControls_dd_ touch the cube button on the bottom to shoot ice cubes and use standard universal camera controls to move and look around.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Here_t_s where I_t_m stuck_dd__lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI got window.cube to jump and look at the camera but now I need a force to push the window.cube to move towards window.camera. I just can_t_t figure out how to setLinearVelocity in the local forward direction of window.cube.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tredMesh is the Mesh of window.cube and redCube is the impostor of redMesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(Also would be nice if the lookAt() rotation was eased or slowed down so it wouldn_t_t seem so sudden but that_t_s a lower priority.)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere_t_s the part of the code that controls the cube AI and thanks in advance for taking a shot at this!\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// Global Scope Declarations for Console Tests\nwindow.button _eq_ button_sm_\nwindow.cube _eq_ redCube_sm_\nwindow.cubeMesh _eq_ redMesh_sm_\nwindow.camera _eq_ camera_sm_\n// Red Cube turns to look at camera\nconst rotateCube _eq_ function rotateCube() {\n  redMesh.lookAt(camera.position)_sm_\n}_sm_\n// Cube Movement towards Camera ???\nconst jump _eq_ new BABYLON.Vector3(0_co_ 5_co_ 0)_sm_\nconst front _eq_ new BABYLON.Vector3(0_co_ -10_co_ 0)_sm_\nconst goForward _eq_ redMesh.getDirection(front)_sm_\nconst moveCube _eq_ function moveCube() {\n  redCube.setLinearVelocity(jump)_sm_\n  rotateCube()_sm_\n  // redCube.setLinearVelocity(goForward)_sm_\n}_sm_\nwindow.setInterval(moveCube_co_ 2000)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"xtreemze","Date":"2017-08-02T14:31:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI added this line to illustrate what I want to do_co_ but I would like to use physics instead of position translations.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_redMesh.locallyTranslate(new BABYLON.Vector3(0_co_ 0_co_ -4))_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-08-02T15:29:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tpretty nice game.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI will suggest using impulse instead of setLinearVelocity. Impulse is great because it apply a force to a given object at the given coordinate_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/using_the_physics_engine#impulses-and-forces_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/overviews/using_the_physics_engine#impulses-and-forces_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo get the forward facing vector from the camera just call camera.getForwardRay().direction\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"xtreemze","Date":"2017-08-02T17:33:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for the quick reply _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_! I really like the Babylonjs engine you_t_ve helped to make and I_t_m using this little game as a prototype to learn more about it.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_184091_qt_ data-ipsquote-contentid_eq__qt_32104_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1501687786_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tHello!\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tpretty nice game.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tI will suggest using impulse instead of setLinearVelocity. Impulse is great because it apply a force to a given object at the given coordinate_dd_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/using_the_physics_engine#impulses-and-forces_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/overviews/using_the_physics_engine#impulses-and-forces_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tTo get the forward facing vector from the camera just call camera.getForwardRay().direction\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI will try to use impulse instead but I_t_m confused with what vectors to use as arguments because the forward face of the camera is irrelevant in this case because the red cube (redMesh) should approach the camera at all times even if the camera is looking away. The game already does this_co_ but I_t_d like to use physics instead of using locallyTranslate(). It would be more helpful to acquire the forward facing vector of the _qt_enemy_qt_ red cube and then apply the force onto that cube so the position of the cube approaches the camera with each jump. getForwardRay() is useful for shooting the projectiles_co_ however. But it seems I can_t_t use it for the enemy cube because getForwardRay() seems available to the camera and not the abstract mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo rephrase my question and follow your suggestion to use impulse_dd_ How can I pass the local forward facing vector of the redMesh cube to an impulse that would apply a force of 2 along the axis facing the camera global position?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-08-03T01:06:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis should be something like_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var direction _eq_ camera.position.subtract(redCube.position)_sm_\n\ndirection.normalize()_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"xtreemze","Date":"2017-08-04T12:50:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_184149_qt_ data-ipsquote-contentid_eq__qt_32104_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1501722367_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 8/3/2017 at 3_dd_06 AM_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThis should be something like_dd_\n\t\t_lt_/p_gt_\n\n\t\t_lt_pre_gt_\n\n_lt_code_gt__lt_span_gt_var_lt_/span_gt_ direction _eq_ camera.position.subtract(redCube.position)_sm_\n\ndirection.normalize()_lt_/code_gt__lt_/pre_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThanks _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHad to play around with it a bit but I think this is what you were suggesting and it works!_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/indexstable#UXU2E9_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/indexstable#UXU2E9_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m just now learning to calculate two vectors together... I_t_ll apply it to the game soon once I get the force to hit the cube a bit lower than the central position so the cube doesn_t_t fall on it_t_s forward face when it jumps.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-08-04T13:58:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi guys.  _lt_span_gt_Xtreemze... cool project/playground.  Frog attack!  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_I want to show you a func_co_ x.  Perhaps it is useless for your project_co_ but perhaps not._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/debug#PBVEM%23157_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/debug#PBVEM#157_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBig fat PG for flying a friggin_t_ white box_co_ eh?  CONTROL + arrows/pgUp/pgDown for rots_co_ SHIFT + arrows/pgUp/pgDown for trans.  Control-Shift _qt_L_qt_ for all stop (currently broken_co_ perhaps).  Numpad active_co_ too.  HOLDING keys is common - this is a small-pulse momentum-accumulation thrust system - it utilizes standard held-keypress repeating.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLines 157-162 is the func I want to show.  It is an _qt_aimer_qt__co_ in a way.  It ensures that no matter HOW the white box is rotated_co_ a translate +X (for example)... always moves the white box in LOCAL space.  If the craft were inverted_co_ a translatePositiveY command would send the flyer DOWNWARD.  Lefts would go right_co_ rights would go left_co_ etc_co_ etc.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tScroll down a bit until you hit lines 191 and 194 in the _lt_em_gt_rotPositiveX_lt_/em_gt_ func.  See the _lt_em_gt_doTransformPerFlyerQuat_lt_/em_gt_() being called?  Needless to say_co_ it is a useful func for me_co_ in that demo.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI use that _lt_em_gt_doTransformPerFlyerQuat_lt_/em_gt_() for all my trans and rot funcs.  It allows my future impulsings to be _qt_synced-up_qt_ with the current box rot (using Quaternion rotation_co_ which is what the physics engines use for their rots).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBtw_co_ I apologize for the dual-impulsing rotation methods.  I coded this BEFORE I knew about impostor.setAngularVelocity()  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tAll in all_co_ I wanted to show you this func_co_ and show you how I used it.  I hug this function every single day... it is one of my best friends.   _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"xtreemze","Date":"2017-08-04T14:21:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_184365_qt_ data-ipsquote-contentid_eq__qt_32104_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1501855139_qt_ data-ipsquote-userid_eq__qt_5733_qt_ data-ipsquote-username_eq__qt_Wingnut_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t2 minutes ago_co_ Wingnut said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tHi guys.  _lt_span_gt_Xtreemze... cool project/playground.  Frog attack!  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_span_gt_I want to show you a func_co_ x.  Perhaps it is useless for your project_co_ but perhaps not._lt_/span_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/debug#PBVEM%23157_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/debug#PBVEM#157_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tBig fat PG for flying a friggin_t_ white box_co_ eh?  CONTROL + arrows/pgUp/pgDown for rots_co_ SHIFT + arrows/pgUp/pgDown for trans.  Control-Shift _qt_L_qt_ for all stop.  Numpad active_co_ too.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tLines 157-162 is the func I want to show.  It is a _qt_aimer_qt__co_ in a way.  It ensures that no matter HOW the white box is rotated_co_ a translate +X (for example)... always moves the white box in LOCAL space.  If the craft were inverted_co_ a translatePositiveY command would send the flyer DOWNWARD.  Lefts would go right_co_ rights would go left_co_ etc_co_ etc.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tScroll down a bit until you hit lines 191 and 194 in the _lt_em_gt_rotPositiveX_lt_/em_gt_ func.  See the _lt_em_gt_doTransformPerFlyerQuat_lt_/em_gt_() being called?  Needless to say_co_ it is a useful func for me_co_ in that demo.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tI use that _lt_em_gt_doTransformPerFlyerQuat_lt_/em_gt_() for all my trans and rot funcs.  It allows my future impulsings to be _qt_synced-up_qt_ with the current box rot (using Quaternion rotation_co_ which is what the physics engine use for their rots).\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tBtw_co_ I apologize for the dual-impulsing rotation methods.  I coded this BEFORE I knew about impostor.setAngularVelocity()  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tAll in all_co_ I wanted to show you this func_co_ and show you how I used it.  I hug this function every single day... it is one of my best friends.   _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThanks for checking out my game/prototype _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_! I didn_t_t realize it but those cubes do seem like frogs jumping _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tThat_t_s a yuge PG you got there! Quaternions are next on my ToDo list so this should be useful for some future projects I_t_d like to work on once I get the hang of the basics. Thanks for sharing! By the way_co_ I also made a taxi game as one of my first javascript/HTML5 endeavours _lt_a href_eq__qt_https_dd_//xtreemze.github.io/TAXi/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//xtreemze.github.io/TAXi/_lt_/a_gt__lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"xtreemze","Date":"2017-08-04T15:25:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI updated the game and used this code in case anyone is wondering how the code turned out.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_window.up _eq_ 130_sm_\nwindow.forward _eq_ 93_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_pre_gt_\n_lt_code_gt_    const moveCube _eq_ function moveCube() {\n      redMesh.lookAt(camera.position)_sm_\n      const direction _eq_ camera.position.subtract(redMesh.position)_sm_\n      direction.normalize()_sm_\n      // Speed control\n      const result _eq_ direction.scale(window.forward)_sm_\n      // Jump\n      result.y _eq_ window.up_sm_\n      const bottomForce _eq_ redMesh.position.subtract(new BABYLON\n        .Vector3(0_co_ 2_co_ 0))_sm_\n      redCube.applyImpulse(result_co_ bottomForce)_sm_\n    }_sm_\n    window.setInterval(moveCube_co_ 2000)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]