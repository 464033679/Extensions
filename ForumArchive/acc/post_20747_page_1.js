[{"Owner":"touslecoq","Date":"2016-02-23T20:16:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi all\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNew to this Babylon.js malarky and trying to develop a 3D mini-app that will allow user to manipulate building blocks of some sort (e.g. add more blocks. move/rotate them and join them together).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhilst prototyping this_co_ the blocks (ie meshes) are all cubes created using createBox and with different coloured faces (top and bottom are red and other sides are blue).  I have used the new faceColor option on createBox to do this on creation.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHowever I want to add behaviour that will temporarily change colour of blocks (e.g. turn them green) as user clicks on them to effectively show that is the selected block_co_ reverting to standard colours when _qt_deselected_qt_ (ie when another block is selected).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs there an easy way to reference the box faces in a similar way to faceColors when constructing using createBox?\n_lt_/p_gt_\n\n_lt_p_gt_\n\te.g.  currentBox.faceColors[0]_eq_new BABYLON.color3.red() ...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am guessing not.  If no_co_ then is there a technique for easily identifying the vertices that make up the 2 triangles for each face and changing those vertex colors independently?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNote_dd_ I read the debate on naming convention for box sides/faces.  For avoidance of doubt when I say _qt_face_qt_ here I am referring to a real-world face or side of the cube rather than the individual triangles that make up that side.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNote2_dd_ I will want to add some additional behaviour that allows a user to conjoin 2 cubes when in close proximity to each other (a kind of snap-to if you like) but only allow that behaviour on certain sides (imagine a crude Lego (TM) block that can only be connected on top of each other not side to side).  So with one eye to the future_co_ any mechanism for identifying individual faces needs to work for that to.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks muchly\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRichard\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"eboo","Date":"2016-02-23T22:04:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tmaybe you can try to use emissive and diffuse colo.\n_lt_/p_gt_\n\n_lt_p_gt_\n\ti use diffuse color for rendering and all meshes have standrad emissive color.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tso if you have the same.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tmaybe you can try somehtink like\n_lt_/p_gt_\n\n_lt_p_gt_\n\tvar temp_eq_scene.getMeshByName(cazze)_sm__lt_br_gt_\n\tif(!!temp) temp.material.diffuseColor _eq_ new BABYLON.Color3(0.9_co_ 0_co_ 0)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\twhen selected and go back to temp.material.diffuseColor _eq_ new BABYLON.Color3(0_co_ 0_co_ 0)_sm_ when not selected\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"touslecoq","Date":"2016-02-25T10:40:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi thanks.  Problem is that this would change the whole colour of the box whereas I have specific faces of the mesh at different colours.  I think I will have to do this by referencing all vertices on a given face and changing their colour.  Just need to work out the order in which the vertices are listed ... e.g. the first 6 vertices (ie first 18 numbers) are one face_co_ next 6 vertices (ie next 18 numbers) are the opposite face or adjacent face etc.  \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"touslecoq","Date":"2016-02-26T20:32:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFound the answer buried here ... _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/10470-proper-way-to-generate-a-meshgeometry-from-scratch/_qt__gt_proper-way-to-generate-a-meshgeometry-from-scratch_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy sample code is _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2CQXJE%230_qt_ rel_eq__qt_external nofollow_qt__gt_here_lt_/a_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBasically I create the box.  Use the faceColors method to colour the individual sides at point of creation (setting 2 green_co_ 2 blue_co_ 2 red in this case).  Then once created I turn the first face black by 1) extracting the color data into an array (four floats per vertex - each vertex_t_s color is seemingly represented as a Color4).  2) updating the values in the array as required - in this case I set the first three floats to 0 (ie black).  3) creating an empty BABYLON.VertexData object and overwriting its .Colors attribute with the modified array.  4) using the vertexData.applyToMesh(meshName_co_ True) function to apply the vertexData object containing only the changed Colors to the mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI haven_t_t fully tested it but the empty vertexData object I created and updated into my Mesh had no Positions_co_ Indices_co_ Normals data in it but the cube remains ok.  I assume therefore that when the applyToMesh function is called it only applies changes where data is provided (Colors data in my case). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe trick now will be to identify which face (ie which 4 vertices) the user clicked before calling this to change the colour of that face.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis IS fun _dd_).\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-02-26T21:09:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tnice study and work\n_lt_/p_gt_\n\n_lt_p_gt_\n\tyou discovered so many things by yourself and you found almost all the right answers. Congratulations !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo help you a little _dd_ you don_t_t need to recreate a new VertexData object. You could just update the mesh underlying vertexData with _lt_em_gt_updateVerticesData()_lt_/em_gt_ (surprising !) _dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/2.3/Mesh#updateverticesdata-kind-data-updateextends-makeitunique-rarr-void_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/classes/2.3/Mesh#updateverticesdata-kind-data-updateextends-makeitunique-rarr-void_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe _qt_kind_qt_ to use would be here _qt_BABYLON.VertexBuffer.ColorKind_qt_ and keep the rest unchanged. Note that the mesh must be set as _lt_em_gt_updatable._lt_/em_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\there is an example of this call _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Particles/babylon.solidParticleSystem.ts#L657_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Particles/babylon.solidParticleSystem.ts#L657_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]