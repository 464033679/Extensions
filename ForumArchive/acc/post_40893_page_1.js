[{"Owner":"entropy","Date":"2018-10-26T21:25:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m a bit of a novice (with Babylon.js and 3D programming in general)_co_ so please bear with me.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m wanting to create a scene with many repeating objects_sm_ so_co_ of course_co_ I want to use instancing to maximize performance. The documentation_co_ the many examples_co_ and countless posts on this forum eventually led me to the SolidParticleSystem. Indeed_co_ this seems to do almost exactly what I want.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe SPS seems to work great so long as all the particles are static. Tens of thousands of particles are no problem. However_co_ that all changes as soon as the properties of the particles need to change on a regular basis. I_t_ve created a simple example to illustrate the _qt_issue_qt__dd_ https_dd_//playground.babylonjs.com/#H8ZQMH. (Now_co_ in the Playground example_co_ I could move the entire mesh at once and likely achieve better performance_co_ but in my specific application I need to move and orient each particle independently.)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAfter doing some further reading_co_ my understanding is that setParticles (and updateParticle) are carried out on the CPU side_co_ which probably explains the poor performance. Is there a way to do this on the GPU (or_co_ rather_co_ speed up the process in some way)? In my limited experience using DirectX directly_co_ you would do this in the vertex buffer by_co_ e.g._co_ adding the instance position vector to each vertex. Would something like that be possible using Babylon.js?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"droggam","Date":"2018-10-27T12:08:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_strong_gt_welcome to forum..._lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_sps is great..._lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_you want to treat Every particles different?_lt_/strong_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-10-27T12:34:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/33196-entropy/?do_eq_hovercard_qt_ data-mentionid_eq__qt_33196_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/33196-entropy/_qt_ rel_eq__qt__qt__gt_@entropy_lt_/a_gt_ and welcome to the forum. Here is a simple example of shader code changing the positions of individual SPS particles. This could be extended.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"entropy","Date":"2018-10-27T17:51:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_232995_qt_ data-ipsquote-contentid_eq__qt_40893_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1540643647_qt_ data-ipsquote-userid_eq__qt_14282_qt_ data-ipsquote-username_eq__qt_JohnK_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t5 hours ago_co_ JohnK said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/33196-entropy/?do_eq_hovercard_qt_ data-mentionid_eq__qt_33196_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/33196-entropy/_qt_ rel_eq__qt__qt__gt_@entropy_lt_/a_gt_ and welcome to the forum. Here is a simple example of shader code changing the positions of individual SPS particles. This could be extended.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThanks for the replies! For the most part_co_ SPS works really well for me. Much of the time_co_ the particles are just sitting there and the performance is great. Occasionally_co_ I_t_ll need to move them to new positions based upon user input...this is when things slow down a bit.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/?do_eq_hovercard_qt_ data-mentionid_eq__qt_14282_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/_qt_ rel_eq__qt__qt__gt_@JohnK_lt_/a_gt__co_ what you are describing sounds very promising. I_t_m not seeing the code_co_ though--could you try posting it again?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-10-27T18:29:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSorry here is the link _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/snippets/writing1_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/snippets/writing1_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"entropy","Date":"2018-10-27T19:15:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks_co_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/?do_eq_hovercard_qt_ data-mentionid_eq__qt_14282_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/_qt_ rel_eq__qt__qt__gt_@JohnK_lt_/a_gt_! I_t_ll need to brush up on my shader code_co_ but this looks like what I want! Here_t_s an example that works smoothly with 10000 moving objects (with reflections_co_ even)_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#1OH09K%2384_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#1OH09K#84_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m sure I_t_ll have more questions_co_ but this will get me moving in the right direction.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"entropy","Date":"2018-10-28T00:00:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/?do_eq_hovercard_qt_ data-mentionid_eq__qt_14282_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/_qt_ rel_eq__qt__qt__gt_@JohnK_lt_/a_gt_Well_co_ I already have another question. In the example that you posted_co_ _qt_box_spacing_qt_ and _qt_time_qt_ were passed to the vertex shader as uniforms_co_ and then set by (for example)_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_boxes.material.setFloat(_qt_time_qt__co_ time)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThis changes that parameter for all instances of the boxes. What I_t_m really trying to do is to set a parameter on a per particle basis. For example_co_ is it possible to have a vertex shader look something like\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// Attributes\nattribute vec3 position_sm_\nattribute vec3 instancePosition_sm_\nattribute vec2 uv_sm_\n\n// Uniforms\nuniform mat4 worldViewProjection_sm_\n\n// Varying\nvarying vec2 vUV_sm_\n\nvoid main(void) {\n    // translate then rotate\n    gl_Position _eq_ worldViewProjection * (vec4(position_co_ 1.0) + vec4(instancePosition_co_ 1.0))_sm_\n    vUV _eq_ uv_sm_\n}\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tand then set a different _qt_instancePosition_qt_ on a per box basis?\n_lt_/p_gt_\n\n_lt_div style_eq__qt_background-color_dd_#fffffe_sm_color_dd_#000000_sm_font-size_dd_14px_sm__qt__gt_\n\t \n_lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-10-28T08:13:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tNeed a shader expert calling _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/?do_eq_hovercard_qt_ data-mentionid_eq__qt_19199_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/_qt_ rel_eq__qt__qt__gt_@Pryme8_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-10-28T14:01:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAs you said_co_ in the SPS everything is done CPU side and the performance is directly related to the global number of vertices (not the number of particles) to manage.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen using a 16 segment sphere_co_ what is actually a mesh with numerous vertices_co_ as a particle model_co_ it gets quickly to a big global number of vertices. Same with a 3 segment sphere model _dd_ _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#H8ZQMH%231_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#H8ZQMH#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\ta box (only 24 vertices... ok_co_ I know it_t_s not your need) would be much more faster _dd_ _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#H8ZQMH%232_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#H8ZQMH#2_lt_/a_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you don_t_t really need spheres but circular objects_co_ you could use planar discs instead (maybe in billboard mode if the camera moves) _dd_ _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#H8ZQMH%233_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#H8ZQMH#3_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2018-10-28T20:26:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMaybe I am missing the question_co_ but there should be no problem moving 10k+ Particles with any FPS loss.  I tested your example scene with the sinsodial movement of a chain of boxes_co_ cranked it to 20k boxes on my iPhone and had no FPS drop.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI kinda don’t know what the specific question is.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-10-28T23:31:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/?do_eq_hovercard_qt_ data-mentionid_eq__qt_19199_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/_qt_ rel_eq__qt__qt__gt_@Pryme8_lt_/a_gt_ in the sinsodial PG the movement is based on the boxes position and the time parameter_co_ entropy wants to know if a shader could be used to set the position and rotation of each particle independently. Actually it was me who suggested shaders in the opening question he wanted to know if there was a way of doing this with the GPU.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_232966_qt_ data-ipsquote-contentid_eq__qt_40893_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1540589139_qt_ data-ipsquote-userid_eq__qt_33196_qt_ data-ipsquote-username_eq__qt_entropy_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 10/26/2018 at 10_dd_25 PM_co_ entropy said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tAfter doing some further reading_co_ my understanding is that setParticles (and updateParticle) are carried out on the CPU side_co_ which probably explains the poor performance. Is there a way to do this on the GPU (or_co_ rather_co_ speed up the process in some_lt_span_gt_﻿_lt_span_gt_﻿_lt_/span_gt__lt_span_gt_﻿_lt_/span_gt__lt_span_gt_﻿_lt_span_gt_﻿_lt_/span_gt__lt_span_gt_﻿_lt_/span_gt__lt_span_gt_﻿_lt_/span_gt__lt_span_gt_﻿_lt_/span_gt__lt_span_gt_﻿_lt_/span_gt__lt_/span_gt__lt_/span_gt_ way)? In my limited experience using DirectX directly_co_ you would do this in the vertex buffer by_co_ e.g._co_ adding t_lt_span_gt_﻿_lt_/span_gt_he ins_lt_span_gt_﻿_lt_/span_gt_tance position vector to each vertex. Would something like that be possible using Babylon.js?_lt_span_gt_﻿_lt_span_gt_﻿_lt_/span_gt__lt_/span_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_233038_qt_ data-ipsquote-contentid_eq__qt_40893_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1540684807_qt_ data-ipsquote-userid_eq__qt_33196_qt_ data-ipsquote-username_eq__qt_entropy_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t23 hours ago_co_ entropy said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tIn the example that you posted_co_ _qt_box_spacing_qt_ and _qt_time_qt_ were passed to the vertex shader as uniforms_co_ and then set by (for example)_dd_\n\t\t_lt_/p_gt_\n\n\t\t_lt_pre_gt_\n\n_lt_code_gt_boxes.material.setFloat(_lt_span_gt__qt_time_qt__lt_/span_gt__co_ _lt_span_gt_time_lt_/span_gt_)_sm__lt_/code_gt__lt_/pre_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThis changes that parameter for all instances of the boxes. What I_t_m really trying to do is to set a parameter on a per particle_lt_span_gt_﻿_lt_span_gt_﻿_lt_span_gt_﻿_lt_/span_gt__lt_/span_gt__lt_/span_gt_ bas_lt_span_gt_﻿_lt_/span_gt_i_lt_span_gt_﻿_lt_span_gt_﻿_lt_/span_gt__lt_/span_gt_s_lt_span_gt_﻿_lt_/span_gt__lt_span_gt_﻿_lt_span_gt_﻿_lt_/span_gt__lt_span_gt_﻿_lt_/span_gt__lt_span_gt_﻿_lt_/span_gt__lt_span_gt_﻿_lt_/span_gt__lt_span_gt_﻿_lt_/span_gt__lt_span_gt_﻿_lt_/span_gt__lt_span_gt_﻿_lt_/span_gt__lt_span_gt_﻿_lt_/span_gt__lt_span_gt_﻿_lt_/span_gt__lt_/span_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tProbably jerome_t_s answer would work as well as any other.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"entropy","Date":"2018-10-29T02:18:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYes_co_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/?do_eq_hovercard_qt_ data-mentionid_eq__qt_14282_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/_qt_ rel_eq__qt__qt__gt_@JohnK_lt_/a_gt_ summarized what I was trying to say quite elegantly. I did find an example on the three.js website_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//threejs.org/examples/#webgl_buffergeometry_instancing_interleaved_dynamic_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//threejs.org/examples/#webgl_buffergeometry_instancing_interleaved_dynamic_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you look at the code_co_ you_t_ll see a vertex shader similar to the one in my previous post. In the three.js case_co_ the offset and orientation information are passed as per instance attributes to allow the GPU to do all of the vertex transforms. While the tutorial that JohnK referenced doesn_t_t do quite what I was hoping_co_ it does illustrate the power of the technique. Here I_t_ve modified the example from the tutorial to animate 10000 sixteen-vertex spheres_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#1OH09K%2386_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#1OH09K#86_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCompare that to the pure SPS solution in my original post that struggled to animate 2000 smoothly. (Granted_co_ the latter is only applying a texture without lighting effects_co_ so it_t_s not a direct comparison.) All that_t_s missing is per instance variables...is that possible to do while using SPS?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI hope I don_t_t sound too querulous. I_t_m coming from programming 3D in the WPF realm_co_ and Babylon.js is already performing one or two of orders of magnitude faster!...and it_t_s much easier to use.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-10-29T06:52:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI can_t_t access your PG for now. Note that the parameter subdivisions in the sphere constructor isn_t_t the final vertex number_co_ just the number of subdivisions between the sphere poles_co_ so it gets to far more vertices in final.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you look at the 3Js example code that you gave ( _lt_a href_eq__qt_https_dd_//github.com/mrdoob/three.js/blob/master/examples/webgl_buffergeometry_instancing_interleaved_dynamic.html_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/mrdoob/three.js/blob/master/examples/webgl_buffergeometry_instancing_interleaved_dynamic.html_lt_/a_gt_ )_co_ you can see that _lt_span_gt__dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_- there_t_s only 5000 boxes_co_ what the classical SPS can manage quite easily and fast (with per particle color_co_ texture_co_ scaling_co_ visibility and even intersections or depth sort _lt_span class_eq__qt_ipsEmoji_qt__gt_🙂_lt_/span_gt_  ) _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_- they aren_t_t even boxes_co_ as per se_co_ because their geometries need to be declared manually (I mean float local coordinates and indices) in the vertex buffer before being passed to the BufferGeometry that handles the GPU communication._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Actually this what the SPS does for you in a simpler way for the final user. In this demo_co_ they simply added a custom shader to compute the rotation GPU side._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tNevertheless if you still want a real GPU approach_co_ you could check this example out (40K boxes an tetrahedrons computed GPU side) _dd_ _lt_a href_eq__qt_http_dd_//jerome.bousquie.fr/BJS/test/SPSGpu/spsShader.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//jerome.bousquie.fr/BJS/test/SPSGpu/spsShader.html_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s just an experiment_co_ probably it could be optimized a lot.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAll the files are here _lt_a href_eq__qt_http_dd_//jerome.bousquie.fr/BJS/test/SPSGpu/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//jerome.bousquie.fr/BJS/test/SPSGpu/_lt_/a_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t[EDIT] checked your PG _dd_ nice _lt_span_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_🙂_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-10-29T10:38:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_233097_qt_ data-ipsquote-contentid_eq__qt_40893_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1540758380_qt_ data-ipsquote-userid_eq__qt_19199_qt_ data-ipsquote-username_eq__qt_Pryme8_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t14 hours ago_co_ Pryme8 said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI kinda don’t know what the specific question is.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThe more I think about it the more sure I am that Pryme8 is correct. We do not know your use case. What sort of individual changes do you want for each particle and how and when do you want them to be achieved?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is a simplified version with just 5 spheres. Can you complete the PG by showing under what circumstances properties of each sphere change independently and how it looks when these changes take place?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#H8ZQMH%234_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#H8ZQMH#4_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2018-10-29T16:23:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI mean I used the SPS for a project with _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/?do_eq_hovercard_qt_ data-mentionid_eq__qt_11286_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/_qt_ rel_eq__qt__qt__gt_@dbawel_lt_/a_gt_.  He would have to say the exacts numbers but I think we were doing 6k or something on screen models with physics and no FPS drop.  So I think from what I understand your goals to be that it would accommodate you if set up correct._lt_br /_gt_\n\t_lt_br /_gt_\n\tThe other option is like others said is to use a Shader_co_ but this will have extreme limits.  First if you are doing anything other then simple shapes (like a point_co_ or a block) things get fairly complicated.  It would essentially be a glorified GPU particle system.  You could take a look at the GPU particle engine_co_ and see about adapting it._lt_br /_gt_\n\t_lt_br /_gt_\n\tAre you doing basic points? or are you looking to advance into realistic meshs_co_ if you want to do this on the GPU with meshes only you will need to look up Stackless BVH traversal (these are above my pay grade) and figure out how to implement that kind of system.  IQ told me to check that stuff out when I was looking up answers for other projects_co_ but I think it might help you as well (if you are trying to do full meshs)._lt_br /_gt_\n\t_lt_br /_gt_\n\tIf you are just doing points ignore that whole last section.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"entropy","Date":"2018-10-30T02:12:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_233135_qt_ data-ipsquote-contentid_eq__qt_40893_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1540809500_qt_ data-ipsquote-userid_eq__qt_14282_qt_ data-ipsquote-username_eq__qt_JohnK_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t14 hours ago_co_ JohnK said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThe more I think about it the more sure I am that Pryme8 is correct. We do not know your use case. What sort of individual changes do you want for each particle and how and when do you want them to be achieved?\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tHere is a simplified version with just 5 spheres. Can you complete the PG by showing under what circumstances properties of each sphere change independently and how it looks when these changes take place?\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#H8ZQMH%234_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#H8ZQMH#4_lt_/a_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tUnfortunately_co_ there_t_s no way to model my exact situation in the Playground. I_t_m using Babylon.js (running in a CEFSharp control) as a 3D viewport in a C#/WPF application. The positions/orientations of each particle are determined on the C# side of the code based upon user inputs at runtime. Basically_co_ I_t_ll need to do something like\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_  for (var p _eq_ 0_sm_ p &lt_sm_ SPS.nbParticles_sm_ p++) {\n        SPS.particles[p].position _eq_ data[p]_sm_\n        }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\twhere data[p] is information ultimately derived from C# code.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_233162_qt_ data-ipsquote-contentid_eq__qt_40893_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1540830200_qt_ data-ipsquote-userid_eq__qt_19199_qt_ data-ipsquote-username_eq__qt_Pryme8_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t9 hours ago_co_ Pryme8 said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t_lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_I mean I used the SPS for a project with_lt_span_gt_ _lt_/span_gt__lt_/span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/?do_eq_hovercard_qt_ data-mentionid_eq__qt_11286_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/_qt_ rel_eq__qt__qt_ style_eq__qt_color_dd_#ffffff_sm_font-size_dd_12.6px_sm_padding_dd_0px 5px_sm__qt__gt_@dbawel_lt_/a_gt__lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_.  He would have to say the exacts numbers but I think we were doing 6k or something on screen models with physics and no FPS drop.  So I think from what I understand your goals to be that it would accommodate you if set up correct._lt_/span_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThe other option is like others said is to use a Shader_co_ but this will have extreme limits.  First if you are doing anything other then simple shapes (like a point_co_ or a block) things get fairly complicated.  It would essentially be a glorified GPU particle system.  You could take a look at the GPU particle engine_co_ and see about adapting it._lt_br /_gt_\n\t\t\t_lt_br /_gt_\n\t\t\tAre you doing basic points? or are you looking to advance into realistic meshs_co_ if you want to do this on the GPU with meshes only you will need to look up Stackless BVH traversal (these are above my pay grade) and figure out how to implement that kind of system.  IQ told me to check that stuff out when I was looking up answers for other projects_co_ but I think it might help you as well (if you are trying to do full meshs)._lt_br /_gt_\n\t\t\t_lt_br /_gt_\n\t\t\tIf you are just doing points ignore that whole last section.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI think_co_ ultimately_co_ you_t_re probably right. The code (as is) is already way faster than my previous solution (using native WPF 3D)...now I_t_m just getting greedy for performance. _lt_span class_eq__qt_ipsEmoji_qt__gt_😁_lt_/span_gt_ Here_t_s a more realistic case that I might have to deal with_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#H8ZQMH%235_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#H8ZQMH#5_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ll primarily be animating boxes_co_ not spheres. On my system_co_ I can animate ~10k boxes and maintain 60 fps. Anything more than that and the frame rate plummets. For the most part_co_ 10k boxes will be sufficient for my purposes. But offloading translation/rotation to the GPU will give me extra headroom for those fringe cases (and/or it will allow me to use more detailed meshes).\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_233121_qt_ data-ipsquote-contentid_eq__qt_40893_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1540795959_qt_ data-ipsquote-userid_eq__qt_5453_qt_ data-ipsquote-username_eq__qt_jerome_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t19 hours ago_co_ jerome said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tNevertheless if you still want a real GPU approach_co_ you could check this example out (40K boxes an tetrahedrons computed GPU side) _dd_ _lt_a href_eq__qt_http_dd_//jerome.bousquie.fr/BJS/test/SPSGpu/spsShader.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//jerome.bousquie.fr/BJS/test/SPSGpu/spsShader.html_lt_/a_gt__lt_span_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_🙂_lt_/span_gt__lt_/span_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5453_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/_qt_ rel_eq__qt__qt__gt_@jerome_lt_/a_gt_Wow_co_ that seems to work smoothly! I_t_ve tried downloading the code_co_ but can_t_t seem to get it to run on my local machine. Any tips on integrating this into a Babylon.js project?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-10-30T05:27:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tNo idea about what_t_s you error. Have you checked the messages in the console ? You may have put the files in a different location than me or be missing one (texture ?) \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-10-30T09:51:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHere is a very crude simulation of input from a range of data sets _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#H8ZQMH%236_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#H8ZQMH#6_lt_/a_gt_ Note reduction in vertices in spheres\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow with 10 times as many spheres _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#H8ZQMH%237_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#H8ZQMH#7_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSame number using discs and billboard mode _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#H8ZQMH%238_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#H8ZQMH#8_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"entropy","Date":"2018-10-31T05:02:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for all the help so far. _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5453_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/_qt_ rel_eq__qt__qt__gt_@jerome_lt_/a_gt_...I_t_ve been looking at and trying to interpret the _qt_Turbo SPS_qt_ code that you linked to earlier. Please let me know if the following explanation is correct.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn your vertex shader_co_ you assign the following attributes_dd_ _qt_position_qt__co_ _qt_uv_qt__co_ _qt_translation_qt__co_ _qt_scaling_qt__co_ and _qt_rotation_qt_. Typically_co_ I would think of the last three attributes as instance attributes. In other words_co_ they would would get updated only once per instance_co_ so all of the vertices of the same instance would automatically have the same _qt_scaling_qt_ parameter_co_ for example. Instead_co_ it seems like you are using those as per vertex attributes where you simply repeat the same _qt_scaling_qt_ value for every vertex in the instance_co_ etc.?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/?do_eq_hovercard_qt_ data-mentionid_eq__qt_14282_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/_qt_ rel_eq__qt__qt__gt_@JohnK_lt_/a_gt_...that_t_s very clever. That does mimic the behavior of my intended application_co_ more so than my original example. What kind of performance are you getting with that second example with 20000 spheres? I only get about 10 fps.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-10-31T07:20:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tjust can_t_t remember_co_ I_t_ll check next week. I think it was a per vertex set of attributes in my memory\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-10-31T09:23:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_233336_qt_ data-ipsquote-contentid_eq__qt_40893_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1540962153_qt_ data-ipsquote-userid_eq__qt_33196_qt_ data-ipsquote-username_eq__qt_entropy_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t4 hours ago_co_ entropy said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tWhat kind of performance are you getting with that second example with 20000 spheres? I only get about 10 fps.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tBetter than me. I am getting 2fps. At least we now have a better idea of what you need. My shader skills are not up to going any further.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]