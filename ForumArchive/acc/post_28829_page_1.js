[{"Owner":"BeanstalkBlue","Date":"2017-03-04T02:35:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI noticed that the shadow generator for point lights sets the shadow generator camera matrix using the activeCamera.maxZ (in .setShadowProjectionMatrix()).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt should really use the point light_t_s range_co_ to have better depth z accuracy since there are no shadows further than the light_t_s range anyway.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt is also using the activeCamera.minZ_co_ which is too far (at least in my case) for the shadows_co_ and causes light bleeding.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCan I set this or do I need to override the setShadowProjectionMatrix function like this_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_        BABYLON.PointLight.prototype.setShadowProjectionMatrix _eq_ function (){\n            [...]\n        }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tOr is there a better way?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf I am right then I would submit a PR but I am new to Babylon (and Javascript and Typescript) so I thought it is better to ask here instead and let you guys fix it since it is a 1 line change in BabylonJS code.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BeanstalkBlue","Date":"2017-03-04T02:40:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWhat I am trying to say is that the Babylon.js function here_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_        public setShadowProjectionMatrix(matrix_dd_ Matrix_co_ viewMatrix_dd_ Matrix_co_ renderList_dd_ Array&lt_sm_AbstractMesh&gt_sm_)_dd_ PointLight {\n            var activeCamera _eq_ this.getScene().activeCamera_sm_\n            Matrix.PerspectiveFovLHToRef(Math.PI / 2_co_ 1.0_co_ activeCamera.minZ_co_ activeCamera.maxZ_co_ matrix)_sm_\n            return this_sm_\n        }\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tShould be this_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_        public setShadowProjectionMatrix(matrix_dd_ Matrix_co_ viewMatrix_dd_ Matrix_co_ renderList_dd_ Array&lt_sm_AbstractMesh&gt_sm_)_dd_ PointLight {\n            Matrix.PerspectiveFovLHToRef(Math.PI / 2_co_ 1.0_co_ this.range/1000.0_co_ this.range_co_ matrix)_sm_\n            return this_sm_\n        }\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tUnless I am missing something?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_qt_activeCamera_qt_ is not the shadow generator_t_s camera_co_ it is the camera that the player sees the world through_co_ right?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BitOfGold","Date":"2017-03-04T19:12:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI think you are right_dd__lt_br /_gt_\n\tJust patched my version of babylon with your code_co_ and shadows become much clearer. Much better now! Thanks!_lt_br /_gt_\n\t(My camera MaxZ was 20000)_lt_br /_gt__lt_br /_gt_\n\tThis is not the only problem with point light shadows btw._lt_br /_gt_\n\tIt does not work with_lt_strong_gt_ instanced meshes_lt_/strong_gt__dd__lt_br /_gt_\n\tLook at the wrong shadows here. They are coming from the characters behind me._lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_03/pointlights.jpg.89bcc3fa5be93e36ba56c182e165f32e.jpg_qt_ data-fileid_eq__qt_11886_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_pointlights.jpg_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_11886_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_03/pointlights.thumb.jpg.fd76be987f314b940fbd9ae434356eb9.jpg_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BeanstalkBlue","Date":"2017-03-04T19:46:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI have point shadows on SPS particles (which I guess are instanced meshes)_co_ and it works fine. Maybe there is something going on with the meshes you are adding to the shadowGenerator renderList?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tDid your instanced mesh error occur after using my code? If so then just to check_co_ set minZ and maxZ in setShadowProjectionMatrix() to something sensible manually (like 0.1 and 100.0) and see if that changes anything.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BitOfGold","Date":"2017-03-04T22:23:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tWell_co_ I dont know what is wrong now._lt_br /_gt_\n\tTried a few bias values (and I realy do not know what is the correct bias_co_ as it should be one texel above the  shadowed surface_co_ but what size is that? only guessing!)_lt_br /_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#EZCUT%2320_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#EZCUT#20_lt_/a_gt__lt_br /_gt__lt_br /_gt_\n\tgrey boxes are normal meshes (have some wrong shadow_co_ only in the distance_co_ and only at the right bias setting)_lt_br /_gt_\n\treds are clones (have shadows too)_lt_br /_gt_\n\tblues are instances (have no shadows)_lt_br /_gt__lt_br /_gt_\n\tYour code does not help if I comment it out._lt_br /_gt_\n\tEdit_dd__lt_br /_gt_\n\tThis playground scene is with default camera maxZ... In my scene_co_ it does help!\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BitOfGold","Date":"2017-03-04T22:26:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tSPS particles are not instances_co_ they are one mesh generated from shapes._lt_br /_gt__lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-03-06T19:00:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey I_t_ve just added a new property to each light_dd_ light.customProjectionMatrixBuilder\n_lt_/p_gt_\n\n_lt_p_gt_\n\there is how the code looks like_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_public setShadowProjectionMatrix(matrix_dd_ Matrix_co_ viewMatrix_dd_ Matrix_co_ renderList_dd_ Array&lt_sm_AbstractMesh&gt_sm_)_dd_ SpotLight {\n            if (this.customProjectionMatrixBuilder) {\n                this.customProjectionMatrixBuilder(viewMatrix_co_ renderList_co_ matrix)_sm_\n            } else {\n                var activeCamera _eq_ this.getScene().activeCamera_sm_\n                Matrix.PerspectiveFovLHToRef(this.angle_co_ 1.0_co_ activeCamera.minZ_co_ activeCamera.maxZ_co_ matrix)_sm_\n            }\n            return this_sm_\n        }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tSo basically you can now write_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_light.customProjectionMatrixBuilder _eq_ function(viewMatrix_co_ renderList_co_ output) {\n\n     BABYLON.Matrix.PerspectiveFovLHToRef(Math.PI / 2_co_ 1.0_co_ light.range/1000.0_co_ light.range_co_ output)_sm_\n\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]