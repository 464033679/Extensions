[{"Owner":"1glayfan","Date":"2018-04-23T22:47:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCurrent this is what I need to do to get the device id_co_ using webvr api directly.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_ this.vrHelper.onEnteringVR.add(() _eq_&gt_sm_ {\n                \n                navigator.getVRDisplays().then((displays) _eq_&gt_sm_ {\n                    for (let display of displays) {\n                        console.log(`**** Device_dd_ id_eq_${display.displayId}_co_ name_eq_${display.displayName}`)_sm_\n                    }\n                })_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThe displayId prop is not reliable as it always returns 1 regardless which actual hmd I am using (vive or winmr or other)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe displayName prop is also not consistent among browsers. For ex_dd_ when I am using vive hmd_co_ firefox returns _t_OpenVR HMD_t_ while chrome returns _t_HTC Vive MV._t_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI wonder if bjs has api to do this. Ideally returning some kind of enum which we can use it reliably.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-04-24T00:16:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tPing _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/29361-trevordev/?do_eq_hovercard_qt_ data-mentionid_eq__qt_29361_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/29361-trevordev/_qt_ rel_eq__qt__qt__gt_@trevordev_lt_/a_gt_ Thanks _dd_-)_lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"HoloLite","Date":"2018-04-24T00:24:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIf your app forces the user to use the controller from the beginning then you can call BABYLON.WebVRController.controllerType to get the enum which is defined like the following_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_ enum PoseEnabledControllerType {\n        /**\n         * HTC Vive\n         */\n        VIVE _eq_ 0_co_\n        /**\n         * Oculus Rift\n         */\n        OCULUS _eq_ 1_co_\n        /**\n         * Windows mixed reality\n         */\n        WINDOWS _eq_ 2_co_\n        /**\n         * Samsung gear VR\n         */\n        GEAR_VR _eq_ 3_co_\n        /**\n         * Google Daydream\n         */\n        DAYDREAM _eq_ 4_co_\n        /**\n         * Generic\n         */\n        GENERIC _eq_ 5_co_\n    }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tBut again this will work only if your app always uses the controller. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"trevordev","Date":"2018-04-24T01:29:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tBabylon can only expose what the browser makes available and to my knowledge the webVR spec does not provide any way to do this_co_ I believe by design(_lt_a href_eq__qt_https_dd_//immersive-web.github.io/webxr/#fingerprinting-security_qt_ rel_eq__qt_external nofollow_qt__gt_spec_lt_/a_gt_). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you are trying to figure out the capabilities of the device currently connected you could use display.capabilities otherwise if you are trying to show a different ui for a device type HoloLites solution seems like the best option at this time.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"1glayfan","Date":"2018-04-24T07:27:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tNot capabilities_co_ only the device ID_co_ as the app logic may depend on certain hardware idiosyncrasies. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]