[{"Owner":"JohnK","Date":"2016-04-27T13:08:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSome background followed by several related questions.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have written a Javascript file myExtensionFile.js to submit for consideration as an extension.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe current format of the file consists of a public function that calls several private functions  and looks like this\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var private1 _eq_ function(a_co_ b) {\n    //code here \n}\n\nvar private2 _eq_ function(a_co_ b) {\n    var myx _eq_ private1(c_co_ d)_sm_    \n    //more code here \n}\n\nvar myExtension _eq_ function(a_co_ b_co_ c) {\n    //some code\n    var myx _eq_ private1(m_co_ n)_sm_\n    //more code\n    var myy _eq_ private2(p_co_ q)_sm_\n    //even more code\n}\n\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tOnce loaded you call it using myExtension(a_co_ b_co_ c).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow I have noticed that some files in the Babylon Extensions use BABYLONX\n_lt_/p_gt_\n\n_lt_p_gt_\n\tQuestion 1 Should myExtensionFile.js be re-written so that it is called using BABYLONX.myExtension(a_co_ b_co_ c)?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tQuestion 2. If I changed to using BABYLONX is this the correct way to re-write  myExtensionFile.js?\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var private1 _eq_ function(a_co_ b) {\n    //code here \n}\n\nvar private2 _eq_ function(a_co_ b) {\n    var myx _eq_ private1(c_co_ d)_sm_    \n    //more code here \n}\n\nvar BABYLONX_sm_\n(function (BABYLONX) {\n    var myExtension _eq_ function(a_co_ b_co_ c) {\n        //some code\n        var myx _eq_ private1(m_co_ n)_sm_\n        //more code\n        var myy _eq_ private2(p_co_ q)_sm_\n        //even more code\n    }\n }())_sm_\n\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tSomething to do with closures (I think) but haven_t_t got to grips with them as yet.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tQuestion 3. Would using BABYLONX in this way clash with other extensions?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tQuestion 4. I can see that using BABYLONX rather than BABYLON shows in code that an extension is needed and should be loaded but would using just BABYLON be better for continuity? Is it possible to do that?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tQuestion 5. How would you format the myExtensionFile as typescript. I know I could just change the js file extension to ts but to be  _t_proper_t_ typescript should I be using modules and classes?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tQuestion 6. For someone with a limited skill set  (like me) would it be useful to have an _t_How To Format A Babylon Extension for Javascript and Typescript_t_ document?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                   When I am clear whether there could be a standard format for writing extension code_co_ what the format looks like and how to do it I wouldn_t_t mind having a go at the documentation.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                  Whether I will ever have sufficient clarity is another issue.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-04-27T13:24:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t1) This is your decision_co_ actually. namespace is nice to have_co_ but sometimes it is not needed. I would personally use my own namespace.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) not entirely. You can try using typescript if you want to use extensions_co_ or check a simple .js file from BABYLON. What you are missing is adding this function to the BABYLONX variable. (_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Layer/babylon.layer.js#L94_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Layer/babylon.layer.js#L94_lt_/a_gt_ for example)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t3) Nope_co_ unless you use the same class names and of course only if the other extension is loaded.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t4) BABYLON is reserved to core functionality alone. The same clash that might happen with BABYLONX extensions can of course happen with BABYLON. There is no law against it_co_ and everything is allowed_co_ but for the sake of separation and to keep the users informed that what they are using is an extension and not a part of the core_co_ using BABYLONX is better.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t5) Your decision alone. I love the way typescript organizes the code_co_ but this is a personal opinion. Use classes_co_ or don_t_t_co_ up to you.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t6) There are no official extensions. There is just a collection of useful applications that happen to use Babylon in a nice way _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think that the first misconception is that the extensions are a part of the community_t_s work. The extensions repository is simply a collection of nice tools. It is a service for the users. This is not an official supported repository. It is more for the extension creators  and the community to use. You can do whatever you want_co_ really. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI created once _lt_a href_eq__qt_https_dd_//github.com/BabylonJSX_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJSX_lt_/a_gt_ _co_ but I don_t_t quite maintain it at the moment. This is also nothing official. Just a fun side project(s). A place for developers to find cool babylon plugins.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-04-27T16:03:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tAgree with everything Raanan said _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]