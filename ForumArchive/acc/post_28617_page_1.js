[{"Owner":"eucly2","Date":"2017-02-22T11:59:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey everyone!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m trying to extract VerticeData from a SubMesh to create an other mesh but i always failed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI want to extract indices_co_ positions_co_ normals and uvs for the moment_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIndices_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var result _eq_ new VertexData()_sm_\nvar indices _eq_ subMesh.getMesh().getIndices()_sm_\nfor (var index _eq_ subMesh.indexStart_sm_ index &lt_sm_ subMesh.indexStart + subMesh.indexCount_sm_ index++) \n{\n    result.indices.push(indices[index])_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tPositions and normals_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var positions _eq_ subMesh.getMesh().getVerticesData(BABYLON.VertexBuffer.PositionKind_co_ copyWhenShared)_sm_\nvar vertex_sm_\nfor (var index _eq_ subMesh.indexStart_sm_ index &lt_sm_ subMesh.indexStart + subMesh.indexCount_sm_ index+_eq_3) {                    \n    vertex _eq_ new BABYLON.Vector3.TransformCoordinates(new BABYLON.Vector3(positions[index]_co_ positions[index + 1]_co_ positions[index + 2])_co_ worldMatrix)_sm_\n    result.positions.push(vertex.x)_sm_\n    result.positions.push(vertex.y)_sm_\n    result.positions.push(vertex.z)_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyone to help me?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-02-22T16:21:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tactually the index you use here is wrong_co_ you have to use the indices array with it (like you did for the indices actually _dd_))\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var positions _eq_ subMesh.getMesh().getVerticesData(BABYLON.VertexBuffer.PositionKind_co_ copyWhenShared)_sm_\nvar indices _eq_ subMesh.getMesh().getIndices()_sm_\nvar vertex_sm_\nfor (var index _eq_ subMesh.indexStart_sm_ index &lt_sm_ subMesh.indexStart + subMesh.indexCount_sm_ index+_eq_3) {                    \n    vertex _eq_ new BABYLON.Vector3.TransformCoordinates(new BABYLON.Vector3(positions[indices[index]]_co_ positions[indices[index + 1]]_co_ positions[indices[index + 2]])_co_ worldMatrix)_sm_\n    result.positions.push(vertex.x)_sm_\n    result.positions.push(vertex.y)_sm_\n    result.positions.push(vertex.z)_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"eucly2","Date":"2017-02-23T10:39:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSorry but it doesn_t_t work.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWith your code_co_ for example_co_ if the size of my indices array is 132 the for loop put 132 values in the positions array instead of 396 (132 x 3)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2017-02-23T16:20:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tUsing DK_t_s idea as a basis I came up with this PG _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1WYYET%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1WYYET#1_lt_/a_gt_ which I hope helps you to complete your project. You can change which submesh is constructed using line 21. The are ( for reasons I do not understand) 6 submeshes rather than 3. The sphere.subMeshes numbers 0 and 1_co_ 2 and 3_co_ 4 and 5 result in the same submesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tA suggestion for further questions a PG (which could be a simplification of the problem aspect of your project) helps to elicit faster responses.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-02-23T16:49:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI did not test my code and did it on my phone but _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/?do_eq_hovercard_qt_ data-mentionid_eq__qt_14282_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/_qt_ rel_eq__qt__qt__gt_@JohnK_lt_/a_gt_ saved my day _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"eucly2","Date":"2017-02-23T16:53:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for your answer.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat is exactly what i want to do_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1WYYET%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1WYYET#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s work on the PG so I hope it will work on my project_co_ I try tomorrow on it and I will tell you the result.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks DK and JohnK.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"eucly2","Date":"2017-02-24T10:21:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOk it_t_s work_co_ positions_co_ normals and uvs are good_co_ but there is one curious problem.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen i change the scale of a new mesh_co_ the scale is good but it move too.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can see the problem on my joins file or on this PG _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1WYYET%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1WYYET#4_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_02/58b008dbd5aa0_avantscaling.JPG.da64dacb5ffbe8f2d9a7b274deddcbcd.JPG_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_11777_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_02/58b008dbed951_avantscaling.thumb.JPG.7369763005303ffee8da56a003c0f0e8.JPG_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_avant scaling.JPG_qt__gt__lt_/a_gt__lt_/p_gt_\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_02/58b008ec84126_apresscaling.JPG.49630c907d212696953a4ee8dd02e004.JPG_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_11778_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_02/58b008ec99f82_apresscaling.thumb.JPG.a025aa8622e6bde22d57ab2061ae3025.JPG_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_apres scaling.JPG_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2017-02-24T11:49:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tBecause of the way the you are constructing the  custom meshes from the sub meshes of the cube the vertices of the sub meshes have coordinates relative to their local origin and so scaling is relative to the local origin. When you scale the cube as in _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1WYYET%235_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1WYYET#5_lt_/a_gt_ with reference to z it behaves as you would expect. The green plane has the same relative vertex coordinates as the front of the box so scaling the green plane has the same effect as scaling the front of the box. The simplest way is to just adjust positions until they fall where you want them.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe alternate is to create a new local origin for the custom mesh. Once you have determined where you want the new local origin of the custom mesh to be you can either set it by adjusting the coordinates of the vertices when forming the result.positions or you could use _lt_a href_eq__qt_http_dd_//babylonjsguide.github.io/advanced/Pivots_qt_ rel_eq__qt_external nofollow_qt__gt_setPivotMatrix_lt_/a_gt_   Which ever way you create a new local origin you will still need to determine where you want the new local origin to be.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso when you use meshBuilder for creating a mesh the sizes have to be given inside the options object_co_ _lt_a href_eq__qt_http_dd_//babylonjsguide.github.io/basics/Shapes_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjsguide.github.io/basics/Shapes_lt_/a_gt_ in your PG the 10 is ignored and the default size of 1 is used.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have corrected this in the following PG (using size 1) and also simplified the code by constructing a mesh prototype function that can be called to create a mesh from a submesh. If you change to size_dd_10 you will have to re-adjust the positioning.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2017-02-24T12:55:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHave added to CreateMeshFromSubMesh - first parameter is now the name for the custom mesh and added a final parameter_co_ true_co_ false or leave out. When true a new local origin is created for the custom mesh which is then re-positioned in the correct place on the original mesh. The new local origin is the barycentre of the custom mesh. Using translation rather than position on the created submesh means if you wish the translation for all created submeshes can be consistent as in _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1WYYET%237_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1WYYET#7_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThough of course using position will still place the submesh.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"eucly2","Date":"2017-02-24T13:27:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_img alt_eq__qt__dd_o_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_ohmy.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/ohmy@2x.png 2x_qt_ title_eq__qt__dd_o_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou are amazing!!! All work perfectly (I can die in peace now _lt_img alt_eq__qt_^_^_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_happy.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/happy@2x.png 2x_qt_ title_eq__qt_^_^_qt_ width_eq__qt_20_qt_ /_gt_)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you so much for this\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]