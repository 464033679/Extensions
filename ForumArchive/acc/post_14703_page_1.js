[{"Owner":"benoit-1842","Date":"2015-05-22T18:58:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The wisdom of wingnut strongly suggest me to change the title of my previous topic changing animation.  I am using a kinect to capture bvh data of my body and I am using those data to put in an avatar in Blender that i transform to a .babylon file and voila i have an awesome avatar moving with my movement.  The only little problem is when i am building the .babylon file in blender it takes around 15 minutes to have a new moving avatar. I would like to present my workflow to an expo this summer but I would like to be able to capture the bvh of the movement of the people and put it directly in my model in babylon.js.....  I will work on that project and show you the details of my process.  If anybody have an idea of maybe a workflow that can be helpful please send me a sign..._lt_/p_gt__lt_p_gt_Merci_co__lt_/p_gt__lt_p_gt_Benoit_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-05-22T19:51:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It is possible in theory.  You would need to put the mesh_co_ which has the MatricesWeights &amp_sm_ MatricesIndices_co_ and a skeleton in a .babylon or .js from a Blender exporter.  That is just a mesh with the armature_co_ but no animation._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you could write javascript that took this data source_co_ then construct &amp_sm_ attach animations for each bone.  Here is a sample where the animation is constructed with inline data.  You would have to do this from your data._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_function getBone(skeleton_co_ nameOfBone){    for (var i _eq_ skeleton.bones.length - 1_sm_ i&gt_sm__eq_ 0_sm_ i--){        if (skeleton.bone[i].name _eq__eq__eq_ nameOfBone) return skeleton.bone[i]_sm_    }    return null_sm_}_sm_var skeleton _eq_ scene.getSkeletonByName(_qt_my name_qt_)_sm_var bone _eq_ getBone(skeleton_co_ _qt_left-arm_qt_)_sm_var animation _eq_ new BABYLON.Animation(_qt_anim_qt__co_ _qt__matrix_qt__co_ 30_co_ 3_co_ 1)_sm_animation.setKeys([{frame_dd_ 1_co_ value_dd_ BABYLON.Matrix.FromValues(0.9967_co_0.0513_co_-0.0632_co_0_co_-0.0495_co_0.9984_co_0.029_co_0_co_-0.0646_co_0.0258_co_-0.9976_co_0_co_0_co_0.9036_co_-0.0008_co_1)}_co_{frame_dd_ 2_co_ value_dd_ BABYLON.Matrix.FromValues(0.9972_co_0.0652_co_-0.0372_co_0_co_-0.0637_co_0.9972_co_0.0401_co_0_co_-0.0397_co_0.0376_co_-0.9985_co_0_co_0_co_0.8986_co_-0.0016_co_1)}_co_{frame_dd_ 3_co_ value_dd_ BABYLON.Matrix.FromValues(0.9983_co_0.0569_co_-0.0135_co_0_co_-0.0564_co_0.9976_co_0.0395_co_0_co_-0.0157_co_0.0387_co_-0.9991_co_0_co_0_co_0.8937_co_-0.0025_co_1)}_co_  . . .{frame_dd_ 45_co_ value_dd_ BABYLON.Matrix.FromValues(0.998_co_0.035_co_-0.0523_co_0_co_-0.0344_co_0.9993_co_0.0132_co_0_co_-0.0527_co_0.0114_co_-0.9985_co_0_co_0_co_0.9578_co_0.0024_co_1)}])_sm_bone.animations.push(animation)_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-05-25T05:33:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The only way to do this withminimal delay( approx 70ms) is to build a plugin using the kinect sdk using Websocket IO through a node.js server. Further details than this would take a couse in new server language to teach.  There is currently no other way to go from the kinect to babylon unless you write out .babylon file or create your own file parser for .bvh._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"benoit-1842","Date":"2015-05-25T12:45:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi guys thanks for your interest.....  What I want to be able to do it`s to take a bvh and _qt_put it_qt_ in a model in babylon without having to pass by Blender.  My workflow _dd_ Brekel or mmc ----&gt_sm_ .bvh -------&gt_sm_ animated .babylon model.  What I want is a type of drag and drop bvh that change the animated model very quickly instead of             Brekel or mmc -------&gt_sm_ bvh ----------&gt_sm_ Blender (makewalk plugin) ----------------------&gt_sm_ create a .babylon file 15 minutes.  I am pretty sure that we can bypass the Blender phase and have directly a drag and drop in a babylon context.  My insight is to have two models one that`s only the bvh and the other one is the actual model with the same bones name has the bvh model file....  _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanx a lot_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Benoit_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-05-25T15:13:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCooool!  I thought you were talking about .bvh _lt_em_gt_files_lt_/em_gt_.  \n_lt_/p_gt_\n\n_lt_p_gt_\n\tRealtime Kinect---&gt_sm_ BJS?  Yeeeah_co_ I like that idea.  Max Headroom_co_ v7.5  _lt_img alt_eq__qt__dd_)_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ data-emoticon_eq__qt__qt_ /_gt_  I imagine that the more vertices in the skinning mesh_co_ the worse the performance.  Keep your skins simple and blocky_co_ and get many skeletons on-screen at the same time_co_ maybe.  Interesting project.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1NSCXV%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#1NSCXV#4_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOur 4-skeleton PG demo does ok_co_ performance-wise... but I_t_m on a brand new box_co_ so EVERYTHING looks wonderful to me_co_ at this time.  _lt_img alt_eq__qt__dd_)_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ data-emoticon_eq__qt__qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"benoit-1842","Date":"2015-05-25T17:05:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yeah Wingnut I am talking about drag and dropping bvh files......  But this idea of Kinect and babylon.js looks like a cool project and this is something that inspire me a lot......  Because my dream it`s to keep everything internally in babylon.js........ But yeah my first idea was to take .bvh files that I took elsewhere made with a kinect and drag it in a model in a babylon.js context.._lt_/p_gt__lt_p_gt_But wow kinect + babylon.js is promising..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanx_co__lt_/p_gt__lt_p_gt_Benoit_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-05-25T17:27:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It_t_s probably easier to pass data directly to BJS rather than loading a table and parsing.  We are working on realtime multiuser apps_co_ and once you place a node.js server communicating using a Websocket IO connection_co_ this is doable.  However_co_ you should be able to load the x_co_y_co_z transforms in a loop - but it will be a HUGE script.  This would be a much better function as a switch working inside the parsing of a .babylon file.  I don_t_t believe worker threads are really working yet_co_ but this would also be necessary as the overhead of an uncompiled script parsing so much data for a skeleton might be CPU intensive.  If you get real-time running_co_ you_t_l easily be able to drag and drop as the overhead will already be managed._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-05-25T17:37:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_db_co__lt_/p_gt__lt_p_gt_Are you asolutely positive that a server is required?  I saw something on CocoonJS HTML5 feature list _lt_a href_eq__qt_http_dd_//support.ludei.com/hc/en-us/articles/200807787-HTML5-feature-list_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//support.ludei.com/hc/en-us/articles/200807787-HTML5-feature-list_lt_/a_gt_ that led me to think you can do websocket IO directly from the game.  I have not this from a JS environment before._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Jeff_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-05-25T17:44:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You are correct_co_ you don_t_t require a node.js server to stream_co_ just the Websoket IO connection.  However_co_ I highly recommend moving from a Linux server set to a node.js server as it is FAR more efficient for streaming.  Also_co_ there are many scripts available once you make the switch and don_t_t have to reinvent the wheel on this.  It has certainly been an eye opener to me and the group I work with_co_ and we now can write whatever we need to connect and stream_co_ without all of the overhead of old server technology._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]