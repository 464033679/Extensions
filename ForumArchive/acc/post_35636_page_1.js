[{"Owner":"DiV","Date":"2018-02-11T14:58:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m using a compressed PNG for refraction postprocess_co_ but it_t_s just black and white noise_co_ so I_t_d like to generate the texture instead. Is it possible though? I tried procedural textures from the library_co_ but it only resulted in _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#FBW4N%231_qt_ rel_eq__qt_external nofollow_qt__gt_default checkerboard texture appearing_lt_/a_gt_. What am I doing wrong? And if procedural textures can_t_t be used this way can I use my texture as a tile_co_ so it wouldn_t_t stretch across the screen changing the scale of the noise?_lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var roadmaterialpt _eq_ new BABYLON.RoadProceduralTexture(_qt_customtext_qt__co_ 512_co_ scene)_sm_\nvar postProcess2 _eq_ new BABYLON.RefractionPostProcess(_qt_Refraction_qt__co_ roadmaterialpt_co_ new BABYLON.Color3(1.0_co_ 1.0_co_ 1.0)_co_ 0.3_co_ 2.0_co_ 1.0_co_ camera)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"DiV","Date":"2018-02-11T17:56:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI partially solved this problem by using base64-encoded fractal noise from the SVG file_co_ it_t_s the same dataURI now_co_ but I don_t_t need it exactly procedural_co_ I just want some moving ripples_co_ so I_t_ll either stick to updating the depth with Math.sin(looks like the character is breathing) or try to somehow shuffle the part of the string that won_t_t cause major glitches.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere_t_s the new version_dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#FBW4N%232_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#FBW4N#2_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-02-12T15:46:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs you have found_co_ the RoadProceduralTexture expects an URL and not a texture directly\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tbut you can use this hack _dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#FBW4N#3_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#FBW4N#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-02-12T15:49:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_ve just pushed a version where you can call postProcess2.refractionTexture _eq_ roadmaterialpt\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"DiV","Date":"2018-02-12T16:21:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI didn_t_t know about _qt__refRexture_qt_ parameter_co_ thank you! Works perfectly and with engine.getRenderHeight()/2 set as texture resolution I think I can finally stop worrying about the screen sizes.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]