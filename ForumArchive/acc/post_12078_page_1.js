[{"Owner":"jerome","Date":"2015-01-29T09:05:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I would like to dynamically deform a mesh._lt_/p_gt__lt_p_gt_I mean_co_ given a mesh_co_ I just want its vertices to change position dynamically_co_ not the face definitions._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I guess the Mesh object _lt_em_gt_updateVerticesData()_lt_/em_gt_ or _lt_em_gt_updateVerticesDataDirectly()_lt_/em_gt_ methods should be used._lt_/p_gt__lt_p_gt_But I don_t_t know really how and if this kind of update will have the deformed mesh rendered at next frame without doing anything more ..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_#1 _dd_ Is this the right way to achieve this kind of deformation ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_#2 _dd_ If yes_co_ is there an example of these methods usage anywhere in the playground or somewhere else ?_lt_/p_gt__lt_p_gt__lt_em_gt_( I have to admit I haven_t_t yet finished to watch the 7 hours video tutorial_co_ maybe it is talked about )_lt_/em_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2015-01-29T09:36:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi Jerome_co_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Shameless auto-promotion _dd_ _lt_a href_eq__qt_http_dd_//pixelcodr.com/tutos/trees/trees.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//pixelcodr.com/tutos/trees/trees.html_lt_/a_gt_  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Hope it helps !_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-01-29T10:18:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thank you_lt_/p_gt__lt_p_gt_Lol for _qt_shameless_qt_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_laugh.png_qt_ alt_eq__qt__dd_lol_dd__qt__gt_ (you should be proud of your work !)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I can_t_t see you use _lt_em_gt_updateVerticesData()_lt_/em_gt_ in your code. Maybe it is not mandatory so ?_lt_/p_gt__lt_p_gt_As far as I understand_co_ you deform a sphere mesh _lt_strong_gt_once_lt_/strong_gt_ for the foliages and use then this initial deformation.  Or maybe_co_ didn_t_t I understand well ? _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wacko.png_qt_ alt_eq__qt__dd_wacko_dd__qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I intend to dynamically_co_ meaning _lt_em_gt_each frame of the render loop_lt_/em_gt__co_ deform/update a mesh on the VertexBuffer.PositionKind basis._lt_/p_gt__lt_p_gt_As if the foliage deformation were computed and rendered the best way possible each frame ... _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Or imagine the radius of the tube mesh varying dynamically so we could show big lumps slide along the curve of the tube _dd_ _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/11772-tube-mesh/?p_eq_69198_qt__gt_http_dd_//www.html5gamedevs.com/topic/11772-tube-mesh/?p_eq_69198_lt_/a_gt_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_laugh.png_qt_ alt_eq__qt__dd_lol_dd__qt__gt_ _dd_lol_dd_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_laugh.png_qt_ alt_eq__qt__dd_lol_dd__qt__gt_ _dd_lol_dd__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"altreality","Date":"2015-01-29T17:04:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1AVEYO%2313_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#1AVEYO#13_lt_/a_gt_   _lt_img alt_eq__qt__dd_P_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ data-emoticon_eq__qt__qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-01-29T17:13:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_thank you so much  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-01-29T17:46:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Have built a MORPH module_co_ in extensions.  Is implemented from Blender shapekeys_co_ preocessed by Tower of Babel exporter.  Morph 1.2 is under dev to make ready for Babylon 2.0.  Changes include_dd__lt_/p_gt__lt_ul_gt__lt_li_gt_Tower of Babel 2.0 (Mesh factory cloning_co_ not for Morphing)_lt_/li_gt__lt_li_gt_The POV BeforeRenderer pulled out into its own module  (sublcassed by MORPH)_lt_/li_gt__lt_li_gt_Integrated with Web Audio (waiting for Sound.setAudioBuffer() method to be added)_lt_/li_gt__lt_/ul_gt__lt_p_gt_Still here are three published examples based on 1.1_lt_/p_gt__lt_ul_gt__lt_li_gt__lt_a href_eq__qt_https_dd_//googledrive.com/host/0B6-s6ZjHyEwUdHp3a3pJdlgwS0U_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//googledrive.com/host/0B6-s6ZjHyEwUdHp3a3pJdlgwS0U_lt_/a_gt_ see Automaton (old name)_co_ and Multi Group_lt_/li_gt__lt_li_gt__lt_a href_eq__qt_https_dd_//googledrive.com/host/0B6-s6ZjHyEwUSDVBUGpHOXdtbHc_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//googledrive.com/host/0B6-s6ZjHyEwUSDVBUGpHOXdtbHc_lt_/a_gt_ for Voice syncing_lt_/li_gt__lt_/ul_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-01-29T19:25:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_looks nice_lt_/p_gt__lt_p_gt_though I don_t_t know anything about Blender   _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-01-30T09:45:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_ok_co_ I understant the code_co_ so it answers my #2 initial question _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_but_lt_/p_gt__lt_p_gt_still #1 _dd_ Is this the best way to achieve this kind of deformation ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_this is a design pattern question _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I know we could use vertex shaders and they are the most powerful._lt_/p_gt__lt_p_gt_But it might be sometimes not that easy to pass structured data to the vertex shader (say_co_ an array of js objects_co_ each having different values for each different vertex)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So I_t_m looking for a way  _dd__lt_/p_gt__lt_p_gt_- to keep indices_co_ so the mesh remains _qt_substantial_qt__lt_/p_gt__lt_p_gt_- to change only positions according to some pure js logic_co_ which may be as complex as needed_lt_/p_gt__lt_p_gt_- not to dispose_co_ delete objects (the mesh itself_co_ and arrays) so the GC is not requested_lt_/p_gt__lt_p_gt_- to optimize the full process just described _dd_ is it better to recreate from scratch the internal vertexData of a given mesh ? or use the _lt_em_gt_updateVerticesData(_lt_/em_gt_) ? or any other way ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_My deformations should happen each frame with no performance drops _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_huh.png_qt_ alt_eq__qt__dd_huh_dd__qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-01-30T15:14:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_MORPH achieves its performance by building endpoints for positions &amp_sm_ normals first (you can actually _qt_compile_qt_ endpoints in advance).  Each beforeRender triggers an interpolation of positions / normals indices to change .  This is about as fast as you can get._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The full set of positions / normals is retransmitted up to the GPU using _lt_em_gt_updateVerticesDataDirectly()_lt_/em_gt_.  This requires that the data be in Float32Array. Everything is kept in that format to begin with.  This also limits GC.  Building throw away Float32Arrays every frame is an unnecessary drag._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Your requirement of_lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_My deformations should happen each frame with no performance drops_lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_is not the most realistic to _qt_frame_qt_ it.  Better would be _qt_deform as smoothly as possible in the exact amount of time allotted _co_ on any hardware_qt_._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Interpolating the % of the deformation that should have occurred by then_co_ allows the animation to catch up if behind &amp_sm_ work good on different hardware.  Frame rate is a red herring._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-01-30T15:45:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_ok I understand and agree with you _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_what is the difference between _lt_em_gt_updateVerticesDataDirectly() _lt_/em_gt_and _lt_em_gt_updateVerticesData() ?_lt_/em_gt__lt_/p_gt__lt_p_gt_something to do with the passing to the GPU ?_lt_/p_gt__lt_p_gt_seems very obscure to me _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-01-30T16:12:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_em_gt_updateVerticesDataDirectly() _lt_/em_gt_is a short cut put in for MORPH (DeltaKosh_co_ did not like the direct call to a public but low level method in Engine I was using).  It is newer than _lt_em_gt_updateVerticesData()_lt_/em_gt_.  Nothing is saved or destroyed._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Updating directly uses permanent Float32Arrays that are required to be sent by webGL to the GPU.  The older way takes a Javascript Array_co_ inside the Heap and_dd__lt_/p_gt__lt_ul_gt__lt_li_gt_builds a throw away native memory array (Float32Array)_lt_/li_gt__lt_li_gt_copies from the heap array to the native array_lt_/li_gt__lt_li_gt_sends it via webGL_lt_/li_gt__lt_li_gt_keeps a reference copy of the heap array in VertexBuffer_co_ I think._lt_/li_gt__lt_/ul_gt__lt_p_gt_EDIT_dd_ _lt_em_gt_updateVerticesDataDirectly()_lt_/em_gt_ does actually destroy something_co_ the copy of the Heap array var  in VertexBuffer past in from the original SetVerticesData() during initialization._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]