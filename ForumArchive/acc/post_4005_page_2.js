[{"Owner":"Dad72","Date":"2014-02-21T23:37:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I have a beginning of result which smooths the edge_co_ but the problem is that it also widening the lower edge. Me_co_ i would like that does not dig into the sand part._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_By and large the smoothing_co_ must flatten the bumps on the flat (here_co_ this digs)_co_ elevate on the hollow (here_co_ this digs also) and round off the corners on the edge (here_co_ ok)._lt_br_gt__lt_br_gt_I have modify a can your previous code_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_// Smooth vertices                        for (var selectedVertice in this._selectedVertices)            {                var position _eq_ this._groundPositions[selectedVertice]_sm_                var distance _eq_ this._selectedVertices[selectedVertice]_sm_                var fullHeight _eq_ height * this._invertDirection_sm_                                if (distance &lt_sm_ radius * 0.3) {                    position.y +_eq_ 0_sm_                }                else {                    position.y -_eq_ 0.5 * fullHeight * (1.0 - (distance - radius * 0.1) / (radius * 0.9))_sm_                }                                    this._groundVerticesPositions[selectedVertice * 3 + 1] _eq_ position.y_sm_                this._updateSubdivisions(selectedVertice)_sm_            }_lt_/pre_gt__lt_p_gt_Here is the image for that you can see what I want to say_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-02-25T00:47:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Nobody as of ideas?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-02-26T13:15:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I don_t_t manage to solve this problem _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/4005-rough-terrain-smooth/?p_eq_25667_qt__gt_ here_lt_/a_gt_. Someone can help me? Thanks_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-02-26T15:24:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I have managed to find the solution with _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (position.y &lt_sm_ distance) {    position.y +_eq_ 0_sm_}else {    position.y -_eq_ 0.5 * (fullHeight / 2) * (1.0 - (distance - radius * 0.1) / (radius * 0.9))_sm_}_lt_/pre_gt__lt_p_gt_It appears to work correctly._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-02-26T16:45:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Cool._lt_/p_gt__lt_p_gt_A little improvement_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (position.y &gt_sm__eq_ distance) {    position.y -_eq_ fullHeight / 4 * (10/9 - distance / (radius * 0.9))_sm_}_lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-02-26T16:53:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thank You Gwenaël. But in made_co_ with your improvement_co_ this regrooved in the ground. with what I have done it works exactly as expected. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-02-26T17:02:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Oops I was too fast and I must have done a mistake when simplifying it._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_First simplification_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (position.y &gt_sm__eq_ distance) {    position.y -_eq_ 0.5 * (fullHeight / 2) * (1.0 - (distance - radius * 0.1) / (radius * 0.9))_sm_}_lt_/pre_gt__lt_p_gt_Second simplification_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (position.y &gt_sm__eq_ distance) {    position.y -_eq_ (fullHeight / 4) * (1.0 - (distance - radius * 0.1) / (radius * 0.9))_sm_}_lt_/pre_gt__lt_p_gt_Third one_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (position.y &gt_sm__eq_ distance) {    position.y -_eq_ (fullHeight / 4) * (1.0 + (radius *0.1 - distance) / (radius * 0.9))_sm_}_lt_/pre_gt__lt_p_gt_Fourth one_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (position.y &gt_sm__eq_ distance) {    position.y -_eq_ (fullHeight / 4) * (1.0 + (radius *0.1 / (radius * 0.9) - distance / (radius * 0.9)))_sm_}_lt_/pre_gt__lt_p_gt_Fifth one_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (position.y &gt_sm__eq_ distance) {    position.y -_eq_ (fullHeight / 4) * (1.0 + (1/9 - distance / (radius * 0.9)))_sm_}_lt_/pre_gt__lt_p_gt_Sixth one_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (position.y &gt_sm__eq_ distance) {    position.y -_eq_ (fullHeight / 4) * (10/9 - distance / (radius * 0.9))_sm_}_lt_/pre_gt__lt_p_gt_Argh_co_ I don_t_t get where I_t_m wrong. Sorry gotta go. Will check that later_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-02-26T17:13:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Guenael sorry_co_ but all your solutions hollow ground._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-02-26T22:15:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Even the first one? It_t_s the same as_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (position.y &lt_sm_ distance) {    position.y +_eq_ 0_sm_}else {    position.y -_eq_ 0.5 * (fullHeight / 2) * (1.0 - (distance - radius * 0.1) / (radius * 0.9))_sm_}_lt_/pre_gt__lt_p_gt_except if position.y is undefined. In your solution_co_ it will set it and in my suggestion it will ignore it._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In your code_co_ is it really position.y +_eq_ 0 or is it position.y _eq_ 0 (no plus sign)?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-02-26T23:18:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt_Yes_co_ it is position.y +_eq_ 0_sm_ the vertices does not rise and not fall._lt_/div_gt__lt_br_gt__lt_div_gt_if I made position.y -_eq_ 0_sm_ it also works. But 0 is required._lt_/div_gt__lt_br_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-02-26T23:31:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I really don_t_t understand why you have to do that._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_y +_eq_ 0 means y _eq_ y + 0 which also means y _eq_ y. So this instruction is needless._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thus _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (position.y &lt_sm_ distance) {    position.y +_eq_ 0_sm_}else {    position.y -_eq_ 0.5 * (fullHeight / 2) * (1.0 - (distance - radius * 0.1) / (radius * 0.9))_sm_}_lt_/pre_gt__lt_p_gt_is the same thing as_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (position.y &lt_sm_ distance) {    // nothing to do}else {    position.y -_eq_ 0.5 * (fullHeight / 2) * (1.0 - (distance - radius * 0.1) / (radius * 0.9))_sm_}_lt_/pre_gt__lt_p_gt_or_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (position.y &gt_sm__eq_ distance) {{    position.y -_eq_ 0.5 * (fullHeight / 2) * (1.0 - (distance - radius * 0.1) / (radius * 0.9))_sm_}_lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-02-26T23:40:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yes. true._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_is good_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (position.y &gt_sm__eq_ distance) {{    position.y -_eq_ 0.5 * (fullHeight / 2) * (1.0 - (distance - radius * 0.1) / (radius * 0.9))_sm_}_lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-02-26T23:44:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I was being nuts. I couldn_t_t understand why it didn_t_t work. It works! So my first simplification (_lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/4005-rough-terrain-smooth/?p_eq_26454_qt__gt_http_dd_//www.html5gamedevs.com/topic/4005-rough-terrain-smooth/?p_eq_26454_lt_/a_gt_) worked._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(102_co_102_co_0)_sm__qt__gt_Could you try with the second one and then with the third one_co_ up to the last one? Don_t_t forget to empty your cache between tests._lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-02-26T23:59:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt_In made when I tested your various simplification_co_ I do not remove the _t_else{ ... } _t_.  I had not understood. I am tired ...I test again tomorrow any your simplifications _lt_/div_gt__lt_br_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-02-27T00:15:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yeap the else statment is not needed anymore since !(position.y &gt_sm__eq_ distance) equals to (position.y &lt_sm_ distance) and for this case_co_ there is nothing to do._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Replace your code_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (position.y &lt_sm_ distance) {    position.y +_eq_ 0_sm_}else {    position.y -_eq_ 0.5 * (fullHeight / 2) * (1.0 - (distance - radius * 0.1) / (radius * 0.9))_sm_}_lt_/pre_gt__lt_p_gt_by what I suggested in my first reply (_lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/4005-rough-terrain-smooth/?p_eq_26450_qt__gt_http_dd_//www.html5gamedevs.com/topic/4005-rough-terrain-smooth/?p_eq_26450_lt_/a_gt_)_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (position.y &gt_sm__eq_ distance) {    position.y -_eq_ fullHeight / 4 * (10/9 - distance / (radius * 0.9))_sm_ // 0.5 * (fullHeight / 2) * (1.0 - (distance - radius * 0.1) / (radius * 0.9))}_lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-02-27T00:16:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I quickly test. All the solutions works well but the solution 5 is i find the better. _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (position.y &gt_sm__eq_ distance) {    position.y -_eq_ (fullHeight / 4) * (1.0 + (1/9 - distance / (radius * 0.9)))_sm_}_lt_/pre_gt__lt_p_gt_Thank you Gwenael_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-02-27T00:20:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You_t_re welcome._lt_/p_gt__lt_p_gt_It_t_s up to you. The last suggestion only avoids an extra addition_co_ it_t_s not really what will speed up your application _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]