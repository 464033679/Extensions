[{"Owner":"MackeyK24","Date":"2016-10-22T18:21:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI really need help understanding the GLSL versions of the provided BABYLON uniforms. I have seen them called so many different names depending on who_t_s docs your reading.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe ONLY ONE I know for sure is in babylon.js when you say _t_worldViewProjection_t_ that is the GLSL computation of _t_gl_ProjectionMatrix * gl_ModelViewMatrix_t_ or you can use the built-in shortcut _t_gl_ModelViewProjectionMatrix_t_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI need someone who know BABYLON JS GLSL Stuff to PLEASE PLEASE PLEASE... Tell me what the others equal in GLSL terms_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tview _eq_ gl_???\n_lt_/p_gt_\n\n_lt_p_gt_\n\tprojection _eq_ gl_??? (maybe its_dd_ gl_ProjectionMatrix )\n_lt_/p_gt_\n\n_lt_p_gt_\n\tviewProjection _eq_ gl_??? * gl_???\n_lt_/p_gt_\n\n_lt_p_gt_\n\tworld _eq_ gl_???\n_lt_/p_gt_\n\n_lt_p_gt_\n\tworldView _eq_ gl_???\n_lt_/p_gt_\n\n_lt_p_gt_\n\tworldViewProjection _eq_ _t_gl_ProjectionMatrix * gl_ModelViewMatrix_t_ or can be simplified as just _t_gl_ModelViewProjectionMatrix_t_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am sorry i don_t_t know the GLSL stuff_co_ but if i can someone who does to simple fill out the five _t_gl_???_t_ place holders above...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIll be your friend for life _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tNote_dd_ I and trying yo create a block of code that will run in both unity using GLSL stuff and BABYLON JS using native uniforms.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBy Babylon Macros_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_//BABYLON-VERTEX-MACROS-START\nattribute vec3 position_sm_\nvec4 GL_POSITION_ATTRIBUTE() { return vec4(position_co_ 1.0)_sm_ }\nattribute vec3 normal_sm_\nvec3 GL_NORMAL_ATTRIBUTE() { return normal_sm_ }\nattribute vec2 uv_sm_\nvec2 GL_UV_ATTRIBUTE() { return uv_sm_ }\nattribute vec2 uv2_sm_\nvec2 GL_UV2_ATTRIBUTE() { return uv2_sm_ }\nattribute vec2 uv3_sm_\nvec2 GL_UV3_ATTRIBUTE() { return uv3_sm_ }\nattribute vec2 uv4_sm_\nvec2 GL_UV4_ATTRIBUTE() { return uv4_sm_ }\nattribute vec2 uv5_sm_\nvec2 GL_UV5_ATTRIBUTE() { return uv5_sm_ }\nattribute vec2 uv6_sm_\nvec2 GL_UV6_ATTRIBUTE() { return uv6_sm_ }\nattribute vec4 color_sm_\nvec4 GL_COLOR_ATTRIBUTE() { return color_sm_ }\nuniform mat4 view_sm_\nmat4 GL_VIEW_UNIFORM() { return view_sm_ }\nuniform mat4 projection_sm_\nmat4 GL_PROJECTION_UNIFORM() { return projection_sm_ }\nuniform mat4 viewProjection_sm_\nmat4 GL_VIEWPROJECTION_UNIFORM() { return viewProjection_sm_ }\nuniform mat4 world_sm_\nmat4 GL_WORLD_UNIFORM() { return world_sm_ }\nuniform mat4 worldView_sm_\nmat4 GL_WORLDVIEW_UNIFORM() { return worldView_sm_ }\nuniform mat4 worldViewProjection_sm_\nmat4 GL_WORLDVIEWPROJECTION_UNIFORM() { return worldViewProjection_sm_ }\n//BABYLON-VERTEX-MACROS-END_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tMy GLSL Equivalent  Macros (as you can see I still need the gl_??? parts)_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_//BABYLON-VERTEX-MACROS-START\nvec4 GL_POSITION_ATTRIBUTE() { return gl_Vertex_sm_ }\nvec3 GL_NORMAL_ATTRIBUTE() { return gl_Normal_sm_ }\nvec2 GL_UV_ATTRIBUTE() { return vec2(gl_MultiTexCoord0.xy)_sm_ }\nvec2 GL_UV2_ATTRIBUTE() { return vec2(gl_MultiTexCoord1.xy)_sm_ }\nvec2 GL_UV3_ATTRIBUTE() { return vec2(gl_MultiTexCoord2.xy)_sm_ }\nvec2 GL_UV4_ATTRIBUTE() { return vec2(gl_MultiTexCoord3.xy)_sm_ }\nvec2 GL_UV5_ATTRIBUTE() { return vec2(gl_MultiTexCoord4.xy)_sm_ }\nvec2 GL_UV6_ATTRIBUTE() { return vec2(gl_MultiTexCoord5.xy)_sm_ }\nvec4 GL_COLOR_ATTRIBUTE() { return gl_Color_sm_ }\nmat4 GL_VIEW_UNIFORM() { return gl_???_sm_ }\nmat4 GL_PROJECTION_UNIFORM() { return gl_??? _sm_ }\nmat4 GL_VIEWPROJECTION_UNIFORM() { return gl_???_sm_ }\nmat4 GL_WORLD_UNIFORM() { return gl_???_sm_ }\nmat4 GL_WORLDVIEW_UNIFORM() { return gl_???_sm_ }\nmat4 GL_WORLDVIEWPROJECTION_UNIFORM() { return gl_ModelViewProjectionMatrix_sm_ }\n//BABYLON-VERTEX-MACROS-END_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI know some GLSL guy look at that GLSL BLOCK and see those gl_??? and know exactly with those be... no problem for him. If you are that guy_co_ please help me _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"NasimiAsl","Date":"2016-10-22T19:03:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\thi\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthis is work flow for any 3d Engine when wanna render in ViewPort For each Model\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMODELING COORDINATES    &gt_sm_  WORLD COORDINATES   &gt_sm_  VIEW COORDINATES   &gt_sm_  VIEWPORT COORDINATES\n_lt_/p_gt_\n\n_lt_p_gt_\n\t&gt_sm_&gt_sm_ World coordinates are the global coordinate system that takes into account all objects in the scene.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t*** world  \n_lt_/p_gt_\n\n_lt_p_gt_\n\t&gt_sm_&gt_sm_ View coordinates are the coordinate system that incorporates a virtual camera_t_s view of the scene.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t*** View \n_lt_/p_gt_\n\n_lt_p_gt_\n\t&gt_sm_&gt_sm_ Viewport coordinates are the coordinate system that describes the camera projection for the scene (for example_co_ orthographic or perspective) and fits the projected scene into screen space. This projection takes the scene from a 3D to a 2D projection so that it can be displayed on the screen. The textured spinning box example uses a perspective projection_co_ which will make closer objects look larger than further ones_co_ just as in the real world.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t*** Projection\n_lt_/p_gt_\n\n_lt_p_gt_\n\t---------\n_lt_/p_gt_\n\n_lt_p_gt_\n\tworld &gt_sm_ View &gt_sm_ Projection\n_lt_/p_gt_\n\n_lt_p_gt_\n\tor Model  ( without Global Information about Transform Matrix of Model )  View Projection  _eq_&gt_sm_ View Projection \n_lt_/p_gt_\n\n_lt_p_gt_\n\twithout projection we have  (World  _co_ View _co_ WorldView )\n_lt_/p_gt_\n\n_lt_p_gt_\n\t  WorldViewProjection  _eq_ ProjectionMatrix*ModelViewMatrix\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MackeyK24","Date":"2016-10-23T17:31:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSo if you had to write the some of the macros above_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tGL_VIEW_UNIFORM for example_co_ what what the _t_gl_???_t_ calculations for that one (please include the formula_dd_ what does babylon js _t_view_t_ and so on need to be)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI AM SO SORRY TO KEEP ASKING. But please include the _t_code_t_ for each GL_XXX_UNIFORM (using GLSL attributes like _dd_ gl_ProjectionMatrix * gl_ModelViewMatrix)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MackeyK24","Date":"2016-10-23T19:57:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWilling to pay someone to finish these 5 little GLSL function (that are actually need to run in unity). I can send the payment immediately. I simply don_t_t know GLSL (All though i very much appreciate the pseudo code above... it does not tell me what the GL_VIEW_UNIFORM function should be doing to actually return the view... whether that is via already computed in in some built-in gl_ uniform or whether it should be computed_co_ and if so... Can please write the function to compute). I need these five computations to be written for me since i am not smart enough to figure out this low level GLSL matrix conversion or even know all the right terminology.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI mean in babylon js there is a _t_view_t_ and _t_projection_t_ and _t_viewProjection_t_ uniform.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBUT I SEARCHED ALL OVER the internet for GLSL stuff... AND NO WHERE IS THERE ANYTHING SIMPLY CALLED _t_view_t_ or _t_viewModel_t_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTHAT LEADS ME TO BELIEVE that programmer is supplying some calculation to the shader via a uniform (called _t_view_t_ and only specific to babylonjs)... So somewhere that has got to be something like_dd_ _t_view_t_ _eq_ something * something (or something like that...)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI AM GIVING UP ON THIS GLSL Stuff... But i will pay someone to simply write the 5 calculations listed above... Name your price... We can work it out...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can also reach me email_dd_ MackeyK24@gmail.com\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have paypal and can send dough immediately _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_mat4 GL_VIEW_UNIFORM() {\n  return _t_please write me!!!_t__sm_\n}\n\nmat4 GL_PROJECTION_UNIFORM() {\n  return _t_please write me!!!_t__sm_\n}\n\nmat4 GL_VIEWPROJECTION_UNIFORM() {\n  return _t_please write me!!!_t__sm_\n}\n\nmat4 GL_WORLD_UNIFORM() {\n  return _t_please write me!!!_t__sm_\n}\n\nmat4 GL_WORLDVIEW_UNIFORM() {\n  return _t_please write me!!!_t__sm_\n}\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tKeep in mind these are supposed to be the GLSL version of these babylon js function_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_uniform mat4 view_sm_\nmat4 GL_VIEW_UNIFORM() {\n  return view_sm_\n}\n\nuniform mat4 projection_sm_\nmat4 GL_PROJECTION_UNIFORM() {\n  return projection_sm_\n}\n\nuniform mat4 viewProjection_sm_\nmat4 GL_VIEWPROJECTION_UNIFORM() {\n  return viewProjection_sm_\n}\n\nuniform mat4 world_sm_\nmat4 GL_WORLD_UNIFORM() {\n  return world_sm_\n}\n\nuniform mat4 worldView_sm_\nmat4 GL_WORLDVIEW_UNIFORM() {\n return worldView_sm_\n}\n\nuniform mat4 worldViewProjection_sm_\nmat4 GL_WORLDVIEWPROJECTION_UNIFORM() {\n  return worldViewProjection_sm_\n}\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tAnd for reference this is what i got so far for GLSL Unity mode_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_vec4 GL_POSITION_ATTRIBUTE() { return gl_Vertex_sm_ }\nvec3 GL_NORMAL_ATTRIBUTE() { return gl_Normal_sm_ }\nvec2 GL_UV_ATTRIBUTE() { return vec2(gl_MultiTexCoord0.xy)_sm_ }\nvec2 GL_UV2_ATTRIBUTE() { return vec2(gl_MultiTexCoord1.xy)_sm_ }\nvec2 GL_UV3_ATTRIBUTE() { return vec2(gl_MultiTexCoord2.xy)_sm_ }\nvec2 GL_UV4_ATTRIBUTE() { return vec2(gl_MultiTexCoord3.xy)_sm_ }\nvec2 GL_UV5_ATTRIBUTE() { return vec2(gl_MultiTexCoord4.xy)_sm_ }\nvec2 GL_UV6_ATTRIBUTE() { return vec2(gl_MultiTexCoord5.xy)_sm_ }\nvec4 GL_COLOR_ATTRIBUTE() { return gl_Color_sm_ }\nmat4 GL_VIEW_UNIFORM() { return gl_???_sm_ }\nmat4 GL_PROJECTION_UNIFORM() { return gl_??? _sm_ }\nmat4 GL_VIEWPROJECTION_UNIFORM() { return gl_???_sm_ }\nmat4 GL_WORLD_UNIFORM() { return gl_???_sm_ }\nmat4 GL_WORLDVIEW_UNIFORM() { return gl_???_sm_ }\nmat4 GL_WORLDVIEWPROJECTION_UNIFORM() { return gl_ModelViewProjectionMatrix_sm_ }\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tSo i think i got all the conversion for the attributes... just need those five uniform functions WRITTEN FOR ME ... Thank Again ... I hope to do business with somebody _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tP.S.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSorry to flood the forums with this GLSL problems... If it don_t_t work out and i still can_t_t get anyone to write this computations... Ill just pull that feature from the Unity Exporter Tool For Babylons JS... Wont flood anymore... At least about this GLSL stuff.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nabroski","Date":"2016-10-24T02:19:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\thello why you don_t_t try to translate a simple shader form glsl to hlsl. i look at this code and already know_co_ this thing looks awesome_co_ but its also more advanced._lt_br /_gt__lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]