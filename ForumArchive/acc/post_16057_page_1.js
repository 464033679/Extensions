[{"Owner":"Sparky","Date":"2015-07-29T16:13:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I was just wondering how_co_ in theory_co_ you could incrementally load part of a scene that is changed in game and saved out? i.e. Load map_co_ build things_co_ save map. I_t_ve read the docs and seen that there is a way to do incremental loading_co_ but that is using a piece of software that I won_t_t have on the server. Can I save out the blocks of the scene into a certain json format?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks for your help_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2015-07-29T16:50:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_If by block you mean a mesh RaananW is working on saving a mesh or an array of meshes for BJS 2.2 you will then be able to use ImportMesh to load one or more of them at a time. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sparky","Date":"2015-07-30T08:45:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks. Yeh_co_ by block_co_ I mean a merged mesh. How would that work with incremental loading though? Do we know if will be able to save out to a .incremental.babylon or just a .babylon? I can_t_t seem to find any spec that states the difference between the two._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2015-07-31T09:18:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Have you read this topic _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/15024-how-to-displayrender-meshes-being-loaded-in-live/?hl_eq_incremental#entry85151_qt__gt_http_dd_//www.html5gamedevs.com/topic/15024-how-to-displayrender-meshes-being-loaded-in-live/?hl_eq_incremental#entry85151_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Which leads you to the tools to convert .babylon to .incremental.babylon?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sparky","Date":"2015-07-31T10:51:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yes_co_ I_t_ve read that one. It links to source code for what looks like a C# project. It doesn_t_t seem to have the spec for the .incremental.babylon files etc_co_ which would be helpful (unless I_t_ve missed something). I_t_m not going to have those incremental files pre-built_co_ so it doesn_t_t look like that will be useful. I could always fight my way thought and refactor the code_co_ but I was hoping that there was another option as I don_t_t have Visual Studio on my home dev machine._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sparky","Date":"2015-07-31T12:02:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Didn_t_t notice the bit about the GeometryID and the snippet about the incremental format in that thread. I_t_ll have a play with that _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-07-31T13:37:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi!_lt_/p_gt__lt_p_gt_Just a note_co_ incremental loading is triggered when the object is in the frustum (when it is seen by the camera). I wouldn_t_t use it to load data after_co_ for example_co_ a new level is supposed to be shown._lt_/p_gt__lt_p_gt_As John said_co_ you could use the ImportMesh to do that_co_ or the Append method of the loader (which loads cameras and lights as well as meshes)._lt_/p_gt__lt_p_gt_Incremental is automated_co_ as I understand_co_ you want to trigger it by yourself. Or am I way wrong here?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sparky","Date":"2015-07-31T16:38:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi Raanan_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks for your message. What I_t_m looking at is a shared map where users will have incrementally loaded sections_co_ so I wouldn_t_t be looking to trigger the incremental sections in that manner. But as the world is updated_co_ I_t_ll need to save out the updated sections for other users to load in._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I will also be looking to save out and load in sections during gameplay while they are in the frustum i.e. if another player updates that section of the map._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So from what you_t_re saying_co_ if I understand correctly_co_ is that I should use incremental loading in the first instance (loading sections of map as the player moves around)_co_ but importMesh in the second instance (loading in a section of map from the server that has been updated by another player). Does that make sense?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-07-31T17:44:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Control the loads manually using import mesh.... I do this with a game client I_t_m working on. I use PHP and Ajax to dynamically build maps based on databased coordinates etc. I think what you_t_re expecting incremental loading to be is not what you think._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You will need a server engine to coordinate all the individual player changes_co_ a heart beat from the clients to check for updates with the server_co_ and an AJAX process to call import mesh from the server_t_s list of new objects (or delete objects etc...)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I hope this makes since to you._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sparky","Date":"2015-08-03T16:27:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks Reddozen_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_That sounds pretty sensible. I_t_m just not sure what incremental loading is for then if I can_t_t use it for that. But if what you_t_re saying will work_co_ then that_t_s all good for me _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-08-03T16:39:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I pass it the babylon scene and then make my import mesh calls on it. Can make one to delete objects too... I have all my objects in specific babylon _qt_packages_qt_. All my trees etc are in one babylon file_co_ and map specific items are in another. You can use an array of items in import mesh to only load what you want out of the babylon file. I use this is organize my babylon files without having one for each object._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here_t_s the main file I have... (looks like I have some stray marks to clean out of the dynamic function)_lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.diviniaro.com/WGClient/Models/Loaders/map_loader.php_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.diviniaro.com/WGClient/Models/Loaders/map_loader.php_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This is when I call a specific area of the map..._lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.diviniaro.com/WGClient/Models/Loaders/map_loader.php?zone_eq_1&amp_sm_region_eq_1_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.diviniaro.com/WGClient/Models/Loaders/map_loader.php?zone_eq_1&amp_sm_region_eq_1_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sparky","Date":"2015-08-04T13:28:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Cheers red_co_ I_t_ll take a look at the code. Much appreciated!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-08-04T14:11:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Here is the actual page if this helps._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You_t_ll see that it_t_s a very short script_co_ but build dynamic load lists based on groups of 3D objects loaded from a database._lt_/p_gt__lt_p_gt_I group them by zone and region_co_ and in the future will include sub-zones. The goal of my setup is eventually micro-managing the environment to minimize the amount of objects loaded. There_t_s no reason to load everything in a house on the other side of town if you_t_re not even near the building._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_&lt_sm_?php\theader(_t_Content-type_dd_ text/javascript_t_)_sm_\tinclude(_qt_./database.php_qt_)_sm_\t$region_eq_$_GET[_t_region_t_]_sm_\t$zone_eq_$_GET[_t_zone_t_]_sm_\t$file_type _eq_ _qt_Raw_qt__sm_\t$home_path _eq_ _qt_.._qt__sm_\t//create an array for the LOD scripts\tunset($LOD)_sm_\tlist($res) _eq_ get_query(_qt_SELECT * FROM `lod_levels` ORDER BY `level`_sm__qt_)_sm_\twhile ($lodv _eq_ mysql_fetch_array($res))\t{\t\tif ($lodv[_t_level_t_]!_eq_1)\t\t{\t\t\t$LOD[$lodv[_t_level_t_]] _eq_ $LOD[$lodv[_t_level_t_]-1] ._qt__co_ { quality_dd_ _qt_. $lodv[_t_percent_t_] ._qt__co_ distance_dd_ _qt_. $lodv[_t_distance_t_] ._qt_ }_qt__sm_\t\t}\t\telse\t\t{\t\t\t$LOD[$lodv[_t_level_t_]] _eq_ _qt_{ quality_dd_ _qt_. $lodv[_t_percent_t_] ._qt__co_ distance_dd_ _qt_. $lodv[_t_distance_t_] ._qt_ }_qt__sm_ \t\t}\t}\techo _qt_var Prt_f01_map _eq_ function(scene_co_ offset_co_ DBObj){_qt__sm_\t$last_obj_eq__qt__qt__sm_\tlist($res) _eq_ get_query(_qt_SELECT * FROM `objects` LEFT JOIN `map_info` ON `objects`.`name`_eq_`map_info`.`name` WHERE `region`_eq__qt_. $region ._qt_ &amp_sm_&amp_sm_ `zone`_eq__qt_. $zone ._qt_ ORDER BY `package`_co_ `objects`.`name`_sm__qt_)_sm_\t\t$count_eq_0_sm_\twhile ($objects _eq_ mysql_fetch_array($res))\t{\t\tif ($last_package!_eq_$objects[_t_package_t_])\t\t{\t\t\tif ($last_package!_eq__qt__qt_)\t\t\t{\t\t\t\techo _qt_]_sm__qt__sm_\t\t\t\t$count_eq_0_sm_\t\t\t}\t\t\techo _qt_\t// package meshes\tvar package__qt_. $objects[_t_package_t_] ._qt_ _eq_ [_qt__sm_\t\t}\t\tif ($last_obj!_eq_$objects[_t_name_t_])\t\t{\t\t\tif ($count&gt_sm_0)\t\t\t{\t\t\t\techo _qt__co_ _qt__sm_\t\t\t}\t\t\techo _qt_\\_qt__qt_. $objects[_t_name_t_] ._qt_\\_qt__qt__sm_\t\t\t$count++_sm_\t\t}\t\t$last_package _eq_ $objects[_t_package_t_]_sm_\t\t$last_obj _eq_ $objects[_t_name_t_]_sm_\t}\techo _qt_]_sm__qt__sm_\t$last_package_eq__qt__qt__sm_\t$last_obj_eq__qt__qt__sm_\tmysql_data_seek($res_co_ 0)_sm_\twhile ($objects _eq_ mysql_fetch_array($res))\t{\t\tif ($last_package!_eq_$objects[_t_package_t_])\t\t{\t\t\tif ($last_package!_eq__qt__qt_)\t\t\t{\t\t\t\techo _qt_\t\t\t\t}\t\t\t}\t\t}\t)_sm__qt__sm_\t\t\t}\t\t\techo _qt_\tBABYLON.SceneLoader.ImportMesh(package__qt_. $objects[_t_package_t_] ._qt__co_ \\_qt__qt_. $home_path . $objects[_t_dir_t_] . $file_type ._qt_/_qt_. $objects[_t_package_t_] ._qt_/\\_qt__co_ \\_qt__qt_. $objects[_t_package_t_] ._qt_.babylon\\_qt__co_ scene_co_ \t\tfunction(mapZone_co_ particleSystems_co_ skeletons)\t\t{\t\t\tfor (var i_eq_0_sm_ i&lt_sm_mapZone.length_sm_ i++)\t\t\t{_qt__sm_\t\t}\t\tif ($last_obj!_eq_$objects[_t_name_t_])\t\t{\t\t\tif ($last_obj!_eq__qt__qt_ &amp_sm_&amp_sm_ $last_package_eq__eq_$objects[_t_package_t_])\t\t\t{\t\t\t\techo _qt_\t\t\t\t}_qt__sm_\t\t\t}\t\t\techo _qt_\t\t\t\tif (mapZone[i].name _eq__eq_ \\_qt__qt_. $objects[_t_name_t_] ._qt_\\_qt_)\t\t\t\t{\t\t\t\t\titem_used_eq_1_sm_\t\t\t\t\tvar _qt_. $objects[_t_name_t_] ._qt__inst _eq_ 0_sm_\t\t\t\t\tmapZone[i].visiblity_eq_true_sm_\t\t\t\t\tmapZone[i].isVisible_eq_true_sm_\t\t\t\t\tmapZone[i].name _eq_ \\_qt__qt_. $objects[_t_name_t_] ._qt_\\_qt__sm_\t\t\t\t\tmapZone[i].position _eq_ new BABYLON.Vector3(_qt_. $objects[_t_px_t_] ._qt__co_ _qt_. $objects[_t_py_t_] ._qt__co_ _qt_. $objects[_t_pz_t_] ._qt_)_sm_\t\t\t\t\tmapZone[i].scaling _eq_ new BABYLON.Vector3(_qt_. $objects[_t_sx_t_] ._qt__co_ _qt_. $objects[_t_sy_t_] ._qt__co_ _qt_. $objects[_t_sz_t_] ._qt_)_sm_\t\t\t\t\tmapZone[i].rotationQuaternion _eq_ null_sm_\t\t\t\t\tmapZone[i].rotation _eq_ new BABYLON.Vector3(_qt_. $objects[_t_rx_t_] ._qt__co_ _qt_. $objects[_t_ry_t_] ._qt__co_ _qt_. $objects[_t_rz_t_] ._qt_)_sm_\t\t\t\t\tmapZone[i].backFaceCulling _eq_ false_sm_\t\t\t\t\tmapZone[i].isPickable _eq_ true_sm_\t\t\t\t\tDBObj[mapZone[i].name] _eq_ {\t\t\t\t\t\tID_dd_ _qt_. $objects[_t_object_id_t_] ._qt__co_\t\t\t\t\t\tName_dd_  \\_qt__qt_. $objects[_t_name_t_] ._qt_\\_qt__co_\t\t\t\t\t\tpx_dd_ \\_qt__qt_. $objects[_t_px_t_] ._qt_\\_qt__co_\t\t\t\t\t\tpy_dd_ \\_qt__qt_. $objects[_t_py_t_] ._qt_\\_qt__co_\t\t\t\t\t\tpz_dd_ \\_qt__qt_. $objects[_t_pz_t_] ._qt_\\_qt__co_\t\t\t\t\t\trx_dd_ \\_qt__qt_. $objects[_t_rx_t_] ._qt_\\_qt__co_\t\t\t\t\t\try_dd_ \\_qt__qt_. $objects[_t_ry_t_] ._qt_\\_qt__co_\t\t\t\t\t\trz_dd_ \\_qt__qt_. $objects[_t_rz_t_] ._qt_\\_qt__co_\t\t\t\t\t\tsx_dd_ \\_qt__qt_. $objects[_t_sx_t_] ._qt_\\_qt__co_\t\t\t\t\t\tsy_dd_ \\_qt__qt_. $objects[_t_sy_t_] ._qt_\\_qt__co_\t\t\t\t\t\tsz_dd_ \\_qt__qt_. $objects[_t_sz_t_] ._qt_\\_qt_\t\t\t\t\t}_sm__qt__sm_\t\t\tif ($objects[_t_lod_t_]!_eq_0)\t\t\t{\t\t\t\techo _qt_\t\t\t\t\tmapZone[i].simplify([_qt_. $LOD[$objects[_t_lod_t_]] ._qt_]_co_ \t\t\t\t\t\ttrue_co_ BABYLON.SimplificationType.QUADRATIC_co_ function() {\t\t\t\t\t\t\t// we_t_re not using the callback function for now...but it_t_s here\t\t\t\t\t\t})_sm__qt__sm_\t\t\t}\t\t\techo _qt_\t\t\t\t\t////////////////////////////////////////////////////////\t\t\t\t\t// Instance Copies\t\t\t\t\t////////////////////////////////////////////////////////_qt__sm_\t\t}\t\telse\t\t{\t\t\techo _qt_\t\t\t\t\t_qt_. $objects[_t_name_t_] ._qt__inst++_sm_\t\t\t\t\tobjInstance _eq_ mapZone[i].createInstance(\\_qt__qt_. $objects[_t_name_t_] ._qt__inst_\\_qt_+ _qt_. $objects[_t_name_t_] ._qt__inst +\\_qt_\\_qt_)_sm_\t\t\t\t\tobjInstance.visible _eq_ true_sm_\t\t\t\t\tobjInstance.isVisible _eq_ true_sm_\t\t\t\t\tobjInstance.position _eq_ new BABYLON.Vector3(_qt_. $objects[_t_px_t_] ._qt__co_ _qt_. $objects[_t_py_t_] ._qt__co_ _qt_. $objects[_t_pz_t_] ._qt_)_sm_\t\t\t\t\tobjInstance.scaling _eq_ new BABYLON.Vector3(_qt_. $objects[_t_sx_t_] ._qt__co_ _qt_. $objects[_t_sy_t_] ._qt__co_ _qt_. $objects[_t_sz_t_] ._qt_)_sm_\t\t\t\t\tobjInstance.rotationQuaternion _eq_ null_sm_\t\t\t\t\tobjInstance.rotation _eq_ new BABYLON.Vector3(_qt_. $objects[_t_rx_t_] ._qt__co_ _qt_. $objects[_t_ry_t_] ._qt__co_ _qt_. $objects[_t_rz_t_] ._qt_)_sm_\t\t\t\t\tobjInstance.backFaceCulling _eq_ false_sm_\t\t\t\t\tobjInstance.isPickable _eq_ true_sm_\t\t\t\t\tDBObj[objInstance.name] _eq_ {\t\t\t\t\t\tID_dd_ _qt_. $objects[_t_object_id_t_] ._qt__co_\t\t\t\t\t\tName_dd_  \\_qt__qt_. $objects[_t_name_t_] ._qt_\\_qt__co_\t\t\t\t\t\tpx_dd_ \\_qt__qt_. $objects[_t_px_t_] ._qt_\\_qt__co_\t\t\t\t\t\tpy_dd_ \\_qt__qt_. $objects[_t_py_t_] ._qt_\\_qt__co_\t\t\t\t\t\tpz_dd_ \\_qt__qt_. $objects[_t_pz_t_] ._qt_\\_qt__co_\t\t\t\t\t\trx_dd_ \\_qt__qt_. $objects[_t_rx_t_] ._qt_\\_qt__co_\t\t\t\t\t\try_dd_ \\_qt__qt_. $objects[_t_ry_t_] ._qt_\\_qt__co_\t\t\t\t\t\trz_dd_ \\_qt__qt_. $objects[_t_rz_t_] ._qt_\\_qt__co_\t\t\t\t\t\tsx_dd_ \\_qt__qt_. $objects[_t_sx_t_] ._qt_\\_qt__co_\t\t\t\t\t\tsy_dd_ \\_qt__qt_. $objects[_t_sy_t_] ._qt_\\_qt__co_\t\t\t\t\t\tsz_dd_ \\_qt__qt_. $objects[_t_sz_t_] ._qt_\\_qt_\t\t\t\t\t}_sm__qt__sm_\t\t}\t\t$last_package_eq_$objects[_t_package_t_]_sm_\t\t$last_obj_eq_$objects[_t_name_t_]_sm_\t}\techo _qt_\t\t\t\t}\t\t\t}\t\t}\t)_sm_}_qt__sm_?&gt_sm_ _lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sparky","Date":"2015-08-05T08:36:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks Red_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What I had been looking at (from another forum members suggestion) was generating the map and then sectioning it off into merged meshes. Once I have the merged meshes_co_ I_t_ll save those out so I can just load a section of map (terrain_co_ buildings and any other static elements) as required once visible to the user. If I_t_m understanding you correctly_co_ your approach is to save out each map square/building/whatever else and load in a regions worth when required_co_ which you_t_ll then merge once it_t_s all client side_co_ is that right? Your approach would certainly be easier to manage across multiple users_co_ but more work for babylon (as you_t_d be repeatedly merging the meshes. Not sure which is the best way to go._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-08-05T13:39:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I don_t_t merge meshes. They_t_re still individual objects. I want to avoid this when I can so that maps can be manipulated in real time by an admin_co_ or for an event._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_My planned structure..._lt_/p_gt__lt_p_gt_Skybox - always loaded_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Zone - my local segment of the world map with landmarks and terrain_lt_/p_gt__lt_p_gt_Terrain - always loaded with LOD_lt_/p_gt__lt_p_gt_Landmark objects - A ridiculous view distance and LOD_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Region - subsets of the zone. These have the buildings_co_ trees_co_ and other map fillers that I only want visible from a moderate view range._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Rub-region - these are things like building interiors or dungeon crawler rooms. I don_t_t want to render every cup_co_ plate_co_ and interior house detail if you_t_re not inside the house_co_ nor to I want to render every room of a large castle etc. From inside this area_co_ I can also shut off all the other outside objects because you can_t_t see the sky or buildings etc from inside a building._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sparky","Date":"2015-08-05T14:05:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ah ok_co_ are you building something first person then? I_t_m looking at at RTS_co_ so could end up with a lot of meshes_co_ which from what i_t_ve read_co_ can be problematic and cause performance issues_co_ hence the merging. You can get around the manipulation by keeping data and un-merging when needed in order to manipulate_co_ then re-merge. These evens would be reasonably rare for me such as building something_co_ so I wouldn_t_t need it to be super-real-time as you might with say_co_ picking up a cup._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-08-05T15:48:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m building an MMO environment. Things will added or removed from the render list based on distances to target and movement speed of the character. I_t_m sure I_t_ll get into merging things once I_t_ve exhausted everything else. I use a lot of instancing though._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]