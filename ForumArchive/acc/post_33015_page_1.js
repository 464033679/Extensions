[{"Owner":"sable","Date":"2017-09-20T22:24:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_ve just been finding a way to test if the pointer intersects with a bounding box of a mesh in the scene_co_ and have come up with _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#T1PZSJ%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#T1PZSJ#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve a couple of questions though.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFirst_co_ is there a more obvious way to do this that would tie in with the action manager?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSecond_co_ why is ray.intersectsBox() and similar methods dealing with mesh local space and not world space (i.e. it_t_s internally using minimum and maximum as opposed to minimumWorld and maximumWorld). There_t_s likely a good reason_co_ but I couldn_t_t find anything that even references that before using these methods a transform on the ray would be needed (to get it from world to mesh local space)_co_ besides in one post _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/27425-problem-with-babylonray/?do_eq_findComment&amp_sm_comment_eq_157576_qt_ rel_eq__qt__qt__gt_here_lt_/a_gt_.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-09-21T16:50:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey_co_ you can just use the onPointerDown_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_    scene.onPointerDown _eq_ (e_co_ pickResult) _eq_&gt_sm_ {\n        if (pickResult.hit) {\n            // Check pickResult.mesh _eq__eq__eq_ myMesh\n\t\t}\n    }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tFor your second question_dd_ I_t_m using local world because if you want to get the picked point you won_t_t need to transform ALL vertices to world space. It is faster to move the ray to local space instead of moving all vertices to world _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"sable","Date":"2017-09-21T20:26:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey Delta_co_ thanks for your reply.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI was specifically looking for a way to pick using the bounding box_co_ as the mesh I_t_m wanting to pick has holes in it. I want the whole area to be pickable_co_ and using the bounding box seemed like a good way to achieve this (while also getting a nice buffer area for the pick).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for the explanation regarding local space_co_ that does make sense.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-09-22T17:44:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI get it..you can still use the scene.pick with fastCheck _eq_ true (_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/3.0/scene#pick-x-y-predicate-fastcheck-camera-rarr-pickinginfo-classes-3-0-pickinginfo-_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/classes/3.0/scene#pick-x-y-predicate-fastcheck-camera-rarr-pickinginfo-classes-3-0-pickinginfo-_lt_/a_gt_)\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"sable","Date":"2017-09-24T20:33:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThat doesn_t_t seem to actually test using the bounding box_co_ but rather just returns the first positive result (despite what the documentation there says. The mesh.intersects documentation for fastcheck _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/3.0/abstractmesh#intersects-ray-fastcheck-rarr-pickinginfo-classes-3-0-pickinginfo-_qt_ rel_eq__qt_external nofollow_qt__gt_here_lt_/a_gt_ seems more correct).\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-09-24T20:37:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tHi Sable_co_ you can set a predicate and make sure it only picks that what you want it to pick. Does this work in your usecase?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"sable","Date":"2017-09-24T22:56:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/?do_eq_hovercard_qt_ data-mentionid_eq__qt_10310_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/_qt_ rel_eq__qt__qt__gt_@RaananW_lt_/a_gt_ For my use case that doesn_t_t work_co_ as it_t_s not about picking a certain mesh over other meshes_co_ but rather that I want to be able to pick the mesh by clicking anywhere in the encompassing area_co_ even where there are holes (such as the center of a torus _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#T1PZSJ%235_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#T1PZSJ#5_lt_/a_gt_)_lt_/span_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-09-25T08:25:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIMO_co_ you will need to intelligently use the predicate to limit the intersecting meshes and use fast check for the best performance.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI remember once suggesting a bounding-box/sphere only ray pick_co_ but it had an (obvious) problem getting the exact point of the intersection. It shouldn_t_t be too heard to implement thou_co_ if this is enough for you.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]