[{"Owner":"willemmulder","Date":"2016-01-18T07:17:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFor a game_co_ I need many AI units to calculate whether they _t_see_t_ each other or not. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAfter some googling_co_ I think I might have to go with raycasting and do something like this_dd_ _lt_a href_eq__qt_http_dd_//www.redblobgames.com/articles/visibility/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.redblobgames.com/articles/visibility/_lt_/a_gt_ (great demo BTW!) or even simply cast a ray from every unit to every other unit and check if there_t_s nothing in-between..?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHas somebody already done something similar for babylonjs? Or should I work with a light_co_ let Babylonjs calculate it_t_s shadowmap or something like that?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2016-01-18T08:23:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt would be easier to work with raycast. It_t_s very easy to do it wih Babylon (of course _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt_ )\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust create a Ray_dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/2.2/Ray_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/classes/2.2/Ray_lt_/a_gt__lt_br_gt_\n\tand use the method scene.pickWithRay _dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/2.2/Scene#pickwithray-ray-predicate-fastcheck-rarr-pickinginfo-classes-2-2-pickinginfo-_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/classes/2.2/Scene#pickwithray-ray-predicate-fastcheck-rarr-pickinginfo-classes-2-2-pickinginfo-_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can find some examples here_dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/playground?q_eq_pickwithray_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/playground?q_eq_pickwithray_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"willemmulder","Date":"2016-01-18T12:31:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks_co_ that worked!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOne small additional question_dd_ is there an option to do raycasting and get _lt_strong_gt_every _lt_/strong_gt_colliding object on that ray_co_ so not just only the closest one?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2016-01-18T14:26:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI dont think it exists as is... A simple way to do this would be to cast the ray each time an object is found_co_ while an obstacle is found.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]