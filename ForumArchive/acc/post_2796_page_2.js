[{"Owner":"gwenael","Date":"2014-05-12T22:10:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_38054_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_2796_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1399916760_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_I like the idea of storing worldMatrix in the node. BUT what kind of matrix would you store for an hemispheric light or an oculus camera? _lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I don_t_t know much about your code for them but I would say I would store _worldMatrix for a hemispheric light which is already an attribute of HesmisphericLight_co_ and couldn_t_t the inverse of _currentViewMatrix be stored for OcculusOrientedCamera? An OcculusStereoCamera could be a basic Node with two child OcculusOrientedCamera. Actually this is another subject but that would be nice to switch a camera from a type to another one. In this way we could use a camera_co_ then use it as an anaglyph camera or an occulus stereo camera. There would be no need to have AnaglyphFreeCamera and AnaglyphArcRotateCamera. _t_Anaglyph_t_ would be the current behavior for the camera associated to the _t_ArcRotate_t_ or _t_Free_t_ behavior. Something closer to components than inheriting in fact_co_ of course when behaviors are compatible._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-05-12T22:30:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_And which be in turn less easy to use for developers _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_We tried to use the component way for oculus camera_dd_ the result is a mess of unmaintainable code that I will have to fix one day. I do not want to bend the code just for _qt_the beauty of the code_qt_._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Look at the code of Anaglyph cameras against oculus cameras_dd_ They both do the SAME thing at the end of the day. The component way is not always a good idea._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-05-13T07:33:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_OK_co_ I will have to trust you on this one. I would have noticed it by myself but certainly too late._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Anyway that was a side topic. What about hierarchy and transforms in Node_co_ would there be too many side effects?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I see advantages but I don_t_t know enough the whole project to see inconvenients. One of the advantage would be to have nodes that could be used as parents to _t_group_t_ nodes (other groups or meshes/lights/cameras) together. A Mesh would have to have a geometry (could be not loaded though) and thus there wouldn_t_t be special cases inside of Mesh for the instances which don_t_t have vertices._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-05-13T17:02:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Let try to mock it up _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]