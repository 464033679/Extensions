[{"Owner":"Temechon","Date":"2013-11-17T12:58:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p style_eq__qt_font-size_dd_14px_sm__qt__gt_Hello guys_co_ _lt_/p_gt__lt_br_gt__lt_p style_eq__qt_font-size_dd_14px_sm__qt__gt_ _lt_/p_gt__lt_br_gt__lt_p style_eq__qt_font-size_dd_14px_sm__qt__gt_I_t_m currently workng on several small thing with our favorite 3D engine_co_ and one of these things is the mesh drag _t_n drop._lt_/p_gt__lt_br_gt__lt_p style_eq__qt_font-size_dd_14px_sm__qt__gt_I know this feature is in the babylon roundmap_co_ but I will need it very soon for a bigger project._lt_/p_gt__lt_br_gt__lt_p style_eq__qt_font-size_dd_14px_sm__qt__gt_ _lt_/p_gt__lt_br_gt__lt_p style_eq__qt_font-size_dd_14px_sm__qt__gt_Today_co_ I have a drag and drop that is currently working in 2 dimensions (on X and Y axis). I use the scene.pick method to get the picked mesh._lt_/p_gt__lt_br_gt__lt_p style_eq__qt_font-size_dd_14px_sm__qt__gt_Here is the code _dd_ _lt_/p_gt__lt_br_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt__lt_br_gt_\nvar pickedMesh_sm__lt_br_gt_\n// Add event listener_lt_br_gt_\nwindow.addEventListener(_qt_click_qt__co_ function(evt){_lt_br_gt_\n\tvar pick _eq_ scene.pick(evt.clientX_co_ evt.clientY)_sm__lt_br_gt_\n\tif (pick.pickedMesh) {_lt_br_gt_\n\t\tpickedMesh _eq_ pick.pickedMesh_sm__lt_br_gt_\n\t}_lt_br_gt_\n})_sm__lt_br_gt__lt_br_gt_\nwindow.addEventListener(_qt_mousemove_qt__co_ function(evt) {_lt_br_gt_\n\tif (pickedMesh){_lt_br_gt_\n\t\tvar pick _eq_ scene.pick(evt.clientX_co_ evt.clientY)_sm__lt_br_gt_\n\t\tpickedMesh.position.x _eq_ pick.pickedPoint.x_sm__lt_br_gt_\n\t\tpickedMesh.position.y _eq_ pick.pickedPoint.y_sm__lt_br_gt_\n\t}_lt_br_gt_\n})_sm__lt_/pre_gt__lt_br_gt__lt_p style_eq__qt_font-size_dd_14px_sm__qt__gt_However_co_ it is not working as intended _dd_ if the mouse is out of the selected mesh_co_ then pick.pickedPoint is null_co_ and the box position is not updated._lt_/p_gt__lt_br_gt__lt_p style_eq__qt_font-size_dd_14px_sm__qt__gt_ _lt_/p_gt__lt_br_gt__lt_p style_eq__qt_font-size_dd_14px_sm__qt__gt_What I would like is a way to convert the mouse coordinates to scene coordinates. I tried to look at the class BABYLON.Ray_co_ but I need a world matrix. In the method scene.pick_co_ the mesh world matrix is used_co_ but obviously i cannot use it (as my scene can be empty)._lt_/p_gt__lt_br_gt__lt_p style_eq__qt_font-size_dd_14px_sm__qt__gt_Is there a way to create a _qt_scene.getWorldMatrix_qt_ in BABYLON ? What is the best way to do it ?_lt_/p_gt__lt_br_gt__lt_p style_eq__qt_font-size_dd_14px_sm__qt__gt_ _lt_/p_gt__lt_br_gt__lt_p style_eq__qt_font-size_dd_14px_sm__qt__gt_Thank you for your help !_lt_/p_gt__lt_br_gt__lt_p style_eq__qt_font-size_dd_14px_sm__qt__gt_ _lt_/p_gt__lt_br_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2013-11-18T03:14:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Just use BABYLON.Matrix.Identity()_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2013-11-18T07:58:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi Delta_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks for your answer._lt_/p_gt__lt_p_gt_I tried to use the method _lt_strong_gt_scene.createPickingRay(x_co_ y)_lt_/strong_gt__co_ with _lt_strong_gt_x_lt_/strong_gt_ and _lt_strong_gt_y_lt_/strong_gt_ my mouse coordinates. In this method_co_ the identity matrix is used when _lt_strong_gt_world _lt_/strong_gt_is not defined_co_ so I guess I was using it without declaring it explicitly._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_However_co_ it does not work _dd_ the origin of the ray is always something like (0_co_9_co_0). (My camera is in (0_co_10_co_0) and look at (0_co_0_co_0) )._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2013-11-18T17:31:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It should be ok with (0_co_ 9_co_0) because the camera has a minZ offset value_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2013-11-19T16:51:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thank you Delta_co_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I used another solution _dd_ I created a pseudo infinite ground. This way_co_ scene.pick.pickedPoint is never null. I know this does not answer the question correctly_co_ but it do the trick._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2013-11-19T16:56:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_If this works this is good_dd_)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]