[{"Owner":"Wingnut","Date":"2016-08-26T15:37:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks p8.  As long as TD is happy with that solution_co_ then I_t_m happy_co_ too.  Rock on!  My method has more problems than I thought_co_ anyway. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#21TQJT%2345_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#21TQJT#45_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI removed all the gaps in the tiles_co_ and made another ground (blue) that is not tiled (uses the whole image instead of portions)... and as you can see_co_ tile hm_3x3 is perfect... good z-fighting... indicates a one-to-one match.  But the rest of the tiled ground doesn_t_t match the non-tiled full ground.  I was hoping to _qt_borrow_qt_ a copy of the normals from the full ground... to chop-up and apply to the tile normals.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t*sigh*.  Oh well_co_ I tried.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  Failing is part of the fun.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-08-26T15:45:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI think with what you were doing it would be smarter to combine all the meshs into a new buffer optimize it and recalc its normals then dispose all the old ones.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"TheDude","Date":"2016-08-26T16:54:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/?do_eq_hovercard_qt_ data-mentionid_eq__qt_19199_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/_qt_ rel_eq__qt__qt__gt_@Pryme8_lt_/a_gt_ So I_t_m right in saying that it will be editable as in digging/mining? If so I_t_ll be happy to see a demo some point in the future. In the mean time I will work on other parts of the game like building and rockets and stuff.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-08-26T17:51:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYes_co_ the land will be editable (to and extent) and you will be able to define custom regions in the editor as well when you are building it.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"TheDude","Date":"2016-08-26T18:04:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/?do_eq_hovercard_qt_ data-mentionid_eq__qt_19199_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/_qt_ rel_eq__qt__qt__gt_@Pryme8_lt_/a_gt_ that is awesome (and also my end goal too)!\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"TheDude","Date":"2016-08-26T20:11:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tIn case anyone would like to see a demo of what project I_t_ll include this is_co_ view it _lt_a href_eq__qt_http_dd_//spacecraft.gamescrafter.com_qt_ rel_eq__qt_external nofollow_qt__gt_here _lt_/a_gt_ Maybe someone might find some useful code in there for one of the projects there working on who knows? Controls_dd_ arrows/WSAD to move. Left click to place block/ right click to remove block. Tab to toggle between mining and placing blocks and same controls as block placing for mining.Going to work on ui.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-08-26T20:38:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\twhy are you  not doing a voxel system?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"TheDude","Date":"2016-08-26T20:44:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/?do_eq_hovercard_qt_ data-mentionid_eq__qt_19199_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/_qt_ rel_eq__qt__qt__gt_@Pryme8_lt_/a_gt_ is that more efficient or easier?_co_ because i_t_ll look into it if it is.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-08-26T20:46:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYes _lt_img alt_eq__qt_^_^_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_happy.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/happy@2x.png 2x_qt_ title_eq__qt_^_^_qt_ width_eq__qt_20_qt_ /_gt_ this will be ideal for what you are trying to do._lt_br /_gt__lt_br /_gt__lt_a href_eq__qt_https_dd_//sites.google.com/site/letsmakeavoxelengine/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//sites.google.com/site/letsmakeavoxelengine/_lt_/a_gt__lt_br /_gt_\n\tthis is easily transferred to BJS_co_ a lot you can ignore. but it gives you the basic concept.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"TheDude","Date":"2016-08-27T16:02:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/?do_eq_hovercard_qt_ data-mentionid_eq__qt_19199_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/_qt_ rel_eq__qt__qt__gt_@Pryme8_lt_/a_gt_ So you would create a mesh out of cubes? I saw a babylon.js voxel mesher that could be edited to support textures and other stuff_co_ but if I can get away with it I would use do it the way that WorldMonger does mining.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-08-27T16:25:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYes_co_ and your not going to render them all at once.  You also need to turn them into a single buffer once you know their locations before you start drawing them to the screen.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"TheDude","Date":"2016-08-29T15:10:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/?do_eq_hovercard_qt_ data-mentionid_eq__qt_19199_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/_qt_ rel_eq__qt__qt__gt_@Pryme8_lt_/a_gt_ I will look into adding new features to the babylon.js voxel mesher I found but I_t_m back off to school so don_t_t know how much free time I_t_ll have.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"TheDude","Date":"2016-09-02T14:47:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI_t_m keeping this forum open though.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"TheDude","Date":"2016-09-14T20:33:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_ Sorry there_t_s been no updates. Just had an idea though. If you forget that there is normal issues fro now_co_ but what is when you are mining and your are close to the edges of a chunk you could possibly merge them together and do mining like that and then you could delete that mesh on mouse up and update the vertices of that other to meshes? Maybe if there was an array of edge of chunk vertices to check if you are near the edge and then if (vetices_lt_em_gt_ _eq__eq_ edge_lt_/em_gt__lt_em_gt__lt_em_gt_) then merge_co_ else dont merge? It might by inefficient for doing LOD every frame but maybe every few frames or not at all for now?Like this idea or is there other ideas you might have. \n_lt_/em_gt__lt_/em_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-09-15T08:29:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi TD.  I bailed on this project.  I thought _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/?do_eq_hovercard_qt_ data-mentionid_eq__qt_19199_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/_qt_ rel_eq__qt__qt__gt_@Pryme8_lt_/a_gt_ had you taken care-of... with his _qt_Teriable_qt_ thing.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway_co_ I have no ideas about _qt_mining_qt_... nor about mining edges.  Sorry. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you remember from earlier_co_ I suggested that you switch to _qt_mining mode_qt_ and create a brand new chunk of ground (essentially_co_ a new scene).  Do your mining on that... using a single ground.  Then_co_ when exiting mining mode_co_ update the big terrain... based upon the _qt_mining terrain_qt_.  If_co_ by chance_co_ the mining was happening at a place where 4 tiles intersected_co_ then you would need to update 4 tiles_co_ upon exiting mining mode.  No merging involved.  Merging defeats the purpose of tiling.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI can_t_t see why you would want to delete a mesh/tile during/after mining.  LOD is not applicable when user is near the mine location.  All terrain mesh should always be ON and at full rez... in a certain diameter around the user location_co_ I would think.  LOD is for far-away things.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNope_co_ I have no idea what you and Pryme8 have going_co_ now.  I didn_t_t get far enough on my version... to even consider _qt_mining_qt_.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-09-15T14:34:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tWhat you want to do is keep the chunk as a solid mesh and then when a user interacts with it have it calculate that chunk as spectate blocks and identify which ones need to be active_co_ which would be the ones touching the box the user interacted with_co_. You then run what ever calculations on the voxels and after a certain amount of time at rest or when the user is at a certain distance re unify the voxels into a single draw.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"TheDude","Date":"2016-09-15T15:16:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_ fair enough and _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/?do_eq_hovercard_qt_ data-mentionid_eq__qt_19199_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/_qt_ rel_eq__qt__qt__gt_@Pryme8_lt_/a_gt_ I_t_ll look into it. \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"kohai","Date":"2016-09-27T12:21:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi all ... I was just searching the forum for some terrain matters and finally found this thread.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/?do_eq_hovercard_qt_ data-mentionid_eq__qt_19199_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/_qt_ rel_eq__qt__qt__gt_@Pryme8_lt_/a_gt_ do you happen to have TERIABLE infinite version working ? your example seems to be broken ( only flat terrain ).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNot looking for some LOD feature_co_ only needs a low-poly version ( kinda like this _dd_ _lt_a href_eq__qt_https_dd_//github.com/dlubarov/webgl-infinite-terrain-demo_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/dlubarov/webgl-infinite-terrain-demo_lt_/a_gt_ )\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThx a bunch\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-09-27T16:18:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tUm easy answer No_co_ locally yes_co_ full answer which would be more relevant to you_dd_  Ok Infinity was just a prototype to benchmark and test different ways of spawing the blocks to a infinite terrain the only thing it is missing is the displacement of the plane meshes which could be easily incorporated._lt_br /_gt__lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_   \n     \n      var canvas _eq_ document.querySelector(_qt_#renderCanvas_qt_)_sm_\n\t  var engine _eq_ new BABYLON.Engine(canvas_co_ true)_sm_\n\n      var createScene _eq_ function () {\n         \n         var scene _eq_ new BABYLON.Scene(engine)_sm_\n        \n         scene.clearColor _eq_ new BABYLON.Color3(0.2_co_ 0.2_co_ 0.3)_sm_\n        \n         var camera _eq_ new BABYLON.FreeCamera(_qt_camera1_qt__co_ new BABYLON.Vector3(0_co_ 5_co_ -10)_co_ scene)_sm_\n         camera.setTarget(BABYLON.Vector3.Zero())_sm_\n         camera.attachControl(canvas_co_ false)_sm_\n      \n         var light _eq_ new BABYLON.HemisphericLight(_qt_light1_qt__co_ new BABYLON.Vector3(0.15_co_ 50_co_ 0.5)_co_ scene)_sm_\n         light.intensity _eq_ .5_sm_\n\t\t \n\t\t \n\t\t \n\t\t \t//SHADERS?\n\t\tBABYLON.Effect.ShadersStore[_qt_teriableBasicVertexShader_qt_]_eq_ _qt_precision highp float_sm_\\r\\n_qt_+\n\n                _qt_// Attributes\\r\\n_qt_+\n                _qt_attribute vec3 position_sm_\\r\\n_qt_+\n                _qt_attribute vec3 normal_sm_\\r\\n_qt_+\n                _qt_attribute vec2 uv_sm_\\r\\n_qt_+\n\n                _qt_// Uniforms\\r\\n_qt_+\n                _qt_uniform mat4 world_sm_\\r\\n_qt_+\n                _qt_uniform mat4 worldViewProjection_sm_\\r\\n_qt_+\n\n                _qt_// Varying\\r\\n_qt_+\n                _qt_varying vec3 vPositionW_sm_\\r\\n_qt_+\n                _qt_varying vec3 vNormalW_sm_\\r\\n_qt_+\n                _qt_varying vec2 vUV_sm_\\r\\n_qt_+\n\n                _qt_void main(void) {\\r\\n_qt_+\n                _qt_    vec4 outPosition _eq_ worldViewProjection * vec4(position_co_ 1.0)_sm_\\r\\n_qt_+\n                _qt_    gl_Position _eq_ outPosition_sm_\\r\\n_qt_+\n                _qt_    \\r\\n_qt_+\n                _qt_    vPositionW _eq_ vec3(world * vec4(position_co_ 1.0))_sm_\\r\\n_qt_+\n                _qt_    vNormalW _eq_ normalize(vec3(world * vec4(normal_co_ 0.0)))_sm_\\r\\n_qt_+\n                _qt_    \\r\\n_qt_+\n                _qt_    vUV _eq_ uv_sm_\\r\\n_qt_+\n                _qt_}\\r\\n_qt__sm_\n\t\t\t\t\n\t\t\t\tBABYLON.Effect.ShadersStore[_qt_teriableBasicFragmentShader_qt_]_eq_                         _qt_precision highp float_sm_\\r\\n_qt_+\n\n                _qt_// Lights\\r\\n_qt_+\n                _qt_varying vec3 vPositionW_sm_\\r\\n_qt_+\n                _qt_varying vec3 vNormalW_sm_\\r\\n_qt_+\n                _qt_varying vec2 vUV_sm_\\r\\n_qt_+\n\n                _qt_// Refs\\r\\n_qt_+\n                _qt_uniform sampler2D textureBank_sm_\\r\\n_qt_+\n                _qt_const vec3 up _eq_ vec3(0.0_co_1.0_co_0.0)_sm_\\r\\n_qt_+\n\n                _qt_float rangeV(float v_co_ float x_co_ float y){\\r\\n_qt_+\n                _qt_    return 1.0-max(0.0 _co_ min(1.0 _co_ (v - y)/(y - x)))_sm_\\r\\n_qt_+\n                _qt_}\\r\\n_qt_+\n                _qt_//http_dd_//stackoverflow.com/questions/4200224/random-noise-functions-for-glsl\\r\\n_qt_+\n                _qt_float snoise(vec2 co)\\r\\n_qt_+\n                _qt_{\\r\\n_qt_+\n                _qt_    return fract(sin(dot(co.xy _co_vec2(12.9898_co_78.233))) * 43758.5453)_sm_\\r\\n_qt_+\n                _qt_}\\r\\n_qt_+\n\n                _qt_void main(void) {\\r\\n_qt_+\n                _qt_   vec2 r[4]_sm_//RANGES\\r\\n_qt_+\n                _qt_   r[0] _eq_ vec2(-50.0_co_-30.0)_sm_\\r\\n_qt_+\n                _qt_   r[1] _eq_ vec2(-30.0_co_10.0)_sm_\\r\\n_qt_+\n                _qt_   r[2] _eq_ vec2(10.0_co_45.0)_sm_\\r\\n_qt_+\n                _qt_   r[3] _eq_ vec2(45.0_co_50.0)_sm_\\r\\n_qt_+\n                _qt_   vec2 aR[4]_sm_\\r\\n_qt_+\n                _qt_   aR[0] _eq_ vec2(0.0_co_0.35)_sm_\\r\\n_qt_+\n                _qt_   aR[1] _eq_ vec2(0.35_co_0.5)_sm_\\r\\n_qt_+\n                _qt_   aR[2] _eq_ vec2(0.5_co_0.98)_sm_\\r\\n_qt_+\n                _qt_   aR[3] _eq_ vec2(0.98_co_1.0)_sm_\\r\\n_qt_+\n                _qt_   \\r\\n_qt_+\n                _qt_   float angle _eq_ max(0._co_ dot(vNormalW_co_ up))_sm_//ANGLE 0_dd_1\\r\\n_qt_+\n                _qt_   float el _eq_ vPositionW.y_sm_ //ELEVATION\\r\\n_qt_+\n                _qt_   /*vec3 color_sm_\\r\\n_qt_+\n                _qt_   if(angle &gt_sm__eq_ 0.0 &amp_sm_&amp_sm_ angle &lt_sm__eq_ 0.35 ){\\r\\n_qt_+\n                _qt_     color _eq_ vec3(angle_co_1._co_1.)_sm_ //BASE COLOR\\r\\n_qt_+\n                _qt_   }else if(angle &gt_sm_ 0.35 &amp_sm_&amp_sm_ angle &lt_sm__eq_ 0.5 ){\\r\\n_qt_+\n                _qt_      color _eq_ vec3(1.0_co_angle_co_1.)_sm_ //BASE COLOR\\r\\n_qt_+\n                _qt_   }else if(angle _eq__eq_ 1.0){\\r\\n_qt_+\n                _qt_      color _eq_ vec3(0.0_co_0.0_co_0.0)_sm_ //BASE COLOR\\r\\n_qt_+\n                _qt_   }else{\\r\\n_qt_+\n                _qt_      color _eq_ vec3(1.0_co_1.0_co_angle)_sm_ //BASE COLOR\\r\\n_qt_+\n                _qt_   }*/\\r\\n_qt_+\n                _qt_   vec3 color _eq_ vec3(1.0_co_1.0_co_1.0)_sm_ //BASE COLOR\\r\\n_qt_+\n                _qt_   vec3 rc[4]_sm_  //RANGE COLORS\\r\\n_qt_+\n                _qt_   rc[0] _eq_ vec3(0.4_co_0.4_co_0.2)_sm_\\r\\n_qt_+\n                _qt_   rc[1] _eq_ vec3(0.8_co_0.8_co_0.3)_sm_\\r\\n_qt_+\n                _qt_   rc[2] _eq_ vec3(0.4_co_0.8_co_0.4)_sm_\\r\\n_qt_+\n                _qt_   rc[3] _eq_ vec3(0.8_co_0.8_co_0.9)_sm_\\r\\n_qt_+\n                _qt_   vec3 ac[16]_sm_  //ANGLE COLORS\\r\\n_qt_+\n                _qt_   //ZONE 1_dd_\\r\\n_qt_+\n                _qt_   ac[0] _eq_ vec3(0.2_co_0.2_co_0.0)_sm_\\r\\n_qt_+\n                _qt_   ac[1] _eq_ vec3(0.4_co_0.4_co_0.2)_sm_\\r\\n_qt_+\n                _qt_   ac[2] _eq_ vec3(0.5_co_0.5_co_0.2)_sm_\\r\\n_qt_+\n                _qt_   ac[3] _eq_ vec3(-0.8_co_-0.8_co_-0.6)_sm_\\r\\n_qt_+\n                _qt_   //ZONE 2_dd_\\r\\n_qt_+\n                _qt_   ac[4] _eq_ vec3(0.0_co_0.4_co_0.4)_sm_\\r\\n_qt_+\n                _qt_   ac[5] _eq_ vec3(0.6_co_0.6_co_0.6)_sm_\\r\\n_qt_+\n                _qt_   ac[6] _eq_ vec3(-0.3_co_0.0_co_0.3)_sm_\\r\\n_qt_+\n                _qt_   ac[7] _eq_ vec3(-0.2_co_-0.2_co_0.0)_sm_\\r\\n_qt_+\n                _qt_   //ZONE 3_dd_\\r\\n_qt_+\n                _qt_   ac[8] _eq_ vec3(0.0_co_0.4_co_0.0)_sm_\\r\\n_qt_+\n                _qt_   ac[9] _eq_ vec3(-0.2_co_-0.2_co_0.0)_sm_\\r\\n_qt_+\n                _qt_   ac[10] _eq_ vec3(0.0_co_0.6_co_0.6)_sm_\\r\\n_qt_+\n                _qt_   ac[11] _eq_ vec3(0.0_co_-0.8_co_0.0)_sm_\\r\\n_qt_+\n                _qt_   //ZONE 4_dd_\\r\\n_qt_+\n                _qt_   ac[12] _eq_ vec3(-0.5_co_-0.5_co_-0.5)_sm_\\r\\n_qt_+\n                _qt_   ac[13] _eq_ vec3(-1.0_co_0.6_co_0.0)_sm_\\r\\n_qt_+\n                _qt_   ac[14] _eq_ vec3(-1.0_co_0.0_co_0.0)_sm_\\r\\n_qt_+\n                _qt_   ac[15] _eq_ vec3(0.2_co_-0.6_co_-0.6)_sm_\\r\\n_qt_+\n                _qt_   \\r\\n_qt_+\n                _qt_   float ap[4]_sm_ //Angle Blend PERCENTAGE\\r\\n_qt_+\n                _qt_    ap[0] _eq_ rangeV(angle_co_ aR[0].x_co_ aR[0].y)_sm_\\r\\n_qt_+\n                _qt_    ap[1] _eq_ rangeV(angle_co_ aR[1].x_co_ aR[1].y)_sm_\\r\\n_qt_+\n                _qt_    ap[2] _eq_ rangeV(angle_co_ aR[2].x_co_ aR[2].y)_sm_\\r\\n_qt_+\n                _qt_    ap[3] _eq_ rangeV(angle_co_ aR[3].x_co_ aR[3].y)_sm_\\r\\n_qt_+\n                _qt_    \\r\\n_qt_+\n                _qt_    //Mix into BaseColor for Zones_sm_\\r\\n_qt_+\n                _qt_    //Zone 1_dd_\\r\\n_qt_+\n                _qt_    rc[0] _eq_ normalize(rc[0]-(ac[0]*(ap[0]*0.5)))_sm_\\r\\n_qt_+\n                _qt_    rc[0] _eq_ normalize(rc[0]-(ac[1]*(ap[1]*0.5)))_sm_\\r\\n_qt_+\n                _qt_    rc[0] _eq_ normalize(rc[0]-(ac[2]*(ap[2]*0.5)))_sm_\\r\\n_qt_+\n                _qt_    rc[0] _eq_ normalize( rc[0]-(ac[3]*(ap[3]*0.5)))_sm_\\r\\n_qt_+\n                _qt_    //Zone 2_dd_\\r\\n_qt_+\n                _qt_    rc[1] _eq_ normalize(rc[1]-(ac[4]*(ap[0]*0.5)))_sm_\\r\\n_qt_+\n                _qt_    rc[1] _eq_ normalize(rc[1]-(ac[5]*(ap[1]*0.5)))_sm_\\r\\n_qt_+\n                _qt_    rc[1] _eq_ normalize(rc[1]-(ac[6]*(ap[2]*0.5)))_sm_\\r\\n_qt_+\n                _qt_    rc[1] _eq_ normalize( rc[1]-(ac[7]*(ap[3]*0.5)))_sm_\\r\\n_qt_+\n                _qt_    //Zone 3_dd_\\r\\n_qt_+\n                _qt_    rc[2] _eq_ normalize(rc[2]-(ac[8]*(ap[0]*0.5)))_sm_\\r\\n_qt_+\n                _qt_    rc[2] _eq_ normalize(rc[2]-(ac[9]*(ap[1]*0.5)))_sm_\\r\\n_qt_+\n                _qt_    rc[2] _eq_ normalize(rc[2]-(ac[10]*(ap[2]*0.5)))_sm_\\r\\n_qt_+\n                _qt_    rc[2] _eq_ normalize( rc[2]-(ac[11]*(ap[3]*0.5)))_sm_\\r\\n_qt_+\n                _qt_    //Zone 4_dd_\\r\\n_qt_+\n                _qt_    rc[3] _eq_ normalize(rc[3]-(ac[12]*(ap[0]*0.5)))_sm_\\r\\n_qt_+\n                _qt_    rc[3] _eq_ normalize(rc[3]-(ac[13]*(ap[1]*0.5)))_sm_\\r\\n_qt_+\n                _qt_    rc[3] _eq_ normalize(rc[3]-(ac[14]*(ap[2]*0.5)))_sm_\\r\\n_qt_+\n                _qt_    rc[3] _eq_ normalize( rc[3]-(ac[15]*(ap[3]*0.5)))_sm_\\r\\n_qt_+\n                _qt_   \\r\\n_qt_+\n                _qt_    float rp[4]_sm_ //RANGE BLEND PERCENTAGE\\r\\n_qt_+\n                _qt_    rp[0] _eq_ rangeV(el_co_ r[0].x_co_ r[0].y)_sm_\\r\\n_qt_+\n                _qt_    rp[1] _eq_ rangeV(el_co_ r[1].x_co_ r[1].y)_sm_\\r\\n_qt_+\n                _qt_    rp[2] _eq_ rangeV(el_co_ r[2].x_co_ r[2].y)_sm_\\r\\n_qt_+\n                _qt_    rp[3] _eq_ rangeV(el_co_ r[3].x_co_ r[3].y)_sm_\\r\\n_qt_+\n                _qt_   \\r\\n_qt_+\n                _qt_   //Slight Blending nouse... this could be better...\\r\\n_qt_+\n                _qt_   if(rp[0]&lt_sm__eq_0.25){\\r\\n_qt_+\n                _qt_        rp[0]*_eq_snoise(vPositionW.xz)_sm_\\r\\n_qt_+\n                _qt_    }\\r\\n_qt_+\n                _qt_    if(rp[1]&lt_sm__eq_0.25){\\r\\n_qt_+\n                _qt_        rp[1]*_eq_snoise(vPositionW.xz)_sm_\\r\\n_qt_+\n                _qt_    }\\r\\n_qt_+\n                _qt_    if(rp[2]&lt_sm__eq_0.25){\\r\\n_qt_+\n                _qt_        rp[2]*_eq_snoise(vPositionW.xz)_sm_\\r\\n_qt_+\n                _qt_    }\\r\\n_qt_+\n                _qt_    if(rp[3]&lt_sm__eq_0.25){\\r\\n_qt_+\n                _qt_        rp[3]*_eq_snoise(vPositionW.xz)_sm_\\r\\n_qt_+\n                _qt_    }\\r\\n_qt_+\n                _qt_    \\r\\n_qt_+\n                _qt_    \\r\\n_qt_+\n                _qt_    //RANGE COLOR MIX\\r\\n_qt_+\n                _qt_    color _eq_ mix(color_co_ rc[3]_co_ rp[3])_sm_\\r\\n_qt_+\n                _qt_    color _eq_ mix(color_co_ rc[2]_co_ rp[2])_sm_\\r\\n_qt_+\n                _qt_    color _eq_ mix(color_co_ rc[1]_co_ rp[1])_sm_\\r\\n_qt_+\n                _qt_    color _eq_ mix(color_co_ rc[0]_co_ rp[0])_sm_\\r\\n_qt_+\n                _qt_    \\r\\n_qt_+\n                _qt_    vec3 vLightPosition _eq_ vec3(0.15_co_ 60.0_co_ 0.5)_sm_\\r\\n_qt_+\n                _qt_    // Light\\r\\n_qt_+\n                _qt_    vec3 lightVectorW _eq_ normalize(vLightPosition - vPositionW)_sm_\\r\\n_qt_+\n                _qt_    // diffuse\\r\\n_qt_+\n                _qt_    float ndl _eq_ max(0._co_ dot(vNormalW_co_ lightVectorW))_sm_\\r\\n_qt_+\n                _qt_    color*_eq_ndl_sm_\\r\\n_qt_+\n                _qt_    \\r\\n_qt_+\n                _qt_    gl_FragColor _eq_ vec4(color_co_ 1.)_sm_\\r\\n_qt_+\n                _qt_}\\r\\n_qt__sm_\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\tteriableBasic _eq_ new BABYLON.ShaderMaterial(_qt_teriableBasic_qt__co_ scene_co_ {\n                    vertex_dd_ _qt_teriableBasic_qt__co_\n                    fragment_dd_ _qt_teriableBasic_qt__co_\n                \t}_co_\n                    {\n                        attributes_dd_ [_qt_position_qt__co_ _qt_normal_qt__co_ _qt_uv_qt_]_co_\n                        uniforms_dd_ [_qt_world_qt__co_ _qt_worldView_qt__co_ _qt_worldViewProjection_qt__co_ _qt_view_qt__co_ _qt_projection_qt_]\n                    })_sm_\n\t\t\t\t\n\t\t\t\t\n\t\t \n\t\t \n\t\t var height _eq_ 100_sm_\n\t\t var NoiseBase _eq_ new dN(_t_Simple2_t__co__t_test2_t__co_{scale_dd_100})_sm_\n\t\t var Noise2 _eq_ new dN(_t_Worley2_t__co__t_newSeed_t__co_{width_dd_100_co_ height_dd_ 100_co_ scale_dd_30})_sm_\n\t\t \n\t\t \n\t\t var ground _eq_ BABYLON.Mesh.CreateGround(_qt_ground_qt__co_ 100_co_ 100_co_ 100_co_ scene_co_ true)_sm_\n\t\t\tground.material _eq_ teriableBasic_sm_\n\t\t var vertexData _eq_ ground.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm_\n\t\t \n\t\t for (var i _eq_ 0_sm_ i &lt_sm_ vertexData.length_sm_ i +_eq_ 3) {\n\t\t\t \tvar x _eq_ vertexData[i]_co_ y _eq_ vertexData[i+1]_co_z _eq_ vertexData[i+2]_sm_\n\t\t\t\tvertexData[i+1] _eq_ (-height*0.5) + (dN.filter.smooth(0.65_co_ dN.Multiply(NoiseBase.getValue({x_dd_x_co_ y_dd_z})_co_ Noise2.getValue({x_dd_x_co_ y_dd_z})))*height)_sm_\n\t\t\t\t//console.log(vertexData[i+1])_sm_\n\t\t }_sm_\n\t\t ground.updateVerticesData(BABYLON.VertexBuffer.PositionKind_co_ vertexData_co_ 0_co_ 0)_sm_\n\t\t \t\tvar positions _eq_ ground.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm_\n       \t\t\tvar indices _eq_ ground.getIndices()_sm_\n        \t\tvar normals _eq_ ground.getVerticesData(BABYLON.VertexBuffer.NormalKind)_sm_\n\t\t\t\tground.updateVerticesData(BABYLON.VertexBuffer.NormalKind_co_ normals_co_ true_co_ true)_sm_\n\t\t\t\tBABYLON.VertexData.ComputeNormals(positions_co_ ground.getIndices()_co_ normals)_sm_\n\t\t \n\t\t \n\t\t/* function createTerrain(name_co_ numberOfNoises_co_ width_co_ depth_co_ height_co_ args){\n\t\t\tnumberOfNoises _eq_ numberOfNoises || 3_sm_\n\t\t\t\t\tfunction tRand(s){\n\t\t\t\t\t\ts _eq_ Math.sin(t) * 10000_sm_\n\t\t\t\t\t\treturn parseFloat(s - Math.floor(s))_sm_\n\t\t\t\t\t}\n\t\t }_sm_*/\n\t\t \n\n         \n         return scene_sm_\n      }_sm_ \n      var scene _eq_ createScene()_sm_\n     \n      engine.runRenderLoop(function () {\n         scene.render()_sm_\n      })_sm_\n     \n      window.addEventListener(_qt_resize_qt__co_ function () {\n         engine.resize()_sm_\n      })_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tsorry for the sloppy formatting the copy and paste was not good for it... um you could pretty much copy and paste this in and get it working_co_ your gonna need DAS NOISE though._lt_br /_gt__lt_br /_gt_\n\tNow for the off topic response._lt_br /_gt__lt_br /_gt_\n\tTeriable is a child project of the main goal Project Celest.  I posted a little bit about it a while back then got hush hush about it.  I had to deviate from its development for a while becuase it is not a single system and had to obtain the knowledge to develop the full gambit of tools.  The end goal (which I have already accomplished in prototypes)  is to generate an entire solar system off a single seed_co_ down to the tiniest details._lt_br /_gt__lt_br /_gt_\n\tSo far I have accomplished_dd__lt_br /_gt_\n\tCelestial _dd_ Generates a star of with correct rates for real world star types_co_ its mass_co_ its spectrum_co_ its output_co_ its habitability range_co_ its gravitational effects in correlation to all other elements in the system_co_ and its chemical composition all accurate to real world numbers.  It also generates the features around the star including Planets the planets moons and asteroid belts along with other exotic features and figures out all similar things as it did for the star like chemical composition_co_ gravity etc.  But also goes the extra level to define its environment if it has any and if it is habitable_co_ with a force habitable option.  All planets and stars generated are from the known types to science and I have all the stars done and like 80% of the planets._lt_br /_gt__lt_br /_gt_\n\tTeriable_dd_  Terrain generation system_co_ you guys have seen the most of this current versions are being reworked to bend the planes around a central point to simulate planetary curve and the systems for generating water and mineral deposits along with biom identification.  I will also be introducing my new procedural method I am developing called MIPS or Modular and Independent Procedural Systems which you will hear more about soon_co_ and I have started documenting in a article I will mention later in this post.  I want to introduce this method to handle the subsurface tunneling._lt_br /_gt__lt_br /_gt_\n\tCiti-eZ_dd_  City generation starting from the road level based on sub maps for population density and elevation along with regions for different construction styles.  This part is in its infancy_co_ and will soon be incorporated into Teriable.  This will be the main use of my new MIPS system_dd_ _lt_a href_eq__qt_https_dd_//pryme8.github.io/citiez/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//pryme8.github.io/citiez/._lt_/a_gt__lt_br /_gt_\n\tmore on this one later...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt__lt_br /_gt_\n\tSecret Project**_dd_ This one is super Hush Hush... but yeah ill say something about it... Plants and Creatures ^_^... and I already have the basic components working so yeah....  Im just waiting to bite of a section of this because it will be highly dependent on its environment_co_ which all of that structure is not in place yet._lt_br /_gt__lt_br /_gt__lt_br /_gt_\n\tIve been writing in my notebook about this for like 10 years_co_ and have been actively working on it since day 1 I found BJS.  Its all going to be wrapped in my convenient Tower Editor that is pretty close to fully functional now.  Lets just say I have been busy and you guys only get to see a fraction of what I produce.  Currently I am working on a paid BJS contract and like4 websites now (just got a new one) so Im a busy busy guy and really have not had any time to work on my stuff... soo yeah well see if this is all a pipe dream or not_co_ but ill stick to it and if It gets even fractionally more done it should handle most of your guys terrain needs._lt_br /_gt__lt_br /_gt_\n\t***PS I feel like _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_ is gonna roast me for this one...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-09-27T22:03:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tActually_co_ I_t_m not paying much attention.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  But I would like to maintain my #1 ranking for... people who talk about themselves.  I_t_m kind of proud of that.  Sometimes... though_co_ @pryme8 is hot on my heels.  _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tPryme8 types fast.  I know he does. I think he has my butt kicked on typing/coding speed.  But I can still _qt_thought-wander_qt_ better than he can.  He usually just talks about himself/his-stuff.  But he DID talk about a complete virtual reality inside of a woodpecker hole... and spoke of enfolded space.  So_co_ he_t_s not far behind in Weirdoville_co_ either.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tOk_co_ just came to visit.  Bye again.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"kohai","Date":"2016-09-28T18:17:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/?do_eq_hovercard_qt_ data-mentionid_eq__qt_19199_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/_qt_ rel_eq__qt__qt__gt_@Pryme8_lt_/a_gt_ thanx for your answer_co_ i_t_ll look at your code and see what i can do with it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_ i think you_t_ll keep your record for the highest post count and/or longest answers in this forum anyway _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_ !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMan_co_ you are legend !\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"TheDude","Date":"2016-10-01T08:18:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/?do_eq_hovercard_qt_ data-mentionid_eq__qt_19199_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/_qt_ rel_eq__qt__qt__gt_@Pryme8_lt_/a_gt_ Wow_co_ you basically described my whole game idea! Though mine includes a playable character and building. \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-10-01T15:49:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAlready got that stuff_co_ that was the easy part _sm_).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tim putting all that on pause for a second while I figure out the math for Magnus slip.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]