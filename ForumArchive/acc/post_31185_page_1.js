[{"Owner":"En929","Date":"2017-06-20T22:53:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tNow that I got my animations together (from Mixamo) and know how to make them_co_ convert them_co_ upload them_co_ etc. how do I attach my own custom controls to them instead of the preset controls. Also_co_ how do I get the camera to follow the player. For example_co_ let_t_s say I_t_d want my character to just walk forward with the space bar and nothing else and the camera follows the player?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNote_dd_ I got my camera set to _qt_FreeCamera_qt_ because I wanted to customize my controls instead of using the built in ones. Maybe Freecamera is the wrong camera for doing what I want to do. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tFinally_co_ the part that I needed help with is below the dotted lines. That is_co_ I don_t_t need help with all of the code below. Just the portions between the dotted lines.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_&lt_sm_!DOCTYPE html&gt_sm_\n&lt_sm_html&gt_sm_\n    &lt_sm_head&gt_sm_\n        &lt_sm_meta http-equiv_eq__qt_Content-Type_qt_ content_eq__qt_text/html_sm_ charset_eq_utf-8_qt_ /&gt_sm_\n\n        &lt_sm_title&gt_sm_Babylon.js sample code&lt_sm_/title&gt_sm_\n        &lt_sm_!-- Babylon.js --&gt_sm_\n&lt_sm_script src_eq__qt_hand.minified-1.2.js_qt_&gt_sm_&lt_sm_/script&gt_sm_\n&lt_sm_script src_eq__qt_cannon.js_qt_&gt_sm_&lt_sm_/script&gt_sm_\n&lt_sm_script src_eq__qt_babylon.2.5.js_qt_&gt_sm_&lt_sm_/script&gt_sm_\n        &lt_sm_style&gt_sm_\n            html_co_ body {\n                overflow_dd_ hidden_sm_\n                width_dd_ 100%_sm_\n                height_dd_ 100%_sm_\n                margin_dd_ 0_sm_\n                padding_dd_ 0_sm_\n            }\n\n            #renderCanvas {\n                width_dd_ 100%_sm_\n                height_dd_ 100%_sm_\n                touch-action_dd_ none_sm_\n            }\n        &lt_sm_/style&gt_sm_\n    &lt_sm_/head&gt_sm_\n&lt_sm_body&gt_sm_\n    &lt_sm_div id_eq__qt_canvasZone_qt_&gt_sm_\n        &lt_sm_canvas id_eq__qt_renderCanvas_qt_&gt_sm_&lt_sm_/canvas&gt_sm_\n    &lt_sm_/div&gt_sm_\n    &lt_sm_script&gt_sm_\n        var canvas _eq_ document.getElementById(_qt_renderCanvas_qt_)_sm_\n        var engine _eq_ new BABYLON.Engine(canvas_co_ true)_sm_\n\n        var createScene _eq_ function () {\n            var scene _eq_ new BABYLON.Scene(engine)_sm_\n\t\t\t\n \t\t\n\t\t\t\n            var light _eq_ new BABYLON.DirectionalLight(_qt_dir01_qt__co_ new BABYLON.Vector3(0_co_ -0.5_co_ -1.0)_co_ scene)_sm_\n          //  var camera _eq_ new BABYLON.ArcRotateCamera(_qt_Camera_qt__co_ 0_co_ 0_co_ 10_co_ new BABYLON.Vector3(0_co_ 30_co_ 0)_co_ scene)_sm_\n\t\t  \n\t\t  \n\t\t  \n            \n\t\t\tvar camera _eq_ new BABYLON.FreeCamera(_qt_camera1_qt__co_   new BABYLON.Vector3(0_co_ 5_co_ -200)_co_ scene)_sm_\n          // camera.attachControl(canvas_co_ false)_sm_\n           // camera.setPosition(new BABYLON.Vector3(20_co_ 70_co_ 120))_sm_\n            light.position _eq_ new BABYLON.Vector3(50_co_ 250_co_ 200)_sm_\n        \tlight.shadowOrthoScale _eq_ 2.0_sm_\n            camera.minZ _eq_ 1.0_sm_\n        \n            scene.ambientColor _eq_ new BABYLON.Color3(0.3_co_ 0.3_co_ 0.3)_sm_\n\t\t\t\n\n\t\t\n\t\t\t\n        \n            // Ground\n            var ground _eq_ BABYLON.Mesh.CreateGround(_qt_ground_qt__co_ 1000_co_ 1000_co_ 1_co_ scene_co_ false)_sm_\n            var groundMaterial _eq_ new BABYLON.StandardMaterial(_qt_ground_qt__co_ scene)_sm_\n            groundMaterial.diffuseColor _eq_ new BABYLON.Color3(0.2_co_ 0.2_co_ 0.2)_sm_\n            groundMaterial.specularColor _eq_ new BABYLON.Color3(0_co_ 0_co_ 0)_sm_\n            ground.material _eq_ groundMaterial_sm_\n            ground.receiveShadows _eq_ true_sm_\n\t\t\t//minus _eq_ down and plus _eq_ up\n\t\t\tground.position.y _eq_ -70_sm_\n\t\t\tground.position.z _eq_ 250_sm_\n            // Shadows\n            var shadowGenerator _eq_ new BABYLON.ShadowGenerator(1024_co_ light)_sm_\n            shadowGenerator.useBlurVarianceShadowMap _eq_ true_sm_\n\n\n\n\n\n\n\t\t\n//-----------------------------------Here_t_s the part that I needed help with. I wanted to make this animated character walk forward with the spacebar------------------------------------------------------------------------\n\n\n            BABYLON.SceneLoader.ImportMesh(_qt__qt__co_ _qt__qt__co_ _qt_Henry5.babylon_qt__co_ scene_co_ function (newMeshes2_co_ particleSystems2_co_ skeletons2) {\n                var dude _eq_ newMeshes2[0]_sm_\n        \n                for (var index _eq_ 1_sm_ index &lt_sm_ newMeshes2.length_sm_ index++) {\n                    shadowGenerator.getShadowMap().renderList.push(newMeshes2[index])_sm_\n                }\n        \n\n\t\t\n        \n                dude.rotation.x _eq_ Math.PI+190_sm_\n\t\t\t\tdude.rotation.z_eq_ Math.PI_sm_\n                dude.position _eq_ new BABYLON.Vector3(0_co_ -70_co_ 280)_sm_\n\t\t\t\t\n\n\t\n\t\t\n\n                scene.beginAnimation(skeletons2[0]_co_ 0_co_ 100_co_ true_co_ 1.0)_sm_\n            })_sm_\n        \n            return scene_sm_\n        }_sm_\n        \n\n\n//----------------------------------After this point_co_ that_t_s all I needed help with for now. Thanks!---------------------------------------------------------------------------\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        var scene _eq_ createScene()_sm_\n\n        engine.runRenderLoop(function () {\n            scene.render()_sm_\n        })_sm_\n\n        // Resize\n        window.addEventListener(_qt_resize_qt__co_ function () {\n            engine.resize()_sm_\n        })_sm_\n\t\t\n\t\twindow.addEventListener(_qt_keydown_qt__co_ handleKeyDown_co_ false)_sm_\n\t\twindow.addEventListener(_qt_keyup_qt__co_ handleKeyUp_co_ false)_sm_\n    &lt_sm_/script&gt_sm_\n&lt_sm_/body&gt_sm_\n&lt_sm_/html&gt_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-06-21T01:00:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi en929.  Wow_co_ that_t_s a lot of code paste.  I think you can remove all that... but it_t_s your call.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNaturally_co_ you would turn-on some keypress listeners (such as WASD keys)_co_ and experiment with changing the .position and .rotation of your imported models... with each keypress.  Perhaps use SHIFTED w and d for rotation.  Otherwise.... un-shifted W_co_ A_co_ S_co_ D for positioning.  The BABYLON ActionManager is nice_co_ too_co_ and you should read our docs about it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tKeypress listening is mostly a HTML thing_co_ not a BabylonJS thing_co_ so there_t_s a trillion tutorials on the web... about keypresses.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere is also a fancy .moveWithCollisions function... very useful for player-moving.  Use our _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/playground_qt_ rel_eq__qt_external nofollow_qt__gt_playground search_lt_/a_gt_ (search in code) to find others who have used .moveWithCollisions.  You can also search for addEventListener and removeEventListener_co_ and in no-time_co_ you will be an expert in driving-around your models.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt might also be wise to search for _t_dude_t_.  Dude has been the BJS _qt_demonstration player_qt_ for a long time_co_ and he has MANY MANY playgrounds.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  Another good search... followCamera.  Good luck.  Stay tuned... others may comment soon.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"TomaszFurca","Date":"2017-06-21T06:33:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI use FreeCamera with ortho mode_co_ after check other types of camera like target_co_ the best option for me was_dd_\n_lt_/p_gt_\n\n_lt_div_gt_\n\t_lt_pre_gt_\n_lt_code_gt_scene.registerAfterRender(function() {\n        scene.activeCamera.position _eq_ mesh.position_sm_\n    }\n})_sm__lt_/code_gt__lt_/pre_gt_\n_lt_/div_gt_\n\n_lt_p_gt_\n\tYesterday i spent few hours on optimize my game -&gt_sm_ babylon.furcatomasz.pl_co_ and i want to change camera position only when player moving -&gt_sm_ this is better option.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]