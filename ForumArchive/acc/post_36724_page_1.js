[{"Owner":"inteja","Date":"2018-03-30T04:24:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI have a dynamically generated _qt_celestial star sphere_qt_ mesh of independent triangles each mapped with an opacity texture representing the star. The underlying vertex colors of each triangle (representing the color of real stars) shine through but currently the entire mesh is affected by lighting and I can_t_t set the emissive color on the material otherwise it_t_ll wash out the vertex colors. I want the vertex colors to always contribute 100% of the triangle color_co_ but masked by the opacity texture and unaffected by lighting.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs this possible somehow?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-03-30T05:08:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHiya inteja_co_ good to see you again.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNot sure if helpful_co_ but you can set vertexColors to ANY _qt_magnitude_qt_ (within reason).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWould power-amplifying (up-scaling) the vertex colors... help you?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#1UHFAP%23196_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#1UHFAP#196_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLines 69-79_co_ where _t_p_t_ _eq_ power.  Unnatural saturation.  (I spit a little when I typed that)  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m not responsible if your computer monitor melts from photon overload.  heh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tStay tuned... smarter people than I... are nearby.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"inteja","Date":"2018-03-30T05:27:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_ I didn_t_t know you could do that - I thought colors would be internally clamped in the range 0.0-1.0.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt helps a bit but still affected by lighting which means the star colors aren_t_t accurate to the star data (vertex color)_co_ which is ideally what I_t_m after.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-03-30T05:33:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t*nod*.  Yeah_co_ you could use a vertexColor-to-Texture _qt_ratio_qt_ adjuster... or something.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHave you tried strange things like using the same emissiveTexture or diffuseTexture... in the opacityTexture channel?  That seems good and demented.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDon_t_t do a mat.emissiveTexture _eq_ mat.opacityTexture.  Actually make a new Babylon.Texture for the opacityTexture_co_ but use the same URL.  That way_co_ both textures their own .level property_co_ and other things.  (just guessing at ideas_co_ here).  You want the stars to be complete self-illuminated_co_ eh?  No lights affecting them.  (be sure to notice light.excludedMesh array_co_ as needed.)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut yeah... you almost need more control over how vertexColors are summed-into the final result.  Weird challenge.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIssue still open_co_ everyone.  Help welcome!  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"inteja","Date":"2018-03-30T05:40:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_ I_t_m not able to use textures for color_co_ in any channel because each star color is unique but it_t_s all one mesh of ~5000 triangles for the naked-eye visible stars. So I figure my only option is vertex colors - I just can_t_t seem to light them 100%.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHmmm_co_ maybe I could try the new glow layer ... will investigate that also.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-03-30T05:46:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAhh_co_ ok... so vertexColors only.  You_t_ve tried scene.ambientColor of gray_co_ and then star.material.ambientColor _eq_ something?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tmat colors... mixed with vertexColors.  Do they mix?  I should go do some tests. _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  I need to eat_co_ though. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"aWeirdo","Date":"2018-03-30T06:02:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/22801-inteja/?do_eq_hovercard_qt_ data-mentionid_eq__qt_22801_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/22801-inteja/_qt_ rel_eq__qt__qt__gt_@inteja_lt_/a_gt__lt_br /_gt_\n\t_lt_s_gt_I think what you need is emissiveColor &amp_sm_ disableLighting _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ _lt_/s_gt__lt_br /_gt_\n\t_lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#1UHFAP%23197_qt_ rel_eq__qt_external nofollow_qt__gt__lt_s_gt_https_dd_//www.babylonjs-playground.com/#1UHFAP#197_lt_/s_gt__lt_/a_gt__lt_br /_gt_\n\t_lt_br /_gt_\n\tErm_co_ i miss-read _lt_img alt_eq__qt__dd_mellow_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_mellow.png_qt_ title_eq__qt__dd_mellow_dd__qt_ /_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"inteja","Date":"2018-03-30T06:52:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFeeling a bit silly now_co_ and thought I_t_d tried this already_co_ but simply setting starMaterial.emissiveColor to white does the trick - this seems to result in mesh being unaffected by lights and also doesn_t_t wash out mesh vertex colors.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]