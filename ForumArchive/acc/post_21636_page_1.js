[{"Owner":"mwpowellhtx","Date":"2016-04-01T20:38:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve got a peculiar thing. I want to capture the instances in such a way that once I_t_ve left my create scene handlers_co_ I can return to my model calculators (i.e. scene hosts).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUser will engage with some form fields_co_ during which time_co_ I want to look up the related model calculators and make changes_co_ potentially rebuild the scene based on the input.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve tried something like this_co_ but it falls over on account of the scene object_co_ deep within which is circular I think_sm_ somewhere is_co_ at any rate. Point is_co_ jumping to/from JSON is not going to work very well for purposes of what I am doing.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_&lt_sm_script type_eq__qt_application/json_qt_ id_eq__qt_data_qt_&gt_sm_\n    {_qt_calc1_qt__dd_ null_co_ _qt_calc2_qt__dd_ null_co_ _qt_calc3_qt__dd_ null}\n&lt_sm_/script&gt_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tPerhaps I will need to completely decouple the calculator configuration from the scene modeling bits_co_ that_t_s probably the right longer range answer. But I want to see if I can make it work without jumping to/from JSON first.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPartly_co_ too_co_ is my ignorance concerning JavaScript object life cycle of variables throughout the scripts_co_ i.e. if they survive the load and can be referenced at a later point.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRegards_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMichael Powell\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mwpowellhtx","Date":"2016-04-01T20:51:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tAlong similar lines_co_ is it possible to lookup models in the scene by their _lt_em_gt_id_lt_/em_gt_? i.e. _lt_em_gt_jQuery _lt_/em_gt_style?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-04-01T21:10:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\twhat_t_s a _qt_model_qt_ or a _qt_calculator_qt_?  Think you are going to need to BJS terminology. Not an expert on JSON.  Do not know anything about jumping between them.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mwpowellhtx","Date":"2016-04-01T21:25:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t@JCPalmer Well_co_ it_t_s not a mesh_co_ per se_co_ but it does accept some parameters and performs some calculations_sm_ i.e. model/calculator is the name for the pattern. I do call a build function that I use to generate my meshes_co_ however.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFocusing my question a bit_co_ can I jQuery for mesh items_co_ like by their names? If I can do that_co_ then I could potentially completely decouple calculators_co_ and store the calculation config as JSON_co_ then interface with the scenery meshes later during the page life time.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-04-02T04:20:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYou will be very interests in my secret  project being released soon. If you want to start a private convo with me I think we could discuss some of theses ideas\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]