[{"Owner":"Nodragem","Date":"2018-11-23T14:01:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am playing around with the Solid Particle System (SPS) and the performance looks great!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHowever I would like to show a different letter on the front face of each of my cubes_co_ such as illustrated here_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ data-fileid_eq__qt_21165_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_11/image.png.2db7fbef02aa06f70e102decbc5c1cac.png_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_image.thumb.png.793d12bd0e8e0afb97f961aa4c3f8caa.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_21165_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_11/image.thumb.png.793d12bd0e8e0afb97f961aa4c3f8caa.png_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHowever_co_ it seems that the property uvs (SPS.particles[p].uvs) does not allow me to do that. It is expecting a Vector4_co_ while I was expecting to give an array such as the one given for Mesh.setVerticesData(BABYLON.VertexBuffer.UVKind_co_ array).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs it in theory possible to change the VerticesData of eachÂ particleÂ as if they wereÂ meshes?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-11-23T14:07:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAdding _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5453_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/_qt_ rel_eq__qt__qt__gt_@jerome_lt_/a_gt_Â our SPS mastermind\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-11-23T14:16:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIf that can help_co_ this is how I tried to deal with the UVs right now_dd_Â _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/ts.html#9GFDZN%232_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/ts.html#9GFDZN#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI must be doing something wrong_co_ cause that does not even show a letter anywhere on my cubesÂ _lt_span_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ˜•_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-11-23T16:17:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/ts.html#9GFDZN%233_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/ts.html#9GFDZN#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI just set some faceUVs on the model box before so only one face has UVs(0_co_ 0_co_ 1_co_ 1)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthen each particle can be given a part of the texture in the same way. You may have some error in your row_co_ col computations. In my example_co_ I just give (0_co_ 0_co_ 1_co_ 1) to each particle\n_lt_/p_gt_\n\n_lt_p_gt_\n\there_t_s another example with some fixed_co_ but computed_co_ values with your initial texture so you can understand how to set the particle UVs _dd_Â _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/ts.html#9GFDZN%234_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/ts.html#9GFDZN#4_lt_/a_gt_Â Â \n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-11-23T16:18:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHere is a version that gets close. Its in Javascript rather than typescript but might help you spot any issue with your PG. Doesn_t_t deal with non-letters and letters are applied to all sides. Also I made the cuboids immovable but this can be removed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#UIIK1W_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#UIIK1W_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd here is one using an second SPS of labels in front of the cuboid\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#UIIK1W%231_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#UIIK1W#1_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-11-23T16:33:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHaving read how Jerome did it I updated to this one _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#UIIK1W%232_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#UIIK1W#2_lt_/a_gt_ which also does random letters only. Note face 1 faces forward.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-11-23T16:43:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\they hey_co_Â this is working! Thank you very much toÂ both of you!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI needed the trick that Jerome gave to project only on 1 face_sm_ then I also realised that my function getEventAtIndex(i) was not returning a number _lt_span_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ˜•_lt_/span_gt_Â _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere I modified Jerome_t_s PG_dd_Â _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/ts.html#9GFDZN%236_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/ts.html#9GFDZN#6_lt_/a_gt_Â \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHa! I see that you also did it meantimeÂ @JohnK _lt_span_gt__lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_Â I was too slow to answer!_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_So now_co_ I have an other question. Would it be possible (and _lt_u_gt_efficient_lt_/u_gt_) to add an update function to each particles_co_ like this one_dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_Class RuneLetter{\n\nplayer_dd_Player_sm_\nparticule_dd_BABYLON.SolidParticle_sm_\n\nupdate(){\n   if(this.player &amp_sm_&amp_sm_ BABYLON.Vector3.Distance(this.player.position_co_ this.particle.position) &lt_sm_ 1 &amp_sm_&amp_sm_ \n   this.particle.isVisible &amp_sm_&amp_sm_ !this.wasPickedUp){\n            this.onPickedUp(this.data)_sm_\n        }\n        if(this.isRotating){\n            this.mesh.rotate(BABYLON.Vector3.Up()_co_ Math.PI/2000 * this.scene.getEngine().getDeltaTime())\n        }\n}\n\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI need to check if there is anÂ optimised way to detect collision with a particle and send a signal to the class RuneLetter.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-11-23T17:19:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tgreat_co_ you found the easiest way by inversing the texture in the modelÂ _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_Â just what I was about to suggest to you\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe SPS can handle particle intersection directly _dd_Â _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/how_to/solid_particle_system#particle-intersections_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/how_to/solid_particle_system#particle-intersections_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tunless you just want pickability _dd_Â _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/how_to/solid_particle_system#pickable-particles_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/how_to/solid_particle_system#pickable-particles_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tnot sure to understand what you want to achieve\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-11-23T19:04:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYeah _lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ˜•_lt_/span_gt_Â so I will try to clarify_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tImagine that you have the player character (for instance Mario) and you have collectables (like the coins in Mario).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI want to use SPS to manage the animationÂ ofÂ my coins (i.e. they just rotate constantly)_co_ while detecting if Mario collided with a coin.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHence_co_ I think for now I want to use something like that_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var SPS _eq_ new SolidParticleSystem(_qt_CoinManager_qt__co_ scene_co_ {particleIntersection_dd_ true_co_ boundingSphereOnly_dd_ true})_sm_\n\nSPS.particle[p].intersectsMesh(Mario)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI could also use this for the rotation animation_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// animation\nvar updateParticle _eq_ function(particle) {\n    particle.rotation.y +_eq_ 0.015_sm_\n}_sm_\n\nSPS.updateParticle _eq_ updateParticle_sm_\nscene.registerBeforeRender(function() {\n    SPS.setParticles()_sm_\n})_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tAnd if I did not want to use the intersectMesh() function_co_ I could check for the distance between mario and the collectables in updateParticle_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// animation\nvar updateParticle _eq_ function(particle) {\n    particle.rotation.y +_eq_ 0.015_sm_\n    if(BABYLON.Vector3.distance(Mario.position_co_ particle.position) &lt_sm_ 1){\n        doSomething()\n    }\n}_sm_\n\nSPS.updateParticle _eq_ updateParticle_sm_\nscene.registerBeforeRender(function() {\n    SPS.setParticles()_sm_\n})_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am going to try that last one...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-11-23T19:55:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tyep_co_ that_t_s the right way to goÂ _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe BoundingSphere intersection test actually also does a distance computation (just a little more accurate than the position/position one)_co_ it should be quite fast then too.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf your particle are quite immobile in the space_co_ you could create some space partitioning and storeÂ where the particle are located_co_ so you could check the intersection only against the particles in the same space section than the player character. Or use a quadtree (don_t_t know you to use the BJS provided one)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tImagine something like this _lt_span_gt__dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_partX is an array_co_ some equal sections of the X world axis_co_ say_co_ from 0 to 99Â units per element. So partX[0] depicts all the x coordinates between 0 and 99._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_And so on_co_ partX[1] is from 100 to 199_co_ etc.Â _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_partX[0] _eq_ [idP1_co_ idp25_co_ idP56_co_ idP67]_sm_Â  Â //Â _lt_/span_gt_Â means that particle id1 has its position x in the range 0..99_co_ idem for id25_co_ etc\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthen do the same with partX[n]\n_lt_/p_gt_\n\n_lt_p_gt_\n\tand the same with partY[]_co_ then partZ[]\n_lt_/p_gt_\n\n_lt_p_gt_\n\tnow_co_ each frame_co_ you know mario.position.x_co_ y and z. If you divide x_co_ y and z by 100 and get the Floor() of this_co_ you know the particles in the same world section than Mario_co_ right ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tindexX _eq_ Math.floor(mario.position.x / 100)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tindexYÂ _eq_ Math.floor(mario.position.yÂ / 100)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tindexZÂ _eq_ Math.floor(mario.position.zÂ / 100)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_eq_&gt_sm_ particles near Mario _dd_ those thtatÂ are in partX[indexX] and partY[indexY] and partZ[indexZ] _co_ this is really a very fast search.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can mark them directlyÂ when found _lt_span_gt__dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ sps.particles[id].toCheck _eq_ true_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can then justÂ test the distance between Mario and the particle only for the ones (if any) fullfilling the former condition_co_ not for all the particles.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tjust reset finaly each particle .toCheck to false in updateParticle()\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tOf course_co_ this space partitioning is worth it if you have a big number of particles and if they don_t_t move in the space.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-11-24T18:49:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSounds like a very good optimisation!Â \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf I still have performance issue after using the SPS_co_ this isÂ definitely my next step to go_co_ thank you!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-11-25T08:32:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tfrom JohnK_t_s PG_co_ 750 animated letters in one draw call and one texture _dd_Â _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#UIIK1W%233_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#UIIK1W#3_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-11-25T12:36:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI tried to add some optimization by freezing some properties_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#UIIK1W%236_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#UIIK1W#6_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere what I added_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_SPS.computeParticleRotation _eq_ true_sm_       // prevents from computing particle.rotation\nSPS.computeParticleTexture _eq_ false_sm_        // prevents from computing particle.uvs\nSPS.computeParticleColor _eq_ false_sm_          // prevents from computing particle.color\nSPS.computeParticleVertex _eq_ false_sm_         // prevents from calling the custom updateParticleVertex() function\n//SPS.mesh.freezeNormals()_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThe freezeNormals() makes the back side of the letter runes black.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny other suggestions of optimisation?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-11-25T13:46:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYep_co_ when the particles rotate (even just once)_co_ the normals are internally rotated_co_ so they can_t_t be frozen in this case.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou set the right optimizers in your case. Are you encountering some performance issues with less than 1000 boxes ? weird ...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf yes_co_ what can be done then would be to act on your logic part _lt_span_gt__dd_ _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_- for instance_co_ set only the particles needing to be updated in the current frame with _lt_em_gt_setParticles(start_co_ end)_lt_/em_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_em_gt_-Â _lt_/em_gt_if you manage more particles than the ones that are actually visible in the screen_co_ then reduce the particle pool and recycle them. If recycling is too complex to implement_co_ then set the not visible ones to invisible (invisible particles aren_t_t processed to make the system faster_co_ only their function _lt_em_gt_updateParticles()_lt_/em_gt_ is called ... just in case it wouldÂ reset them to visible)_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_- if not necessary_co_ don_t_t call at all setParticle() each frame_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_etc_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_this chaotic example runs at 60 fps on my laptop _dd_Â _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#UIIK1W%237_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#UIIK1W#7_lt_/a_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-11-25T14:36:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tno I have no issues_sm_ I am just making more optimisation than necessary cause I target mobiles and tabletsÂ _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_by the way_co_ when my player collects a coin_co_ the coin should be killed. I did not find a way to dispose of a particle_co_ so for now I do_dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_p.isVisible _eq_ false_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHowever_co_ I thinkÂ that the invisible particles should not be updated by setParticles()_co_ so I tried_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_p.isVisible _eq_ false_sm_\np.alive _eq_ false_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tHowever_co_ it seems that p.alive _eq_ false is cancelling the effect of p.isVisible. Is that normal?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-11-25T16:13:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_em_gt_alive_lt_/em_gt_Â false means that the particle is frozen in its current state (visible or not) and no longer computed until reset toÂ _lt_em_gt_true.Â _lt_/em_gt_It can used to define particles within a pool that won_t_t evolve for a while and that don_t_t need to be computed then.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_em_gt_isVisible _lt_/em_gt_false means the particle isÂ Â set in a first pass (first call to setParticles() when just set to invisible) in the same location than the camera_co_ is scaled to zero (so no more in the frustum_co_ not mathematically intersectable within anything else although its logical settings can be set and are saved (position_co_ rotation_co_ scaling_co_ uvs_co_ etc)_co_ then is no longer computed in the next passes (meaning next calls to setParticles() ) to improve the perfs.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTherefore isVisible _eq_ false has more effect than alive _eq_ false.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tisVisible _eq_ false is the right way to go to fake a particle disposing _dd_ no garbage collector activity_co_ no un-necessary computation_co_ etc.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you want to get a bit more speed_co_ just exit updateParticles()_co_ that is called anyway_co_ immediatly for invisible particles _lt_span_gt__dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_SPS.updateParticle _eq_ function(p) {\n    if (!p.isVisible &amp_sm_&amp_sm_ someCondition ) { return_sm_ }\n    // your active particle logic then here\n    ...\n}_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI added _qt_someCondition_qt_ more because you need to keep a way to reset the particle to visible at some momentÂ _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t[EDIT] you could of course reset the particle to visible alsoÂ _lt_em_gt_outside_lt_/em_gt_Â the function updateParticle() _lt_span_gt__dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_// somewhere in the code_co_ nothing to do with SPS management_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tvar p _eq_ sps.particles[thatOne]_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_if (SomeOtherCondition) { p.isVisible _eq_ true_sm_ }_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-11-25T19:54:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThank you very much for your explanation_co_ that is indeed very useful to know!Â _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ I am using isVisible _eq_ false now.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs it possible to prevent particles to be updated/visible based on whether they are behind a wall? My players are in a maze_co_ so in fact I don_t_t need to update what_t_s behind walls.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tNote that_co_ it could still be useful to be able to definitely destroy a particle as they could have no need to be visible again.Â \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ it could be useful to have a data property on each particle_co_ or to have observables to make it easier to link the particles to other objects in the game. For instance_co_ here my particles represent letter runes that the player can collect. Hence_co_ I need to know which letter my player have collected. For now_co_ I organised my code so that I can use the particle_t_s idx property to retrieve the letter that the particle represents. But alternatively_co_ I could have store the letter in a data property. Or alternatively_co_ I could have observed the collision of each particle with an observer storing the letter.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI mean_co_ I am just giving ideas _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_ I think SPS is definitely a great tool to manage collectables in game level! I gonna use it all the time now.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-11-26T05:56:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe SPS is designed to be agnostic about everything else _dd_ it doesn_t_t know how the user wants to emit or not the particles_co_ how they must move (physics or not)_co_ what they must depict or act for. This is a design choice in order to make it as versatile as possible. This choice_co_ although it forces the user to make his own behavior implementation_co_ has shownÂ it was a good option until now to achieve this versatility.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ if you want to make particles behind walls invisible_co_ you will have to implement this as the SPS doesn_t_t know anything about its environment. _qt_Behind walls_qt_ implies a point a view_co_ it is to say a camera position. If the camera is fixed_co_ the walls are fixed_co_ maybe it_t_s easy to know if a particle is visible or not only by knowing its position in the space and without having to compute anything. In this case_co_ it_t_s probably worth it to set them as invisible when behind walls.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tElse_co_ if you have to check if a particle is in the camera frustum and if it_t_s occulted or not by a wall_co_ it will be probably far too much computation to do compared to the SPS computation dedicated to the hidden particles that wouldn_t_t be set invisible. It_t_s just a matter a choice depending on your very special case.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe need for storing extra properties for particles is obvious (what letter it represents in your case).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs you discovered it_co_ it can be achieved by two different approaches _lt_span_gt__dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_- as you did_co_ you store this extra propertyÂ values in some structure besides the SPS_co_ say an array storing objects (logicalParticles ?) of your own and indexed_co_ by example_co_ by the particleIdx. Yo can then easily access from a particle to a collection of data related to your own logic and vice versa._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_- you could also extend the class SolidParticle (well_co_ it_t_s javascript) _lt_strong_gt_before_lt_/strong_gt_ creating your SPS and it will be compiled with the same performance then _lt_span_gt__dd__lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_span_gt_SolidParticle.prototype.letter _eq_ _qt__qt__sm__lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_span_gt_SolidParticle.prototype.myOwnFunction _eq_ function() {_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_span_gt_Â  this.letter _eq_ doSomething()_sm__lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_span_gt_}_sm__lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_span_gt_then create your SPS as usual and your added particle properties will be available _lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ™‚_lt_/span_gt__lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-11-29T12:16:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThank you for your detailed explanation!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYep_co_ so I guess it is not worth making my particles invisibles when behindÂ walls.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tConcerning the data storage_sm_ I am using Typescript_co_ I think it is a bit more complicated to add a custom property on a object.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWould it impede the default performance if you added a property _t_data_dd_any_t_ on your side_co_ ready-to-use for the users?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-11-29T13:43:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI don_t_t think so because it_t_s just some JS that is generated finally. This will rather impact the RAM consumption.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut ... as people can manage dozen thousands particles in their SPS_co_ I wouldn_t_t add a default property that could never be used because people don_t_t need it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m not a TypeScript expert_co_ but I think there must be a way to re-open a class in order to add a property as JS allows it with prototypes (never forget that the final code is simply JS. Maybe some TS experts here could answer better than me.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway_co_ the notation with SolidParticle.prototype.property should still work_co_ because TS is still JS.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you can_t_t modify the SolidParticle class and you don_t_t want to manage a side array_co_ maybe you could create your own objects (LogicalSolidParticles ?) either by extending the SolidParticle class_co_ either by embedding the reference to the SolidParticleÂ  instance (the SPS will treat only SolidParticles_co_ not other objects) in your own object type holding its dedicated properties. Then you could process your logic on the LogicalSolidParticles and just set the linked SolidParticles according to what they are supposed to do. It_t_s a bit the same approach than the side array one_co_ but you manage a pool of logical objects_co_ each refering its related SolidParticle instead.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere are plenty ways of doing.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt would nice anyway to have an elegant way toÂ  reopen a class directly in TS.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-11-29T19:18:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe three common ways would be _lt_span_gt__dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_- inheritance so that you can modify the base call functions_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_- creatingÂ a proxy which encapsulates the sps and drives the rest of your code_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_or in Typescript_co_ you can extend any classes with class Augmentation_dd_ Look at Module augmentation_dd_Â _lt_a href_eq__qt_https_dd_//www.typescriptlang.org/docs/handbook/declaration-merging.html_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.typescriptlang.org/docs/handbook/declaration-merging.html_lt_/a_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-11-29T19:33:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCool! I did not know we could do that with TS _lt_span_gt__lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_Â I will totally use this next time._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Thanks for the ideas_sm_ for now I am happy with my array of data._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_236483_qt_ data-ipsquote-contentid_eq__qt_41466_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1543498991_qt_ data-ipsquote-userid_eq__qt_5453_qt_ data-ipsquote-username_eq__qt_jerome_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t5 hours ago_co_ jerome said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThis will rather impact the RAM consumption.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tBut ... as people can manage dozen thousands particles in their SPS_co_ I wouldn_t_t add a default property that could never be used because people don_t_t need it.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tHa _lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ˜•_lt_/span_gt_Â yeah_co_ that is indeed not a good idea if that impedes the performance _lt_span_gt__lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_Â _lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]