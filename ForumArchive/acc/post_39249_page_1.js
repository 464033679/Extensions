[{"Owner":"Dreik","Date":"2018-08-03T11:34:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tDid anyone mabey try to make ArcRotateCamera zoom to mouse position instead of middle of the screen?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf not is that doable with that camera or should I work with another one?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2018-08-03T11:54:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/31774-dreik/?do_eq_hovercard_qt_ data-mentionid_eq__qt_31774_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/31774-dreik/_qt_ rel_eq__qt__qt__gt_@Dreik_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can do this many ways_co_ however_co_ the method you_t_re using can work. First_co_ how does your canvas know the XYZ position of an XY canvas? but if you_t_re trying to zoom into an object_co_ pick the object and change it_t_s target to be the pick point.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dreik","Date":"2018-08-03T12:00:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m doing line-plane intersection to pick a point on a plane I need. but if I just change the target of the camera to it camera will rotate right? So it won_t_t look smooth. What I need is to make it look like you are constantly watching from the top or the angle you set by rotating camera. I don_t_t want extra rotation from zooming.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"The Leftover","Date":"2018-08-04T00:37:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.illuminated.city/mp4/DistrictZoom.mp4_qt_ rel_eq__qt_external nofollow_qt_ style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#3d6594_sm_font-size_dd_14px_sm__qt__gt_http_dd_//www.illuminated.city/mp4/DistrictZoom.mp4_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI do this.  It looks good.  Code is below.  At first glance it looks readable.  No warranty.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_       function animateCameraToTargetAndPosition(camera_co_newPosX_co_newPosY_co_newPosZ_co_zoom_co_newAlpha_co_newBeta){\n        var radiusAnimation      _eq_ new BABYLON.Animation(_qt_camRadius_qt__co_ _qt_radius_qt__co_ 30_co_ BABYLON.Animation.ANIMATIONTYPE_FLOAT_co_ BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT)_co_\n            alphaAnimation       _eq_ new BABYLON.Animation(_qt_camAlpha_qt__co_ _qt_alpha_qt__co_ 30_co_ BABYLON.Animation.ANIMATIONTYPE_FLOAT_co_ BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT)_co_\n            betaAnimation        _eq_ new BABYLON.Animation(_qt_camBeta_qt__co_ _qt_beta_qt__co_ 30_co_ BABYLON.Animation.ANIMATIONTYPE_FLOAT_co_ BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT)_co_\n            targetAnimation      _eq_ new BABYLON.Animation(_qt_camTarget_qt__co_ _qt_target_qt__co_ 30_co_ BABYLON.Animation.ANIMATIONTYPE_VECTOR3_co_ BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT)_co_\n            newTarget            _eq_ new BABYLON.Vector3(newPosX_co_(Ø.tyN(newPosY)?newPosY_dd_ψ(0))_co_newPosZ)_co_\n            thenStopCA           _eq_ ()_eq_&gt_sm_setTimeout(stopCA_co_150)_co_\n            newRadius            _eq_ Ø.PN(zoomLevel[zoom])?zoomLevel[zoom]_dd_zoomLevel[0]_co_alpha_co_beta_co_radiusKeys_co_alphaKeys_co_betaKeys_co_targetKeys_co_twoPI_eq_pi+pi_sm_\n\n        startCA()_sm_\n\n        newAlpha                 _eq_ Ø.tyN(newAlpha)?newAlpha_dd_standardAlpha_sm_\n        newBeta                  _eq_ Ø.tyN(newBeta)?newBeta_dd_standardBeta_sm_\n\n        alpha                    _eq_ (camera.alpha+twoPI) % twoPI_sm_\n        beta                     _eq_ (camera.beta+twoPI) % twoPI_sm_\n\n        targetKeys _eq_ [{\n          frame    _dd_ 0_co_\n          value    _dd_ camera.target\n        }_co_ {\n          frame    _dd_ 100_co_\n          value    _dd_ newTarget\n        }]_sm_\n        radiusKeys _eq_ [{\n          frame    _dd_ 0_co_\n          value    _dd_ camera.radius\n        }_co_ {\n          frame    _dd_ 100_co_\n          value    _dd_ newRadius\n        }]_sm_\n        alphaKeys  _eq_ [{\n          frame    _dd_ 0_co_\n          value    _dd_ alpha\n        }_co_ {\n          frame    _dd_ 100_co_\n          value    _dd_ newAlpha\n        }]_sm_\n        betaKeys   _eq_ [{\n          frame    _dd_ 0_co_\n          value    _dd_ beta\n        }_co_ {\n          frame    _dd_ 100_co_\n          value    _dd_ newBeta\n        }]_sm_\n\n        targetAnimation.setKeys(targetKeys)_sm_\n        radiusAnimation.setKeys(radiusKeys)_sm_\n        alphaAnimation.setKeys(alphaKeys)_sm_\n        betaAnimation.setKeys(betaKeys)_sm_\n        camera.animations.push(targetAnimation)_sm_\n        camera.animations.push(radiusAnimation)_sm_\n        camera.animations.push(alphaAnimation)_sm_\n        camera.animations.push(betaAnimation)_sm_\n        scene.beginAnimation(camera_co_0_co_100_co_false_co_5_co_thenStopCA)_sm_\n      }_sm__lt_/code_gt__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"sable","Date":"2018-08-05T04:33:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#DD2IDJ_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#DD2IDJ_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe above pg implements controls that are similar to most mapping solutions (panning keeps mouse in same position_co_ as does zooming)_co_ and is basically a stripped down version of the control system I used _lt_a href_eq__qt_https_dd_//www.volvooceanrace.com/static/assets/virtualeye/volvobabylon/_qt_ rel_eq__qt_external nofollow_qt__gt_here_lt_/a_gt_ (though there the camera was also heavily modified so as to allow both rotation around the globe and about the surface target. The 2d mode available through the tools menu could have been done using the control scene from the pg and the standard camera however. Touch controls are also implemented there but not in the above pg). There may be a more idiomatic way of implementing custom controls though.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m not sure if this is entirely what you_t_re looking for (2d plane navigation)_co_ though I think it could be extended to work in 3d zooming in to a plane parallel to the viewport. Let me know if anything in there is unclear.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dreik","Date":"2018-08-06T06:16:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t@sable\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat was just perfect for my usage _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ Now I only need to understand it and everything will be fine.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]