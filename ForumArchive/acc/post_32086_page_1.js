[{"Owner":"Quant3D","Date":"2017-08-01T17:45:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMy understanding is that every instance of a material requires a separate draw call. In a scene with many similar meshes_co_ it would be nice to have them share one material but have basic differentiation by color or transparency.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs this possible without creating many materials or looping over lots of vertex data?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn other words_co_ does the standard material shader allow for color as an attribute that can be set per mesh?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-08-01T20:22:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tnope as all information regarding rendering are handled by the material (and its shader).Â \n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust so you know_dd_ even if you have only one material shared by multiple meshes_co_ there is still one draw call per mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOnly way to reduce draw calls is to use instances (which are also constrained to strictly use the same material)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]