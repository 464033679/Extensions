[{"Owner":"viktov","Date":"2014-06-10T12:31:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello everyone_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The project Im working on requires creating and removing certain amount of meshes at runtime._lt_/p_gt__lt_p_gt_When camera approches defined position I create_co_ lets say_co_ 100 meshes._lt_/p_gt__lt_p_gt_When camera moves away I dispose these meshes and materials._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And everything works as expected on FF and Chrome but on IE the performance decreases dramatically after creating (and disposing) few thousands meshes. IE behaves like it keeps all these objects forever_co_ although there is no significant growth of memmory used. Scene animation gets jumpy and application becomes useless._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This effect is caused by the code_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_function ShowHideDetails() {    for (i _eq_ 0_sm_ i &lt_sm_ segments.length_sm_ i++) {        var segment _eq_ segments[i]_sm_        var segmentPosition _eq_ new BABYLON.Vector3(segment.x_co_ segment.y_co_ segment.z)_sm_                                if (!segment.isLoaded &amp_sm_&amp_sm_ getDistance(scene.activeCamera.position_co_ segmentPosition) &lt_sm_ 150) { //create objects                for (j _eq_ 0_sm_ j &lt_sm_ segment.p.length_sm_ j++) {                    face _eq_ BABYLON.Mesh.CreatePlane(_qt_f_qt_ + segment.id + _qt___qt_ + j_co_ 1_co_ scene)_sm_                    face.scaling.x _eq_ segment.p[j].width_sm_                    face.scaling.y _eq_ segment.p[j].height_sm_                    face.position.x _eq_ segment.x + segment.p[j].x + segment.p[j].width / 2_sm_                    face.position.y _eq_ segment.p[j].y + segment.p[j].height / 2_sm_                    face.position.z _eq_ segment.z + segment.p[j].z - 0.1_sm_                                        var material0 _eq_ new BABYLON.StandardMaterial(_qt_m_qt_ + segment.id + _qt___qt_ + j_co_ scene)_sm_                    material0.specularColor _eq_ new BABYLON.Color3(0_co_ 0_co_ 0)_sm_                    face.material _eq_ material0_sm_                }                segment.isLoaded _eq_ true_sm_                    }        if (segment.isLoaded &amp_sm_&amp_sm_ getDistance(scene.activeCamera.position_co_ segmentPosition) &gt_sm_ 150) {  //dispose objects                        for (j _eq_ 0_sm_ j &lt_sm_ segment.p.length_sm_ j++) {                var material _eq_ scene.getMaterialByName(_qt_m_qt_ + segment.id + _qt___qt_ + j)_sm_                if (material) {                        material.dispose(true)_sm_                }                var face _eq_ scene.getMeshByID(_qt_f_qt_ + segment.id + _qt___qt_ + j)_sm_                if (face) {                                       face.dispose(true)_sm_                }            }            segment.isLoaded _eq_ false_sm_        }            }}_lt_/pre_gt__lt_p_gt_Am I missing something? Or should I try some other approach? Any ideas?_lt_/p_gt__lt_p_gt_I_t_ll be grateful for any suggestions._lt_/p_gt__lt_p_gt_Thanks._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-06-10T15:44:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi Viktov_co_ welcome to the forum... good to have you with us.  I have no definitive answers for you_co_ but I did find _lt_u_gt__lt_strong_gt__lt_a href_eq__qt_http_dd_//blogs.msdn.com/b/eternalcoding/archive/2013/09/04/reducing-the-pressure-on-the-garbage-collector-by-using-the-f12-developer-bar-of-internet-explorer-11.aspx_qt_ rel_eq__qt_external nofollow_qt__gt_this post_lt_/a_gt__lt_/strong_gt__lt_/u_gt_.  I believe that the _t_GCFriendlyArray_t_ is now called _t__lt_strong_gt__lt_u_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Babylon/Tools/babylon.smartArray.js_qt_ rel_eq__qt_external nofollow_qt__gt_smartArray_lt_/a_gt__lt_/u_gt__lt_/strong_gt__t__co_ documented _lt_strong_gt__lt_u_gt__lt_a href_eq__qt_http_dd_//doc.babylonjs.com/page.php?p_eq_24794_qt_ rel_eq__qt_external nofollow_qt__gt_here_lt_/a_gt__lt_/u_gt__lt_/strong_gt__co_ but I might be wrong (I often am) and this might not apply to your questions.  I think the general idea is to re-use the mesh whenever possible._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Other comments from smarter people than I... are sure to follow._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-06-10T16:43:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_dd_)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_could you create a little playground to test your problem in live? (_lt_a href_eq__qt_http_dd_//www.babylonjs.com/playground_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/playground_lt_/a_gt_) _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"viktov","Date":"2014-06-11T10:46:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thank you guys for your response and some useful piece of knowledge Wingnut._lt_/p_gt__lt_p_gt_Deltakosh_co_ I created a simple demo for you to check and see what I mean._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs.com/playground/#1WWTSA_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/playground/#1WWTSA_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And it seems it is not only IE problem._lt_/p_gt__lt_p_gt_Just run this demo_co_ open task manager and watch for a couple of minutes how memmory grows and framerate falls._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-06-11T12:24:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I do not de problem of _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_framerate _lt_/span_gt_with Google Chrome and Firefox with your demo. It may be just bind a IE or not activate one option in IE ?_lt_/p_gt__lt_p_gt_I thought option _qt_acceleration material_qt__co_ eg_lt_/p_gt__lt_p_gt_It_t_s just an idea_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"viktov","Date":"2014-06-11T12:33:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_dad72 - how about memmory growth? Leave it for 10 - 15 minutes and see if the framerate falls._lt_/p_gt__lt_p_gt_I have onboard graphic card which obviously is not fast_co_ but in the begining the demo runs smoothly and after a while the performance drops dramatically._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-06-11T12:45:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok_co_I_t_ll look 15 minutes._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-06-11T13:10:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_No I_t_m still a 60 FPS.  I think that_t_s the browser or your graphics card._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"viktov","Date":"2014-06-11T13:14:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks for your information. Have you looked at task manager and browser memmory usage?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-06-11T13:52:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yes_co_ Nothing to report of my side_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"viktov","Date":"2014-06-11T14:10:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs.com/playground/#1WWTSA_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/playground/#1WWTSA_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You should see appearing and disappearing artifacts over the boxes..._lt_/p_gt__lt_p_gt_browser memmory raising_co_ framerate falling down to 0..._lt_/p_gt__lt_p_gt_Disposed objects seem to stay somewhere there... or is it something wrong with my code?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Any help would be much appreciated._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"viktov","Date":"2014-06-12T08:36:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I think I posted wrong version of demo_co_ thats why you did not see anything wrong going on._lt_/p_gt__lt_p_gt_I edited links above_co_ so now you should see what the problem is._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Dear all_co__lt_/p_gt__lt_p_gt_lets find out where the problem lays because it seems quite a serious issue._lt_/p_gt__lt_p_gt_I did check in dev tools that dispose() for the mesh is called as many times as CreateBox()._lt_/p_gt__lt_p_gt_It is the same with dispose() for the material._lt_/p_gt__lt_p_gt_So_co_ one thing Im sure is that it is not the issue of dispose() not being called._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2014-06-12T09:20:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_After 5 minutes_co_ I_t_m at 28 FPS (started at 60 FPS)_co_ 80Mo of memory used (started at 80Mo)._lt_/p_gt__lt_p_gt_Edit _dd_ Windows 8.1 - Chrome last version_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"viktov","Date":"2014-06-12T10:11:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks Temechon._lt_/p_gt__lt_p_gt_Which browser h_lt_span style_eq__qt_font-size_dd_14px_sm__qt__gt_ave you checked_co_ which system you have?_lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-size_dd_14px_sm__qt__gt_Im on Windows 7_co_ IE11_co_ FF 29.01_co_ Chrome _lt_span style_eq__qt_color_dd_#000000_sm__qt__gt__lt_span style_eq__qt_font-family_dd_arial_co_ helvetica_co_ sans-serif_sm__qt__gt__lt_span style_eq__qt_font-style_dd_normal_sm_font-weight_dd_normal_sm__qt__gt_35.0.1916.114_lt_/span_gt__lt_/span_gt__lt_/span_gt__lt_/span_gt_._lt_/p_gt__lt_p_gt_And what if you leave demo running for 20 minutes or longer?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Kilombo","Date":"2014-06-12T10:18:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_hmmmm.. Viktov_co_ I see you are declaring some vars inside some for scope (Ex_dd_ createsegments_co_ showdetails and hidedetails)_co_ although the vars had the same name_co_ and the value inside it is in fact substituted_co_ the system will instantiate a new var in memory by each loop. And that consumes a lot of memory_co_ and will keep growing and growing. Can you plz try do declare those vars outside of the loop scopes to see if the problem is relationed with that?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"kolar","Date":"2014-06-12T11:18:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_42406_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_7073_qt_ data-ipsquote-username_eq__qt_Kilombo_qt_ data-cite_eq__qt_Kilombo_qt_ data-ipsquote-timestamp_eq__qt_1402568334_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_hmmmm.. Viktov_co_ I see you are declaring some vars inside some for scope (Ex_dd_ createsegments_co_ showdetails and hidedetails)_co_ although the vars had the same name_co_ and the value inside it is in fact substituted_co_ the system will instantiate a new var in memory by each loop. And that consumes a lot of memory_co_ and will keep growing and growing. Can you plz try do declare those vars outside of the loop scopes to see if the problem is relationed with that?_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It_t_s not true_co_ read about javascript scoping and hoisting._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Kilombo","Date":"2014-06-12T11:24:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_42412_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_7073_qt_ data-ipsquote-username_eq__qt_kolar_qt_ data-cite_eq__qt_kolar_qt_ data-ipsquote-timestamp_eq__qt_1402571905_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_It_t_s not true_co_ read about javascript scoping and hoisting._lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_Don_t_t forget we have a render loop in here_co_ it_t_s not only a matter of scoping. I_t_m just saying that there could be a relation. I_t_m working on a project and had some similar problems relationed to those kind of problems. Actually I don_t_t know enough javascipt to be sure of that. Anyway. The dispose by it self doesn_t_t delete the actual object_co_ just the reference to it_co_ right? He still have to wait for the garbage collector to be cleaned. So it_t_s not 100% sure that the dispose will take the object out of memory_co_ right?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"viktov","Date":"2014-06-12T11:34:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Good point_co_ Kilombo._lt_/p_gt__lt_p_gt_I have updated demo_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs.com/playground/#1QA535_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/playground/#1QA535_lt_/a_gt__lt_/p_gt__lt_p_gt_and no doubt there is an improvement but it doesnt solve the problem._lt_/p_gt__lt_p_gt_Memory grows a bit slower_co_ but still there is +500MB in about 20 minutes using IE._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Kilombo","Date":"2014-06-12T13:17:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey viktov_co_ check this loop_dd__lt_/p_gt__lt_div_gt__lt_p_gt_In my point of view_co_ I think you are instantiating a new segmentPosition object by each iteration_co_ then if not loaded it instantiates a new standard material and color3 by each iteration. By saying this it_t_s a lot of stuff that you are instantiating_co_ where is this all going_co_ and how do you reference this earlier?_lt_/p_gt__lt_p_gt_I f I where you_co_ I would implement an array to put all this materials and segment positions_co_ so that you can reference them earlier. Something like_dd__lt_/p_gt__lt_p_gt_for (i _eq_ 0_sm_ i &lt_sm_ segments.length_sm_ i++) {_lt_br_gt_        segment _eq_ segments_lt_em_gt__sm__lt_/em_gt__lt_br_gt__lt_em_gt_       _lt_/em_gt__lt_strong_gt__lt_em_gt_ _lt_/em_gt__lt_/strong_gt__lt_u_gt__lt_em_gt_segmentPosition_lt_/em_gt__lt_em_gt__lt_em_gt_ _eq_ new _lt_/em_gt__lt_/em_gt__lt_/u_gt__lt_em_gt__lt_em_gt_BABYLON.Vector3(segment.position.x_co_ segment.position.y_co_ segment.position.z)_sm__lt_/em_gt__lt_/em_gt__lt_/p_gt__lt_p_gt__lt_em_gt__lt_em_gt_And then do the same with the materials_co_ that way you can reference them on the hide function. It looks to me that the problem is there._lt_/em_gt__lt_/em_gt__lt_/p_gt__lt_p_gt__lt_em_gt__lt_em_gt_Or else_co_ you can implement some queues and them put what you whant there (on the showdetail function)_co_ and get and dispose them later (on the hide function)._lt_/em_gt__lt_/em_gt__lt_/p_gt__lt_p_gt__lt_em_gt__lt_em_gt_ _lt_/em_gt__lt_/em_gt__lt_/p_gt__lt_p_gt__lt_em_gt__lt_em_gt_Hope I helped something _lt_/em_gt__lt_/em_gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_for (i _eq_ 0_sm_ i &lt_sm_ segments.length_sm_ i++) {        segment _eq_ segments[i]_sm_        segmentPosition _eq_ new BABYLON.Vector3(segment.position.x_co_ segment.position.y_co_ segment.position.z)_sm_                        if (!loaded[i] &amp_sm_&amp_sm_ i _eq__eq_ Math.round(Math.random() * segments.length)) {            for (j _eq_ 0_sm_ j &lt_sm_ 100_sm_ j++) {                face _eq_ BABYLON.Mesh.CreateBox(_qt_f__qt_ + i + _qt___qt_ + j_co_ 1_co_ scene)_sm_                face.scaling.x _eq_ Math.random() * 20 + 5_sm_                face.scaling.y _eq_ Math.random() * 20 + 5_sm_                face.position.x _eq_ segment.position.x + Math.random() * 50 - 25_sm_                face.position.y _eq_ 100 + Math.random() * 50_sm_                face.position.z _eq_ segment.position.z + Math.random() * 50 - 25_sm_                material _eq_ new BABYLON.StandardMaterial(_qt_m__qt_ + i + _qt___qt_ + j_co_ scene)_sm_                material.diffuseColor _eq_ new BABYLON.Color3(Math.random()_co_ Math.random()_co_ Math.random())_sm_                face.material _eq_ material_sm_            }            loaded[i] _eq_ true_sm_        }    }_lt_/pre_gt__lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"viktov","Date":"2014-06-12T14:48:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks Kilombo for your thoughts._lt_/p_gt__lt_p_gt_I see your point. And I could do something like_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs.com/playground/#QEBJS_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/playground/#QEBJS_lt_/a_gt__lt_/p_gt__lt_p_gt_but it means that I would create 10 000 meshes at once (memory peak just from the begining) and I would rather avoid this._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thats why I thought that creating meshes on demand would be a solution here but I still cant get it work as it should._lt_/p_gt__lt_p_gt_Look at this_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs.com/playground/#1KSU3X_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/playground/#1KSU3X_lt_/a_gt__lt_/p_gt__lt_p_gt_I left only meshes without any materials for the clarity of code._lt_/p_gt__lt_p_gt_I removed creation of any unneccesery objects but still there is a memory leak in this code._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Kilombo","Date":"2014-06-12T15:30:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I just declared the var face has global_co_ end removed it from the hidedetails and showdetails functions_co_ and I think it sorted it out. can you check in your browser?_lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs.com/playground/#1MBN2C%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/playground/#1MBN2C#1_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"viktov","Date":"2014-06-13T07:12:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It still doesnt work for me. Windows 7_co_ IE 11_co_ +500MB in about 15 minutes_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Im running out of ideas what might be wrong with this code _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_S.O.S._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"viktov","Date":"2014-06-13T08:50:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok_co_ guys_co_ I found a workaround._lt_/p_gt__lt_p_gt_If I clone meshes and materials instead of creating new instaces each time_co_ it works fine._lt_/p_gt__lt_p_gt_Although it still doesnt explain the memory leak when creating - disposing meshes._lt_/p_gt__lt_p_gt_So for now_co_ it solves the problem for me_co_ but if somebody would take a deeper look into it to make sure there is no bug in the framework_co_ that could be helpful._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here_t_s working code_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var segments _eq_ []_sm_var loaded _eq_ []_sm_var cube _eq_ new BABYLON.Mesh.CreateBox(_qt_cube_qt__co_ 1_co_ scene)_sm_var baseMaterial _eq_ new BABYLON.StandardMaterial(_qt_baseMaterial_qt__co_ scene)_sm_function createGround() {    var groundMaterial _eq_ new BABYLON.StandardMaterial(_qt_groundMaterial_qt__co_ scene)_sm_    var ground _eq_ BABYLON.Mesh.CreateGround(_qt_ground_qt__co_ 1000_co_ 1000_co_ 1_co_ scene_co_ false)_sm_    groundMaterial.diffuseColor _eq_ new BABYLON.Color3(0.0_co_ 0_co_ 0.5)_sm_    ground.material _eq_ groundMaterial_sm_    ground.checkCollisions _eq_ true_sm_}function createCamera() {    var freeCamera _eq_ new BABYLON.FreeCamera(_qt_freeCamera_qt__co_ new BABYLON.Vector3(0_co_ 150_co_ -500)_co_ scene)_sm_    freeCamera.maxZ _eq_ 2000_sm_    freeCamera.applyGravity _eq_ true_sm_    freeCamera.ellipsoid _eq_ new BABYLON.Vector3(40_co_ 75_co_ 20)_sm_    freeCamera.position _eq_ new BABYLON.Vector3(0_co_150_co_-800)_sm_    freeCamera.speed _eq_ 8_sm_    return freeCamera_sm_}function createSegments(){    var segment_sm_    var material_sm_    for(i _eq_ 0_sm_ i &lt_sm_ 50_sm_ i++) {        segment _eq_ cube.clone(_qt_segment_qt_ + i)_sm_        segment.scaling _eq_ new BABYLON.Vector3(50_co_50_co_50)_sm_        segment.position _eq_ new BABYLON.Vector3(Math.random() * 1000 - 500_co_ 25_co_ Math.random() * 1000 - 500)_sm_        material _eq_ baseMaterial.clone(_qt_segmentMaterial_qt_ + i)_sm_        material.diffuseColor _eq_ new BABYLON.Color3(Math.random()_co_ Math.random()_co_ Math.random())_sm_        segment.material _eq_ material_sm_        segments.push(segment)_sm_        loaded.push(false)_sm_    }}function ShowDetails() {    var face_sm_    var material_sm_    for (i _eq_ 0_sm_ i &lt_sm_ segments.length_sm_ i++) {        if (!loaded[i] &amp_sm_&amp_sm_ i _eq__eq_ Math.round(Math.random() * segments.length)) {            for (j _eq_ 0_sm_ j &lt_sm_ 100_sm_ j++) {                face _eq_ cube.clone(_qt_f__qt_ + i + _qt___qt_ + j)_sm_                face.id _eq_ _qt_f__qt_ + i + _qt___qt_ + j_sm_                face.scaling.x _eq_ Math.random() * 20 + 5_sm_                face.scaling.y _eq_ Math.random() * 20 + 5_sm_                face.position.x _eq_ segments[i].position.x + Math.random() * 50 - 25_sm_                face.position.y _eq_ 100 + Math.random() * 50_sm_                face.position.z _eq_ segments[i].position.z + Math.random() * 50 - 25_sm_                material _eq_ baseMaterial.clone(_qt_m__qt_ + i + _qt___qt_ + j)_sm_                material.diffuseColor _eq_ new BABYLON.Color3(Math.random()_co_ Math.random()_co_ Math.random())_sm_                face.material _eq_ material_sm_            }            loaded[i] _eq_ true_sm_        }    }}function HideDetails(){    var face_sm_    var material_sm_    for (i _eq_ 0_sm_ i &lt_sm_ segments.length_sm_ i++) {        if (loaded[i]) {            for (j _eq_ 0_sm_ j &lt_sm_ 100_sm_ j++) {                material _eq_ scene.getMaterialByName(_qt_m__qt_ + i + _qt___qt_ + j)_sm_                if (material) {                    material.dispose()_sm_                }                face _eq_ scene.getMeshByID(_qt_f__qt_ + i + _qt___qt_ + j)_sm_                if (face) {                    face.dispose()_sm_                }            }            loaded[i] _eq_ false_sm_        }            }}createGround()_sm_createSegments()_sm_var camera _eq_ createCamera()_sm_camera.attachControl(canvas_co_ false)_sm_var light _eq_ new BABYLON.HemisphericLight(_qt_hemi_qt__co_ new BABYLON.Vector3(0_co_ 1_co_ 0)_co_ scene)_sm_setInterval(function () { ShowDetails()_sm_ }_co_ 500)_sm_setInterval(function () { HideDetails()_sm_ }_co_ 2000)_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-06-13T16:38:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thank you Viktov!! You found a MASSIVE memory leak with geometries! I fixed it now_co_ you can download the latest beta_dd_)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]