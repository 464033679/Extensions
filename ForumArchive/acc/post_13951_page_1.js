[{"Owner":"spritefire","Date":"2015-04-20T14:26:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I noticed that there is a function to create a screenshot (_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/wiki/Render-scene-on-a-PNG-(Screenshot)_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/wiki/Render-scene-on-a-PNG-(Screenshot)_lt_/a_gt_)_co_ however couldn_t_t find any information about being able to create a screenshot of the canvas and then it being saved on the server._lt_br_gt_Is it possible to do this? and if so how would I specify the location?_lt_br_gt__lt_br_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-04-20T14:39:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Babylon has no connection to the server. You will have to render the png_co_ and upload the file using XMLHttpRequest_co_ and as you have the PNG as string_co_ it is a simple POST request (and not a file upload)._lt_/p_gt__lt_p_gt_I did that in the material editor - _lt_a href_eq__qt_https_dd_//github.com/RaananW/BabylonJS-Material-Editor/blob/196a2a4f7af523151bcf4e1a721fe88dbfcd0b46/MaterialEditor/material/MaterialController.ts#L177_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/RaananW/BabylonJS-Material-Editor/blob/196a2a4f7af523151bcf4e1a721fe88dbfcd0b46/MaterialEditor/material/MaterialController.ts#L177_lt_/a_gt_ (using angular in that case). Should work the same using any other framework.  _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"spritefire","Date":"2015-04-20T16:20:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I must be doing something wrong or missing something. _lt_br_gt_When I render the PNG using_lt_br_gt__lt_br_gt_var screenshot _eq_ new BABYLON.Tools.CreateScreenshot(engine_co_ myCamera_co_ 400)_sm__lt_/p_gt__lt_div_gt_console.log(screenshot)_sm__lt_br_gt__lt_br_gt_It automatically starts the download (don_t_t want it to download on the client end_co_ just want it to take a snapshot and send to server) and the console returns_dd_ _lt_br_gt_d.CreateScreenshot {}_lt_br_gt__lt_br_gt_and not the PNG as a string._lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-04-20T20:12:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi SF_co_ good to see you again._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You_t_ve read this?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//babylondoc.azurewebsites.net/page.php?p_eq_22691_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylondoc.azurewebsites.net/page.php?p_eq_22691_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The result will be automatically downloaded if your browser supports it_co_ otherwise it will be displayed on a new tab_co_ it will be in any cases a PNG picture._lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now let_t_s wander to ... _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Babylon/Tools/babylon.tools.js#L406_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Babylon/Tools/babylon.tools.js#L406_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_There_t_s your function.  yay!  But we only care about line 447 - Tools.DumpFramebuffer(width_co_ height_co_ engine)_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So now let_t_s go to line 356... and there_t_s our dumper.  yay!  But we only care about line 387.  (and maybe 385). _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Line 387 checks to see if your browser is modern enough to do auto-download.  If lines 385 - 404 were removed_co_ and replaced with..._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_385 return imageData.data_sm__lt_/pre_gt__lt_p_gt_...that would make spritefire a happy person.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Just force it_co_ SF.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  Put this code... somewhere _qt_early_qt_ in your scene (before calling createScreenShot)_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_        BABYLON.Tools.DumpFramebuffer _eq_ function (width_co_ height_co_ engine) {            console.log(_qt_MY version of DumpFramebuffer - Activated!_qt_)_sm_            // Read the contents of the framebuffer            var numberOfChannelsByLine _eq_ width * 4_sm_            var halfHeight _eq_ height / 2_sm_            //Reading datas from WebGL            var data _eq_ engine.readPixels(0_co_ 0_co_ width_co_ height)_sm_            for (var i _eq_ 0_sm_ i &lt_sm_ halfHeight_sm_ i++) {                for (var j _eq_ 0_sm_ j &lt_sm_ numberOfChannelsByLine_sm_ j++) {                    var currentCell _eq_ j + i * numberOfChannelsByLine_sm_                    var targetLine _eq_ height - i - 1_sm_                    var targetCell _eq_ j + targetLine * numberOfChannelsByLine_sm_                    var temp _eq_ data[currentCell]_sm_                    data[currentCell] _eq_ data[targetCell]_sm_                    data[targetCell] _eq_ temp_sm_                }            }            // Create a 2D canvas to store the result            if (!screenshotCanvas) {                screenshotCanvas _eq_ document.createElement(_t_canvas_t_)_sm_            }            screenshotCanvas.width _eq_ width_sm_            screenshotCanvas.height _eq_ height_sm_            var context _eq_ screenshotCanvas.getContext(_t_2d_t_)_sm_            // Copy the pixels to a 2D canvas            var imageData _eq_ context.createImageData(width_co_ height)_sm_            //cast is due to ts error in lib.d.ts_co_ see here - _lt_a href_eq__qt_https_dd_//github.com/Microsoft/TypeScript/issues/949%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0_qt__gt_https_dd_//github.com/Microsoft/TypeScript/issues/949           _lt_/a_gt_ var castData _eq_ imageData.data_sm_            castData.set(data)_sm_            context.putImageData(imageData_co_ 0_co_ 0)_sm_            return imageData.data_sm_        }_sm__lt_/pre_gt__lt_p_gt_Override!  yay!  This should work fine. I call it _qt_hijacking_qt_ a framework function (customizing)... and it feels really good when it works.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  Watch your console messages to make sure the framework is calling YOUR special version.  There might be better ways to do this_co_ but_co_ this might work.  Hopefully_co_ others will comment.  Be well!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"spritefire","Date":"2015-04-21T00:59:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks!! _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_br_gt__lt_br_gt_(been away a bit doing studies but should be back here a bit more now that an assignment is out of the way) _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]