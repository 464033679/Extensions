[{"Owner":"MackeyK24","Date":"2017-10-16T13:13:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey guys... got a couple of quick questions about raycasting...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1... Is recasting an _t_Expensive Thing_t_ for BabylonJS. I ask because in unity_co_ a fully scripted player character might by casting 6  - 10 rays on each frame...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOne ray might be be checking ground distance... Four separate rays might be casting to the four near clip plane points of the camera to check for Collision and or occlusion and one ray might checking wall distance ... and so on... Now that apparently is FINE in Unity on a native platform... \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWould that many rays be TOO MUCH for a BabylonJS Game... ???\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2... Is is possible to create a _qt_Sphere Cast_qt_ type functionality like Unity Has... Example_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_Physics.SphereCast\n\npublic static bool SphereCast(Vector3 origin_co_ float radius_co_ Vector3 direction_co_ out RaycastHit hitInfo_co_ float maxDistance _eq_ Mathf.Infinity_co_ int layerMask _eq_ DefaultRaycastLayers_co_ QueryTriggerInteraction queryTriggerInteraction _eq_ QueryTriggerInteraction.UseGlobal)_sm_\nParameters\n\norigin\tThe center of the sphere at the start of the sweep.\nradius\tThe radius of the sphere.\ndirection\tThe direction into which to sweep the sphere.\nhitInfo\tIf true is returned_co_ hitInfo will contain more information about where the collider was hit. (See Also_dd_ RaycastHit).\nmaxDistance\tThe max length of the cast.\nlayerMask\tA Layer mask that is used to selectively ignore colliders when casting a capsule.\nqueryTriggerInteraction\tSpecifies whether this query should hit Triggers.\nReturns\n\nbool True when the sphere sweep intersects any collider_co_ otherwise false.\n\nDescription\n\nCasts a sphere along a ray and returns detailed information on what was hit.\n\nThis is useful when a Raycast does not give enough precision_co_ because you want to find out if an object of a specific size_co_ such as a character_co_ will be able to move somewhere without colliding with anything on the way. Think of the sphere cast like a thick raycast. In this case the ray is specified by a start vector and a direction.\n\nNotes_dd_ SphereCast will not detect colliders for which the sphere overlaps the collider. Passing a zero radius results in undefined output and doesn_t_t always behave the same as Physics.Raycast.\n\nSee Also_dd_ Physics.SphereCastAll_co_ Physics.CapsuleCast_co_ Physics.Raycast_co_ Rigidbody.SweepTest.\n\nusing UnityEngine_sm_\nusing System.Collections_sm_\n\npublic class ExampleClass _dd_ MonoBehaviour\n{\n    CharacterController charCtrl_sm_\n\n    void Start()\n    {\n        charCtrl _eq_ GetComponent&lt_sm_CharacterController&gt_sm_()_sm_\n    }\n\n    void Update()\n    {\n        RaycastHit hit_sm_\n\n        Vector3 p1 _eq_ transform.position + charCtrl.center_sm_\n        float distanceToObstacle _eq_ 0_sm_\n\n        // Cast a sphere wrapping character controller 10 meters forward\n        // to see if it is about to hit anything.\n        if (Physics.SphereCast(p1_co_ charCtrl.height / 2_co_ transform.forward_co_ out hit_co_ 10))\n        {\n            distanceToObstacle _eq_ hit.distance_sm_\n        }\n    }\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t Yo _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ ... Gotta ping you in here ???\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-10-16T18:34:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. It depends on the scene _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_ but 6 rays seems acceptable. Perhaps we can find even faster way depending on the final goal\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. We support sphere vs spehre culling_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Culling/babylon.boundingSphere.ts#L50_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Culling/babylon.boundingSphere.ts#L50_lt_/a_gt_ or sphere vs point_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Culling/babylon.boundingSphere.ts#L36_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Culling/babylon.boundingSphere.ts#L36_lt_/a_gt_ or box vs sphere_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Culling/babylon.boundingBox.ts#L127_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Culling/babylon.boundingBox.ts#L127_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWith all these tools you should be able to find what you need _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]