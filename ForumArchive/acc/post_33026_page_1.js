[{"Owner":"acarvallo","Date":"2017-09-21T15:47:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello Babylon.js people_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am trying to make a viewer for working with BIM stuff (building and all the stuff inside)_co_ so there can be quite a lot of objects and having each one in its own mesh isn_t_t really an option.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo I tried to use two SPS_co_ a single mesh and two meshes_co_ one mesh/sps for opaque objects and another for transparent ones (saw the idea in another post on the forum).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThing is I need to _qt_highlight_qt__co_ hide and have transparent not pickable objects too.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is what I have for now _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_image.png.dfb34028d24d1b1c10d20874ec005b85.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_14912_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_09/image.png.dfb34028d24d1b1c10d20874ec005b85.png_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere is a space (big transparent blue-ish)_co_ with objects in it (yellow-ish opaque ones in the front) and also transparent grey _qt_boxes_qt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo be able to switch objects visibility/color quickly I tried to put all objects in _lt_u_gt_both_lt_/u_gt_ meshes _dd_\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\topaque ones hidden in the transparent mesh\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\ttransparent ones hidden in the opaque mesh\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n_lt_p_gt_\n\tThen just toggle visibility_co_ but then this kind of thing can happen _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_image.png.31578c9168736473606b45f37a0debbf.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_14928_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_09/image.png.31578c9168736473606b45f37a0debbf.png_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe front box is now transparent with a red color_co_ the other _qt_yellow-ish_qt_ box is partly hidden with a red tint (_lt_u_gt_that_t_s correct_lt_/u_gt_)_co_ but the grey opaque box isn_t_t hidden/tinted (_lt_u_gt_that_t_s not ok_lt_/u_gt_) at all and keeps its grey color_co_ looking like it is closer to the camera while it is actually not.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI feel like I tried quite a lot of things and combinations so I may have missed the working one.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI also posted an issue trying to have a simple example to demonstrate what felt like a bug _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/issues/2832_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/issues/2832_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs I wrote there_co_ using _lt_strong_gt_needDepthPrePass_lt_/strong_gt_ kind of fixes it_co_ but not really since it messes up transparent objects inside another transparent object.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlpha mode is promising but the ghost/shiny effect is too powerful _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_image.png.fbfa0c8ae572309b73d50957dd9aaa9f.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_14929_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_09/image.png.fbfa0c8ae572309b73d50957dd9aaa9f.png_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI would need the behaviour_co_ without the side effect...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny help/suggestions is welcome_co_ and if you have questions or need more details_co_ feel free to ask _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tReferences _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/resources/transparency_and_how_meshes_are_rendered_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/resources/transparency_and_how_meshes_are_rendered_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/resources/how_to_use_blend_modes_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/resources/how_to_use_blend_modes_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t\t\t\n\n_lt_span class_eq__t_ipsType_reset ipsType_medium ipsType_light_t_ data-excludequote_gt_\n\t_lt_strong_gt_Edited _lt_time datetime_eq__t_2018-04-06T16_dd_23_dd_50Z_t_ title_eq__t_04/06/2018 04_dd_23  PM_t_ data-short_eq__t_Apr 6_t__gt_April 6_lt_/time_gt_ by acarvallo_lt_/strong_gt_\n\t\n\t\t_lt_br_gt_Update dead links (tutorials &gt_sm_ resources)\n\t\n\t\n_lt_/span_gt_\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-09-21T16:19:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello in your case the only way out seems to be using premultiplied alpha mode\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tsomething along these lines_dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#JB6H3P%233_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#JB6H3P#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheck line #19_co_  63_co_ 64_co_ 65\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"acarvallo","Date":"2017-09-25T10:00:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWell_co_ I see more or less the idea (the ALPHA_PREMULTIPLIED isn_t_t on the page about blend modes though)_co_ and I guess the scale() on the color is to counter the ghost/glow effect_co_ produced by the ALPHA_PREMULTIPLIED _dd_p\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSide note_co_ I didn_t_t include in my first post_co_ my objects can have different vertex colors_co_ when I add an object_co_ I create a blank mesh_co_ assign a BABYLON.VertexData with positions_co_ indices_co_ normals_co_ colors and then add that mesh to the SPS_co_ setting _lt_strong_gt_computeParticleColor_lt_/strong_gt_ to false.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI multiplied each vertex color by its matching alpha though_co_ and it is kind of working_co_ here is the behaviour (a video is better than trying to explain with words) _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//sendvid.com/0wsdq652_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//sendvid.com/0wsdq652_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn short_co_ it works if I start by highlighting one of the grey box behind.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is how I _qt_highlight_qt_ an object _dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_    var colors _eq_ new Float32Array(vertexCount * 4)_sm_\n    for (var j _eq_ 0_sm_ j &lt_sm_ vertexCount_sm_ j++) {\n        colors[j * 4 + 0] _eq_ color.r_sm_\n        colors[j * 4 + 1] _eq_ color.g_sm_\n        colors[j * 4 + 2] _eq_ color.b_sm_\n        colors[j * 4 + 3] _eq_ color.a_sm_\n    }\n\n    SPST.mesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.ColorKind_co_ colors_co_ startIndex * 4 * 4)_sm_\n\n    // If object is opaque\n    if (obj.geometry.sps.name _eq__eq_ _qt_SPSO_qt_) {\n        var pIndex _eq_ obj.geometry.particleIndex_sm_\n        SPST.particles[pIndex].isVisible _eq_ true_sm_\n        SPST.setParticles(pIndex_co_ pIndex)_sm_\n        SPSO.particles[pIndex].isVisible _eq_ false_sm_\n        SPSO.setParticles(pIndex_co_ pIndex)_sm_\n    }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tAnd the _qt_unhighlight_qt_ _dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_    // Omitted_co_ colors is filled with original vertex colors for the matching object\n\n    if (obj.geometry.sps.name _eq__eq_ _qt_SPSO_qt_) {\n        var pIndex _eq_ obj.geometry.particleIndex_sm_\n        SPSO.particles[pIndex].isVisible _eq_ true_sm_\n        SPSO.setParticles(pIndex_co_ pIndex)_sm_\n        SPST.particles[pIndex].isVisible _eq_ false_sm_\n        SPST.setParticles(pIndex_co_ pIndex)_sm_\n    } else {\n        obj.geometry.sps.mesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.ColorKind_co_ colors_co_ startIndex * 4 * 4)_sm_\n    }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tSo basically_co_ the scene is always correct at first_co_ it_t_s just wrong when switching alpha/visibility_co_ again thanks for any reply_co_ and if you have a better way of doing what I want to achieve I_t_ll be glad to read your suggestions _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t(Also replied in the issue)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-09-25T15:27:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m sure we can do better _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tWe just need a repro in the PG. We have several weapons to tackle this issue (forceDepthWrite and separateCullingPass were added just for that _dd_))\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"acarvallo","Date":"2017-09-26T16:52:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWell_co_ it would appear that after trying a bunch of things I messed up _lt_img alt_eq__qt__dd_mellow_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_mellow.png_qt_ title_eq__qt__dd_mellow_dd__qt_ /_gt_. I was basically doing this when adding meshes as particles in the SPS _dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// If original mesh is transparent\nif (shape.material.alpha &lt_sm_ 1.0) {\n    SPSO.particles[index].isVisible _eq_ false_sm_\n} else {\n    SPST.particles[index].isVisible _eq_ true_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tSo opaque original meshes added resulted in both opaque &amp_sm_ transparent particles being drawn_co_ which leads to strange transparency issues.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust changing previous code_co_ replacing _qt_SPST.particles[index].isVisible _eq_ true_sm__qt_ by _qt_SPST.particles[index].isVisible _eq_ _lt_strong_gt_false_lt_/strong_gt__sm__qt_ fixes my issue_co_ but create another one...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow I just have a _qt_blink_qt_ effect when I highlight opaque particles_co_ like this _dd_ _lt_a href_eq__qt_https_dd_//sendvid.com/ogdv46mn_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//sendvid.com/ogdv46mn_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd *sigh* I finally found the issue by debugging_co_ it was because the bounding box/sphere was empty for the SPST in case (as it was in the video I linked just before) there are only opaque objects_co_ I tried setting\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_SPST.computeBoundingBox _eq_ true_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tBut if I call the following function (refreshVisibleSize()_sm_) each time I switch visibility of a particle_co_ it works !\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_SPST.refreshVisibleSize()_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo sorry for my mistakes_co_ thanks for the implication_co_ I really appreciate it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOne more question_co_ shouldn_t_t setting _lt_strong_gt_computeBoundingBox _lt_/strong_gt_to _lt_strong_gt_true_lt_/strong_gt_ refresh the bounding box or is it because I call _lt_strong_gt_setParticles(id_co_ id)_lt_/strong_gt_ (so updating a single particle and not updating whole SPS_t_s particles) ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-09-26T22:22:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThis last question is for _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5453_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/_qt_ rel_eq__qt__qt__gt_@jerome_lt_/a_gt_ for sure _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-09-27T03:06:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tLet_t_s summarize _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- Adding a shape to the SPS only copies the shape geometry (vertices_co_ indices_co_ normals_co_ uvs_co_ colors). The shape material isn_t_t copied. As the alpha is a property of the material of the shape_co_ it_t_s ignored by the SPS. That said_co_ you can then set your own material to the SPS or play with each particle color/alpha (managing the particle color4 property and setting the SPS mesh property _lt_em_gt_hasVertexAlpha_lt_/em_gt_ to _lt_em_gt_true_lt_/em_gt_)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- As its name says_co_ the particle property .isVisible just makes the particle visible or not whaterver other considerations.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- SPS.computeBoundingBox _eq_ true jus enables to global SPS mesh BBox internal computation within the next call to _lt_em_gt_setParticles() _lt_/em_gt_instead of having another side computation. This is faster and this is useful for SPS whose sizes evolves with the time (an explosion for instance). This is related to the global SPS mesh visibility/pickability relatively to the camera frustum_co_ this has nothing to do with a given particle blink.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNOTE (maybe here_t_s you answer) _dd_ when calling _lt_em_gt_setParticle(id_co_ id)_lt_/em_gt_ the particle loop doesn_t_t recompute everything but only the passed particle range (here only one _dd_ id)_co_ so the whole Bbox can_t_t be rightly updated and would have an inconsistent value (maybe I could auto-disabled it here_co_ not sure). A forced global computation will be needed with _lt_i_gt_refreshVisibleSize()._lt_/i_gt_ You could also disable before the property computeBoundingBox so its last computed value is kept or set a fixed value if the SPS size doesn_t_t change_co_ instead of calling refreshVisibleSize().\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- SPS.refreshVisibleSize() forces the immediate the SPS global mesh Bbox recomputation. This is an expensive operation_co_ not needed when using computeBoundingBox. This is useful to compute once the Bbox of a SPS that reached its maximum size and won_t_t evolve then_co_ after some particle init for instance (and thus to disable computeBoundingBox). As formerly_co_ this concerns only the global vsibility relatively to the camera frustum and not a given particle.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNot sure to help.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tA PG would be helpful.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn your video_co_ the bug doesn_t_t seem to be related to some SPS visibility (so BBox) issue_co_ because only one particle blinks at once. I would say it has something to do with the call to _lt_em_gt_setParticles(i_co_ i)_lt_/em_gt_ .... just guessing. Do you have the same effect by calling simply _lt_em_gt_setParticles()_lt_/em_gt_ ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"acarvallo","Date":"2017-10-05T13:01:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello (sorry for the late reply_co_ been a bit busy)_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFirst_co_ finally was able to put part of my viewer in a PG_dd_ _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#MNZ2VS_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#MNZ2VS_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFound what was going wrong again_co_ before starting the render loop I was copying the SPS (without their meshes being built)_co_ and building the mesh of the copy (but the copy was dropping get/set prototypes...)_co_ so setting _lt_strong_gt_computeBoundingBox_lt_/strong_gt_ did nothing (not setting the actual _lt_strong_gt__computeBoundingBox_lt_/strong_gt_ attribute).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo _lt_u_gt__lt_strong_gt_all is good_lt_/strong_gt__lt_/u_gt_ on Babylon_t_s side regarding bounding box stuff_co_ and what is depending on it (ray/intersect).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt is now working well with my 2 SPS (but is not optimal for performance).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen I wanted to try with only a single one (having both opaque &amp_sm_ transparent objects in it)_co_ using _lt_strong_gt_forceDepthWrite_eq_true_lt_/strong_gt_ on the material used for the SPS seems to do wonderful !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOnly thing is that for some cases (one opaque object in front of another)_co_ setting the front one as transparent won_t_t make the back one visible at all (see the PG for that).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ as of now I feel like the _lt_strong_gt_separateCullingPass_lt_/strong_gt_ property of a material does nothing_co_ I can_t_t really spot a change when setting its value to false in the PG of that comment _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/issues/2832#issuecomment-331647665_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/issues/2832#issuecomment-331647665_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-10-06T22:42:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_strong style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_separateCullingPass_lt_/strong_gt__lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt__lt_span_gt_ _lt_/span_gt__lt_/span_gt_ first render the back face then the front face to get a bit of face sorting.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDo you have a PG with separateCullingPass used?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"acarvallo","Date":"2017-10-09T09:32:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYes the one from the issue_co_ when you specifically mentioned that it could be used to maybe solve my problem _dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#JB6H3P%235_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#JB6H3P#5_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs I also said_co_ _lt_strong style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_forceDepthWrite_lt_/strong_gt_ really helps but is not perfect for my real usage example_co_ and setting _lt_strong style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_separateCullingPass_lt_/strong_gt_ doesn_t_t seem to change it as well _dd_ _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#MNZ2VS%231_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#MNZ2VS#1_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-10-09T16:50:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey\n_lt_/p_gt_\n\n_lt_p_gt_\n\tcan you try to isolate the issue a bit more? Or point me precisely to the issue you have?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"acarvallo","Date":"2017-10-09T17:10:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYes I can _dd_ _lt_a href_eq__qt_https_dd_//sendvid.com/3yjykjzf_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//sendvid.com/3yjykjzf_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou don_t_t see the grey box behind_co_ when the front one becomes transparent_co_ and you don_t_t see it as well when looking through one of the yellow-ish ones for example.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat is my issue _lt_img alt_eq__qt__dd_P_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ title_eq__qt__dd_P_qt_ width_eq__qt_20_qt_ /_gt_ _co_ not /always/ seeing through transparent particles inside the same SPS.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-10-09T21:38:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYeah unfortunately I see no easy way to deal with a SPS here\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWith separated meshes_co_ this will not be a problem at all but inside the same SPS it could be complex.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo why not consider that the SPS is not transparent and when you want to highlight a piece of it_co_ you just need to hide it and instead display a transparent mesh. So the SPS is not transparent and the transparent mesh will be correctly displayed\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t(Does it make sense?)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"acarvallo","Date":"2017-10-09T22:25:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt totally makes sense_co_ unfortunately the PG is just a part of my geometry_co_ I can have a lot of objects both transparent and opaque for their initial state.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI used a SPS because it makes picking easier thanks to particles/pickedParticles_co_ but the thing I_t_m really looking for is performance_co_ may it be using a SPS_co_ a regular mesh or something else.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe you have another idea or magic property (like forceDepthWrite) in your bag of knowledge that could help ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAgain_co_ thanks for the answers !\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-10-09T23:43:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe problem we are trying to face here is clearly the need for face sorting. It is a really old problem in realtime 3d. and there is no good solution so far.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe sps is only one mesh so you cannot have face sorting at all.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPerhaps you could consider having 2 sps_dd_ one solid and one transparent?. The transparent one could be set to use forceDepthWrite and separateCullingPass\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-10-16T14:31:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMaybe this will help for the SPS _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/pull/2961_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/pull/2961_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// create a particle depth sort enabled SPS\nvar sps _eq_ new BABYLON.SolidParticleSystem(_qt_sps_qt__co_ scene_co_ {enableDepthSort_dd_ true})_sm_\n// then later only ...\nsps.setParticles()_sm_   // and the particle are depth sorted each call\n// We can skip the sorting at any time (or reactive it) _dd_ sps and camera not moving anymore\nsps.depthSortParticles _eq_ false_sm_  // true by default when enableDepthSort is set to true_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tDocumentation and PG to come\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-10-16T18:32:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYOU ARE FREAKING ROCKING MAN!\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-10-17T08:09:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tLet_t_s start with a simple PG_co_ a SPS populated with transparent solid particles _dd__lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#EPBTB7%233_qt_ rel_eq__qt_external nofollow_qt__gt_ http_dd_//playground.babylonjs.com/#EPBTB7#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs you can notice when rotating the camera_co_ because the SPS is a standard mesh and because transparent standard meshes don_t_t sort their faces according to the camera position for performance reasons_co_ the transparent particles are weirdly rendered from some points of view. This is unfortunately the expected behaviour when dealing with _qt_auto-transparency_qt_ (transparency applied to itself).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow the SPS provides a new feature called the particle depth sort _dd_ _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#EPBTB7%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#EPBTB7#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe internal SPS geometry is recomputed each frame so the most distant particles are drawn before the closest ones.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNote this process is CPU intensive so it_t_s done only at the particle level and not at the facet level.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_s_gt_Note also that_co_ for now_co_ the distance between the camera global position and the particle position is computed only in the SPS local space. This means that if the SPS mesh is scaled_co_ translated or rotated_co_ this distance is no longer pertinent. So_co_ for now_co_ it_t_s better to set up your SPS internal particle positions_co_ rotations_co_ etc_co_ like these were World ones and to let the SPS unrotated_co_ unscaled at the origin (it_t_s designed to do this very well actually)._lt_/s_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_s_gt_I need to think about the opportunity to add the SPS global transformation (translation_co_ rotation_co_ scaling) to the current particle location to get a septh sort working in every case. It would be much more computation_co_ so not sure it_t_s worh it._lt_/s_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t[EDIT] I just did a PR fixing this at a decent performance. Now the SPS can be rotated or translated and the particle will keep sorted from the camera as expected.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-10-17T14:34:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/28572-acarvallo/?do_eq_hovercard_qt_ data-mentionid_eq__qt_28572_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/28572-acarvallo/_qt_ rel_eq__qt__qt__gt_@acarvallo_lt_/a_gt_ please let us know if this parameter now helps to solve your transparency issue\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"acarvallo","Date":"2018-04-06T15:49:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHm_co_ I should have activated notifications_co_ could have answered earlier _dd_|\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_  thanks _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5453_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/_qt_ rel_eq__qt__qt__gt_@jerome_lt_/a_gt_ for the SPS particle depth sort_co_ but it does nothing in my case due to all my particles_t_s position being Zero (only using position buffer from the original mesh for each particle).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd you_t_re absolutely right about having 2 SPS _lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt__co_ it_t_s indeed what I have in my actual project_co_ but I can_t_t seem to have a perfect (or decent) looking render._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is a playground to see what_t_s going on _dd_ _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#BQLAVV%232_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#BQLAVV#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd 2 screenshots_co_ camera looking from one side_co_ then the opposite one _dd_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ data-fileid_eq__qt_17815_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_04/image.png.1095459283cab0006ab73afbadaa933c.png_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_image.thumb.png.f62146c91ebd38e3b74c2964537c92a9.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_17815_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_04/image.thumb.png.f62146c91ebd38e3b74c2964537c92a9.png_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI would basically like to have the render on the right be of the same type as the one on the left.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTried to play a bit with depth/culling options and alphaMode (as you can see starting from line 48)_co_ but I couldn_t_t find a really good combination.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-04-06T18:05:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tmaybe this one then _dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/how_to/how_to_use_facetdata#facet-depth-sort_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/how_to/how_to_use_facetdata#facet-depth-sort_lt_/a_gt_ ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"acarvallo","Date":"2018-04-09T14:39:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_ thanks for the link_co_ I wasn_t_t aware of this feature !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUpdated PG _dd_ _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#BQLAVV%233_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#BQLAVV#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s for sure better_co_ but there still seems to be some artifacts _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_17836_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_04/image.png.e18b6da7636ceb8abb3027c25ac95319.png_qt_ alt_eq__qt_image.png.e18b6da7636ceb8abb3027c25ac95319.png_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s strange because they should all be similar elements_co_  so I would think they will render the same. I guess it_t_s because the faces touching each other have the same positions.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNot sure if there is much more doable with facets data_co_ another possible option could be to depth sort particles_co_ but use_co_ for example_co_ the center of the bounding box of each particle instead of its position.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]