[{"Owner":"BMWPilote","Date":"2018-06-25T02:48:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI am just wondering if there is a more efficient way of adding a lot of meshes than adding them one by one?Â \n_lt_/p_gt_\n\n_lt_p_gt_\n\tCurrently it seems that we can only use the constructor of Mesh which adds it into the scene automatically. But when we have a lot of (100 000) for example_co_ the performance will be crazily low...anyway_co_ is there any way to add it more quickly?Â \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BMWPilote","Date":"2018-06-25T04:46:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAnother question is can we know how much memory in byte that each Mesh consumes?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2018-06-25T06:20:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/31898-bmwpilote/?do_eq_hovercard_qt_ data-mentionid_eq__qt_31898_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/31898-bmwpilote/_qt_ rel_eq__qt__qt__gt_@BMWPilote_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFrom my experience_co_ cloning is the most efficient method for drawing many meshes. However_co_ if they are all different_co_ then no way. Also_co_ 100_co_000 meshes displayed at the same time is far too many meshes to display with any attributes - even if they are low res. WebGL will attempt this_co_ however_co_ I doubt your fps would be anywhere near useful for the user. But when would you EVER need 100_co_000 meshes displayed at once? You should consider the SPS (solid particle system)_co_ as it might do what you want.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs for measuring memory usage per mesh_co_ from my experience this requires an OpenGL shader to count vertices_t_ per mesh and return this however you like. But I_t_ve never found anÂ extension to do this on many meshes in a rendered scene in WebGL. If something like this exists for babylon.js_co_ I_t_d love to know about it. You can report the memory usage for all vertices_t_ (meshes) in the scene_co_ but that_t_s all I know..\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2018-06-25T06:48:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou can import complete scenes or several scene pieces with _lt_em_gt_SceneLoader.Append()_lt_/em_gt_ instead of using _lt_em_gt_SceneLoader.ImportMesh()_lt_/em_gt_ which addÂ _qt_mesh by mesh_qt_ to the scene.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t100_co_000 meshes? it_t_s really huge. you should divide by at least 100 to 200 and separate your gameÂ into several scenes. For example a city scene_co_ you all do the city scene without the interiors_co_ and on other scenes all the scenes of interiors. That_t_s what a lot of professional games do.Â You reduce the number of meshes per scene.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen_co_ for more meshes_co_ use_co_ Octree_co_ OcclusionRequest_co_ and all that will allow you to optimize the scene. Of course you have to model in lowPoly if you want a lot of mesh on the scene.Â do not hesitate also to merge meshes to reduce their numbers too\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BMWPilote","Date":"2018-06-25T07:44:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_219350_qt_ data-ipsquote-contentid_eq__qt_38444_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1529909284_qt_ data-ipsquote-userid_eq__qt_5292_qt_ data-ipsquote-username_eq__qt_Dad72_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t51 minutes ago_co_ Dad72 said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tYou can import complete scenes or several scene pieces with _lt_em_gt_SceneLoader.Append()_lt_/em_gt_ instead of using _lt_em_gt_SceneLoader.ImportMesh()_lt_/em_gt_ which addÂ _qt_mesh by mesh_qt_ to the scene.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t100_co_000 meshes? it_t_s really huge. you should divide by at least 100 to 200 and separate your gameÂ into several scenes. For example a city scene_co_ you all do the city scene without the interiors_co_ and on other scenes all the scenes of interiors. That_t_s what a lot of professional games do.Â You reduce the number of meshes per scene.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThen_co_ for more meshes_co_ use_co_ Octree_co_ OcclusionRequest_co_ and all that will allow you to optimize the scene. Of course you have to model in lowPoly if you want a lot of mesh on the scene.Â do not hesitate also to merge meshes to reduce their numbers too\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tHow does SceneLoader.Append() work exactly? It calls new Mesh() anyway_co_ right? I would like to use Occlusion Query_co_ but seems that it is not supported on IOS?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BMWPilote","Date":"2018-06-25T07:53:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_219347_qt_ data-ipsquote-contentid_eq__qt_38444_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1529907624_qt_ data-ipsquote-userid_eq__qt_11286_qt_ data-ipsquote-username_eq__qt_dbawel_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ dbawel said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/31898-bmwpilote/?do_eq_hovercard_qt_ data-mentionid_eq__qt_31898_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/31898-bmwpilote/_qt_ rel_eq__qt__qt__gt_@BMWPilote_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tFrom my experience_co_ cloning is the most efficient method for drawing many meshes. However_co_ if they are all different_co_ then no way. Also_co_ 100_co_000 meshes displayed at the same time is far too many meshes to display with any attributes - even if they are low res. WebGL will attempt this_co_ however_co_ I doubt your fps would be anywhere near useful for the user. But when would you EVER need 100_co_000 meshes displayed at once? You should consider the SPS (solid particle system)_co_ as it might do what you want.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tAs for measuring memory usage per mesh_co_ from my experience this requires an OpenGL shader to count vertices_t_ per mesh and return this however you like. But I_t_ve never found anÂ extension to do this on many meshes in a rendered scene in WebGL. If something like this exists for babylon.js_co_ I_t_d love to know about it. You can report the memory usage for all vertices_t_ (meshes) in the scene_co_ but that_t_s all I know..\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tDB\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tYeah they are in generally very small. I have many meshes which share the same Geometry data. I used (the same) VertexData.apply() to feed them. But my question is that just creating many meshes by _qt_new_qt__co_ consumes a lot of time...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-06-25T08:43:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tplease tell us a bit more about what you_t_re trying to achieve and where you notice the bottleneck ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDo you download thousands of different meshes ? Do you build_co_ from BJS native constructors_co_ the meshes ? Do you need to display all of them in the same time on the screen (not sure there are enough pixels on the screen to display thousands meshes anyway) ? Do your meshes share the same geometry_co_ same material_co_ same colors_co_ etc ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere are tools in BJS to load scenes or meshes before starting a scene. There are also tools to clone meshes or merge them in a bigger geometry_co_ there are tools (and user practices) to optimize the rendering process too by selecting only the meshes to be rendered... well there are many ways to improve things once we know what is to be done actually _lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ˜‰_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2018-06-25T17:49:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/31898-bmwpilote/?do_eq_hovercard_qt_ data-mentionid_eq__qt_31898_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/31898-bmwpilote/_qt_ rel_eq__qt__qt__gt_@BMWPilote_lt_/a_gt_Â makes a VERY good point. cloning loads of meshes takes time. However_co_ you can keep the scene from rendering until all meshes are loaded using the Assets Manager. Never tried this with cloning_co_ but I don_t_t see why this wouldn_t_t work. Anyone have experience with this specific task?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2018-06-25T18:33:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_219353_qt_ data-ipsquote-contentid_eq__qt_38444_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1529912682_qt_ data-ipsquote-userid_eq__qt_31898_qt_ data-ipsquote-username_eq__qt_BMWPilote_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t10 hours ago_co_ BMWPilote said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tHow does SceneLoader.Append() work exactly?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tAppend () loads a scene that contains multiple meshes. ImportMesh ()_co_ only loads a single mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou look for a method to add more mesh at once. Append () is done for that.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-06-26T16:55:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tInstead of cloning I would recommend createInstance_dd_ fast and clean _lt_span_gt__lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt__gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]