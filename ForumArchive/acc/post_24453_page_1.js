[{"Owner":"mightymarcus","Date":"2016-08-13T04:44:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey 3D Gurus!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust a technical question. I_t_m making a tile editor_co_ but the tiles are cubes. What would be the best practice regarding the performance?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEvery tile is a mesh (setEnabled(false)) that acts as a reference_co_ and I can place instances from them to the level.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSomething like that (my english is horrible_co_ sorry)_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t[ ][ ][ ][ ]\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet_t_s say this is somethink like a bridge or a floor or a castle wall made of the same referencing mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo that are instances_co_ the cubes share the same geometry and the same material_co_ that_t_s clear for me.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf I would merge (with a custom function or the babylonjs function) them_co_ then it would be more vertices. That_t_s clear too.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow the question_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSince BabylonJS doesn_t_t have occlusion culling_co_ the concealed sides from the cubes will be rendered too.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow what is better_dd_ Lots of single instances with probably a higher fill rate (hidden sides in between) vs. merging the instances to a single mesh (and apply uvs again) with much more vertices?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI upload a picture to make it more clear. That walls or whatever is made of single cube instances. When I would make one mesh out of it_co_ would that be better?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks in advance.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheers. \n_lt_/p_gt_\n\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_08/tiles.png.bfb87b4a2cb0d06a9ec0155249fd527b.png_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_9016_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_08/tiles.thumb.png.255049f3abae1029a670f4c3e12b20cb.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_tiles.png_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2016-08-13T14:35:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHave you considered the Solid Particle System _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/Solid_Particle_System_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/overviews/Solid_Particle_System _lt_/a_gt_?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is a playground with moving boxes and I understand that your will not move _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#16SA9C%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#16SA9C#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mightymarcus","Date":"2016-08-13T15:38:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYes_co_ thanks for the reply. I_t_m using BabylonHx_co_ the haxe port_co_ and there it is broken. _lt_img alt_eq__qt__dd_(_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ title_eq__qt__dd_(_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tBut I tried it in the playground already. I don_t_t need that many meshes. And the performance will be sufficient with instances or merging anyway. Just wanted to know from a technical point.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe yellow and cherry boxes will move _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tUPDATE_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut that leads me to another question_dd_ if SPS is so superior fast_co_ why this can_t_t be achieved with instances? Anyway_co_ I will try that again_co_ maybe it_t_s fixed now.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2016-08-13T16:46:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_139811_qt_ data-ipsquote-contentid_eq__qt_24453_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1471102716_qt_ data-ipsquote-userid_eq__qt_17636_qt_ data-ipsquote-username_eq__qt_mightymarcus_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ mightymarcus said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tBut that leads me to another question_dd_ if SPS is so superior fast_co_ why this can_t_t be achieved with instances? Anyway_co_ I will try that again_co_ maybe it_t_s fixed now.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tOne for _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5453_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/_qt_ rel_eq__qt__qt__gt_@jerome_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-08-13T18:44:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThe SPS is just a mesh. A single mesh. If you set it as not updatable_co_ it_t_s like a standard mesh so quite fast to be rendered. Instances aren_t_t faster or slower... just a different approach.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mightymarcus","Date":"2016-08-14T13:49:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOk. So can you tell me what is better_dd_ less fillrate vs. less vertices? _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mightymarcus","Date":"2016-08-14T14:41:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI did a quick test with a ground mesh subdivided by 64 + repeated texture and 64*64 instances with the same texture.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe instances have far less vertices_co_ but cpu load is much higher because it_t_s 4096 Objects.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe subdivided ground is much faster. Thanks mightymarcus. _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-08-14T17:23:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_139811_qt_ data-ipsquote-contentid_eq__qt_24453_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1471102716_qt_ data-ipsquote-userid_eq__qt_17636_qt_ data-ipsquote-username_eq__qt_mightymarcus_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 8/13/2016 at 11_dd_38 AM_co_ mightymarcus said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tBut that leads me to another question_dd_ if SPS is so superior fast_co_ why this can_t_t be achieved with instances? Anyway_co_ I will try that again_co_ maybe it_t_s fixed now.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tInstances only help on the GPU and some call reduction.  With WebGL being single threaded on the CPU side_co_ instances cannot compete with a single mesh whether a merge or SPS.  Each mesh has to have its world matrix created (unless frozen) as well as other overhead.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]