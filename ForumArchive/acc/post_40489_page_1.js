[{"Owner":"Veksi","Date":"2018-10-07T12:53:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI was recently thinking to educate myself a bit more regarding BabylonJS and mixing it with reality_co_ so to speak. I had an idea to create a digital measuring too_co_ but quickly realized it_t_s a good deal more difficult to pull of than one initial thinks. So hence a question if it_t_s really impossible without access to native APIs currently and if so_co_ what might be the deal breaker?_lt_br /_gt_\n\t_lt_br /_gt_\n\tI saw news such asÂ _lt_a href_eq__qt_https_dd_//www.theverge.com/2018/6/22/17492846/google-augmented-reality-measure-app-arcore-tango-update_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.theverge.com/2018/6/22/17492846/google-augmented-reality-measure-app-arcore-tango-update_lt_/a_gt_Â where both Apple and Google are showcasing their new framework capabilities. From those examples I gather plane detection is at least a very desirable usability thing_co_ but I_t_m not sure if it_t_s necessarily needed. I don_t_t know if BabylonJS can do plane detection since it looks like it requires access to native capabilities and it could be achieveÂ by opening a WebRTC camera (using BabylonJS as usually) and sending them to backend or perhaps hosting BabylonJS inside a web frame in a native app and calling it. What I think is more important is some sort of depth perception (which_co_ I suppose_co_ would mean access to the lens properties such as focal length or more than one camera or some other sensor such as laser?) so that when a beginning and end of some line have been marked_co_ the length of the line could be (accurately enough) calculated._lt_br /_gt_\n\t_lt_br /_gt_\n\tI wonder if the above is about the right kind of reasoning? Or put otherwise_co_ does someone have an idea how to implement a digital measuring ruler in BabylonJS and how to go about it? I see there_t_s some new WebXR stuff going on in the GH repo and this might actually pave a way towards. Naturally it_t_d be nice to work towards this already now. _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_Â _lt_/span_gt__lt_br /_gt_\n\t_lt_br /_gt_\n\tBy the way_co_ I_t_ve looked into examples likeÂ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#YGKM4%231_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#YGKM4#1_lt_/a_gt_Â that combine some virtual object with a real world scene. Instead of a ball it could be a ruler fixed other end being fixed into some specific point._lt_br /_gt_\n\t_lt_br /_gt_\n\t&lt_sm_Edit_dd_ Found alsoÂ _lt_a href_eq__qt_https_dd_//newatlas.com/arrim-one-laser-measurer/55001/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//newatlas.com/arrim-one-laser-measurer/55001/_lt_/a_gt_Â _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t\t\t\n\n_lt_span class_eq__t_ipsType_reset ipsType_medium ipsType_light_t_ data-excludequote_gt_\n\t_lt_strong_gt_Edited _lt_time datetime_eq__t_2018-10-07T13_dd_06_dd_04Z_t_ title_eq__t_10/07/2018 01_dd_06  PM_t_ data-short_eq__t_Oct 7_t__gt_October 7_lt_/time_gt_ by Veksi_lt_/strong_gt_\n\t\n\t\t_lt_br_gt_Found material that supports some conclusions.\n\t\n\t\n_lt_/span_gt_\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-10-07T16:45:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThough a webgl framework might help you display your findings or take actions with those findings_co_ getting the findings through photo analysis is the really hard part.Â  This has little_co_ if not nothing_co_ to with webgl_co_ though once you know webgl might benefit.Â  BabylonJS does zero photo analysis_co_ I think.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tGetting data from WebRTC and then passing it around is going to be slow.Â  If you are going to use native capabilities anyway_co_ you should probably follow their examples of retrieving the camera data.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI will say using Cordova is probably not going to help you without a lot of work.Â  When you access the camera in Cordova using the common plug-ins_co_Â  those just call either the videocam or photo app for a given OS.Â  When you close those_co_ control returns to your javascript.Â  If you write your own plug-in to access the hardware directly_co_ which I am doing_co_ then you have 2 new problems_dd_\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\tIt is platform dependent_co_ so you will have to code for each OS.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tYou are probably going to have to do your analysis in the plug-in itself.Â  Reason is that Cordova plug-ins can only return strings.Â  Turning one to base64_co_ passing it back_co_ converting back to an image will slow you down to about 5 fps.Â  This is even before you start trying to work with the data.\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n_lt_p_gt_\n\tYou might write a Cordova plug-in which accesses each platforms native AR offerings_co_ or scourer the net for a plug-in which already does.Â  The same problem of passing the camera data back in string format is still going to be the bottle neck.Â  Using WebRTC on browser_co_ and a second native app which also accesses the camera is probably the only realistic way today.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-10-08T17:29:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAs you mentioned_co_ we will soon be able to use WebXR to add AR capabilities to Babylon.js.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn the meantime your idea of merging BJS with native app to get ArKit or ARCore features is a great idea (done by the folks at Jig.space for instance)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Veksi","Date":"2018-10-09T11:47:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks_co_ _lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8492_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/_qt_ rel_eq__qt__qt__gt_@JCPalmer_lt_/a_gt_Â and _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_. It appears a hybrid one is the option to do that sort of stuff or a mobile device without a backend API. Until WebXR thingies make the roll a bit more. _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"trevordev","Date":"2018-10-09T17:00:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWebXR should make it into popular browsers early next yearÂ _lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ¤ž_lt_/span_gt_. but you can already use it via chrome canary and support in babylon is already in progress_dd_Â _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/issues/3899_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/issues/3899_lt_/a_gt_Â .\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-10-09T22:43:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_#ffffff_sm_ color_dd_#353c41_sm_ font-size_dd_14px_sm_ text-align_dd_start_qt__gt__lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ¤ž_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]