[{"Owner":"QuintusHegie","Date":"2018-09-21T15:53:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi guys and gals_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI was reading the docs on Customizing Camera Inputs\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/how_to/customizing_camera_inputs_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/how_to/customizing_camera_inputs_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tand I want to customize the camera input for the FollowCamera.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut it has no camera.inputs set at the moment when I look at the definition_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/babylon.followCamera.ts_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/babylon.followCamera.ts_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhile for example the FreeCamera has_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/babylon.freeCamera.ts#L164_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/babylon.freeCamera.ts#L164_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy question is_dd_\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\tCan you set the camera.inputs to a new CameraInputsManager instance?\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n_lt_p_gt_\n\tPerhaps a DummyCameraInputsManager that_t_s just an empty shell_co_ doesn_t_t need to do anything with input for now... just being there.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo then I can add my own inputs to this camera using_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tcamera.inputs.add(new MyFancyNewFollowCameraKeyboardInput())_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI can then write camera input controllers (in JavaScript) that would adjust the FollowCamera_t_s radius_co_ rotationOffset and heightOffset.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you like my camera input controllers for the FollowCamera I can share the code_co_ so they might even become default. _lt_span_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ™‚_lt_/span_gt_ _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSome background info_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI use a FollowCamera in my BabylonJS Model Train Simulator game.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt follows the train quite nicely_co_ even in curves. _lt_span_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ™‚_lt_/span_gt_ _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut when the train gets longer_co_ I want the user to be able to adjust the radius to get the train in view again (zoom in/out).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso when the player operates the train at a station_co_ I want the user to be able to adjust the rotationOffset to get a clear view on loading/unloading the train at that station.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo it_t_s kinda like an ArcRotate input but slightly different.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet me know how I can help achieve this or if there_t_s a similar solution that achieves more or less the same.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tQuintus\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-09-21T17:57:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThat_t_s a good idea. No problem to create an input manager for the FollowCamera. Do you want to do a PR?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"QuintusHegie","Date":"2018-09-22T11:29:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_229003_qt_ data-ipsquote-contentid_eq__qt_40164_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1537552650_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t17 hours ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThat_t_s a good idea. No problem to create an input manager for the FollowCamera. Do you want to do a PR?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tSure_co_ if a Pull Request is the way to go to add code looks fine to me. Need some help though_co_ because this will be my first Pull Request ever. _lt_img alt_eq__qt_^_^_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_happy.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/happy@2x.png 2x_qt_ title_eq__qt_^_^_qt_ width_eq__qt_20_qt_ /_gt_ Q\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"QuintusHegie","Date":"2018-09-22T12:08:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOnce the CameraInputsManager is there on the FollowCamera_co_ this is my idea for the controls_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_What to control with input device_lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tcamera.radius _eq_ desired distance to followed target_lt_br /_gt_\n\tcamera.rotationOffset _eq_ desired rotation offset from axis of followed target (xz-plane / y-axis) in degrees_lt_br /_gt_\n\tcamera.heightOffset _eq_ desired height offset from axis of followed target (xz-plane / y-axis)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe FollowCamera_t_s Up always remains Up with the world (avoids roller coaster looping sickness _lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ˜‰_lt_/span_gt_ ). It_t_s a Camera that moves through the world but tries to follow a target._lt_br /_gt_\n\tA camera that fully aligns with the orientation vector of the followed object (e.g. a Plane viewed from it_t_s tail) _lt_em_gt_is a different type of camera._lt_/em_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_How to control that_lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe controls should intuitively probably be such that they are relative to the view from the camera on the target._lt_br /_gt_\n\tThe sensitivity and/or deadzone of the controls should be configurable and perhaps also some option to invert axis for heightOffset._lt_br /_gt_\n\tHere_t_s my idea so far_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_u_gt_Keyboard_lt_/u_gt_\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\tup (-) / down (+) to control radius\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tleft (?) / right (?) to control rotationOffset\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tSHIFT + [up (+) / down (-)] to control heightOffset\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n_lt_p_gt_\n\t_lt_u_gt_Mouse_lt_/u_gt_\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\twheel forward (-) / wheel backward (+) scroll to control radius\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tdrag left (?) / right (?) to control rotationOffset\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tdrag up (?) / down (?) to control heightOffset\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n_lt_p_gt_\n\t_lt_u_gt_Touch_lt_/u_gt_\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\tsame as mouse but wheel is changed to 2 finger zoom in (2 fingers drag away from center to opposite side) / zoom out (2 fingers drag to center from opposite sides)\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n_lt_p_gt_\n\t_lt_u_gt_Gamepad_lt_/u_gt_\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\tright stick Y up (-) / down (+)Â  to control radius\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tright stick X to control rotationOffset\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tleft stick Y to control heightOffset\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n_lt_p_gt_\n\t_lt_u_gt_VirtualJoystick_lt_/u_gt_\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\tsame as gamepad\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n_lt_p_gt_\n\t_lt_u_gt_DeviceOrientation_lt_/u_gt_\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\tlean forward (-) / backward (+) to control radius\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\trotate left/right around Up-axis to control rotationOffset\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n_lt_p_gt_\n\t_lt_u_gt_Pointer_lt_/u_gt_\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\tno clue_sm_ perhaps point to a world location and then the new desired radius and rotationOffset is computed measured from current location locked target and pointed location_co_ given the same desired heightOffset from the locked target_t_s zx-plane?\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n_lt_p_gt_\n\tThat_t_s about what I figured thus far would fit in the experience of the game I_t_m making._lt_br /_gt_\n\tYour comments are welcome so I can make the controls more generic and in conformance with the other already existing input controls.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tQ\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-09-24T16:14:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI have no use of this camera so I_t_m definitely not the right guy to provide guidance _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAS far as I can tell_co_ we should start small by adding a first keyboard input controller to get a sense of what we want to achieve?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe overall plan seems solid though\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"QuintusHegie","Date":"2018-09-25T18:21:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_229227_qt_ data-ipsquote-contentid_eq__qt_40164_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1537805664_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 9/24/2018 at 6_dd_14 PM_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI have no use of this camera so I_t_m definitely not the right guy to provide guidance _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tAS far as I can tell_co_ we should start small by adding a first keyboard input controller to get a sense of what we want to achieve?\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThe overall plan seems solid though\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI_t_ll bet you_t_ll start to love this camera when you play my game when the new camera controls are ready _lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ˜‰_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway_co_ ok_co_ something like this?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt_\n\t_lt_strong_gt_FollowCameraKeyboardMoveInput_dd__lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI wrote an untested example code for the Keyboard Input_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_/**\n * Keyboard input to control the _t_radius_t_ (up/down)_co_ _t_rotationOffset_t_ (left/right) and _t_heightOffset_t_ parameters of FollowCamera.\n * @see http_dd_//www.html5gamedevs.com/topic/40164-missing-camerainputmanager-support-for-followcamera-camerainputs/\n */\nvar FollowCameraKeyboardMoveInput _eq_ function ()\n{\n\t/**\n\t * Defines the camera the input is attached to.\n\t */\n\tthis.camera _eq_ null_sm_\n\n\t/**\n\t * Gets or Set the list of keyboard keys used to control the forward move of the camera.\n\t */\n\tthis.keysUp _eq_ [38]_sm_ // Arrow Up key\n\n\t/**\n\t * Gets or Set the list of keyboard keys used to control the backward move of the camera.\n\t */\n\tthis.keysDown _eq_ [40]_sm_ // Arrow Down key\n\n\t/**\n\t * Gets or Set the list of keyboard keys used to control the left strafe move of the camera.\n\t */\n\tthis.keysLeft _eq_ [37]_sm_ // Arrow Left key\n\n\t/**\n\t * Gets or Set the list of keyboard keys used to control the right strafe move of the camera.\n\t */\n\tthis.keysRight _eq_ [39]_sm_ // Arrow Right key\n\n\tthis._keys _eq_ []_sm_\n\tthis._shiftKey _eq_ false_sm_ // TODO let developer choose whether to use shiftKey_co_ ctrlKey_co_ altKey or metaKey\n\tthis._onCanvasBlurObserver _eq_ null_sm_\n\tthis._onKeyboardObserver _eq_ null_sm_\n\tthis._engine _eq_ null_sm_\n\tthis._scene _eq_ null_sm_\n}_sm_\n\n/**\n * Attach the input controls to a specific dom element to get the input from.\n * @param element Defines the element the controls should be listened from\n * @param noPreventDefault Defines whether event caught by the controls should call preventdefault() (https_dd_//developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault)\n */\nFollowCameraKeyboardMoveInput.prototype.attachControl _eq_ function(element_co_ noPreventDefault)\n{\n\tif (this._onCanvasBlurObserver)\n\t\treturn_sm_\n\n\tthis._scene _eq_ this.camera.getScene()_sm_\n\tthis._engine _eq_ this._scene.getEngine()_sm_\n\n\tthis._onCanvasBlurObserver _eq_ this._engine.onCanvasBlurObservable.add(() _eq_&gt_sm_ {\n\t\tthis._keys _eq_ []_sm_\n\t\tthis._shiftKey _eq_ false_sm_\n\t})_sm_\n\n\tthis._onKeyboardObserver _eq_ this._scene.onKeyboardObservable.add(info _eq_&gt_sm_ {\n\t\tlet evt _eq_ info.event_sm_\n\n\t\t// Store the shift key state\n\t\tthis._shiftKey _eq_ (evt.shiftKey !_eq_ false)_sm_\n\n\t\tif (info.type _eq__eq__eq_ KeyboardEventTypes.KEYDOWN)\n\t\t{\n\t\t\t// A key is pressed\n\t\t\tif (this.keysUp.indexOf(evt.keyCode) !_eq__eq_ -1 ||\n\t\t\t\tthis.keysDown.indexOf(evt.keyCode) !_eq__eq_ -1 ||\n\t\t\t\tthis.keysLeft.indexOf(evt.keyCode) !_eq__eq_ -1 ||\n\t\t\t\tthis.keysRight.indexOf(evt.keyCode) !_eq__eq_ -1)\n\t\t\t{\n\t\t\t\tvar i _eq_ this._keys.indexOf(evt.keyCode)_sm_\n\n\t\t\t\t// Add the key to the list of pressed keys\n\t\t\t\tif (i _eq__eq__eq_ -1)\n\t\t\t\t\tthis._keys.push(evt.keyCode)_sm_\n\n\t\t\t\tif (!noPreventDefault)\n\t\t\t\t\tevt.preventDefault()_sm_\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// A key is no longer pressed\n\t\t\tif (this.keysUp.indexOf(evt.keyCode) !_eq__eq_ -1 ||\n\t\t\t\tthis.keysDown.indexOf(evt.keyCode) !_eq__eq_ -1 ||\n\t\t\t\tthis.keysLeft.indexOf(evt.keyCode) !_eq__eq_ -1 ||\n\t\t\t\tthis.keysRight.indexOf(evt.keyCode) !_eq__eq_ -1)\n\t\t\t{\n\t\t\t\tvar i _eq_ this._keys.indexOf(evt.keyCode)_sm_\n\n\t\t\t\t// Remove the key to the list of pressed keys\n\t\t\t\tif (i &gt_sm__eq_ 0)\n\t\t\t\t\tthis._keys.splice(i_co_ 1)_sm_\n\n\t\t\t\tif (!noPreventDefault)\n\t\t\t\t\tevt.preventDefault()_sm_\n\t\t\t}\n\t\t}\n\t})_sm_\n}_sm_\n\n/**\n * Detach the current controls from the specified dom element.\n * @param element Defines the element to stop listening the inputs from\n */\nFollowCameraKeyboardMoveInput.prototype.detachControl _eq_ function(element)\n{\n\tif (this._scene)\n\t{\n\t\tif (this._onKeyboardObserver)\n\t\t\tthis._scene.onKeyboardObservable.remove(this._onKeyboardObserver)_sm_\n\n\t\tif (this._onCanvasBlurObserver)\n\t\t\tthis._engine.onCanvasBlurObservable.remove(this._onCanvasBlurObserver)_sm_\n\n\t\tthis._onKeyboardObserver _eq_ null_sm_\n\t\tthis._onCanvasBlurObserver _eq_ null_sm_\n\t}\n\n\tthis._keys _eq_ []_sm_\n\tthis._shiftKey _eq_ false_sm_\n}_sm_\n\n/**\n * Update the current camera state depending on the inputs that have been used this frame.\n * This is a dynamically created lambda to avoid the performance penalty of looping for inputs in the render loop.\n */\nFollowCameraKeyboardMoveInput.prototype.checkInputs _eq_ function()\n{\n\tif (this._onKeyboardObserver)\n\t{\n\t\t// Keyboard\n\t\tfor (var i _eq_ 0_sm_ i &lt_sm_ this._keys.length_sm_ i++)\n\t\t{\n\t\t\tvar keyCode _eq_ this._keys[i]_sm_\n\t\t\tvar speed _eq_ this.camera._computeLocalCameraSpeed()_sm_\n\n\t\t\tif (this.keysLeft.indexOf(keyCode) !_eq__eq_ -1)\n\t\t\t{\n\t\t\t\t// Left _eq_ rotate clockwise around target\n\t\t\t\tthis.camera.rotationOffset _eq_ (this.camera.rotationOffset + -speed) % 360_sm_\n\t\t\t}\n\t\t\telse if (this.keysUp.indexOf(keyCode) !_eq__eq_ -1)\n\t\t\t{\n\t\t\t\t// Up _eq_ move closer to target (or with shift pressed_dd_ heighten altitude)\n\t\t\t\tif (this._shiftKey)\n\t\t\t\t\tthis.camera.heightOffset +_eq_ speed_sm_\n\t\t\t\telse\n\t\t\t\t\tthis.camera.radius +_eq_ -speed_sm_\n\t\t\t}\n\t\t\telse if (this.keysRight.indexOf(keyCode) !_eq__eq_ -1)\n\t\t\t{\n\t\t\t\t// Right _eq_ rotate counter-clockwise around target\n\t\t\t\tthis.camera.rotationOffset _eq_ (this.camera.rotationOffset + speed) % 360_sm_\n\t\t\t}\n\t\t\telse if (this.keysDown.indexOf(keyCode) !_eq__eq_ -1)\n\t\t\t{\n\t\t\t\t// Down _eq_ move further away from target (or with shift pressed_dd_ lower altitude)\n\t\t\t\tif (this._shiftKey)\n\t\t\t\t\tthis.camera.heightOffset +_eq_ -speed_sm_\n\t\t\t\telse\n\t\t\t\t\tthis.camera.radius +_eq_ speed_sm_\n\t\t\t}\n\n/*\n\t\t\t// TODO take this into account or not?\n\t\t\tif (this.camera.getScene().useRightHandedSystem)\n\t\t\t\tthis.camera._localDirection.z *_eq_ -1_sm_\n*/\n/*\n\t\t\t// TODO replace with updating the camera position and rotation...\n\t\t\tthis.camera.getViewMatrix().invertToRef(this.camera._cameraTransformMatrix)_sm_\n\t\t\tVector3.TransformNormalToRef(this.camera._localDirection_co_ this.camera._cameraTransformMatrix_co_ this.camera._transformedDirection)_sm_\n\t\t\tthis.camera.cameraDirection.addInPlace(this.camera._transformedDirection)_sm_\n*/\n\t\t}\n\t}\n}\n\n/**\n * Gets the class name of the current intput.\n * @returns the class name\n */\nFollowCameraKeyboardMoveInput.prototype.getClassName _eq_ function()\n{\n\treturn _qt_FollowCameraKeyboardMoveInput_qt__sm_\n}_sm_\n\n/** @hidden */\nFollowCameraKeyboardMoveInput.prototype._onLostFocus _eq_ function (e)\n{\n\tthis._keys _eq_ []_sm_\n\tthis._shiftKey _eq_ false_sm_\n}_sm_\n\n/**\n * Get the friendly name associated with the input class.\n * @returns the input friendly name\n */\nFollowCameraKeyboardMoveInput.prototype.getSimpleName _eq_ function()\n{\n\treturn _qt_keyboard_qt__sm_\n}_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_FollowCameraInputsManager_dd__lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd the untested inputs manager to associate with it_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_/**\n * Default Inputs manager for the FollowCamera.\n * It groups all the default supported inputs for ease of use.\n * @version 1 Mouse only\n * @see http_dd_//www.html5gamedevs.com/topic/40164-missing-camerainputmanager-support-for-followcamera-camerainputs/\n */\nvar FollowCameraInputsManager _eq_ function(camera)\n{\n\tBABYLON.CameraInputsManager.call(this_co_ camera)_sm_\n}_sm_\n\nFollowCameraInputsManager.prototype _eq_ Object.create(BABYLON.CameraInputsManager.prototype)_sm_\nFollowCameraInputsManager.prototype.constructor _eq_ FollowCameraInputsManager_sm_\n\n/**\n * Add keyboard input support to the input manager.\n * @returns the current input manager\n */\nFollowCameraInputsManager.prototype.addKeyboard _eq_ function()\n{\n\tthis.add(new FollowCameraKeyboardMoveInput())_sm_\n\treturn this_sm_\n}_sm_\n\n/**\n * Add mouse input support to the input manager.\n * @returns the current input manager\n */\nFollowCameraInputsManager.prototype.addMouse _eq_ function(touchEnabled _eq_ true)\n{\n\t//this.add(new FollowCameraMouseMoveInput(touchEnabled))_sm_\n\treturn this_sm_\n}\n\n/**\n * Add orientation input support to the input manager.\n * @returns the current input manager\n */\nFollowCameraInputsManager.prototype.addDeviceOrientation _eq_ function()\n{\n\t//this.add(new FollowCameraDeviceOrientationInput())_sm_\n\treturn this_sm_\n}\n\n/**\n * Add touch input support to the input manager.\n * @returns the current input manager\n */\nFollowCameraInputsManager.prototype.addTouch _eq_ function()\n{\n\t//this.add(new FollowCameraTouchInput())_sm_\n\treturn this_sm_\n}\n\n/**\n * Add virtual joystick input support to the input manager.\n * @returns the current input manager\n */\nFollowCameraInputsManager.prototype.addVirtualJoystick _eq_ function()\n{\n\t//this.add(new FollowCameraVirtualJoystickInput())_sm_\n\treturn this_sm_\n}\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_FollowCamera_lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd then also some minor changes to the existing FollowCamera are needed to add support in the first place of this camera for working with an input manager... do I need to spell this syntax out? _lt_span_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ™‚_lt_/span_gt_ _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Bonus_dd_ FollowCameraMouseMoveInput_lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUntested code for click+dragging and mouse wheel.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSimply uncomment in above input manager to add support.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_/**\n * Mouse input to control the _t_radius_t_ (wheel)_co_ _t_rotationOffset_t_ (left/right drag) and _t_heightOffset_t_ (up/down drag) parameters of FollowCamera.\n * @see http_dd_//www.html5gamedevs.com/topic/40164-missing-camerainputmanager-support-for-followcamera-camerainputs/\n */\nvar FollowCameraMouseMoveInput _eq_ function (touchEnabled _eq_ true)\n{\n\t/**\n\t * Defines the camera the input is attached to.\n\t */\n\tthis.camera _eq_ null_sm_\n\n\t/**\n\t * Defines the buttons associated with the input to handle camera move.\n\t */\n\tthis.buttons _eq_ [0_co_ 1_co_ 2]_sm_\n\n\t/**\n\t * Defines the pointer angular sensibility  along the X and Y axis or how fast is the camera rotating.\n\t */\n\tthis.angularSensibility _eq_ 2000.0_sm_\n\n\t/**\n\t * Gets or Set the mouse wheel precision or how fast is the camera zooming.\n\t */\n\tthis.wheelPrecision _eq_ 3.0_sm_\n\n\t/**\n\t * wheelDeltaPercentage will be used instead of wheelPrecision if different from 0. \n\t * It defines the percentage of current camera.radius to use as delta when wheel is used.\n\t */\n\tthis.wheelDeltaPercentage _eq_ 0_sm_\n\n\t/**\n\t * Define if touch is enabled in the mouse input\n\t */\n\tthis.touchEnabled _eq_ touchEnabled_sm_\n\n\tthis._pointerInput _eq_ null_sm_\n\tthis._onMouseMove _eq_ null_sm_\n\tthis._observer _eq_ null_sm_\n\tthis.previousPosition _eq_ null_sm_\n}_sm_\n\n/**\n * Attach the input controls to a specific dom element to get the input from.\n * @param element Defines the element the controls should be listened from\n * @param noPreventDefault Defines whether event caught by the controls should call preventdefault() (https_dd_//developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault)\n */\nFollowCameraMouseMoveInput.prototype.attachControl _eq_ function (element_co_ noPreventDefault)\n{\n\tvar engine _eq_ this.camera.getEngine()_sm_\n\n\tif (!this._pointerInput)\n\t{\n\t\tthis._pointerInput _eq_ (p_co_ s) _eq_&gt_sm_ {\n\t\t\tvar evt _eq_ p.event_sm_\n\n\t\t\tif (engine.isInVRExclusivePointerMode)\n\t\t\t\treturn_sm_\n\n\t\t\tif (!this.touchEnabled &amp_sm_&amp_sm_ evt.pointerType _eq__eq__eq_ _qt_touch_qt_)\n\t\t\t\treturn_sm_\n\n\t\t\t// FIXME update this condition for wheel\n\t\t\tif (p.type !_eq__eq_ PointerEventTypes.POINTERMOVE &amp_sm_&amp_sm_ this.buttons.indexOf(evt.button) _eq__eq__eq_ -1)\n\t\t\t\treturn_sm_\n\n\t\t\tlet srcElement _eq_ (evt.srcElement || evt.target)_sm_\n\n\t\t\tif (p.type _eq__eq__eq_ PointerEventTypes.POINTERDOWN &amp_sm_&amp_sm_ srcElement)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tsrcElement.setPointerCapture(evt.pointerId)_sm_\n\t\t\t\t} catch (e) {\n\t\t\t\t\t//Nothing to do with the error. Execution will continue.\n\t\t\t\t}\n\n\t\t\t\tthis.previousPosition _eq_\n\t\t\t\t\t{\n\t\t\t\t\t\tx_dd_ evt.clientX_co_\n\t\t\t\t\t\ty_dd_ evt.clientY\n\t\t\t\t\t}_sm_\n\n\t\t\t\tif (!noPreventDefault)\n\t\t\t\t{\n\t\t\t\t\tevt.preventDefault()_sm_\n\t\t\t\t\telement.focus()_sm_\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (p.type _eq__eq__eq_ PointerEventTypes.POINTERUP &amp_sm_&amp_sm_ srcElement)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tsrcElement.releasePointerCapture(evt.pointerId)_sm_\n\t\t\t\t} catch (e) {\n\t\t\t\t\t//Nothing to do with the error.\n\t\t\t\t}\n\n\t\t\t\tthis.previousPosition _eq_ null_sm_\n\t\t\t\tif (!noPreventDefault)\n\t\t\t\t\tevt.preventDefault()_sm_\n\t\t\t}\n\t\t\telse if (p.type _eq__eq__eq_ PointerEventTypes.POINTERMOVE)\n\t\t\t{\n\t\t\t\tif (!this.previousPosition || engine.isPointerLock)\n\t\t\t\t\treturn_sm_\n\n\t\t\t\tvar offsetX _eq_ evt.clientX - this.previousPosition.x_sm_\n\t\t\t\tif (this.camera.getScene().useRightHandedSystem) offsetX *_eq_ -1_sm_\n\t\t\t\tif (this.camera.parent &amp_sm_&amp_sm_ this.camera.parent._getWorldMatrixDeterminant() &lt_sm_ 0) offsetX *_eq_ -1_sm_\n\t\t\t\tthis.camera.rotationOffset +_eq_ offsetX / this.angularSensibility_sm_\n\n\t\t\t\tvar offsetY _eq_ evt.clientY - this.previousPosition.y_sm_\n\t\t\t\tthis.camera.heightOffset +_eq_ offsetY / this.angularSensibility_sm_\n\n\t\t\t\tthis.previousPosition _eq_\n\t\t\t\t\t{\n\t\t\t\t\t\tx_dd_ evt.clientX_co_\n\t\t\t\t\t\ty_dd_ evt.clientY\n\t\t\t\t\t}_sm_\n\n\t\t\t\tif (!noPreventDefault)\n\t\t\t\t\tevt.preventDefault()_sm_\n\t\t\t}\n\t\t\telse if (p.type _eq__eq__eq_ PointerEventTypes.POINTERWHEEL)\n\t\t\t{\n\t\t\t\tvar delta _eq_ 0_sm_\n\n\t\t\t\tif (evt.wheelDelta) {\n\t\t\t\t\tif (this.wheelDeltaPercentage) {\n\t\t\t\t\t\tvar wheelDelta _eq_ (evt.wheelDelta * 0.01 * this.wheelDeltaPercentage) * this.camera.radius_sm_\n\t\t\t\t\t\tif (evt.wheelDelta &gt_sm_ 0) {\n\t\t\t\t\t\t\tdelta _eq_ wheelDelta / (1.0 + this.wheelDeltaPercentage)_sm_\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdelta _eq_ wheelDelta * (1.0 + this.wheelDeltaPercentage)_sm_\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelta _eq_ evt.wheelDelta / (this.wheelPrecision * 40)_sm_\n\t\t\t\t\t}\n\t\t\t\t} else if (evt.detail) {\n\t\t\t\t\tdelta _eq_ -evt.detail / this.wheelPrecision_sm_\n\t\t\t\t}\n\n\t\t\t\tif (delta)\n\t\t\t\t\tthis.camera.radius +_eq_ delta_sm_\n\n\t\t\t\tif (evt.preventDefault)\n\t\t\t\t{\n\t\t\t\t\tif (!noPreventDefault)\n\t\t\t\t\t\tevt.preventDefault()_sm_\n\t\t\t\t}\n\t\t\t}\n\t\t}_sm_\n\t}\n\n\tif (!this._onMouseMove)\n\t{\n\t\tthis._onMouseMove _eq_ evt _eq_&gt_sm_ {\n\t\t\tif (!engine.isPointerLock)\n\t\t\t\treturn_sm_\n\n\t\t\tif (engine.isInVRExclusivePointerMode)\n\t\t\t\treturn_sm_\n\n\t\t\tvar offsetX _eq_ evt.movementX || evt.mozMovementX || evt.webkitMovementX || evt.msMovementX || 0_sm_\n\t\t\tif (this.camera.getScene().useRightHandedSystem) offsetX *_eq_ -1_sm_\n\t\t\tif (this.camera.parent &amp_sm_&amp_sm_ this.camera.parent._getWorldMatrixDeterminant() &lt_sm_ 0) offsetX *_eq_ -1_sm_\n\t\t\tthis.camera.rotationOffset +_eq_ offsetX / this.angularSensibility_sm_\n\n\t\t\tvar offsetY _eq_ evt.movementY || evt.mozMovementY || evt.webkitMovementY || evt.msMovementY || 0_sm_\n\t\t\tthis.camera.heightOffset +_eq_ offsetY / this.angularSensibility_sm_\n\n\t\t\tthis.previousPosition _eq_ null_sm_\n\n\t\t\tif (!noPreventDefault)\n\t\t\t\tevt.preventDefault()_sm_\n\t\t}_sm_\n\t}\n\n\tthis._observer _eq_ this.camera.getScene().onPointerObservable.add(this._pointerInput_co_ PointerEventTypes.POINTERDOWN | PointerEventTypes.POINTERUP | PointerEventTypes.POINTERMOVE | PointerEventTypes.POINTERWHEEL)_sm_\n\telement.addEventListener(_qt_mousemove_qt__co_ this._onMouseMove_co_ false)_sm_\n}\n\n/**\n * Detach the current controls from the specified dom element.\n * @param element Defines the element to stop listening the inputs from\n */\nFollowCameraMouseMoveInput.prototype.detachControl _eq_ function (element)\n{\n\tif (this._observer &amp_sm_&amp_sm_ element)\n\t{\n\t\tthis.camera.getScene().onPointerObservable.remove(this._observer)_sm_\n\t\tif (this._onMouseMove)\n\t\t\telement.removeEventListener(_qt_mousemove_qt__co_ this._onMouseMove)_sm_\n\t\tthis._observer _eq_ null_sm_\n\t\tthis._onMouseMove _eq_ null_sm_\n\t\tthis.previousPosition _eq_ null_sm_\n\t}\n}\n\n/**\n * Gets the class name of the current intput.\n * @returns the class name\n */\nFollowCameraMouseMoveInput.prototype.getClassName _eq_ function ()\n{\n\treturn _qt_FollowCameraMouseMoveInput_qt__sm_\n}\n\n/**\n * Get the friendly name associated with the input class.\n * @returns the input friendly name\n */\nFollowCameraMouseMoveInput.prototype.getSimpleName _eq_ function ()\n{\n\treturn _qt_mouse_qt__sm_\n}\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tQ\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t\t\t\n\n_lt_span class_eq__t_ipsType_reset ipsType_medium ipsType_light_t_ data-excludequote_gt_\n\t_lt_strong_gt_Edited _lt_time datetime_eq__t_2018-09-25T18_dd_28_dd_28Z_t_ title_eq__t_09/25/2018 06_dd_28  PM_t_ data-short_eq__t_Sep 25_t__gt_September 25_lt_/time_gt_ by QuintusHegie_lt_/strong_gt_\n\t\n\t\t_lt_br_gt_added mouse input template as well\n\t\n\t\n_lt_/span_gt_\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-09-25T20:00:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis will need to be in TS in order to be merged\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(read this as a good kickstarter_dd_Â _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/how_to/how_to_start_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/how_to/how_to_start_lt_/a_gt_)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"QuintusHegie","Date":"2018-09-29T08:17:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_229423_qt_ data-ipsquote-contentid_eq__qt_40164_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1537905639_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 9/25/2018 at 10_dd_00 PM_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThis will need to be in TS in order to be merged\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t(read this as a good kickstarter_dd_Â _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/how_to/how_to_start_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/how_to/how_to_start_lt_/a_gt_)\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tOk. Thanks for the kickstarter guide. This will take me some time for me to learn and get started with_co_ but seems doable. Q\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]