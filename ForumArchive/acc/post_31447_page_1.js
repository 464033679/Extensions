[{"Owner":"Queue","Date":"2017-07-04T21:50:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello everyone_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am starting a new project and intended to go for pixi.js. After some further adjustments I decided to consider 3d graphics and here I am _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tI want to have some clickable objects which open _qt_modal_qt_ (or something similar) and include input forms which can be send to and php backend. My first thought was to use react and have it _qt_behind_qt_ my babylon scene and just get it in front on click.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs that a decent way or would you recommend something else?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI also stumbled upon the _qt_canvas 2d_qt_ stuff _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/extensions/canvas2d_home_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/extensions/canvas2d_home_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tShould I read further into it or is my first approach more appropriate?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBest regards\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-07-05T16:29:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHiya Queue.  I think MANY people would use an HTML form... inside a DIV that is CSS absolutely-positioned atop the webGL canvas. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt is actually quite simple.  On that DIV... use CSS stylerules _lt_em_gt_display_dd_ absolute_sm_ _lt_/em_gt_and then _lt_em_gt_top_dd_ some%_sm__lt_/em_gt_ and _lt_em_gt_left_dd_ some%._lt_/em_gt_  With the correct % values_co_ the DIV should open atop the 3D render canvas.  Need it to disappear but still exist?  CSS stylerule _lt_em_gt_display_dd_ none_sm_  _lt_/em_gt_You could even make it partially transparent with _lt_em_gt_opacity_dd_ .5_sm_ _lt_/em_gt_and/or move it behind the renderCanvas with CSS _lt_em_gt_zIndex._lt_/em_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWithin BabylonJS scene code_co_ you can get references to HTML objects... with normal JS things like _lt_em_gt_var mydiv _eq_ document.getElementByID(_qt_myDiv_qt_) _lt_/em_gt_and then get its style object with _lt_em_gt_var mystyle _eq_ mydiv.style.  _lt_/em_gt_Then... _lt_em_gt_mystyle.display _eq_ _qt_absolute_qt_ _lt_/em_gt_and _lt_em_gt_mystyle.top _eq_ whatever _lt_/em_gt_and _lt_em_gt_mystyle.left _eq_ whatever_co_ _lt_/em_gt_and _lt_em_gt_mystyle.zIndex_lt_/em_gt_... and _lt_em_gt_mystyle.opacity_lt_/em_gt__co_ etc_co_ etc.  Need a CSS3 quick-ref doc?  _lt_a href_eq__qt_http_dd_//webpages.charter.net/wingthing/html/propIndex.htm_qt_ rel_eq__qt_external nofollow_qt__gt_Here ya go_lt_/a_gt_.  (Perhaps slightly out-of-date_co_ but not too much.  Might need some control-mousewheeling to get it scaled nice).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can even CREATE html within scene code.  Ex_dd_ _lt_em_gt_var mydiv _eq_ document.createElement(_qt_div_qt_)_lt_/em_gt_ and then _lt_em_gt_document.body.appendChild(mydiv)_lt_/em_gt_.  Easy_co_ eh?   You may wish to study mydiv.focus()_co_ too.  Having a JS function inside the scene code... that COMPLETELY creates your html form (or many different forms)... is quite achievable.  It takes quite a few lines of code_co_ but it is all easy coding.  You could even create your form differently each time_co_ depending upon what the user is trying to do (a _t_dynamically-generated_t_ form). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tOr you can make 1-10 different forms inside the html part of your document_co_ and just toggle them ON/OFF with scene code.  Lots of flexibility.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn this way_co_ you are working-with HTML forms_co_ which is easy and won_t_t require any fancy stuff. I don_t_t know much about submitting the form to your server_co_ but it will likely be exactly the same as submitting standard HTML forms.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway_co_ I just wanted to remind you that HTML forms/controls ARE available_co_ even when working-with 3D context canvas.  After all_co_ the renderCanvas is just the same as any other HTML element.  It just has a 3D context instead of a 2D context. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tGood luck.  Keep us posted.  Others may comment soon.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Queue","Date":"2017-07-06T08:56:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for your detailed answer. That was approximately what I was planning and I just wanted to confirm there is no _qt_build-in better_qt_ way to handle this stuff. Therefore I will just do it this way_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\thave a nice day. _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-07-06T20:12:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCool!  Sometimes... it is not easy to get a _qt_pop-up form_qt_ to happen perfectly atop a clicked mesh.  Usually_co_ you put a mouse-click actionManager on the mesh_co_ and use it_t_s executeCodeAction to run a func.  That func could query current scene.pointerX and .pointerY... so now you know WHERE ON THE CANVAS... the click happened.  From that point-onward... it_t_s hell.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  (nah)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHTML elements are measured from the upper left corner... so it is easy to place your _qt_form div_qt_ so that its upper left corner lands on the clicked location.  But... to get the CENTER of that DIV... to land on the clicked point... that takes some magic.  Good fun_co_ though.  With some trial and error testing_co_ you can sort-of guess how much to subtract from scene.pointerX and scene.pointerY (and then poke those values into div.style.left and div.style.top)... to make the center of the div land-on the clicked point.  Goof around_co_ have fun.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOh_co_ you_t_re asking about why _qt_hell_qt_?  Well... that happens if your renderCanvas is NOT full-screen.  CSS top and left... are measured from upper-left of webpage corner... not renderCanvas corner.  SO_co_ with non-full-screen renderCanvas... you need to calculate-in HOW FAR the upper-left corner of the renderCanvas... is... from the upper-left corner of webpage.  Then add THAT amount... to scene.pointerX and pointerY_co_ and then poke THOSE values into formDiv.style top/left.  Erf.  A bit of hell_co_ right?  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tWe DID build a _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#BUWYF%2341_qt_ rel_eq__qt_external nofollow_qt__gt_Canvas2D based context menu (right click popup menu)_lt_/a_gt__co_ once.  Right click on mesh to launch little menu.  It works fine... but we did not have any user type-in input.  Just 8 buttons on a menu...each of them running a func when clicked.  Right click to toggle the menu OFF again_co_ too.  It took a substantial amount of Canvas2D code_co_ as you can see.  _lt_img alt_eq__qt__dd_o_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_ohmy.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/ohmy@2x.png 2x_qt_ title_eq__qt__dd_o_qt_ width_eq__qt_20_qt_ /_gt_  These menus are _qt_centered_qt_ on the mesh _lt_em_gt_origin_lt_/em_gt_ (its center) and NOT located at the click-place.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou could easily do this type of thing... with your HTML menu/form_co_ too (right click on mesh to launch form).  And_co_ you can always change it later.  You could have 3-4 different versions of your formMaker() func.  Try it in many ways_co_ see which one you like best.  I_t_m sure the Babylon.GUI system would work fine_co_ too.  Here is a _lt_a href_eq__qt_http_dd_//www.babylonjs.com/demos/gui/_qt_ rel_eq__qt_external nofollow_qt__gt_super-form made from Babylon.GUI_lt_/a_gt_.  No type-in input boxes in that demo_co_ but nearly every other kind of form control known to man.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tBut you won_t_t get any CSS for Babylon.GUI or Canvas2D systems.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  Your _qt_form_qt_ will be positioned in a different way_co_ using those two systems.  I bet you knew that already.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ Be well.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Queue","Date":"2017-07-06T21:17:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for your huge input again.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLets see weather I am able to deal with hell _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tQuote\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tUsually_co_ you put a mouse-click actionManager on the mesh_co_ and use it_t_s executeCodeAction to run a func. \n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI just discovered this one a few minutes before reading the post_co_ at least I know now its the way to go _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tBeside that I will keep you updated_co_ but it seems to be rather straight forward from here. Although the boxes inside of the 3d enviroment (your posted examples) look pretty cool they probably wont fit my plans right now. Therefore I_t_ll go the easy way and stick to HTML base for now.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-07-08T17:37:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou mention your first thought was React...  If you_t_re looking for some React sample code this started kit uses an npm for React and BabylonJS.  You could easily do a modal form with _t_react-boostrap_t_ npm.  The demo here is Quarto is from temechon moved partially to React as a proof of concept_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//brianzinn.github.io/react-redux-babylonjs-starter-kit/quarto_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//brianzinn.github.io/react-redux-babylonjs-starter-kit/quarto_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]