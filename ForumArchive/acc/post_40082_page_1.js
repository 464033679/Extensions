[{"Owner":"Janx","Date":"2018-09-18T14:12:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have trouble with the mesh selection phase_co_ which takes too long and therefor causes frame rates around 30 FPS. My scene contains roughly 2000 meshes_co_ most of them empty (just used as containers or transformations). I do not know_co_ if that is considered too much. Anyhow_co_ using freezeActiveMeshes (thanks for adding this) to disable the mesh selection phase solves my problem_co_ because the actual rendering of the scene is quite fast_co_ even with all meshes activated. I therefore want to unfreezeActiveMeshes whenever the scene was changed and to freezeActiveMeshes as soon as possible. I thought using the onAfterActiveMeshesEvaluationObservable was a good idea to get informed when the mesh selection phase is completed_co_ but using freezeActiveMeshes in the callback causes the engine to stall completely. You can see this here_dd_ _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/indexStable.html#0WHH9Q%235_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/indexStable.html#0WHH9Q#5_lt_/a_gt_ Disabe the callback and it works_dd_ _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/indexStable.html#0WHH9Q%236_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/indexStable.html#0WHH9Q#6_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat is going on? Am I misusing the onAfterActiveMeshesEvaluationObservable?_lt_br /_gt_\n\t_lt_br /_gt_\n\tCheers_co__lt_br /_gt_\n\tjan\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Gijs","Date":"2018-09-18T16:16:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_ from the error in the console it seems that _lt_em_gt_ freezeActiveMeshes_lt_/em_gt_ causes _lt_em_gt_onAfterActiveMeshesEvaluationObservable_lt_/em_gt_ to be called_co_ and creating an infinite loop. But regarding the meshes_co_ can_t_t you use a TransformNode instead?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"trevordev","Date":"2018-09-18T17:38:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tTo replace onAfterActiveMeshesEvaluationObservable for your scenario you could have a flag that states if a new mesh has been created and use scene.on(Before/After)RenderObservable to check if a freeze is needed.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-09-18T21:21:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI also recommend to use TransformNode as much as you can for containers as they are not processed by the evaluation phase hence reducing its cost\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Janx","Date":"2018-09-19T08:52:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAwesome_co_ thanks for the quick support! _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/22401-gijs/?do_eq_hovercard_qt_ data-mentionid_eq__qt_22401_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/22401-gijs/_qt_ rel_eq__qt__qt__gt_@Gijs_lt_/a_gt_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ I was not aware of Transformation Nodes and will start using them right away. _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/29361-trevordev/?do_eq_hovercard_qt_ data-mentionid_eq__qt_29361_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/29361-trevordev/_qt_ rel_eq__qt__qt__gt_@trevordev_lt_/a_gt_ Thanks for the idea. Looking at the code of _lt_em style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_freezeActiveMeshes_lt_span_gt_﻿_lt_/span_gt__lt_/em_gt_ it is absolutely correct_co_ that it notifies the _lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_onAfterActiveMeshesEvaluationObservable again. So I came up with a check in the callback whether freeze was already requested_dd_ _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/indexStable.html#0WHH9Q%237_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/indexStable.html#0WHH9Q#7_lt_/a_gt_ I like this approach a bit more_co_ since than again calling unfreeze is enough to update the scene._lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]