[{"Owner":"wxxhrt","Date":"2016-01-04T22:52:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_span style_eq__qt_font-family_dd_arial_co_ helvetica_co_ sans-serif_sm__qt__gt_Hi_co__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_arial_co_ helvetica_co_ sans-serif_sm__qt__gt_Im new to Babylon.js but it seems fun_co_ I have a simple question about the code below. It imports models and places them in random positions_co_ whats the most efficient way to re-randomise the positions every second? I tried with_lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_arial_co_ helvetica_co_ sans-serif_sm__qt__gt__lt_span style_eq__qt_margin_dd_0px_sm_color_dd_rgb(0_co_0_co_0)_sm__qt__gt_setTimeout_lt_/span_gt__lt_span style_eq__qt_margin_dd_0px_sm_color_dd_rgb(0_co_0_co_0)_sm__qt__gt_(_lt_/span_gt__lt_span style_eq__qt_margin_dd_0px_sm_color_dd_rgb(0_co_0_co_139)_sm__qt__gt_function_lt_/span_gt__lt_span style_eq__qt_margin_dd_0px_sm_color_dd_rgb(0_co_0_co_0)_sm__qt__gt_(){_lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_arial_co_ helvetica_co_ sans-serif_sm__qt__gt__lt_span style_eq__qt_margin_dd_0px_sm_color_dd_rgb(0_co_0_co_0)_sm__qt__gt_window_lt_/span_gt__lt_span style_eq__qt_margin_dd_0px_sm_color_dd_rgb(0_co_0_co_0)_sm__qt__gt_._lt_/span_gt__lt_span style_eq__qt_margin_dd_0px_sm_color_dd_rgb(0_co_0_co_0)_sm__qt__gt_location_lt_/span_gt__lt_span style_eq__qt_margin_dd_0px_sm_color_dd_rgb(0_co_0_co_0)_sm__qt__gt_._lt_/span_gt__lt_span style_eq__qt_margin_dd_0px_sm_color_dd_rgb(0_co_0_co_0)_sm__qt__gt_reload_lt_/span_gt__lt_span style_eq__qt_margin_dd_0px_sm_color_dd_rgb(0_co_0_co_0)_sm__qt__gt_(_lt_/span_gt__lt_span style_eq__qt_margin_dd_0px_sm_color_dd_rgb(128_co_0_co_0)_sm__qt__gt_1_lt_/span_gt__lt_span style_eq__qt_margin_dd_0px_sm_color_dd_rgb(0_co_0_co_0)_sm__qt__gt_)_sm__lt_/span_gt__lt_br_gt__lt_span style_eq__qt_margin_dd_0px_sm_color_dd_rgb(0_co_0_co_0)_sm__qt__gt_}_co__lt_/span_gt__lt_span style_eq__qt_margin_dd_0px_sm_color_dd_rgb(0_co_0_co_0)_sm__qt__gt_ _lt_/span_gt__lt_span style_eq__qt_margin_dd_0px_sm_color_dd_rgb(128_co_0_co_0)_sm__qt__gt_5000_lt_/span_gt__lt_span style_eq__qt_margin_dd_0px_sm_color_dd_rgb(0_co_0_co_0)_sm__qt__gt_)_sm__lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-family_dd_arial_co_ helvetica_co_ sans-serif_sm__qt__gt_but this was a bit heavy_co_ is there a way to just call the randomise bit again._lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Also is this the most efficient way to load multiple models_co_ the hardware I_t_m targeting is slow so anything I can do to get a bit more performance is best- maybe I should clone the objects?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint lang-html_qt__gt_&lt_sm_!DOCTYPE html&gt_sm_&lt_sm_html&gt_sm_&lt_sm_head&gt_sm_    &lt_sm_meta http-equiv_eq__qt_Content-Type_qt_ content_eq__qt_text/html_qt_ charset_eq__qt_utf-8_qt_/&gt_sm_    &lt_sm_title&gt_sm_Babylon Test&lt_sm_/title&gt_sm_    &lt_sm_!--- link to the last version of babylon ---&gt_sm_    &lt_sm_script src_eq__qt_babylon.2.2.js_qt_&gt_sm_&lt_sm_/script&gt_sm_    &lt_sm_script src_eq__qt_babylon.objFileLoader.js_qt_&gt_sm_&lt_sm_/script&gt_sm_    &lt_sm_style&gt_sm_        html_co_ body {            overflow_dd_ hidden_sm_            width   _dd_ 100%_sm_            height  _dd_ 100%_sm_            margin  _dd_ 0_sm_            padding _dd_ 0_sm_        }        #renderCanvas {            width   _dd_ 100%_sm_            height  _dd_ 100%_sm_            touch-action_dd_ none_sm_        }    &lt_sm_/style&gt_sm_&lt_sm_/head&gt_sm_&lt_sm_body&gt_sm_    &lt_sm_canvas id_eq__qt_renderCanvas_qt_&gt_sm_&lt_sm_/canvas&gt_sm_    &lt_sm_script&gt_sm_        window.addEventListener(_t_DOMContentLoaded_t__co_ function(){            // get the canvas DOM element            var canvas _eq_ document.getElementById(_t_renderCanvas_t_)_sm_            // load the 3D engine            var engine _eq_ new BABYLON.Engine(canvas_co_ true)_sm_            // createScene function that creates and return the scene            var createScene _eq_ function()            {                // create a basic BJS Scene object                var scene _eq_ new BABYLON.Scene(engine)_sm_                // create a FreeCamera_co_ and set its position to (x_dd_-10_co_ y_dd_10_co_ z_dd_-10)                var camera _eq_ new BABYLON.FreeCamera(_t_camera1_t__co_ new BABYLON.Vector3(10_co_ 10_co_-10)_co_ scene)_sm_                camera.mode _eq_ BABYLON.Camera.ORTHOGRAPHIC_CAMERA_sm_                camera.orthoTop _eq_ 2.5_sm_    \t        camera.orthoBottom _eq_ -2.5_sm_    \t\tcamera.orthoLeft _eq_ -5_sm_   \t\tcamera.orthoRight _eq_ 5_sm_                // target the camera to scene origin                camera.setTarget(BABYLON.Vector3.Zero())_sm_                // attach the camera to the canvas                camera.attachControl(canvas_co_ false)_sm_                // create a basic light_co_ aiming 0_co_1_co_0 - meaning_co_ to the sky                var light _eq_ new BABYLON.HemisphericLight(_t_light1_t__co_ new BABYLON.Vector3(0_co_1_co_0)_co_ scene)_sm_                // create a built-in _qt_sphere_qt_ shape_sm_ its constructor takes 5 params_dd_ name_co_ width_co_ depth_co_ subdivisions_co_ scene\t\t\t\t                var loader _eq_ new BABYLON.AssetsManager(scene)_sm_\t\t\t\t\t\tvar meshNames _eq_ [_qt_hex.obj_qt__co_ _qt_cross.obj_qt_]_sm_            \tvar noOfMeshesToBuild _eq_ 6_sm_\t\tvar boundingBox _eq_ new BABYLON.Vector3(4_co_4_co_6)_sm_\t\t\t\t\t\tfor (var i _eq_ 0_sm_ i &lt_sm_ noOfMeshesToBuild_sm_ i++){\t\t        var cross _eq_ loader.addMeshTask(_qt_mesh_qt_ + i_co_ _qt__qt__co_ _qt_assets/_qt__co_ meshNames[Math.floor(Math.random() * meshNames.length)])_sm_\t\t\tcross.onSuccess _eq_ function (task) {\t\t\t\ttask.loadedMeshes[0].position _eq_ new BABYLON.Vector3((Math.random() -0.5) * boundingBox.x_co_ (Math.random() -0.5) * boundingBox.x_co_ (Math.random() -0.5) * boundingBox.x)_sm_\t\t\t}_sm_\t\t}_sm_\t\t\t\t\t\t\t\t\t\tloader.onFinish _eq_ function() {\t\t\tengine.runRenderLoop(function () {\t\t\t\tscene.render()_sm_\t\t\t})_sm_\t\t}_sm_\t\tloader.load()_sm_                // return the created scene                return scene_sm_            }\t\t            // Now_co_ call the createScene function that you just finished creating\tvar scene _eq_ createScene()_sm_\t// Register a render loop to repeatedly render the scene\tengine.runRenderLoop(function () {\t       scene.render()_sm_\t})_sm_\t// Watch for browser/canvas resize events\t        window.addEventListener(_qt_resize_qt__co_ function () {\t\t        engine.resize()_sm_\t\t})_sm_        })_sm__lt_/pre_gt__lt_div_gt_        })_sm__lt_/div_gt__lt_div_gt_    &lt_sm_/script&gt_sm__lt_/div_gt__lt_div_gt_&lt_sm_/body&gt_sm__lt_/div_gt__lt_div_gt_&lt_sm_/html&gt_sm__lt_/div_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-01-04T23:49:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello I_t_m not sure to get your question _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"wxxhrt","Date":"2016-01-05T16:57:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Sorry  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I shouldn_t_t post late at night- think I have it all figured out now._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]