[{"Owner":"danielv","Date":"2014-11-01T15:49:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello everyone!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_First post! _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have been playing around with bablyon (you can guess_co_ I am not a pro graphics programmer) and the first issue I bumped into is_dd_ is there a simple way to get the normal of a surface?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If not_co_ I was thinking on using the following to calculate the normal of a plane._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_P---Q|   |R---T_lt_/pre_gt__lt_p_gt_Take (P-T) × (Q-R). Basically have the cross product of the plane_t_s diagonals._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Is it at all a good solution? Is there a better or simpler way to do this?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-11-03T16:41:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Welcome _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You are right. Just do the following_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var v1v2 _eq_ Q.subtract(P)_sm_var v2v3 _eq_ T.subtract(Q)_sm_var normal _eq_ BABYLON.Vector3.Cross(v1v2_co_ v2v3)_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dsman","Date":"2015-05-03T08:12:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_So I have exact four corner points of plane mesh.  (Not just any point on plane mesh . But real corner points) . Assume P_co_Q_co_R_co_T_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Resulting normal from both of follow code block A  and code block B   is different. Why is it so ? _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_CODE BLOCK A _dd_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var v1v2 _eq_ P.subtract(T)_sm_var v2v3 _eq_ Q.subtract(R)_sm_var normal _eq_ BABYLON.Vector3.Cross(v1v2_co_ v2v3)_sm__lt_/pre_gt__lt_p_gt_CODE BLOCK B _dd_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var v1v2 _eq_ Q.subtract(P)_sm_var v2v3 _eq_ T.subtract(R)_sm_var normal _eq_ BABYLON.Vector3.Cross(v1v2_co_ v2v3)_sm__lt_/pre_gt__lt_p_gt_In case of BLOCK B I get normal _eq_ (0_co_0_co_0)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Am I being dumb here ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-05-03T10:22:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Cross product of two collinear (parallel) vectors is null._lt_/p_gt__lt_p_gt_Check your vector (or points) order._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]