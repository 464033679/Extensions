[{"Owner":"joshcamas","Date":"2016-11-06T00:10:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHia guys!_lt_br /_gt__lt_br /_gt_\n\tI_t_m sure ya_t_ll are familiar with the awesome intersection demo here on the PG_dd__lt_br /_gt__lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#YMFIP_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#YMFIP_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWell_co_ in my own game I_t_m having massive problems. Mainly_co_ the mesh never collides with another mesh._lt_br /_gt_\n\tI_t_ve tried showing bounding boxes to make sure their good_co_ as well as switching between OBB and AABB_co_ and nothing works._lt_br /_gt_\n\tHowever_co_ if I try checking intersection by itself (mesh.intersectsMesh(mesh))_co_ then it works._lt_br /_gt_\n\tI assumed it may have had to do with scaling or something_co_ so I went and tried to replicate it on the PG._lt_br /_gt__lt_br /_gt_\n\tAfter trying to replicate it_co_ I found an even stranger problem!_lt_br /_gt_\n\tIt seems if you create an object after scene initiation_co_ intersections won_t_t work_co_ or something?_lt_br /_gt__lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#15VR2V%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#15VR2V#1_lt_/a_gt__lt_br /_gt__lt_br /_gt_\n\tBut this time_co_ it always intersects with plane_co_ no matter where I place the plane or the sphere! WHAT!?_lt_br /_gt_\n\tAnd I_t_ve made it so it waits a tick before it creates it_co_ and have also tried waiting 10 ticks and such_co_ just in case. _lt_br /_gt__lt_br /_gt_\n\tAny ideas? Am I doing something wrong?_lt_br /_gt_\n\tThanks!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Gijs","Date":"2016-11-06T01:01:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIn your second playground_co_ both the if and else are red_co_ but that wasn_t_t the problem. I changed your playground so that it checks for collisions a frame after the objects have been added to the scene_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#15VR2V%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#15VR2V#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd it works just fine. It adds the meshes after 120 frames_co_ and it checks for collisions at frame 121. Black is no collision_co_ red is collision.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe that helps_lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2016-11-06T01:05:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOk_co_ I was afraid of this. Mannn idk how ima set this up! But yas you found the problem!_lt_br /_gt_\n\tAnd yeah I was going to make it turn white but then forgot to LOL_lt_br /_gt__lt_br /_gt_\n\tThanks a lot!\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2016-11-06T04:38:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tActually_co_ is there a way to not do this? Is there some sort of generation that can be forced out of tick? Cause that_t_d be rad _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_br /_gt_\n\tEDIT_dd_ Just kidding! Simply run plane.computeWorldMatrix(true) and sphere.computeWorldMatrix(true) and boom! _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_ &lt_sm_3 \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"getzel","Date":"2016-11-06T15:36:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tDoes intersectsMesh() works with lines ? And with complex loaded models or it makes a bounding box ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDoes intersectsMesh() works with a box scaled_co_ rotated etc ? (or i have to compute matrix)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDoes IntersectsPoint() works fine with a mesh moving fast_co_ good performance ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI faced some issues.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t(Is it a good practice to detect collisions with raycast ?)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-11-06T16:29:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tintersectsMesh rely on bounding boxes and bounding spheres_co_ so if your mesh has a BBOX (not sure for lines)_co_ it works whatever its origin (loaded or built-in).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBy default_co_ the intersections are computed on axis aligned bounding boxes (AABB) even for scaled meshes_co_ unless you specify you want the _lt_em_gt_precise_lt_/em_gt_ mode what enables OBB (oriented bounding boxes) computations_co_ then taking in account rotations. In brief_co_ you don_t_t need to compute matrices.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you need a better accuracy than bounding boxes only_co_ you have to use a physics engine what provides impostor more specific shapes.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNo idea about intersectsPoint()_co_ didn_t_t test it up now ...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tGenerally_co_ raycast computations are far more CPU intensive than BBOX computations.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"getzel","Date":"2016-11-06T22:37:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThx for your answer.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFinally the little issue I had with lines collision is simply because the engine takes the position centered of the line and not the points _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tvar lineShoot _eq_ BABYLON.Mesh.CreateLines(_qt_lines_qt__co_ [_lt_br /_gt_\n\t    new BABYLON.Vector3(2_co_ 8.8_co_ -2)_co__lt_br /_gt_\n\t    new BABYLON.Vector3(2_co_ 8.8_co_ -4)_lt_br /_gt_\n\t]_co_ scene_co_ false)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor example_co_ here x_dd_2 won_t_t be recognized. It_t_s better to put the points at x_dd_0 and lineShoot.position.x _eq_ 2.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]