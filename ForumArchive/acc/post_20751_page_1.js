[{"Owner":"jacquesr","Date":"2016-02-23T23:45:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi guys_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am currently in search of an algorithm to solve a problem that is very common in 2D_dd_ Snapping. I want to do this in 3D. I couldn_t_t yet find any real information on how to efficiently approach this with 3 dimensions. I want to have the snapping as intuitive and fast as possible_co_ so in my first implementation_co_ I made for the following assumptions for my result_dd__lt_br_gt__lt_br_gt_\n\t1) I try to snap only while colliding. That avoids me having to cache a lot of possible snappoints or struggle with any datatrees. Drawback_dd_ I cannot snap when I_t_m close to an object_co_ only while I collide with it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) The original position _t_where the mesh would be if no snapping occured_t_ is my starting point. With every mouse move I get while dragging a mesh around_co_ I start the procedure again to evaluate possible snap points.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t3) I have a threshold about how far 2 vertices can be apart from each other to cause a snap.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t4) I only snap against 8 points (for now). The lower and upper corners of the bounding box. No center points yet.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t5) If multiple snap points are within the threshold_co_ the closest wins\n_lt_/p_gt_\n\n_lt_p_gt_\n\t6) The same vertex indices cannot snap with each other (would cause the object to sit inside the other one_co_ which is no useful snap)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo far_co_ this procedure works quiet well_co_ as long as it stays in 2D. But there is one feature I want to add_dd_ Automatic raising of the mesh when it is inside another mesh and could stand on top of it. That changes the snap points that are compatible to each other since the mesh being dragged should be inside the area of the snap partner mesh. This is not a problem.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe things I am struggling with is that I can currently not really find a ruleset that works well in terms of how to decide if I can stand on top or need to stand next to a mesh. I can have a lot of differently sized meshes. I can probably not disallow the snapping on top if the mesh is bigger in area size than the one it will be on top of.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI may have to add more info but for now_co_ any ideas on how this can work well are highly appreciated...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI also started thinking if the fully automatic raising of the mesh is generally not a good idea. Instead_co_ one could use the mousewheel to switch Y position layers. During the dragging_co_ layers would automatically be generated for every possible floor Y position I can identify from the currently colliding meshes (that collide on X and Z_co_ of course)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRegards\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJacques\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jacquesr","Date":"2016-02-23T23:49:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tbtw I will add a babylon playground with my current approach_co_ I just have to port the code from my project...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-02-24T08:25:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSnapping... That_t_s a wonderful subject ☺\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI built snapping in an old project of mine_co_ but that was based on a button_co_ that when pressed_co_ snapped one object to the ground. That requires a bit of math and that_t_s about it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI believe you mean snapping while the object is moving? Or dragged with a pointing device? \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jacquesr","Date":"2016-02-24T08:47:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Raanan_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\texactly. The point at which is becomes interesting (from my point of view / experience made so far) is when the 3rd dimension is involved. Snapping only e. g. objects that are on the same floor height (same minimum y bounding box position) is quiet easy. Yet automatically raising an object when it should sit on top of another one is something I could not yet solve to an extend I really like. I ended up being never able to snap to the ground as soon as multiple objects where involved_co_ due to the fact that the thresholds sometimes eliminated the _qt_better_qt_ choice (from the user perspective).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ when automatically raising the object_co_ it is of course no longer behind the pointer. I will try to make a babylon example that I can work on ASAP. I want to solve the _qt_staircase_qt_ case. So that I can move down a staircase with an object just by dragging it and being able to snap to each corner and also side...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tRegards\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJacques\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-02-24T15:31:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tlooking forward to your playground _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt_ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-02-26T12:02:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi guys!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t   Snaps are cool.  I_t_m glad you are trying this_co_ J.  I also look forward to it. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThresholds_co_ yeah boy.  Sometimes I think that the ONLY way to accomplish this... is to use buckies.  (buckies/bucky is an old Stanford Univ. term that I_t_m trying to raise from the dead.  Buckies are keys like control_co_ alt_co_ shift_co_ etc.  Holding control and alt at the same time... is called a _t_double bucky_t_.  Kind of fun).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnnnnnnnyway (continuing right along)_co_ maybe 3D snapping will require them.  For example_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- no bucky during drag_co_ no snaps._lt_br_gt_\n\t- shift key down during drag_co_ X-axis snaps._lt_br_gt_\n\t- alt key... Y-axis snaps._lt_br_gt_\n\t- control key... Z-axis snaps.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe some of the modelers (Maya_co_ Max_co_ Blender_co_ etc) use this same method.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere_t_s another user-interface for snaps_co_ too.  Auto-snap or _qt_smart-snap_qt_... a list of snapping locations.  This would be where the user might repeatedly press control-s_co_ and the snap object keeps snapping to different locations... until the user finds one they like  (probably only useful for building structures with boxes).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJacques_co_ maybe a front-sided box... inside of a double-sided box... is a decent starter playground for snap-meisters such as yourself?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#15LYCI_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#15LYCI_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust you (camera)_co_ a decorative refrigerator magnet (inner box)_co_ 6 refrigerator doors (outer box)_co_ and a dream. _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt_  Good luck!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jacquesr","Date":"2016-03-01T08:34:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Wingnut_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthanks for joining this discussion. I am currently developing a prototype in visual studio which I try to keep in a state that is easy to copy back into the playground.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am going to use different mechanics_co_ a mixture of those you listed above. Might still take a week since I am very busy at this time.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tRegards\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJacques\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jacquesr","Date":"2016-03-03T10:04:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey Guys_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI made it. First prototype that can be shown is ready. Please read my introduction first_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe prototype now only works with pre defined snapping points. The mesh information is extended for every created mesh. I want to add further interaction later (so that e. g. you can also freely move the mesh and snap on X and Z to other meshes) \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can select a mesh with your mouse. When it_t_s selected_co_ you need to hold down Q to show the snap edge points. With Q held at least until you grab a point_co_ you can now drag your mouse onto another mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere is a (hopefully bug free) smart timeout so that when you hold still your mouse over the other mesh for 300ms_co_ it becomes _qt_locked_qt_. Then_co_ you can see possible target points and lock on to them. If you let go the mouse_co_ your mesh moves according to the source and end snap point selected. There is also a preview ghost mesh that shows you what will happen.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlease provide feedback guys.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tLink_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#12LLHA%230_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#12LLHA#0_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEDIT_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlease be aware of the fact that I inject another 2D canvas into the playground to draw the 2D line between the points. I don_t_t know if that works fine in every situation. With chrome on my desktop machine it works fine.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-03-03T14:47:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi J!  Hey_co_ that works REALLY quite nicely!  Well done!  Works very well in my Firefox.  Boy_co_ you_t_ve put lots of work into this. Congrats on proof-of-concept and demo #1!  Sweet!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jacquesr","Date":"2016-03-03T16:31:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks. Going to improve on features so that we get multiple ways to snap. Also_co_ it might need some UX improvements since it could be hard for a dummy user to grasp how to position things or see where in 3D space a point really is. It must meet the stupid user test _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jacquesr","Date":"2016-03-07T11:16:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi guys_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI worked a lot in improving the usability of the prototype.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI made the following changes_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- snapping now works against sides of meshes\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- the source mesh can be grabbed anywhere instead of only on specific points\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- when moving over the side of a mesh_co_ the closest of the already existing edge vectors (which I used in the first prototype) is evaluated and according to the one that is closest to the mouse_co_ the selected mesh is positioned so it is aligned with the vector\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- the mesh can now snap to itself (offset by its own dimension)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCONTROLS_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tClick on a mesh to select it. You need to click once to select it_co_ since I currently do that on mouseup.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen_co_ drag around the mesh (it wont follow your mouse currently_co_ you will get a ghost mesh as soon as you hit the side of another mesh\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe system now feels a lot more natural_co_ at least from my point of view. There are still things that can be improved but it generally works really well.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBe aware that the code includes a fix for mesh.getChildren by injecting the method of 2.3 since it seems to be broken in the playground babylon version at this time.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#28EVFY%230_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#28EVFY#0_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jacquesr","Date":"2016-03-07T12:05:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi guys_co_ another quick addition.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen snapping to sides others than top or bottom_co_ you can use the arrow keys to force a specific list of points to be active only.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tleft arrow _eq_ all left vectors are active only\n_lt_/p_gt_\n\n_lt_p_gt_\n\tright arrow _eq_ all right vectors are active only\n_lt_/p_gt_\n\n_lt_p_gt_\n\tup arrow _eq_ all upper vectors are active only\n_lt_/p_gt_\n\n_lt_p_gt_\n\tdown arrow _eq_ all lower vectors are active only\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tyou can combine up or down with left or right\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthat improves the snap point selection\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlease be aware that the key presses dont retrigger the selection so you need to move the mouse after changing the modifiers\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#28EVFY%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#28EVFY#1_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-03-07T14:42:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThat is working just great_co_ J!  I need coffee before doing more tests_co_ but... I was thinking about how/where to use this.  Certainly Luaacro_t_s new editor could benefit from this_co_ AND a rotation snap as well.  I guess that depends on the save/load abilities of the new editor_co_ too.  Now where_t_s that darned _lt_strong_gt_scene graph to playground editor_lt_/strong_gt_ button?  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt_  (that was a lame reference to another thread - ignore that comment at will)  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n_lt_p_gt_\n\tThe drags and keypresses needed for your snap... are sure to collide with other clicks_co_ drags_co_ and keypresses that are in some user scenes. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is made for an editor_co_ right?  Or maybe... for... when a scene is in _qt_edit mode_qt_.  There will be times when... umm... user might want to _qt_remember_qt_ all the snaps they did to a scene... by generating JS that they can paste into their scene code.  After an hour of playing in Snapperville_co_ they might want to see a dump of actions.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tbox1.position _eq_ blah_sm__lt_br_gt_\n\tsphere3.position _eq_ foo_sm__lt_br_gt_\n\tetc.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThey could paste this dump... into their scene_co_ and then the snaps would be permanent... and re-done programmatically... at RUN time.  Naturally_co_ if a user snapped a box to 10 different locations before they were satisfied_co_ we would want ONLY the LAST snap position to be in the dump list.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy dream... is to _lt_em_gt_easily_lt_/em_gt_ assemble space craft and other _t_compound models_t_... using all BJS primitive shapes. Then_co_ somehow _lt_strong_gt_save_lt_/strong_gt_ the space craft assembly (save/dump all the .position changes that caused the space craft to assemble into that shape).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI don_t_t know.  I_t_m just bubbling_co_ here... thinkin_t_ and inkin_t_.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt_  Thoughts?  Anyone?  I really like what you_t_ve done here_co_ J!  Nice job!_lt_br_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jacquesr","Date":"2016-03-07T15:37:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWell_co_ we are using that for a logistics component that shows a truckload which allows interactive load editing. There are customers demanding highly interactive capabilities for such a component and I_t_m faced with getting this to work. We already have an undo/redo mechanism for position and rotation changes and it just works great. Combined with a port of my prototype into our project_co_ I think there might be users that can optimize their load for their needs faster than an algorithm could. That is - of course - only for specific cases and demands.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWith the undo/redo_co_ we also only save the state that is achieved when the user lets go the mouse. The mesh/3D scene stuff acts as a slave component that listens to events on a nodetree_co_ which can be edited with a command system (that stores the actions for undo/redo). The only special case where it is the other way around is the interactive editing that is done with the mouse_co_ since here_co_ the mesh positions lead the node tree. When the mouse is let go_co_ we get the cached overall offset from the last permanent position and create a command with that (_qt_move the node by x/y/z_qt_ command). We then redraw the node (which causes multile mesh disposals/recreates).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ for rotation_co_ we do an animation and when we are done_co_ do a redraw (dispose/recreate) to ensure that transformations don_t_t become irritating when working with positions.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut back to the snapping_dd_ I might write a class that contains all things that extend the mesh so it can work with the snapping system. And then the modifiers can be freely bound to keys by only publishing certain editable states.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-03-07T16:01:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tExcellent!!!  Wow_co_ thanks for sharing that with me/us.  What a great application.  Yum!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2016-03-07T19:08:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWoaw_co_ that_t_s a great piece of code! Congrats!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jacquesr","Date":"2016-03-08T08:39:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_img alt_eq__qt__dd_ph34r_dd__qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_ph34r.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/ph34r@2x.png 2x_qt_ title_eq__qt__dd_ph34r_dd__qt_ width_eq__qt_20_qt__gt__lt_br_gt_\n\tCode Ninja _lt_img alt_eq__qt__dd_P_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ title_eq__qt__dd_P_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you for the feedback guys.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tGoing to give you a typescript class for easier integration... Have to port that first. Might take another week_co_ maybe.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-03-08T15:31:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tbtw_co_ you don_t_t _qt_give_qt_ a typescript.  The community actually comes to you_co_ and wraps itself around you and all your code and ideas.  No toss_t_n_t_run.  You will be safely and gently ensconced in the gooey goodness of the BJS community/framework.  You will become _qt_one_qt_ with us.  Resistance is futile.  hehe.  (yikes)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jacquesr","Date":"2016-03-29T18:54:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey everyone_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI just wanted to let you know that I am still working on the class... It has become quiet specific since I needed some extensions due to the fact that we have a very specific mesh cascading (e. g. where the mesh moved is not the mesh picked and there are some rules)_lt_br /_gt__lt_br /_gt_\n\tI might still release a real reuse class but it can take some time...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]