[{"Owner":"Vousk-prod.","Date":"2015-02-20T21:23:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi fellows_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Is there a way to determine whether a mesh is or not hidden by other meshes ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For now I_t_m hijacking _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_scene.pick _lt_/span_gt_to do that (I calculate mesh XY position in canvas space and then use _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_scene.pick_lt_/span_gt_ to see if that mesh is the first one to be hit)._lt_/p_gt__lt_p_gt_That works pretty well_co_ but _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_scene.pick_lt_/span_gt_ is a heavy ressource consumer when the scene contains complex meshes._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You can check that in this PG (uncomment the loading of the skull to see the impact of complex meshes_co_ FPS drop to 5 / 20 instead of 60 with simple objects - without scene.pick_co_ skull scene is easily 60 FPS -) _dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#NA4OQ%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#NA4OQ#4_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Is there a smarter way to check mesh visibility (or to optimise _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_scene.pick _lt_/span_gt_hijacking) ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-02-20T22:09:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You can use Octree regarding the resource consumption scene.pick_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p style_eq__qt_margin_dd_15px 0px_sm__qt__gt_mesh.useOctreeForPicking _eq_ true_sm__lt_/p_gt__lt_p style_eq__qt_margin_dd_15px 0px_sm__qt__gt_or _lt_/p_gt__lt_p style_eq__qt_margin_dd_15px 0px_sm__qt__gt_octree _eq_ scene.createOrUpdateSelectionOctree()_sm__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-02-21T00:40:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks for the suggestion_co_ my problem here with octree is that I can_t_t predict the scene in advance (created on the fly)_co_ most of the case there will be few objects but they can have around 1k to 5k vertices each_co_ with submeshes (because using submaterials)_co_ and to be really annoying those meshes are not static (that_t_s why I need to check visibility at every frame)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m pretty sure the situation would make octree usage counter productive. But thanks for the suggestion I_t_ll do some tests._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Anyway if someone has a better method than mine to check if a mesh is hidden by another that would be nice. I feel that _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_scene.pick _lt_/span_gt_is an ugly workaround for that and I don_t_t like coding too badly _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-02-21T00:52:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hmmm_co_ when I activate octree_co_ the skull doesn_t_t appear anymore (but it still drop FPS down _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_laugh.png_qt_ alt_eq__qt__dd_lol_dd__qt__gt_ )_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_(First attempt with octree for me_co_ I_t_m certainly doing something bad...)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#NA4OQ%236_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#NA4OQ#6_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-02-21T16:16:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Here is the good one_dd_)_lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#NA4OQ%237_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#NA4OQ#7_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-02-21T16:56:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Oh yes_co_ thank you._lt_/p_gt__lt_p_gt_I forgot this _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_mesh.subdivide()_lt_span style_eq__qt_font-family_dd_arial_co_ helvetica_co_ sans-serif_sm__qt__gt_stuff. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wacko.png_qt_ alt_eq__qt__dd_wacko_dd__qt__gt__lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt__lt_span style_eq__qt_font-family_dd_arial_co_ helvetica_co_ sans-serif_sm__qt__gt_ _lt_/span_gt__lt_/span_gt_However the octree doc well mentions it _lt_/span_gt__lt_/span_gt_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_happy.png_qt_ alt_eq__qt_^_^_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/happy@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Since I have scenes where not pre-known meshes can be injected on the fly_co_ I think that a vertices count check at each insertion could be a good way to determine for each one if octree would be interesting_co_ am I right ?_lt_/p_gt__lt_p_gt_Is there an avergae vertices count I should keep in each mesh and subMeshes for performance to not drop down ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And also_co_ if I apply _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_subdivide()_lt_/span_gt_ to mesh that already have submeshes (I always have submaterials on those meshes)_co_ will this add submaterials or brake submaterials indexes ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-02-21T18:16:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You_t_re right_dd_)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have no good heuristic but I try to get like 200 vertices per sub-meshes_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Do not subdivide on a mesh with submeshes because this will kill the submaterials_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-02-21T19:10:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok. Thanks for the piece of info._lt_/p_gt__lt_p_gt_Sad news for the submaterials killing_co_ I won_t_t be able to use subdivide very often... _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_unsure.png_qt_ alt_eq__qt__dd_unsure_dd__qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Any other idea to check if a mesh is viewed by the camera ? Maybe an already existing mechanism you_t_re using for mesh visilibility / rendering / culling I can study and hijack to do this with maximum efficiency ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-02-22T17:24:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Internally you can use mesh.isInFrustum(frustumPlanes)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-02-22T20:04:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hmmm_co_ I must definitly have a look at this ! Thanks._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]