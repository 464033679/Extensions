[{"Owner":"ChrisR","Date":"2015-09-09T05:14:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This is a followup from a previous post where i was trying to clone a mesh and serialize the scene. _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/17024-cloning-an-imported-mesh-serialize-then-open-scene/_qt__gt_http_dd_//www.html5gamedevs.com/topic/17024-cloning-an-imported-mesh-serialize-then-open-scene/_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It turned out that when i clone and serialize a mesh they seem to attach themselves somehow to each other._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So here i clone a mesh_co_ and move just the clone_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1O8OKN_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1O8OKN_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Works great! the clone moves seperate to the mesh._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now i serialize the scene and save it to a file. When i load that scene_co_ i can_t_t move just the clone by itself anymore. They appear to be attached. _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#JQE2O_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#JQE2O_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The two meshes on top of each other_co_ this can be confirmed in the debug layer. Does anyone have any suggestions on how to fix this? how to perhaps separate them? or even what is going on so i can try to understand it?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Currently all i can see is that both cloned meshes have the same ID. But they both have the same ID when i first clone it and it works great. But after i load it not so lucky._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Any ideas?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ChrisR","Date":"2015-09-09T07:06:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Getting closer. It appears to be a serialization issue. When it reloads the meshes_co_ all the meshes from the original object have the clone object equivilant as their parent. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It is not like this right before serialization. So the issue appears to be in the babylon serializer for clones. I_t_ll report back if i find anything. If anyone has insight to that which can help me please weigh in._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ChrisR","Date":"2015-09-09T07:23:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok_co_ it actually came down to how Babylon clones a Mesh._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It copies over the ID of the mesh from the old to the new. Then when it serializes and reloads_co_ it causes the loader to misinterpret the proper parent._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I fixed this by adding_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_ if (source) { ...       this.id _eq_ name + _qt_._qt_ + source.id_sm_     ...}_lt_/pre_gt__lt_p_gt_To babylon.mesh.ts constructor. Now every cloned mesh also gets a cloned unique id_co_ not just a cloned unique name._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-09-09T16:22:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_well done..I_t_m gonna fix it _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]