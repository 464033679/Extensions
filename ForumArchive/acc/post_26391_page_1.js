[{"Owner":"ZackMFleischman","Date":"2016-11-15T01:07:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey all!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo I noticed some behavior where a decal was _qt_bleeding through_qt_ (or duplicating itself) through the thinner parts of models. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe behavior is witnessed in the standard decal playground if you try to put a decal on the feet of the cat_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1BAPRM_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1BAPRM_lt_/a_gt_ (See the attached images for an example)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve already read pretty extensively through the Decal_t_s thread_dd_ \n_lt_/p_gt_\n_lt_iframe data-embedcontent_eq__qt__qt_ frameborder_eq__qt_0_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/topic/12974-decals/?do_eq_embed_qt__gt__lt_/iframe_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tFrom that thread I gleamed that I can mitigate this slightly by limiting the Z scale on the decal size. However this is far from ideal as I_t_m painting decals on arbitrary meshes_co_ many of which have several bends and/or are very thin_co_ so it very much seems like I have the trade off of not letting my decal bleed through to the other side of a mesh with unnecessarily clipping it around corners &lt_sm_ 90.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI can appreciate that there is some difficulty getting the decal_t_s to behave appropriately when wrapped past 90 degrees_co_ but does anyone with some knowledge of the behemoth that is the decal implementation have insight to how we can at least correct this duplication / bleed through issue?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tZack\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_11/Babylon_js_Playground.png.b3c97444190979fcdb14f1bb6d348f8e.png_qt_ data-fileid_eq__qt_10272_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_Babylon_js_Playground.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_10272_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_11/Babylon_js_Playground.thumb.png.aacbd5b1455a53726243fe59d0fe2cbb.png_qt_ /_gt__lt_/a_gt__lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_11/582a5dcae48da_Babylon_js_Playground2.png.555c78365853ed4a801278ac41437a9f.png_qt_ data-fileid_eq__qt_10271_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_Babylon_js_Playground 2.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_10271_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_11/582a5dcba66ee_Babylon_js_Playground2.thumb.png.f34fd48506f6f4f8f93c7b1ca71ed817.png_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-11-15T16:57:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello the decal _qt_captures_qt_ a volume of the target mesh. This volume is defined by the decal size.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor instance_co_ here_co_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1BAPRM%2378_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1BAPRM#78_lt_/a_gt__co_ the size on Z _eq__eq_ 2 and it works.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYour conclusion is correct and if you want to take in account all kind of meshes I guess you will have to tweak the decal size on a per mesh basis\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ZackMFleischman","Date":"2016-11-15T21:29:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWould you mind sharing a bit more insight as to the Decal algorithm? I might like to modify it to only create the triangles of the decal mesh whose normal is within a certain range of the normal at the pick point. (by means of the angle between them)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI guess I could also _qt_transparent out_qt_ the non-desired triangles as well.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor my use case I don_t_t always have the luxury of knowing what every mesh is_co_ and even then there are some meshes that just don_t_t work by tweaking the decal size_co_ because they_t_re too rounded and sharp at some points so culling the volume on the Z-Axis produces undesired cropping of the decal_co_ but they_t_re thin at other points so it would bleed through.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for your input_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tZack\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-11-16T18:02:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThat_t_s the power of open source_co_ everything is public _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/7c0b819e8021b4e3254ac1b3d90ae585bf6c2125/src/Mesh/babylon.meshBuilder.ts#L892_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/7c0b819e8021b4e3254ac1b3d90ae585bf6c2125/src/Mesh/babylon.meshBuilder.ts#L892_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFeel free to submit a PR if you want to improve it so that everyone will be able to use it\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]