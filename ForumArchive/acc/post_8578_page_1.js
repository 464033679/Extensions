[{"Owner":"remwrath","Date":"2014-08-15T09:40:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This is probably more specifically directed at JCPalmer._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have a few features I would like to see in the blender exporter TOB_co_ most of which I am willing to try add myself_co_ although I thought it might be a good idea to have a discussion first to see if some of the ideas are possible_co_ worth doing and in line with what TOB might aiming for._lt_/p_gt__lt_ul_gt__lt_li_gt_export should also create html_t_s so output  can be run straight away.(for beginners and quick testing)_lt_/li_gt__lt_li_gt_might also be handy to run and handle a python httpd server_lt_/li_gt__lt_li_gt_make more use of blender data(might make more sense to use _t_blender game_t_ render engine as the settings will be more appropriate) rather than creating own ui from which to collect data ie shadow casting_co_ shadow receiving_co_ collision check etc._lt_/li_gt__lt_li_gt_live streaming from blender so you can see updates in the browser in realtime._lt_/li_gt__lt_li_gt_this one is a bit more open ended by my intention is to allow for full development of the webgl app inside of blender including logic coding(straight javascript or maybe even some sort of logic node system visual and non visual)_lt_/li_gt__lt_/ul_gt__lt_p_gt_Would be handy to know your thoughts and plans._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2014-08-18T13:59:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_remwrath_co__lt_/p_gt__lt_p_gt_Thanks for the typo fixes.  The html_t_s are a good idea.  There are a lot of possible combinations_co_ but if they are beginner oriented_co_ the whole scene for both inline or JSON should probably be produced.  This project is all about computer generating code / templates.  The other recommendations I am not familiar enough to comment on._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_As you know_co_ I am in the process of getting a fix version (0.99.1) uploaded with multiple fixes (self inflicted problems stopping me).  Will consider doing the html outputs as part of 1.0.  After that_co_ the more developers the merrier.  _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I think I have everything done for 1.0 except for_dd__lt_/p_gt__lt_p_gt_-  Should I have an import statement in the .ts output?  The .ts errors when it is generated inside a fork of BabylonJS.  On the good side_co_ commented out_co_ perfect .js is generated from it  (in version 0.99.1_co_ still not in main repository)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_- Thinking about changing the specification of position / scaling / rotation from .x_co_ .y_co_ .z _eq_ 123_co_ to a new Vector3.  Something weird happened once only to .js.  Trying to remember what it was._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Things in my life have interrupted my work this month.  Will hopefully be active again next week._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Jeff_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2014-09-02T16:18:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I have now put 2 different type of .html files that can be created loading either the .babylon or .js.  Outputs .babylon_co_ .js_co_ .ts_co_ xxx_JSON.html_co_ &amp_sm_ xxx_inline.html are now optional_co_ generated by default.  The .log is always generated._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I needed to turn off backface culling for a material_co_ so I had to find out what you were talking about with regard to the _t_blender game_t_ render engine. I see the shadow UI stuff.  Not exactly the same as the custom properties.  Shadows are difficult to get to work in Babylon.  Think they are being worked on.  Better to options open to change with custom UI._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Not putting in a pull request until my octree request is answered_co_  I figure out a little more about hot keys_co_  see what _t_selected layer option_t_ added to the original .py is about (thought it was already implemented with isVisible)_co_ check out 1 anomaly with rotation for the .js &amp_sm_ .ts._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2014-09-02T17:06:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ah_co_ I see what the _t_Export only current layer_t_ is about.  If lights or cameras are not in a currently selected layer they are invisible_co_ and the is_visible() check culls them from the export (Wow_co_ I love TOB_t_s log file).  Meshes are not set invisible when not in a currently selected layer_co_ so they cannot use the is_visible() check.  Am going to implement slightly differently from original.py.  Will just put in a comment for cameras &amp_sm_ lights_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if object.is_visible(scene)_dd_ # no isInSelectedLayer() required_co_ is_visible() handles this for them_lt_/pre_gt__lt_p_gt_Also_co_ remember what my rotation issue was.  Child not rotating with parent_co_ because parent assignment line was removed_co_ fixed a long time ago._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_That just leaves the octrees request_co_ and finding why the 2 babylon exports do not have a right click menu item to assign a hot-key.  Cannot find any explicit code in other exporters to enable this.  Did find code which explicitly sets something to a hot-key.  Will give that a try._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]