[{"Owner":"jerome","Date":"2015-02-12T16:24:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Again some problem with normals._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have a list of vector3 to construct some mesh._lt_/p_gt__lt_p_gt_I set my vectors3 as _lt_em_gt_positions_lt_/em_gt_. Right._lt_/p_gt__lt_p_gt_I set my indices to have nice tiny triangles (faces) between my _lt_em_gt_positions_lt_/em_gt_. Right. I call this indices array _dd_ _lt_em_gt_indicesRecto_lt_/em_gt_._lt_/p_gt__lt_p_gt_I compute my normals from these positions/indices. No problem. The same _dd_ in a _lt_em_gt_normalsRecto_lt_/em_gt_ array._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I inject all that stuff in a vertexData object._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I get a mesh reflecting light on one side._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now I want it to reflect light the other side._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I keep my _lt_em_gt_positions_lt_/em_gt_ as they are_co_ as I don_t_t need new vertices for this mesh._lt_/p_gt__lt_p_gt_I create a new indices array called _lt_em_gt_indicesVerso_lt_/em_gt_. I populate it by creating my nice tiny triangles the opposite rotation direction from the one I used for _lt_em_gt_indicesRecto_lt_/em_gt_. Trust me_co_ it works._lt_/p_gt__lt_p_gt_I compute normals with the original unchanged positions and this _lt_em_gt_indicesVerso_lt_/em_gt_ array._lt_/p_gt__lt_p_gt_I populate so my _lt_em_gt_normalsVerso_lt_/em_gt_ array._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I check _dd_ I inject _lt_em_gt_positions_lt_/em_gt__co_ _lt_em_gt_indicesVerso_lt_/em_gt_ and _lt_em_gt_normalsVerso_lt_/em_gt_ in the vertexData instead of _lt_em_gt_Recto_lt_/em_gt_ stuff._lt_/p_gt__lt_p_gt_I then get a mesh reflecting the light the other side. Perfect._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So_co_ now I concat my indices and normals _lt_em_gt_Recto_lt_/em_gt_ and _lt_em_gt_Verso_lt_/em_gt_ arrays._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_normals _eq_ normalsRecto.concat(normalsVerso)_sm_indices _eq_ indicesRecto.concat(indicesVerso)_sm__lt_/pre_gt__lt_p_gt_You get it ?_lt_/p_gt__lt_p_gt_ok_co_ check _dd_ my _lt_em_gt_normals_lt_/em_gt_ and _lt_em_gt_indices_lt_/em_gt_ arrays are well twice as long as _lt_em_gt_Recto_lt_/em_gt_ and _lt_em_gt_Verso_lt_/em_gt_ relatives._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Then_co_ I inject these _lt_em_gt_positions_lt_/em_gt__co_ _lt_em_gt_indices_lt_/em_gt_ and _lt_em_gt_normals_lt_/em_gt_ in my vertexData object._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But I only get the light reflecting on the first face _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_If I swap _lt_em_gt_Recto_lt_/em_gt_ and _lt_em_gt_Verso_lt_/em_gt_ in the _lt_em_gt_concat(_lt_/em_gt_)_lt_em_gt__co_ _lt_/em_gt_then light reflects the other side only._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What do I do wrong ?_lt_/p_gt__lt_p_gt_I just can_t_t get it _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Or is it again some vertex reuse issue (I kept my original _lt_em_gt_positions_lt_/em_gt_ but created two _qt_opposite-wise_qt_ triangles on the same vertices triplet )?_lt_/p_gt__lt_p_gt_In other terms_co_ do I have to declare twice the same positions for the _lt_em_gt_computeNormals()_lt_/em_gt_ method ?_lt_/p_gt__lt_p_gt_I just couldn_t_t find out what could be wrong after reading this method github code _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-02-12T17:08:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Double sided meshes aren_t_t supported. For meshes that need double sided the solution we use in 3DS Max is to use the _qt_shell modifier_qt_ on the mesh parts that need to be double sided. Just set the inner and outer amounts to 0. in blender it_t_s called _qt_solidify_qt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_3DS_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//docs.autodesk.com/3DSMAX/15/ENU/3ds-Max-Help/index.html?url_eq_files/GUID-E38BD284-3283-4311-AC29-3F699B2F04AA.htm_co_topicNumber_eq_d30e96227_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//docs.autodesk.com/3DSMAX/15/ENU/3ds-Max-Help/index.html?url_eq_files/GUID-E38BD284-3283-4311-AC29-3F699B2F04AA.htm_co_topicNumber_eq_d30e96227_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Blender_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//archive.blender.org/development/release-logs/blender-256-beta/solidify-modifier/index.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//archive.blender.org/development/release-logs/blender-256-beta/solidify-modifier/index.html_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-02-12T17:29:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I want to construct them thru code... not from an external soft. _lt_/p_gt__lt_p_gt_Because I want be able to have the double-side for maths generated meshes for instance._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here_co_ I just apply two layers of triangles oriented counter-wise on the same geometry._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-02-12T17:54:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_15_t_ doing something else_co_ chatting with my son about books_co_ etc_co_ in brief thinking to something else_lt_/p_gt__lt_p_gt_Anyway_co_ I won_t_t tell my life here (did I ?  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ )_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And suddenly _dd_ _qt_EUREKA !_qt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I guess it is exactly the same problem as for UVs _dd_ there is ONE normal per vertex used the _lt_em_gt_indices_lt_/em_gt_ array._lt_/p_gt__lt_p_gt_I reuse vertices... so can_t_t associate more than ONE normal with a given vertex._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Pffff_co_ solving a problem by finding it can_t_t be solved is not that glorious.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In brief_co_ as for UVs_co_ vertices are to be declared twice in the _lt_em_gt_positions_lt_/em_gt_ array if we want 2 normals on each vertex (one for each face) imo._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Just wasting my time in optimizing algos to reuse vertices_co_ pfffff  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_angry.png_qt_ alt_eq__qt__dd_angry_dd__qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-02-12T17:59:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Sadly you are correct... I think that this is a webGL limitation more than anything. I messed with this problem myself for a short while before we gave up and just decided to edit our models._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"spritefire","Date":"2015-02-12T21:21:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_span style_eq__qt_font-size_dd_14px_sm__qt__gt_hmmm but somehow it is done here_dd__lt_br_gt__lt_a href_eq__qt_http_dd_//mrdoob.github.io/three.js/examples/webgl_performance_doublesided.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//mrdoob.github.io/three.js/examples/webgl_performance_doublesided.html_lt_/a_gt__lt_br_gt_maybe it_t_s just emulating the effect?_lt_br_gt__lt_br_gt_*edit_lt_br_gt_the doubleside using that has been depreciated and now its just side (but can still do both sides)_lt_br_gt__lt_br_gt__lt_span style_eq__qt_font-size_dd_12px_sm__qt__gt__lt_span style_eq__qt_font-family_dd_arial_co_ helvetica_co_ sans-serif_sm_color_dd_rgb(0_co_0_co_0)_sm__qt__gt_._lt_/span_gt__lt_a title_eq__qt_Enum_qt_ rel_eq__qt_external nofollow_qt__gt_side_lt_/a_gt__lt_/span_gt__lt_/span_gt__lt_/p_gt__lt_div style_eq__qt_color_dd_rgb(85_co_85_co_85)_sm_font-family_dd_inconsolata_sm_font-size_dd_15px_sm__qt__gt__lt_span style_eq__qt_font-size_dd_12px_sm__qt__gt__lt_span style_eq__qt_font-family_dd_arial_co_ helvetica_co_ sans-serif_sm__qt__gt_Defines which of the face sides will be rendered - front_co_ back or both._lt_/span_gt__lt_/span_gt__lt_/div_gt__lt_div style_eq__qt_color_dd_rgb(85_co_85_co_85)_sm_font-family_dd_inconsolata_sm_font-size_dd_15px_sm__qt__gt__lt_span style_eq__qt_font-size_dd_12px_sm__qt__gt__lt_span style_eq__qt_font-family_dd_arial_co_ helvetica_co_ sans-serif_sm__qt__gt__lt_span style_eq__qt_font-size_dd_14px_sm__qt__gt__lt_span style_eq__qt_font-size_dd_12px_sm__qt__gt_Default is _lt_a title_eq__qt_Materials_qt_ rel_eq__qt_external nofollow_qt__gt_THREE.FrontSide_lt_/a_gt_. Other options are _lt_a title_eq__qt_Materials_qt_ rel_eq__qt_external nofollow_qt__gt_THREE.BackSide_lt_/a_gt_ and _lt_a title_eq__qt_Materials_qt_ rel_eq__qt_external nofollow_qt__gt_THREE.DoubleSide_lt_/a_gt_._lt_/span_gt__lt_br_gt__lt_br_gt_If it can be done maybe there is also a solution for your UV problem?_lt_/span_gt__lt_/span_gt__lt_/span_gt__lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-02-13T09:26:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_yep they did it..._lt_/p_gt__lt_p_gt_Before hacking their code_co_ I still want to find out a way by myself _dd_ self pride_co_ you know _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ and sometimes other simplier ideas than threejs community ones. ex _dd_ my tubeMesh doesn_t_t use any Fernet formulas_co_ so far more light in terms of computation and it is an acceptable tube_co_ imho ... the lone I take into account _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_mmh.. for now_co_ I_t_m thinking about a lazy way to achieve it (still not working) _dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I construct my single sided mesh as usual _dd__lt_/p_gt__lt_p_gt_populating the _lt_em_gt_positions_lt_/em_gt_ array_co_ populating the _lt_em_gt_indices_lt_/em_gt_ array_co_ then populating with_lt_em_gt_ computeNormals()_lt_/em_gt_ the _lt_em_gt_normals_lt_/em_gt_ array._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now_co_ before injecting these three array in the vertexData object_co_ I attempt to _qt_duplicate_qt_ this representation on itself _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_    BABYLON.VertexData.ComputeNormals(positions_co_ indices_co_ normals)_sm_    positions _eq_ positions.concat(positions)_sm_    indices _eq_ indices.concat(indices)_sm_    var ln _eq_ normals.length_sm_    for (var i _eq_ 0_sm_ i &lt_sm_ ln_sm_ i++) {      normals.push( -1 * normals[i] )_sm_    }_lt_/pre_gt__lt_p_gt_As you can see_co_ here I just replicate each position_co_ each indice in their corresponding arrays. I declare them twice_co_ no reuse at all._lt_/p_gt__lt_p_gt_I just set the normals as opposite (negative) from the original computed ones_co_ for the light reflection on the second face._lt_/p_gt__lt_p_gt_Then only I inject them in the vertexData object._lt_/p_gt__lt_p_gt_Very lazy_co_ isn_t_t it ?_lt_/p_gt__lt_p_gt_and no normals big recomputation for the second side_co_ just setting as opposite._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Still not working... Light reflects on the first side only._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And I guess why this time _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_When replicating each indice_co_ I didn_t_t change what they reference. So added indices still reference original vertices only_co_ not added ones._lt_/p_gt__lt_p_gt_Trying to fix it_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-02-13T09:58:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Let_t_s go_co__lt_/p_gt__lt_p_gt_I change references to _lt_em_gt_positions_lt_/em_gt_ in the added _lt_em_gt_indices_lt_/em_gt_ _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_    BABYLON.VertexData.ComputeNormals(positions_co_ indices_co_ normals)_sm_    var lp _eq_ positions.length / 3_sm_    positions _eq_ positions.concat(positions)_sm_    var li _eq_ indices.length_sm_    for (var i _eq_ 0_sm_ i &lt_sm_ li_sm_ i++) {      indices.push(indices[i]+lp)_sm_    }    var ln _eq_ normals.length_sm_    for (var i _eq_ 0_sm_ i &lt_sm_ ln_sm_ i++) {      normals.push( -1 * normals[i] )_sm_    }_lt_/pre_gt__lt_p_gt_aaarggg _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_ohmy.png_qt_ alt_eq__qt__dd_o_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/ohmy@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_Now I get the reflection only on the back side _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ (good point _dd_ the negative normals work fine)_lt_/p_gt__lt_p_gt_Yet_co_ I have positions declared twice_co_ indices refering no reused vertices (all positions)_co_ and normals set for both sides_lt_/p_gt__lt_p_gt_Still digging _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ ..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-02-13T14:55:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_okay_lt_/p_gt__lt_p_gt_seems to be a big mess in my _lt_em_gt_indices_lt_/em_gt_ references somewhere_lt_/p_gt__lt_p_gt_re-starting from scratch with a very simple mesh and vertices+normals visualizer _dd_  _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#K6SNA%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#K6SNA#2_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-02-13T15:03:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_let_t_s add the lazy double-siding line 56 _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#K6SNA%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#K6SNA#3_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now_co_ there are twice vertices as before and there are normals for each side ..._lt_/p_gt__lt_p_gt_But only the back face reflects the light _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#K6SNA%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#K6SNA#4_lt_/a_gt__lt_/p_gt__lt_p_gt_Don_t_t get why ..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-02-13T16:29:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I really feel stuck in this problem_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Okay_co_ maybe my _lt_em_gt_normals_lt_/em_gt_ lazy computation is not orthodox enough_co_ so I comment it out and now use the ol_t_good _lt_em_gt_computeNormals()_lt_/em_gt_._lt_/p_gt__lt_p_gt_Okay_co_ Okay_co_ maybe just replicating the indices is not enough because the tiny replicated triangles are the same orientation as the ones on the first side. So I explicitly recontrusted inverted tiny triangles with the opposite orientation _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#K6SNA%235_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#K6SNA#5_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_strong_gt_line 68_lt_/strong_gt_ _dd_ _lt_em_gt_computeNormals()_lt_/em_gt_ instead of negative normals_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_strong_gt_line 61_lt_/strong_gt_ _dd_ inverted tiny triangles_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I even use two different indice arrays _dd_ _lt_em_gt_indices1_lt_/em_gt_ for right face_co_ _lt_em_gt_indices2_lt_/em_gt_ for back face._lt_/p_gt__lt_p_gt_I have now replicated _lt_em_gt_positions_lt_/em_gt__co_ _lt_em_gt_indices_lt_/em_gt_ in two different arrays and will compute the _lt_em_gt_normals_lt_/em_gt_ with the usual _lt_em_gt_computeNormals()_lt_/em_gt_ method._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thus _lt_strong_gt_line 66_lt_/strong_gt_ if you switch _lt_em_gt_indices _eq_ indices1_sm__lt_/em_gt_ or _lt_em_gt_indices _eq_ indices2_sm__lt_/em_gt_ and re-run_co_ you will see either  the right face_co_ either the back face reflecting the light._lt_/p_gt__lt_p_gt_You can then check the visualized normals are the right enlighted side each time._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So if you uncomment_lt_strong_gt_ line 67_lt_/strong_gt_ _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_//indices _eq_ indices.concat(indices2)_sm__lt_/pre_gt__lt_p_gt_you would expect (I would !) both faces to reflect the light_co_ wouldn_t_t you ?_lt_/p_gt__lt_p_gt_But _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#K6SNA%236_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#K6SNA#6_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt__lt_em_gt_(the same not wireframed _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#K6SNA%237_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#K6SNA#7_lt_/a_gt_ ) _lt_/em_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_As you can see_co_ normals are right both sides_co_ but only the back face reflects the light._lt_/p_gt__lt_p_gt_Just can_t_t get why ..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Any help or tip welcome  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-02-13T19:34:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It_t_s getting weirder and weirder_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#K6SNA%238_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#K6SNA#8_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_strong_gt_line 58_lt_/strong_gt_ _dd_ instead of concatening _lt_em_gt_positions_lt_/em_gt_ to themselves to replicate them_co_ here I copy/cut the same _lt_em_gt_for_lt_/em_gt_ loop (line 39) populating the initial _lt_em_gt_positions_lt_/em_gt_ array. As you can see_co_ I move the back face of +2 on the z-axis._lt_/p_gt__lt_p_gt_What_t_s happening then ? both faces reflect the light !!!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Ok_co_ let_t_s stick them back (no +2 on z-axis) _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#K6SNA%239_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#K6SNA#9_lt_/a_gt_  (still line 58) _lt_/p_gt__lt_p_gt_Only the back face reflects the light ... _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wacko.png_qt_ alt_eq__qt__dd_wacko_dd__qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Have a last look at_lt_strong_gt_ line 70_lt_/strong_gt_ _dd_ _lt_em_gt_indices_lt_/em_gt_ is the concatenation of _lt_em_gt_indices1_lt_/em_gt_ with _lt_em_gt_indices2_lt_/em_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Let_t_s switch them _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_indices _eq_ indices2.concat(indices1)_sm__lt_/pre_gt__lt_p_gt_ _lt_em_gt_indices2_lt_/em_gt_ first_co_ _lt_em_gt_indices1_lt_/em_gt_ after_co_ ok ?_lt_/p_gt__lt_p_gt_tadaddaaannn _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#K6SNA%2310_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#K6SNA#10_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now the first face reflects the light  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_blink.png_qt_ alt_eq__qt__dd_blink_dd__qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And if I unstick back the two faces (_lt_strong_gt_line 59_lt_/strong_gt_ _dd_ +2 on z-axis ) _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#K6SNA%2311_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#K6SNA#11_lt_/a_gt__lt_/p_gt__lt_p_gt_Both faces reflect the light again  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wacko.png_qt_ alt_eq__qt__dd_wacko_dd__qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What do I understand about all of this ..?_lt_/p_gt__lt_p_gt_Not much.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If my algo is not too wrong_co_ when two opposite faces are merged (with opposite normals for each face)_co_ the light reflection takes into account only the _qt_last_qt_ (*) normals to compute the face brightness._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_(*) the last _eq_ the last declared when iterating the _lt_em_gt_normals/indices_lt_/em_gt_ arrays._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Has this something to do with BJS internal light computation or webGL limitations ?_lt_/p_gt__lt_p_gt_Definetly no idea  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_mellow.png_qt_ alt_eq__qt__dd_mellow_dd__qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I sadly have to admit I can_t_t achieve this double-side feature by myself (tough for self pride  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ ) and will probably will have to hack_co_ if I succeed_co_ how the threejs guys deal with this._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_BTW_co_ my lazy algo allow to easily switch yet between right/back reflection (just multiply normals by -1 with no recomputation) ... but no double-side reflection._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-02-13T19:55:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_What I understand for now about the _lt_em_gt_doubleside_lt_/em_gt_ value in threejs is that is not for having the light reflection on back face but rather to disable _lt_em_gt_face visibility_lt_/em_gt_ on plane meshes.... or something like that._lt_/p_gt__lt_p_gt_In brief_co_ if _lt_em_gt_right face_lt_/em_gt_ is enabled_co_ only the right face is visible_co_ if _lt_em_gt_back face_lt_/em_gt_ enabled the only visible face is the back_co_ and if _lt_em_gt_doubleside_lt_/em_gt__co_ both faces are visible. Else you can_t_t even see them !_lt_/p_gt__lt_p_gt_Didn_t_t read anything about back face light reflection ...  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_huh.png_qt_ alt_eq__qt__dd_huh_dd__qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It_t_s quite different in BJS where all faces of a plane are always visible_co_ but light reflection applies on the face carrying the normals._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here is a quite unelegant workaround _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#K6SNA%2312_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#K6SNA#12_lt_/a_gt__lt_/p_gt__lt_p_gt_two separated faces almost stuck_co_ only distant from 0.001  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Totally useless if you want to deal with unpredictable (math computed) shapes  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-02-14T07:51:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Unless someone can bring an explanation to this strange phenomenon (two reflecting sides merged _eq_ one side only reflects)_co_ I mark this long self-chat as answered (with no solution).  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"chg","Date":"2015-02-14T09:08:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_71855_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_12467_qt_ data-ipsquote-username_eq__qt_jerome_qt_ data-cite_eq__qt_jerome_qt_ data-ipsquote-timestamp_eq__qt_1423856070_qt__gt__lt_div_gt__lt_p_gt_It_t_s getting weirder and weirder_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#K6SNA%238_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#K6SNA#8_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_strong_gt_line 58_lt_/strong_gt_ _dd_ instead of concatening _lt_em_gt_positions_lt_/em_gt_ to themselves to replicate them_co_ here I copy/cut the same _lt_em_gt_for_lt_/em_gt_ loop (line 39) populating the initial _lt_em_gt_positions_lt_/em_gt_ array. As you can see_co_ I move the back face of +2 on the z-axis._lt_/p_gt__lt_p_gt_What_t_s happening then ? both faces reflect the light !!!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Ok_co_ let_t_s stick them back (no +2 on z-axis) _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#K6SNA%239_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#K6SNA#9_lt_/a_gt_  (still line 58)_lt_/p_gt__lt_p_gt_Only the back face reflects the light ... _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wacko.png_qt_ alt_eq__qt__dd_wacko_dd__qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Have a last look at_lt_strong_gt_ line 70_lt_/strong_gt_ _dd_ _lt_em_gt_indices_lt_/em_gt_ is the concatenation of _lt_em_gt_indices1_lt_/em_gt_ with _lt_em_gt_indices2_lt_/em_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Let_t_s switch them _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint lang-auto_qt__gt_indices _eq_ indices2.concat(indices1)_sm__lt_/pre_gt_ _lt_em_gt_indices2_lt_/em_gt_ first_co_ _lt_em_gt_indices1_lt_/em_gt_ after_co_ ok ?_lt_p_gt_tadaddaaannn _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#K6SNA%2310_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#K6SNA#10_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now the first face reflects the light  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_blink.png_qt_ alt_eq__qt__dd_blink_dd__qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And if I unstick back the two faces (_lt_strong_gt_line 59_lt_/strong_gt_ _dd_ +2 on z-axis ) _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#K6SNA%2311_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#K6SNA#11_lt_/a_gt__lt_/p_gt__lt_p_gt_Both faces reflect the light again  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wacko.png_qt_ alt_eq__qt__dd_wacko_dd__qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What do I understand about all of this ..?_lt_/p_gt__lt_p_gt_Not much.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If my algo is not too wrong_co_ when two opposite faces are merged (with opposite normals for each face)_co_ the light reflection takes into account only the _qt_last_qt_ (*) normals to compute the face brightness._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_(*) the last _eq_ the last declared when iterating the _lt_em_gt_normals/indices_lt_/em_gt_ arrays._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Has this something to do with BJS internal light computation or webGL limitations ?_lt_/p_gt__lt_p_gt_Definetly no idea  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_mellow.png_qt_ alt_eq__qt__dd_mellow_dd__qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I sadly have to admit I can_t_t achieve this double-side feature by myself (tough for self pride  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ ) and will probably will have to hack_co_ if I succeed_co_ how the threejs guys deal with this._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_BTW_co_ my lazy algo allow to easily switch yet between right/back reflection (just multiply normals by -1 with no recomputation) ... but no double-side reflection._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt__lt_/p_gt__lt_p_gt_Because you_t_ve turned off backface culling and both surfaces are being drawn at the same position_co_ and hence the same depth_co_ what you are seeing is a special case of z-fighting. That is to say that surfaces are not getting _qt_merged_qt__co_ what you are seeing is due to the zbuffer not being able to cull the face you don_t_t want to see. Whether the first or the last mesh drawn to a pixel that _qt_wins_qt_ and is seen would depend on the depth test mode used._lt_/p_gt__lt_p_gt_I think you just need to not disable backface culling... ie. comment out line 21 or change it to say like_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_mat.backFaceCulling _eq_ true_sm_ //don_t_t disable backface culling_co_ otherwise we will get zfighting from our front and back sufaces_lt_/pre_gt__lt_p_gt_And then make sure you change the order of the vertices on the other side of the mesh so the winding order will handle culling the unseen side eliminating the zfighting issues we saw when we draw front and back geometry together._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-02-14T09:18:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Chg_co_ you make my day !!!!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Listen_co_ readers_co_ I get back the first un-working example _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#K6SNA%236_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#K6SNA#6_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And now_co_ I just turn on backfaceculling (_lt_strong_gt_line 21_lt_/strong_gt_) and taaddadddannnnnnn _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#K6SNA%2313_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#K6SNA#13_lt_/a_gt__lt_/p_gt__lt_p_gt_Double-side reflecting !  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thank you again Chg !_lt_/p_gt__lt_p_gt_I will implement this lazy algo as a paramater feature for ribbons._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-02-14T09:29:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_strong_gt_line 72_lt_/strong_gt_ _dd_ More lazy._lt_/p_gt__lt_p_gt__lt_em_gt_ComputeNormals() _lt_/em_gt_is used once (_lt_strong_gt_l 53_lt_/strong_gt_) only for the first face_co_ then if double-sided_co_ the other face normals are just replicated and made negative for this second face._lt_/p_gt__lt_p_gt_Works well _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#K6SNA%2314_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#K6SNA#14_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I think this kind of feature could be extended to any mesh _dd_ rightface_co_ backface_co_ doubleSide (disabling backfaceculling)_co_ so users could have their cam inside a big cube or sphere with light reflection computed for instance_co_ etc_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"chg","Date":"2015-02-14T10:06:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_That reminds me_dd_ another approach_co_ which would allow you to avoid duplicate geometry_co_ would be to draw the mesh once with the standard material and back face culling_co_ and then switch the mesh to use a modified version of the material with a shader that inverts normals and switch to frontface culling and then draw the original mesh again (to render the other side)..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-02-14T10:31:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_dynamically ?_lt_/p_gt__lt_p_gt_nice idea  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_but what if the POV changes (cam moving_co_ mesh rotating_co_ pov entering/exiting the mesh volume for a closed mesh) ? if in the same time_co_ the cam sould see each face (back/right) of the same mesh (imagine a curved plane_co_ etc) ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_btw_co_ my lazy algo could invert normals on the geometry with no vertex replication_co_ it works_co_ I tested it._lt_/p_gt__lt_p_gt_No need for vertex replication_co_ if we just need to switch front/back face for light reflection indeed._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I need to replicate vertices just for carrying pairs of normals_co_ for each side_co_ if the mesh must reflect the light on both faces simultaneously._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"chg","Date":"2015-02-14T10:51:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The idea of doing the normal inversion in the material_t_s shaders is more for speed/efficiency_co_ as inverting the already calculated normals in the vertex shader should be really cheap (you could invert in the fragment/pixel shader_co_ but that_t_d be slightly less efficient though likely still much fast that doing it in JS I suspect). You also may (may not) get a boost from reusing the already uploaded vertices without modifying them_co_ as if your lucky the implementation might see you haven_t_t changed the data and avoid uploading it to the GPU / GPU memory on the second pass._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But you_t_re right_co_ the technique would require you to implement in a render function that gets called each time the scene is rendered (I presume Babylon.js has this_co_ I haven_t_t actually played with Babylon at all to be honest_co_ so I don_t_t actually know how handles things like mirrors using render targets? You_t_d have to have a render callback for this to work robustly...)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Anyway though_co_ the technique described should handle curved or U shaped meshes just fine_co_ and rotation shouldn_t_t be an issue either presuming you are working in object space not world space_co_ and applying a transform to rotate the object. You only have to recalculate the normals manually when the shape of the mesh changes_co_ eg. the ribbon unfurls_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_EDIT_dd_ This should really be a Babylon.js I suspect_co_ I actually made the first step of looking at the API_co_ it looks like the 2 sided property would need to be added to SubMesh maybe? Along with a property for a 2nd material for the other side of the surface..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"spritefire","Date":"2015-02-14T15:51:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_71789_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_12467_qt_ data-ipsquote-username_eq__qt_jerome_qt_ data-cite_eq__qt_jerome_qt_ data-ipsquote-timestamp_eq__qt_1423819597_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_yep they did it..._lt_/p_gt__lt_p_gt_Before hacking their code_co_ I still want to find out a way by myself _lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_but if you know it_t_s possible you have no excuse not to be able to do it _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_I work that way too. It_t_s how I have ended up here. That_co_ and I believe in doing things the utmost best way. I am pretty much a novice here_co_ but did take a massive sacrifice to be here_co_ and I am not the kind of guy to do that unless I see a proper future in it. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-02-14T16:13:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_good philosophy imho  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]