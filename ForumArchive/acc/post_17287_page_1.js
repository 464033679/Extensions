[{"Owner":"Punn","Date":"2015-09-20T03:32:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#TPE3U_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#TPE3U_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Why is there a strange reflection on a plane pyramid side?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Ahiru","Date":"2015-09-20T09:07:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I think Jerome had a good explanation for it lately_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/17040-the-mystery-of-computenormals/?p_eq_95871_qt__gt_http_dd_//www.html5gamedevs.com/topic/17040-the-mystery-of-computenormals/?p_eq_95871_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2015-09-20T10:26:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_To fix it_co_ make the subdivision 1._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#TPE3U%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#TPE3U#1_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-20T10:59:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_subdivision _eq_ 1 _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#TPE3U%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#TPE3U#3_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-20T12:11:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_However it should work with the mast version of the cylinder implementation_co_ even with many subdivisions now._lt_/p_gt__lt_p_gt_I don_t_t know if it_t_s been pushed in the PG engine_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-09-20T16:26:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I think so_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-20T18:27:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_mmmh.. the distorded reflection is typically the _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/17040-the-mystery-of-computenormals/?p_eq_95871_qt__gt_problem encountered with _lt_em_gt_computeNormals()_lt_/em_gt__lt_/a_gt_ on vertices belonging to exacly 3 coplanar faces _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#TPE3U%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#TPE3U#4_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_However the _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/commit/38fb39a7d7216c05513da1f231515c40d4866ec3_qt_ rel_eq__qt_external nofollow_qt__gt_new cylinder re-implementation_lt_/a_gt_ doesn_t_t use _lt_em_gt_computeNormal() _lt_/em_gt_any longer but dedicated computed normals from the cylinder geometry itself._lt_/p_gt__lt_p_gt_I tested it_co_ there were no artifact_co_ even with many subdivisions (I didn_t_t test tessellation _eq_ 4 ...) ._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-21T07:12:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok_co_ got it _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#TPE3U%235_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#TPE3U#5_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Well_co_ it_t_s rightly the same problem than encountered with _lt_em_gt_computeNormals()_lt_/em_gt_ about 2 coplanar facets having vertices with different normals due to their but ... without _lt_em_gt_computeNormals()_lt_/em_gt_ !_lt_/p_gt__lt_p_gt_Because there is only a quad per face and many subdivisions_co_ we create here this specific case _dd_ 2 coplanar triangles_co_ but different normalson each_co_ so the quad plane has no 4 similar normals _eq_&gt_sm_ visual artifact._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m afraid_co_ in this very case_co_ the solutions are to set the subdivisions to 1 OR to set your normals afterwards with a computation dedicated to the specific geometry._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_NOTE _dd_ this means computeNormals() is not magic_co_ but dedicated computed computed are neither_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-23T13:31:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_If you really need to keep many cylinder subdivisions (instead of 1 to avoid the artifact)_co_ you could convert your mesh to a flat shaded one _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#TPE3U%236_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#TPE3U#6_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Each mesh face will then have its own normals not depending from the other side vertices. This is a really simple way to deal with artifacts on meshes which have edge angles lower than 120°_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Punn","Date":"2015-09-27T01:32:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_97355_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_17287_qt_ data-ipsquote-username_eq__qt_adam_qt_ data-cite_eq__qt_adam_qt_ data-ipsquote-timestamp_eq__qt_1442744818_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_To fix it_co_ make the subdivision 1._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#TPE3U%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#TPE3U#1_lt_/a_gt__lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Still some artefact? And why is the tip of the pyramid cut now?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-27T05:48:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_oops_lt_/p_gt__lt_p_gt_I need to check this_lt_/p_gt__lt_p_gt_It seems the 0 top diameter isn_t_t taken in account now_co_ I don_t_t understand why ..._lt_/p_gt__lt_p_gt_I_t_ll check tomorrow (I have a lead in vertexdata.createcylinder default parameter handling)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In this case_co_ the artifact is due to this not zero top diameter _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#TPE3U%237_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#TPE3U#7_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-28T08:06:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_gotcha _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.mesh.vertexData.ts#L790_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.mesh.vertexData.ts#L790_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_JS lazy evaluation _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_diameterTop _eq_ diameterTop || options.diameterTop || 1_sm__lt_/pre_gt__lt_p_gt_if _lt_em_gt_diameterTop_lt_/em_gt_ is falsy then _lt_em_gt_options.diameterTop_lt_/em_gt_ else 1 ..._lt_/p_gt__lt_p_gt_But 0 is falsy in JS !_lt_/p_gt__lt_p_gt_I_t_m fixing this right now._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@DK _dd_ I think we_t_ve got the same problem on each _lt_em_gt_sideOrientation_lt_/em_gt_ evaluation _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_sideOrientation _eq_ sideOrientation || options.sideOrientation || Mesh.DEFAULTSIDE_sm__lt_/pre_gt__lt_p_gt_This will work only as long as the constant _lt_em_gt_DEFAULTSIDE_lt_/em_gt_ is set to zero._lt_/p_gt__lt_p_gt_If we change it some day_co_ the lazy evaluation might come to strange results._lt_/p_gt__lt_p_gt_ex _dd_ if _lt_em_gt_DEFAULT_lt_/em_gt_ is set to 1 and we call the method by requesting _lt_em_gt_sideOrientation_dd_ FRONTSIDE_lt_/em_gt__co_ what is zero _eq_&gt_sm_ we_t_ll get _lt_em_gt_DEFAULT_lt_/em_gt_ (_eq__eq_ 1) instead_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Maybe something like this would be better _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_            if (sideOrientation _eq__eq__eq_ 0 || options.sideOrientation _eq__eq__eq_ 0) {                sideOrientation _eq_ 0_sm_            } else {                sideOrientation _eq_ sideOrientation || options.sideOrientation || Mesh.DEFAULTSIDE_sm_            }_lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-28T09:26:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_fixed and PRed._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_and the _lt_em_gt_subdivisions_lt_/em_gt_ parameter of CreateCylinder is optional again_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]