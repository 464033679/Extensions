[{"Owner":"ProfessorF","Date":"2014-01-08T19:36:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Two quick questions._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If I want to use a transformation matrix on a mesh (instead of using the mesh members_dd_ position_co_ translation_co_ scale)_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_1) After I create the transformation matrix (ex_dd_ mat) do I use_lt_strong_gt_ mesh.setPivotMatrix(mat)_lt_/strong_gt_?_lt_/p_gt__lt_p_gt_2) Matrix.m is a single-dimensional array.  Is the order  0_eq_m11_co_ m12_co_ m13_co_ m14_co_ m21_co_ m22_co_ m23_co_ m24_co_ m31_co_ m32_co_ m33_co_ m34_co_ m41_co_ m42_co_ m43_co_ 15_eq_m44?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks in advance_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-01-09T00:18:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_1. Yes _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ it should work if your mesh has no parent_lt_/p_gt__lt_p_gt_2. Correct_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-01-09T08:18:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_1. Just also be sure that position _eq_ (0_co_0_co_0)_co_ rotation _eq_ (0_co_0_co_0) and scaling _eq_ (1_co_1_co_1) otherwise the corresponding matrix (equals mesh._worldMatrix if the mesh doesn_t_t have a parent) will be different than Identity and will be _qt_added_qt_ to your pivot matrix to get the world matrix._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_2. Be aware in BabylonJS_co_ like in the XNA framework_co_ matrices use a row vector layout. Whereas you do A * B when matrices use a column vector layout (what we use in France in mathematics)_co_ you have to do B * A when they use a row vector layout. That_t_s why in BabylonJS B * A _eq_ B.multiply(A) (A * B for french maths). For example_co_ wolrdMatrix _eq_ localWorld.multiply(parent.worldMatrix) (wm _eq_ lw * pwm whereas in french maths it would be wm _eq_ pwm * lw)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ProfessorF","Date":"2014-01-09T17:18:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks Gwenael.  I did a matrix version of Mesh.LookAt and I wasted a day because I was thinking in terms of column layout!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ProfessorF","Date":"2014-01-10T14:26:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Sorry for the delay in implementing this_co_ I want it to be fast! I have two algorithms and any feedback would be appreciated.  I_t_m actually leaning towards the slow version because it_t_s less complex_co_ and _qt_plays nicely_qt_ with the other mesh variables.  The fast version sets the pivot matrix and is all vector math. Anyway_co_ here they are._lt_br_gt_ _lt_/p_gt__lt_p_gt_1. Algorithm one is based on Euler angles and works flawlessly for static and skinned models BUT is slow because it uses trig functions. _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_// This Euler version works flawlessly. Haven_t_t made into a function yet_co_ so// Globals_dd_ looker mesh_co_ target mesh_co_ cor-rection for rotationvar dv _eq_ target.position.subtract(looker.position)_sm_var yaw _eq_ -Math.atan2(dv.z_co_ dv.x)-cor_sm_ // -because rots are oppositevar len _eq_ Math.sqrt(dv.x * dv.x + dv.z * dv.z)_sm_var roll _eq_ Math.atan2(dv.y_co_ len)_sm_ //-any corrections if mesh is vertical TBI_co_ similar to Vector.Uplooker.rotationQuaternion _eq_ BABYLON.Quaternion.RotationYawPitchRoll(yaw_co_ 0_co_ roll)_sm__lt_/pre_gt__lt_p_gt_2. Algorithm two is vector based (transforming the basis vectors_co_ similar to GLULookAt in OpenGL)_co_ is fast_co_ works as expected with static models_co_ but is wonky when it comes to skinned models. _qt_Wonky_qt_ means it works_co_ but not in a way I expect_co_ which bothers me.  I_t_m pretty sure the problem is that I need to transform the skeleton as well.  Also_co_ since I am using the pivot matrix_co_ I need to store and reset_dd_ position_co_ rotation_co_ and scale before using this code._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var v3up _eq_ new BABYLON.Vector3(0_co_ 1_co_ 0)_sm_var v3look _eq_ new BABYLON.Vector3(lpx_co_ lpy_co_ lpz)_sm_ // lpx_co_lpy_co_lpz_eq_looker.position_co_ can_t_t use .position because using pivotMatrixvar v3newz _eq_ target.position.subtract(v3look)_sm_v3newz.normalize()_sm_var v3newx _eq_ BABYLON.Vector3.Cross(v3newz_co_ v3up)_sm_v3newx.normalize()_sm_var v3newy _eq_ BABYLON.Vector3.Cross(v3newx_co_ v3newz)_sm_v3newy.normalize()_sm_var mat _eq_ BABYLON.Matrix.Identity()_sm_mat.m _eq_ [ v3newx.x_co_  v3newx.y_co_  v3newx.z_co_ 0_co_          v3newy.x_co_  v3newy.y_co_  v3newy.z_co_ 0_co_         -v3newz.x_co_ -v3newz.y_co_ -v3newz.z_co_ 0_co_                 0_co_         0_co_         0_co_ 1]_sm_looker.setPivotMatrix(BABYLON.Matrix.RotationY(cor).multiply(mat).multiply(BABYLON.Matrix.Scaling(scl_co_scl_co_scl).multiply(BABYLON.Matrix.Translation(lpx_co_lpy_co_lpz))))_sm_ // works_co_ but have to fold back in position_co_ rotation_co_ and scale _lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-01-10T16:34:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I clearly prefer the first one because it does not need a trick(do not touching position_co_ scaling and rotation for the 2nd one)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-01-11T02:00:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_19392_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_2872_qt_ data-ipsquote-username_eq__qt_gwenael_qt_ data-cite_eq__qt_gwenael_qt_ data-ipsquote-timestamp_eq__qt_1389255499_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_1. Just also be sure that position _eq_ (0_co_0_co_0)_co_ rotation _eq_ (0_co_0_co_0) and scaling _eq_ (1_co_1_co_1) otherwise the corresponding matrix (equals mesh._worldMatrix if the mesh doesn_t_t have a parent) will be different than Identity and will be _qt_added_qt_ to your pivot matrix to get the world matrix._lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_To clearify my previous post (please Deltakosh_co_ correct me if I_t_m wrong)_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_position_co_ rotation and scaling are actually the vectors (expressed in the parent space of the mesh) used to compute the matrix which represents the pivot space of the mesh (you multiply by this matrix to pass from the pivot space to the parent space) and pivotMatrix is the matrix which expresses the mesh in this pivot space._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In 2D_lt_/p_gt__lt_p_gt_                                                    +_lt_/p_gt__lt_p_gt_                                                    +_lt_/p_gt__lt_p_gt_                                                M +  +  +_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_                      +                     +_lt_/p_gt__lt_p_gt_+                      +               +_lt_/p_gt__lt_p_gt_+                         +        +_lt_/p_gt__lt_p_gt_+  +  +                     +P_lt_/p_gt__lt_p_gt_O_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_O_dd_ origin of the parent space (or world if no parent)_lt_/p_gt__lt_p_gt_P_dd_ pivot of the mesh_dd_ mesh.position _eq_ (3_co_0_co_0)_co_ mesh.rotation _eq_ (0_co_0_co_PI/4)_co_ mesh.scaling _eq_ (1.3_co_ 1.3_co_ 1.3)_lt_/p_gt__lt_p_gt_M_dd_ set by pivotMatrix_dd_ (1/1.3_co_a_co_b_co_c_co_ d_co_1/1.3_co_e_co_f_co_ g_co_h_co_1/1.3_co_0_co_ 1.25_co_0_co_0_co_1) where a_co_b_co_c_co_d_co_e_co_f_co_g_co_h are the coefficients for a z rotation of -PI/4_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-01-14T10:47:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Other maths that could help_dd_ _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/3083-spaces-world-parent-pivot-local/?p_eq_19938_qt__gt_http_dd_//www.html5gamedevs.com/topic/3083-spaces-world-parent-pivot-local/?p_eq_19938_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"neoRiley","Date":"2014-01-18T07:18:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Any idea when LookAt will be officially added/released for us to use?  _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks for all your help_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_John_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ProfessorF","Date":"2014-01-18T14:49:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I actually finished the code a while ago_co_ I just haven_t_t finished the documentation.  _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The documentation is necessary because_co_ unlike camera.lookAt_co_ a mesh.lookAt has to take into account the different ways people can model meshes.  _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For example_dd_ if someone models a spaceship or character pointing to the right (&gt_sm_)_co_ then mesh.lookAt(point) works fine_co_ because zero degrees is defined relative to a vector pointing to the right.  _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But if someone models a spaceship or character pointing towards the screen (V)_co_ then you need to add a yaw correction_dd_ mesh.lookAt(point_co_ -90 degrees)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And to make matters even more complex_co_ you can correct for pitch and roll as well._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Anyway_co_ I feel that if I don_t_t provide the documentation and a working sample_co_ then DeltaKosh and team will be deluged with bug reports._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Once I_t_m finished with the documentation/sample code_co_  I will push and issue a merge request._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"neoRiley","Date":"2014-01-19T09:45:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Just as a test_co_ I went ahead and implemented your first code for LookAt with a custom Atan2 method.  It works well and I wonder if what the performance difference would be with that custom atan2 method.  I haven_t_t done any tests with it_co_ but it does work and thought I_t_d throw it out there_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Atan2 method_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_NEO.Coeff_1 _eq_ Math.PI / 4.0_sm_NEO.Coeff_2 _eq_ 3.0 * (Math.PI / 4.0)_sm_NEO.atan2 _eq_ function(y_co_ x) {\tvar abs_y _eq_ y &lt_sm_ 0 ? y*-1 _dd_ y_sm_ // abs sub\tvar angle_sm_\tif (x &gt_sm__eq_ 0) {\t\t\tvar r _eq_ (x - abs_y) / (x + abs_y)_sm_\t\t\tangle _eq_ NEO.Coeff_1 - NEO.Coeff_1 * r_sm_\t} else {\t\t\tvar r _eq_ (x + abs_y) / (abs_y - x)_sm_\t\t\tangle _eq_ NEO.Coeff_2 - NEO.Coeff_1 * r_sm_\t}\treturn y &lt_sm_ 0 ? -angle _dd_ angle_sm_}_lt_/pre_gt__lt_p_gt_and here_t_s the method implemented_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_BABYLON.Mesh.prototype.LookAt _eq_ function (target_co_ adjustment){\tadjustment _eq_ adjustment _eq__eq_ null ? 0 _dd_ adjustment_sm_\tvar dv _eq_ target.getAbsolutePosition().subtract(this.position)_sm_\tvar yaw _eq_ -NEO.atan2(dv.z_co_ dv.x) - adjustment_sm_ // -because rots are opposite\tvar len _eq_ Math.sqrt(dv.x * dv.x + dv.z * dv.z)_sm_\tvar roll _eq_ NEO.atan2(dv.y_co_ len)_sm_ //-any corrections if mesh is vertical TBI_co_ similar to Vector.Up\tthis.rotationQuaternion _eq_ BABYLON.Quaternion.RotationYawPitchRoll(yaw_co_ 0_co_ roll)_sm_}_sm__lt_/pre_gt__lt_p_gt_sample call_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_box.LookAt(moon)_sm__lt_/pre_gt__lt_p_gt_Check it out_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.rockonflash.com/webGL/babylon/demo/index.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.rockonflash.com/webGL/babylon/demo/index.html_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-01-19T10:15:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The following line implies that your mesh doesn_t_t have a parent._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var dv _eq_ target.getAbsolutePosition().subtract(this.position)_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ProfessorF","Date":"2014-01-19T15:04:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Okay_co_ this is what I submitted a pull request for.  As Gwenael_co_ pointed out to me in e-mail_co_ this assumes that the targetPoint is in the same space as the Mesh._lt_br_gt__lt_br_gt_Typical usage would be mesh..lookAt(targetPoint)_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But I added optional parameters yawCor_co_ pitchCor_co_ rollCor -- to give you the flexibility to adjust the model after it orients to the targetPoint.  For example_co_ in neoRiley_t_s cool demo_co_ the square can be rolling while it follows the orbiting planet_co_ by doing mesh.lookAt(targetPoint_co_0_co_0_co_++roll) -- assuming roll is a global._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_    BABYLON.Mesh.prototype.lookAt _eq_ function (targetPoint_co_ yawCor_co_ pitchCor_co_ rollCor) {        /// &lt_sm_summary&gt_sm_Orients a mesh towards a target point. Mesh must be drawn facing user.&lt_sm_/summary&gt_sm_        /// &lt_sm_param name_eq__qt_targetPoint_qt_ type_eq__qt_BABYLON.Vector3_qt_&gt_sm_The mesh to look at&lt_sm_/param&gt_sm_        /// &lt_sm_param name_eq__qt_yawCor_qt_ type_eq__qt_Number_qt_&gt_sm_optional yaw (y-axis) correction in radians&lt_sm_/param&gt_sm_        /// &lt_sm_param name_eq__qt_pitchCor_qt_ type_eq__qt_Number_qt_&gt_sm_optional pitch (x-axis) correction in radians&lt_sm_/param&gt_sm_        /// &lt_sm_param name_eq__qt_rollCor_qt_ type_eq__qt_Number_qt_&gt_sm_optional roll (z-axis) correction in radians&lt_sm_/param&gt_sm_        /// &lt_sm_returns&gt_sm_Mesh oriented towards targetMesh&lt_sm_/returns&gt_sm_        yawCor   _eq_ yawCor   || 0_sm_ // default to zero if undefined         pitchCor _eq_ pitchCor || 0_sm_        rollCor  _eq_ rollCor  || 0_sm_        var dv _eq_ targetPoint.subtract(this.position)_sm_        var yaw _eq_ -Math.atan2(dv.z_co_ dv.x) - Math.PI / 2_sm_        var len _eq_ Math.sqrt(dv.x * dv.x + dv.z * dv.z)_sm_        var pitch _eq_ Math.atan2(dv.y_co_ len)_sm_        this.rotationQuaternion _eq_ BABYLON.Quaternion.RotationYawPitchRoll(yaw + yawCor_co_ pitch + pitchCor_co_ rollCor)_sm_    }_sm__lt_/pre_gt__lt_p_gt_I_t_ll post two working samples shortly._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ProfessorF","Date":"2014-01-19T15:05:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_NeoRiley_co_ that is pretty cool!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-01-19T16:21:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_No need for a pull request for this one_co_ I integrate it directly. Thank you for your appreciated work!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"neoRiley","Date":"2014-01-19T17:42:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You_t_re right about using getAbsolute!  Sorry about that - the reason I did that was because when I was trying to get world coordinates by accessing target.position_co_ it was returning the same value which seemed to be the local position in the log and so the cube would do the initial look at the starting point of the moon_co_ but would not rotate because it was not returning updated world coordinates.  Using getAbsolutePosition() gave me the updated world coordinates of the moon.  Why would that be?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ProfessorF","Date":"2014-01-19T19:42:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Okay I finished a tutorial for mesh.lookAt that combines movement (w_co_a_co_s_co_d_co_f_co_v moves the cube_co_ spacebar moves the spaceship)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Video_dd__lt_/p_gt__lt_p_gt_\n_lt_/p_gt__lt_div class_eq__qt_ipsEmbeddedVideo_qt_ contenteditable_eq__qt_false_qt__gt__lt_div_gt__lt_iframe width_eq__qt_480_qt_ height_eq__qt_270_qt_ src_eq__qt_https_dd_//www.youtube.com/embed/nDLfsh2tTjM?feature_eq_oembed_qt_ frameborder_eq__qt_0_qt_ allowfullscreen_eq__qt_true_qt__gt__lt_/iframe_gt__lt_/div_gt__lt_/div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Code_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_&lt_sm_!DOCTYPE html&gt_sm_&lt_sm_html xmlns_eq__qt_http_dd_//www.w3.org/1999/xhtml_qt_&gt_sm_&lt_sm_head&gt_sm_    &lt_sm_title&gt_sm_Tutorial - mesh.lookAt - ProfessorF &lt_sm_/title&gt_sm_    &lt_sm_script src_eq__qt_js/babylon.js_qt_&gt_sm_&lt_sm_/script&gt_sm_    &lt_sm_script src_eq__qt_js/hand.js_qt_&gt_sm_&lt_sm_/script&gt_sm_    &lt_sm_script&gt_sm_        window.addEventListener(_qt_load_qt__co_ start)_sm_ // 1st line of code executed        window.addEventListener(_qt_keydown_qt__co_ handleKeyDown)_sm_        window.addEventListener(_qt_change_qt__co_ handleChange)_sm_        var canvas_co_ engine_co_ scene_co_ light_co_ light2_co_ camera_sm_  // Engine Globals        var looker_co_ yawCor_co_ rollCor_co_ pitchCor_co_ moveLooker_sm_ // Looker Globals        var target_sm_                         function start() {            canvas _eq_ document.getElementById(_qt_cvRAVE_qt_)_sm_            engine _eq_ new BABYLON.Engine(canvas_co_ true)_sm_            scene _eq_ new BABYLON.Scene(engine)_sm_            light _eq_ new BABYLON.DirectionalLight(_qt_sun_qt__co_ new BABYLON.Vector3(1_co_ -1_co_ 1)_co_ scene)_sm_            light2 _eq_ new BABYLON.DirectionalLight(_qt_sun2_qt__co_ new BABYLON.Vector3(0_co_ -1_co_ 0)_co_ scene)_sm_            light2.intensity _eq_ 0.5_sm_            camera _eq_ new BABYLON.FreeCamera(_qt_cam_qt__co_ new BABYLON.Vector3(0_co_ 50_co_ -50)_co_ scene)_sm_            camera.rotation.x _eq_ Math.PI / 4_sm_ // look down 45 degrees            ground _eq_ new BABYLON.Mesh.CreateGround(_qt_ground_qt__co_ 1024_co_ 1024_co_ 1_co_ scene)_sm_            ground.material _eq_ new BABYLON.StandardMaterial(_qt_texGround_qt__co_ scene)_sm_            ground.material.diffuseTexture _eq_ new BABYLON.Texture(_qt_geotrigtexture.png_qt__co_ scene)_sm_            BABYLON.SceneLoader.ImportMesh(_qt__qt__co_ _qt_assets/pointer/_qt__co_ _qt_pointer.babylon_qt__co_ scene_co_ function (meshes_co_ particles_co_ skeletons) {                looker _eq_ meshes[0]_sm_                looker.position _eq_ new BABYLON.Vector3(-5_co_ 5_co_ 5)_sm_ // you can set this yourself                yawCor _eq_0_sm_                 pitchCor _eq_ 0_sm_                rollCor _eq_ 0_sm_                scl _eq_ 1_sm_                moveLooker _eq_ false_sm_            })_sm_            target _eq_ BABYLON.Mesh.CreateBox(_qt_orangeBox_qt__co_ 5_co_ scene)_sm_            target.position.x _eq_ 20_sm_            target.position.z _eq_ 0_sm_            target.position.y _eq_ 0_sm_            target.material _eq_ new BABYLON.StandardMaterial(_qt_orangeMaterial_qt__co_ scene)_sm_            target.material.diffuseColor _eq_ new BABYLON.Color3(1_co_ .5_co_ 0)_sm_                     scene.activeCamera.attachControl(canvas)_sm_            engine.runRenderLoop(update)_sm_        }        function update() {            if (target &amp_sm_&amp_sm_ looker) {                looker.lookAt(target.position)_sm_                if (moveLooker) {                    var dv _eq_ target.position.subtract(looker.position)_sm_                    if (dv.length() &gt_sm_ 1) { // if distance from target is &gt_sm_ epsilon_co_ move closer                        dv.normalize()_sm_    // otherwise you jump to the position                        looker.position _eq_ looker.position.add(dv)_sm_                    } else moveLooker _eq_ false_sm_                }            }            scene.render()_sm_        }        function handleKeyDown(event) {            ch _eq_ String.fromCharCode(event.keyCode)_sm_            if (ch _eq__eq_ _qt_W_qt_)                target.position.z +_eq_ 1_sm_            if (ch _eq__eq_ _qt_S_qt_)                target.position.z -_eq_ 1_sm_            if (ch _eq__eq_ _qt_D_qt_)                target.position.x +_eq_ 1_sm_            if (ch _eq__eq_ _qt_A_qt_)                target.position.x -_eq_ 1_sm_            if (ch _eq__eq_ _qt_F_qt_)                target.position.y +_eq_ 1_sm_            if (ch _eq__eq_ _qt_V_qt_)                target.position.y -_eq_ 1_sm_            if (ch _eq__eq_ _qt_ _qt_) {                moveLooker _eq_ true_sm_            }        }        function handleChange(event) {            var x _eq_ event.target_sm_            if (looker) looker.dispose()_sm_            if (x.value _eq__eq_ _qt_Kesha_qt_) {                BABYLON.SceneLoader.ImportMesh(_qt__qt__co_ _qt_assets/pointer/_qt__co_ _qt_pointer.babylon_qt__co_ scene_co_ function (meshes_co_ particles_co_ skeletons) {                    looker _eq_ meshes[0]_sm_                    looker.position _eq_ new BABYLON.Vector3(-5_co_ 5_co_ 5)_sm_                    yawCor _eq_ 0_sm_                     pitchCor _eq_ 0_sm_                    rollCor _eq_ 0_sm_                })_sm_            }            else {                BABYLON.SceneLoader.ImportMesh(_qt_him_qt__co_ _qt_assets/dude/_qt__co_ _qt_dude.babylon_qt__co_ scene_co_ function (meshes_co_ particles_co_ skeletons) {                    looker _eq_ meshes[0]_sm_                    looker.position _eq_ new BABYLON.Vector3(-5_co_ 0_co_ 5)_sm_                     yawCor _eq_ 0_sm_                    pitchCor _eq_ 0_sm_                    rollCor _eq_ 0_sm_                    scl _eq_ .25_sm_                    looker.scaling _eq_ new BABYLON.Vector3(scl_co_ scl_co_ scl)_sm_                    scene.beginAnimation(skeletons[0]_co_ 0_co_ 100_co_ true_co_ 1.0)_sm_                })_sm_            }        }    &lt_sm_/script&gt_sm_    &lt_sm_style&gt_sm_        html_co_ body {            width_dd_ 100%_sm_            height_dd_ 100%_sm_            padding_dd_ 0_sm_            margin_dd_ 0_sm_        }        #cvRAVE {            width_dd_ 100%_sm_            height_dd_ 90%_sm_        }        #dvMenu {            width_dd_ 100%_sm_            height_dd_ 10%_sm_            font_dd_10pt arial_sm_        }    &lt_sm_/style&gt_sm_&lt_sm_/head&gt_sm_&lt_sm_body&gt_sm_    &lt_sm_div id_eq__qt_dvMenu_qt_&gt_sm_        Target Keys_dd_ W_co_A_co_S_co_D_co_F (up)_co_V (down)&lt_sm_br /&gt_sm_        Looker Keys_dd_ SPACE BAR (moves towards target)&lt_sm_br /&gt_sm_        Model_dd_ &lt_sm_select id_eq__qt_seLooker_qt_&gt_sm_&lt_sm_option&gt_sm_Kesha&lt_sm_/option&gt_sm_&lt_sm_option&gt_sm_Dude&lt_sm_/option&gt_sm_&lt_sm_/select&gt_sm_&lt_sm_br /&gt_sm_    &lt_sm_/div&gt_sm_    &lt_sm_canvas id_eq__qt_cvRAVE_qt_&gt_sm_&lt_sm_/canvas&gt_sm_&lt_sm_/body&gt_sm_&lt_sm_/html&gt_sm__lt_/pre_gt__lt_p_gt_I attached a zip of the complete code w/ all assets.  I hope this will be useful.  Any new changes will be at_dd_ _lt_a href_eq__qt_https_dd_//github.com/professorf/MeshLookAt_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/professorf/MeshLookAt_lt_/a_gt_  Good luck!_lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/applications/core/interface/file/attachment.php?id_eq_789_qt__gt_MeshLookAtTutorial.zip_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ProfessorF","Date":"2014-01-19T20:39:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_20738_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_2872_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1390148501_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_No need for a pull request for this one_co_ I integrate it directly. Thank you for your appreciated work!_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_Thanks! Do you know when it will be integrated into 1.8.5 (I didn_t_t see it in the latest)._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-01-20T02:41:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It is on github right now _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"neoRiley","Date":"2014-01-20T05:54:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks for adding this feature and taking the time to work on it with us_co_ I really appreciate your time!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I did pull the latest and updated my demo_co_ and I_t_m still hitting the same issue with moon.position not being updated (moon is parented to earth btw).  For the demo to work_co_ I have to use moon.getAbsolutePosition() instead of moon.position like you show in your demo code above._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here_t_s my simple render loop - any idea why moon.position_t_s value isn_t_t being updated?_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_engine.runRenderLoop(function () {\tearth.rotation.y +_eq_ .01_sm_        //box.lookAt(moon.position)_sm_ // is not updating as parent rotates\tbox.lookAt(moon.getAbsolutePosition())_sm_ // works\tscene.render()_sm_})_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-01-20T08:25:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__qt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_moon is parented to earth btw_qt__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_You have your answer _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_. You don_t_t move moon_co_ you rotate its parent that generates a movement for it in world space but not in local space since its position relative to its parent hasn_t_t changed._lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_More about it here _lt_/span_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/3083-spaces-world-parent-pivot-local/?p_eq_19938_qt__gt_http_dd_//www.html5gamedevs.com/topic/3083-spaces-world-parent-pivot-local/?p_eq_19938_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ProfessorF","Date":"2014-01-20T14:29:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Gwenael is correct. I think I will create a Wiki documentation page (orientation &amp_sm_ movement) for the different scenarios._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-01-20T15:41:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_ll be glad to contribute once I_t_ve found time. Deltakosh asked me to write a wiki page talking about spaces _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/3083-spaces-world-parent-pivot-local/_qt__gt_http_dd_//www.html5gamedevs.com/topic/3083-spaces-world-parent-pivot-local/_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"neoRiley","Date":"2014-01-20T16:53:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_20826_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_2872_qt_ data-ipsquote-username_eq__qt_gwenael_qt_ data-cite_eq__qt_gwenael_qt_ data-ipsquote-timestamp_eq__qt_1390206347_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt__qt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_moon is parented to earth btw_qt__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_You have your answer _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_. You don_t_t move moon_co_ you rotate its parent that generates a movement for it in world space but not in local space since its position relative to its parent hasn_t_t changed._lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_More about it here _lt_/span_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/3083-spaces-world-parent-pivot-local/?p_eq_19938_qt__gt_http_dd_//www.html5gamedevs.com/topic/3083-spaces-world-parent-pivot-local/?p_eq_19938_lt_/a_gt__lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks gwenael_co_ I appreciate the link and the clarification with your link_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I was confused because I_t_d used the getPositionExpressedInLocalSpace() method previously_co_ so my assumption was that _qt_position_qt_ was always world space.  The docs don_t_t specify either local or world space for the _qt_position_qt_ property on the Mesh object._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks for the help gwenael_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_John_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ProfessorF","Date":"2014-01-20T17:43:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_20870_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_2872_qt_ data-ipsquote-username_eq__qt_gwenael_qt_ data-cite_eq__qt_gwenael_qt_ data-ipsquote-timestamp_eq__qt_1390232470_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_I_t_ll be glad to contribute once I_t_ve found time. Deltakosh asked me to write a wiki page talking about spaces _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/3083-spaces-world-parent-pivot-local/_qt__gt_http_dd_//www.html5gamedevs.com/topic/3083-spaces-world-parent-pivot-local/_lt_/a_gt__lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You_t_re the space expert!  I really like your jsdiff.  But yeah_co_ that_t_s the problem--finding time.  Especially now that the semester has started for me._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]