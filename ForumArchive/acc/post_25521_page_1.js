[{"Owner":"touslecoq","Date":"2016-09-30T00:35:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi guys\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo I_t_ve been wrestling with a problem for a little while and hoping to cast it out there for your thoughts.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs part of an app I am developing i wanted to introduce snap-to functionality such that when a mesh was dragged within certain distance of another_co_ the dragged mesh would snap into same orientation as the other - basically 2 _qt_allowed_qt_ faces would point at each other and the mesh would be positioned so these faces were adjacent.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs a pre-cursor to this I created the playground scene below to prove the concept.  Basically this creates 2 static boxes_co_ the second rotated randomnly in relation to the first.  When you click the mouse anywhere in the scene it should rotate the first box to match the orientation of the second and translate it into same position for easy validation that the alignment it has worked.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe approach is a function that takes 4 parameters (ignore the fifth for now)_sm_ mesh1_co_ mesh 1 face number_co_ mesh2_co_ mesh 2 face number.  The function calculates the normal of those faces_co_ the angle between the normals and the rotation axis and rotates mesh1 so that the faces align and then moves the mesh1 to mesh2.position.  So far so good and this seems to be working ok.  Click the scene and the box faces align and box 1 moves to same position as box 2.  \n_lt_/p_gt_\n\n_lt_p_gt_\n\tObviously although the faces are now pointing in the same direction they are likely to be skewed around their now common normal/axis.  So the intention was to call the function a second time this time specifying 2 new faces_co_ perpendicular to the original 2 faces that are now pointing in same direction.  This should calculate the angle between those 2 new faces and the axis around which to rotate (which should be the normal to the original 2 faces).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t This is where it goes wrong - when line 177 is uncommented to call the function a second time it causes the boxes to go out of alignment and repeated clicking causes it to randomnly point in different directions.  In theory it should correct itself on each click but it does not.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny thoughts on whether the logic is sound and on the execution?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am re-rendering the scene after the first alignment call_co_ but I do wonder whether it is not fully re-computed the vertex data and therefore the normals used to calculate the new angle of rotation/axis of rotation are wrong.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThoughts?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1JX3ZX%2383_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1JX3ZX#83_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2016-09-30T12:57:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi it is worth checking out the rotationFromAxis method _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/How_Rotations_and_Translations_Work_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/overviews/How_Rotations_and_Translations_Work_lt_/a_gt_ and doing a search in the forum and playgrounds for this term.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSeems like an interesting problem. What are you thinking of in your actual use case?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFrom\n_lt_/p_gt_\n\n_lt_ol_gt__lt_li_gt_\n\t\tall my meshes will be boxes    to\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tmy meshes can be any type of mesh and for any two meshes an arbitrary face (F) will be chosen on  mesh A and arbitrary face (G) on B. Lying on face (F) there will be a vector V1 and on face (G) there will be a vector V2. Mesh A will be rotated so faces (F) and (G) will be parallel and vectors V1 and V2 have the same orientation.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tSomewhere between 1 and 2.\n\t_lt_/li_gt_\n_lt_/ol_gt__lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"touslecoq","Date":"2016-09-30T15:13:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi John\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve just been playing with rotation from Axis actually and struggled to get it to work how I want.  Will keep plugging.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI did find that setting mesh1.rotation _eq_ mesh2.rotation actually meets the brief of this proof of concept (in a lot less code than my playground too).  However next stage is to be able to get them to face each other rather than face the same way - which basically means rotating 180 degrees around an axis perpendicular to the faces I want to mate - however that was the bit I couldn_t_t get to work in my version_co_ so not out of the woods yet. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe end use case is probably closer to 2.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThink lego - the idea is different shaped building blocks can be mated together but only in a certain way and to ease the process of doing so I want some snap-to function.  The blocks will not all be the same size but their mateable faces will be.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have proto-typed various _qt_proximity_qt_ approaches to varying degrees of succes - with a nearest faces changing colour or border changing color when in range of the dragged object.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLike lego_co_ only certain faces will be _qt_mateable_qt_ with other faces - ie like male/female_co_ plug/socket.  Haven_t_t quite decided on how to build those rules in yet but have a few ideas.  I also want to build in some collision detection so that meshes cannot overlap_co_ but not full physics.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen finally once objects are mated I need to decide whether they should be merged or not - ideally they can be un-mated later and if there are several components making an assembly_co_ then unmating two would end up with 2 assemblies.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway I am rambling - lots to do but this re-orientation has proven to be the most difficult so far - although feels like it shouldn_t_t be!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-10-01T13:28:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi guys!  Hey T... _lt_span dir_eq__qt_ltr_qt_ style_eq__qt_text-align_dd_left_sm__qt__gt_do you know about this topic_dd_  _lt_/span_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/20751-aabb-snapping-in-3d/_qt_ rel_eq__qt__qt__gt_http_dd_//www.html5gamedevs.com/topic/20751-aabb-snapping-in-3d/_lt_/a_gt__lt_span dir_eq__qt_ltr_qt_ style_eq__qt_text-align_dd_left_sm__qt__gt_ _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t?  Might be applicable.  _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/15906-jacquesr/?do_eq_hovercard_qt_ data-mentionid_eq__qt_15906_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/15906-jacquesr/_qt_ rel_eq__qt__qt__gt_@jacquesr_lt_/a_gt_ has done quite a bit of snapping work... but if you are enjoying yourself_co_ keep on truckin_t_.  I sure don_t_t want to ruin any fun.  Still_co_ I thought you should know about Jacques_t_ work. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI love hearing about your adventures in this_co_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/19275-touslecoq/?do_eq_hovercard_qt_ data-mentionid_eq__qt_19275_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/19275-touslecoq/_qt_ rel_eq__qt__qt__gt_@touslecoq_lt_/a_gt_.  I happen to like your rambling.  I was really reluctant to show you that other thread.  I hope it doesn_t_t take away your aligning fun.  Jacques_t_ bounding-box snapping might be more _qt_coarse_qt_ than face snapping_co_ so perhaps it is a different subject.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"touslecoq","Date":"2016-10-01T16:32:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey Wingy thanks - I hope I_t_m at least giving you guys some amusement _dd_).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for the signpost to _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/15906-jacquesr/?do_eq_hovercard_qt_ data-mentionid_eq__qt_15906_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/15906-jacquesr/_qt_ rel_eq__qt__qt__gt_@jacquesr_lt_/a_gt__t_s work - there is a lot in there that will help.  At the moment in my demo I just set box1.position_eq_box2.position in order to verify whether the rotational alignment has actually worked.  Jacque_t_s snap to face will be much better for the finished product.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHowever sadly it is the the rotational snap that still gives me a headache and I couldn_t_t see that in Jacque_t_s thread.  \n_lt_/p_gt_\n\n_lt_p_gt_\n\tTous\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-10-01T18:10:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOh_co_ it_t_s far more than amusement.  For myself_co_ at least_co_ I_t_m watching and learning (and doing some drooling_co_ too.)  Excellent code.  You_t_re pretty good at vertices/normals operations.  Your experiments and narratives are helping me and many others.  Good stuff!\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]