[{"Owner":"Pupix","Date":"2014-06-10T23:08:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello everybody!_lt_/p_gt__lt_p_gt_\nFor the past few days I_t_ve been trying to create a 3D model viewer in babylon.js. The meshes_co_ skeletons and animations are loaded from binary files. Everything seems to be importing as it should_co_ but when I try to do bind the skeleton to the mesh_co_ using mesh.skeleton _eq_ loadedSkeleton I receive the following errors_dd__lt_/p_gt__lt_p_gt_\nBJS - [01_dd_02_dd_29]_dd_ Unable to compile effect_dd_ default babylon.1.12-beta.js_dd_3_lt_/p_gt__lt_p_gt_\nBJS - [01_dd_02_dd_29]_dd_ Defines_dd_ #define DIFFUSE_lt_/p_gt__lt_p_gt_\n#define LIGHT0_lt_/p_gt__lt_p_gt_\n#define HEMILIGHT0_lt_/p_gt__lt_p_gt_\n#define UV1_lt_/p_gt__lt_p_gt_\n#define BONES_lt_/p_gt__lt_p_gt_\n#define BonesPerMesh 86_lt_/p_gt__lt_p_gt_\n babylon.1.12-beta.js_dd_3_lt_/p_gt__lt_p_gt_\nBJS - [01_dd_02_dd_29]_dd_ Optional defines_dd_ #define LIGHT1_co_#define HEMILIGHT1_co_#define BONES4 babylon.1.12-beta.js_dd_3_lt_/p_gt__lt_p_gt_\nBJS - [01_dd_02_dd_29]_dd_ Error_dd_ ERROR_dd_ too many uniforms babylon.1.12-beta.js_dd_3_lt_/p_gt__lt_p_gt_\nand the mesh dissapears from my canvas._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2014-06-11T06:10:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello Pupix ! Welcome !_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It_t_s not an easy task to debug your code when we have no way to reproduce this problem... Is it possible for you to create a simple scene reproducing this error ? (jsfiddle_co_ babylon playground_co_ dropbox_co_ custom server_co_ ...)_lt_/p_gt__lt_p_gt_I don_t_t know if I will be able to help you_co_ but it will definitely help Deltakosh and others to help you._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pupix","Date":"2014-06-11T08:15:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_42270_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_7083_qt_ data-ipsquote-username_eq__qt_Temechon_qt_ data-cite_eq__qt_Temechon_qt_ data-ipsquote-timestamp_eq__qt_1402467022_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Hello Pupix ! Welcome !_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It_t_s not an easy task to debug your code when we have no way to reproduce this problem... Is it possible for you to create a simple scene reproducing this error ? (jsfiddle_co_ babylon playground_co_ dropbox_co_ custom server_co_ ...)_lt_/p_gt__lt_p_gt_I don_t_t know if I will be able to help you_co_ but it will definitely help Deltakosh and others to help you._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_Right_co_ I should have made that first._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Mesh and skeleton loaded (proof that everything imports fine)_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//manolea.altervista.org/babylon/index.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//manolea.altervista.org/babylon/index.html_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Version where I try to attach the skeleton to my mesh_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//manolea.altervista.org/babylon/sindex.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//manolea.altervista.org/babylon/sindex.html_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2014-06-11T08:24:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey_co_ it_t_s Akali ! I_t_m a big LoL player ^^_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_u_gt_Edit _dd__lt_/u_gt_ After some investigations_co_ I think I found your issue _dd_ you have _qt_too many uniforms_qt_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Some explainations _dd_ When a mesh is created and displayed_co_ a basic shader is created by Babylon. This shader is not the same if the mesh has a skeleton (_qt_bones_qt_) or not_co_ that_t_s why you have two differents behaviours here._lt_/p_gt__lt_p_gt_When your skeleton is linked to your mesh_co_ the basic shaders creates an array called mBones _dd_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_#ifdef BONESuniform mat4 mBones[BonesPerMesh]_sm_#endif_lt_/pre_gt__lt_p_gt_As you can see_co_ its length is _lt_strong_gt_BonesPerMesh _eq_&gt_sm_ _lt_/strong_gt_it creates a new uniform variable for each value of this array._lt_/p_gt__lt_p_gt_The max number of uniform is managed by the browser_co_ and has a different value for each one. If the number of uniform in your shader exceeds this max limit _dd_ the browser crashes._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You can go here _dd_ _lt_a href_eq__qt_https_dd_//www.browserleaks.com/webgl_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.browserleaks.com/webgl_lt_/a_gt_ and check the row _lt_strong_gt__lt_span style_eq__qt_color_dd_rgb(17_co_17_co_17)_sm_font-family_dd_Verdana_co_ _t_Droid Sans_t__co_ _t_Lucida Grande_t__co_ _t_Lucida Sans_t__co_ Georgia_co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_12px_sm_background-color_dd_rgb(242_co_242_co_242)_sm__qt__gt_Max Vertex Uniform Vectors._lt_/span_gt__lt_/strong_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For IE11_co_ it_t_s 512 and 254 for Chrome _eq__eq_&gt_sm_ Your scene _lt_strong_gt_should work_lt_/strong_gt_ in IE11 (and it works actually)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_To fix this in Chrome_co_ I think you should reduce the number of bones of your skeleton. Maybe a skeleton professionnal could help you here (maybe gryff?)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Hope this help !_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Cheers_co_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pupix","Date":"2014-06-11T11:59:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_What you said makes sense and I am boggled by it. How in the world can IE render 3D better than Chrome/Firefox but it_t_s crap in every other aspect._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Is this a problem caused by the Babylon_t_s shader or with webGL as a whole? If I were to use another framework_co_ like Three.js or whatever_co_ would I have the same problem?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2014-06-11T13:05:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_IE11 is far better than previous version of IE_co_ and I know a lot of efforts have been made in WebGl compatibility. I don_t_t know at all for others frameworks._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The number of max uniforms is limited by the browser as you can see it on the website I sent you_co_ but maybe this issue is caused by Babylon and its way to handle a basic shader depending on the number of bones... You should poke Deltakosh (babylon creator) and see what he thinks about it._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pupix","Date":"2014-06-11T13:18:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_42310_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_7083_qt_ data-ipsquote-username_eq__qt_Temechon_qt_ data-cite_eq__qt_Temechon_qt_ data-ipsquote-timestamp_eq__qt_1402491956_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_The number of max uniforms is limited by the browser as you can see it on the website I sent you caused by Babylon and its way to handle a basic shader depending on the number of bones... You should poke Deltakosh (babylon creator) and see what he thinks about it._lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Yes_co_ I know the limit is the browser but I asking if the problem was babylon_t_s shader creating so many uniforms or if what I was trying to do was actually a WebGL limit.. Perhaps it didn_t_t come out as clear as I thought it would._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_After reading for a while and comparing different frameworks it indeed seems to be an implementation problem. For example Three.js only allows for 56 bones because it uses _lt_a href_eq__qt_https_dd_//code.google.com/p/angleproject/_qt_ rel_eq__qt_external nofollow_qt__gt_ANGLE_lt_/a_gt__co_ while PlayCanvas allows for _lt_span style_eq__qt_color_dd_rgb(84_co_84_co_84)_sm_font-family_dd_arial_co_ sans-serif_sm_font-size_dd_small_sm__qt__gt_256 bones._lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2014-06-11T13:32:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I wonder what Babylon can borrow from PlayCanvas... especially if they can support that many bones effectively..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-06-11T15:51:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_babylon.js allows as many bones as your gfx card can support _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ It only creates one matrix per bone using uniform. Perhaps we should think about using a buffer instead. Let_t_s me add this idea to our backlog_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-06-11T15:51:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_And BTW three.js does not use angle. There are like babylon.js a javascript framework_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2014-06-11T16:01:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_ANGLE is built into the browser as far as I know. It_t_s due to the limited number of users that know how / don_t_t have openGL installed on their windows machines. I wish ANGLE would disable itself if you had openGL installed. I understand why they use it_co_ but I wish it was a little more dynamic because it is a performance hit._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-06-11T17:15:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_ve just checked_dd_ PlayCanvas use EXACTLY the same technique as babylon.js_dd_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_code +_eq_ _t_uniform mat4 matrix_pose[_t_ + numBones + _t_]_sm_\\n_t__sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]