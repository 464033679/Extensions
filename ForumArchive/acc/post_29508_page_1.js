[{"Owner":"JCPalmer","Date":"2017-04-03T17:54:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI know I have been a little obsessive about the size of geometry files.  In fact_co_ the latest version of Tower of Babel exporter in dev is taking it to the next level.  A hint for one of the tricks is 0_t_s are FREE for typed arrays (think about matrix weights / indices).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBJS 3.0_t_s waist line has just top the 1300 kb.  It is starting to get my attention as being a pig.  Mind you the recent breaking out of stuff into other files is good.  All the stuff in the main file is also good.  Unfortunately_co_ no one ever really needs more than 2 cameras_co_ is not using all 4 types of lights_co_ shadows_co_ using actions / animations_co_ post processes_co_ physics_co_ all the different types of textures &amp_sm_ materials_co_ and on and on in the same scene.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWebGL being locked out social media_co_ is sure to remain too obscure for CDN to really be of any use.  Almost worthless for just BJS which has 1 CDN with and 1 without https (not to mention a new version every 6 mos).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe _lt_a href_eq__qt_http_dd_//www.babylonjs.com/versionBuilder/_qt_ rel_eq__qt_external nofollow_qt__gt_build your own Babylon_lt_/a_gt_ is more of a file combiner for the kiddy end of the pool.  Not a _qt_static linker_qt_ type utility.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- - - - - - - - - - - - - - - -\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is my idea.  Use one of the Browser_t_s writing of profiling files to know what a given scene is actually using.  Firefox is writing a JSON file.  Worst case is the file can be regex mined to find all the objects with the name of BABYLON.xxxx that got instanced.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf that file could used as input_co_ to generate a boolean for each line in files section of the _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Tools/Gulp/config.json_qt_ rel_eq__qt_external nofollow_qt__gt_config.json_lt_/a_gt_ file.  Output a modified config.json file to gulp where only the files with a hit get included.  There would be issues with objects in files like Math.ts.  There might be some mandatory files_co_ though I think math.ts is too big and should be broken out.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am not ready to do this_co_ but thought I would bring it up before I was going to do it.  If anyone wants to work on this_co_ reply to thread.  If I end up doing this myself_co_ I_t_ll probably cut many corners_co_ so I would be unlikely to publish it.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BitOfGold","Date":"2017-04-03T18:45:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThat_t_s a good idea_co_ I don_t_t know it can be achieved._lt_br /_gt_\n\tI compile a custom babylon_co_ (with Tools/custom.config.js)_co_ but not easy to separate used functions by file.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt_\n\tFor example_co_ I don_t_t use any of babylon_t_s physics or collision functions - I do it with my own entity/component framework_co_ with a collision and a rigidbody component using cannon.js._lt_br /_gt__lt_br /_gt__lt_s_gt_but if I remove _qt_../../src/Collisions/babylon.collisionCoordinator.js_qt__co_ I get an error._lt_/s_gt__lt_br /_gt_\n\tUpdate_co_ now I checked and it works _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_ _lt_br /_gt__lt_br /_gt_\n\tAnd it also differs by project. I don_t_t use VR function (yet)_co_ but what if I would like to use it?_lt_br /_gt_\n\tThan i would need two custom babylon versions... Ot jut that few VR-related files separately minified and included._lt_br /_gt__lt_br /_gt_\n\tAnd my stripped down babylon.custom.js is 1 170 702 in size_co_ so I reduced onyl 13%._lt_br /_gt__lt_br /_gt_\n\tAbout CDN_dd_ There are free or cheap CDN-s like cloudflare_co_ really helps with load times around the world_co_ I think any CDN is better than no CDN.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BitOfGold","Date":"2017-04-03T18:57:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThe good news is_co_ the gzipped version that gets downloaded from the server is just 249KB._lt_br /_gt_\n\tSize is not really a big problem I think._lt_br /_gt_\n\tIf size is a problem there are other frameworks like TWGL_dd__lt_br /_gt__lt_a href_eq__qt_https_dd_//github.com/greggman/twgl.js/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/greggman/twgl.js/_lt_/a_gt__lt_br /_gt__lt_br /_gt_\n\tBut_co_ BABYLON is such a great library_co_ it would take years to get anything done in a lesser library (for me)_co_ so who cares about a few kilobytes..._lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-04-03T20:09:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI thought of reading the standard config.js and generating a custom.config.json.  Part of the reason for only the 13% is Engine_co_ Scene_co_ &amp_sm_ Math are so big.  Are you trying to accommodate multiple scenes with your custom build?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe idea is to automate as much of the effort of making the config file as possible.  Co-opting this work flow makes this a much smaller effort.  The config file has the name of the output file_co_ so each scene can have their own js file.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe a html in the Gulp directory.  Have a text field for the performance data file with a file chooser button.  After picked_co_ javascript in the html file then populates  a scrollable listboxes that contain file items to discard.  The ones in the keep were found in the performance data were removed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe discard list might be contain check-able items. You check ones to keep anyway.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso have a text field of the BJS file name with a generate button next to it.  Once generated_co_ gulp &amp_sm_ test. If you go too aggressive_co_ un-check as required.  To keep what you picked also write out a 2nd copy of config file with same name as\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-04-04T19:46:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tES6 modules do this automatically with tree shaking.  So_co_ the javascript will only contain what you are using.  ie_dd_ whether you are using a material or not will decide how the JS is generated.  Webpack2 and Rollup do this automatically_dd_ _lt_a href_eq__qt_https_dd_//github.com/rollup/rollup#tree-shaking_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/rollup/rollup#tree-shaking_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tProjects like d3 (v4) have split into modules to allow this (_lt_a href_eq__qt_https_dd_//github.com/d3/d3/blob/master/CHANGES.md_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/d3/d3/blob/master/CHANGES.md_lt_/a_gt_).\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-04T21:38:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI_t_m interested to see how we can help here. Don_t_t have time for it but definitely if something can be done to help on engine side I_t_ll do it\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Hersir","Date":"2017-04-05T11:34:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI alos vote for ES6 modules_co_ to have better support for node / webpack .... Also plugins should be registered not just auto used from global scope (cannon for example).\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-04-05T15:25:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for the heads up about ES6.  I know nothing about it.  Specification of the target_co_ currently ES5_co_ is in the Gulp.js file not the config file. I changed to ES6 for the hell of it.  Got errors at compile_co_ Gulp then crashed.  I you guys want to PR changing to ES6_co_ think you have significant work ahead of you.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI also think that this will not work for people using .babylon files.  How will tree-shaker know Arcrotate cam is needed if it is JSON?  I generate JS files with inline geometry_co_ but I am pretty alone.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI know much about data mining_co_  I think I can get something to work using the current plan.  I might need advice / help trying to refactor some code out of the very large Engine.ts or Scene.ts_co_ if there might be a significant size reduction.  That would be _lt_u_gt__lt_strong_gt_after _lt_/strong_gt__lt_/u_gt_I get this self contained (including brief directions right in the page) html file operational.  It will not be a work of art.  I can tell you that.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-04-06T14:48:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOk_co_ I have made some progress.  Looking at the profile of a simple scene_co_ I am getting hits.  Looking at the console.logs that I currently have coming out_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_including _qt_../../src/Math/babylon.math.js_qt_ using search of _t_math|mathtools|color3|color4|vector2|vector3|vector4|size|quaternion|matrix|plane|viewport|frustum|bezierCurve_t_\nincluding _qt_../../src/Tools/babylon.tools.tga.js_qt_ using search of _t_tools_t_\nincluding _qt_../../src/Tools/babylon.tools.js_qt_ using search of _t_tools_t_\nincluding _qt_../../src/babylon.engine.js_qt_ using search of _t_engine_t_\nincluding _qt_../../src/Cameras/Inputs/babylon.freecamera.input.mouse.js_qt_ using search of _t_freecamera_t_\nincluding _qt_../../src/Cameras/Inputs/babylon.freecamera.input.keyboard.js_qt_ using search of _t_freecamera_t_\nincluding _qt_../../src/Cameras/Inputs/babylon.freecamera.input.touch.js_qt_ using search of _t_freecamera_t_\nincluding _qt_../../src/Cameras/Inputs/babylon.freecamera.input.deviceorientation.js_qt_ using search of _t_freecamera_t_\nincluding _qt_../../src/Cameras/Inputs/babylon.freecamera.input.gamepad.js_qt_ using search of _t_freecamera_t_\nincluding _qt_../../src/Cameras/babylon.freeCamera.js_qt_ using search of _t_freeCamera_t_\nincluding _qt_../../src/babylon.scene.js_qt_ using search of _t_scene_t_\nincluding _qt_../../src/Tools/babylon.tools.dds.js_qt_ using search of _t_tools_t_\nincluding _qt_../../src/Cameras/Inputs/babylon.freecamera.input.virtualjoystick.js_qt_ using search of _t_freecamera_t_\nincluding _qt_../../src/Tools/HDR/babylon.tools.cubemapToSphericalPolynomial.js_qt_ using search of _t_tools_t_\nincluding _qt_../../src/Tools/HDR/babylon.tools.panoramaToCubemap.js_qt_ using search of _t_tools_t_\nincluding _qt_../../src/Tools/HDR/babylon.tools.hdr.js_qt_ using search of _t_tools_t_\nincluding _qt_../../src/Tools/HDR/babylon.tools.pmremgenerator.js_qt_ using search of _t_tools_t__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI am getting good hits for the Freecamera inputs from the _t_freecamera_t__co_ made from _lt_u_gt__lt_strong_gt_new RegExp(_t_babylon\\.\\\\w+_t_)_lt_/strong_gt__lt_/u_gt_ on the list of filenames.  This is also sweeps up some files starting with the name _t_tools_t_.  _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt__co_ expect the names of tga_co_ dds_co_ cubemapToSphericalPolynomial_co_ panoramaToCubemap_co_ hdr_co_ &amp_sm_ pmremgenerator to have _t_tools_t_ stripped from their file name.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAm not generating a config file to the downloads directory yet.  That is not as important as getting the mining correct first.  I notice I am not getting hits for StandardMaterial or Texture.  Investigating.  I already have the feature to add on extra search criteria.  The math test above was added with_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_appendSecondarySearches(_qt_math_qt__co_ _qt_mathtools|color3|color4|vector2|vector3|vector4|size|quaternion|matrix|plane|viewport|frustum|bezierCurve_qt_)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tMath has many more classes.  Think math should be broken out to at least _t_Math.core.ts_t_ and _t_supplementalMath.ts_t_.  Math is very big.  There is tons of stuff rarely used_co_ but some stuff is mandatory.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-04-06T15:10:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOk_co_ Got a much better search.  Actually it is an additional search.  It finds all uses of prototype functions.  It is finding many internal things like depthCullingState and other things.  It takes 31 files to build a .js.  Still need to verify it can find static calls.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-06T18:55:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThis is really promising and we could perhaps be able to wire it in the gulp process. Something like gulp build /use_dd_myscene.babylon\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-04-06T20:00:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI am going towards the .html file implementation for now.  It will be very bare bones_co_ and only work on FireFox with FireFox performance files.  The most important thing is searches that get an accurate list of files with no extras.  I will PR at that point.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2nd priority should probably break out Math.ts_co_ which can be done with zero compatibility issues.  See where we are at that point.  I am testing with one of the simplest of my scenes.  My goal is 300kb.  After zip_co_ would be under the 64kb limit for a single packet.  Using a CDN with that would be fast_co_ including the reduced parse time due to a smaller file.  If a class cannot be in multiple .ts files_co_ some damage to user direct calls to Engine might result_co_ if some stuff was pulled out and disbursed to dependent files.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tChanging to a .babylon as input could have problems. First_co_ I do not use a .babylon_co_ so that would be useless for me.  Also_co_ getting info from a running scene allows for mixing .babylon with user code_co_ &amp_sm_ extension code for input.  Am sure people say _qt_blah_co_ blah_co_ blah_co_ Why can I not use a .babylon as input?_qt_.  Life is hard_co_ and then you die.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-08T00:15:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m not opposed to have math.vector2.ts. math.vector3.ts and so on\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut I_t_m pretty sure you want gain a lot as there are all required to almost all scenes\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-04-10T15:04:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_170224_qt_ data-ipsquote-contentid_eq__qt_29508_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1491610545_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 4/7/2017 at 8_dd_15 PM_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI_t_m not opposed to have math.vector2.ts. math.vector3.ts and so on\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tBut I_t_m pretty sure you want gain a lot as there are all required to almost all scenes\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI think you meant _lt_u_gt__lt_strong_gt_babylon.vector2.ts_lt_/strong_gt__lt_/u_gt_ right?  They would already be in the math directory.  My visual read of the 5000 line file is that about 1000 lines might not always be called. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI got a final running scene with a 688kb file.  Having to drag in 70 kb that was not detected.  Though part of the was due to sub-classing Bone_co_ skeleton_co_ and Action in the QI extension_co_ there were other areas that could be minorly adjusted.  The simplest is not having to drag in all of the lights. _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/babylon.materialHelper.ts#L66_qt_ rel_eq__qt_external nofollow_qt__gt_MaterialHelper.PrepareDefinesForLights_lt_/a_gt_  uses an instanceof check to force the inclusion.  The base class_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Lights/babylon.light.ts#L154_qt_ rel_eq__qt_external nofollow_qt__gt_ Light.getClassName()_lt_/a_gt_ could be used to avoid this.  There are also other things getting dragged in for little reason_co_ because this area had never really been explored.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am getting into an area that no one has been before.  It was very difficult before to use this tool.  Now that I can see things_co_ pounding very slightly in many areas over time will start to add up.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ you have asked more than once _qt_Can this can be integrated into the build process?  My answer was and still probably not. There is always the possibility that there will be things that are needed_co_ but do not get recorded_co_ like sub-classes that are never called. Starting to think that you are asking the wrong question.  Maybe_co_ can a custom build process be integrated into this?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis process is not great and might be improved.  In my limited time remaining_co_ probably 2 days before I have to move on (starting Wed)_co_ will look at trying to touch off Gulp from firefox.  The other browsers stand little chance of reading files.  FYI_co_ this is what it looks like today_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_04/buildTool.jpg.e6149a2df42e8eec367b1c110a64e68b.jpg_qt_ data-fileid_eq__qt_12429_qt_ rel_eq__qt__qt__gt__lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_12429_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_04/buildTool.thumb.jpg.7ee3aefb9ac56cf11c95a65177cd0f58.jpg_qt_ alt_eq__qt_buildTool.thumb.jpg.7ee3aefb9ac56cf11c95a65177cd0f58.jpg_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-10T22:32:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThis is cool. I_t_ll dig more into it when I_t_ll have more time\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-04-12T18:36:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOk_co_  I removed some mandatory files.  Will not have time to investigate if Gulp can be called by the html file.  I have improved the process/ directions though. \n_lt_/p_gt_\n\n_lt_ul_gt__lt_li_gt_\n\t\tAdding a temp alert before Engine is instanced is cleaner than reloading the page after starting recording.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tTo avoid copying files_dd_ change Firefox download option &amp_sm_ specify a directory for build in the additional text field\n\t_lt_/li_gt_\n_lt_/ul_gt__lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_04/buildTool2.jpg.c8d59ffbecb2066e121e98f4e43e9dd0.jpg_qt_ data-fileid_eq__qt_12470_qt_ rel_eq__qt__qt__gt__lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_12470_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_04/buildTool2.thumb.jpg.b2b44147e8624ba87c4435b979f0996e.jpg_qt_ alt_eq__qt_buildTool2.thumb.jpg.b2b44147e8624ba87c4435b979f0996e.jpg_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-13T16:40:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tWhat is the size of the output now?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-04-14T14:51:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe final size was 688.  It did not budge from cleaning up Lights_co_ loadscreen_co_ and one other.  Reason is in the 2 days between 18kb of uglified space got added to the required files.  This thing is growing by the day.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe clean up had as much to do about trying to get things under control with as few special rules added as possible.  Probably need to do some final testing as BJS 3.0 goes into bug fixes only mode.  One other weakness of the custom build is it occurs against pre-production code.  Want to get good rules for the final print.  Then one could use the 3.0 tagged zip file to build against production 3.0 while 3.1 goes into alpha.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-14T16:00:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tmakes sense\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jeremybyington","Date":"2017-04-22T01:46:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tCustom builds are potentially very handy for production releases if during the development the full version can create a profile of all components being used -- not just from any .babylon files but from the actual JS. Maybe a stack trace and a source map could build a profile...but in the end I think letting the human brain decide with a series of checkboxes and a submit button would be most useful. A CDN makes it more likely that someone_t_s browser already has it cached...and also_co_ many of the websites I build have images that are larger than the 250kb gzipped size so I don_t_t even see it as a big deal_co_ but thanks for the option!\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"KramSurfer","Date":"2017-04-22T02:53:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tVery cool concept.  I like the above idea alot_co_ where in development it creates a profile_co_ then the release has just the needed items. _lt_br /_gt__lt_br /_gt_\n\tElse even a little more break out of the bigger items and specific classes that are special use.   VR_co_ mobile device_co_ or maybe some of the animation systems ( I know I_t_m not using in my current project ) would be helpful and would help lighten it. _lt_br /_gt__lt_br /_gt_\n\tAnd remember to compare this to the Unity3D html5 export output to realize how awesome this is... _dd_-)\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-23T13:47:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI recently introduced worloads to thw build process to help_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/generals/how_to_start#custom-builds_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/generals/how_to_start#custom-builds_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-04-24T16:34:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYes_co_ that has in the near term put this process out of commission.  I will not attempt to adjust this until 3.0 enters beta.  Too much labor to do it now_co_ and then test before release as well.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-24T23:24:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tWe should enter beta early june\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-06-05T15:34:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWe have entered beta_co_ I am redo-ing this.  As there is only 1 config in the repo since this was first made_co_ I was going to read the config file from Github rather than the local file.  This will also allow browsers other than Firefox for this.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI was thinking of putting up a select / dropdown of the repo branch.  This is merely a directory from a URL standpoint.  In the dropdown_co_ was going to add_dd_\n_lt_/p_gt_\n\n_lt_ul_gt__lt_li_gt_\n\t\tPreview\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tProduction\n\t_lt_/li_gt_\n_lt_/ul_gt__lt_p_gt_\n\tThere is not currently a Production Branch in the repo_co_ just version tags.  If you were really going to generate a stripped down runtime for your deployment would you really want it to be some Alpha code?  Granted_co_ you will need to switch the branch on your local repo_co_ but that is better than having to download a separate zip of the tag.  Do not think this will increase repo much_co_ as that version of files should be there already.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo when there is a final print of a version_co_ delete the Production branch (will not be one for 3.0)_co_ then create a new Production Branch.  Sound OK?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]