[{"Owner":"ramsestom","Date":"2016-06-16T16:10:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI am trying to determine the face of a cube facing toward the user after a random number of quarter rotations of a cube (I rotate the cube_co_ not the camera that is always along the z axis). I assigned each face of the cube to a submesh and tried to check which one had a normal z value equals to -1 but the normals do not seem to be affected by the rotation (I always have the same face with a normal vector equals to (0_co_ 0_co_ -1) at its vertices whatever the rotation I apply and this is the face facing the user before the rotation). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo is there a simple way to check the orientation of each face of a cube after a rotation to determine which one is perpendicular to the z axis and facing the user? \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2016-06-16T18:31:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m sure there is an easier way_co_ but I would do something like this_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#235QZM%235_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#235QZM#5_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ramsestom","Date":"2016-06-16T23:24:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks a lot. It is working perfectly. Could you just explain in a few sentences the math behind it. I am new to 3D and babylonjs and I still don_t_t know what information exactly is stored in the worldmatrix (what are the values in wm.m[0]_co_ wm.m[1]....).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs I understood from your example_co_ transformations affecting a mesh (like rotation) are not directly applied to this mesh vertices but stored in this worldmatrix (which might explain why normals values weren_t_t directly affected by the rotation) but how is this information stored in the worldmatrix? Also could I directly apply the worldmatrix to my original normals to get the resulting ones after the rotation?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2016-06-17T13:47:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe dot product of two normalized vectors will tell you what direction they are facing relative to one another.  \n_lt_/p_gt_\n\n_lt_p_gt_\n\t1 _eq_ pointing in the same direction\n_lt_/p_gt_\n\n_lt_p_gt_\n\t0 _eq_ perpendicular to each other\n_lt_/p_gt_\n\n_lt_p_gt_\n\t-1 _eq_ pointing in the exact opposite direction\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe 0_co_ 1_co_ 2 index of the worldMatrix is a normal vector that points down the positive local x axis of your mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t4_co_ 5_co_ 6 is a normal vector that points to the positive y axis.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t8_co_ 9_co_ 10 is a normal vector that points to the positive z axis.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEach one of these vectors corresponds to half of the faces of your cube.  The other half is the vectors in the opposite direction.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo find out which side is facing the camera_co_ you want to know which of the vectors is closest to being aligned with the normalized vector between the cube and the camera.  I used the dot product for that and returned the side when the result was above a certain threshold.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]