[{"Owner":"Pryme8","Date":"2016-08-13T19:33:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIs this the correct way to construct an array to pass to my shader that I can then reference and use in the fragment shader?_lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var textureBank _eq_ new Array()_sm_\n\t\t\t\tvar textureLocations _eq_ [\n\t\t\t\t//ZONE 1_dd_\n\t\t\t\t\t_qt_./textures/Beach_Rocks.jpg_qt__co_//BASE\n\t\t\t\t\t_qt_./textures/Sand_2.jpg_qt__co_//Angle Zone 1\n\t\t\t\t\t_qt_./textures/Sand_2.jpg_qt__co_//Angle Zone 2\n\t\t\t\t\t_qt_./textures/Sand_1.jpg_qt__co_//Angle Zone 3\n\t\t\t\t\t_qt_./textures/Rocks_2.jpg_qt__co_//Angle Zone 4\n\t\t\t\t]_sm_\n\t\t\t\t\n\t\t\t\t$.each(textureLocations_co_ function(i_co_e){\n\t\t\t\t\ttextureBank.push(new BABYLON.Texture(e_co_ scene))_sm_\n\t\t\t\t\ttextureBank[i].wrapU _eq_ BABYLON.Texture.CLAMP_ADDRESSMODE_sm_\n\t\t\t\t\ttextureBank[i].wrapV _eq_ BABYLON.Texture.CLAMP_ADDRESSMODE_sm_\n\t\t\t\t\t})_sm_\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\tteriableBasic _eq_ new BABYLON.ShaderMaterial(_qt_teriableBasic_qt__co_ scene_co_ {\n                    vertex_dd_ _qt_teriableBasic_qt__co_\n                    fragment_dd_ _qt_teriableBasic_qt__co_\n                \t}_co_\n                    {\n                        attributes_dd_ [_qt_position_qt__co_ _qt_normal_qt__co_ _qt_uv_qt_]_co_\n                        uniforms_dd_ [_qt_world_qt__co_ _qt_worldView_qt__co_ _qt_worldViewProjection_qt__co_ _qt_view_qt__co_ _qt_projection_qt_]\n                    })_sm_\n\t\t\t\t\n\t\t\t\tteriableBasic.setTexture(_qt_textureBank_qt__co_ textureBank)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tNow how do I reference and use it in the shader?_lt_br /_gt_\n\t _qt_uniform sampler2D textureBank_sm_\\r\\n_qt_+_lt_br /_gt__lt_br /_gt_\n\tis the line im using_co_ but before I even run it Im like 90% sure it will drop and error_co_ because textureBank is and array..._lt_br /_gt_\n\tDo I have to set texture to each of those textures in my array to sample from them?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-08-14T15:01:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tnobody knows how to pass and array of textures to a shader?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nabroski","Date":"2016-08-14T15:39:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tDoes it work ?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-08-14T15:44:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tHave not tried yet... I will today._lt_br /_gt__lt_br /_gt_\n\tI have a sneaking suspension_co_ I need to pass the texture bank as a variable not a texture then inside the fragment shader break it apart and then turn it into a BUFFER\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nabroski","Date":"2016-08-14T15:51:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\ti will do some tests soon too_co_ but i think_co_ it runs much faster in the overall app_co_ if you compile it first and then use BABYLON.USEShaderLib (..././) (i forgot the function)_lt_br /_gt__lt_br /_gt__lt_a href_eq__qt_https_dd_//doc.babylonjs.com/tutorials/How_to_create_a_material_for_materialsLibrary_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/tutorials/How_to_create_a_material_for_materialsLibrary_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs.com/Demos/CUSTOMSHADER/cellShading.js_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/Demos/CUSTOMSHADER/cellShading.js_lt_/a_gt__lt_br /_gt__lt_br /_gt_\n\tIm not sure_co_ also not tested_co_ but i think if you call your shader inside the app_co_ this way_co_ you kind of creating a call stack_co_ also blocking default shaders because of asynch in js. ...only a theory\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-08-14T15:57:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tthis sounds like what I needed_co_ thank you so much!_lt_br /_gt__lt_br /_gt_\n\tIf I get a chance today_co_ I should be able to finish the texture sampling part of my advance terrain shader_co_ from there it will be extending it to handle normal maps as well._lt_br /_gt__lt_br /_gt_\n\tYou can see the basic shader in effect on my TERIABLE Demo_co_ Im trying to get a better version of the demo together today with the ability to walk around on the land your generating_co_ new filters like terracing and smoothing_co_ and fixes to the masking and absolute value systems._lt_br /_gt__lt_br /_gt_\n\tIf things go according to plan you will be able to create and infinite terrain to walk around that is complete procedural and you will have complete control over its generation. _lt_br /_gt__lt_br /_gt_\n\tI wanted to have the sampled textures done for it.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-08-16T14:58:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tWHOA!&gt_sm_?!?!?! You can get rid of the quotes in the shader definition what the heck._lt_br /_gt__lt_br /_gt_\n\tThis is a game changer _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/21965-nabroski/?do_eq_hovercard_qt_ data-mentionid_eq__qt_21965_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/21965-nabroski/_qt_ rel_eq__qt__qt__gt_@Nabroski_lt_/a_gt_ I love you so much right now. _lt_br /_gt__lt_br /_gt_\n\t~~edit_co_ Ohh i see what you did there... tricky tricky I like it_co_ `\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-08-16T15:02:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_span_gt_GL_TEXTURE_2D_ARRAY_lt_/span_gt__lt_br /_gt__lt_br /_gt_\n\t_qt_ Images in this texture all are 2-dimensional. However_co_ it contains multiple sets of 2-dimensional images_co_ all within one texture. The array length is part of the texture_t_s size._qt__lt_br /_gt__lt_br /_gt_\n\tDoes this mean it treats and array of separate images like a single buffer?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-08-16T16:26:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCorrect.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBabylon.js supports texture arrays. You just need to call effect.setTextureArray_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/babylon.effect.ts#L383_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/babylon.effect.ts#L383_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOr if you are using a ShaderMaterial_dd_ material.setTextureArray_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/babylon.shaderMaterial.ts#L57_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/babylon.shaderMaterial.ts#L57_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-08-16T19:45:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOk Im a little lost_co_ I need to figure out how to pack a crap ton of textures into a single shader right now I am doing this_dd__lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_teriableBasic.setTexture(_qt_z1b[0]_qt__co_ textureBank[0])_sm_\n\t\t \t\tteriableBasic.setTexture(_qt_z1b[1]_qt__co_ textureBank[1])_sm_\n\t\t\t\tteriableBasic.setTexture(_qt_z1b[2]_qt__co_ textureBank[2])_sm_\n\t\t\t\tteriableBasic.setTexture(_qt_z1a0[0]_qt__co_ textureBank[3])_sm_\n\t\t \t\tteriableBasic.setTexture(_qt_z1a0[1]_qt__co_ textureBank[4])_sm_\n\t\t\t\tteriableBasic.setTexture(_qt_z1a0[2]_qt__co_ textureBank[5])_sm_\n\t\t\t\tteriableBasic.setTexture(_qt_z1a1[0]_qt__co_ textureBank[6])_sm_\n\t\t \t\tteriableBasic.setTexture(_qt_z1a1[1]_qt__co_ textureBank[7])_sm_\n\t\t\t\tteriableBasic.setTexture(_qt_z1a1[2]_qt__co_ textureBank[8])_sm_\n\t\t\t\tteriableBasic.setTexture(_qt_z1a2[0]_qt__co_ textureBank[9])_sm_\n\t\t \t\tteriableBasic.setTexture(_qt_z1a2[1]_qt__co_ textureBank[10])_sm_\n\t\t\t\tteriableBasic.setTexture(_qt_z1a2[2]_qt__co_ textureBank[11])_sm_\n\t\t\t\tteriableBasic.setTexture(_qt_z1a3[0]_qt__co_ textureBank[12])_sm_\n\t\t \t\tteriableBasic.setTexture(_qt_z1a3[1]_qt__co_ textureBank[13])_sm_\n\t\t\t\tteriableBasic.setTexture(_qt_z1a3[2]_qt__co_ textureBank[14])_sm_\n\t\t\t\t\n\t\t\t\tteriableBasic.setTexture(_qt_z2b[0]_qt__co_ textureBank[15])_sm_\n\t\t \t\tteriableBasic.setTexture(_qt_z2b[1]_qt__co_ textureBank[16])_sm_\n\t\t\t\tteriableBasic.setTexture(_qt_z2b[2]_qt__co_ textureBank[17])_sm_\n\t\t\t\tteriableBasic.setTexture(_qt_z2a0[0]_qt__co_ textureBank[18])_sm_\n\t\t \t\tteriableBasic.setTexture(_qt_z2a0[1]_qt__co_ textureBank[19])_sm_\n\t\t\t\tteriableBasic.setTexture(_qt_z2a0[2]_qt__co_ textureBank[20])_sm_\n\t\t\t\tteriableBasic.setTexture(_qt_z2a1[0]_qt__co_ textureBank[21])_sm_\n\t\t \t\tteriableBasic.setTexture(_qt_z2a1[1]_qt__co_ textureBank[22])_sm_\n\t\t\t\tteriableBasic.setTexture(_qt_z2a1[2]_qt__co_ textureBank[23])_sm_\n\t\t\t\tteriableBasic.setTexture(_qt_z2a2[0]_qt__co_ textureBank[24])_sm_\n\t\t \t\tteriableBasic.setTexture(_qt_z2a2[1]_qt__co_ textureBank[25])_sm_\n\t\t\t\tteriableBasic.setTexture(_qt_z2a2[2]_qt__co_ textureBank[26])_sm_\n\t\t\t\tteriableBasic.setTexture(_qt_z2a3[0]_qt__co_ textureBank[27])_sm_\n\t\t \t\tteriableBasic.setTexture(_qt_z2a3[1]_qt__co_ textureBank[28])_sm_\n\t\t\t\tteriableBasic.setTexture(_qt_z2a3[2]_qt__co_ textureBank[29])_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\twhich exceeds a limit of 16_co_ is there a way to get all of this to the shader easier?_lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt__qt_// Refs\\r\\n_qt_+\n_qt_uniform sampler2D z1b[3]_sm_\\r\\n_qt_+\n_qt_uniform sampler2D z1a0[3]_sm_\\r\\n_qt_+\n_qt_uniform sampler2D z1a1[3]_sm_\\r\\n_qt_+\n_qt_uniform sampler2D z1a2[3]_sm_\\r\\n_qt_+\n_qt_uniform sampler2D z1a3[3]_sm_\\r\\n_qt_+\n_qt_uniform sampler2D z2b[3]_sm_\\r\\n_qt_+\n_qt_uniform sampler2D z2a0[3]_sm_\\r\\n_qt_+\n_qt_uniform sampler2D z2a1[3]_sm_\\r\\n_qt_+\n_qt_uniform sampler2D z2a2[3]_sm_\\r\\n_qt_+\n_qt_uniform sampler2D z2a3[3]_sm_\\r\\n_qt_+\t_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI think thats what _dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_public setTextureArray(channel_dd_ string_co_ textures_dd_ BaseTexture[])_dd_ void {\n            if (this._samplers.indexOf(channel + _qt_Ex_qt_) _eq__eq__eq_ -1) {\n                var initialPos _eq_ this._samplers.indexOf(channel)_sm_\n                for (var index _eq_ 1_sm_ index &lt_sm_ textures.length_sm_ index++) {\n                    this._samplers.splice(initialPos + index_co_ 0_co_ channel + _qt_Ex_qt_)_sm_\n                }\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_table_gt__lt_tbody_gt__lt_tr_gt__lt_td style_eq__qt_background-color_dd_rgb(248_co_238_co_199)_sm__qt__gt_\n\t\t\t\t \n\t\t\t_lt_/td_gt_\n\t\t_lt_/tr_gt__lt_/tbody_gt__lt_/table_gt__lt_p_gt_\n\tis for_co_ but I dont quite understand how to implement it._lt_br /_gt__lt_br /_gt__lt_br /_gt_\n\tAnd then how would I pass a x and y size with each texture so that I can reference it later to scale each one independently?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-08-16T21:34:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tDoes anyone have an example of using Bindless Textures?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-08-17T16:36:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHere is a sample of texture array_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#NJRT3%236_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#NJRT3#6_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBy the way_co_ due to the big amount of texture you need_co_ you may need to create a texture atlas and merge your textures\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-08-17T17:58:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI was doing that this morning _lt_img alt_eq__qt_^_^_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_happy.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/happy@2x.png 2x_qt_ title_eq__qt_^_^_qt_ width_eq__qt_20_qt_ /_gt__lt_br /_gt_\n\tI figured Im gonna limit Zones to 4 sets of 4 atlases that makes 16 textures and should bind fine.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\talso thanks to your help and experimenting I was able to pass arrays easy_co_ and it seems like the setTextureArray function does not work but just setting the texture to (_t_textureBank_t__co_ textureBank)_co_ when my initial bank is already an array it automatically sets it i think_co_ as long as in the glsl part of the script the const sampler2D textureBank[x]_sm_ has the correct x value set.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MackeyK24","Date":"2017-04-11T05:16:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_140154_qt_ data-ipsquote-contentid_eq__qt_24461_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1471364786_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 8/16/2016 at 6_dd_26 AM_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tCorrect.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tBabylon.js supports texture arrays. You just need to call effect.setTextureArray_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/babylon.effect.ts#L383_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/babylon.effect.ts#L383_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tOr if you are using a ShaderMaterial_dd_ material.setTextureArray_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/babylon.shaderMaterial.ts#L57_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/babylon.shaderMaterial.ts#L57_lt_/a_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tDoes this implementation of texture array count against the MAX_TEXTURE_IMAGE_UNITS  or is using the MAX_COMBINED_TEXTURE_IMAGE_UNITS you gen from glsl texture array... i think is was something like uniform _t_sampler2DArray varname_t_ as apposed to our babylon uses _t_uniform sampler2D varname[x]_t_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MackeyK24","Date":"2017-04-18T02:11:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_140354_qt_ data-ipsquote-contentid_eq__qt_24461_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1471456693_qt_ data-ipsquote-userid_eq__qt_19199_qt_ data-ipsquote-username_eq__qt_Pryme8_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 8/17/2016 at 7_dd_58 AM_co_ Pryme8 said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI was doing that this morning _lt_img alt_eq__qt_^_^_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_happy.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/happy@2x.png 2x_qt_ title_eq__qt_^_^_qt_ width_eq__qt_20_qt_ /_gt__lt_br /_gt_\n\t\t\tI figured Im gonna limit Zones to 4 sets of 4 atlases that makes 16 textures and should bind fine.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\talso thanks to your help and experimenting I was able to pass arrays easy_co_ and it seems like the setTextureArray function does not work but just setting the texture to (_t_textureBank_t__co_ textureBank)_co_ when my initial bank is already an array it automatically sets it i think_co_ as long as in the glsl part of the script the const sampler2D textureBank[x]_sm_ has the correct x value set.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tYo _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/?do_eq_hovercard_qt_ data-mentionid_eq__qt_19199_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/_qt_ rel_eq__qt__qt__gt_@Pryme8_lt_/a_gt_ Did you ever get this going with more than the 16 texture limit ???\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]