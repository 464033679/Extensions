[{"Owner":"stormwarestudios","Date":"2017-12-20T23:47:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve been diligently working on my game_co_ and recently came upon the recently released BabylonJS v3.1 ... and I am _lt_em_gt_super excited_lt_/em_gt_ about _lt_strong_gt_NullEngine_lt_/strong_gt_!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy game is multiplayer client/server_sm_ the server component is Node.js running _lt_a href_eq__qt_https_dd_//www.actionherojs.com/_qt_ rel_eq__qt_external nofollow_qt__gt_ActionHero v18_lt_/a_gt_ (and of course the client is running BabylonJS!).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTaking a look at the _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/features/nullengine_qt_ rel_eq__qt_external nofollow_qt__gt_documentation and accompanying example_lt_/a_gt_ for NullEngine_co_ it seems it does not run 100% out of the box. However... I_t_ve been able to get everything up and running under _lt_strong_gt_Node 8.9.3_lt_/strong_gt_ with a combination of mock-browser_co_ EventEmitter_co_ xhr2 and sheer luck _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// assume this file is saved as mock-browser.js\n\n_t_use strict_t__sm_\n\nconst EventEmitter _eq_ require(_t_events_t_)_sm_\nclass ProgressEvent extends EventEmitter {}\n\nmodule.exports _eq_ {\n  setupMockBrowser_dd_ () _eq_&gt_sm_ {\n    const MockBrowser _eq_ require(_t_mock-browser_t_).mocks.MockBrowser_sm_\n    const AbstractBrowser _eq_ require(_t_mock-browser_t_).delegates.AbstractBrowser_sm_\n\n    let window _eq_ MockBrowser.createWindow()_sm_\n    let opts _eq_ { window }_sm_\n    let browser _eq_ new AbstractBrowser( opts )_sm_\n\n    global.window _eq_ window_sm_\n    global.navigator _eq_ browser.getNavigator()_sm_\n    global.document _eq_ browser.getDocument()_sm_\n    global.XMLHttpRequest _eq_ require(_t_xhr2_t_).XMLHttpRequest_sm_\n    global.ProgressEvent _eq_ ProgressEvent_sm_\n  }\n}_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tTo use this_co_ it is as simple as_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_require(_t_./mock-browser_t_).setupMockBrowser()_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI_t_m curious to know a few things_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) Since the game supports multiple users interacting in different areas (e.g. multiple _qt_rooms_qt__co_ multiple users per room_co_ users can only interact with others in the same room) it makes sense to me to manage these _qt_virtual player namespaces_qt_ separately_co_ as one BabylonJS _lt_strong_gt_Scene_lt_/strong_gt_ per _qt_room_qt_. Does this sound like a good way to divide up the game? Are there software limitations of managing multiple scenes simultaneously?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) Since the game-server has many other responsibilities (database saves_co_ websocket clients_co_ periodic tasks via a task-runner) it seems wisest to manage the client-side-equivalent of the _qt_render loop_qt_ in a periodic task_co_ which would be responsible for updating objects_t_ positions based on velocity_co_ testing collision_co_ and issuing events (via websockets) to game clients based on movement updates/positioning _lt_em_gt_rather than_lt_/em_gt_ the typical _lt_strong_gt_engine.renderLoop()_lt_/strong_gt_. I don_t_t need the updates to be real-time_co_ but do need them to occur _t_quickly enough_t_ (e.g. every 100ms) that my game-server can keep up with the number of objects per-scene. Does managing my own engine.render() seem sane? (Now that I write this out I feel that updates and rendering are unrelated. I guess we_t_ll see...)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t3) For geometry collision_co_ I_t_d like to have _qt_proximity_qt_ and _qt_actual_qt_ collision-testing_sm_ perhaps _lt_strong_gt_BoundingSphere_lt_/strong_gt_ for quickest/optimal proximity-testing_co_ and _lt_strong_gt_BoundingBox_lt_/strong_gt_ derived from a mesh for actual collision. Good idea? Terrible?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_d love to hear the community_t_s thoughts_co_ and thanks for the amazing NullEngine update!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2017-12-20T23:59:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tPretty sure this is posted in the wrong section of the forum.  Maybe move this to Questions and Answers? Or maybe Demos?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-12-21T02:06:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI_t_ll move it\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-12-21T02:09:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSo..You should not need window. The nullEngine is designed to work without Window and Document object. We had one bug that is now fixed in 3.2 (So no more need for mock browser_co_ window_co_ document and ProgressEvent)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. No problem to manage multiple scenes. It is a good usage of it. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. Not at all. calling setTimeout(scene.render()) looks perfectly fine\n_lt_/p_gt_\n\n_lt_p_gt_\n\t3. Good idea _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt_1_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt__gt_ And actually this is what I do for the collision engine (with a third level which is triangle collision check)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"stormwarestudios","Date":"2017-12-21T21:11:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_199255_qt_ data-ipsquote-contentid_eq__qt_34672_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1513822183_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t19 hours ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tSo..You should not need window. The nullEngine is designed to work without Window and Document object. We had one bug that is now fixed in 3.2 (So no more need for mock browser_co_ window_co_ document and ProgressEvent)\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tAny indication when Babylon 3.2 will make its way to Github?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for the feedback to my questions!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-12-21T21:52:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt is in github already_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/tree/master/dist/preview%20release_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/tree/master/dist/preview release_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd in npm as well _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_1_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]