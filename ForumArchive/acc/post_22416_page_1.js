[{"Owner":"Dal","Date":"2016-05-07T10:03:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tWhy is it that when profiling Babylon apps there seems to be so much idle time? I noticed this when profiling my terrain but when I tested other Babylon apps I get the same result. Attached is a profile for the Sponza demo._lt_br /_gt_\n\tIt seems like all the work gets done in surges but then the rest of the time nothing is happening. Is there a way we can utilize that idle time?\n_lt_/p_gt_\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_05/idlesponza.PNG.c86bf16ffd63476f7ca3185d25dce304.PNG_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_7577_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_05/idlesponza.thumb.PNG.e51282a1abe7190ce4ecb2e4263ebfc0.PNG_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_idlesponza.PNG_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Rezoner","Date":"2016-05-07T13:12:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThat_t_s typical for any game not just Babylon.js_lt_br /_gt_\n\tAs your game become more heavy on CPU usage the gaps will get smaller._lt_br /_gt_\n\tGame logic is being called 60 times per second - when the logic frame finishes its work there is not much left for it to do so the program goes idle and waits for the next frame._lt_br /_gt_\n\tIf there were no gaps - it would mean that your CPU can_t_t make it and the game is going below 60fps_lt_br /_gt__lt_br /_gt_\n\tIn other words - it means that you can still throw more logic and content to the game because it has free computation power to handle it - which is a pretty good news.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2016-05-07T13:14:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThe browser sends out an event every time it_t_s ready to display a frame of animation_co_ and Babylon gets that event and renders a frame of animation_co_ then waits for the next event. The fact that there_t_s idle time in between just means the scene is successfully rendering at the target framerate. If you added more stuff to the scene_co_ or more code to be run between frames_co_ it would get done during the idle time.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-05-07T13:48:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tGreat topic_co_ great answers!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe Gods of comedy were just SCREAMING at me.... when I read this line_dd_\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tQuote\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tIt seems like all the work gets done in surges but then the rest of the time nothing is happening. Is there a way we can utilize that idle time?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tAlthough miserably difficult_co_ I waited for others to seriously answer Dal_t_s questions.  Now_co_ that is done_co_ and it_t_s time for some laughs.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDal... every boss_co_ supervisor_co_ and biz owner I have EVER known... says exactly those same words... about their people... seemingly once per hour.  _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tWhen I was in the US Air Force (9 years)... idle time was filled with a bottle of Spray_t_n_t_Wipe and a cleaning rag (it was called busy-work).  Maybe we could tell the framework engine to dust_co_ mop and vacuum the scene when it_t_s not rendering.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe we should do SETI ops during that idle time.  (Search for Extra-Terrestrial Intelligence)  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tOk_co_ that_t_s enough simulated comedy.  Sorry for the interruption.  Ok_co_ no I_t_m not sorry... I_t_m still giggling.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-05-07T15:25:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/12925-fenomas/?do_eq_hovercard_qt_ data-mentionid_eq__qt_12925_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/12925-fenomas/_qt_ rel_eq__qt__qt__gt_@fenomas_lt_/a_gt_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/197-rezoner/?do_eq_hovercard_qt_ data-mentionid_eq__qt_197_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/197-rezoner/_qt_ rel_eq__qt__qt__gt_@Rezoner_lt_/a_gt__lt_br /_gt__lt_br /_gt_\n\tThe thing is_co_ this pattern still occurs when I run on a mobile device that_t_s struggling to get into double figures as far as the FPS is concerned...  that_t_s why it struck me as odd.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2016-05-08T04:42:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/17567-dal/?do_eq_hovercard_qt_ data-mentionid_eq__qt_17567_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/17567-dal/_qt_ rel_eq__qt__qt__gt_@Dal_lt_/a_gt_ I believe that_t_s down to how the browser is implemented. Like I said the browser is driving the loop (via requestAnimationFrame)_co_ so that_t_s where the decision is being made how long to stay idle. If it was striving for absolute max FPS the browser could send the events more often_co_ but that would likely drain the battery_co_ heat up the phone_co_ and make other operations (scrolling the page_co_ background stuff outside the browser_co_ etc) even slower. So I_t_d guess it probably just waits some minimum amount of time between frames regardless of how long the previous frame took.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you really need to push performance_co_ instead of using the default behavior (rendering from the browser_t_s requestAnimationFrame) you could drive your own loop with setInterval and a delay of 0_co_ or similar. That would probably cut the idle time a bit but arguably it wouldn_t_t be a good default thing to do_co_ for the reasons above.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-05-08T09:46:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t@fenomas I don_t_t think going faster will help much because there_t_s no point rendering frames that can_t_t be displayed..._lt_br /_gt_\n\tWhat I am wondering though is_co_ since we know that we will need a frame every 16.7ms to reach 60fps_co_ if we have done rendering the current frame in 5ms_co_ instead of drawing and returning and simply waiting for the next call_co_ maybe we can draw and then do a bit of work on a long running tasks before returning. Each frame it just does a bit of the work until a time limit is reached_co_ then stores the state_co_ then does a bit more work the next frame etc. until it is done. Maybe that would give us a kind of _qt_web worker_qt_ that doesn_t_t have the limitations of actual web workers?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2016-05-08T17:37:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/17567-dal/?do_eq_hovercard_qt_ data-mentionid_eq__qt_17567_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/17567-dal/_qt_ rel_eq__qt__qt__gt_@Dal_lt_/a_gt_ Certainly you can do that - just add an afterRender handler or similar_co_ and check how long the render took and then do some extra work as needed. But if the frame is finished rendering_co_ what other work is there to do?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-05-08T21:47:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_127744_qt_ data-ipsquote-contentid_eq__qt_22416_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1462729032_qt_ data-ipsquote-userid_eq__qt_12925_qt_ data-ipsquote-username_eq__qt_fenomas_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t4 hours ago_co_ fenomas said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/17567-dal/?do_eq_hovercard_qt_ data-mentionid_eq__qt_17567_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/17567-dal/_qt_ rel_eq__qt__qt__gt_@Dal_lt_/a_gt_ Certainly you can do that - just add an afterRender handler or similar_co_ and check how long the render took and then do some extra work as needed. But if the frame is finished rendering_co_ what other work is there to do?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tWell_co_ we could use this time for things like generating noise for heightmaps_co_ processing images_co_ perhaps even doing things like updating render textures and lightmaps. Basically anything in the engine where the position of the camera is not essential or can be predicted.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2016-05-09T00:48:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tSure! That_t_s what I do in my game - there are heavy long-running tasks like world generation_co_ and every render or two I start a loop that works on such tasks until 3 or 4 ms have passed. Conceptually I just consider this part of the work being done each frame.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]