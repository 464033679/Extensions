[{"Owner":"joshcamas","Date":"2014-09-24T01:01:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m needing to create a outline on a mesh_co_ and in this case a plane! How does one doeth such a thing? _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And since I hate making millions of posts_co_ how does one subdivide a plane mesh? I tried the function subdivide_co_ but it doesn_t_t seem to do what I want! _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ I_t_m wanting to do what a heightmap looks like_co_ but being a plane... and not a height map!_lt_/p_gt__lt_p_gt_Thanks!_lt_/p_gt__lt_p_gt_-Josh_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2014-09-24T05:28:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey_co_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Unfortunately_co_ I don_t_t know the answer to your first question._lt_/p_gt__lt_p_gt_However_co_  I do know the answer to the second ! To do this_co_ you can use the method_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(47_co_164_co_231)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm__qt__gt_Mesh.CreateGround(name_co_ width_co_ height_co_ subdivisions_co_ scene_co_ updatable) _lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_and use the parameter subdivisions._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2014-09-24T22:43:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ahhhh thanks!!!!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-09-25T15:57:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Speaking of created grounds... _lt_a href_eq__qt_http_dd_//www.babylonjs.com/playground/#8ULNX%2317_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/playground/#8ULNX#17_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here you will see two grounds created...  one in wireframe mode_co_ and one with a .showBoundingBox _eq_ true.  So_co_ mesh.showBoundingBox is ONE way to outline a plane.  BoundingBoxes have a strange trait.  Their lines can be seen through other meshes.  This makes them handy for SOME applications_co_ and unusable for some others._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Another way_dd_  I stole this demo from Xeonzinc (with a Deltakosh tweak).   It was used to illustrate some action manager testing.  If you mouseover the upright plane or the sphere_co_ you will see another way to outline a plane (or sphere).... mesh.renderOutline _eq_ true_sm_  There are also .renderOutlineWidth and .renderOutlineColor to play-with.  The blue plane is actually an outline placed upon the wireframe ground... without needing a mouseover.  Notice that it creates a unique offset plane to do the outline.  There may be more parameters to _t_outline_t_ than just color and width.  It is a new feature and I have not studied it._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_One more way_dd_  You can make 4 _qt_strips_qt_ of plane... using CreatePlane and then scaling the plane to be long and thin_co_ or using CreateGround (_qt_strip_qt__co_ 10_co_ 0.1_co_ 1_co_ scene)_co_ and then surround your main plane... with these 4 little strips of plane/ground.  (like a picture frame)  When you click-on/click-off your main plane (your ground)_co_ you can toggle their visibility on/off.  You are toggling the picture frame.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_There may be other ways_co_ too_co_ of course.  Notice that I placed the wireframed ground just above the other ground.  Since there is no such thing as 50% wireframe_co_ it might be wise to place a wireframed ground atop your normal ground while you are sculpting mountains (probably with the obscure and possibly-yet-uncoded CreateHeightMapGroundFromArray function).  See _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/5923-creategroundfromheightmap-use-2d-array-instead-of-image-url/_qt__gt_http_dd_//www.html5gamedevs.com/topic/5923-creategroundfromheightmap-use-2d-array-instead-of-image-url/_lt_/a_gt_  (dunno the status of _qt_next version_qt_ comment from DK)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Lets say you DID start growing mountains from an array full of height values.  You might want to put the wireframe ground atop the solid ground... so you can see the vertex points of the subdivisions... and more easily _qt_watch_qt_ your sculpting.  In other words_co_ apply the heightMap array to both grounds... the solid one and the wireframe one.  Then when you are done playing with the mountains_co_ you can simply remove the wireframe ground_co_ or make it invisible.  This is a way to accomplish 50% wireframe on any mesh._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs.com/playground/#1D6MP7%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/playground/#1D6MP7#2_lt_/a_gt_ has a sphere that uses this wireframe-atop-solid trick... which Deltakosh taught me long ago._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]