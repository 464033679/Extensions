[{"Owner":"Numa","Date":"2016-04-07T05:40:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello again _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m trying to animate between two rotations (from 0 to 45 degrees).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf I use euler angles_co_ it works fine. If I use quaternions however_co_ it doesn_t_t (it goes to about 20 degrees). See PG below_co_ comment/uncomment lines 44/45.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#RSEYY%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#RSEYY#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny thoughts?  \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_EDIT_dd_ Just found out about .rotationQuaternion_co_ seems to work now _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-04-07T20:58:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#I764D%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#I764D#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPossible fun playground.  You can repeatedly click the x/y/z buttons at the top_co_ setting the mesh rotating via physics applyImpulse twist-thrusting_co_ and watch the mesh rotationQuaternion and its .toEulerAngles() output.  Physics engines LOVE quaternions_co_ and nearly ALWAYS support the Quaternion Party in campaigns/elections.  _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tQuats.  Tumor-causing.  Some webpage somewhere described them as _qt_3 values to aim an arrow_co_ and a 4th value to set the rotation AROUND that arrow_qt_.  *shrug*  They are supposed to eliminate something called gimbal lock_co_ which happens to Eulers as values get near the poles. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI could be wrong_co_ though.  I consider myself within the top 10 BabylonJS users... at being wrong.  heh\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2016-04-07T23:42:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_-\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs usual_co_ you are correct. _lt_img alt_eq__qt__dd_rolleyes_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_rolleyes.gif_qt_ title_eq__qt__dd_rolleyes_dd__qt_ /_gt_ Euler angles are generally represented by pitch_co_ roll_co_ and yaw angles/values to set the axis of rotation_co_ as well as an angular vector for translation. Although the order of pitch_co_ roll_co_ and yaw are often ordered differently_sm_ these should be re-ordered by the developer when necessary to provide the desired behavior for an object_t_s transforms. Basically every transform applied in most every software application and/or base algorithms for object transforms in most frameworks compute in euler angles_co_ and convert these values to quaternion (x_co_y_co_z) values to make these processes simpler for the user - as it is much easier to graphically represent quaternion values in graphic applications for a UI as well as for building function curves and other graphic tools for additional animation control and representation.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe reason gimble lock most often occurs when using euler angles/values is that even though no limit exists for euler values_co_ and they can be set to practically any value (ie. +/-10_co_000 if necessary)_co_ most applications _qt_normalize_qt_ euler values to be +/- 180 degrees (you_t_ll often find _qt_normalize_qt_ as a function used in most graphic applications)_co_ which then can cause _qt_gimble lock_qt_ and more often _qt_flipping_qt_ in an object_t_s rotation_co_ as euler values of -180 and 180 often produce the exact orientation for an object_t_s vector since normalized euler angles produce no euler vector value &lt_sm_ -180 and &gt_sm_ 180 degrees. So rotating an object on a single euler axis produces the same orientation state at -180 and 180 degrees_co_ depending on the value of the other two angles. So typically there is no way to rotate an object numerically and avoid _qt_flipping_qt_ using only euler angles more than one 360 degree rotation - without additional algorithms. And what is often overlooked is that the order in which you apply values to an object_t_s euler angles changes the transformational behavior dramatically. So if you are using euler angles/values in your scene and experience _qt_gimble lock_qt_ on a bone object or _qt_flipping_qt_ on objects or cameras_co_ then by simply changing the order of rotation - which is the order in which the euler values are applied - can often correct these undesired behaviors\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere is certainly allot more to euler and quaternion math_co_ but I hope this provides a basic understanding of behaviors and when and how to use Euler values on a fundamental level. And I agree completely with Wingnut_co_ that I have almost always found it faster to work with animating objects using quaternion values.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-04-08T00:15:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks DB!  You should be a trigonometry professor making the big bucks.  That was a sweet explanation. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust a reminder... DB did it once before_co_ too.  _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/3083-spaces-world-parent-pivot-local/?do_eq_findComment&amp_sm_comment_eq_63384_qt_ rel_eq__qt__qt__gt_http_dd_//www.html5gamedevs.com/topic/3083-spaces-world-parent-pivot-local/?do_eq_findComment&amp_sm_comment_eq_63384_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThree posts in a row_co_ there... excellent.  I get .016% better at BJS each time I read them.  Good stuff.  (He_t_s worked-with motion capture/control in major movies_co_ ya know?)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYuh_co_ DB is a _qt_space cadet_qt_.  There_t_s very few people who have such a close working-relationship... with space.  _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_  (Wingy swats at minor coordinate points in space_co_ sparkling_co_ colorful_co_ the energy staples holding together the fabric of his reality.)  (or maybe they_t_re faeries!)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2016-04-08T01:50:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_-\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you only knew what a space cadet I really was..._lt_img alt_eq__qt__dd_wacko_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wacko.png_qt_ title_eq__qt__dd_wacko_dd__qt_ /_gt_ Thanks for the props on my last post - I also posted it in the spaces thread_co_ and will get back to sharing more of the little I do know about dimensional space and the math driving it. I was simply lucky enough to work in motion capture at a time before it was easy and there were applications to handle the math - so I had to learn hard core linear algebra to be able to script tracking the first optical systems we built using only crappy security cameras. And I was able to do this_co_ as in all seriousness_co_ NO ONE in the early to mid 90s believed that motion capture would ever be able to produce quality animations - even the game industry_co_ which amazed me at the time. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve got loads of great stories of where the math has worked fantastic for me_co_ as well as the worst scenarios where for example_co_ a producer ripped me a new _qt_you know what_qt_ when I first built the mocap system for the Matrix films - and on the first day of shooting the _qt_math_qt_ which allowed the systems to create a very large 3 dimensional volume from multiple smaller volumes completely failed - and the production was spending almost one quarter million dollars a day during the mocap shoots. So that was a very_co_ very bad day - and caused me to take the math allot more seriously than I had ever before.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut there_t_s lots of _qt_tricks_qt_ I should provide the community for working with Euler and Quaternion values_co_ and one of the first things I_t_m going to look into is possibly providing a function allowing Euler values &gt_sm_ 180 and &lt_sm_ -180_co_ which can solve allot of problems I read on this forum. This would be a function that would permit any value to be set for Euler angles and block the _qt_normalize_qt_ function - permitted this is being set in the babylon.js master script. I will also look at the available functions to change the order of Euler angles - so _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ - if you can let me know if you are normalizing Euler values_co_ or if this is handled in WebGL_sm_ and this as well as what functions are available to change the order for both Euler and Quaternion values in babylon.js_co_ this would give me a good head start on providing these or what might be missing to users in the master file. Also I haven_t_t found a function to freeze transforms for either Euler or Quaternion_co_ which would help allot of users - which I_t_m guessing you have already provided_co_ but if not_co_ these are the types of tools I can provide as well as how such functions can be used to provide additional efficiencies and allow users to avoid _qt_flipping of axis_t_ and _qt_gimble lock_qt_ for bones_co_ cameras_co_ and other objects a majority of the time.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-04-08T15:44:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/?do_eq_hovercard_qt_ data-mentionid_eq__qt_11286_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/_qt_ rel_eq__qt__qt__gt_@dbawel_lt_/a_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tEuler values are not normalized. They are transformed into rotation matrices but not normalized.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRegarding freezing_co_ you can freeze a mesh but not individual properties (translation_co_ rotation_co_scaling)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2016-04-08T20:08:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi DK_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tInteresting_co_ I_t_ll look closer at the babylon-master.js file to see how you are transforming rotation matrices_t__t_. And how ever you are manupulating axis values and/or input values should be interesting_co_ as I appear to see far fewer gimble lock on bones than I might normally expect. I_t_ll also think through what value there might be in calling a freeze matrices_t_ function - as I should evaluate the additional value of freezing transforms in babylon.js_co_ as opposed to Blender or any other 3D application - which is highly recommended and necessary in many cases.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for the info_co_ as this saves me allot of time parsing through the master BJS file in search of functions which may not exist. Also_co_ FYI - Im truly amazed how easy it is to read through and _qt_mostly_qt_ understand the babylon-master.js file after working with the framework for about 2 years now. It truly appeared closer to an alien language to me the first time I tried to read through it_co_ compared to how it appears now.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheers_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEDIT - And DK_co_ I see that the order of rotation is Y_co_ X_co_ Z. I cannot find any other functions to change the order of rotation_co_ so am I overlooking any re-order function(s)?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t\t\t\n\n_lt_span class_eq__t_ipsType_reset ipsType_medium ipsType_light_t_ data-excludequote_gt_\n\t_lt_strong_gt_Edited _lt_time datetime_eq__t_2016-04-08T20_dd_17_dd_27Z_t_ title_eq__t_04/08/2016 08_dd_17  PM_t_ data-short_eq__t_2 yr_t__gt_April 8_co_ 2016_lt_/time_gt_ by dbawel_lt_/strong_gt_\n\t\n\t\t_lt_br_gt_Added question\n\t\n\t\n_lt_/span_gt_\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-04-08T21:27:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI guess the only one order is Y_co_ X_co_ Z in BJS ... as it feels the most like natural head movements (I mean anatomic _qt_gimballs_qt_) like it could be expected in games _dd_  Y _eq__eq_ shaking first (to deny)_co_ X _eq__eq_ nodding then_co_ at last _lt_a href_eq__qt_http_dd_//news.hugofox.com/wp-content/uploads/2013/09/barn-owl-twisting-head.jpg_qt_ rel_eq__qt_external nofollow_qt__gt_twisting_lt_/a_gt_ _lt_img alt_eq__qt__dd_P_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ title_eq__qt__dd_P_qt_ width_eq__qt_20_qt_ /_gt_ _eq__eq_ Z\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI didn_t_t find so far another order in the code so far... maybe is it hidden in the deep mysterious part I didn_t_t explore yet ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-04-09T03:02:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYep order is Y_co_ X_co_ Z_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.abstractMesh.ts#L596_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.abstractMesh.ts#L596_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRegarding mainpulations_co_ did you check this new extension_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Extensions/tree/master/ManipulationHelpers_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Extensions/tree/master/ManipulationHelpers_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2016-04-11T03:00:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt__co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe ManipulationHelpers extension at _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Extensions/tree/master/ManipulationHelpers_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Extensions/tree/master/ManipulationHelpers_lt_/a_gt_ doesn_t_t set a different order_co_ however_co_ it appears to have some good code examples which might provide a head start on setting/changing the order of rotation. Also_co_ thanks for pointing to the function setting the rotation order_co_ as it appears to be a simple change to the function - although I_t_m thinking about a function similar to how Houdini handles rotation order which can be set on a differently on an individual chain and/or animation_co_ and/or frame range. Not so simple._lt_img alt_eq__qt__dd_wacko_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wacko.png_qt_ title_eq__qt__dd_wacko_dd__qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tAs I mentioned previously_co_ I need to evaluate the value currently in babylon.js_co_ however_co_ exporting skeleton animation from Maya and other applications can often cause serious undesired behaviors since there are multiple matrices_t_ driving their IK chains - and this must also be the case with Blender_co_ as all IK requires additional transform behaviors - depending on how they process their IK chains. Not that it matters_co_ but Houdini allows 3 different IK solutions to be set - which used to throw our productions into chaos if the artist wasn_t_t experienced in the software. For me_co_ it_t_s potentially an issue - as I generally use mocap for biped and quadraped animation_co_ and retargetting performance can be assisted/changed dramatically by changing the order of rotation - especially for a specific skeleton animation(s) and not all animations in a move tree_co_ which is why such a function has been incredibly valuable in the past. I don_t_t have a need right now_co_ but it might be fun to build this function and see if anyone else finds it useful. And consider the case of a skeleton such as the Shrek donkey_co_ which has 4 joints (consider the hip) in each leg alone - and an incredibly flexible neck with 9 bones. It required building a whole new IK system for the project_co_ and rotation order was at the top of the list. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs far as freezing transforms_co_ this is a function I believe anyone using mocap or blending animations in move trees would benefit - providing they are working with skeleton animations and didn_t_t have the foresight to freeze all transforms before animating or retargetting. Especially scale_co_ as this can often destroy any hope of saving an animation. However_co_ this would probably be quite a challenge to build in BJS_co_ or any framework where the skeleton already has animation attached. But I should look at the master file_co_ since I_t_m often amazed by the forethought _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt__co_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5482_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/_qt_ rel_eq__qt__qt__gt_@davrous_lt_/a_gt__co_ and all of the other _qt_Brainiacs_qt_ consider when contributing to the babylon-master.js file.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-04-11T21:24:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tChanging the order of rotation could be easy to integrate to be honest. We can define an enum to specifiy which order to use.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust wondering_dd_ why doing this? _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Numa","Date":"2016-04-11T22:19:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_pre_gt_\n_lt_code_gt_Quaternion.prototype.toEulerAnglesToRef _eq_ function (result_co_ order) {\n            if (order _eq__eq__eq_ void 0) { order _eq_ _qt_YZX_qt__sm_ }\n            var heading_co_ attitude_co_ bank_sm_\n            var x _eq_ this.x_co_ y _eq_ this.y_co_ z _eq_ this.z_co_ w _eq_ this.w_sm_ \nswitch (order) {\n                case _qt_YZX_qt__dd_\n                    /* ........*/              \n                default_dd_\n                    throw new Error(_qt_Euler order _qt_ + order + _qt_ not supported yet._qt_)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Just a switch case away _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ (btw the documentation says Babylon uses the YXZ order but the code says otherwise _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_)_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_124681_qt_ data-ipsquote-contentid_eq__qt_21766_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1460409841_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t46 minutes ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tJust wondering_dd_ why doing this? _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tHere is a scenario I ran into last week_dd_ slerping quaternions.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUnity uses ZXY. If I bring in a scene from Unity_co_ and want to add rotation to my quaternion without going through the pain of working out matrices_co_ I would need to go from quaternion to euler_co_ add 30 degrees to X_co_ then switch back to quaternions. Currently if you do this you end up with a different quaternion _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ Same final angle_co_ different quaternion representation. Which when you start slerping_co_ gives you 2 different trajectories hehe.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPretty specific case I know_co_ but if it_t_s not too hard_co_ that would be a great addition _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-04-11T22:32:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tsounds good to me! please submit a PR\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2016-04-12T07:55:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ - I believe _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/20501-numa/?do_eq_hovercard_qt_ data-mentionid_eq__qt_20501_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/20501-numa/_qt_ rel_eq__qt__qt__gt_@Numa_lt_/a_gt_ gave a good answer_co_ however_co_ here is a good example of changing the rotation angles in XSI - which is a Y up world orientation aplication_co_ and provides good examples of the difference in performance on skeletal animations_dd_\n_lt_/p_gt_\n\n_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_bold_sm_font-size_dd_19.2px_sm_line-height_dd_23.04px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_24pt 0px 6pt_sm_color_dd_rgb(47_co_79_co_143)_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t \n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tQuote\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_bold_sm_font-size_dd_19.2px_sm_line-height_dd_23.04px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_24pt 0px 6pt_sm_color_dd_rgb(47_co_79_co_143)_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t\t\t_lt_b_gt_Figuring Out the_lt_span_gt_ _lt_/span_gt__lt_/b_gt__lt_b_gt_Rotation Order_lt_/b_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 12pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t\t\tTo help you figure out what the rotation order for a bone should be_co_ it’s best to start with the skeleton in a neutral pose with the bone’s rotation at 0 (see_lt_span_gt_ _lt_/span_gt__lt_a href_eq__qt_http_dd_//softimage.wiki.softimage.com/xsidocs/skel_CreatingNeutralPosesforSkeletons.htm#Rdd89435_qt_ rel_eq__qt_external nofollow_qt__gt__lt_span_gt_Creating Neutral Poses for Skeletons_lt_/span_gt__lt_/a_gt_). Then start posing the skeleton with its most common movements to see where problems can occur.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 12pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t\t\tMapping the XYZ axes to movement type (such as flexion/extension_co_ medial/lateral_co_ abduction/adduction) can also help to reveal the most useful rotation order. Usually one type of movement will usually be dominant_dd_ its axis is the one that you want to be last in the rotation order so that it won’t be affected by the other axes.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 12pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t\t\tFor example_co_ let’s compare the XYZ and YZX rotation orders on the humerus bone (biceps) in an arm. With the XYZ order_dd_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 6pt 14.4pt_sm_text-indent_dd_-7.2pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t\t\t• X twists the biceps_co_ which is not that useful in many cases.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 6pt 14.4pt_sm_text-indent_dd_-7.2pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t\t\t• For arms resting at a character’s side_co_ the Z and X approach gimbal lock.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 6pt 14.4pt_sm_text-indent_dd_-7.2pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t\t\t• The back and forth swing of the arm is not easy to animate in FK.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 12pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t\t\tNow by making X the last in the rotation order_co_ the X can be used for animating the back and forth swing an arm has when a character is running or walking. Making it the last also means that the swing axis never changes_co_ which it rarely does because it’s determined by the shoulders.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 12pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t\t\tMeanwhile_co_ Z and Y can still move appropriately_dd_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 6pt 14.4pt_sm_text-indent_dd_-7.2pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t\t\t• Z is natural for medial/lateral movements_co_ like the swing in a punch.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 6pt 14.4pt_sm_text-indent_dd_-7.2pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t\t\t• Y is used for raising and lowering movements. Raising/lowering is usually a much more deliberate movement that comes more from flexing the shoulder muscles. It tends to move along with back and forth or medial/lateral movements_co_ so it makes sense to have it first in the order.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 12pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t\t\tSo after analyzing the character’s movements_co_ YZX seems like the best choice for animating the humerus.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_bold_sm_font-size_dd_19.2px_sm_line-height_dd_23.04px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_24pt 0px 6pt_sm_color_dd_rgb(47_co_79_co_143)_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t\t\t_lt_b_gt_Preventing Gimbal_lt_span_gt_ _lt_/span_gt__lt_/b_gt__lt_b_gt_Lock_lt_/b_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 12pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t\t\tTo prevent gimbal lock_co_ there are a few different ways in which you can change a bone’s rotation order.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 6pt 14.4pt_sm_text-indent_dd_-7.2pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t\t\t• When you set up character a rig_co_ you can align the chain’s root with the first bone and set the bone’s rotation order to ZXY or YXZ instead of the default XYZ. Then the middle rotation (X) (which causes gimbal lock) is on the least-used rotation (that is_co_ rotating along the length of the bone).\n\t\t_lt_/p_gt_\n\n\t\t_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 6pt 14.4pt_sm_text-indent_dd_-7.2pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t\t\t• If an object needs to rotate only along one axis_co_ change the order of axis to match it_sm_ that is_co_ if the object is rotating around the Y axis_co_ change the order of axes to YZX.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 6pt 14.4pt_sm_text-indent_dd_-7.2pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t\t\t• If an object is rotating on two axes_co_ change the order of axes to correspond with the first and last axes_sm_ that is_co_ if the object is rotating around the X and Y axes_co_ change the order of axes to XZY.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 6pt 14.4pt_sm_text-indent_dd_-7.2pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t\t\t• In addition to changing the rotation axes order_co_ you can also convert the rotation angles from Euler to quaternion. Quaternion rotation angles produce smooth interpolation to help prevent gimbal lock.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 6pt 14.4pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\t\t\tFor more information_co_ see_lt_span_gt_ _lt_/span_gt__lt_a href_eq__qt_http_dd_//softimage.wiki.softimage.com/xsidocs/ani_xform_AnimatingRotations.htm#Rco42472_qt_ rel_eq__qt_external nofollow_qt__gt__lt_span_gt_Animating Rotations_lt_/span_gt__lt_/a_gt__lt_span_gt_ _lt_/span_gt_[_lt_a href_eq__qt_http_dd_//softimage.wiki.softimage.com/xsidocs/ani_cover.htm#Rcj62878_qt_ rel_eq__qt_external nofollow_qt__gt__lt_span_gt_Animation_lt_/span_gt__lt_/a_gt_].\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 6pt 14.4pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\tI_t_m glad I didn_t_t have to write the above. Search/ Copy/ aste is my very favorite function._lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 6pt 14.4pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\tCheers_co_\n_lt_/p_gt_\n\n_lt_p style_eq__qt_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_font-size_dd_12px_sm_line-height_dd_14.4px_sm_font-family_dd_verdana_co_ arial_co_ helvetica_co_ sans-serif_sm_margin_dd_6pt 0px 6pt 14.4pt_sm_color_dd_rgb(0_co_0_co_0)_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-04-12T08:42:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tplease let me know when this change (adding the ability to change the rotation order) because this will need to change also the_lt_em_gt_ RotationFromAxis()_lt_/em_gt_ algorithm_co_ what is a three step decomposition based upon the current order _dd_ actually a backward projection of the given axis to compute the angles.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAaarrggg... not that easy to modify_co_ but still feasable\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUnless we assume (until I find the time and the way to improve it) that RotationFromAxis() always returns only a yaw-pitch-roll rotation in the YXZ rotation order ... for now\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-04-12T17:40:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJust to be sure_dd_ regarding bones you don_t_t need this as bones only have a simple transform matrix and no position/rotation/scaling properties\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo do you still think it is required? do you plan to animate meshes manually and not through bones?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Numa","Date":"2016-04-12T17:53:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ hehe sorry I don_t_t know enough about it to write the code myself_co_ we need a quaternion boss to step in _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-04-13T11:31:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi guys!   Sorry to butt-in_co_ but I have a few questions.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think our 3D Max exporter has a _qt_export rotation as quaternion_qt_ check box.  Does our Unity exporter have the same?  Just curious.  It probably doesn_t_t affect the issue.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo try to clarify the issue...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tA quat slerp animation done to a model _lt_u_gt_within Unity_lt_/u_gt_... has a different animation trajectory... when the same quat slerp is applied to the same model... after it is imported into BJS (and therefore uses a BJS quat afterwards).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDoes that sound correct?  \n_lt_/p_gt_\n\n_lt_p_gt_\n\tUnity model_co_ Unity slerp_co_ Unity quat _eq_ one trajectory. _lt_br /_gt_\n\tImported-to-BJS Unity model_co_ same Unity slerp_co_ BJS quat _eq_ different trajectory.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCould this be solved with a slerp converter?  Possible?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf the Unity quat slerp could be converted to BJS quat slerp after/during BJS import_co_ then the animation trajectory would be identical for both_co_ yes?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe this is what you guys are already thinking-about.  *shrug*  I_t_m not at all qualified to speak about ANY of this_co_ but what the heck... I don_t_t mind looking stupid... if it somehow leads to a new idea.  Thx for answers and for patience with my noobness.  Be well_co_ everyone.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]