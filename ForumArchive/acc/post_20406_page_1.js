[{"Owner":"Dad72","Date":"2016-02-08T17:02:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am looking to create a timeline_co_ but I do not really know the right ways to do it?_lt_br_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_6294_qt_ data-unique_eq__qt_r1lhpic7r_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_02/timeline.jpg.a2dd1755665f21ae1527827544334128.jpg_qt_ alt_eq__qt_timeline.jpg.a2dd1755665f21ae15278275443_qt__gt__lt_/p_gt_\n\n_lt_p_gt_\n\tIs anybody can help me or give me some line of thought.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-02-08T19:20:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe drawing part is up to you.  I made my own_co_ un-settable_co_ always going forward TimelineControl class.  It is implemented using a scene level after render.  The purposes are_dd_\n_lt_/p_gt_\n\n_lt_ul_gt__lt_li_gt_\n\t\tto pause and resume at a system wide basis.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\treduce error among the before renders of different meshes_co_ if they each called BABYLON.Now themselves.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tswitch to fixed frame rates to generate marketing animation (mp4). not working &amp_sm_ not going to be public_co_ so just a hook.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\thandle tab switching / smooth resuming.\n\t_lt_/li_gt_\n_lt_/ul_gt__lt_p_gt_\n\tI have no need to arbitrary set a time.  This is a game platform / real time environment.  To go backwards in a automatic_co_ scene level way would require a system which create an audit trail of everything ever changed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy system s not yet public_co_ so here is the source for this file_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_/// &lt_sm_reference path_eq__qt_./BeforeRenderer.ts_qt_/&gt_sm_\nmodule QI {\n    /**\n     * This class is used to provide a way to render at a precise frame rate_co_ as opposed to realtime_co_\n     * as well as system level play - pause.\n     */\n    export class TimelineControl{\n        // _eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq_ Mode Control _eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq_\n        private static _afterRenderAssigned_dd_ boolean_sm_\n        private static _manualFrameRate _dd_ number_sm_\n        private static _isRealtime _eq_ true_sm_\n        private static _now _eq_ 0_sm_\n        private static _lastRun _eq_ 0_sm_\n        private static _frameID _eq_ 0_sm_ // useful for new in frame detection\n        public  static CHANGED_TABS_THRESHOLD _eq_ 500_sm_ // msec\n        \n        private static _engine _dd_ BABYLON.Engine_sm_  // only used for MP4 recordings\n        public  static MP4Worker _dd_ Worker_sm_\n                \n        /** called by POV.BeforeRenderer */\n        public static initialize(scene _dd_ BABYLON.Scene){\n            if (!TimelineControl._afterRenderAssigned){\n                scene.registerAfterRender(TimelineControl._manualAdvanceAfterRender)_sm_     \n                \n                // built-in hooks for CocoonJS\n                if (navigator.isCocoonJS){\n                    Cocoon.App.on(_qt_activated_qt_ _co_ TimelineControl.resumeSystem )_sm_\n                    Cocoon.App.on(_qt_suspending_qt__co_ TimelineControl.pauseSystem  )_sm_\n                }\n                \n                TimelineControl._engine _eq_ scene.getEngine()_sm_\n                TimelineControl._afterRenderAssigned _eq_ true_sm_\n                var logMsg _eq_ _qt_Queued Interpolation Timeline Control system initialized_co_ version_dd_ _qt_ + BeforeRenderer.Version_sm_\n                BABYLON.Tools.Log(logMsg)_sm_      \n            }            \n        }\n        \n        public static change(isRealTime _dd_ boolean_co_ rateIfManual _eq_ 24) _dd_ void {\n            TimelineControl._isRealtime _eq_ isRealTime_sm_\n            TimelineControl._manualFrameRate _eq_ rateIfManual_sm_\n        }\n        \n        private static _manualAdvanceAfterRender() _dd_ void {\n            if (!TimelineControl._systemPaused){\n                // The system might not officially have been paused_co_ rather browser tab switched &amp_sm_ now switched back\n                if (BABYLON.Tools.Now - TimelineControl._lastRun &gt_sm_ TimelineControl.CHANGED_TABS_THRESHOLD) {\n                    TimelineControl.resumeSystem()_sm_\n                \n                }else{\n                    TimelineControl._frameID++_sm_\n                    if (TimelineControl._isRealtime){ \n                        TimelineControl._now _eq_ BABYLON.Tools.Now_sm_\n                        \n                    } else {\n                        TimelineControl._now +_eq_ 1000 / TimelineControl._manualFrameRate_sm_ // add # of millis for exact advance\n                    \n                        if (TimelineControl.MP4Worker){\n                            var screen _eq_ TimelineControl._engine.readPixels(0_co_ 0_co_ TimelineControl._engine.getRenderWidth()_co_ TimelineControl._engine.getRenderHeight() )_sm_\n                            // . . .\n                        }\n                    }\n                }\n            }\n            TimelineControl._lastRun _eq_ BABYLON.Tools.Now_sm_\n        }\n        \n        public static sizeFor720 () _dd_ void { TimelineControl._sizeForRecording(1280_co_  720)_sm_ }\n        public static sizeFor1080() _dd_ void { TimelineControl._sizeForRecording(1920_co_ 1080)_sm_ }\n        \n        private static _sizeForRecording(width _dd_ number_co_ height _dd_ number){\n            TimelineControl._engine.setSize(width_co_ height)_sm_\n        }\n        \n        // _eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq_ Gets _eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq_\n        public static get manualFrameRate() _dd_ number  { return TimelineControl._manualFrameRate_sm_ }\n        public static get isRealtime     () _dd_ boolean { return TimelineControl._isRealtime_sm_ }\n        public static get Now            () _dd_ number  { return TimelineControl._now_sm_ }\n        public static get FrameID         () _dd_ number  { return TimelineControl._frameID_sm_ }\n        // _eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq_ SYSTEM play - pause _eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq_\n        // pause &amp_sm_ resume statics\n        private static _systemResumeTime _eq_ 0_sm_\n        private static _systemPaused _eq_ false_sm_\n        \n        /** system could be paused at a higher up without notification_sm_ just by stop calling beforeRender() */\n        public static get isSystemPaused() _dd_ boolean { return TimelineControl._systemPaused_sm_ }\n        public static pauseSystem() _dd_ void { TimelineControl._systemPaused _eq_ true_sm_ }        \n        \n        public static resumeSystem() _dd_ void {\n            TimelineControl._systemPaused _eq_ false_sm_\n            TimelineControl._systemResumeTime _eq_ TimelineControl.Now_sm_\n        }\n        public static get SystemResumeTime() _dd_ number { return TimelineControl._systemResumeTime_sm_ }\n    }\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-02-08T21:33:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI updated the source.  I realized that the extra code for passive pausing do to switch browsers tabs was in the BeforeRenderer class.  That class existed prior to the timeline class.  I moved it here.  Easier to read this way.  Thanks for the thread_co_ or probably would not have realized.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2016-02-08T21:37:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJS thank you. you would not have the version Javascript. I have a bit of a hard time understanding the typescript.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks again\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-02-08T21:55:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tNot as single file. I fished it out of the file from the eclipse add-in compiler_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var QI_sm_\n(function (QI) {\n    /**\n     * This class is used to provide a way to render at a precise frame rate_co_ as opposed to realtime_co_\n     * as well as system level play - pause.\n     */\n    var TimelineControl _eq_ (function () {\n        function TimelineControl() {\n        }\n        /** called by POV.BeforeRenderer */\n        TimelineControl.initialize _eq_ function (scene) {\n            if (!TimelineControl._afterRenderAssigned) {\n                scene.registerAfterRender(TimelineControl._manualAdvanceAfterRender)_sm_\n                // built-in hooks for CocoonJS\n                if (navigator.isCocoonJS) {\n                    Cocoon.App.on(_qt_activated_qt__co_ TimelineControl.resumeSystem)_sm_\n                    Cocoon.App.on(_qt_suspending_qt__co_ TimelineControl.pauseSystem)_sm_\n                }\n                TimelineControl._engine _eq_ scene.getEngine()_sm_\n                TimelineControl._afterRenderAssigned _eq_ true_sm_\n                var logMsg _eq_ _qt_Queued Interpolation Timeline Control system initialized_co_ version_dd_ _qt_ + QI.BeforeRenderer.Version_sm_\n                BABYLON.Tools.Log(logMsg)_sm_\n            }\n        }_sm_\n        TimelineControl.change _eq_ function (isRealTime_co_ rateIfManual) {\n            if (rateIfManual _eq__eq__eq_ void 0) { rateIfManual _eq_ 24_sm_ }\n            TimelineControl._isRealtime _eq_ isRealTime_sm_\n            TimelineControl._manualFrameRate _eq_ rateIfManual_sm_\n        }_sm_\n        TimelineControl._manualAdvanceAfterRender _eq_ function () {\n            if (!TimelineControl._systemPaused) {\n                // The system might not officially have been paused_co_ rather browser tab switched &amp_sm_ now switched back\n                if (BABYLON.Tools.Now - TimelineControl._lastRun &gt_sm_ TimelineControl.CHANGED_TABS_THRESHOLD) {\n                    TimelineControl.resumeSystem()_sm_\n                }\n                else {\n                    TimelineControl._frameID++_sm_\n                    if (TimelineControl._isRealtime) {\n                        TimelineControl._now _eq_ BABYLON.Tools.Now_sm_\n                    }\n                    else {\n                        TimelineControl._now +_eq_ 1000 / TimelineControl._manualFrameRate_sm_ // add # of millis for exact advance\n                        if (TimelineControl.MP4Worker) {\n                            var screen _eq_ TimelineControl._engine.readPixels(0_co_ 0_co_ TimelineControl._engine.getRenderWidth()_co_ TimelineControl._engine.getRenderHeight())_sm_\n                        }\n                    }\n                }\n            }\n            TimelineControl._lastRun _eq_ BABYLON.Tools.Now_sm_\n        }_sm_\n        TimelineControl.sizeFor720 _eq_ function () { TimelineControl._sizeForRecording(1280_co_ 720)_sm_ }_sm_\n        TimelineControl.sizeFor1080 _eq_ function () { TimelineControl._sizeForRecording(1920_co_ 1080)_sm_ }_sm_\n        TimelineControl._sizeForRecording _eq_ function (width_co_ height) {\n            TimelineControl._engine.setSize(width_co_ height)_sm_\n        }_sm_\n        Object.defineProperty(TimelineControl_co_ _qt_manualFrameRate_qt__co_ {\n            // _eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq_ Gets _eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq_\n            get_dd_ function () { return TimelineControl._manualFrameRate_sm_ }_co_\n            enumerable_dd_ true_co_\n            configurable_dd_ true\n        })_sm_\n        Object.defineProperty(TimelineControl_co_ _qt_isRealtime_qt__co_ {\n            get_dd_ function () { return TimelineControl._isRealtime_sm_ }_co_\n            enumerable_dd_ true_co_\n            configurable_dd_ true\n        })_sm_\n        Object.defineProperty(TimelineControl_co_ _qt_Now_qt__co_ {\n            get_dd_ function () { return TimelineControl._now_sm_ }_co_\n            enumerable_dd_ true_co_\n            configurable_dd_ true\n        })_sm_\n        Object.defineProperty(TimelineControl_co_ _qt_FrameID_qt__co_ {\n            get_dd_ function () { return TimelineControl._frameID_sm_ }_co_\n            enumerable_dd_ true_co_\n            configurable_dd_ true\n        })_sm_\n        Object.defineProperty(TimelineControl_co_ _qt_isSystemPaused_qt__co_ {\n            /** system could be paused at a higher up without notification_sm_ just by stop calling beforeRender() */\n            get_dd_ function () { return TimelineControl._systemPaused_sm_ }_co_\n            enumerable_dd_ true_co_\n            configurable_dd_ true\n        })_sm_\n        TimelineControl.pauseSystem _eq_ function () { TimelineControl._systemPaused _eq_ true_sm_ }_sm_\n        TimelineControl.resumeSystem _eq_ function () {\n            console.log(_qt_system resumed_qt_)_sm_\n            TimelineControl._systemPaused _eq_ false_sm_\n            TimelineControl._systemResumeTime _eq_ TimelineControl.Now_sm_\n        }_sm_\n        Object.defineProperty(TimelineControl_co_ _qt_SystemResumeTime_qt__co_ {\n            get_dd_ function () { return TimelineControl._systemResumeTime_sm_ }_co_\n            enumerable_dd_ true_co_\n            configurable_dd_ true\n        })_sm_\n        TimelineControl._isRealtime _eq_ true_sm_\n        TimelineControl._now _eq_ 0_sm_\n        TimelineControl._lastRun _eq_ 0_sm_\n        TimelineControl._frameID _eq_ 0_sm_ // useful for new in frame detection\n        TimelineControl.CHANGED_TABS_THRESHOLD _eq_ 500_sm_ // msec\n        // _eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq_ SYSTEM play - pause _eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq_\n        // pause &amp_sm_ resume statics\n        TimelineControl._systemResumeTime _eq_ 0_sm_\n        TimelineControl._systemPaused _eq_ false_sm_\n        return TimelineControl_sm_\n    })()_sm_\n    QI.TimelineControl _eq_ TimelineControl_sm_\n})(QI || (QI _eq_ {}))_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tHere is some of the before render which does the pause checking.  Basically the rest uses TimelineControl.Now_co_ instead.  Individual mesh instances can also be paused_co_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_/**\n * beforeRender() registered to this._mesh.  Public for sub-classing in MORPH Module.\n */\npublic _incrementallyMove() _dd_ void {\n    // test for active instance pausing_co_ either instance of entire system\n    if (this._instancePaused || TimelineControl.isSystemPaused){\n        if (this._currentStepInSeries) this._currentStepInSeries.pause()_sm_\n        return_sm_\n    }\n            \n    // system active resume test\n    if (this._lastResumeTime &lt_sm_ TimelineControl.SystemResumeTime){\n        this._lastResumeTime _eq_ TimelineControl.SystemResumeTime_sm_\n        this.resumeInstancePlay()_sm_ // does nothing when this._currentStepInSeries _eq__eq__eq_ null\n    }\n    ...\n}\n\n// _eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq_ INSTANCE play - pause _eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq__eq_\nprivate _lastResumeTime _eq_ 0_sm_ // for passive detection of game pause\nprivate _instancePaused _eq_ false_sm_\n        \npublic isInstancePaused() _dd_ boolean { return this._instancePaused_sm_ }\npublic pauseInstance(){ this._instancePaused _eq_ true_sm_ }       \n        \npublic resumeInstancePlay() _dd_ void {\n    this._lastResumeTime _eq_ TimelineControl.Now_sm_ \n    this._instancePaused _eq_ false_sm_\n    // cause Event in progress to calibrate for smooth resume\n    if (this._currentStepInSeries !_eq__eq_ null) this._currentStepInSeries.resumePlay()_sm_\n}\n\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2016-02-08T22:08:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThank you JC_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut how build the graphical part of the timeline (UI)? with the scale and slider_co_ the key frame creation...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-02-08T22:14:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tNo clue.  This is an internal control system for me.  User does not have ability to change time_co_ so I have no UI\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2016-02-08T22:30:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAh_co_ ok_co_ this is the part that concerns me the most_dd_ the best method to do it. I_t_m trying to do with the classical method html / css3 and images.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2016-02-09T00:56:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Dad72_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you are planning on implimenting this into the CastorGUI extension (which I really like and am using a great deal now_co_) I would want to use my own image files to create my own style of a graphic timeline. So if this is the case_co_ then providing a function which I can format and insert my own style timeline would be fantastic. However_co_ if you_t_re not looking at implimenting this into the CastorGUI extension currently_co_ please ignore this suggestion. However having the ability to create not only a timeline_co_ but a control which I could use for a timeline_co_ video control_co_ etc. would be a great addition to CastorGUI. I_t_m building a video timeline control currently_co_ and it_t_s not fun at all. _lt_img alt_eq__qt__dd_wacko_dd__qt_ data-emoticon_eq__qt_true_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wacko.png_qt_ title_eq__qt__dd_wacko_dd__qt__gt__lt_/p_gt_\n\n_lt_p_gt_\n\tCheers_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2016-02-09T01:18:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\thi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn fact I realized it for another project I built editor to easily create small animation 3D movie. I did not think to include it in CastorGUI. But I_t_m not totally against the idea of doing it_co_ but when I have something functional_co_ not before.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2016-02-09T03:42:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPerhaps it_t_s not necessary to include in the CastorGUI extension_co_ as I can use your GUIslider to create most everything I might need to build controls for video_co_ timelines_co_ etc. But I thought I would ask if you might be adapting something more for CastorGUI and thought to mention that in any GUI I build_co_ I prefer not to be forced to use preset images and styles to my GUIs.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAgain_co_ thanks for CastorGUI and all of the tools you have built for the BJS community.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheers_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2016-02-09T18:26:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tUntil then_co_ I managed to do that_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_02/timeline.jpg.8579594f93f8c87905782b5ab941daa1.jpg_qt__gt__lt_img alt_eq__qt_timeline.thumb.jpg.13d041dca46aaf710f8a5_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_6315_qt_ data-unique_eq__qt_dpln4r0ls_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_02/timeline.thumb.jpg.13d041dca46aaf710f8a5fd5fdb6d45a.jpg_qt__gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s not working yet_co_ I have only the graphics.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]