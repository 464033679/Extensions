[{"Owner":"Shb","Date":"2018-01-14T19:11:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am trying to render a large custom mesh (with 256^2 vertices) and have that over the map_co_ and adjust vertex transparency to implement FOW(Fog Of War)_co_ I_t_ve noticed that the cpu usage goes way up when I load the large mesh_co_ I thought that it wouldn_t_t impact the cpu usage much as a sizable part of the mesh isn_t_t on screen.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis leaves me with a couple options_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. I could split the mesh into smaller chunks and load them as needed (seems difficult_co_ and I_t_m not sure if it_t_ll even work?)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. Reduce number of vertices on the mesh (but this would leave me with low resolution_co_ suboptimal)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t3. Try an entirely different approach for implementing FOW (any ideas?)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks In advance _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"renjianfeng","Date":"2018-01-15T05:33:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span style_eq__qt_font-size_dd_12px_sm__qt__gt__lt_span style_eq__qt_background-color_dd_rgb(255_co_255_co_255)_sm_color_dd_rgb(85_co_85_co_85)_sm__qt__gt_Hi，That_t_s my advice._lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_font-size_dd_12px_sm__qt__gt__lt_span style_eq__qt_background-color_dd_rgb(255_co_255_co_255)_sm_color_dd_rgb(0_co_0_co_0)_sm__qt__gt_Babylon.js v3.1 introduced a new feature_dd_ Occlusion Queries. Occlusion Queries detect whether a Mesh is visible in the current scene or not_co_ and based on that the Mesh get drawn or not. Occlusion Queries is useful when you have an expensive object on the scene and you want to make sure that it will get drawn if it is visible to the camera and it is not behind any opaque object. BabylonJs provides an implementation for Occlusion Queries using property occlusionType in AbstractMesh Class_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_font-size_dd_12px_sm__qt__gt__lt_span style_eq__qt_background-color_dd_rgb(255_co_255_co_255)_sm_color_dd_rgb(85_co_85_co_85)_sm__qt__gt_Doc：_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/features/occlusionquery_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/features/occlusionquery_lt_/a_gt__lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_font-size_dd_12px_sm__qt__gt__lt_span style_eq__qt_background-color_dd_rgb(255_co_255_co_255)_sm_color_dd_rgb(85_co_85_co_85)_sm__qt__gt_And：_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_h1 style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#00aeef_sm_font-size_dd_2em_sm__qt__gt_\n\t_lt_span style_eq__qt_font-size_dd_12px_sm__qt__gt_Optimize your scene：_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/how_to/optimizing_your_scene_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/how_to/optimizing_your_scene_lt_/a_gt__lt_/span_gt_\n_lt_/h1_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_font-size_dd_12px_sm__qt__gt_Optimize Your Scene with Octrees：_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/how_to/optimizing_your_scene_with_octrees_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/how_to/optimizing_your_scene_with_octrees_lt_/a_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_h1 style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#00aeef_sm_font-size_dd_2em_sm__qt__gt_\n\t_lt_span style_eq__qt_font-size_dd_12px_sm__qt__gt_Use SceneOptimizer：_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/how_to/how_to_use_sceneoptimizer_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/how_to/how_to_use_sceneoptimizer_lt_/a_gt__lt_/span_gt_\n_lt_/h1_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Shb","Date":"2018-01-15T08:05:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWill have a look when I get back (heading out now).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve already tried with octrees (I maybe doing it wrong) but it didn_t_t seem to help all that much. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI could try putting up a playground_co_ if that_t_d help.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you for pointing me to this _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2018-01-15T13:20:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tA playground would be nice. I would love to see how you use vertex transparency to implement Fog of War. I thought about how to do it a while ago bit didn_t_t have a good idea yet. I wanna see how you do it. _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tSplitting the mesh in submeshes might be easy_dd_ _t_You can speed things up by subdividing your mesh into submeshes using mesh.subdivide(x) where x is the number of submeshes you want._t_ (source_dd_ _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/how_to/optimizing_your_scene_with_octrees#optimizing-collisions-and-picking_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/how_to/optimizing_your_scene_with_octrees#optimizing-collisions-and-picking_lt_/a_gt_) ... but not sure if submeshes work with those Occlusion Queries.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Shb","Date":"2018-01-15T21:56:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAfter the links that _lt_strong_gt__lt_a data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/26377-renjianfeng/?do_eq_hovercard&amp_sm_referrer_eq_http%253A%252F%252Fwww.html5gamedevs.com%252Ftopic%252F35064-best-way-to-render-a-large-mesh-or-otherwise-implement-fog-of-war%252F_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/26377-renjianfeng/_qt_ style_eq__qt_background-color_dd_transparent_sm_color_dd_inherit_sm__qt_ title_eq__qt_Go to renjianfeng_t_s profile_qt_ rel_eq__qt__qt__gt_renjianfeng_lt_/a_gt_ _lt_/strong_gt_sent me(thanks _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_ ) I did end up splitting up the mesh into sub meshes_co_ which did improve the cpu usage issue_co_ but I don_t_t think I could use Occlusion Queries on the sub-meshs.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso if any of you have an idea as the what would be the best number of sub-meshs to have that would be great (number of vertices per sub mesh ?) \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI did notice something odd though it seems that the cpu usage is high on Macs[running OS X 10.12.6] (with it idling around 30-40% of one core) while they are kept relatively low(I saw it idling at 1.9% O.o) on windows machines_co_ using chrome on both. ( I used activity monitor and task manager respectively to look at the usage).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUpon investigating further I found out that even the default scene that loads on Babylon JS playground takes a lot of CPU power. ( I hope this is not a bug on my machine_co_ seems like it though because the second I open Firefox no tabs open the cpu usage is already quite high _lt_img alt_eq__qt__dd_(_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ title_eq__qt__dd_(_qt_ width_eq__qt_20_qt_ /_gt_ )\n_lt_/p_gt_\n\n_lt_p_gt_\n\there_t_s a link to the playground _dd_ _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#KDUJ4Z_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#KDUJ4Z_lt_/a_gt_ _lt_strong_gt__lt_a data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/12304-iiceman/?do_eq_hovercard&amp_sm_referrer_eq_http%253A%252F%252Fwww.html5gamedevs.com%252Ftopic%252F35064-best-way-to-render-a-large-mesh-or-otherwise-implement-fog-of-war%252F_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/12304-iiceman/_qt_ style_eq__qt_background-color_dd_transparent_sm_color_dd_inherit_sm__qt_ title_eq__qt_Go to iiceman_t_s profile_qt_ rel_eq__qt__qt__gt_iiceman_lt_/a_gt__lt_/strong_gt_ as for the actual implementation_co_ I_t_m still working on it _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__co_ need to sort out my spaghetti code _lt_img alt_eq__qt__dd_wacko_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wacko.png_qt_ title_eq__qt__dd_wacko_dd__qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"aWeirdo","Date":"2018-01-16T15:28:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/29814-shb/?do_eq_hovercard_qt_ data-mentionid_eq__qt_29814_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/29814-shb/_qt_ rel_eq__qt__qt__gt_@Shb_lt_/a_gt__lt_br /_gt__lt_br /_gt_\n\tI made this some time ago_sm_ _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#S3U25D_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#S3U25D_lt_/a_gt__lt_br /_gt_\n\tI used to have a topic about FoW_co_ but i can_t_t find it anymore._lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Shb","Date":"2018-01-17T16:49:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/17943-aweirdo/?do_eq_hovercard_qt_ data-mentionid_eq__qt_17943_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/17943-aweirdo/_qt_ rel_eq__qt__qt__gt_@aWeirdo_lt_/a_gt__co_ thanks for this_co_ it_t_s looking good _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]