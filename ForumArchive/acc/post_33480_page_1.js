[{"Owner":"brianzinn","Date":"2017-10-17T10:06:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI have my scene working great in GearVR_co_ but fuzzy in Cardboard on OnePlus.  I think what I need to do is calibrate the VR metrics for my viewer_dd__lt_br /_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/VR/babylon.vrCameraMetrics.ts_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/VR/babylon.vrCameraMetrics.ts_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tgoogle cardboard is_dd__lt_br /_gt_\n\tSreen to lens distance 39.3mm_lt_br /_gt_\n\tInter-lens distance 63.9mm_lt_br /_gt_\n\tScreen vertical alignment_dd_ Bottom_lt_br /_gt_\n\tTray to lens-center distance 35mm_lt_br /_gt_\n\tk1 distortion coefficient 0.33582564_lt_br /_gt_\n\tk2 distortion coefficient 0.55348791_lt_br /_gt__lt_br /_gt_\n\tThere is a cardboard calibrator (_lt_a href_eq__qt_https_dd_//wwgc.firebaseapp.com/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//wwgc.firebaseapp.com/_lt_/a_gt_) where you enter your PPI and will generate a QR code - using the cardboard clicking button.  Would be cool to have something built into BabylonJS.  I think I need to work my way from those numbers to those use by camera metrics - does anybody know how? Otherwise maybe I_t_ll try to start a PG using GUI + gaze to alter the metrics - except it looks like the metrics are a constructor parameter for the camera_co_ so doesn_t_t look like a good option.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_result.hResolution _eq_ 1280_sm_\nresult.vResolution _eq_ 800_sm_\nresult.hScreenSize _eq_ 0.149759993_sm_\nresult.vScreenSize _eq_ 0.0935999975_sm_\nresult.vScreenCenter _eq_ 0.0467999987_sm_\nresult.eyeToScreenDistance _eq_ 0.0410000011_sm_\nresult.lensSeparationDistance _eq_ 0.0635000020_sm_\nresult.interpupillaryDistance _eq_ 0.0640000030_sm_\nresult.distortionK _eq_ [1.0_co_ 0.219999999_co_ 0.239999995_co_ 0.0]_sm_\nresult.chromaAbCorrection _eq_ [0.995999992_co_ -0.00400000019_co_ 1.01400006_co_ 0.0]_sm_\nresult.postProcessScaleFactor _eq_ 1.714605507808412_sm_\nresult.lensCenterOffset _eq_ 0.151976421_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5482_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/_qt_ rel_eq__qt__qt__gt_@davrous_lt_/a_gt_ - Got some ideas - maybe something that could be a VR Experience Helper option to choose popular viewers using GUI + gaze like your demo (ie_dd_ cardboard/gearvr/etc.)?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-10-18T08:45:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tone of the main differences between cardboard and WebVR is that a WebVR device will provide us with view and projection matrix_co_ so we don_t_t need to make the calculations on our own. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can initialize your VR camera using those values (a VR matrices object is the 5th variable in the VR camera_t_s constructor - _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/VR/babylon.vrDeviceOrientationCamera.ts#L4_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/VR/babylon.vrDeviceOrientationCamera.ts#L4_lt_/a_gt_). So technically_co_ you could ask the user to provide those values (in any way the user sees fit) and initialize the camera using them. I am not sure we want to integrate a QR reader just for that_co_ but it would be a great external module!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-10-19T05:54:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI did find that parameter (my first link)_co_ but was saying that since it is a constructor parameter that maybe it_t_s not a good way to get the user to adjust them at runtime - I didn_t_t see a way to change them post construction_co_ so would require creating new cameras with each adjustment.  I was thinking to make PG with GUI panels and gazing would move the different values up/down so we could calculate the camera metrics - not sure if that would work creating new cameras so quickly?.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tQR reader would be cool and I found a QR decoder_co_ but looks like it only provides the numbers in my post_co_ so my other question was how do we get from my first numbers (screen to lens _co_ k1+k2_co_ etc.) to the numbers required by BabylonJS?  I did try researching it a few months back_co_ but never got it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAdding protobuf definition with perhaps useful comments_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License_co_ Version 2.0 (the _qt_License_qt_)_sm_\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http_dd_//www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing_co_ software\n * distributed under the License is distributed on an _qt_AS IS_qt_ BASIS_co_\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND_co_ either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Message describing properties of a VR head mount device (HMD) which uses an\n * interchangeable smartphone as a display (e.g. Google Cardboard).\n *\n * While some properties are certain (e.g. inter_lens_distance)_co_ others\n * represent nominal values which may be refined depending on context (e.g.\n * viewport_angles).\n *\n * Lengths are in meters unless noted otherwise.  Fields are _required_\n * unless noted otherwise.\n *\n * Some context on why this set of parameters are deemed necessary and\n * sufficient_dd_\n *    * FOV scale can be reasonably approximated from lens-to-screen distance\n *      and display size (i.e. knowing lens focal length isn_t_t crucial).\n *    * Lenses are assumed to be horizontally centered with respect to\n *      display.\n *    * The display is not necessarily vertically centered.  For interchangeable\n *      phones where the device rests against a tray_co_ we can derive\n *      the vertical offset from tray-to-lens height along with phone-specific\n *      bezel and screen sizes (supplied separately).\n */\nmessage DeviceParams {\n  // String identifying the device_t_s vendor (e.g. _qt_Google_co_ Inc._qt_).\n  // A device_t_s [vendor_co_ model] pair is expected to be globally unique.\n  optional string vendor _eq_ 1_sm_\n\n  // String identifying the device_t_s model_co_ including revision info if\n  // needed (e.g. _qt_Cardboard v1_qt_).  A device_t_s [vendor_co_ model] pair is\n  // expected to be globally unique.\n  optional string model _eq_ 2_sm_\n\n  // Distance from the display screen to the optical center of lenses.\n  optional float screen_to_lens_distance _eq_ 3_sm_\n\n  // Horizontal distance between optical center of the lenses.\n  optional float inter_lens_distance _eq_ 4_sm_\n\n  // Four-element tuple (left_co_ right_co_ bottom_co_ top) of left eye_t_s view extent\n  // angles relative to center_co_ assuming the following_dd_\n  //     * eye is aligned with optical center of lens\n  //     * display screen is equal or larger than extents viewable through lens\n  //     * nominal eye-to-lens distance\n  //     * mirrored field of view will be applied to the right eye\n  // These values are essentially used as an optimization to avoid rendering\n  // pixels which can_t_t be seen.\n  repeated float left_eye_field_of_view_angles _eq_ 5 [packed _eq_ true]_sm_\n\n  enum VerticalAlignmentType {\n    BOTTOM _eq_ 0_sm_  // phone rests against a fixed bottom tray\n    CENTER _eq_ 1_sm_  // phone screen assumed to be centered w.r.t. lenses\n    TOP _eq_ 2_sm_     // phone rests against a fixed top tray\n  }\n\n  // Set according to vertical alignment strategy-- see enum comments above.\n  // NOTE_dd_ If you set this to CENTER_co_ see special instructions for the\n  // tray_to_lens_distance field below.\n  optional VerticalAlignmentType vertical_alignment _eq_ 11 [default _eq_ BOTTOM]_sm_\n\n  // If the phone is aligned vertically within the device by resting against\n  // a fixed top or bottom tray_co_ this is the distance from the tray to\n  // optical center of the lenses.\n  // NOTE_dd_ Due to a bug in initial versions of the SDK_t_s_co_ this field\n  // must be set explicitly to .035 when vertical_alignment _eq_ CENTER.\n  optional float tray_to_lens_distance _eq_ 6_sm_\n\n  // Coefficients Ki for pincushion distortion function which maps\n  // from position on real screen to virtual screen (i.e. texture) relative\n  // to optical center_dd_\n  //\n  //    p_t_ _eq_ p (1 + K1 r^2 + K2 r^4 + ... + Kn r^(2n))\n  //\n  // where r is the distance in tan-angle units from the optical center_co_\n  // p the input point_co_ and p_t_ the output point.  Tan-angle units can be\n  // computed as distance on the screen divided by distance from the\n  // virtual eye to the screen.\n  repeated float distortion_coefficients _eq_ 7 [packed _eq_ true]_sm_\n  // Slots 8_co_ 9 reserved for per-color channel distortion.\n\n  // Optionally_co_ whether the head mount uses a magnet in any part of its\n  // design.  Intended as hint as to whether phone_t_s magnetometer is\n  // available for tasks such as orientation tracking.\n  optional bool has_magnet _eq_ 10_sm_\n\n  enum ButtonType {\n    // No physical button_co_ and touch screen is not easily accessible.\n    NONE _eq_ 0_sm_\n    // HMD has integrated magnet switch similar to original Cardboard.\n    MAGNET _eq_ 1_sm_\n    // At least a portion of touch screen is easily accessible to user for taps.\n    TOUCH _eq_ 2_sm_\n    // Touch screen is triggered indirectly via integrated button on the HMD.\n    INDIRECT_TOUCH _eq_ 3_sm_\n  }\n\n  // Specify primary input mechanism of the HMD.  Intended for advisory\n  // purposes only_co_ to address simple questions such as _qt_can HMD\n  // be used with apps requiring a physical button event?_qt_ or _qt_what icon\n  // should be used to represent button action to the user?_qt_.\n  optional ButtonType primary_button _eq_ 12 [default _eq_ MAGNET]_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-10-19T13:55:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThey are in the constructor for a specific reason _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe way the rigging system works prevents us from changing those parameters in real-time_co_ hence - the need to have them fixed during object construction. Setting them dynamically should work_co_ but might have side effects that can only be fixed with reconstructing the camera.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAbout the mapping between the configuration values and babylon_t_s values - there should be a correlation. It was implemented a long time ago (I am actually not sure by whom_co_ I have to say)_co_ but was built on top of existing parameters.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-10-20T00:19:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI_t_ll try a few things this weekend. The distances in BJS look like meters and the distortionK_t_s probably map to k1 &amp_sm_ k2.  The other ones may be optional or the same.  Anyway_co_ I will try it out and report any findings.  Can_t_t be too far from default settings as I can see the scene_co_ but it_t_s just blurry.  Cheers.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-10-22T07:22:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tno luck.  I did find a lot of crystal clear 3D threeJS cardboard demos with 1 or 2 settings - usually just eye separation (three stereo).  This is my starting point for next time_dd__lt_br /_gt__lt_a href_eq__qt_http_dd_//tparisi.github.io/WebVR/examples/cube-cardboard.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//tparisi.github.io/WebVR/examples/cube-cardboard.html_lt_/a_gt__lt_br /_gt__lt_br /_gt_\n\tThink I will try again in a few months - there_t_s only a few million Cardboard units shipped _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  ... my eyes are sore from all the different settings!_lt_br /_gt_\n\tedit_dd_ my last PG looks much better than defaults.  Only FOV and interpupillaryDistance changed from defaults (_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#N28LXA%2317_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#N28LXA#17_lt_/a_gt_)\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-10-23T08:29:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI know the feeling about sore eyes! Makes you feel sick as well_co_ using the wrong settings _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tWhat cardboard version are you using? \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-10-23T19:02:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tcardboard V2.  actually the settings from that previous post PG ended up being usable.  Besides not integrating the known cardboard parameters_co_ I would have liked to not have to set the FOV manually afterwards_co_ so just rely on device metrics.  It looks like I can influence the fov by setting the postProcessScaleFactor (_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/VR/babylon.vrCameraMetrics.ts#L21_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/VR/babylon.vrCameraMetrics.ts#L21_lt_/a_gt_)_co_ but have not investigated that properly yet.  the docs don_t_t state_co_ but assume FOV in rads - I used (60 * (Math.PI / 180)).  I will do some more testing for sure.  Additionally_co_ I may try to do some work on vr helper_co_ some options for choosing device metrics for device orientation only VR.  I am using a modified VR helper and will try to add to BJS_co_ if it ends up looking useful (ie_dd_ 2nd image with cardboard logo).  My end state would include a cardboard creation method (like GetDefault()) with cardboard parameters for VRCameraMetrics.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-10-23T21:20:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJust wanted to add that with a few tricks we should be able to show Cardboard VR automatically for any device using the phone camera and an extension_co_ so just sharing some research.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. Scan QR code. (ie_dd_ _lt_a href_eq__qt_https_dd_//github.com/LazarSoft/jsqrcode_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/LazarSoft/jsqrcode_lt_/a_gt_) online at (_lt_a href_eq__qt_https_dd_//webqr.com/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//webqr.com/_lt_/a_gt_).  Webpage did request camera permission_co_ but did not scan!  Instead I uploaded the QR code image from cardboard and was given the URL_dd_ _lt_a href_eq__qt_http_dd_//goo.gl/KS2FEm_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//goo.gl/KS2FEm_lt_/a_gt__lt_br /_gt_\n\t2. That short URL from the QR Code redirects to_dd_ _lt_a href_eq__qt_http_dd_//google.com/cardboard/cfg?p_eq_CgZHb29nbGUSCUNhcmRib2FyZB0J-SA9JQHegj0qEAAAcEIAAHBCAABwQgAAcEJYADUpXA89OghX8as-YrENP1AAYAM_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//google.com/cardboard/cfg?p_eq_CgZHb29nbGUSCUNhcmRib2FyZB0J-SA9JQHegj0qEAAAcEIAAHBCAABwQgAAcEJYADUpXA89OghX8as-YrENP1AAYAM_lt_/a_gt__lt_br /_gt_\n\t3. Input the redirected URL on _lt_a href_eq__qt_http_dd_//vrembed.org/tools/google_profile_decode.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//vrembed.org/tools/google_profile_decode.html_lt_/a_gt_ (use LONG url field_co_ since api.longurl.org no longer works for short url).  Note that this is a full JavaScript implementation to decode that URL into JSON of the cardboard configuration. That website source is on github with license Apache 2.0_co_ although the webpage itself just mashes a few libraries together (bytebuffer_co_ protobuf_co_ quirc) - not much code.  There are many_co_ many other non-licensed examples around_co_ too. I got.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_{\n _qt_vendor_qt__dd_ _qt_Google_qt__co_\n _qt_model_qt__dd_ _qt_Cardboard_qt__co_\n _qt_screen_to_lens_distance_qt__dd_ 0.03929999843239784_co_\n _qt_inter_lens_distance_qt__dd_ 0.06390000134706497_co_\n _qt_left_eye_field_of_view_angles_qt__dd_ [60_co_60_co_60_co_60]_co_\n _qt_vertical_alignment_qt__dd_ 0_co_\n _qt_tray_to_lens_distance_qt__dd_ 0.03500000014901161_co_\n _qt_distortion_coefficients_qt__dd_ [0.335825651884079_co_0.5534878969192505]_co_\n _qt_has_magnet_qt__dd_ false_co_\n _qt_primary_button_qt__dd_ 3\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tAlso_co_ got additional device information_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_{\n  _qt_name_qt__dd_ _qt_Google Cardboard_qt__co_\n  _qt_renderMode_qt__dd_ _qt_VRRenderModes.STEREOANAGLYPH_qt__co_\n  _qt_icon_qt__dd_ _qt_VRIcons.logoAnaglyph_qt__co_\n  _qt_hfov_qt__dd_ 60_co_\n  _qt_ipd_qt__dd_ 63_co_\n  _qt_ipdAdjust_qt__dd_ 0_co_\n  _qt_k_qt__dd_ [0.335_co_0.553] \n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]