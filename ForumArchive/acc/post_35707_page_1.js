[{"Owner":"SvenFrankson","Date":"2018-02-14T15:14:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi everyone_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI know it_t_s possible and advised to use InstancedMesh when several meshes share the same geometry and the same material.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs there some recommended optimization to do when two meshes share the _lt_strong_gt_same geometry_lt_/strong_gt_ but have _lt_strong_gt_different materials_lt_/strong_gt_ ? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor example with this case _dd_ _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#T4Z2V9%231_qt_ rel_eq__qt_external nofollow_qt_ style_eq__qt_background-color_dd_#ffffff_sm__qt__gt_http_dd_//playground.babylonjs.com/#T4Z2V9#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(here VertexData object is already loaded)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs there something better than two calls to _qt_applyToMesh_qt_ ? Like obj1.geometry _eq_ obj2.geometry_co_ this kind of thing...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(my question is based on the fact that Unity explicitly share the same geometry across objects_co_ even when Materials are different. But perhaps it_t_s only done to optimize data packing / loading and has no impact at runtime...)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(I_t_m fairly sure I have already found this question somewhere_co_ but can_t_t remember the answer nor find where it was...)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks a lot for your inputs ! Have a nice day_co_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-02-14T15:22:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tclones share the geo_co_ but can have different materials.  Clone does deep copy most elements_co_ but not animations.  Elements (+children) included are_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_Tools.DeepCopy(source_co_ this_co_ \n[_qt_name_qt__co_ _qt_material_qt__co_ _qt_skeleton_qt__co_ _qt_instances_qt__co_ _qt_parent_qt__co_ _qt_uniqueId_qt__co_ _qt_source_qt__co_ _qt_metadata_qt_]_co_ [_qt__poseMatrix_qt__co_ _qt__source_qt_])_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tDo something like_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var original _eq_ whatever_sm_\nvar clone _eq_ original.clone(original.name + _qt_01_qt_)_sm_\nclone.material _eq_ someThingElse_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"SvenFrankson","Date":"2018-02-15T16:43:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks JC ! Seems like it will do the job \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]