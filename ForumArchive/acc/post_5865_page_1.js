[{"Owner":"Deltakosh","Date":"2014-04-22T23:39:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey guys!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_We started the port of Babylon.js to TypeScript. This will not change anything for you as babylon.js users._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You can continue to contribute to Javascript version (I will do the port back to TS in this case). But I encourage you reading and learning TypeScript. As JS developers I sure you will love it_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I will write an article to explain this choice _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Edit_dd_ Here is the article_eq_&gt_sm_ _lt_a href_eq__qt_http_dd_//blogs.msdn.com/b/eternalcoding/archive/2014/04/28/why-we-decided-to-move-from-plain-javascript-to-typescript-for-babylon-js.aspx_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//blogs.msdn.com/b/eternalcoding/archive/2014/04/28/why-we-decided-to-move-from-plain-javascript-to-typescript-for-babylon-js.aspx_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Chris","Date":"2014-04-22T23:52:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m looking forward to that article. Especially for an opensource project_co_ I personally would never go away from plain JS_co_ because you are locking out a LOT of potential contributors._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But lets wait for your article _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-22T23:57:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_A lot of work for me in this case _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt_You can continue to contribute to Javascript version (I will do the port back to TS in this case)_lt_p_gt_ _lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Btw Typescript is free_co_ opensource_co_ available on all platforms and all IDE_co_ so I hope it won_t_t be a too huge blocker_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-04-23T07:21:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_That sounds good. Will TypeScript version be the source code and the Javascript version an _qt_export_qt_ of it? Yes if I have well understood._lt_/p_gt__lt_p_gt_Just by curiosity_co_ how will you handle that a variable can be a vector3 or a mesh (the target for the camera for example) in the TypeScript version? It won_t_t always be easy to translate plain JS to TS except if you use _qt_any_qt_ for those variables but then the type will be missing in TypeScript _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Chris","Date":"2014-04-23T10:53:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@Deltakosh_dd_ Talk to rich about using Typescript for an OS project. He started Phaser in Typescript_co_ I thought it was not the best idea. In the end he had so many problems that he invested days to roll everything back to vanilla JS._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Ezelia","Date":"2014-04-23T11:33:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I actually work with TS in big projects _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ it_t_s not allways easy but thing are becomming a lot better than before ..._lt_br_gt_since 0.9.5 we had almost no problem with the language or compiler. now that TypeScript is in stable 1.0 version we also have the assurance of no more breaking change ._lt_br_gt__lt_br_gt_The only real problem IMO for OpenSource projects is contributions ..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I remember when Rich switched back to JS_co_ that time I agree there was so many breaking changes in TypeScript compiler when they moved from 0.8.x to 0.9.x ...  and so many issues with the compiler _dd_ from performance issues to buggy generated JS ... but everything was fixed in newer version._lt_br_gt__lt_br_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"davrous","Date":"2014-04-23T11:42:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ TypeScript is generating clean JS. You_t_ll be still able to contribute to fix code by sending JS. We will take care of converting changes to TS if you_t_re not confortable with that_co_ even if we would love that you_t_re doing it in TS directly. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ I_t_ve used TS some months ago in 0.8 and 0.9. I think that 1.0 is now perfectly stable and will be integrated very well in our current babylon.js team dev chains (VS2013 &amp_sm_ Visual Studio Online). That_t_s why we_t_re thinking that it_t_s the right moment for switching. We have already identified some bugs in our code thanks to that._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ I_t_m still a bit stressed by community contributions &amp_sm_ feedbacks but I don_t_t think it would be a problem. As I_t_ve told you_co_ nothing prevents you to fix or submit a feature in plain JS. TypeScript can work smoothly with classic JS._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Bye_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_David_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gamestudiohx","Date":"2014-04-23T15:36:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You should go with _lt_a href_eq__qt_http_dd_//haxe.org_qt_ rel_eq__qt_external nofollow_qt__gt_Haxe_lt_/a_gt_. It also generates clean JS and brings Babylon to more platforms._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"SideraX","Date":"2014-04-24T14:11:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Can you add the _references.ts in the git repository ? It will be usefull for the command line compilation_co_ and I will able to add this task for gulp _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_gulp.task(_t_typescript_t__co_ function() {  return gulp.src([_t_../../Babylon/**/*.ts_t_])    .pipe(typescript({ out_dd_ _t_Babylon.js_t__co_ declaration_dd_ true_co_ target_dd_ _t_ES5_t_ }))    .pipe(gulp.dest(_t_build/_t_))_sm_})_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-24T19:08:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Where should I find this file?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"SideraX","Date":"2014-04-24T19:21:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_a href_eq__qt_http_dd_//blogs.msdn.com/b/typescript/archive/2013/12/05/announcing-typescript-0-9-5.aspx_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//blogs.msdn.com/b/typescript/archive/2013/12/05/announcing-typescript-0-9-5.aspx_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_My understanding is that Visual Studio manage references between ts files implicitly_co_ however _qt_tsc_qt_ need all that explicitly (I think)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_strike_gt_BUT I just test it without it and the compilation worked ... so just forget everything I said ^^_lt_/strike_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Edit _dd_ Well no_co_ tsc does need the references to compile files in the right order. It_t_s possible to maintain a _references.ts with all the source files referenced in the right order inside ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-24T22:02:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok well I will do that _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-28T15:58:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Article_dd_ _lt_a href_eq__qt_http_dd_//blogs.msdn.com/b/eternalcoding/archive/2014/04/28/why-we-decided-to-move-from-plain-javascript-to-typescript-for-babylon-js.aspx_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//blogs.msdn.com/b/eternalcoding/archive/2014/04/28/why-we-decided-to-move-from-plain-javascript-to-typescript-for-babylon-js.aspx_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"demonixis","Date":"2014-04-29T07:41:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt_I think it_t_s a good ide. The static compilation is a really nice feature._lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_JavaScript is different and has its limits for webapps. With TypeScript_co_ Babylon.js will be more scalable and maintainable and it_t_s a very good thing._lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_The next step is to create good resources for developers to learn them the benefits of TypeScript programming. I_t_ll try to write some tutorials (in French because there are already enough English writter) for TypeScript but I need to learn it correctly before that._lt_/div_gt__lt_br_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-04-29T07:51:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It is a good idea to the tutorial in french. Thank you_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Marco Lebdech","Date":"2014-05-26T07:01:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I recently started to use Babylon.js with our will-be-really-complex-in-the-future project written in TypeScript with Angular.js. I know that you are working on TypeScript version of Babylon_co_ but I found nowhere (maybe I just didnt search enough) how to use new version of Babylon in project with TypeScript. I tried to use 1.11_co_ but as I startedtrying to implement Shaders_co_ there are no TypeScript definitions for ShaderMaterial. Is there any unofficial version of Babylon.d.ts_co_ or i should edit that file in order to use 1.12 version of Babylon.js?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks_co__lt_/p_gt__lt_p_gt_Marek_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"davrous","Date":"2014-05-26T15:58:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_We haven_t_t finished yet to port it to TS. We_t_ve done 90% of the job. It_t_s currently only in our private source code repository. 1.12 has been created using our private TS build._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It should be 100% TS completed by 2 weeks._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_David_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"SideraX","Date":"2014-05-26T18:31:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The merge request I pushed today was merged._lt_/p_gt__lt_p_gt_So you can use gulp to build babylon from the ts files and generate the babylon.d.ts _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/tree/master/Tools/Gulp_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/tree/master/Tools/Gulp_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Note that as the ts port is not yet completed_co_ some declaration can be missing._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Marco Lebdech","Date":"2014-05-27T05:24:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks for your reply davrous and SideraX_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I am glad to hear that port will be completed that soon _dd_-) (I am shaking in impatience _dd_-D). I will try to build babylon today to get *.d.ts and see if it will works for some time as i need _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"binyan","Date":"2014-05-30T13:09:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_skyboxMaterial.reflectionTexture _eq_ new BABYLON.CubeTexture(_qt_skybox/skybox_qt__co_ scene)_sm__lt_/pre_gt__lt_p_gt_Doesn_t_t work with typescript. The error is _lt_strong_gt__qt_Cannot convert BABYLON.CubeTexture to BABYLON.Texture. Type BABYLON.CubeTexture is missing property uOffset from type BABYLON.Texture_qt__lt_/strong_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-05-31T13:32:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yes I will fix that point _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Alvaro","Date":"2015-09-19T19:44:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I am using typescript with babylon js. It is easy to find babylon.js in nuget but not so easy to find the right typing files for babylon. I am using _qt_babylon.2.0.d.ts_qt_ but it does not contain everything._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What is the right way to develop using typescript with babylon? Should I use a babylon.ts file that integrate everything? _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ChrisR","Date":"2015-09-19T20:35:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I personally grab the src files off of the github. They have a gulp file on there. Just run the gulp file and it will compile a new d.ts file for you. Making it up to date with everything._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2015-09-19T21:48:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/tree/master/dist_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/tree/master/dist_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/tree/master/dist/preview%20release%20-%20beta_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/tree/master/dist/preview%20release%20-%20beta_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Alvaro","Date":"2015-09-20T08:10:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thank you @Adam!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_That typing file includes references to _qt_AudioContext_qt__co_ _qt_AudioNode_qt__co_ etc..._lt_/p_gt__lt_p_gt_But I don_t_t have that and is failing at compilation time. Am I force to have that javascript framework? Where can I find it if that is the case _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thank you again!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@ChrisR_co_ I have never use gulp_co_ but will take a look. anyway_co_ for now_co_ If I can get the compiled version_co_ it is enough for me. Thanks!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]