[{"Owner":"heyzxz","Date":"2016-12-10T07:35:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi there_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAccording to this_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/babylon.shaderMaterial.ts#L163-L217_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/babylon.shaderMaterial.ts#L163-L217_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think the ShaderMaterial is doing the full _t_Ready checking_t_ every frame_co_ and I_t_m just wondering why didn_t_t use the _t__wasPreviouslyReady_t_ flag just like other materials (standard_co_ PBR) did to make it possible to skip the full ready checking ?\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_if (this.isFrozen) {\n    if (this._wasPreviouslyReady) {\n        return true_sm_\n    }\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nabroski","Date":"2016-12-10T07:52:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYou can test you suggestion on your local machine_lt_br /_gt__lt_a href_eq__qt_https_dd_//doc.babylonjs.com/generals/how_to_start_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/generals/how_to_start_lt_/a_gt__lt_br /_gt__lt_br /_gt_\n\tAnd then make a pull request on github. write a short note_co_ and then it will be merged within few hours!  _lt_br /_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/tree/master/src_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/tree/master/src_lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]