[{"Owner":"Dilshad Roshan","Date":"2018-07-06T09:54:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWhile importing meshes designed in software like Autocad and Blender_co_ I noticed that the color of a previously imported mesh is getting applied to many meshes that are later imported. Then I realized that that this is due to conflicting material IDs.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs there a way to modify material ID of an imported mesh or is there any other solution to this problem?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2018-07-06T11:32:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI guess the best would be to change the material ID before exporting. Is it a possibility?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dilshad Roshan","Date":"2018-07-06T11:39:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHow can it be done?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"V!nc3r","Date":"2018-07-06T12:02:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJust by modifying its name I suppose.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2018-07-06T12:08:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWOuld be my guess as well. before exporting_co_ make sure your material has a unique id in the software you are exporting from\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dilshad Roshan","Date":"2018-07-06T12:12:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMy app has feature for users to upload 3D models. So it is not always me who create and export meshes. So what I need to know is if there is any programmatic way to avoid this conflict.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"SvenFrankson","Date":"2018-07-06T12:33:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI need something like this too (removing textures from imported material)_co_ the way we do it is\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_$.json(\n  {\n    url_dd_ _qt_model.babylon_qt__co_\n    success_dd_ (rawData) _eq_&gt_sm_ {\n      data.id _eq_ _qt_newId_qt__sm_\n      data.mesh.material.id _eq_ _qt_newId_qt__sm_\n      BABYLON.SceneLoader.ImportMesh(\n         _qt__qt__co_\n         _qt_data_dd_//_qt_ + JSON.stringify(rawData)_sm_\n         scene_co_\n         (meshes_co_ particles_co_ skeletons) _eq_&gt_sm_ {\n           // success callback \n         }\n      )\n    }\n  }\n)_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t(It_t_s pseudocode_co_ the success callback in the first $.json call is likely to be much more complicated...)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe idea is you first load the .babylon file as a Javascript object_co_ so you may edit it easily.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOnce all changes are made_co_ you serialize and re-inject it. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t(It would be better to be able to load a mesh from a Javascript object_co_ but it requires some changes in Babylon code...)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]