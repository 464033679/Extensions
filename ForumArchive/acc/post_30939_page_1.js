[{"Owner":"FunFetched","Date":"2017-06-08T19:46:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi there! I_t_m relatively new to Babylon.js_co_ but loving it so far! I_t_m currently developing a simple FPS_co_ and had some issues getting the positional audio to work at first. I found FreeCamera_t_s control scheme to be inadequate for my purposes_co_ and decided to instead assign a parent mesh (representing the player_t_s _qt_head_qt_) to my camera_co_ so it would follow along perfectly. However_co_ the positional audio didn_t_t work with this configuration_co_ as I discovered that the engine uses the camera_t_s local coordinates (always 0_co_ 0_co_ 0 in this case) to determine the listener_t_s position. I changed the following line (#18730) to use the camera_t_s globalPosition instead_co_ and all is well.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_audioEngine.audioContext.listener.setPosition(listeningCamera.globalPosition.x_co_ listeningCamera.globalPosition.y_co_ listeningCamera.globalPosition.z)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI would imagine that this could break some other projects_co_ but it seems to me that there should be some kind of option to enable this behavior. Perhaps a check to see if the camera has a parent? Maybe a simple bool flag?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-06-09T15:01:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tPing _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5482_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/_qt_ rel_eq__qt__qt__gt_@davrous_lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"davrous","Date":"2017-06-14T14:58:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi! Thanks for your feedback.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo if I_t_ve understood correctly_co_ you_t_d like to create a third-person camera_co_ so the audio engine should update the position and orientation based on the mesh representing the head_co_ correct?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is an interesting use case I_t_ve never thought about before. I_t_m going to add an option on the scene to let you define a listening object instead to be able to set something else as the current active camera. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"FunFetched","Date":"2017-06-15T18:33:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIn my case_co_ it_t_s a first-person camera_co_ but one that is attached to the _qt_eye_qt_ mesh by means of parenting. Here are snippets from a couple of different files so you can see what_t_s going on_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// Setting up the player_t_s _t_actor_t_ mesh\nthis.mesh _eq_ new BABYLON.AbstractMesh(_t_player_t__co_ scene)_sm_\n\nthis.bodyMesh _eq_ Meshes.body.clone(_t_body_t__co_ this.mesh)_sm_\nthis.bodyMesh.position.y _eq_ 0.32_sm_\nthis.bodyMesh.parent _eq_ this.mesh_sm_\n\n// Head pivots with mouse look.\nthis.head _eq_ new BABYLON.AbstractMesh(_t_head_t__co_ scene)_sm_\nthis.head.parent _eq_ this.mesh_sm_\nthis.head.position.y _eq_ 0.3_sm_\n\n// Separate_co_ empty _t_eye_t_ mesh for attaching camera.\n// This is for controlling recoil and other _t_shake_t_ animations\nthis.eye _eq_ new BABYLON.AbstractMesh(_t_eye_t__co_ scene)_sm_\nthis.eye.position.y _eq_ 0.1_sm_\nthis.eye.parent _eq_ this.head_sm_\n\n...\n\n// Attaching camera to the player_t_s _t_eye_t_\nthis.camera.parent _eq_ this.me.actor.eye_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tAs you can see_co_ there_t_s some hierarchy here that puts a few layers between the camera itself and the world coordinate system. Since the camera_t_s local coordinates never stray from 0_co_ 0_co_ 0_co_ the audio listener_t_s position never moves.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFreeCamera was a little too _qt_special purpose_qt_ for my needs_co_ as I wanted to roll my own control scheme. I also didn_t_t want the camera to control the player mesh_sm_ I wanted the player mesh to control the camera. I tried a few of the other built-in cameras_co_ TargetCamera_co_ ArcRotateCamera_co_ etc._co_ and attempted to make them follow my eye mesh_co_ but couldn_t_t get them to track smoothly and reliably. They all seem to be hard-wired to follow just behind their target with some interpolation_co_ while I wanted the camera to be locked firmly to my mesh. Fiddling with the parameters to eliminate the interpolation just caused them to go haywire_co_ so I decided to eliminate all the bother and set the camera_t_s parent to my _t_eye_t_ mesh and be done with it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIdeally_co_ I guess I_t_d propose another type of camera altogether_sm_ say_co_ a _qt_FixedCamera_qt__co_ or _qt_MeshCamera_qt_. No fancy controllers or interpolators_co_ just a means of locking its global position and orientation to a mesh (or AbstractMesh in this case). I might take a stab it myself at some point_co_ but my work-around is doing fine for now_co_ and I don_t_t have quite enough time at the moment to dig in there and figure that out.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]