[{"Owner":"jerome","Date":"2015-06-12T16:39:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_A new topic seems better for continuing this _dd__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/15088-is-one-particle-at-a-time-an-abuse-of-particle-system/?p_eq_85787_qt__gt_http_dd_//www.html5gamedevs.com/topic/15088-is-one-particle-at-a-time-an-abuse-of-particle-system/?p_eq_85787_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So_co_ here_t_s a very little improvement (nano seconds !) _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#11VPQD%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#11VPQD#2_lt_/a_gt__lt_/p_gt__lt_p_gt_the normals aren_t_t recomputed on triangles each frame_lt_/p_gt__lt_p_gt_the triangle material has an enabled backFaceCulling_co_ since there is BILLBOARDMODE_ALL also (back face is never visible)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Something I don_t_t understand _dd_ I can_t_t active _lt_em_gt_freezeWorldMatrix_lt_/em_gt_ else nothing is rendered_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_PS.emitter.freezeWorldMatrix()_sm__lt_/pre_gt__lt_p_gt_The mesh isn_t_t yet translated_co_ rotated_co_ or scaled. It is changed only in its local system_co_ so its WorldMatrix should keep fixed._lt_/p_gt__lt_p_gt_Am I missing something ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-12T18:31:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_mmhh.. the BILLBOARDMODEs have side effect if we choose big sized triangles... because this mode applies to the global mesh (not only on each face_co_ I guess)_co_ so it can crop a part of the emitted particles_lt_/p_gt__lt_p_gt_So I think the way to display particles  (billboarded x_co_ y_co_ z_co_ all_co_ none) will be a parameter in the final function... or maybe nothing at all since the underlying mesh is accessible_co_ users will do whatever they want/need because there is no universal best option imho _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_PS.emitter.billboardMode _eq_ BABYLON.Mesh.BILLBOARDMODE_ALL_sm__lt_/pre_gt__lt_p_gt_Well... if we have a mesh based particle system_co_ so why not to use by ourselves then all the Mesh properties when they are needed ? nope ?_lt_/p_gt__lt_p_gt_Thus the PS would be agnostic about user preferences or needs. Just a (weird) mesh._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-12T20:53:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_quick texture + alpha test _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#11VPQD%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#11VPQD#4_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_this is a mesh... so it can lookAt the cam position ! better than billboardmode _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#11VPQD%235_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#11VPQD#5_lt_/a_gt__lt_/p_gt__lt_p_gt_or not ... don_t_t really know_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_[EDIT] gotcha _dd_ BILLBOARD or lookAt rotates the _lt_u_gt_whole_lt_/u_gt_ mesh for it to face the cam_co_ so it looks like some particle are cropped... actually_co_ they are still emitted in the rotated orientation_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2015-06-13T08:05:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ve been following your discussions and found it really interesting. One thing that may help_dd_ have you looked into the SpriteManager class? Its principle is close to the particle system as it is only constituted of one big mesh with many quads_co_ but these quads can be positioned manually by the user and their UV coordinates can be changed individually (through the use of cellIndex)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Good luck!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-13T10:41:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_nice idea !_lt_/p_gt__lt_p_gt_I_t_ll have a look a this too  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_thank you_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-13T12:20:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_After have read the Sprite code_co_ and as far as I understand_co_ it_t_s quite similar to the current Particle code... except the way the sprites are rendered._lt_/p_gt__lt_p_gt_Well_co_ as for the particles_co_ the sprites don_t_t rely on the classic local-world-view-screen transformation flow used for meshes._lt_/p_gt__lt_p_gt_However they seem to be z-sorted _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Babylon/Sprites/babylon.spriteManager.ts#L150_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Babylon/Sprites/babylon.spriteManager.ts#L150_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I guess a Sprite manager could be used as it is for rendering particles _dd_ we just need to implement an emitter (trajectory + recycler). So these sprite-based particles would have the same features than current sprites in terms of sorting and alpha-blending._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So... well ... I feel confused now in my approach ..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_We have 3 levels from the most powerful (nb elements + speed) to the most accurate (sorting / alpha) _dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_&lt_sm__eq__eq_ +++ power  ---                                                                 --- accuracy +++ _eq__eq_&gt_sm_ _lt_/p_gt__lt_p_gt_   current Particle system     /  current Sprite system      /  current Mesh system _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_As a particle or a sprite could be technically the same thing_co_ we can yet use Particle or Sprite system to handle particles (just code an emitter)_lt_/p_gt__lt_p_gt_So I believe I will go on investigating about the third way _dd_ a real mesh in the mesh flow with faces/subparts used as particles/sprites_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-06-13T13:15:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  You_t_re just the coolest_co_ Jerome!  And Jahow_co_ good lead.  Yep_co_ sprites have that same _qt_vrooom_qt_ as particles_co_ don_t_t they?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I bet I know where Jerome is headed_co_ soon.  Exploding mesh_co_ one of the coolest 3D Max animat-able _qt_modifiers_qt_ ever._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_(The urge to blow-up things is almost a _lt_u_gt_requirement_lt_/u_gt_ for being a guy) .  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Think about the code.  erf.  Take your basic_co_ simple mesh like a torus knot (not simple at all)_co_ and tell its vertexBuffer to _qt_adjust_qt_ in a way that makes all of its faces... separated (like sprites and particles).  Then blast _t_em with a hemisphere of physics engine applyImpulse (put plane imposters on each face)_co_ or put Jerome_t_s cannonball-flying code on every face.  Wow!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Newbie_dd_  _qt_Hey Jerome_co_ why are your triangles bouncing like cannonballs?_qt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Jerome_dd_  _qt_Nobody likes you_co_ newbie._qt_  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I guess they would be flown like particles_co_ eh?   I guess it_t_s all parabola_co_ when push comes to shove._lt_/p_gt__lt_p_gt_(ar ar ar - push/shove... particle-flying terms) _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_When I first saw the name _qt_timeline.js_qt__co_ I thought we had a scene.timeline that we could _qt_hang_qt_ all sorts of scene events and triggers onto.  That wasn_t_t the case_co_ but wouldn_t_t that be interesting?  An actionManager with a deltaTimer. (koshs per hour?)  hehe _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_onSceneTimelineTrigger(name_co_ elapsedMillisecs_co_ action_co_ etc).  Explosion scheduler.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  FuseManager  heh_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Hey Jerome... are you married?  Probably not anymore_co_ eh?   Does she know that _qt_the other woman_qt_ is 37_co_000 lines of code called BJS?  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-13T13:21:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yes_co_ she knows  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_[EDIT] I just pretend to code here_co_ actually I still try to find out what pseudo Charlize uses in this forum_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-13T18:42:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Well... we can hack BJS with no computer... in our head._lt_/p_gt__lt_p_gt_Today_co_ I had 5 meters cube of stove wood to stack along my house wall for next winter. Quite a hard_co_ physical_co_ repetitive work to do a day long..._lt_/p_gt__lt_p_gt_So my brain opened its internal editor and went on _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I guess I have now a computional lead to make the particles (quads or any planes) face the cam... with no global mesh rotation and only one global calculation done once (won_t_t be efficient to compute an angle per particle !)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So my idea is now to provide to users an updatable mesh made of many similar geometric animatable basic parts (few vertices) _dd_ planes facing or not the cam (triangles_co_ quads_co_ or discs) or basic volumes (triangular pyramids or cubes)._lt_/p_gt__lt_p_gt_This _qt_mesh_qt_ (I really need a better name) will provide methods to define the part trajectories_co_ to recycle them_co_ to start the animation and to stop it._lt_/p_gt__lt_p_gt_And some methods to set different textures (or colors_co_ need to investigate this topic) per parts_lt_/p_gt__lt_p_gt_This could be used for _lt_em_gt_accurate _lt_/em_gt_but not so numerous particles_co_ idem for sprites or for any other animation (big parts explosion_co_ etc _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ )_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I hope I_t_m clear enough  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_mellow.png_qt_ alt_eq__qt__dd_mellow_dd__qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So_co_ people_co_ I_t_m looking for a pertinent name for this _qt_mesh_qt_ ... PartsAnimation ? (ugly)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-13T19:14:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_well_co_ it_t_s not real explosions but ... _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#WVJVB_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#WVJVB_lt_/a_gt__lt_/p_gt__lt_p_gt_choose your mesh to blow up in the registerBeforeRender() method  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_funny _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#WVJVB%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#WVJVB#1_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-06-13T22:52:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFunny!  Good to hear that you have good wood_co_ now.  _lt_img alt_eq__qt__sm_)_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ data-emoticon_eq__qt__qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tLet_t_s see_co_ triangle animatables would be...  umm...  trannies.  heh  (ahem)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet_t_s have a look at a basic ground (flat heightMap) and see what_t_s what.  _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1TYVSP_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#1TYVSP_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf a guy wanted to _qt_fly_qt_ every triangle_co_ a guy might want to notice a few things about how these triangles interact with each other.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1.  The most upper-right_co_ and most lower-left vertices... (2) _lt_u_gt_will not_lt_/u_gt_ be doubled (no vertex added).  Each of those two vertex... are used by ONE triangle face.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2.  The most upper-left_co_ and most lower-right vertices... (2) _lt_u_gt_will_lt_/u_gt_ be doubled (another vertex added).  Each of those two vertex... are used for TWO triangle faces.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t3.  All other _lt_u_gt_BORDER_lt_/u_gt_ vertices... (60) will need to be tripled (2 vertex added).  Each of those sixty vertices... are used by THREE triangle faces.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t4.  ALL _qt_internal_qt_ non-border vertices.. (225) will need to be sextupled (5 vertex added).  Each of those 225 vertices... are used by SIX triangle faces.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWow_co_ huh?  Trannies.   Tranny Blasting.  Or how about _qt_Space Faces?_qt_  Faces that can get launched into space_co_ or that have SPACE around them. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat?   Cutesy sucks?   *nod fine*  Ok_co_ how about _qt_facettes_qt_ ?  Too close to fascists?  (Aren_t_t we all?).  _lt_img alt_eq__qt__sm_)_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ data-emoticon_eq__qt__qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\thmmm.  I_t_ll think-up some more... give me a few hours.  _lt_img alt_eq__qt__dd_)_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ data-emoticon_eq__qt__qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tWarning_dd_  Kids_co_ programmatically breaking-up heightMaps into constituent pieces_co_ and then blasting them into the cosmos... should ONLY be done under _lt_u_gt_adult supervision_lt_/u_gt_.  The LAST thing ANY of us want... is some youngster getting an eyeful of tranny.  _lt_img alt_eq__qt__dd_o_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_ohmy.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/ohmy@2x.png 2x_qt_ width_eq__qt_20_qt_ data-emoticon_eq__qt__qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-15T15:01:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_textured (+alpha) quad particles done _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#UKYFP_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#UKYFP_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_300 particles here_co_ sized 2_co_ no more BILLBOARD (need to implement the system to face the cam)_lt_/p_gt__lt_p_gt_60 fps (outside PG) on FF and Chrome here_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_stress test on chrome (particle size _eq_ 2) _dd__lt_/p_gt__lt_p_gt_10000 particles _eq_&gt_sm_ 60 fps_lt_/p_gt__lt_p_gt_20000 particles _eq_&gt_sm_ 43 fps_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_well_co_ a bit less powerful than just triangles with no textures _dd_ _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/15088-is-one-particle-at-a-time-an-abuse-of-particle-system/?p_eq_85791_qt__gt_http_dd_//www.html5gamedevs.com/topic/15088-is-one-particle-at-a-time-an-abuse-of-particle-system/?p_eq_85791_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I think about FragmentMesh for the name. Thoughts ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2015-06-15T16:38:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_em_gt_Fragment_lt_/em_gt_ is the term used for pixels drawn on screen by a fragment shader_co_ so I_t_d advise against that._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I think it_t_s important to stop and think about the end user_t_s perspective here. Jerome_co_ what you did basically answers the question _qt_I need a particle/sprite system where the _t_quads_t_ (ie sprites or particles) are indeed part of the scene and not drawn over it_qt_._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now the fact is that BJS has been designed with its particle and sprite systems to be completely separate from the regular meshes of the scene. This goes deep into the render code and (as DK already pointed out IIRC) is not easy to change. Still_co_ it wouldn_t_t be right to just make a _qt_new_qt_ particle system on top of the existing one for obvious reasons._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I think what would be interesting is providing the end user an alternative to these existing systems through the use of a mesh which is basically a collection of clones_co_ merged together. This system may even support other kind of geometries_co_ as long as every _qt_particle_qt_ is always exactly the same (at least in geometry)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_How about something like that_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var original_mesh _eq_ /* load existing mesh */var mesh _eq_ new DuplicateMesh(_qt_bla_qt__co_ scene)_sm_mesh.setCustomBaseMesh(original_mesh)_sm_ /* this defines the shape of the mesh that will be duplicated */mesh.setBaseMeshAsQuad()_sm_ /* set the base mesh to be a quad (would be logical to be the default mesh) */mesh.addNewDuplicate( /* provide position_co_ billboard info_co_ uv offset... */ )_sm_mesh.removeDuplicate( /* provide a duplicate index */ )_sm_var data _eq_ mesh.getDuplicateData(index)_sm_   /* returns position etc. of current duplicate */mesh.setDuplicateData(index_co_ data)_sm__lt_/pre_gt__lt_p_gt_All this with a nice garbage collection in the background for duplicates (just like a particle system_co_ recycling old particles)_co_ and a special shader to display all the duplicates based on the data provided._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Just a suggestion! _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-15T18:20:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I like this._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Heuu_co_ I don_t_t want to override the current hyper-powerful particle or sprite systems but as you said_co_ just propose an updatable global mesh containing many similar (geometrically) animatable and recyclabe parts (what I suggested as _qt_fragments_qt_)._lt_/p_gt__lt_p_gt_So this will be for another usage _dd_ in scene parts/particles/quads/what_ever_you_want animation._lt_/p_gt__lt_p_gt_Far less powerful than current particle/sprite systems and far more accurate_co_ in terms of z-sorting and alpha blending_co_ with all features of a standard mesh _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Do you think it is would be useful to have the ability to use an existing mesh as a model for sub-parts ? Why not ? the performance would probably crumble really quickly with a model with many vertices and a collection of thousands of instances then._lt_/p_gt__lt_p_gt_Need to check... interesting idea however._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Initially I intended to provide only pre-computed basic geometries for subparts (we really need a name_co_ grrr) _dd_ say_co_ 3 types of planes (triangles for highest performance_co_ quads for easy texturing and a pseudo-circle_co_ maybe a hexagon) and 3 types of volumes (triangular pyramids -so only 4 vertices as for quads-_co_ cubes and maybe pseudo-sphere)._lt_/p_gt__lt_p_gt_Having pre-computed basic geometries for this elementary elements allow to highly optimize the number of vertices used and re-used_co_ what is critical to have very numerous instances_co_ and to set nice UVs for texturing (circles and spheres)._lt_/p_gt__lt_p_gt_Moreover knowing the order of indices (how the faces are built) allow to reduce the iterations on vertices and eases the way to re-set variables in place_co_ so to reduce garbage collection at its lowest. For now_co_ this is what I did in these two (triangles and quads) algos _dd_ no new memory allocation once the render loop is run._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I really like the idea to use an existing mesh as a model for subparts._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Well... your suggestion is really exciting... arrg_co_ this means the complexity of my implementation will just multiply by 3 _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So a step after the other if we want the things to be achieved. I will probably start with pre-computed shapes as planned _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2015-06-15T18:39:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You_t_re right_co_ step after step! Having a functional system with simple quads would be a great start._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ve read a few times people asking for _qt_mesh particles_qt__co_ so yeah I think it_t_s a nice goal to have. Could be great for debris flying after an explosion_co_ or detailed particles. Also_co_ a thousand meshes displayed like this would be much more efficient that a thousand meshes generated with clone()_co_ since for BJS there would be only one big mesh_co_ which means no time spent in mesh selection._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_As for the vertices/indices count on each mesh-particle_co_ if it_t_s not more than 50 or even 100 I think it should be alright. A vertex buffer can hold a lot of data _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ It also depends on how much separate data is kept for each mesh-particle_dd_ color_co_ angle_co_ other... Anyway_co_ in theory this system would work for meshes with over a thousand vertices_co_ even though you wouldn_t_t be able to duplicate it more than a few times._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_A reminder_dd_ from my experience in BJS_co_ it is the amount of separate meshes on screen much more than the amount of vertices that kills performance._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Anyway_co_ I_t_ve already coded some similar stuff so I can definitely help you with this _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-15T19:00:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_For performance_co_ well_co_ it_t_s only one updatable mesh_co_ so only one draw call  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _dd_ that_t_s the good new !_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The real point is more the number of instances to iterate on..._co_ CPU side._lt_/p_gt__lt_p_gt_The results are therefore pretty good with hundreds or two or three thousands of parts._lt_/p_gt__lt_p_gt_I don_t_t know who really needs more than 10K visible parts at the same time in the screen (this would go over the screen pixel number !?!)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For now_co_ I will start with some pre-computed planes (triangles and quads_co_ almost done) and add the ability to make them always face the screen _dd_ billboard rotates the whole mesh so it doesn_t_t fit. I need to orientate only parts... at least computational cost_co_ so all parts together... but not forget to take in account an eventual global mesh rotation also_co_ gloups_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Then I will add a cube _dd_ a textured backfaceculled cube will ever show one face at least to the user_co_ so no need for orientation_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Then think about adding part rotations (far more calculations_co_ because a rotation to compute per subpart )_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Then only think about your suggestion _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _dd_ use any mesh geometry as a model for subparts._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thank you for the help proposal _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _co_ you_t_ll see PG soon_co_ we can argue_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-15T19:44:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_making some more stress tests at home on an old 2007 laptop computer (GPU Intel GM45 chipset... well_co_ some pushcart) _dd_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#UKYFP%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#UKYFP#1_lt_/a_gt__lt_/p_gt__lt_p_gt_unzoom please_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_2000 very big textured particles (size 64) _lt_/p_gt__lt_p_gt_chrome _eq_&gt_sm_ still 60 fps !_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I love this framework  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ !_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-16T09:48:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_for name _dd__lt_/p_gt__lt_p_gt_Pieces ? PiecesMesh ? PiecesSystem ?_lt_/p_gt__lt_p_gt_Fragments ? FragmentMesh ? FragmentSystem ?_lt_/p_gt__lt_p_gt_Scraps ? ScrapMesh ? ScrapSystem ?     I like _qt_scraps_qt_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"qqdarren","Date":"2015-06-16T09:59:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I put the camera in a better position _dd_-)_lt_br_gt_   _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#UKYFP%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#UKYFP#2_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I also set backFaceCulling to false_co_ so you can rotate around it. Curiously on my machine_co_ using Firefox_co_ the average FPS with backFaceCulling switched on might actually be lower (e.g. 45-55fps vs. 43-53ps_sm_ the numbers are very noisy). I wondered if this is a case where the cost of the optimization outweighs the cost of not doing it?   (It runs at 60fps either way in Chrome.)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-16T14:45:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_aarg..._lt_/p_gt__lt_p_gt_working on rotations to ever face the cam... seems harder than I tought _dd_ I wanted NOT to apply a transformation matrix on each vertex in the javascript code (imagine thousands of position to compute)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2015-06-16T15:13:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You should probably be able to do it on the GPU with a vertex shader. Also BJS sprites are billboarded and there is no heavy computation in the code_co_ although I must admit I haven_t_t completely figured that out yet._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I couldn_t_t resist trying some things along what I was suggesting above_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1OMHRR%2310_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1OMHRR#10_lt_/a_gt__lt_/p_gt__lt_p_gt_200 spheres flying around and changing color along the way_co_ 5700 vertices_co_ 22000 indices._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_That_t_s not a lot and it gets laggy very quickly though... Maybe even simple spheres like that are already too complex to be duplicated many times in a single mesh._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-16T15:15:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_waaaooww nice demo !_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-16T16:04:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_just got an idea for the ever screen facing rotations _dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I will define quickly a system relative to the cam.position (mesh-cam axis + 2 cross vectors from world axis and this cam axis _dd_ multiplications only once per frame)_lt_/p_gt__lt_p_gt_I will then report the local quad coordinates into this system _dd_ only additions_co_ this is as fast as adding velocities per vertex_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If the whole mesh is rotated_co_ I will just unrotate the (fake)cam position by this mesh rotation value (only a un-rotation computation per frame)_co_ so my (fake)cam position will be as I hadn_t_t rotated the local system... this means the light previous process (additions only) should still work._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Not sure I_t_m very clear to everyone._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I will test tomorrow._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-06-17T03:21:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Wow guys_co_ this stuff is great! I haven_t_t really had a chance to dig into the internals but it looks terrific. The last piece of the puzzle is the camera-facing behavior. I assume that the default ParticleSystem solves this by drawing particles in screen space_co_ but I guess this isn_t_t an option here. But even if the solution was to calculate a single (billboarded) worldmatrix for the system_co_ and then use that to transform each particle_co_ I guess that still might be very fast for systems of ~1000 particles_co_ if it uses the _qt_single mesh_qt_ thing you have going._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Incidentally for names_co_ I_t_d suggest MeshParticle_co_ or perhaps SolidParticle. The only real difference between what you_t_ve got here and _qt_real_qt_ particles is that they aren_t_t alpha-blended_co_ right? But these will be useful for essentially the same kinds of purposes that normal _qt_particles_qt_ are useful_co_ so I think it will be easiest for everyone to understand if they_t_re called FooParticles (for some value of Foo)._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-17T06:51:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You_t_re right _dd_ current particles (and sprites) are drawn in the screen space_co_ that_t_s why the camera-facing behavior is quite obvious there._lt_/p_gt__lt_p_gt_The difference between this prototype and real particle is more than just alpha-blending. This proto will be a real mesh_co_ so it will have all the mesh class properties. The parts (particles) will have normals for example and will reflect light_co_ etc._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have a lead_co_ that I will test today_co_ to make all the particles rotate at once orthogonally to the camera-system axis _dd_ this would be only one calculation for the whole system_co_ so all the particles should have the same orientation._lt_/p_gt__lt_p_gt_I don_t_t know yet if it_t_s valuable or if I really need to compute a rotation per particle. In this case_co_ the dedicated worldMatrix would be a good option._lt_/p_gt__lt_p_gt_Let_t_s test. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ll ask Raanan for a repo in BJSX._lt_/p_gt__lt_p_gt_[EDIT] here _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJSX/SolidParticleSystem_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJSX/SolidParticleSystem_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I like the name _qt_SolidParticles_qt_ too._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]