[{"Owner":"Samuel Girardin","Date":"2014-02-05T16:30:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ve just  passed a long time to understand how using  BABYLON.SceneLoader.ImportMesh in Typescript without using the classic inline function. The inline function works fine with Typescript but after it was quite difficult to deal with_co_ you must declare your scene a static var_co_ etc_co_ use static method etc... not efficient or elegant for me._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here is my solution (it works like a charm_co_ perhaps there is an  other way to deal with ? Let me know. If this solution can help). So here is my typescript class. _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_/// &lt_sm_reference path_eq__qt_Tdef/babylon.d.ts_qt_ /&gt_sm_class skin {    public scene_dd_ BABYLON.Scene_sm_        constructor(engine _dd_ BABYLON.Engine) {            this.scene _eq_ new BABYLON.Scene(engine)_sm_        // add here light_co_ camera_co_ what ever you want..                     //  BABYLON.SceneLoader deal with arrow function (a_co_b_co_c)_eq_&gt_sm_{ calback function}        BABYLON.SceneLoader.ImportMesh(_qt_him_qt__co_ _qt_Scenes/Dude/_qt__co_ _qt_Dude.babylon_qt__co_ this.scene_co_ (newMeshes2_co_ particleSystems2_co_ skeletons2) _eq_&gt_sm_ { this.onloading(newMeshes2_co_ particleSystems2_co_ skeletons2) })_sm_                    }    private onloading(newMeshes2_dd_BABYLON.Mesh[]_co_ particleSystems2_dd_BABYLON.ParticleSystem_co_ skeletons2_dd_BABYLON.Skeleton[])_dd_ void {        var dude _eq_ newMeshes2[0]_sm_              dude.rotation.y _eq_ Math.PI_sm_        dude.position _eq_ new BABYLON.Vector3(0_co_ 0_co_ -80)_sm_              this.scene.beginAnimation(skeletons2[0]_co_ 0_co_ 100_co_ true_co_ 1.0)_sm_    }      public getScene()_dd_ BABYLON.Scene {        return this.scene_sm_     }}_lt_/pre_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_Sam_lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Alex_on_the_web","Date":"2014-02-24T16:42:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey_co_ this might be off the topic_co_ but do you use a hand crafted babylon.d.ts file_co_ or the one provided (as outdated as it might be) on github? The thing is I_t_ve been tinkering with Sublime + T3S and I just cannot get Sublime to recognise a BABYLON namespace. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Samuel Girardin","Date":"2014-02-24T17:08:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Yes I use typescript def provided by babylonjs_t_s github_co_ and I update and correct them when it_t_s needed. I use Visual Studio 2013 web express._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Sam_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]