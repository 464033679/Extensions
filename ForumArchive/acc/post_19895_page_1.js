[{"Owner":"Threedy","Date":"2016-01-16T00:46:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is more of a theoretical/conceptual question and it is more related to server programming than BabylonJS itself. But I_t_d like to have tips on dealing with these problems_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet_t_s say a wall is in the middle of 2 players. The players have to go around this wall to see eachother. Now_co_ the problem is that an evil player can _t__t_disable_t__t_ the phyics/collision of this wall and go through it to catch the other player. In fact_co_ he can just change his position and there he is_co_ at the other side.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow server wise_co_ I believe I would deal with this by checking whether he didn_t_t collide with the wall (e.g. his position intersects the wall). But if I have a more complex geometry_co_ this would be hard to do without having BabylonJS on the server so I could use the _t__t_intersectsMesh_t__t_ function for instance... So I thought_co_ well_co_ say that the other non-evil player can also perform checks to see if that player intersects with the wall.. And if so_co_ it will trigger something on the server.. But that wouldn_t_t be fair since he may be evil too..\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI don_t_t know how to approach this. Especially since my game will use physics where players can just modify values like impulse.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks!_lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"hen","Date":"2016-01-16T04:27:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Threedy_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tworking with client side intersects would not prevent cheating.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat we need is some kind of babylon light wich runs server side to simulate the physics._lt_br_gt_\n\tIm still a babylon noob and dont know much details about how the physics world communicates with the scene._lt_br_gt_\n\tBut some months back we tried to run cannon.js on a node.js server wich was more or less working.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo maybe you could have a server side physics world running cannon and just stream the player matrix to the game._lt_br_gt__lt_br_gt_\n\tSince im even working on some MMO_co_ i would be more than happy to collaborate finding a solution._lt_br_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheers\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHen\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jodo","Date":"2016-01-16T07:49:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi guys_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have been working on some multiplayer stuff too. In my frist atempt I just didnt check server side at all and just updated position of objects all the time. But I am now planning on finding a solution to that exact problem you stated. _lt_br_gt_\n\tI havent had much time lately _dd_/_co_ but what I was planning to try was running babylon.js on node.js by using a _qt_fake_qt_ canvas with the node-canvas lib (_lt_a href_eq__qt_https_dd_//github.com/Automattic/node-canvas_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/Automattic/node-canvas_lt_/a_gt_). _lt_br_gt_\n\tKeep us updated if anybody has some solutions for server side physics checks.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-01-16T09:40:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tmmhh... I can_t_t see any WebGL context emulation in the node-canvas documentation.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBJS requires WebGL.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-01-16T10:02:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey guys_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tNice thread _dd_-)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRunning the code on the server side won_t_t do you no good. As long as the JavaScript code can be manipulated by the user (which is always the case)_co_ the user can manipulate his actions. You calculate movements on the server? The user ignores it. You check the user_t_s location? The user can mock it. You encrypt? The encryption key must be visible in the code.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWeb assembly might be a solution. Obfuscation is sometimes a solution_co_ but not when you use a known framework.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-01-16T10:51:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_112920_qt_ data-ipsquote-contentid_eq__qt_19895_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1452938556_qt_ data-ipsquote-userid_eq__qt_10310_qt_ data-ipsquote-username_eq__qt_RaananW_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t34 minutes ago_co_ RaananW said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tRunning the code on the server side won_t_t do you no good. As long as the JavaScript code can be manipulated by the user (which is always the case)_co_ the user can manipulate his actions. You calculate movements on the server? The user ignores it. You check the user_t_s location? The user can mock it. You encrypt? The encryption key must be visible in the code.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI don_t_t think this is really true... \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSure the client can change his position on his own computer_co_ that can_t_t be helped. But if the server is responsible for broadcasting the actions to other players_co_ he can only lie to himself. The server won_t_t tell anyone else about the new position if it_t_s invalid_co_  and won_t_t allow any attack actions to be stored in the server-side game state_co_ so whilst he can hack it so that he went through a wall and killed everyone_co_ everyone else will just see him standing in the corner looking like a noob and play as normal without him _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_br_gt_\n\tThat_t_s not really any different to any multiplayer game - sure it_t_s easier to hack the JS code_co_ but then it_t_s not really that hard to intercept the network packets even for a C++ compiled game. That_t_s why there are bots and emulators for most big online games these days.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think any multiplayer game has to be built assuming people CAN and WILL cheat on the client side... you just have to take actions to minimize the effect of that.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Threedy","Date":"2016-01-16T13:04:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThank you all for the replies.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_112922_qt_ data-ipsquote-contentid_eq__qt_19895_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1452941513_qt_ data-ipsquote-userid_eq__qt_17567_qt_ data-ipsquote-username_eq__qt_Dal_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t2 hours ago_co_ Dal said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI don_t_t think this is really true... \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tSure the client can change his position on his own computer_co_ that can_t_t be helped. But if the server is responsible for broadcasting the actions to other players_co_ he can only lie to himself.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThis is what I was also thinking. The server would only receive input and deal with the physics applied on the objects and send back the position to the clients. But in this case it needs to also know about the (babylon) mesh and the way it is put. The only challenge is running this entire thing on the server. _lt_img alt_eq__qt__dd_ph34r_dd__qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_ph34r.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/ph34r@2x.png 2x_qt_ title_eq__qt__dd_ph34r_dd__qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Edit #1_dd__lt_/strong_gt_ Although running physics on the server alone may not be really smooth. So both client and server side?_lt_img alt_eq__qt__dd_wacko_dd__qt_ data-emoticon_eq__qt_true_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wacko.png_qt_ title_eq__qt__dd_wacko_dd__qt__gt__lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Edit #2_dd_ _lt_/strong_gt_What about this idea_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you are with 4 players_co_ you run the physics only on the client side. If one player disables a wall and goes _t__t_through_t__t_ an object_co_ the other 3 will see this as invalid_co_ marking it an invalid move. 3&gt_sm_1 _eq_ 1 back to the position of where the other 3 are (on average) at.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo by only sending the input_co_ rather than position.. It can be calculated on all clients. Hence_co_ if an evil player is modifying his positions_co_ it wouldn_t_t do anything for the server since the other clients are still seeing him at his old position.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDoes that make sense?_lt_img alt_eq__qt__dd_wacko_dd__qt_ data-emoticon_eq__qt_true_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wacko.png_qt_ title_eq__qt__dd_wacko_dd__qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jodo","Date":"2016-01-16T13:28:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis is not directly connected to Babylon.js. But if you want to have a really nice read about fast paced online multiplayer game concepts you should read through this blog series_dd_ _lt_a href_eq__qt_http_dd_//www.gabrielgambetta.com/fpm1.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.gabrielgambetta.com/fpm1.html_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo I think this would be quite hard to accomplish with node.js and a javascript physics engine.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-01-16T15:01:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tvery interesting article_lt_br_gt_\n\tI don_t_t think that having BJS running on the server with a headless library would be the right solution because of the heavy webgl part.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI will check if there is a way to set the BJS engine to make it NOT to render anything (so just to skip every WebGL orders). I guess the current code is well with different layers_co_ so maybe it would as easy as not calling the drawing layer... maybe setting a time interval instead of the RAF callback also.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis would make the first 3D framework able to run in headless mode. _sm_-)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tImplementing then a server game logic and the communication layer (fortunately the browser takes already in charge the network layer) will still be very complex imho.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Threedy","Date":"2016-01-16T16:19:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThat would be great indeed. I have spent all day looking for a solution to handle physics serverside without any luck unfortunately.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is surprisingly harder than I thought.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-01-16T16:59:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAfter having read a little the scene and engine_co_ it seems that it_t_s not that easy to do either_co_ but doable imho._lt_br_gt_\n\tI think that I will have to ask many things to DK to do it well. _lt_br_gt_\n\tIt_t_s on my todo list ... considering that it won_t_t be too complex to do and not that intrusive in the engine.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t[EDIT] _dd_ maybe just by removing all the stuff after this line  _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/babylon.scene.ts#L1620_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/babylon.scene.ts#L1620_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"hen","Date":"2016-01-16T19:16:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_112952_qt_ data-ipsquote-contentid_eq__qt_19895_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1452961195_qt_ data-ipsquote-userid_eq__qt_18266_qt_ data-ipsquote-username_eq__qt_Threedy_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t2 hours ago_co_ Threedy said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThat would be great indeed. I have spent all day looking for a solution to handle physics serverside without any luck unfortunately.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThis is surprisingly harder than I thought.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is not really that hard. You can run a physics world using cannon.js on the server._lt_br_gt_\n\tWith physics world I mean a pure cannon world_co_ no babylon scene or canvas.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat world should be updated with the same frequency your websocket connection is using and have some good interpolation client side._lt_br_gt_\n\tAll physical game objects should be simulated and streamed from there.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tGetting it done to this point is easy.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy headache is more about how many clients you could serve that way._lt_br_gt_\n\tOur current babylon world setup supports 30 concurrents per scene. But as example just 1 physical sphere that constantly changes the matrix would decrease it by one._lt_br_gt__lt_br_gt_\n\tCheers \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHen\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Threedy","Date":"2016-01-16T20:05:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_112963_qt_ data-ipsquote-contentid_eq__qt_19895_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1452971773_qt_ data-ipsquote-userid_eq__qt_17833_qt_ data-ipsquote-username_eq__qt_hen_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t4 hours ago_co_ hen said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThis is not really that hard. You can run a physics world using cannon.js on the server._lt_br_gt_\n\t\t\tWith physics world I mean a pure cannon world_co_ no babylon scene or canvas.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThat world should be updated with the same frequency your websocket connection is using and have some good interpolation client side._lt_br_gt_\n\t\t\tAll physical game objects should be simulated and streamed from there.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tGetting it done to this point is easy.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tMy headache is more about how many clients you could serve that way._lt_br_gt_\n\t\t\tOur current babylon world setup supports 30 concurrents per scene. But as example just 1 physical sphere that constantly changes the matrix would decrease it by one._lt_br_gt__lt_br_gt_\n\t\t\tCheers \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tHen\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tAh_co_ good tip_co_ thank you_co_ I will try that out! Do you use cannon yourself? I thought Oimo was the preferred one for BabylonJS now. But I assume Oimo can be also used on the serverside.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI assume you are running the physics on the client side as well and compare them with the server? Or are you only sending the positions from the server back to the clients?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"hen","Date":"2016-01-16T23:38:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_112965_qt_ data-ipsquote-contentid_eq__qt_19895_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1452974714_qt_ data-ipsquote-userid_eq__qt_18266_qt_ data-ipsquote-username_eq__qt_Threedy_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t3 hours ago_co_ Threedy said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tAh_co_ good tip_co_ thank you_co_ I will try that out! Do you use cannon yourself? I thought Oimo was the preferred one for BabylonJS now.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tI assume you are running the physics on the client side as well and compare them with the server? Or are you only sending the positions from the server back to the clients?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tOimo seems really to be the better one_co_ i wish i could use it._lt_br_gt_\n\tBut our levels do use terrain and there is no heightfield collisions in Oimo (or maybe i missed something).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWith the approach i explained_co_ you do not need to run any physics on the client anymore._lt_br_gt_\n\tAll positions/rotations is calculated server side and just streamed to the clients.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you plan to run cannon on node.js you cant use requestAnimationFrame._lt_br_gt_\n\tBut a simple loop calling physicsWorld.step(time) makes it work.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br_gt__lt_br_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"prvi_treti","Date":"2016-01-16T23:58:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAs stated_co_ most viable option seems to be having an authoritative server and client side interpolation. (Selective broadcasting / Voronoi diagrams might help as well)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlthough it is an 2D/isometric engine_co_ Isogenic Engine_t_s multiplayer was praised by some (I didn_t_t check code) at the time. It was said to be inspired by Valve_t_s Source Engine ( _lt_a href_eq__qt_https_dd_//developer.valvesoftware.com/wiki/Source_Multiplayer_Networking_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//developer.valvesoftware.com/wiki/Source_Multiplayer_Networking_lt_/a_gt_ ) . Good thing is it is open source now so can give some idea as well perhaps.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"hen","Date":"2016-02-11T21:05:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_112945_qt_ data-ipsquote-contentid_eq__qt_19895_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1452956476_qt_ data-ipsquote-userid_eq__qt_5453_qt_ data-ipsquote-username_eq__qt_jerome_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 16.1.2016 at 4_dd_01 PM_co_ jerome said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI will check if there is a way to set the BJS engine to make it NOT to render anything (so just to skip every WebGL orders). I guess the current code is well with different layers_co_ so maybe it would as easy as not calling the drawing layer... maybe setting a time interval instead of the RAF callback also.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThis would make the first 3D framework able to run in headless mode. _sm_-)\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tHave you been able to create meshes that way?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI did try something similar but having issues with the canvas webgl contexts.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2016-02-13T22:41:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSeriously guys_co_ running BJS server side doesn_t_t seem like a proper solution to me. To have decent multiplayer interactions you need to reduce your server code to the barest minimum and only do the precise computations you need. BJS is first and foremost a render engine_co_ so running it on a server by skipping the webgl part seems odd. As stated above_co_ there are libraries on npm that will do a very good job at physics and general math computations (ie vectors).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWriting a multiplayer code requires changing the way we think about things. Basically_dd_\n_lt_/p_gt_\n\n_lt_ul_gt__lt_li_gt_\n\t\t_lt_strong_gt_All the actual game logic_lt_/strong_gt_ runs on the server\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tClients renders _lt_strong_gt_only what the server allows them to_lt_/strong_gt__co_ and interpolates and guesses as much as possible between server messages\n\t_lt_/li_gt_\n_lt_/ul_gt__lt_p_gt_\n\tBJS and its physics system can be used to interpolate between game states on the client side (ie avoid choppy movements)_co_ and simulate non-critical entities_co_ for example puff of smokes or debris after an explosion. On the other hand_co_ character movements and actions_co_ visibility lists_co_ collisions_co_ player input_co_ all these things must be handled by the server code.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor the example given in the OP_co_ the player may very well try to force its position manually and cross the wall_co_ this would simply have no effect at all since the server would only register a _qt_request to move in X direction_qt__co_ register a collision with the wall and prevent the player from moving further. Thus_co_ no change on the visibility list_co_ and no way to interact with the player on the other side. Players can still completely break the way the game renders on their screen (as with every JS application)_co_ but they won_t_t be able to mess with the game logic.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_font-size_dd_12px_sm__qt__gt_(sorry_co_ I_t_m mainly rewriting things that have already been said!)_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs for handling many users_co_ in my opinion it_t_s all just a matter of optimization. Here are some thoughts that may be useful_dd_\n_lt_/p_gt_\n\n_lt_ol_gt__lt_li_gt_\n\t\treduce the amount of data sent back and forth. Your entities can only rotate on the Y axis? do not send 3 rotation values. Only send simplified input data to the server_co_ i.e. _dd_ walk towards X+. Combine data with bitmasks if possible. Buffer data and send them in batch instead of sending too many messages. Do not send data to clients for things that are out of sight or unimportant. An object is moving/rotating regularly and in a predictable way? only broadcast its movement pattern and speed_co_ and update if necessary. Do not send an update for an object if nothing about it has changed since the last time (ie do not resend all entities for every server update).\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\treduce physics computation to the minimum. Use simplified colliders and octrees for spatial subdivision. Your entities are walking on an uneven ground but that is irrelevant to the game logic? just simulate a flat plane and let the clients render entities at the correct height.\n\t_lt_/li_gt_\n_lt_/ol_gt__lt_p_gt_\n\tNot sure if my post helped_co_ but I find this topic very interesting and felt compelled to contribute _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt_ Also I can_t_t wait to see a true multiplayer game done with BJS!!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-02-14T08:59:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tActually_co_ after some studies about the possibility to skip the webGL part_co_ it seems quite complex in this current state.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo it_t_s not a good idea.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo now_co_ two options _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) get BJS as it is_co_ run it server-side in a headless module if you can_co_ add your own communication layer... if this is enough for you_co_ well_co_ right _dd_-)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) as Jahow said_co_ code a dedicated server running the specific logic and the communication layer. You could then reuse the class Maths from BJS to quickly implement all the complex stuff (transformation matrix_co_ etc).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe ideal thing would be that a volunteer team starts a project to code a BJS compliant server module _dd_ maths_co_ transformations_co_ collision_co_ physics if any_co_ all integrated + a communication layer_co_ a kind of protocol (move mesh granted_co_ rotate mesh granted_co_ etc) and a formatted data structure (representation of meshes_co_ movements_co_ etc) + obviously the related client module\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2016-02-17T05:13:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI know we are talking theory_co_ but in practice_co_ just because someone can cheat does not mean that they will.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat I mean by that is that the other option is do your best to get a working architecture and take actions for users that cheat (ban_co_ etc)_co_ if it even happens. You could also map out the risk/failure modes of possible cheats and try to guard them server side if they have a higher risk/failure. Let the server be an authority. For example if there is an ammo count_co_ and you know the rate at which the weapon can shoot_co_ let the server grant permission for the action to happen (to all clients)_co_ same with player position and max speed vs actual client recorded speed. Many of nuances_co_ but I would start simple and then extend it out as it_t_s built_co_ given that the groundwork has been laid.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Arthuron","Date":"2016-02-17T08:40:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Guys_co__lt_br_gt__lt_br_gt__lt_a href_eq__qt_http_dd_//buildnewgames.com/real-time-multiplayer/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//buildnewgames.com/real-time-multiplayer/_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere is a old but good overview for the technoligies for JS MP solutions and some examples_sm__lt_br_gt_\n\tThis guide refer the article of Mr. Gambetta to_sm__lt_br_gt__lt_br_gt_\n\tHope it helps a bit._lt_br_gt__lt_br_gt_\n\tMuch fund and cheers\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Suphi","Date":"2016-02-17T14:23:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\they guys i also am working on a online game so this is also a problem for me a few ideas i have are\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) not 100% sure if this can be done as i have not tested it yet_lt_br_gt_\n\tbut i_t_m using socket.io and socket.io allows objects to be sent and a function is just a object correct so cant we just send the client functions_lt_br_gt_\n\twhen they first login and these functions will allow the client to interact with the server._lt_br_gt_\n\tbut i still think this would be hackable but not sure?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) another option would be to_dd__lt_br_gt_\n\tserver asks for the length from line _lt_strong_gt_a_lt_/strong_gt_ to line _lt_strong_gt_b_lt_/strong_gt_ of the clients_lt_br_gt__lt_strong_gt_a_lt_/strong_gt_ and _lt_strong_gt_b_lt_/strong_gt_ would be random or some kind of algorithm that make sure its asked for different lines every time_lt_br_gt_\n\tthen the client would respond with the correct length this check can be done a few time until the hole document is checked if all the lengths match up correctly we now know the code has not been changed and allow them access if the user knows this it could be hackable but would be hard they would need a dummy file that is the original and make the code check the dummy file\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Threedy","Date":"2016-04-04T20:37:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSorry to bump my own thread again.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have managed to follow Hen_t_s advice and implemented CannonJS on the server (BabylonJS on the front-end which I have only used for the rendering_co_ not it_t_s CannonJS integration_co_ which I implemented separately on the client like the server_co_ and NodeJS/SocketIO). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt seems that my current way of implementing cannonjs is the bottleneck so far (and I don_t_t think there is a better Javascript 3D physics engine performance wise at the moment). It works fine for a few objects. But unfortunately_co_ adding +- 400 boxes floating in the air_co_ I would notice quite some lag for only 1 player at 1 game. Now imagine this for 4 game instances with 8 players on a single server. It would be impossible.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPerhaps a 3D multiplayer physics browser game is a bit too ambitious at this time. Anyway_co_ I would like to hear any other stories.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-04-05T05:34:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou have to always check client side input agnest the server. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd no that is not to ambitous_co_ what is ambitous is thinking you can delpoy and multiplayer 3D game without knowledge of optimazation pipelines.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-04-05T05:37:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThe engine does not matter (to a certain extent) its deployment.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Threedy","Date":"2016-04-05T18:48:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tGood point. However_co_ I tried running it only on the client with 240 static CannonJS boxes which is also slow. Most likely I am still doing something wrong though_co_ since I have seen it perform better than that given some example demo_t_s.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]