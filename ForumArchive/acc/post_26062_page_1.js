[{"Owner":"Klaas","Date":"2016-10-27T20:43:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Everyone_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tim currently trying to get the fragment world positon in a post process shader. But after hours of fiddling around with the inverted matrices i have no clou what em im doing wrong.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is my current state ...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#KZJXZ_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#KZJXZ_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCan anyone give me a hint or point me in the right direction?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthanks_co__lt_br /_gt_\n\tKlaas\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nabroski","Date":"2016-10-30T00:47:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tHello_lt_br /_gt__lt_br /_gt_\n\tPlease look here. Maybe it helps you. Make a playground search. Feel free ask more questions if you feel to._lt_br /_gt__lt_br /_gt__lt_a href_eq__qt_http_dd_//doc.babylonjs.com/playground?q_eq_.getDepthMap%28%29_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/playground?q_eq_.getDepthMap()_lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"NasimiAsl","Date":"2016-10-30T05:56:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\thi\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_vec3 pos1 _eq_  (world*vPosition).xyz_sm_  // world position in the Fragment SHader\n   \n   if(gl_FragCoord.y &gt_sm_ 0.)\n     pos1 _eq_  vPosition.xyz_sm_ \n\n    gl_FragColor _eq_ vec4( pos1_co_ 1. )_sm_\n\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs.com/cyos/#13EJWN_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/cyos/#13EJWN_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tif you don_t_t change your mesh position (or  rotation or scaling ) world position  _eq_ Local Position\n_lt_/p_gt_\n\n_lt_p_gt_\n\tso both is same result\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1YR2VY%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1YR2VY#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1YR2VY%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1YR2VY#3_lt_/a_gt_ // with rotation and scale\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tyou dont have this data in postprocess but we can calculate that with color System\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthis is not exactly result . \n_lt_/p_gt_\n\n_lt_p_gt_\n\tdetect world Position in postprocess \n_lt_/p_gt_\n\n_lt_p_gt_\n\twe use one render target so we have limitaion for x _co_ y _co_ z   0 -&gt_sm_ 255\n_lt_/p_gt_\n\n_lt_p_gt_\n\tand when you use this range you have exactly position (no float point )\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1YR2VY%2310_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1YR2VY#10_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tfor understanding shader Builder _dd_ \n_lt_/p_gt_\n_lt_iframe data-embedcontent_eq__qt__qt_ frameborder_eq__qt_0_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/topic/22203-shaderbuilder-documentation/?do_eq_embed_qt__gt__lt_/iframe_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Klaas","Date":"2016-11-17T22:37:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi there_co__lt_br /_gt_\n\tthanks for your help! But the main reason why all my efforts weren_t_t lucky is that the OpenGL projection matrix gives out non linear depth informations.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhy? I dont know! Perhaps they made it so that near objects had a better z-resolution.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo i_t_d had to modifiy the depthmap renderer to get my linear depth value.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_This is the Vertex-Shader_lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// Attribute\nattribute vec3 position_sm_\nattribute vec3 normal_sm_\n#include&lt_sm_bonesDeclaration&gt_sm_\n\n// Uniform\n#include&lt_sm_instancesDeclaration&gt_sm_\n\nuniform mat4 viewProjection_sm_\nuniform mat4 view_sm_\nvarying vec4 worldCoords_sm_ //world coordinates for the fragment shader\nvarying vec3 vNormalW_sm_ //normal of surface for the fragment shader\n\n#if defined(ALPHATEST) || defined(NEED_UV)\nvarying vec2 vUV_sm_\nuniform mat4 diffuseMatrix_sm_\n#ifdef UV1\nattribute vec2 uv_sm_\n#endif\n#ifdef UV2\nattribute vec2 uv2_sm_\n#endif\n#endif\n\nvoid main(void)\n{\n\t#include&lt_sm_instancesVertex&gt_sm_\n\t\n\t#include&lt_sm_bonesVertex&gt_sm_\n\t\n\t\tgl_Position _eq_ viewProjection * finalWorld * vec4(position_co_ 1.0)_sm_\n\n\t\t//here i get the vertex world position\n\t\tworldCoords _eq_ view * finalWorld * vec4(position_co_ 1.0)_sm_\n\n\t\t//here i get the surface normal\n\t\tvNormalW _eq_ normalize(vec3(finalWorld * vec4(normal_co_ 0.0)))_sm_\n\t\n\t#if defined(ALPHATEST) || defined(BASIC_RENDER)\n\t#ifdef UV1\n\t\tvUV _eq_ vec2(diffuseMatrix * vec4(uv_co_ 1.0_co_ 0.0))_sm_\n\t#endif\n\t#ifdef UV2\n\t\tvUV _eq_ vec2(diffuseMatrix * vec4(uv2_co_ 1.0_co_ 0.0))_sm_\n\t#endif\n\t#endif\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tand here the fragment shader ... were all the magic happens ...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_The Fragment Shader_lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_varying vec4 worldCoords_sm_\nvarying vec3 vNormalW_sm_\n#ifdef ALPHATEST\nvarying vec2 vUV_sm_\nuniform sampler2D diffuseSampler_sm_\n#endif\n\nuniform float far_sm_\n\nvoid main(void)\n{\n#ifdef ALPHATEST\n\tif (texture2D(diffuseSampler_co_ vUV).a &lt_sm_ 0.4)\n\t\tdiscard_sm_\n#endif\n\n\t//i only need the depth value ....\n\tgl_FragColor.a _eq_ abs(worldCoords.z) / far_sm_\n\t// so i could use the rest of the color channels to store the surface normal\n\tgl_FragColor.xyz _eq_ (vNormalW.xyz + 1.0) / 2.0_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t... and then in my post process ...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Post Process Fragment Shader_lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// Parameters\nuniform vec3 extends_sm_ //the maximal values in x_co_y and z direction \nuniform mat4 mView_sm_ //inverted view matrix\n\n.\n.\n.\n\nvoid main(void){\n\tgl_FragColor _eq_ texture2D(textureSampler_co_ vUV)_sm_\n\n\t//depth renderer output\n\tvec4 pInfo _eq_ texture2D(depthSampler_co_ vUV)_sm_\n\n\tvec4 d_sm_\n\t//bring the 0 to 1 viewport coords to -1 to 1 and multiply by depth \n\t//this gives you the clipspace coords\n\td.xy _eq_ (vUV.xy * 2.0 - 1.0) * pInfo.a_sm_ \n\t\n\n\t//the linear clipspace coords multiplied by the directional maximals\n\t//this gives you the view coords\n\td.xy *_eq_ extends.xy_sm_\n\td.z _eq_ pInfo.a * extends.z_sm_\n\td.w _eq_ 1.0_sm_\n\t\n\t//view coords multiplied by the inverted view matrix\n\t//this gives you woorld coords\n\tvPositionW _eq_ vec4(mView * d).xyz_sm_\n\n\t\n\t//decode normal\n\tvec3 vNormalW _eq_ pInfo.xyz * 2.0 - 1.0_sm_ \n\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t... so it all come out nicely. It even gives me the space for the surface normal wich i can now use to make some nice post effect lighting!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ data-fileid_eq__qt_10311_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_11/582e2f794c1e0_ScreenShot005RTS-GoogleChrome.jpg.729fa7251ca2bc54d2c209220266af31.jpg_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_ScreenShot 005 RTS - Google Chrome.jpg_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_10311_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_11/582e2f796d998_ScreenShot005RTS-GoogleChrome.thumb.jpg.af60aa7217233dd47cd3fe9b30f2e2ff.jpg_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthis is a very early screenshot of my project. The layered fog_co_ volumetric pointlights_co_ beams_co_ beamlights and unit range marker are drawn in the posteffect.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tgreetings_co__lt_br /_gt_\n\tKlaas_lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tUPDATE_dd__lt_br /_gt_\n\tI_t_ve meant the _qt_projection Matrix_qt_ is non linear ... not the viewport matrix!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-11-18T17:06:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tSeems really great!\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]