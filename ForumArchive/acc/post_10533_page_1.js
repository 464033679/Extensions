[{"Owner":"amorgan","Date":"2014-11-18T23:56:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_co_ I am trying to understand everything I can do with the Babylon animations_co_ but have yet to really find what I_t_m looking for. In general_co_ are there any complex examples of using animations. The 07 Animation tutorial seems to leave me hanging on understanding the complex animation usage._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For example_co_ say I had a box that was scaled to (1_co_4_co_1) (so a tall rectangle) and want to rotate it left and right (0 to PI/2) as the animation_co_ but then when I rotate the box 90 degrees I want it to continue the rotating animation but now (0 to PI/2) + 90 degrees_co_ which is the direction the box was turned. What is the correct way to do this?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Below is a start using the playground_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1CCDVC_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1CCDVC_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thank you_co__lt_/p_gt__lt_p_gt_amorgan_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2014-11-19T14:31:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I am not real familiar with the animation system_co_ but does replacing the keys build section with this what you want to do?_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_    // Animation keys    var keys _eq_ []_sm_    //At the animation key 0_co_ the value of scaling is _qt_1_qt_    keys.push({        frame_dd_ 0_co_        value_dd_ new BABYLON.Vector3(0_co_0_co_0)    })_sm_    //At the animation key 20_co_ the value of scaling is _qt_0.2_qt_    keys.push({        frame_dd_ 30_co_        value_dd_ new BABYLON.Vector3(0_co_Math.PI/2_co_0)    })_sm_    //At the animation key 20_co_ the value of scaling is _qt_0.2_qt_    keys.push({        frame_dd_ 60_co_        value_dd_ new BABYLON.Vector3(0_co_Math.PI_co_0)    })_sm_    //At the animation key 100_co_ the value of scaling is _qt_1_qt_    keys.push({        frame_dd_ 90_co_        value_dd_ new BABYLON.Vector3(0_co_Math.PI * 1.5_co_0)    })_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2014-11-19T15:43:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yea_co_ the only thought I had so far is on 90 degree rotation (or some arbitrary mesh rotation separate from the animation) _co_ recreate the keys and set the new animation_co_ but I feel like that is not the correct way to do it._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Edit_dd_ I guess I didn_t_t read your post well enough_co_ what I really want to do is more like_lt_br_gt__lt_br_gt_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_// Animation keys    var keys _eq_ []_sm_    keys.push({        frame_dd_ 0_co_        value_dd_ new BABYLON.Vector3(0_co_box1.currentAngle_co_0)    })_sm_    keys.push({        frame_dd_ 30_co_        value_dd_ new BABYLON.Vector3(0_co_box1.currentAngle + Math.PI/2_co_0)    })_sm_    keys.push({        frame_dd_ 60_co_        value_dd_ new BABYLON.Vector3(0_co_box1.currentAngle_co_0)    })_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2014-11-20T03:53:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Wanted to update that I was able to do what I wanted by following Temechon_t_s tutorial _lt_a href_eq__qt_http_dd_//www.pixelcodr.com/tutos/toad_attack/toad_attack-2.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.pixelcodr.com/tutos/toad_attack/toad_attack-2.html_lt_/a_gt_ under Basic Animations_co_ by creating a function that had the keys with variables and then just calling that function when I want to animate to get the current rotation. I thought this would be computationally heavy_co_ but it seems fine. So unless there is a way to do this other than recreating the animation_co_ I will stick with this method. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-11-20T12:56:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi amorgan_co_ welcome to the forum.  Um_co_ do you want a small delay between the rotations?  In other words_co_ do you want to rotate 90 degrees_co_ then stop for a moment_co_ then rotate another 90 degrees_co_ etc?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf so_co_ think about this...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tframe 0-100 _dd_      animate y from 0 to Math.PI/2  (0 to 90 degrees)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tframe 101-200_dd_   animate y from Math.PI/2 to Math.PI/2  (a 100 frame do-nothing delay)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tframe 201-300_dd_   animate y from Math.PI/2 to Math.PI  (90 degrees to 180 degrees)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tframe 301-400_dd_   animate y from Math.PI to Math.PI  (a 100 frame do-nothing delay)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tframe 401-500_dd_   animate y from Math.PI to (Math.PI+Math.PI/2)  (180 degrees to 270 degrees)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tframe 501-600_dd_   animate y from (Math.PI+Math.PI/2) to (Math.PI+Math.PI/2)  (a 100 frame do-nothing delay)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tframe 601-700_dd_   animate y from (Math.PI+Math.PI/2) to (Math.PI*2)  (270 degrees to 360/0 degrees)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDon_t_t quote me_co_ but I THINK this will work.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOr maybe you want to rotate 90 degrees each time the box is clicked?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen maybe see our ActionManager demo at _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/?17_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/?17_lt_/a_gt_  (click on the sphere)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnother method_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI once made a playground demo that used a _qt_phase_qt_ variable... and a switch/case (line 471) to test what phase of animation was needed next.  _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#YIT1S_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#YIT1S_lt_/a_gt_ .  This method of animation doesn_t_t use keyframes (except for a delayer/pauser function).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPush the _qt_show editor_qt_ button_co_ and scroll about halfway down in the code (or choose GET ZIP and take it all home and study it there).  I added two properties to my box... _lt_em_gt_.phase_lt_/em_gt_ and _lt_em_gt_.nothing_lt_/em_gt_.  Phase keeps track of which phase of the animation is needed next (for the switch/case function called update_mybox). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe box starts out with mybox.phase _eq_ 1_sm_  The update_mybox is called by the animate function_co_ and if you look at line 764 - scene.registerBeforeRender(animate)_sm_...  that causes the animate function to run once per frame (continuously).  So_co_ the switch/case function runs once per frame. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet_t_s look at case 18_dd_\n_lt_/p_gt_\n\n_lt_pre class_eq__qt_ipsCode prettyprint prettyprinted_qt__gt_\n_lt_span class_eq__qt_kwd_qt__gt_case_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_lit_qt__gt_18_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__dd__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_\t_lt_/span_gt__lt_span class_eq__qt_kwd_qt__gt_if_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_(_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_tb_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_._lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_rotation_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_._lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_y _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_&gt_sm__eq__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span_gt_Math_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_._lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_PI_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_)_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_{_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_\t\ttb_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_._lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_rotation_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_._lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_y _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__eq__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span_gt_Math_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_._lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_PI_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__sm__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_\t\tupdateDelay_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_(_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_tb_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__co__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ scene_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_)_sm__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_\t_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_}_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_\t_lt_/span_gt__lt_span class_eq__qt_kwd_qt__gt_else_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_{_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_\t\ttb_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_._lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_rotation_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_._lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_y _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_+_eq__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ offset_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__sm__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_\t\tprintrot_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_()_sm__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_\t_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_}_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_\t_lt_/span_gt__lt_span class_eq__qt_kwd_qt__gt_break_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__sm__lt_/span_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tInside each _t_case_t_ of the switch/case_co_ an if/then test checks if the box is done with THAT phase of rotation.  _lt_strong_gt_IF_lt_/strong_gt_ _lt_strong_gt_rotation is equal-to or greater than Math.PI_lt_/strong_gt_.. then set it EXACTLY to Math.PI (square it up in case the last animation step went a bit too far).  Then I call the delayer... updateDelay(tb_co_ scene)_sm_ which is a 100 frame animation of the .nothing variable on box.  It does nothing.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ /_gt_  And inside the updateDelay function_co_ I increment the box.phase... indicating that the previous animation phase is done.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_If rotation is _lt_u_gt_NOT_lt_/u_gt_ equal-to or greater than Math.PI_lt_/strong_gt_... add a small amount of rotation to the box Y-axis with this fancy incrementing line...  _lt_strong_gt_tb.rotation.y +_eq_ offset_sm__lt_/strong_gt_  and then printrot()_sm_... which just prints the current rotation values to a DOM node on the top of the screen.  Since the rotation was not yet finished_co_ no updateDelay was called (no pause)_co_ and therefore box.phase was not incremented.  Remember that the giant switch/case function called update_mybox runs _lt_u_gt_every_lt_/u_gt_ frame.  And in line 472... var offset _eq_ 0.02_sm_  ... this is a tiny amount of rotation to be added per frame.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAND... if you don_t_t need a delay after each 90 degree rotation...  you can rotate from 0 to Math.PI*2... for a 360 degree rotation_co_ of course.  You probably already knew that.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBy the way_co_ anytime you need to obtain box1.currentAngle_co_ you can simply use/query box1.rotation.y and it will return the box_t_s current Y rotation. You probably knew that already_co_ too.  If you notice in my update_mybox function... I need to look-up the box in order to get its current Y rotation.  You may need to do something similar... maybe like this.\n_lt_/p_gt_\n\n_lt_pre class_eq__qt_ipsCode prettyprint prettyprinted_qt__gt_\n_lt_span class_eq__qt_kwd_qt__gt_var_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ somefunction _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__eq__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_kwd_qt__gt_function_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_()_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_{_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_     _lt_/span_gt__lt_span class_eq__qt_kwd_qt__gt_var_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ scene _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__eq__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ engine_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_._lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_scenes_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_[_lt_/span_gt__lt_span class_eq__qt_lit_qt__gt_0_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_]_sm__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_     _lt_/span_gt__lt_span class_eq__qt_kwd_qt__gt_var_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ thebox _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__eq__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ scene_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_._lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_getMeshByName_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_(_lt_/span_gt__lt_span class_eq__qt_str_qt__gt__qt_mybox_qt__lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_)_sm__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_     _lt_/span_gt__lt_span class_eq__qt_kwd_qt__gt_var_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ curboxrot _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__eq__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ thebox_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_._lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_rotation_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_._lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_y_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__sm__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_     _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_...}_lt_/span_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t*shrug*\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI don_t_t know if ANY of this helps_co_ but I wanted to show it to you in case it does.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ /_gt_  At least you have some more things to experiment-with.  Be well.  Keep us posted.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2014-11-21T00:34:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks for the response! This is still all good stuff_co_ but what I was trying to do was be able to animate an object relative to the _qt_front facing_qt_ direction of the mesh. What I am doing is rotating the object for walking_co_ so I want to then animate it relative to the new position._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What I am doing right now is just creating a function similar to the function in Temechon_t_s example and just calling the function each time_co_ where I recreate the entire animation and calculate the value right before the animation. So I_t_m wondering if there is a better way_co_ or if that is actually the best way to do this?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-11-21T01:21:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This is the best way to do because you need a really dynamic animation (based on front facing info)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2014-11-22T22:26:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks for the confirmation! I would mark something answered_co_ but I_t_m not sure which post provides the most value as to being marked the _qt_answer_qt_._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2014-11-23T18:11:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I wanted to post my solution_co_ but what I have done after porting it to the playground_co_ it does not seem to be working properly._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1QRKQF_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1QRKQF_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The onEnd function I have should be called on the end of the animation_co_ but seems to be called at the beginning? This code (at least in my program) works_co_ but not on the playground._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-11-24T18:29:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_when I hit space I can see the animation and then the object is returning to its original position_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Sounds good no?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2014-11-24T20:03:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Well it does not always go back to the currentFacingAngle and isn_t_t playing the animation with respect to all directions. For me after I run on the Playground_co_ it reacts differently if I hold down the spacebar vs if I just press it. In addition_co_ when I download the code so I can step through it in the chrome debugger_co_ the onEnd function seems to run at the beginning of the animation and not the end? It does work for me with my code_co_ just not in the playground?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-11-26T23:13:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I found the problem_dd_ you were not using an anonymous function or a callback name for the onAnimationEnd_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1QRKQF%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1QRKQF#1_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2014-11-28T21:28:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks! Such a silly mistake O.o_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]