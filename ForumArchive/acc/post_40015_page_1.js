[{"Owner":"ranagraw","Date":"2018-09-15T11:10:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI am using the `AssetsManager` to load a glb file to my scene. I am basically replicating this_dd_¬†_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#Y7XMAR%230_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#Y7XMAR#0_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow_co_ after the glb is loaded_co_ I give it a parent so that I can manage the overall mesh_t_s position/rotation. Here_t_s what I have done_dd_¬†_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#Y7XMAR%231_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#Y7XMAR#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis technique works well for most meshes_co_ except some where it rotates the mesh in a weird way or moves the individual components around. I wasn_t_t sure how to upload a custom mesh on to the playground_co_ so I have the glb file on this url_dd_ _lt_a href_eq__qt_https_dd_//ranveeraggarwal.com/files/table_tennis.glb_qt_ rel_eq__qt_external nofollow_qt__gt_table_tennis.glb_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny idea why this could be happening?¬†\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-09-15T17:30:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHiya ranagraw!¬† Umm... first... foreach needs to be forEach... I think.¬† It seems so.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#Y7XMAR%232_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#Y7XMAR#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere_co_ I_t_ve done some fiddling-around in lines 18-28.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSOME meshes will have values on their .rotationQuaternion or their .rotation properties... when they arrive.¬† IF you parent them to something_co_ they WILL rotate to match the (new) parent... because parents hand-down their .rotation/.rotatationQuaternion values... to children.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn SOME models_co_ such as this skull_co_ there is only one mesh.¬† In other models_co_ there are many mesh... and often one _qt_root_qt_ mesh at the _qt_top_qt_.¬† But _qt_top_qt_ is not easy to find_co_ when you load multiple models in a single scene.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn complex models_co_ with many _qt_sub-mesh_qt_... those sub-mesh are VERY OFTEN parented to other sub-mesh within the model.¬† SO_co_ when you forEach thru all the loaded mesh_co_ and parent them to a master parent_co_ that will totally mess-up a complex model.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat you CAN do... is somehow _qt_find_qt_ the root mesh of each model... and ONLY parent THAT to your master parent.¬† scene.getMeshByName() might be a great way to ONLY get the _qt_root_qt_ mesh of any model.¬† THAT_t_S what you want to parent... but IF that root mesh has a .rotation or .rotationQuaternion value when it arrives in the BJS scene_co_ then parenting it to something COULD rotate it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou COULD make the parent.rotation or .rotationQuaternion... an exact copy of the modelroot.rotation or .rotationQuaternion.¬† THEN setParent_co_ and you should see no rotational change.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tKind of complicated_co_ eh?¬† It gets easier with practice_co_ I promise.¬† _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNotice lines 26-27.¬† It refuses to set a new parent... on any meshes that already have a parent.¬† This may help SOME_co_ but... think about ALWAYS somehow finding the _qt_root_qt_ to any model... and only parenting THAT to your master parent.¬†\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn some cases_co_ you may find that you don_t_t need a master parent in a scene... because ALL complex multi-submesh models... ALWAYS have a _qt_root_qt_... and it is often named_co_ so... it is easy to _qt_look-up_qt_ in the scene_co_ using scene.getMeshByName(somename).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI hope I have been helpful.¬† Stay tuned... others might comment soon.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ranagraw","Date":"2018-09-15T17:47:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_228224_qt_ data-ipsquote-contentid_eq__qt_40015_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1537032658_qt_ data-ipsquote-userid_eq__qt_5733_qt_ data-ipsquote-username_eq__qt_Wingnut_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t12 minutes ago_co_ Wingnut said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tHiya ranagraw!¬† Umm... first... foreach needs to be forEach... I think.¬† It seems so._t_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tYep_co_ you_t_re right! My bad.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t12 minutes ago_co_ Wingnut said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#Y7XMAR%232_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#Y7XMAR#2_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t...\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tKind of complicated_co_ eh?¬† Notice lines 26-27.¬† It refuses to set a new parent... on any meshes that already have a parent.¬† This may help SOME_co_ but... think about ALWAYS somehow finding the _qt_root_qt_ to any mesh... and only parenting THAT to your master parent.¬† In MANY cases_co_ you may find that you don_t_t need a master parent in a scene... because ALL complex multi-submesh models... ALWAYS have a _qt_root_qt_... and it is often named_co_ so... it is easy to _qt_look-up_qt_ in the scene_co_ using scene.getMeshByName(somename).\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tPerfect! This is exactly what it was.¬†\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis fixed all the issues I was having. Also_co_ this is a great piece of information and it would be great if this can go on the official documentation somewhere (that is_co_ if it_t_s not already there and I skipped past it _lt_span_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_üòê_lt_/span_gt__lt_/span_gt_).\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]