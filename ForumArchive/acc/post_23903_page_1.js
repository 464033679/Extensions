[{"Owner":"svatopluk","Date":"2016-07-18T14:44:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m developing application which gets filtered (low pass filter) pitch_co_ roll and yaw data from a websocket connection. I use pitch and roll data to change the view angles of camera.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m using targetCamera_co_and I have attached the targetVector using the following code_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tcamera.lockedTarget _eq_ targetVector_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEach time the angle is recieved_co_ the targetVector coordinates are calculated and changed and so the camera view angles are changed too. I recieve around 80 angle triplets per second_co_ so there are 80 targetVector updates per second.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe problem is that the camera transitions are not smooth at all. The are very jittery and uneven. Camera is sometimes making a very small jumps. I have also tried to limit the number of targetVector changes to 10 changes per second but the problem is the same.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo I have two questions_dd_\n_lt_/p_gt_\n\n_lt_ol_gt__lt_li_gt_\n\t\tIs this a good way to update camera angles or there are some better ways to do it.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tIs there a way to make camera transitions smoother\n\t_lt_/li_gt_\n_lt_/ol_gt__lt_p_gt_\n\tThanks.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-07-19T11:27:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHiya _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/22855-svatopluk/?do_eq_hovercard_qt_ data-mentionid_eq__qt_22855_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/22855-svatopluk/_qt_ rel_eq__qt__qt__gt_@svatopluk_lt_/a_gt__co_ welcome to the forum.  We need a playground for this one.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#YINWN%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#YINWN#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere_co_ the torus is animating in lines 65-73.  We will use its .position to simulate inbound targetVectors.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn lines 57-62_co_ I try setting camera.lockedTarget property every 1/10 second.  There is a test line there_co_ too_co_ for testing camera.setTarget() function.  No change in the issue seen_co_ no matter setTarget() or .lockedTarget.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUp in lines 5-6_co_ I test both targetCamera (line 5) and followCamera can be tested with line 6.  Both show the same issue.  I thought MAYBE... followCamera would be better because of its built-in easing.  But_co_ no noticeable change in issue.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think this is going to need an animation function.  Instead of force-feeding target/lockedTarget with values_co_ you would feed the ending key-frame of a Vector3 animation.  The animation would run immediately upon seeing a new incoming targetVector_co_ and instantly start a fast animation from currentTargetPosition (the beginning key frame)... to newTargetPosition (the ending key frame).   Therefore_co_ the animation would _lt_em_gt_smooth_lt_/em_gt_ the _qt_jump_qt_).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere may be troubles with an animation_co_ too.  What if the animation finishes before the next targetVector arrives?  And what if a new targetVector arrives before the previous animation is complete?  The incoming targetVectors could easily have inconsistent/varying arrival speeds.  hmm.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust thoughts.  Not necessarily wise.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  Again_co_ welcome.  Experts and idea-people are nearby.... and will surely have some (better) ideas.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"svatopluk","Date":"2016-07-27T21:30:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for your answer. Sorry for late response but I didn_t_t have the computer around.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have managed to solve a part of the issue by getting smoother and better angle data. Now the transitions are somewhat smoother_co_ and there are no jumps. But I must admit that it needs improvment. I get the similar result if alpha is set to 0.001. The situation gets bad when the targetVector is changing fast.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo if I understand this right the problem is that the targetVector position is changing too fast? The frequency of the angle data from server is 80 per second. Is that too slow?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-07-27T22:31:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi again_co_ S!  Yeah_co_ it_t_s too slow if you are positioning and rotating large distances/degrees_co_ and net transfers are not speed-consistent (as far as I know).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCan I ask why you want to _qt_stream_qt_ camera movements? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhy not send _qt_packet types_qt_... and one type of packet... is a camFly packet.  When its time to move a camera from one position/orientation to another_co_ you send just one packet.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe client-side packetListener and packetParser... disassembles the packet_co_ and if it_t_s a packet requiring camera-fly service_co_ it _qt_installs_qt_ the values into a BABYLON animation_co_ and then says _qt_go_qt_.  (ie. request an action from the client-side camera-fly serviceHandler).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe animation_t_s onAnimationEnd callback can report back to the server when the fly is complete (via the server-bound packetMaker service). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tInside that camFly packet (could be xml)_co_ you could command how fast_co_ what route_co_ etc.  ALL the needed goods for the animation are inside the packet.  Let BABYLON/JS do the interpolation (in-beTWEENING) for you... once the packet arrives at the client.  It will do it smoothly_co_ as it is no longer dependent upon internet speeds and targetVector value-differences (amount of difference between THIS targetVector and the previous one)  (step size) (stride). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe interpolation (tweening/smooth-move-across-key-frames) is built-into the animation system_co_ and 11 types of easing are _lt_strong_gt_eas_lt_/strong_gt_ily available... between start and stop frames.  The BJS animation system is quite good-at flying things smoothly... easing-up to full speed as it leaves a target_co_ easing-down to a stop at the new position/orientation.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDoes this make sense?_lt_br /_gt__lt_br /_gt_\n\tDo the same when it is time to move/orient a mesh or light.  Send a changeMesh-type packet_co_ and THAT packet could have instructions in it for a followCamera to be spawned and follow the mesh move/orient.  Or parent a cam to the mesh_co_ first.  I just don_t_t think you are going to like the results seen... when letting the server force-around the camera_co_ directly. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe you will have 4 packetTypes/serviceHandlers on client side_dd__lt_br /_gt_\n\t- meshChange service_lt_br /_gt_\n\t- cameraChange service_lt_br /_gt_\n\t- lightChange service_lt_br /_gt_\n\t- environmentChange service\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAll those services could have choice options for animate-to-change or immediate-change.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut_co_ maybe I_t_m wrong_co_ and/or maybe a packetType parser_co_ service-dispatcher system won_t_t work for your project.  I just cannot foresee a solution that will smooth your direct-to-camera streaming-targetVector stuttering.  Maybe others will have different/better ideas or ways to fix your system.  hmm.  I_t_ll keep thinking.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"svatopluk","Date":"2016-07-28T16:56:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello and thank you for your answer.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust to point out what I_t_m trying to do. The constraint is that i receive the angles only. I_t_m programming a airplane like game. Camera is set at some altitude and is looking directly on the ground(90 degrees). Also it is moving constantly. Angles are allowing the user to rotate the camera view from 0-180 pitch and roll.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI will use your suggestion and animate the targetVector movement to get a smooth change of the position. I_t_m not expecting to get more than 200 messages per second so I will limit the duration of the animation to 5ms and see what I_t_ll get. The connection speed should not be a problem. If it lags too much it will be unplayable anyway so I cannot do anything about it.  This is I think a solid solution_co_ so I_t_ll try it out.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-07-29T00:13:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOhhh_co_ ok.  So_co_ your server is intervening between user input control changes and camera moves? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn other words_co_ the user input (such as mouse drag) is going to the server first_co_ and then the server sends the commands back to the client... to turn/position the camera?  The server is between the controller inputs and the camera?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSorry_co_ I don_t_t have much experience with servers.  Thanks for the clarification and teaching... I appreciate it.  And maybe if I tell you enough wrong things_co_ someone will jump in and correct me... and I_t_ll become a better forum helper.  I_t_m not doing so well_co_ here_co_ so far.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"svatopluk","Date":"2016-07-29T20:25:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tController -&gt_sm_ Server -&gt_sm_ BABYLON The server is between them_co_ yes.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn this project I am developing all the components so I could choose where and how to prepare the data_co_ either on the controller or on the BABYLON side. But the requirement is to send raw angles because this is a university project.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for your help. Right now I_t_m in the process of implementing the changes which we discussed. Cheers\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"svatopluk","Date":"2016-07-31T16:08:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJust an update.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI was updating the targetVector position in runRenderLoop function. Number of messages recieved by the server is greater than the number of runRenderLoop function call. Animating is not possible. So_co_ maybe the position is changing to fast for camera transition to be smooth. I cannot conclude anything else.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-07-31T16:53:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t*nod*  I_t_m still thinking_co_ too.  I was thinking about rubber_co_ believe it or not.  Let_t_s pretend that we have a camera hanging-from surgical tubing... with one end held in our hand.  We could move our hand in jerky motions_co_ but the rubber tubing sort-of refuses to transfer that jerk... to the camera hanging below. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is the same principle that a SteadyCam uses_co_ with it_t_s springs and weights.  If we were to use a physics system_co_ we would put lots of mass on the camera_co_ and pull it around with a physics _qt_link_qt_ or two.  Physics links aren_t_t very _qt_rigid_qt_ by default.  They are a tiny bit stretchy... like rubber_co_ especially when they pull on a mesh with high mass.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m not saying that you should move a _qt_widget_qt_ that has a heavy camera hanging by some physics links_co_ but_co_ okay_co_ that IS what I am saying.  _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_  I_t_m not promising anything.  There might be wiser ways to do this _qt_rubber averaging system_qt_.  You_t_d still need to slow the targetVector speeds... to about 5 per frame.  The actual camera move... would run about .5 seconds behind the server.  This would allow time for an _qt_averaging system_qt_ to analyze the _lt_u_gt_previous_lt_/u_gt_ 2-10 targetVectors (where the camera HAS BEEN)... and 2-10 of the most recent-arriving targetVectors.  The client is able to look into the future... because the actual camera moves are running .5 seconds behind the server.  During that .5 secs... an averager func does.... something.  I don_t_t know what.  I would say it does an animation with interpolation... but... that_t_s what you just tried.  It all would require MUCH slowing of inbound targetVectors.  _lt_u_gt_Lots_lt_/u_gt_ slower.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHmm.  But still_co_ you KNOW why the jerking is happening.  You are streaming targetVectors at the scene... faster than the renderLoop has time to update the cam.  The jerking you see_co_ IS expected_co_ because of what you are trying.  I think you have a good grasp of the issue.  Perhaps your project_t_s design strategy will need to be adjusted.  _lt_img alt_eq__qt__dd_o_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_ohmy.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/ohmy@2x.png 2x_qt_ title_eq__qt__dd_o_qt_ width_eq__qt_20_qt_ /_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]