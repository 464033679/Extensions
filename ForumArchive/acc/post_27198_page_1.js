[{"Owner":"MackeyK24","Date":"2016-12-20T13:07:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI am trying to implement an _qt_Additive Shader_qt_ (from space shooter tutorial) where BLACK pixels are transparent (or do NOT ADD) and the rest of color add on top...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDo we (BabylonJS Community) has a shader already that does something like that???\n_lt_/p_gt_\n\n_lt_p_gt_\n\tif not_co_ i will have to make one... I tried to start off by just return a transparent color_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_void main(void)\n{\n   gl_FragColor _eq_ vec4(0.0_co_ 0.0_co_ 0.0_co_ 0.0)_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI have _qt_needsAlphaBlending _eq_ true_qt_ on shader material options object \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBUT I STILL SEE BLACK SQUARE (I little less bright _co_ but still there)...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI would assume that setting a color rgba (0_co_0_co_0_co_0) would make EVERY pixel transparent... But it is not.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny help or info would be very kool _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-12-20T17:26:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis **should** work. can you repro it in the PG?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(like here_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#16UICJ%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#16UICJ#2_lt_/a_gt_)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MackeyK24","Date":"2016-12-21T08:35:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ Same problem... Cant really do a playground (is typescript)... For some reason if i serialize material.alphaMode _eq_ 1 ... When scene loads is all garbled... But if i set material.alphaMode _eq_ 1 in code works great for transparent using Standard Shader... But is STILL no joy in GLSL... I would think that_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t gl_FragColor _eq_ vec4(0.0_co_0.0_co_0.0_co_0.0) WOULD BE TOTALLY transparent .. but is not... (Maybe something the ALPHA_ADD... but that is garbled when i set)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIm still playing with things though...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDo you have any examples where you just take the black background out (basically making BLACK transparent... thats what i really need to finish my tutorial)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-12-21T21:44:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHere we are_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#16UICJ%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#16UICJ#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tANd I guess it is because of my bad english_co_ you have to set needAlphaBlending and not need_lt_u_gt__lt_strong_gt_S_lt_/strong_gt__lt_/u_gt_AlphaBlending\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MackeyK24","Date":"2016-12-21T22:04:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ Ill be darned... gl_FragColor _eq_ vec4( 1._co_ 1._co_ 1._co_ 0.1 ) it working fine in that playground... I could have sworn i tried that... But maybe was setting needsAlphatesting as well... Ill remove all references to needsAlphaTesting...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso... What should alpha mode be.... _qt_Combine_qt_ or _qt_Add_qt_ or something else.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnother .. what is the best way to check for BLACK color ... Should i check all three r g b are _eq__eq_ 0 ???\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-12-22T15:31:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYea check if all three values are under a certain amount.  You can do it inline though so if(color.rgb &gt_sm__eq_ 0.1) should work\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MackeyK24","Date":"2016-12-23T00:26:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_156384_qt_ data-ipsquote-contentid_eq__qt_27198_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1482420661_qt_ data-ipsquote-userid_eq__qt_19199_qt_ data-ipsquote-username_eq__qt_Pryme8_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t8 hours ago_co_ Pryme8 said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tYea check if all three values are under a certain amount.  You can do it online though so if(color.rgb &gt_sm__eq_ 0.1) should work\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tYep... I am doing something like that... Check out my first REAL USEFUL Universal Shader. Its and _qt_Particles Additive_qt_ shader used in the Space Shooter tutorial for the BOLT QUAD... The BOTTOM half is UNITY HLSL Shader used at design time (OPTIONAL can be anything you want to see at design time)...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut the First half is what counts... It the actual Babylon Shader Programs. It contains (combined with the Properties Section at top) ALL the info you need to make COMPLE FULLY FUNCTION BabylonJS Shaders_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_Shader _qt_BabylonJS/AdditiveShader_qt_ {\n\tProperties {\n\t\t_Color (_qt_Color_qt__co_ Color) _eq_ (1_co_1_co_1_co_1)\n\t\t_Brightness (_qt_Intensity_qt__co_ Range(1.0_co_ 10.0)) _eq_ 2.0\n\t\t_Blackness (_qt_Blackness_qt__co_ Range(0.0_co_ 1.0)) _eq_ 0.4\n\t\t[NoScaleOffset] _MainTex (_qt_Albedo (RGB)_qt__co_ 2D) _eq_ _qt_white_qt_ {}\n\t\t[ToggleOff] _NeedsAlphaTesting (_qt_Needs Alpha Testing_qt__co_ Int) _eq_ 0\n\t\t[ToggleOff] _NeedsAlphaBlending (_qt_Needs Alpha Blending_qt__co_ Int) _eq_ 0\n\t\t[Enum(Disable_co_0_co_Additive_co_1_co_Combine_co_2_co_Subtract_co_3_co_Multiply_co_4_co_Maximized_co_5_co_OneOne_co_6)] _AlphaMode (_qt_Alpha Blending Mode_qt__co_ int) _eq_ 2\n\t}\n\tCategory {\n\t\tTags { _qt_Queue_qt__eq__qt_Transparent_qt_ _qt_IgnoreProjector_qt__eq__qt_True_qt_ _qt_RenderType_qt__eq__qt_Transparent_qt_ _qt_PreviewType_qt__eq__qt_Plane_qt_ }\n\t\tBlend SrcAlpha One\n\t\tColorMask RGB\n\t\tCull Off Lighting Off ZWrite Off\n\t\tSubShader {\n\t\t\tPass {\n\t\t\t\tCGPROGRAM\n\n\t\t\t\t//////////////////////////////////////////////////////////\n\t\t\t\t// BABYLON WEBGL RUNTIME SHADER PROGRAM SECTIONS (GLSL) //\n\t\t\t\t//////////////////////////////////////////////////////////\n\n\t\t\t\t#ifdef BABYLON\n\t\t\t\tattributes_dd_ [_qt_position_qt__co_ _qt_normal_qt__co_ _qt_uv_qt_]\n\t\t\t\tuniforms_dd_ [_qt_worldViewProjection_co_ _Color_co_ _Brightness_co_ _Blackness_qt_]\n\t\t\t\tsamplers_dd_ []\n\t\t\t\tdefines_dd_ []\n\t\t\t\t#endif //BABYLON-END\n\n\n\t\t\t\t#ifdef VERTEX\n\t\t\t\tattribute vec3 position_sm_\n\t\t\t\tattribute vec3 normal_sm_\n\t\t\t\tattribute vec2 uv_sm_\n\t\t\t\tuniform mat4 worldViewProjection_sm_\n\t\t\t\tprecision highp float_sm_\n\n\t\t\t\tvarying vec2 vUV_sm_\n\t\t\t\t\n\t\t\t\tvoid main(void)\n\t\t\t\t{\n\t\t\t\t\tgl_Position _eq_ worldViewProjection * vec4(position_co_ 1.0)_sm_\n\t\t\t\t\tvUV _eq_ uv_sm_\n\t\t\t\t}\n\t\t\t\t#endif //VERTEX-END\n\n\n\t\t\t\t#ifdef FRAGMENT\n\t\t\t\tprecision highp float_sm_\n\n\t\t\t\tvarying vec2 vUV_sm_\n\t\t\t\tuniform vec4 _Color_sm_\n\t\t\t\tuniform sampler2D _MainTex_sm_\n\t\t\t\tuniform float _Blackness_sm_\n\t\t\t\tuniform float _Brightness_sm_\n\n\t\t\t\tvoid main(void)\n\t\t\t\t{\n\t\t\t\t\tvec4 baseColor _eq_ texture2D(_MainTex_co_ vUV)_sm_\n\t\t\t\t\tfloat pixel _eq_ baseColor.r + baseColor.g + baseColor.b_sm_\n\t\t\t\t\tif (pixel &lt_sm__eq_ _Blackness) {\n\t\t\t\t\t\tgl_FragColor _eq_ vec4(0.0_co_ 0.0_co_ 0.0_co_ 0.0)_sm_\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgl_FragColor _eq_ baseColor * _Color * _Brightness_sm_\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t#endif //FRAGMENT-END \n\n\n\t\t\t\t////////////////////////////////////////////////////////\n\t\t\t\t// DEFAULT UNITY EDITOR SHADER PROGRAM SECTION (HLSL) //\n\t\t\t\t////////////////////////////////////////////////////////\n\t\t\t\t\n\t\t\t\t// Upgrade NOTE_dd_ excluded shader from DX11_co_ OpenGL ES 2.0 because it uses unsized arrays\n\t\t\t\t#pragma exclude_renderers d3d11 gles\n\n\t\t\t\t#pragma vertex vert\n\t\t\t\t#pragma fragment frag\n\t\t\t\t#pragma target 2.0\n\t\t\t\t#pragma multi_compile_particles\n\n\t\t\t\t#include _qt_UnityCG.cginc_qt_\n\n\t\t\t\tfloat _Brightness_sm_\n\t\t\t\tsampler2D _MainTex_sm_\n\t\t\t\tfixed4 _Color_sm_\n\t\t\t\t\n\t\t\t\tstruct appdata_t {\n\t\t\t\t\tfloat4 vertex _dd_ POSITION_sm_\n\t\t\t\t\tfloat2 texcoord _dd_ TEXCOORD0_sm_\n\t\t\t\t\tUNITY_VERTEX_INPUT_INSTANCE_ID\n\t\t\t\t}_sm_\n\n\t\t\t\tstruct v2f {\n\t\t\t\t\tfloat4 vertex _dd_ SV_POSITION_sm_\n\t\t\t\t\tfloat2 texcoord _dd_ TEXCOORD0_sm_\n\t\t\t\t\tUNITY_VERTEX_OUTPUT_STEREO\n\t\t\t\t}_sm_\n\t\t\t\t\n\t\t\t\tfloat4 _MainTex_ST_sm_\n\n\t\t\t\tv2f vert (appdata_t v)\n\t\t\t\t{\n\t\t\t\t\tv2f o_sm_\n\t\t\t\t\tUNITY_SETUP_INSTANCE_ID(v)_sm_\n\t\t\t\t\tUNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o)_sm_\n\t\t\t\t\to.vertex _eq_ UnityObjectToClipPos(v.vertex)_sm_\n\t\t\t\t\to.texcoord _eq_ TRANSFORM_TEX(v.texcoord_co__MainTex)_sm_\n\t\t\t\t\treturn o_sm_\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfixed4 frag (v2f i) _dd_ SV_Target\n\t\t\t\t{\n\t\t\t\t\treturn tex2D(_MainTex_co_ i.texcoord) * _Color * _Brightness_sm_\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tENDCG \n\t\t\t}\n\t\t}\t\n\t}\n\tFallBack _qt_Particles/Additive_qt_\n}\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs you can see... The both do the same thing _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-12-23T03:07:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tyou can do a distance calculation and then fade it also with taking the resulting float of the distance and doing a calculation like_lt_br /_gt_\n\tfloat f _eq_ distance(color_co_ vec3(0_co_0_co_0))_sm__lt_br /_gt_\n\tf _eq_ f*f*f*f*0.2 (or something like this)_lt_br /_gt_\n\tand you should be able to do a smoothing calculation... im kinda tired right now and this might be off topic but yeah...\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-12-23T03:12:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI should post my non repeating terrain texture shader for you... you might get a kick out of it_co_ it identifies each section of the uv or fragcoords and assigns a pseudo random unique id that places a texture down on that block that is smeamless with the others around it but does not use the same one over and over again.  Once again might not be related but you could learn a thing or two from it.  Ill see if I can dig that one up for you.  It does a lot of comparative calculations in a single pass.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JackFalcon","Date":"2018-07-12T20:22:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tlet you_guys _eq_ _t_heros_t__sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBecause of this_co_ was able to figure out alpha opacity on a sine wave for a shader-fader.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNot perfect_co_ but pretty cool for a rookie. _lt_span_gt__dd_ )_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Hope it helps someone._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#16UICJ%239_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#16UICJ#9_lt_/a_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nabroski","Date":"2018-07-13T00:54:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tnice i always want to experiment with the new UI system _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#16UICJ%2315_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#16UICJ#15_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]