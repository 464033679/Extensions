[{"Owner":"DavidBee","Date":"2013-10-26T12:15:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_br_gt_ _lt_br_gt_I trying to create a similar game for learn BabylonJS. I want to create a short game with dynamic objects. I can set the gravity to scene and camera but I can_t_t to any meshes._lt_br_gt_ _lt_br_gt_So _lt_strong_gt_camera.applyGravity _eq_ true_sm__lt_/strong_gt_ working fine_co_ but _lt_strong_gt_box.applyGravity _eq_ true_sm__lt_/strong_gt_ is ignored. My box still as a static mesh_co_ gravity has no effect to the box._lt_br_gt_ _lt_br_gt_Is it possible to implement gravity on meshes? Am I on the bad way? _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_br_gt_ _lt_br_gt_My scene code below_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var createScene _eq_ function (engine) {    //Creation of the scene    var scene _eq_ new BABYLON.Scene(engine)_sm_    //Adding of the light on the scene    var light _eq_ new BABYLON.PointLight(_qt_Omni_qt__co_ new BABYLON.Vector3(0_co_ 100_co_ 100)_co_ scene)_sm_    //Adding of the Arc Rotate Camera    //var camera _eq_ new BABYLON.ArcRotateCamera(_qt_Camera_qt__co_ 0_co_ 1_co_ 100_co_ new BABYLON.Vector3.Zero()_co_ scene)_sm_    var camera _eq_ new BABYLON.FreeCamera(_qt_FreeCamera_qt__co_ new BABYLON.Vector3(0_co_ 10_co_ -20)_co_ scene)_sm_    var box _eq_ BABYLON.Mesh.CreateBox(_qt_Box_qt__co_ 6.0_co_ scene)_sm_    box.position _eq_ new BABYLON.Vector3(0_co_ 20_co_ 0)_sm_    var ground _eq_ BABYLON.Mesh.CreatePlane(_qt_Plane_qt__co_ 50.0_co_ scene)_sm_    ground.rotation.x _eq_ Math.PI/2_sm_    ground.position _eq_ new BABYLON.Vector3(0_co_ 0_co_ 0)_sm_    //COLLISIONS BY GRAVITY    //---------------------    //Set gravity to the scene (G force like_co_ on Y-axis. Very low here_co_ welcome on moon)    scene.gravity _eq_ new BABYLON.Vector3(0_co_ -1_co_ 0)_sm_    // Enable Collisions    scene.collisionsEnabled _eq_ true_sm_    //Then apply collisions and gravity to the active camera    camera.checkCollisions _eq_ true_sm_    camera.applyGravity _eq_ true_sm_    //Set the ellipsoid around the camera (e.g. your player_t_s size)    //camera.ellipsoid _eq_ new BABYLON.Vector3(1_co_ 1_co_ 1)_sm_    box.checkCollisions _eq_ true_sm_    box.applyGravity _eq_ true_sm_    //finally_co_ say which mesh will be collisionable    ground.checkCollisions _eq_ true_sm_    return scene_sm_}_lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2013-10-26T14:32:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You code is good but right now we are only supporting collisions between the avatar of the camera (an ellipsoid) and the world._lt_/p_gt__lt_p_gt_We are working right now on integrating cannonjs to support physics between meshes _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ Stay tuned so^^_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"DavidBee","Date":"2013-10-26T14:42:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Oh_co_ I see. But integrating cannonjs is a really good news. Thanks for the quick answer._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]