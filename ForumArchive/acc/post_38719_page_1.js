[{"Owner":"QuintusHegie","Date":"2018-07-08T11:10:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi all_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis may be an easy question but I cannot seem to solve it myself after several attempts.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor my Model Train Simulator in BabylonJS I_t_m creating a helix/spiral track_co_ allowing trains on a lower section to quickly gain altitude within a short area (e.g. climbing a mountain). This is often used in _t_hidden_t_ sections on model train displays to have a train pass a valley track and next pass a mountain bridge which is position much higher (Y position) in the scene.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen I construct the points of a helix/spiral using the formula from the docs\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/babylon101/parametric_shapes_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/babylon101/parametric_shapes_lt_/a_gt__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#165IV6%2361_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#165IV6#61_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd then use Path3D on these points to get the normals see the docs\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/how_to/how_to_use_path3d_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/how_to/how_to_use_path3d_lt_/a_gt__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#2DLXYB%231_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#2DLXYB#1_lt_/a_gt__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#8ICWNU_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#8ICWNU_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen I get an ever increasing cant/superelevation of my track_co_ see the blue arrows in the picture which indicate the _t_up_t_ vectors. The result is that the track at the top has a cant. I use the Tangent_co_ Normal and Binormal from the Path3D of the line/points to set the track rail and bed geometry_co_ and position the train always perpendicular to the track (that is_dd_ up). But I want to have the Up vector always Vector3.Up()_co_ or at least that there is no cant/superelevation and I can continue placing _t_flat_t_ track with it_t_s normal Vector3.Up() on the top.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe big blue arrow indicates Vector3.Up().\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCurrent _t_vector up_t_ results from Path3D in my game_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_07/helixtrack.png.f6f0d71b137124c6c24fcc9eac62af42.png_qt_ data-fileid_eq__qt_19075_qt_ rel_eq__qt__qt__gt__lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_19075_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_07/helixtrack.thumb.png.da89e87fb280f71ba47d78f8d87969bc.png_qt_ alt_eq__qt_helixtrack.thumb.png.da89e87fb280f71ba47d78f8d87969bc.png_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBlue _eq_ up vector (from Path3D)._lt_br /_gt_\n\tLarge blue with _ _eq_ helix direction (Y axis)_lt_br /_gt_\n\tYellow line through track _eq_ Line through the spiral center points (radius * cos t_co_ radius * sin t_co_ ascentfactor * t)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDesired _t_vector up_t_ on the spiral/helix_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_2%20helix.jpg_qt_ class_eq__qt_ipsImage_qt_ height_eq__qt_480_qt_ src_eq__qt_http_dd_//www.easyhelix.com/content/2%20helix.jpg_qt_ width_eq__qt_640_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(image found at _lt_a href_eq__qt_http_dd_//www.easyhelix.com_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.easyhelix.com_lt_/a_gt_)\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\tHope someone knows how to _t_alter_t_ the results from Path3D so I get the helix point orientation but without the cant/superelevation._lt_br /_gt_\n\t\tSo that I can _t_lay the track_t_ properly without trains _t_falling off the track_t_ because of cant/superelevation.\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n_lt_p_gt_\n\tBonus questions_dd__lt_br /_gt_\n\t- the yellow marked area in the skybox marks another bug that is caused with a reflection texture intersection with the skybox. the default background color comes through on the waves._lt_br /_gt_\n\t- the red box marks a mesh (air balloon) with a physics impostor that is already moving_co_ but I want the physics computation to be paused until the user presses some _t_start to play_t_-button_co_ instead of physics computation right from the moment the scene is loading\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHappy coding_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tQ\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-07-08T12:07:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tNot sure to get exactly what you mean .... \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe Path3D is just a maths tool to design a 3D path and its triplets (tangent_co_ normal_co_ binormal) whatever the direction in the space. If a direction matters for you (say_co_ the UP for every point)_co_ you could_co_ for instance _lt_span_gt__dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_- build your path3D_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_- get all the tangents from its triplets_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_- compute_co_ with a simple cross product_co_ for each point your own normals and binormals from each tangent _lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2018-07-08T16:16:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSo are  you talking about how the track tilting a whole bunch tword the top?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI’m on my phone right now but if I get to a pc I’ll take a look.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"QuintusHegie","Date":"2018-07-08T17:56:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_220906_qt_ data-ipsquote-contentid_eq__qt_38719_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1531066613_qt_ data-ipsquote-userid_eq__qt_19199_qt_ data-ipsquote-username_eq__qt_Pryme8_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ Pryme8 said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tSo are  you talking about how the track tilting a whole bunch tword the top?\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tI’m on my phone right now but if I get to a pc I’ll take a look.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tYes_co_ the tilting of the track from the bottom to the top of the helix is the problem.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI use the BABYLON.Curve.continue() function to connect the ground track (flat) with the helix and then with the upper track (should be flat). The result is that the upper track is also tilted_co_ namely with the final tilt of the upmost helix point. Would be great if the solutions works with continue() function as well so I can use the library functions over custom code.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_220893_qt_ data-ipsquote-contentid_eq__qt_38719_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1531051676_qt_ data-ipsquote-userid_eq__qt_5453_qt_ data-ipsquote-username_eq__qt_jerome_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t5 hours ago_co_ jerome said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tNot sure to get exactly what you mean .... \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThe Path3D is just a maths tool to design a 3D path and its triplets (tangent_co_ normal_co_ binormal) whatever the direction in the space. If a direction matters for you (say_co_ the UP for every point)_co_ you could_co_ for instance _lt_span_gt__dd__lt_/span_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_span_gt_- build your path3D_lt_/span_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_span_gt_- get all the tangents from its triplets_lt_/span_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_span_gt_- compute_co_ with a simple cross product_co_ for each point your own normals and binormals from each tangent _lt_/span_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThanks I_t_ll try that too but please know that I use the continue() function so I hope this solution works with continue as well... (e.g. the computed normal is _t_continued_t_ at the next glued track).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tQ\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-07-08T18:53:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tcontinue() is a function from the Curve3 class what is not related to the Path3D class. If you want the same than continue() for Path3D_co_ you could easily adapt it _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Math/babylon.math.ts#L6619_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Math/babylon.math.ts#L6619_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthen update the newly created Path3D object\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-07-09T08:06:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIs this of any help _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#165IV6%23431_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#165IV6#431_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"QuintusHegie","Date":"2018-07-09T17:55:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_220957_qt_ data-ipsquote-contentid_eq__qt_38719_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1531123599_qt_ data-ipsquote-userid_eq__qt_14282_qt_ data-ipsquote-username_eq__qt_JohnK_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t9 hours ago_co_ JohnK said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tIs this of any help _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#165IV6%23431_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#165IV6#431_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tYes this shows the desired ribbon (track support) for the helix/spiral._lt_br /_gt_\n\tHowever the normals/binormals/tangets still seem to be computed with tilt._lt_br /_gt_\n\tSee the updated playground_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#165IV6%23432_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#165IV6#432_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPerhaps I need to create my own copy of Path3D... with the functions like Jerome suggested._lt_br /_gt_\n\tE.g. change the formula\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_\tvar tgts _eq_ path3d.getTangents()_sm_\n\tvar norms _eq_ path3d.getNormals()_sm_\n\tvar binorms _eq_ path3d.getBinormals()_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tin\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_showPath3D_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tso that it computes the way I want for _qt_rail track_qt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen I take a close look at the starting vectors (point 0_co_ at the bottom of the helix) you see a slightly off orientation from the white helix track support.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_19092_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_07/difference.png.2034ea639d7d65492506666bfc35cc3a.png_qt_ alt_eq__qt_difference.png.2034ea639d7d65492506666bfc35cc3a.png_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHint_dd_ The green line is slightly off the edge of the white ribbon start._lt_br /_gt_\n\tThe formula for Path3D takes the shortest line from point 0 to point 1_co_ which is not desired for my purpose._lt_br /_gt_\n\tYou see the red line of the first point 0 intersecting point 1_co_ while all other points are not connected this way._lt_br /_gt_\n\tHence I need to write some extension of Path3D that takes into account _lt_em_gt_starting _lt_/em_gt_orientation and that is constrained by rail track limits (e.g. no cumulative inward tilt on a spiral point array_sm_ a rail track elevation is limited to a certain max angle)._lt_br /_gt_\n\tLet_t_s call the new class RailPath3D _dd_-)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI use the Axis system from the Path3D to orient the train/vehicle rotate while driving on the helix._lt_br /_gt_\n\tThat_t_s why I look for tangent/normal/binormal arrays _lt_span_gt__dd_-)_lt_/span_gt__lt_br /_gt_\n\tIt also helps me set the width of the helix ribbon (compute the inner and outer points like you do_co_ but then based on the center line color Purple)_co_ the track rail (one on each side) etc.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tQ\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]