[{"Owner":"Deltakosh","Date":"2017-09-20T18:08:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tBaking the transform is long but rebuilding the normals are also a quite expensive process\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"focomoso","Date":"2017-09-20T22:43:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tBut with baking the transform_co_ you have to rebuild the normals anyway_co_ so you_t_re extending the time even more. You also loose the bounding box which won_t_t work in many cases. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI agree that you shouldn_t_t rebuild the normals every time a mesh is scaled_co_ but there should be a simple method in the babylon core that does this correctly_co_ regardless of the scaling on the mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-09-21T16:37:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWhen you scale a mesh with a non uniform scale (meaning not on all axis at the same time)_co_ you change the topology of the mesh. So you NEED to rebuild the normals. The current way to do it is to bake the transform and recalculate the normals. We also need to rebuild the bounding box (with the update function)).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYour idea is not a bad idea at all as it only update the normals. I_t_m just wondering if it is general enough to be included in the framework _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]