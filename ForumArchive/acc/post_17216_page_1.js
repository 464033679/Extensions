[{"Owner":"bbmario","Date":"2015-09-16T21:51:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Does anyone know any good examples of WebRTC-based multiplayer in Babylon? Something like different players moving capsules around. Kind of like this_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_\n_lt_/p_gt__lt_div class_eq__qt_ipsEmbeddedVideo_qt_ contenteditable_eq__qt_false_qt__gt__lt_div_gt__lt_iframe width_eq__qt_480_qt_ height_eq__qt_270_qt_ src_eq__qt_https_dd_//www.youtube.com/embed/NLnzlwCRjgc?feature_eq_oembed_qt_ frameborder_eq__qt_0_qt_ allowfullscreen_eq__qt_true_qt__gt__lt_/iframe_gt__lt_/div_gt__lt_/div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Syncing and interpolating_co_ etc._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"tips4design","Date":"2015-09-16T22:03:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Well_co_ I don_t_t thinking syncing and interpolating is really specific to the game framework you use or to the rendering engine. The principles are the same and not really hard to implement (extrapolate locally_co_ interpolate when you receive correct data from the other user/server)._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"bbmario","Date":"2015-09-17T12:01:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I didn_t_t mean specific to Babylon_co_ doesn_t_t matter_co_ just using a graphics engine to demonstrate the concept. It could be three.js or anything else. Since Babylon is turning more into a gameframework_co_ with example integrations with physics engines and so on_co_ it makes sense to have a networking example as well._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-17T12:05:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I would suggest to handle every network communications (ie _dd_ high or unpredictable latency compared to the render loop rate) in a dedicated webworker besides the BJS engine thread._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-09-17T13:31:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt_I agree that would be really great if Babylon added the network in its engine.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wub.png_qt_ alt_eq__qt__dd_wub_dd__qt__gt__lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_@Jerome_co_ I did not understand what you mean._lt_/div_gt__lt_br_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-09-17T13:58:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Also_co_ think putting network checking into the render loop_co_ might not be a good idea._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This seems better suited to an extension_co_ since web workers are usually in a different .js file anyway.  Isn_t_t there already a network related extension_co_ scoreboard_co_ that might be use-able / improvable for this purpose?  Or is this peer-to-peer_co_ not client-server?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"tips4design","Date":"2015-09-17T14:12:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_96984_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_17216_qt_ data-ipsquote-username_eq__qt_jerome_qt_ data-cite_eq__qt_jerome_qt_ data-ipsquote-timestamp_eq__qt_1442491516_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_I would suggest to handle every network communications (ie _dd_ high or unpredictable latency compared to the render loop rate) in a dedicated webworker besides the BJS engine thread._lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Why would you do that? It sounds like the overhead of transferring data to and from the web worker might cost more than actually computing a simple linear interpolation in the main thread (which is actually a simple division)._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]