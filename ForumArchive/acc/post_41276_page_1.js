[{"Owner":"matdav","Date":"2018-11-14T17:54:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi all_co__lt_br /_gt_\n\tin my project I_t_m using incremental loading in order to split large scene files in small pieces._lt_br /_gt_\n\tIn the incremental files creation I_t_m trying to use Draco encoding to reduce the file size and speed up the loading process (_lt_span lang_eq__qt_en_qt_ style_eq__qt_background-color_dd_transparent_sm_color_dd_rgb(34_co_34_co_34)_sm_font-family_dd_arial_co_ sans-serif_sm_font-size_dd_16px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_400_sm_letter-spacing_dd_normal_sm_min-height_dd_89px_sm_text-align_dd_left_sm_text-decoration_dd_none_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt_ xml_dd_lang_eq__qt_en_qt__gt__lt_span style_eq__qt_color_dd_rgb(34_co_34_co_34)_sm_font-size_dd_16px_sm_min-height_dd_0px_sm__qt__gt_certainly then should be implemented decoding when reading the file)_lt_/span_gt__lt_/span_gt_._lt_br /_gt_\n\tI_t_m using the following code but the resulting encoded data is larger than the original data.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI ask you first of all if the reasoning I_t_m doing makes sense and then if someone can explain to me where I_t_m wrong._lt_br /_gt_\n\tThanks a lot_co__lt_br /_gt_\n\tMatteo\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_createDelayLoadingFileData_dd_ function (meshOrGeometry_co_ isMesh) {\n    \n        var result _eq_ {\n            positions_dd_ meshOrGeometry.positions_co_\n            indices_dd_ meshOrGeometry.indices_co_\n            normals_dd_ meshOrGeometry.normals_co_\n        }_sm_\n\n        if (meshOrGeometry.uvs) {\n            result.uvs _eq_ meshOrGeometry.uvs_sm_\n        }\n\n        if (meshOrGeometry.uvs2) {\n            result.uvs2 _eq_ meshOrGeometry.uvs2_sm_\n        }\n\n        if (meshOrGeometry.colors) {\n            result.colors _eq_ meshOrGeometry.colors_sm_\n        }\n\n        if (meshOrGeometry.matricesIndices) {\n            result.matricesIndices _eq_ meshOrGeometry.matricesIndices_sm_\n        }\n\n        if (meshOrGeometry.matricesWeights) {\n            result.matricesWeights _eq_ meshOrGeometry.matricesWeights_sm_\n        }\n\n        if (isMesh &amp_sm_&amp_sm_ meshOrGeometry.subMeshes) {\n            result.subMeshes _eq_ meshOrGeometry.subMeshes_sm_\n        }\n\n        // ---------------------------------------------------------------------\n        // Test draco encoding\n        // ---------------------------------------------------------------------\n\n        const mesh _eq_ {\n            indices_dd_ new Uint32Array(result.indices)_co_\n            positions_dd_ new Float32Array(result.positions)_co_\n            normals_dd_ new Float32Array(result.normals)_co_\n            uvs_dd_ new Float32Array(result.uvs)\n        }_sm_\n\n        const encoderModule _eq_ DracoEncoderModule()_sm_\n        const encoder _eq_ new encoderModule.Encoder()_sm_\n        const meshBuilder _eq_ new encoderModule.MeshBuilder()_sm_\n        const dracoMesh _eq_ new encoderModule.Mesh()_sm_\n\n        const numFaces _eq_ mesh.indices.length / 3_sm_\n        const numPoints _eq_ mesh.positions.length_sm_\n        meshBuilder.AddFacesToMesh(dracoMesh_co_ numFaces_co_ mesh.indices)_sm_\n\n        meshBuilder.AddFloatAttributeToMesh(dracoMesh_co_ encoderModule.POSITION_co_\n            numPoints_co_ 3_co_ mesh.positions)_sm_\n        if (result.hasOwnProperty(_t_normals_t_)) {\n            meshBuilder.AddFloatAttributeToMesh(\n                dracoMesh_co_ encoderModule.NORMAL_co_ numPoints_co_ 3_co_ mesh.normals)_sm_\n        }\n        if (result.hasOwnProperty(_t_colors_t_)) {\n            meshBuilder.AddFloatAttributeToMesh(\n                dracoMesh_co_ encoderModule.COLOR_co_ numPoints_co_ 3_co_ mesh.colors)_sm_\n        }\n        if (result.hasOwnProperty(_t_uvs_t_)) {\n            meshBuilder.AddFloatAttributeToMesh(\n                dracoMesh_co_ encoderModule.TEX_COORD_co_ numPoints_co_ 3_co_ mesh.uvs)_sm_\n        }\n\n        var method _eq_ _qt_edgebreaker_qt__sm_ // test method\n        if (method _eq__eq__eq_ _qt_edgebreaker_qt_) {\n            encoder.SetEncodingMethod(encoderModule.MESH_EDGEBREAKER_ENCODING)_sm_\n        } else if (method _eq__eq__eq_ _qt_sequential_qt_) {\n            encoder.SetEncodingMethod(encoderModule.MESH_SEQUENTIAL_ENCODING)_sm_\n        }\n\n        const encodedData _eq_ new encoderModule.DracoInt8Array()_sm_\n        // Use default encoding setting.\n        const encodedLen _eq_ encoder.EncodeMeshToDracoBuffer(dracoMesh_co_\n            encodedData)_sm_\n        \n        // Copy encoded data to buffer.\n        const outputArray _eq_ []_sm_\n        for (let i _eq_ 0_sm_ i &lt_sm_ encodedLen_sm_ ++i) {\n            outputArray.push(encodedData.GetValue(i))_sm_\n        }\n\n        encoderModule.destroy(dracoMesh)_sm_\n        encoderModule.destroy(encodedData)_sm_\n        encoderModule.destroy(encoder)_sm_\n        encoderModule.destroy(meshBuilder)_sm_\n\n        result.dracoData _eq_ outputArray_sm_\n        result.dracoDataLen _eq_ outputArray.length_sm_\n\n        // ---------------------------------------------------------------------\n\n        return result_sm_\n    }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-11-14T18:03:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tPinging _lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/26831-bghgary/?do_eq_hovercard_qt_ data-mentionid_eq__qt_26831_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/26831-bghgary/_qt_ rel_eq__qt__qt__gt_@bghgary_lt_/a_gt__lt_/span_gt_ who did the Draco port for our glTF loader\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"bghgary","Date":"2018-11-14T18:14:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tBabylon currently only has support for Draco decompression. I unfortunately don_t_t have any experience using the encoder. It is probably better to ask this question here_dd_ _lt_a href_eq__qt_https_dd_//github.com/google/draco/issues_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/google/draco/issues._lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"matdav","Date":"2018-11-15T07:55:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOk_co_ thanks for your replies.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]