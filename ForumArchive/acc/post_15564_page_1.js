[{"Owner":"dbawel","Date":"2015-07-05T00:25:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello Babylonians_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I hope everyone is having a great weekend_co_ and not working like me.  I have a scene where I_t_m drawing on objects with textures using decal.  I was drawing on objects using multiple canvas_t_ onto a dynamic texture - however_co_ since this is a real-time multiple user app_co_ I_t_m not able to create additional canvas_t_ for each user who is on the session to allow unique colors (textures) to be drawn from remote events (the example below is single user and just a basic drawing function and minimal elements.)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The issue is of course an expected problem with this new draw function_dd_ as I add texture color to my scene objects_co_ it is using memory and decreasing my framerate to the pont where it becomes not a useful tool.  Is there a way for me to use a dynamic texture in this script using the same function (decal)_co_ or to instance the textures in a way to avoid memory usage for each pick point (draw)?  I would really like to use a dynamic texture so that I could save out each object_t_s texture image.  However_co_ I was doing this initially_co_ and I have many_co_ many colors (textures)_co_ as well as many users drawing together in real time on any object.  This doesn_t_t allow for me to use the canvas to pass color information (textures) to a dynamic texture on each object_co_ as I require multiple canvas_t_ for each remote user._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The following is a scene to be copied into the playground.  Unfortunately_co_ it is too many lines to save as a playground scene.  But just copy and paste_co_ and it will run.  _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_div_gt_var createScene _eq_ function () {_lt_/div_gt__lt_div_gt_var scene _eq_ new BABYLON.Scene(engine)_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_var camera _eq_ new BABYLON.ArcRotateCamera(_qt_Camera_qt__co_ -Math.PI/2_co_ 1.1_co_ 10_co_ new BABYLON.Vector3(2_co_ 0_co_ 0)_co_ scene)_sm__lt_/div_gt__lt_div_gt_//camera.attachControl(canvas_co_ true)_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_var hemilight _eq_ new BABYLON.HemisphericLight(_qt_hemi_qt__co_ new BABYLON.Vector3(0_co_ 1_co_ 0)_co_ scene)_sm__lt_/div_gt__lt_div_gt_hemilight.groundColor _eq_ BABYLON.Color3.Gray()_sm__lt_/div_gt__lt_div_gt_hemilight.specular _eq_ BABYLON.Color3.Black()_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_var face _eq_ BABYLON.Mesh.CreateSphere(_qt_sphere_qt__co_ 3.0_co_ 3.0_co_ scene)_sm__lt_/div_gt__lt_div_gt_face.scaling _eq_ new BABYLON.Vector3(1.0_co_1.3_co_1.0)_sm__lt_/div_gt__lt_div_gt_face.rotation _eq_ new BABYLON.Vector3(Math.PI / 2_co_ Math.PI / 5_co_ Math.PI / 2)_sm__lt_/div_gt__lt_div_gt_face.material _eq_ new BABYLON.StandardMaterial(_qt_sMat_qt__co_ scene)_sm__lt_/div_gt__lt_div_gt_face.material.diffuseTexture _eq_ new BABYLON.Texture(_qt__lt_a href_eq__qt_http_dd_//i75.photobucket.com/albums/i309/Athox/Scared_face.jpg_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//i75.photobucket.com/albums/i309/Athox/Scared_face.jpg_lt_/a_gt__qt__co_ scene)_sm__lt_/div_gt__lt_div_gt_face.material.diffuseTexture.hasAlpha _eq_ false_sm__lt_/div_gt__lt_div_gt_face.position _eq_ new BABYLON.Vector3(2_co_ 0_co_ 0)_sm__lt_/div_gt__lt_div_gt_face.material.diffuseTexture.uOffset _eq_ 1.0_sm__lt_/div_gt__lt_div_gt_face.material.diffuseTexture.vOffset _eq_ 1.85_sm__lt_/div_gt__lt_div_gt_face.material.diffuseTexture.uScale _eq_ 1.1_sm__lt_/div_gt__lt_div_gt_face.material.diffuseTexture.vScale _eq_ -1.0_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_var hat _eq_ new BABYLON.Mesh.CreateCylinder(_qt_cylinder_qt__co_ 4_co_ 3_co_ 3_co_ 5_co_ scene)_sm__lt_/div_gt__lt_div_gt_hat.scaling _eq_ new BABYLON.Vector3(0.4_co_ 0.5_co_ 0.4)_sm__lt_/div_gt__lt_div_gt_hat.rotation _eq_ new BABYLON.Vector3(Math.PI/4_co_Math.PI/9_co_-Math.PI/27)_sm__lt_/div_gt__lt_div_gt_hat.material _eq_ new BABYLON.StandardMaterial(_qt_Mat_qt__co_ scene)_sm__lt_/div_gt__lt_div_gt_hat.material.diffuseTexture _eq_ new BABYLON.Texture(_qt__lt_a href_eq__qt_http_dd_//st.depositphotos.com/1000635/3769/i/950/depositphotos_37695355-Seamless-yellow-sponge-texture-background..jpg_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//st.depositphotos.com/1000635/3769/i/950/depositphotos_37695355-Seamless-yellow-sponge-texture-background..jpg_lt_/a_gt__qt__co_ scene)_sm__lt_/div_gt__lt_div_gt_hat.position _eq_ new BABYLON.Vector3(2.7_co_ 1.5_co_ 0.9)_sm__lt_/div_gt__lt_div_gt_hat.setEnabled(true)_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_var draw_mat _eq_ new BABYLON.StandardMaterial(_qt_draw_mat_qt__co_ scene)_sm__lt_/div_gt__lt_div_gt_draw_mat.diffuseTexture _eq_ new BABYLON.Texture(_qt__lt_a href_eq__qt_http_dd_//i.imgur.com/f1ARb.png_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//i.imgur.com/f1ARb.png_lt_/a_gt__qt__co_ scene)_sm__lt_/div_gt__lt_div_gt_draw_mat.diffuseTexture.hasAlpha _eq_ true_sm__lt_/div_gt__lt_div_gt_draw_mat.zOffset _eq_ -.5_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_var isDown _eq_ false_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_var onPointerDown _eq_ function (evt) {_lt_/div_gt__lt_div_gt_if (evt.button !_eq__eq_ 0) {_lt_/div_gt__lt_div_gt_return_sm__lt_/div_gt__lt_div_gt_}_lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_isDown _eq_ true_sm__lt_/div_gt__lt_div_gt_var pickInfo _eq_ scene.pick(scene.pointerX_co_ scene.pointerY)_sm__lt_/div_gt__lt_div_gt_if (pickInfo.hit) {_lt_/div_gt__lt_div_gt_console.log(pickInfo.pickedMesh.name)_sm__lt_/div_gt__lt_div_gt_var decalSize _eq_ new BABYLON.Vector3(.1_co_ .1_co_ .1)_sm__lt_/div_gt__lt_div_gt_var newDecal _eq_ BABYLON.Mesh.CreateDecal(_qt_decal_qt__co_ pickInfo.pickedMesh_co_ pickInfo.pickedPoint_co_ pickInfo.getNormal(true)_co_ decalSize)_sm__lt_/div_gt__lt_div_gt_newDecal.material _eq_ dmat_sm__lt_/div_gt__lt_div_gt_}_lt_/div_gt__lt_div_gt_}_lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_var onPointerUp _eq_ function() { isDown _eq_ false_sm_ }_lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_var onPointerMove _eq_ function (evt) {_lt_/div_gt__lt_div_gt_if (evt.button !_eq__eq_ 0) {_lt_/div_gt__lt_div_gt_return_sm__lt_/div_gt__lt_div_gt_}_lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_var pickInfo _eq_ scene.pick(scene.pointerX_co_ scene.pointerY)_sm__lt_/div_gt__lt_div_gt_if(isDown) {_lt_/div_gt__lt_div_gt_console.log(pickInfo.pickedMesh.name)_sm__lt_/div_gt__lt_div_gt_var brush _eq_ new BABYLON.Vector3(.1_co_ .1_co_ .1)_sm__lt_/div_gt__lt_div_gt_var idraw _eq_ BABYLON.Mesh.CreateDecal(_qt_decal_qt__co_ pickInfo.pickedMesh_co_ pickInfo.pickedPoint_co_ pickInfo.getNormal(true)_co_ brush)_sm__lt_/div_gt__lt_div_gt_idraw.material _eq_ draw_mat_sm__lt_/div_gt__lt_div_gt_}_lt_/div_gt__lt_div_gt_}_lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_        canvas.addEventListener(_qt_pointerdown_qt__co_ onPointerDown_co_ false)_sm__lt_/div_gt__lt_div_gt_        canvas.addEventListener(_qt_pointerup_qt__co_ onPointerUp_co_ false)_sm__lt_/div_gt__lt_div_gt_        canvas.addEventListener(_qt_pointermove_qt__co_ onPointerMove_co_ false)_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_        scene.onDispose _eq_ function () {_lt_/div_gt__lt_div_gt_        canvas.removeEventListener(_qt_pointerdown_qt__co_ onPointerDown)_sm__lt_/div_gt__lt_div_gt_        canvas.removeEventListener(_qt_pointerup_qt__co_ onPointerUp)_sm__lt_/div_gt__lt_div_gt_        canvas.removeEventListener(_qt_pointermove_qt__co_ onPointerMove)_sm__lt_/div_gt__lt_div_gt_}_lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_    return scene_sm__lt_/div_gt__lt_div_gt_}_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_Hey DK - is there any way we might increase the # of characters to save a playground scene?  Who might have control over this?_lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_Thanks_co__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_DB_lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-07-05T08:47:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I don_t_t really have a solution at the moment_co_ but I tried to get your playground working._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The saving shouldn_t_t be a problem_co_ at least it worked for me_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#X1VDE_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#X1VDE_lt_/a_gt__lt_/p_gt__lt_p_gt_I think we already had a lot bigger playground scenes that worked well_co_ too. Maybe something wrong locally with your PC?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_strike_gt_One textures is missing since it got blocked by photobucket because of the same origin policy_dd__lt_/strike_gt__lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Image from origin _t__lt_a href_eq__qt_http_dd_//s75.photobucket.com_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//s75.photobucket.com_lt_/a_gt__t_ has been blocked from loading by Cross-Origin Resource Sharing policy_dd_ No _t_Access-Control-Allow-Origin_t_ header is present on the requested resource. Origin _lt_a rel_eq__qt_external nofollow_qt__gt__t_http_dd_//www.babylonjs-playground.com_t__lt_/a_gt_ is therefore not allowed access._lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt__lt_strong_gt_Edit_lt_/strong_gt__dd_ fixed in this version by using another url for that image_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#X1VDE%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#X1VDE#1_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And I got an error on Line 50_dd__lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Uncaught ReferenceError_dd_ dmat is not defined_lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_Not sure where that is supposed to be defined... maybe some piece of code missing here?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Otherwise it seems to work well _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-07-05T09:00:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@iceman - THanks for providing the feedback_co_ as this scene was a bit tempermental at first - for no apparent reason.  This was very odd... If I copied and pasted into the playground using Chrome_co_ the scene won_t_t load and I received all sorts of errors.  However_co_ If I place the post into edit mode_co_ and copy the script while in edit mode_co_ the scene loads without errors - except for a couple of reference errors that I might have expected (perhaps)_co_ but the scene does load all assets.  _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_OK - I think I figured it out - when copying_co_ only lines with code are to be copied and pasted.  Any empty lines with space and no code before or following the script body appear to consistantly cause errors._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This time_co_ I was also able to save a good playground scene - but cannot explain why_co_ as I received the message that the script was too large to save previously with no changes to the script whatsoever._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here is a playground scene that works now_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1UHBBD_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1UHBBD_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So please use this link to test the scene as it creates no errors.  I hope someone can help find a solution to my overhead problem - as well as the other issues as explained in the initial post requesting help._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_huh.png_qt_ alt_eq__qt__dd_huh_dd__qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-07-05T10:14:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I started thinking about it and played around in the playground. But seems like I don_t_t really know what I am doing_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#9U086_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#9U086_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have no clue how to convert the coordinates of the clicked point to the proper coordinates on the plane (or the sphere - even harder). But I think with a dynamic texture like that you should be able to get good performance even with alot of draw calls. Did you already try it out that way? Where did you get stuck and why did you switch to decals?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-07-05T10:25:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi iiceman_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I was using multiple canvas_t_ for each draw function_co_ and this is very specific to draw on a dynamic texture and doesn_t_t paing on non uniform texture mapped objects well.  Also_co_ since the app is real time multiuser_co_ I require 2 additional canvas_t_ for each multi user that logs on in addition to the ones used locally.  So the overhead becomes unmanageable and breaks and/or slows sown to a snails crawl and is also incompatible with any Gui extension with so many canvsas.  I hope that someone can show be how to use decals with a dynamic texture - as this woud be the best of all worlds.  So that is what I_t_m asking for help with.  if you read my initial post_co_ it goes into all of the issues to solve_co_ and what would be idea.  I hope you can help - it would be a huge help to me if someone can make a dynamic texture work with my decal draw function.  Otherwise_co_ perhaps I can instance the textures I_t_m drawing with to lower memory_co_ but I don_t_t know if this is possible.  But either possible solution would allow me to deliver on Monday which is my FINAL deadline.  I_t_ve missed everyone for almost a month_co_ as each method I use has a serious problem associated with it - a game breaker.  So I know there is a brilliant mind out there who can save my job on this one.  Otherwise_co_ I_t_ll have to conceed to the BJS Gods that this can_t_t simply be done for real time multiple users._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Cheers._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-07-05T12:35:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi DB_co_ good to see that you adopted my _qt_plenty of whitespace_qt_ suggestion. heh. Anyway_co_ I have some questions_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Have you seen ANY other webGL demos anywhere on the net... where multiple users are editing a texture on a webGL shape?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If not_co_ what would make you think that setting a Monday deadline on something never before done with webGL/JS... was a wise or attainable goal?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Do you honestly think that BJS is the problem?  Could it possibly be webGL_co_ browser_co_ or general JS that is the problem?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Did you have a contingency plan in place for IF the multiple context2D idea... ran into some showstoppers?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Has the person who has put you in fear of job loss... been briefed about how bleeding-edge and mid-evolution... webGL is?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It is my opinion that if you can get free of the handcuffs that you have somehow gotten yourself locked-into_co_ then some benchmark and proof of concept testing can be done_co_ and more knowledge/insight gained.  Plus_co_ you can also find WHICH area of the project is causing the logjam... webGL spec_co_ browser_co_ JS_co_ or_co_ least-likely_co_ BJS._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_To repeat something said earlier_co_ don_t_t expect forum users to climb aboard your panic.  I would tend to think that most forum folk are not here to find stress.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Sometimes situations are unavoidable_co_ but_co_ goodness_co_ DB... could you have placed yourself any more perfectly... under a ready-to-fall anvil?  (Like you have time to answer ANY of THESE questions_co_ eh?) _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m not helping the situation_co_ am I?  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Ok_co_ I_t_m off to do web searches for reasons why dynamic textures (context2d canvi) might be webGL/JS memory/performance hogs.  I_t_ll let you know if/when I find some goods.  I_t_m on it_co_ but try to get yourself out of that dangerous and fear-infested deadline cage_co_ eh?  It_t_s just plain cruel that you have been placed/forced into that position.... when trying something SO new and untested (imho)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//code.tutsplus.com/tutorials/html5-canvas-optimization-a-practical-example--active-11893_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//code.tutsplus.com/tutorials/html5-canvas-optimization-a-practical-example--active-11893_lt_/a_gt_  A little old_co_ but even _lt_u_gt_I_lt_/u_gt_ can almost understand it.  Not sure if anything there will help you_co_ DB... but I_t_m trying. Here_t_s another interesting one.  _lt_a href_eq__qt_http_dd_//html5.litten.com/understanding-save-and-restore-for-the-canvas-context/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//html5.litten.com/understanding-save-and-restore-for-the-canvas-context/_lt_/a_gt_  Wrangling context2d_t_s... sucks_co_ eh? _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-07-05T21:21:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Sorry_co_ have been offline pretty much the whole day... I fear I have no idea how to solve that problem of your_co_ sorry man _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ Drawing decal on a dynamic texture might be the same problem as drawing directly in the dynamic texture since you can_t_t really map the point in 3d space to the proper coordinates on that object_co_ I guess. I don_t_t see why the canvas should be the bottle neck here and why you would need multiple canvas. I still think it should be possible that everybody draws to the same canvas that is then  used as a dynamic texture on the object._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Maybe you can manage to make things a bit easier for a first presentable result. Maybe let the users draw on a 2d canvas and then use that instead of drawing directly onto the object? There are a bunch of tutorials for that out on the internet. And using that canvas as a texture should be doable_co_ right?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-07-05T23:38:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Rough week to have a deadline.  I am operating out of ignorance_co_ but that is not always bad._lt_/p_gt__lt_p_gt_First_co_ are you sure that it is not a network number of connections issue? Probably not_co_ but if it has not been eliminated you could be trying to solve the wrong problem._lt_/p_gt__lt_p_gt_One thing that might work is to have 1 canvas per connected player_co_ but that canvas is only on their machine?  The implication being that at each Decal that is created is then serialized and shipped to others.  Might also speed up due to all the code to make a decal.  Probably have to fork repository though.  I have never really liked the fact that basic meshes and ribbons are statics_co_ and not subclasses.  if they were you could just subclass Decals &amp_sm_ extend.  I looked up decals on a tablet_co_ with small screen.  looks like they are meshes. If not never mind. Must be the booze._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-07-06T00:07:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Or fork lite.  Just steal the createDecal function_co_ and change it_co_ so the decal can be transmitted to another machine_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-07-06T00:22:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Scrap that.  Just make a class of the arts to createDecal (use an id for sourcemesh).  Add toString() method &amp_sm_ a static fromString().  Also add an apply() to actually carry out createDecal().  _lt_/p_gt__lt_p_gt_Create an instance of arg class in mouse events_co_ toString() &amp_sm_ send_co_ then apply locally._lt_/p_gt__lt_p_gt_Receivers instance using fromString() then apply as well_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-07-06T03:23:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello Babylonians_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@ Wingnut - I appriciate the concern_co_ but I already have an application (yes_co_ the first one) that allows an unlimited # of users to draw remorely on a 3D object in real time.  _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@ iiceman - the multiple canvas_t_ are a problem as I need to display all remote user_t_s drawing in their own color - so I have to add a canvas (or more) per remote user to pass thier own unique textues to the dynamic texture._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I posted the 2D canvas dynamic drawing function (partially constructed of a function that joshcamas posted earlier) in an earlier post_co_ but changed to the code in this post as decals are so much simpler to use.  So the multiuser function is working perfectly - however_co_ I_t_m not able to draw on the screen from remote users with their selection of color.  So using decals is a good solution_co_ except the memory overhead is too much and the framerate drops with every stroke._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So the server and multiuser is working perfectly.  Please gnore any aspect of multiuser real time as I can implement this onto my node server in a few hours - regardless of the darw function.  If I don_t_t find a solution today_co_ I will simply use the decal function as it_t_s fine for demos - and will solve the memory overhead later.  I appriciate all of the advice and everyone looking at this_co_ and as I promised on this forum 2 weeks (or more) ago_co_ I_t_ll post the finished app.  I_t_ll go head and use as well as post the decal function multiuser real time app this week if I can_t_t find a better solution.  Either way_co_ the app is allot of fun to use._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If anyone has any thoughts in the meantime on how I might instance textures_co_ I_t_d really love the help.  Otherwise_co_ I also have a 2D drawing app on a dynamic texture working in real time without any frame rate loss - but this is limited in it_t_s use across many users remotely._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@DK - if you can implement the instance of textures_co_ this would be a huge help to me - providing I can limit my memory usage._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Cheers._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-07-06T14:00:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_co_ can you explain with the less words possible(_lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_) what do you mean by instances of textures?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-07-06T18:08:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi DK_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Perhaps I am asking for something that is already in Babylon.js.  If you look at my playground scene_co_ it places decals textures onto 3D objects.  However_co_ the beginning frame rate is 60fps_co_ and drops dramatically as decals are added.  If I could find a way to use decals as I use dynamic textures to where the memory is not used as color information is added to the dynamic texture_co_ this would be ideal.  So the idea was as objects are instanced_co_ I would like to instance textures - however_co_ I_t_m aware that the memory usage is not from cache of the texture repeatedly_co_ but in additive resolution to the object_t_s textures.  So perhaps a dynamic texture is the solution_co_ however_co_ I would need this to work with decals - or some function to add the new texture info (color info) to an object_t_s dynamic texture without passing color info through a canvas._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I hope this makes sense._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks DK._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-07-06T18:35:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This has a positive effect for me in PotentialFPS.  Basically just merge all the decals_co_ which can be done cause they are all the same material.  You are still adding vertices every decal_co_ but the number of draws is at least under control._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1UHBBD%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1UHBBD#1_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-07-06T19:32:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey DK_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I noticed why I_t_m drawing the frame rate drops dramatically as I draw.  However_co_ when I release the mouse to stop drawing_co_ the frame rate quickly returns to 60fps.  But for me_co_ this doesn_t_t help as with multiple users_co_ someone is always drawing - which keeps the framerate constantly low.  So I hope you can see my dilemma._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Any ideas?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-07-06T20:04:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I didn_t_t read your code so far_co_ but I guess you are updating or building a new texture each frame under the hood. _lt_/p_gt__lt_p_gt_This process is really expensive if you manage many textures (or canvas) at the same time._lt_/p_gt__lt_p_gt_Take a look at this old post _dd_ _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/11690-dynamic-texture-feedback/?hl_eq_%2Bdynamic+%2Btexture_qt__gt_http_dd_//www.html5gamedevs.com/topic/11690-dynamic-texture-feedback/?hl_eq_%2Bdynamic+%2Btexture_lt_/a_gt_ where I faced the same problem. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The workaround I found so far was _dd__lt_/p_gt__lt_p_gt_- to use the least canvas/texture as possible _eq_&gt_sm_ example _dd_ draw everything on a single bigger canvas and display only the right needed part_lt_/p_gt__lt_p_gt_- to update the texture less than each frame (say each 3_co_ 5 or 10 frames depending on how it behaves... for displaying text values_co_ 60 different values per second isn_t_t required _dd_ the human eye can_t_t understand anyway)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Maybe I will take some time some day to check in the Dynamic Texture Class code whether things could be optimized for the render loop. Some of the BJS functions weren_t_t designed/thought initially to be used within the render loop_co_ so there are still optimization possibilities here and there._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-07-06T20:45:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi Jerome_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I had reviewed this post recently to look for anything that might help_co_ but am trying to avoid passing textures from a 2D canvas - as I need at least one new canvas per remote user to pass their unique texture to the local user_t_s object.  This requires many canvas_t__co_ which I haven_t_t found a way to implement or manage without a whole lot of limitations._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you can look at the Babyln.js file to see what I might be able to achieve using the Dynamic Texture Class without passing textures through a canvas_co_ that would be really valuable._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Much thanks for considering this._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-07-06T21:13:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@DB_dd_ so when you click your mouse_co_ does the FPS drop due to drawing to your canvas for the dynamic texture or because of multiple picking?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If this is the former_co_ you can choose to update your canvas like just twice per second instead on every frame for instance._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What could be useful would be to have a playground with your current performance issue because right now there is no canvas on it _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-07-06T22:41:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m not using a dynamic texture anymore_co_ as I can_t_t manage a canvas for every remote user.  I_t_m using the decal function instead_co_ and it appears to be the processing time of the function which draws the decal on the 3D object_t_s texture._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-07-06T23:23:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Actually decals are not textures but meshes WITH textures _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-07-07T06:50:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I overlooked linking the playground scene using decals to draw on a 3D object._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1UHBBD_qt_ title_eq__qt_External link_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs...und.com/#1UHBBD_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Any changes one might make to keep the frame rare from tumbling?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-07-07T07:55:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m thinking about this approach ... keeping the mouse button pressed will create hundred of decals_co_ it to say meshes !_lt_/p_gt__lt_p_gt_Please open the debug mode and keep the button pressed _dd_ you can see the meshes number increasing so fast._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I don_t_t know if it_t_s the best way to do if you want the users can draw things._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Anyway_co_ I noticed that (using FF)_co_ if you draw a line and then release the mouse button for seconds_co_ the frame rate re-increases slowly to 60 fps while you don_t_t have too many meshes._lt_/p_gt__lt_p_gt_So the decrease seems correlated to both the number of meshes created and the delay between new pointerDown events (something to do with the events themselves or the memory allocated... this needs some investigation)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2015-07-07T08:30:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey DB_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This topic is intriguing_co_ _lt_em_gt_in a good way_lt_/em_gt_._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I think we all have some trouble understanding why exactly you switched to decals. As Jerome just said_co_ using decals means you will have hundreds_co_ then thousands of meshes pile up very quickly. Even if you merge those meshes along the way_co_ vertex count will go up in a frightening way. All in all_co_ I really don_t_t think this is a reasonable approach. Decals are supposed to be deleted along the way_co_ not stick around indefinitely._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_On the other hand_co_ using a Dynamic Texture seems to be the perfect approach. You will need uniformly mapped meshes_co_ which is easy to obtain with a modeling software. The pickResult.getTextureCoordinates had a bug in it but _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/pull/593_qt_ rel_eq__qt_external nofollow_qt__gt_it should be solved soon_lt_/a_gt_. This is what I_t_d call efficient mesh painting (thanks iiceman for the base PG)_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#9U086%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#9U086#3_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now_co_ I understand your problem stems from the multi-user aspect. If I understood correctly what you wrote_co_ your approach was to create one DynamicTexture for each mesh and for each user_co_ and basically display them on top of each other. How about_dd__lt_/p_gt__lt_p_gt_- the scene only uses one DynamicTexture per mesh (even better_dd_ one big DynamicTexture for the whole scene_co_ though this may be tricky for UV mapping meshes)_lt_/p_gt__lt_p_gt_- when a client starts drawing on a mesh_co_ a draw order is sent to the node server_lt_/p_gt__lt_p_gt_- your node server receives all the draw orders and dispatch them to all the clients (except the one from whom the order originated)_lt_/p_gt__lt_p_gt_- then all the clients_t_ scenes are modified according to the draw order they received from the node server_co_ effectively synchronising all the drawings_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This is actually more a problem of server-client programming_co_ and my solution is very simplistic_co_ but you get the point. Wouldn_t_t this allow you to use very few DynamicTexture in your scene_co_ and still allow many simultaneous users on your app?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Hope that helped._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-07-07T09:11:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_That_t_s exactly how I imagined it!!! ... awesome! Really_co_ exactly what I wanted to suggest_dd_ one dynamic texture per mesh_co_ everybody paints on that_co_ only the data for the draw call gets submitted_co_ and the coordinates get mapped from the mesh to the texture._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I just lagged the skills to do the a proper playground that actually works the way i intended (really good job jahow_co_ I am gonna check that out in detail later to understand what you did there_co_ that is very useful stuff I think!). And I obviously lagged the basic communication skills needed to explain the idea in an understandable way _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-07-07T15:43:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Can_t_t agree more_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]