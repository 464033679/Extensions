[{"Owner":"royibernthal","Date":"2016-07-30T12:04:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m compiling my TypeScript project into a single JS file_co_ at the moment by specifying an outFile in the compiler options. In my project each class is defined in a different file.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe problem is that classes that depend on each other are not concatenated in the output JS in the right order.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor example_co_ if I have class A that extends class B_co_ it_t_d mean class B would have to be compiled before class A.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(1)\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_class A extends B { } //error - can_t_t find B\n\nclass B { }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t(2)\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_class B { }\n\nclass A extends B { } //works as expected_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThe problem is the file order in TypeScript compile is not defined according to class dependencies_co_ resulting in many instances of (1).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt can be solved by manually defining the compile order with many lines of_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_/// &lt_sm_reference path_eq__qt_myFile.ts_qt_/&gt_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\thowever it is not ideal and can quickly become a headache in large projects.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe other option from what I read is to use external modules and be able to require/import relevant classes/files.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt sounds good_co_ but it seems to only take care of ASYNC loading during _lt_strong_gt_runtime_lt_/strong_gt_ of the required files after each ts file has been compiled into its own js file.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat I need is defining the right compile order according to class dependencies during _lt_strong_gt_compile time_lt_/strong_gt_ from ts to js.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI googled _qt_typescript compile order_qt_ and read thoroughly the first 10 results - meaning following references to turoials_co_ documentations_co_ videos_co_ etc...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt seems people have been experiencing the same problem but their questions have never been answered to satisfaction.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFrom what I understand it should be possible to do using the CommonJS external module_co_ but all I can understand from the answers is a general sense of what should be happening rather than a simple and straightforward answer of how to actually do it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you know the answer_co_ let_t_s solve this issue once and for all _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"b10b","Date":"2016-08-01T18:01:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYes_co_ I wish someone told me this when I started out with Typescript too.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHave a look at using _qt_webpack_qt_ and _qt_import_qt_ as direct replacements for _qt_outFile_qt_ and _qt_reference_qt_ respectively.  Initially this may feel wrong because it introduces another dependency to your project (webpack) and compiling becomes a separated task (e.g. running webpack on watch mode).  Webpack does a lot more than you may initially need_co_ but it also does that basic job well - bundling Typescript in the correct order (or rather order independent) and allowing module loading.  Here_t_s a basic tut_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.jbrantly.com/typescript-and-webpack/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.jbrantly.com/typescript-and-webpack/_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"royibernthal","Date":"2016-08-03T01:23:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4932-b10b/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4932_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4932-b10b/_qt_ rel_eq__qt__qt__gt_@b10b_lt_/a_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m just making sure - can this take care of compiling everything in the right order into a single javascript file? (not 1 js per 1 ts)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf so_co_ would it require me to place import statements similarly to the reference tag or would the dependencies be inferred automatically?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCan it handle dependency loops?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]