[{"Owner":"promontis","Date":"2018-06-24T11:29:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m currently building an interior design app using BabylonJS. The app is build with React and Redux and contains a BabylonJS canvas. When I add interior elements in the UI_co_ they are also placed in the 3d scene. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBy adding an interior element_co_ an action (stating what has changed) is published from React to Redux_co_ where the redux store/state is being updated in a reducer using the action. I_t_ve tried updating the 3d scene according to the updated state in Redux_co_ but it gets messy pretty quickly since you have to figure out what has changed. Since then I moved to updating the 3d scene in the reducer by using the action_co_ since that describes what should change. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHow I update the scene using Redux_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m using the Babylonjs React component as described here_dd_ _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/resources/babylonjs_and_reactjs_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/resources/babylonjs_and_reactjs_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen the component is mounted_co_ I also set a global scene variable_co_ so that I can access the scene in my reducer. In the reducer I map the action to BabylonJS calls for creating meshes/materials/etc. The interior elements all have ids and I set those ids to the meshes/materials_co_ so that I can later update the meshes/materials when an interior element is updated. This seems to work great_co_ and also be in line with what I_t_ve been reading in this forum_co_ as people are recommending to use plain vanilla BabylonJS calls.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSince then_co_ I_t_ve got a requirement that the scene should not always be visible in the UI (it currently is)_sm_ it should be in a separate tab. Now the problem is that the canvas isn_t_t loaded until I visit that part of the UI_co_ thus the global scene variable is never set_co_ and the reducer can_t_t update the scene (it is null). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow I try to actually formulate a question around this problem_co_ but I find it hard to do so. I am unsure if my current setup on how I route Redux actions to BabylonJS is the correct one_sm_ it is plain vanilla BabylonJS_co_ but I_t_ve seen implementations on this forum and Github where people use a more declarative/ReactJS way of constructing their scene. I_t_ve also read various posts on this forum stating that you should not use ReactJS with BabylonJS_co_ because of performance reasons as you need to recreate the whole scene_sm_ best would be the update the already created meshes/materials like I_t_m doing now. Furthermore_co_ I_t_ve also seen people recommending to implement an Entity-Component-System (ECS) around BabylonJS_co_ but from what I understand_co_ that recreates the whole scene as well.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHow would you tackle this problem?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThnx_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMichel\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2018-06-24T13:07:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/31718-promontis/?do_eq_hovercard_qt_ data-mentionid_eq__qt_31718_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/31718-promontis/_qt_ rel_eq__qt__qt__gt_@promontis_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI don_t_t know how familiar you are with working in react or preact_co_ however_co_ it sounds like you know what you_t_re doing. You must be declaring your canvas in the index.html file_co_ however_co_ there_t_s allot of declaration that need to happen in your _t_app_co_js_t_ files. Also_co_ there could easily be an issue with styling - which sounds just as likely. Without viewing the full code_co_ as I hope you know - it_t_s impossible to debug. In my opinion_co_ forget about the documentation for using react.js with WebGL_co_ and simply create your canvas_co_ make certain it appears when you need_co_ and then built the WebGL code using the virtual DOM in a seperate file. Always works for me... so far.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-06-24T15:36:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tTo answer your question_co_ all of your scene state needs to be in the reducer and you need a way to restore/hydrate a scene from that state.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI maintain the whole scene in the reducer_co_ so I can even do/undo.  I have a 3D level builder that maintains dual state - in Redux and also in the BabylonJS scene.  That is not ideal as they can get out of sync with bugs_co_ but since I need to be able to save state then go backwards maintaining the state only outside of the reducer did not make sense for my scenario and I did not want the reducer to need access to objects in my scene_co_ so my objects generate state to be able to restore themselves as well.  Sort of follows the memento design pattern.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEven though my BabylonJS game that uses Redux is a turn-based game - the fact that physics is involved meant with this design a reliance on two-way communication.  That_t_s why I needed a redux middleware to intercept redux events in my BabylonJS scene.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI like to think of it more as an Event Sourced system where the state of changes can be restored into a scene. Like hydrating a series of events in CQRS view model.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"promontis","Date":"2018-06-24T18:15:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/?do_eq_hovercard_qt_ data-mentionid_eq__qt_25365_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/_qt_ rel_eq__qt__qt__gt_@brianzinn_lt_/a_gt_  do you perhaps have a small code snippet available? Seems like you already figured this out! _lt_span_gt__lt_span_gt__dd_)_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_span_gt_If I understand you correctly_co_ would it work if I were to create or use some kind of redux middleware (perhaps https_dd_//www.npmjs.com/package/redux-action-replay-middleware) that stores all the actions. Then_co_ when the scene is mounted on the screen_co_ I would replay the actions to restore the scene. Indeed_co_ much like CQRS. _lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_span_gt_Did you build the redux middleware yourself or did you use an existing one? _lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2018-06-24T20:26:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/?do_eq_hovercard_qt_ data-mentionid_eq__qt_25365_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/_qt_ rel_eq__qt__qt__gt_@brianzinn_lt_/a_gt__co_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/31718-promontis/?do_eq_hovercard_qt_ data-mentionid_eq__qt_31718_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/31718-promontis/_qt_ rel_eq__qt__qt__gt_@promontis_lt_/a_gt__co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs often is the case_co_ I simply glanced over the description - and didn_t_t fully digest the issue. Obviously an issue with Redux_co_ and as was mentioned above_sm_ I_t_d also like to see any available code from _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/?do_eq_hovercard_qt_ data-mentionid_eq__qt_25365_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/_qt_ rel_eq__qt__qt__gt_@brianzinn_lt_/a_gt_ which demonstrates the capabilities of the dual state and the structure which allows do/undo. This would also help me greatly_sm_ if he_t_s able to share enough code to make sense of the unique approach described. My questions are exactly the same as the post above. I_t_m guessing he doesn_t_t have time to write descriptions for code snippets_co_ but I_t_ll take what I can get. This is one of the most interesting posts I_t_ve read in quite a while...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheers_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"promontis","Date":"2018-06-24T20:53:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/?do_eq_hovercard_qt_ data-mentionid_eq__qt_11286_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/_qt_ rel_eq__qt__qt__gt_@dbawel_lt_/a_gt_ yeah_co_ I was wondering if my question was clear enough _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m mostly a backend developer_co_ so when _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/?do_eq_hovercard_qt_ data-mentionid_eq__qt_25365_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/_qt_ rel_eq__qt__qt__gt_@brianzinn_lt_/a_gt_ made a comparison with CQRS_co_ I could visualize how that would work. I think most people struggle with how to hook up the scene state with external state or actions/events. I_t_ve searched the whole forum for an answer_co_ but couldn_t_t find a concrete enough example. I did find the recommendations as posted earlier.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2018-06-25T01:34:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/31718-promontis/?do_eq_hovercard_qt_ data-mentionid_eq__qt_31718_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/31718-promontis/_qt_ rel_eq__qt__qt__gt_@promontis_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve only been working in React/Redux for about 6 months. Delivered projects at Sony_co_ but still learning. I hope _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/?do_eq_hovercard_qt_ data-mentionid_eq__qt_25365_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/_qt_ rel_eq__qt__qt__gt_@brianzinn_lt_/a_gt_ is able to post a few code bits. Sure would help me...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2018-06-25T01:54:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/31718-promontis/?do_eq_hovercard_qt_ data-mentionid_eq__qt_31718_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/31718-promontis/_qt_ rel_eq__qt__qt__gt_@promontis_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tActually_co_ I shouldn_t_t have told you to ignore the babylon docs for react_co_ as that_t_s the middle-ware I_t_ve used since I_t_ve been working with React. You had said you read the docs and still needed answers. I_t_ll attach a bit of code with good commenting using the _t_react-babylonjs_t_ middle ware_co_ and hope it might provide some insight. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/applications/core/interface/file/attachment.php?id_eq_18862_qt_ data-fileid_eq__qt_18862_qt_ rel_eq__qt__qt__gt_electron_bck2.txt_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-06-25T06:39:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_219334_qt_ data-ipsquote-contentid_eq__qt_38437_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1529891654_qt_ data-ipsquote-userid_eq__qt_11286_qt_ data-ipsquote-username_eq__qt_dbawel_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t4 hours ago_co_ dbawel said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI_t_ll attach a bit of code with good commenting using the _t_react-babylonjs_t_ middle ware\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tYes_co_ that_t_s my npm_co_ but your code sample isn_t_t using the middleware for propogating state to BabylonJS.  I did go through many iterations making different mistakes before coming to my current conclusions_co_ so am excited to see how these fare against other applications.  My original inspiration was largely the _qt_Time Travel_qt_ seminal talk by Dan Abramov.  If you come up with a use case then I_t_m happy to build a repo - maybe a TODO app_sm_ I can explain here_co_ but there are some caveats better shown in code.  I_t_m away from computer for the next couple of days.  cheers.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2018-06-25T17:43:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/?do_eq_hovercard_qt_ data-mentionid_eq__qt_25365_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/_qt_ rel_eq__qt__qt__gt_@brianzinn_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDo you ever make use of _t_react-thunk_t_? I_t_m considering a test_co_ but not sure what type of project/scene might take advantage of this. Also_co_ any experience with preact? I_t_m wondering if I should apply a component such as _t__lt_span style_eq__qt_background-color_dd_#eff0f1_sm_color_dd_#242729_sm_font-size_dd_13px_sm_text-align_dd_left_sm__qt__gt_preact-compat_t_. Any experience with this?_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_#eff0f1_sm_color_dd_#242729_sm_font-size_dd_13px_sm_text-align_dd_left_sm__qt__gt_I checked out your Git-Hub Repro_co_ and now I know where I_t_d like to be as it relates to React/Preact experience level one day..._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_#eff0f1_sm_color_dd_#242729_sm_font-size_dd_13px_sm_text-align_dd_left_sm__qt__gt_Thanks_co__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_#eff0f1_sm_color_dd_#242729_sm_font-size_dd_13px_sm_text-align_dd_left_sm__qt__gt_DB_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"promontis","Date":"2018-06-25T18:39:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/?do_eq_hovercard_qt_ data-mentionid_eq__qt_25365_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/_qt_ rel_eq__qt__qt__gt_@brianzinn_lt_/a_gt_ If you can create a repo for a todo app_co_ that would be awesome! I would imagine that you_t_d have a React app where you can add todo items. Every todo item is just a string_co_ and prints in react via an unsorted list. In BabylonJS we could create a box for each todo item_co_ and stack it on top of each other. That would probably be enough to show your solution_co_ right?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2018-06-25T18:53:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/31718-promontis/?do_eq_hovercard_qt_ data-mentionid_eq__qt_31718_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/31718-promontis/_qt_ rel_eq__qt__qt__gt_@promontis_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHave you checked out _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/?do_eq_hovercard_qt_ data-mentionid_eq__qt_25365_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/_qt_ rel_eq__qt__qt__gt_@brianzinn_lt_/a_gt__t_s Github Repo for using React/Redux? It_t_s excellent!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-06-26T03:18:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_219424_qt_ data-ipsquote-contentid_eq__qt_38437_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1529948597_qt_ data-ipsquote-userid_eq__qt_11286_qt_ data-ipsquote-username_eq__qt_dbawel_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t9 hours ago_co_ dbawel said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tDo you ever make use of _t_react-thunk_t_?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tNo_co_ I always use react-saga instead.  Thunk to me has side-effects_co_ which breaks the rules of writing reducers in a _qt_functional_qt_ way.  I can also write tests for redux-saga (ie_dd_ mock return data from an ajax call) - it_t_s a bit of a hurdle to learn how to test generator functions_co_ but I have written some fairly complex react apps using sagas.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_219435_qt_ data-ipsquote-contentid_eq__qt_38437_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1529951994_qt_ data-ipsquote-userid_eq__qt_31718_qt_ data-ipsquote-username_eq__qt_promontis_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t8 hours ago_co_ promontis said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tIf you can create a repo for a todo app\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI will.  Give me a bit of time as I am quite busy this week. Looking forward to your feedback.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"promontis","Date":"2018-06-26T07:53:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span_gt_@dbawel _lt_/span_gt_I_t_ve also dropped redux-think in favor of react-saga. Same arguments.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t@brianzinn no problem... take your time. Was thinking about this today in the car... the use case doesn_t_t show how your re-hydrate the scene_co_ right? Should we add the requirement that there should be a button that removes the canvas and add it again? Feel free to add/remove requirements if needed... I think you know best what requirements will result in the best code communicating your solutions. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2018-06-26T15:28:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/31718-promontis/?do_eq_hovercard_qt_ data-mentionid_eq__qt_31718_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/31718-promontis/_qt_ rel_eq__qt__qt__gt_@promontis_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI didn_t_t want to take away your your answer as a top tier on the forum under your name_co_ however_co_ you made it clear that you would be away from the forum for a couple o days... and still you_t_re willing to help others. My respect goes out to you 100 fold._lt_span class_eq__qt_ipsEmoji_qt__gt_😀_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI hope you don_t_t get inundated with React/Preact questions...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBy the way_co_ I LOVE this forum!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-06-27T16:38:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_219500_qt_ data-ipsquote-contentid_eq__qt_38437_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1529999608_qt_ data-ipsquote-userid_eq__qt_31718_qt_ data-ipsquote-username_eq__qt_promontis_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 6/26/2018 at 12_dd_53 AM_co_ promontis said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tthe use case doesn_t_t show how your re-hydrate the scene_co_ right?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThere will be multiple routes_co_ so the component will be mounted/unmounted.  It_t_s the reducer that maintains minimum state - I_t_m assuming you maintain your _qt_Single Page Application_qt_ throughout and that state is available when switching tabs in your app.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-06-30T08:50:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI created an example that shows an unloaded scene being reloaded with the todos_co_ which is your original request.  Make sure you are using the NavLink from _t_react-router-dom_t_ and not from _t_reactstrap_t_ - that briefly stumped me.   The react and babylonJS are kept in sync.  There are bugs lurking if you use a filter other than _qt_show_all_qt__co_ but wanted to share as it_t_s 2am!  It_t_s a copy of _t_create react app_t_ + react_redux simple example + babylonJS_co_ so 3 commits_sm_ 1 for each phase to make it easier to follow.  I ended up going a different way in many respects with my 3d level builder (http_dd_//robolo.co)_co_ but want to share this simplified way._lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/brianzinn/create-react-app-babylonjs_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/brianzinn/create-react-app-babylonjs_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"promontis","Date":"2018-06-30T11:07:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAwesome sample! Thnx so much for this! \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBasically you are using the normal Redux React flow (mapStateToProps) to pass the state and build up the initial scene_co_ but only when the scene is mounted. New todo_t_s are still being mapped to props_co_ but the scene is not mounted again_co_ so those won_t_t be recreated_co_ which is a good thing. Since new todo_t_s won_t_t be processed_co_ you subscribe to the todo actions_co_ and process them yourself.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYour 3d level builder looks super cool btw! Do you have some pointers on what you end up doing differently for it? I_t_m especially interested in the undo/redo functionality. I_t_m thinking of using _lt_a href_eq__qt_https_dd_//github.com/powtoon/redux-undo-redo_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/powtoon/redux-undo-redo_lt_/a_gt_ for this_co_ what do you think? It is publishing undo-actions when you undo_co_ which will end up both in the store (for when the scene is mounted) and in the subscribers. Should work right?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-06-30T17:16:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI haven_t_t looked into that project before.  There is also a basic sample of undo in the redux repo.  I implemented my redux routing to be able to use something like this or redux dev tools (even docked)_dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/reduxjs/redux/tree/master/examples/todos-with-undo_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/reduxjs/redux/tree/master/examples/todos-with-undo_lt_/a_gt__lt_br /_gt_\n\t_lt_br /_gt_\n\tWith your interior design app_co_ you are faced with the same kind of issues that I have thought through.  When you_co_ for example_co_ spin a couch 90° clockwise - when you undo that you really want a compensating action in BabylonJS.  Same as a compensating entry in accounting.  I like how Event Sourced systems are write only_co_ but I don_t_t think we can/need do that - we are allowed to forget the actions we have undone once we _qt_do_qt_ another action_co_ right?  Combinations of translations and rotations are very order dependent!!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat I ended up doing differently mainly was add complexity by maintaining the entire state using redux-saga and pushing some state into my objects (for serializing the scene for _qt_save_qt_ functionality).  You can save 3d levels you create and load them on another computer later.  I_t_m adding and organizing objects in a scene_co_ so we share a similar goal.  I_t_ve spent more time rebuilding than adding features!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWell_co_ that was a bit of blabbering.  I_t_m happy to work with you on building the sample out to a useful undo application - we may need to change from TODO to a more real world concept.  Not sure if it will be useful as a reference application as there are lots of use cases.  I_t_d like to have a more useful scenario project and GUI Slider for time travel as an end goal._lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"promontis","Date":"2018-07-09T17:16:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tQuote\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t_lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_With your interior design app_co_ you are faced with the same kind of issues that I have thought through.  When you_co_ for example_co_ spin a couch 90° clockwise - when you undo that you really want a compensating action in BabylonJS.  Same as a compensating entry in accounting.  I like how Event Sourced systems are write only_co_ but I don_t_t think we can/need do that - we are allowed to forget the actions we have undone once we _qt_do_qt_ another action_co_ right?  Combinations of translations and rotations are very order dependent!!_lt_/span_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tFrom what I can see_co_ this is how _lt_a href_eq__qt_https_dd_//github.com/powtoon/redux-undo-redo_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/powtoon/redux-undo-redo_lt_/a_gt_ works. It works differently than other redux-undo libraries in that it throws compensating actions like you described!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyhow_co_ if successfully integrated your sample in my own interior design app... it works great! Thnx for the help!! \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-07-09T20:33:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for sharing - I hadn_t_t actually taken the time to look at the repo_co_ so my bad there!  Did you end up using redux-undo-redo?  I am trying to think of a simple scenario for updating that sample github babylonJS repo with undo/redo functionality.  Maybe just a simple mesh that can be rotated and translated with React and BabylonJS buttons - seems like a TODO app is too trivial as the scene can be generated too easily from state.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"promontis","Date":"2018-07-10T11:17:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_ve not yet used r_lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_edux-undo-redo_co_ but will try to use it in a couple of weeks. I currently have one problem with (re)calculations and the order in which the subscribers and the reducers are being called_sm_ I_t_m going to handle the actions in redux-saga_co_ and publish _t_success_t_ actions. These _t_success_t_ actions will be handled by the subscribers_co_ so that the order of handling is correct again (reducer need to do work before the subscriber)._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_Will let you know if it works._lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"promontis","Date":"2018-07-10T19:28:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tTo correct the order of actions_co_ I now do_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_export default function* rootSaga() {\n  yield all([\n    modelingSagas.watch()_co_\n    calculationSagas.watch()_co_\n    previewSagas.watch()_co_\n  ])_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t- the modelingSagas fetches and initializes the initial model.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- the calculationSagas can recalculate the model when values are changed \n_lt_/p_gt_\n\n_lt_p_gt_\n\t- the previewSagas listens on actions on the model and dispatches one action named _t_updatePreview_t_ which contains the last state of the model and the originalAction. As in_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_export function* watch() {\n    yield takeEvery(modelingTypes.MODEL_INSTANCE_CREATE_co_ updatePreview)_sm_\n    yield takeEvery(modelingTypes.MODEL_INSTANCE_UPDATE_PROPERTY_co_ updatePreview)_sm_\n    yield takeEvery(modelingTypes.MODEL_INSTANCE_UPDATE_ARRAYPROPERTY_co_ updatePreview)_sm_\n    yield takeEvery(modelingTypes.MODEL_INSTANCE_ADD_TO_ARRAYPROPERTY_co_ updatePreview)_sm_\n    yield takeEvery(modelingTypes.MODEL_INSTANCE_UPDATE_COMPONENTPROPERTY_co_ updatePreview)_sm_\n    yield takeEvery(modelingTypes.MODEL_INSTANCE_DELETE_PROPERTY_co_ updatePreview)_sm_\n}\n\nfunction* updatePreview(action) {\n    const state _eq_ yield select()_sm_\n    var house _eq_ state.getIn([_t_modeling_t__co_ _t_instance_t__co_ _t_house_t_]).toJS()_sm_\n    yield put({ type_dd_ _t_updatePreview_t__co_ house_dd_ house_co_ originalAction_dd_ action })_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tNotice the yield select() which gets the last updated state. I tried to do it via props_co_ but it doesn_t_t update when I want it to update. With redux-saga I have a lot more fine-grained control over what happens when.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen this is my editor code_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_ this.actionHandler _eq_ (action) _eq_&gt_sm_ {\n      if (action.type _eq__eq__eq_ _t_updatePreview_t_) {\n        ComponentReducer(action.house_co_ action.originalAction_co_ this.scene)_sm_\n      }\n    }_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tSo_co_ I only handle the updatePreview action. The ComponentReducer is updating BabylonJS. Note it is not actually a redux reducer... I might need to change that name _lt_span_gt__lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe ComponentReducer basically switches on the (original)action and update BabylonJS accordingly. action.house is used for calculation.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-07-10T20:17:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI don_t_t have a ComponentReducer concept or direct communication from my sagas to BabylonJS.  I ended up communicating with events instead.  I think I started your way and ended up with lots of race conditions.  ie_dd_ maybe the _qt_request_qt_ runs an animation or is slow to load the model/material and is created later_co_ so not available for modifications.  Also_co_ I am generally following the redux-saga advice and avoiding Select as your updatePreview() uses_dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/redux-saga/redux-saga/tree/master/docs/api#notes-12_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/redux-saga/redux-saga/tree/master/docs/api#notes-12_lt_/a_gt__lt_br /_gt_\n\t_lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#24292e_sm_font-size_dd_16px_sm__qt__gt_Preferably_co_ a Saga should be autonomous and should not depend on the Store_t_s state._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tie_dd__lt_br /_gt_\n\tmodelingTypes.MODEL_INSTA﻿NCE_CREATE_REQUEST (listened to by BabylonJS_co_ ignored by Saga)_lt_br /_gt_\n\tmodelingTypes.MODEL_INSTA﻿NCE_CREATED (generated by babylonJS_co_ listened to by saga and reducer - ** you can add BabylonJS _qt_id_qt_ to action for hash lookups/dictionary/maps - even when rehydrating your scene).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTense has significance to help me figure out what is going on when I revisit the code - so xx_REQUEST is present tense and xx_CREATED is past tense.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI never rebuild my scenes as it is too slow_co_ but this may be my downfall as I do have a complex DUAL state sync going on!  Anyway_co_ the main thing is that you have it working_co_ which is great.  Managing dual-state is very error prone_co_ so I am not recommending it - it_t_s a pain point that I am searching for a solution to.  Thank-you for sharing your progress.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"promontis","Date":"2018-07-11T13:26:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYeah_co_ I stumbled upon the same advice of redux-saga saying I should not depend on the Store state. Still figuring out if I can adhere to that advice. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe problem I currently have is that I need to do calculations. Not only simple ones_co_ but also over the whole model tree. To do recalculations I need to have a dependency graph for the calculations_co_ which can_t_t easily be expressed by default redux/react ways_sm_ AFAIK normally calculations are done in selectors_co_ but those are mainly localized calculations. Furthermore_co_ and probably the most important reason_co_ selectors do not go hand-in-hand with what BabylonJS wants_sm_ it needs actions/events_co_ as in it needs to be updated in an imperative way_co_ not a declarative way.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFrom what I understand in your example with the xx_REQUEST and xx_CREATED is that you send actions (commands_co_ your xx_request) to BabylonJS. BabylonJS then processes those actions and publishes created actions (events_co_ your xx_created). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI don_t_t think that will work in my app_co_ as I have both a 3d and a 2d scene (which would publish that it is created?). It might be different for your app. In my app the model is where commands are send to_co_ as it also is responsible for denying invalid commands. When the model is updated_co_ it sends events to my view/read models_co_ which are the 3d and 2d scene_co_ but also other textual representations of that some model (like a financial overview_co_ and a planning).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI don_t_t also don_t_t think we can work around not having dual state. Heck_co_ I even have three states. However_co_ the model is always in control (via reducers and saga). Calculations and recalculations also only apply to the model. Ofcourse_co_ it will eventually update babylonjs (and the 2d scene)_co_ but I don_t_t see any other way except than having babylonjs wrapped in react and build the scene in a declarative way. Otherwise_co_ we will probably always have more than one state.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve found that I have a lot more control when I push all logic to the saga. I think I can do all animations based on the action data_co_ but I_t_m unsure yet. The nice thing is that you can create a specific saga for handling BabylonJS_co_ and dispatch custom babylonjs actions_co_ on which only babylonjs will react. With this I seem to have a lot more control on when BabylonJS needs to update what. But like I said_co_ I_t_m unsure on how animations fit in this.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]