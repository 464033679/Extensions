[{"Owner":"dbs2000","Date":"2015-06-24T16:09:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Is panning in Babylon js possible now? I had seen a question on this topic that was posted in Jan. Since then I could not find anything that suggests that panning is supported. I had used threejs before where we could do panning by doing right click._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Also I wanted to check if I can trap click event on a line. I tried _qt_registerAction_qt_ with _qt_BABYLON.ActionManager.OnPickTrigger_qt_ but that did not work for line._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-06-24T16:43:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ll try to pull @lucraaco in to get more info about the panning stuff_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For lines_co_ this is not supported so far _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Luaacro","Date":"2015-06-25T15:00:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello dbs2000 !_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m focusing my development on it and I_t_ll give you the code snippet when it_t_s done _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Luaacro","Date":"2015-06-26T07:30:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello dbs2000 !_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You_t_ll find a code snippet._lt_/p_gt__lt_p_gt_I took the BABYLON.ArcRotateCamera class and added panning._lt_/p_gt__lt_p_gt_Important lines are in lines 158-183_co_ and lines 123-125 _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_module BABYLON {    var eventPrefix _eq_ Tools.GetPointerPrefix()_sm_    export class PanningCamera extends TargetCamera {        public inertialAlphaOffset _eq_ 0_sm_        public inertialBetaOffset _eq_ 0_sm_        public inertialRadiusOffset _eq_ 0_sm_        public lowerAlphaLimit _eq_ null_sm_        public upperAlphaLimit _eq_ null_sm_        public lowerBetaLimit _eq_ 0.01_sm_        public upperBetaLimit _eq_ Math.PI_sm_        public lowerRadiusLimit _eq_ null_sm_        public upperRadiusLimit _eq_ null_sm_        public angularSensibility _eq_ 1000.0_sm_        public wheelPrecision _eq_ 3.0_sm_        public pinchPrecision _eq_ 2.0_sm_        public keysUp _eq_ [38]_sm_        public keysDown _eq_ [40]_sm_        public keysLeft _eq_ [37]_sm_        public keysRight _eq_ [39]_sm_        public zoomOnFactor _eq_ 1_sm_        public targetScreenOffset _eq_ Vector2.Zero()_sm_        public pinchInwards _eq_ true_sm_        public allowUpsideDown _eq_ true_sm_        private _keys _eq_ []_sm_        public _viewMatrix _eq_ new Matrix()_sm_        private _attachedElement_dd_ HTMLElement_sm_        private _localDirection_dd_ Vector3_sm_        private _transformedDirection_dd_ Vector3_sm_        private _isRightClick_dd_ boolean _eq_ false_sm_        private _lastPanningPosition_dd_ Vector2 _eq_ new Vector2(0_co_ 0)_sm_        private _onContextMenu_dd_ (e_dd_ PointerEvent) _eq_&gt_sm_ void_sm_        private _onPointerDown_dd_ (e_dd_ PointerEvent) _eq_&gt_sm_ void_sm_        private _onPointerUp_dd_ (e_dd_ PointerEvent) _eq_&gt_sm_ void_sm_        private _onPointerMove_dd_ (e_dd_ PointerEvent) _eq_&gt_sm_ void_sm_        private _wheel_dd_ (e_dd_ MouseWheelEvent) _eq_&gt_sm_ void_sm_        private _onMouseMove_dd_ (e_dd_ MouseEvent) _eq_&gt_sm_ any_sm_        private _onKeyDown_dd_ (e_dd_ KeyboardEvent) _eq_&gt_sm_ any_sm_        private _onKeyUp_dd_ (e_dd_ KeyboardEvent) _eq_&gt_sm_ any_sm_        private _onLostFocus_dd_ (e_dd_ FocusEvent) _eq_&gt_sm_ any_sm_        public _reset_dd_ () _eq_&gt_sm_ void_sm_        // Collisions        public onCollide_dd_ (collidedMesh_dd_ AbstractMesh) _eq_&gt_sm_ void_sm_        public checkCollisions _eq_ false_sm_        public collisionRadius _eq_ new Vector3(0.5_co_ 0.5_co_ 0.5)_sm_        private _collider _eq_ new Collider()_sm_        private _previousPosition _eq_ Vector3.Zero()_sm_        private _collisionVelocity _eq_ Vector3.Zero()_sm_        private _newPosition _eq_ Vector3.Zero()_sm_        private _previousAlpha_dd_ number_sm_        private _previousBeta_dd_ number_sm_        private _previousRadius_dd_ number_sm_        //due to async collision inspection        private _collisionTriggered_dd_ boolean_sm_        constructor(name_dd_ string_co_ public alpha_dd_ number_co_ public beta_dd_ number_co_ public radius_dd_ number_co_ public target_dd_ any_co_ scene_dd_ Scene) {            super(name_co_ Vector3.Zero()_co_ scene)_sm_            if (!this.target) {                this.target _eq_ Vector3.Zero()_sm_            }            this.getViewMatrix()_sm_        }        public _getTargetPosition()_dd_ Vector3 {            return this.target.position || this.target_sm_        }        // Cache        public _initCache()_dd_ void {            super._initCache()_sm_            this._cache.target _eq_ new Vector3(Number.MAX_VALUE_co_ Number.MAX_VALUE_co_ Number.MAX_VALUE)_sm_            this._cache.alpha _eq_ undefined_sm_            this._cache.beta _eq_ undefined_sm_            this._cache.radius _eq_ undefined_sm_            this._cache.targetScreenOffset _eq_ undefined_sm_        }        public _updateCache(ignoreParentClass?_dd_ boolean)_dd_ void {            if (!ignoreParentClass) {                super._updateCache()_sm_            }            this._cache.target.copyFrom(this._getTargetPosition())_sm_            this._cache.alpha _eq_ this.alpha_sm_            this._cache.beta _eq_ this.beta_sm_            this._cache.radius _eq_ this.radius_sm_            this._cache.targetScreenOffset _eq_ this.targetScreenOffset.clone()_sm_        }        // Synchronized        public _isSynchronizedViewMatrix()_dd_ boolean {            if (!super._isSynchronizedViewMatrix())                return false_sm_            return this._cache.target.equals(this._getTargetPosition())                &amp_sm_&amp_sm_ this._cache.alpha _eq__eq__eq_ this.alpha                &amp_sm_&amp_sm_ this._cache.beta _eq__eq__eq_ this.beta                &amp_sm_&amp_sm_ this._cache.radius _eq__eq__eq_ this.radius                &amp_sm_&amp_sm_ this._cache.targetScreenOffset.equals(this.targetScreenOffset)_sm_        }        // Methods        public attachControl(element_dd_ HTMLElement_co_ noPreventDefault?_dd_ boolean)_dd_ void {            var cacheSoloPointer_sm_ // cache pointer object for better perf on camera rotation            var previousPinchDistance _eq_ 0_sm_            var pointers _eq_ new SmartCollection()_sm_            if (this._attachedElement) {                return_sm_            }            this._attachedElement _eq_ element_sm_            var engine _eq_ this.getEngine()_sm_            if (this._onPointerDown _eq__eq__eq_ undefined) {                this._onPointerDown _eq_ evt _eq_&gt_sm_ {                    this._isRightClick _eq_ evt.button _eq__eq__eq_ 2 ? true _dd_ false_sm_                    this._lastPanningPosition.x _eq_ evt.clientX_sm_                    this._lastPanningPosition.y _eq_ evt.clientY_sm_                    pointers.add(evt.pointerId_co_ { x_dd_ evt.clientX_co_ y_dd_ evt.clientY_co_ type_dd_ evt.pointerType })_sm_                    cacheSoloPointer _eq_ pointers.item(evt.pointerId)_sm_                    if (!noPreventDefault) {                        evt.preventDefault()_sm_                    }                }_sm_                this._onPointerUp _eq_ evt _eq_&gt_sm_ {                    this._lastPanningPosition _eq_ Vector2.Zero()_sm_                    cacheSoloPointer _eq_ null_sm_                    previousPinchDistance _eq_ 0_sm_                                        //would be better to use pointers.remove(evt.pointerId) for multitouch gestures_co_                     //but emptying completly pointers collection is required to fix a bug on iPhone _dd_                     //when changing orientation while pinching camera_co_ one pointer stay pressed forever if we don_t_t release all pointers                      //will be ok to put back pointers.remove(evt.pointerId)_sm_ when iPhone bug corrected                    pointers.empty()_sm_                    if (!noPreventDefault) {                        evt.preventDefault()_sm_                    }                }_sm_                this._onPointerMove _eq_ evt _eq_&gt_sm_ {                    if (!noPreventDefault) {                        evt.preventDefault()_sm_                    }                    switch (pointers.count) {                        case 1_dd_ { //normal camera rotation                            if (this._isRightClick) {                                if (!this._localDirection) {                                    this._localDirection _eq_ Vector3.Zero()_sm_                                    this._transformedDirection _eq_ Vector3.Zero()_sm_                                }                                var diffx _eq_ (evt.clientX - this._lastPanningPosition.x) * 0.1_sm_                                var diffy _eq_ (evt.clientY - this._lastPanningPosition.y) * 0.1_sm_                                this._localDirection.copyFromFloats(-diffx_co_ diffy_co_ 0)_sm_                                this._viewMatrix.invertToRef(this._cameraTransformMatrix)_sm_                                Vector3.TransformNormalToRef(this._localDirection_co_ this._cameraTransformMatrix_co_ this._transformedDirection)_sm_                                this.target.addInPlace(this._transformedDirection)_sm_                                this._lastPanningPosition.x _eq_ evt.clientX_sm_                                this._lastPanningPosition.y _eq_ evt.clientY_sm_                            }                            else {                                var offsetX _eq_ evt.clientX - cacheSoloPointer.x_sm_                                var offsetY _eq_ evt.clientY - cacheSoloPointer.y_sm_                                this.inertialAlphaOffset -_eq_ offsetX / this.angularSensibility_sm_                                this.inertialBetaOffset -_eq_ offsetY / this.angularSensibility_sm_                                cacheSoloPointer.x _eq_ evt.clientX_sm_                                cacheSoloPointer.y _eq_ evt.clientY_sm_                            }                        }                            break_sm_                        default_dd_                            if (pointers.item(evt.pointerId)) {                                pointers.item(evt.pointerId).x _eq_ evt.clientX_sm_                                pointers.item(evt.pointerId).y _eq_ evt.clientY_sm_                            }                    }                }_sm_                this._onContextMenu _eq_ evt _eq_&gt_sm_ {                    evt.preventDefault()_sm_                }_sm_                this._onMouseMove _eq_ evt _eq_&gt_sm_ {                    if (!engine.isPointerLock) {                        return_sm_                    }                    var offsetX _eq_ evt.movementX || evt.mozMovementX || evt.webkitMovementX || evt.msMovementX || 0_sm_                    var offsetY _eq_ evt.movementY || evt.mozMovementY || evt.webkitMovementY || evt.msMovementY || 0_sm_                    this.inertialAlphaOffset -_eq_ offsetX / this.angularSensibility_sm_                    this.inertialBetaOffset -_eq_ offsetY / this.angularSensibility_sm_                    if (!noPreventDefault) {                        evt.preventDefault()_sm_                    }                }_sm_                this._wheel _eq_ event _eq_&gt_sm_ {                    var delta _eq_ 0_sm_                    if (event.wheelDelta) {                        delta _eq_ event.wheelDelta / (this.wheelPrecision * 40)_sm_                    } else if (event.detail) {                        delta _eq_ -event.detail / this.wheelPrecision_sm_                    }                    if (delta)                        this.inertialRadiusOffset +_eq_ delta_sm_                    if (event.preventDefault) {                        if (!noPreventDefault) {                            event.preventDefault()_sm_                        }                    }                }_sm_                this._onKeyDown _eq_ evt _eq_&gt_sm_ {                    if (this.keysUp.indexOf(evt.keyCode) !_eq__eq_ -1 ||                        this.keysDown.indexOf(evt.keyCode) !_eq__eq_ -1 ||                        this.keysLeft.indexOf(evt.keyCode) !_eq__eq_ -1 ||                        this.keysRight.indexOf(evt.keyCode) !_eq__eq_ -1) {                        var index _eq_ this._keys.indexOf(evt.keyCode)_sm_                        if (index _eq__eq__eq_ -1) {                            this._keys.push(evt.keyCode)_sm_                        }                        if (evt.preventDefault) {                            if (!noPreventDefault) {                                evt.preventDefault()_sm_                            }                        }                    }                }_sm_                this._onKeyUp _eq_ evt _eq_&gt_sm_ {                    if (this.keysUp.indexOf(evt.keyCode) !_eq__eq_ -1 ||                        this.keysDown.indexOf(evt.keyCode) !_eq__eq_ -1 ||                        this.keysLeft.indexOf(evt.keyCode) !_eq__eq_ -1 ||                        this.keysRight.indexOf(evt.keyCode) !_eq__eq_ -1) {                        var index _eq_ this._keys.indexOf(evt.keyCode)_sm_                        if (index &gt_sm__eq_ 0) {                            this._keys.splice(index_co_ 1)_sm_                        }                        if (evt.preventDefault) {                            if (!noPreventDefault) {                                evt.preventDefault()_sm_                            }                        }                    }                }_sm_                this._onLostFocus _eq_ () _eq_&gt_sm_ {                    this._keys _eq_ []_sm_                    pointers.empty()_sm_                    previousPinchDistance _eq_ 0_sm_                    cacheSoloPointer _eq_ null_sm_                }_sm_                this._reset _eq_ () _eq_&gt_sm_ {                    this._keys _eq_ []_sm_                    this.inertialAlphaOffset _eq_ 0_sm_                    this.inertialBetaOffset _eq_ 0_sm_                    this.inertialRadiusOffset _eq_ 0_sm_                    pointers.empty()_sm_                    previousPinchDistance _eq_ 0_sm_                    cacheSoloPointer _eq_ null_sm_                }_sm_            }            element.addEventListener(_qt_contextmenu_qt__co_ this._onContextMenu_co_ false)_sm_            element.addEventListener(eventPrefix + _qt_down_qt__co_ this._onPointerDown_co_ false)_sm_            element.addEventListener(eventPrefix + _qt_up_qt__co_ this._onPointerUp_co_ false)_sm_            element.addEventListener(eventPrefix + _qt_out_qt__co_ this._onPointerUp_co_ false)_sm_            element.addEventListener(eventPrefix + _qt_move_qt__co_ this._onPointerMove_co_ false)_sm_            element.addEventListener(_qt_mousemove_qt__co_ this._onMouseMove_co_ false)_sm_            element.addEventListener(_t_mousewheel_t__co_ this._wheel_co_ false)_sm_            element.addEventListener(_t_DOMMouseScroll_t__co_ this._wheel_co_ false)_sm_            Tools.RegisterTopRootEvents([                { name_dd_ _qt_keydown_qt__co_ handler_dd_ this._onKeyDown }_co_                { name_dd_ _qt_keyup_qt__co_ handler_dd_ this._onKeyUp }_co_                { name_dd_ _qt_blur_qt__co_ handler_dd_ this._onLostFocus }            ])_sm_        }        public detachControl(element_dd_ HTMLElement)_dd_ void {            if (this._attachedElement !_eq__eq_ element) {                return_sm_            }            element.removeEventListener(_qt_contextmenu_qt__co_ this._onContextMenu)_sm_            element.removeEventListener(eventPrefix + _qt_down_qt__co_ this._onPointerDown)_sm_            element.removeEventListener(eventPrefix + _qt_up_qt__co_ this._onPointerUp)_sm_            element.removeEventListener(eventPrefix + _qt_out_qt__co_ this._onPointerUp)_sm_            element.removeEventListener(eventPrefix + _qt_move_qt__co_ this._onPointerMove)_sm_            element.removeEventListener(_qt_mousemove_qt__co_ this._onMouseMove)_sm_            element.removeEventListener(_t_mousewheel_t__co_ this._wheel)_sm_            element.removeEventListener(_t_DOMMouseScroll_t__co_ this._wheel)_sm_            Tools.UnregisterTopRootEvents([                { name_dd_ _qt_keydown_qt__co_ handler_dd_ this._onKeyDown }_co_                { name_dd_ _qt_keyup_qt__co_ handler_dd_ this._onKeyUp }_co_                { name_dd_ _qt_blur_qt__co_ handler_dd_ this._onLostFocus }            ])_sm_            this._attachedElement _eq_ null_sm_            if (this._reset) {                this._reset()_sm_            }        }        public _checkInputs()_dd_ void {            //if (async) collision inspection was triggered_co_ don_t_t update the camera_t_s position - until the collision callback was called.            if (this._collisionTriggered) {                return_sm_            }            // Keyboard            for (var index _eq_ 0_sm_ index &lt_sm_ this._keys.length_sm_ index++) {                var keyCode _eq_ this._keys[index]_sm_                if (this.keysLeft.indexOf(keyCode) !_eq__eq_ -1) {                    this.inertialAlphaOffset -_eq_ 0.01_sm_                } else if (this.keysUp.indexOf(keyCode) !_eq__eq_ -1) {                    this.inertialBetaOffset -_eq_ 0.01_sm_                } else if (this.keysRight.indexOf(keyCode) !_eq__eq_ -1) {                    this.inertialAlphaOffset +_eq_ 0.01_sm_                } else if (this.keysDown.indexOf(keyCode) !_eq__eq_ -1) {                    this.inertialBetaOffset +_eq_ 0.01_sm_                }            }\t\t\t\t            // Inertia            if (this.inertialAlphaOffset !_eq__eq_ 0 || this.inertialBetaOffset !_eq__eq_ 0 || this.inertialRadiusOffset !_eq_ 0) {                this.alpha +_eq_ this.beta &lt_sm__eq_ 0 ? -this.inertialAlphaOffset _dd_ this.inertialAlphaOffset_sm_                this.beta +_eq_ this.inertialBetaOffset_sm_                this.radius -_eq_ this.inertialRadiusOffset_sm_                this.inertialAlphaOffset *_eq_ this.inertia_sm_                this.inertialBetaOffset *_eq_ this.inertia_sm_                this.inertialRadiusOffset *_eq_ this.inertia_sm_                if (Math.abs(this.inertialAlphaOffset) &lt_sm_ Engine.Epsilon)                    this.inertialAlphaOffset _eq_ 0_sm_                if (Math.abs(this.inertialBetaOffset) &lt_sm_ Engine.Epsilon)                    this.inertialBetaOffset _eq_ 0_sm_                if (Math.abs(this.inertialRadiusOffset) &lt_sm_ Engine.Epsilon)                    this.inertialRadiusOffset _eq_ 0_sm_            }            // Limits            this._checkLimits()_sm_            super._checkInputs()_sm_        }        private _checkLimits() {            if (this.lowerBetaLimit _eq__eq__eq_ null || this.lowerBetaLimit _eq__eq__eq_ undefined) {                if (this.allowUpsideDown &amp_sm_&amp_sm_ this.beta &gt_sm_ Math.PI) {                    this.beta _eq_ this.beta - (2 * Math.PI)_sm_                }            } else {                if (this.beta &lt_sm_ this.lowerBetaLimit) {                    this.beta _eq_ this.lowerBetaLimit_sm_                }            }            if (this.upperBetaLimit _eq__eq__eq_ null || this.upperBetaLimit _eq__eq__eq_ undefined) {                if (this.allowUpsideDown &amp_sm_&amp_sm_ this.beta &lt_sm_ -Math.PI) {                    this.beta _eq_ this.beta + (2 * Math.PI)_sm_                }            } else {                if (this.beta &gt_sm_ this.upperBetaLimit) {                    this.beta _eq_ this.upperBetaLimit_sm_                }            }            if (this.lowerAlphaLimit &amp_sm_&amp_sm_ this.alpha &lt_sm_ this.lowerAlphaLimit) {                this.alpha _eq_ this.lowerAlphaLimit_sm_            }            if (this.upperAlphaLimit &amp_sm_&amp_sm_ this.alpha &gt_sm_ this.upperAlphaLimit) {                this.alpha _eq_ this.upperAlphaLimit_sm_            }            if (this.lowerRadiusLimit &amp_sm_&amp_sm_ this.radius &lt_sm_ this.lowerRadiusLimit) {                this.radius _eq_ this.lowerRadiusLimit_sm_            }            if (this.upperRadiusLimit &amp_sm_&amp_sm_ this.radius &gt_sm_ this.upperRadiusLimit) {                this.radius _eq_ this.upperRadiusLimit_sm_            }        }        public setPosition(position_dd_ Vector3)_dd_ void {            var radiusv3 _eq_ position.subtract(this._getTargetPosition())_sm_            this.radius _eq_ radiusv3.length()_sm_            // Alpha            this.alpha _eq_ Math.acos(radiusv3.x / Math.sqrt(Math.pow(radiusv3.x_co_ 2) + Math.pow(radiusv3.z_co_ 2)))_sm_            if (radiusv3.z &lt_sm_ 0) {                this.alpha _eq_ 2 * Math.PI - this.alpha_sm_            }            // Beta            this.beta _eq_ Math.acos(radiusv3.y / this.radius)_sm_            this._checkLimits()_sm_        }        public _getViewMatrix()_dd_ Matrix {            // Compute            var cosa _eq_ Math.cos(this.alpha)_sm_            var sina _eq_ Math.sin(this.alpha)_sm_            var cosb _eq_ Math.cos(this.beta)_sm_            var sinb _eq_ Math.sin(this.beta)_sm_            var target _eq_ this._getTargetPosition()_sm_            target.addToRef(new Vector3(this.radius * cosa * sinb_co_ this.radius * cosb_co_ this.radius * sina * sinb)_co_ this._newPosition)_sm_            if (this.getScene().collisionsEnabled &amp_sm_&amp_sm_ this.checkCollisions) {                this._collider.radius _eq_ this.collisionRadius_sm_                this._newPosition.subtractToRef(this.position_co_ this._collisionVelocity)_sm_                this._collisionTriggered _eq_ true_sm_                this.getScene().collisionCoordinator.getNewPosition(this.position_co_ this._collisionVelocity_co_ this._collider_co_ 3_co_ null_co_ this._onCollisionPositionChange_co_ this.uniqueId)_sm_            } else {                this.position.copyFrom(this._newPosition)_sm_                var up _eq_ this.upVector_sm_                if (this.allowUpsideDown &amp_sm_&amp_sm_ this.beta &lt_sm_ 0) {                    var up _eq_ up.clone()_sm_                    up _eq_ up.negate()_sm_                }                Matrix.LookAtLHToRef(this.position_co_ target_co_ up_co_ this._viewMatrix)_sm_                this._viewMatrix.m[12] +_eq_ this.targetScreenOffset.x_sm_                this._viewMatrix.m[13] +_eq_ this.targetScreenOffset.y_sm_            }            return this._viewMatrix_sm_        }        private _onCollisionPositionChange _eq_ (collisionId_dd_ number_co_ newPosition_dd_ Vector3_co_ collidedMesh_dd_ AbstractMesh _eq_ null) _eq_&gt_sm_ {            if (this.getScene().workerCollisions &amp_sm_&amp_sm_ this.checkCollisions) {                newPosition.multiplyInPlace(this._collider.radius)_sm_            }            if (!collidedMesh) {                this._previousPosition.copyFrom(this.position)_sm_            } else {                this.setPosition(this.position)_sm_                if (this.onCollide) {                    this.onCollide(collidedMesh)_sm_                }            }            // Recompute because of constraints            var cosa _eq_ Math.cos(this.alpha)_sm_            var sina _eq_ Math.sin(this.alpha)_sm_            var cosb _eq_ Math.cos(this.beta)_sm_            var sinb _eq_ Math.sin(this.beta)_sm_            var target _eq_ this._getTargetPosition()_sm_            target.addToRef(new Vector3(this.radius * cosa * sinb_co_ this.radius * cosb_co_ this.radius * sina * sinb)_co_ this._newPosition)_sm_            this.position.copyFrom(this._newPosition)_sm_            var up _eq_ this.upVector_sm_            if (this.allowUpsideDown &amp_sm_&amp_sm_ this.beta &lt_sm_ 0) {                var up _eq_ up.clone()_sm_                up _eq_ up.negate()_sm_            }            Matrix.LookAtLHToRef(this.position_co_ target_co_ up_co_ this._viewMatrix)_sm_            this._viewMatrix.m[12] +_eq_ this.targetScreenOffset.x_sm_            this._viewMatrix.m[13] +_eq_ this.targetScreenOffset.y_sm_            this._collisionTriggered _eq_ false_sm_        }        public zoomOn(meshes?_dd_ AbstractMesh[])_dd_ void {            meshes _eq_ meshes || this.getScene().meshes_sm_            var minMaxVector _eq_ Mesh.MinMax(meshes)_sm_            var distance _eq_ Vector3.Distance(minMaxVector.min_co_ minMaxVector.max)_sm_            this.radius _eq_ distance * this.zoomOnFactor_sm_            this.focusOn({ min_dd_ minMaxVector.min_co_ max_dd_ minMaxVector.max_co_ distance_dd_ distance })_sm_        }        public focusOn(meshesOrMinMaxVectorAndDistance)_dd_ void {            var meshesOrMinMaxVector_sm_            var distance_sm_            if (meshesOrMinMaxVectorAndDistance.min _eq__eq__eq_ undefined) { // meshes                meshesOrMinMaxVector _eq_ meshesOrMinMaxVectorAndDistance || this.getScene().meshes_sm_                meshesOrMinMaxVector _eq_ Mesh.MinMax(meshesOrMinMaxVector)_sm_                distance _eq_ Vector3.Distance(meshesOrMinMaxVector.min_co_ meshesOrMinMaxVector.max)_sm_            }            else { //minMaxVector and distance                meshesOrMinMaxVector _eq_ meshesOrMinMaxVectorAndDistance_sm_                distance _eq_ meshesOrMinMaxVectorAndDistance.distance_sm_            }            this.target _eq_ Mesh.Center(meshesOrMinMaxVector)_sm_            this.maxZ _eq_ distance * 2_sm_        }                /**         * @override         * Override Camera.createRigCamera         */        public createRigCamera(name_dd_ string_co_ cameraIndex_dd_ number)_dd_ Camera {            switch (this.cameraRigMode) {                case Camera.RIG_MODE_STEREOSCOPIC_ANAGLYPH_dd_                case Camera.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_PARALLEL_dd_                case Camera.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_CROSSEYED_dd_                case Camera.RIG_MODE_STEREOSCOPIC_OVERUNDER_dd_                case Camera.RIG_MODE_VR_dd_                    var alphaShift _eq_ this._cameraRigParams.stereoHalfAngle * (cameraIndex _eq__eq__eq_ 0 ? 1 _dd_ -1)_sm_                    return new ArcRotateCamera(name_co_ this.alpha + alphaShift_co_ this.beta_co_ this.radius_co_ this.target_co_ this.getScene())_sm_            }        }                /**         * @override         * Override Camera._updateRigCameras         */        public _updateRigCameras() {            switch (this.cameraRigMode) {                case Camera.RIG_MODE_STEREOSCOPIC_ANAGLYPH_dd_                case Camera.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_PARALLEL_dd_                case Camera.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_CROSSEYED_dd_                case Camera.RIG_MODE_STEREOSCOPIC_OVERUNDER_dd_                case Camera.RIG_MODE_VR_dd_                    var camLeft _eq_ &lt_sm_ArcRotateCamera&gt_sm_ this._rigCameras[0]_sm_                    var camRight _eq_ &lt_sm_ArcRotateCamera&gt_sm_ this._rigCameras[1]_sm_                    camLeft.alpha _eq_ this.alpha - this._cameraRigParams.stereoHalfAngle_sm_                    camRight.alpha _eq_ this.alpha + this._cameraRigParams.stereoHalfAngle_sm_                    camLeft.beta _eq_ camRight.beta _eq_ this.beta_sm_                    camLeft.radius _eq_ camRight.radius _eq_ this.radius_sm_                    break_sm_            }            super._updateRigCameras()_sm_        }    }} _lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-06-26T13:14:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks_co_ Luaacro!  Any chance we could get you to edit that post and include the line numbers in the code paste?  (thx)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-06-26T16:27:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_yes please just do a playground and patch the arcrotatecamera _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbs2000","Date":"2015-06-26T22:05:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks L_lt_span_gt_ucraaco! One question..will this get merged to Babylonjs code in near future or should I take this &amp_sm_ load it separately? Thanks once again..._lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Luaacro","Date":"2015-06-29T11:45:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The playground demo using _qt_Import Meshes_qt_ _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#23UCS8%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#23UCS8#1_lt_/a_gt_  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Line 126 _dd_ Handle the right click for panning_lt_/p_gt__lt_p_gt_Line 158 _dd_ If right click_co_ transform the camera_t_s target (not position)_lt_/p_gt__lt_p_gt_Line 192 _dd_ Disable context menu (right click)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@deltakosh_co_ do you want me to add panning in ArcRotateCamera in the repo ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-06-29T12:32:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_sweet_co_ could really use that... would love to have it in the 2.2 preview as soon as possible! _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2015-06-29T13:05:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_87490_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_15369_qt_ data-ipsquote-username_eq__qt_Luaacro_qt_ data-cite_eq__qt_Luaacro_qt_ data-ipsquote-timestamp_eq__qt_1435578324_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_@deltakosh_co_ do you want me to add panning in ArcRotateCamera in the repo ?_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I would love so_co_ although I_t_m not DK _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-06-29T14:43:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yes please integrate it _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But can you use CTRL + Left click instead of right click?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Luaacro","Date":"2015-06-29T14:56:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I will_co_ using CTRL + Left click  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-06-29T15:20:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I liked the right click_co_ will there maybe be a way to configure that easily? _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Luaacro","Date":"2015-06-29T15:24:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Maybe by adding a parameter in _qt_attachControl_qt_ ? _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_​_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Luaacro","Date":"2015-06-30T11:52:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Panning was added into the ArcRotateCamera_co_ the commit on github should come quickly !_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Usage _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var camera _eq_ new BABYLON.ArcRotateCamera(...)_sm_camera.attachControl(canvas_co_ noPreventDefault_co_ useCtrlForPanning)_sm__lt_/pre_gt__lt_p_gt__lt_strong_gt_useCtrlForPanning_lt_/strong_gt_ is _lt_strong_gt_true _lt_/strong_gt_by default. But you can set it to _lt_strong_gt_false _lt_/strong_gt_to allow only right click  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"KevinBLT","Date":"2015-07-03T09:07:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_this is pretty good. I have been looking for this._lt_/p_gt__lt_p_gt_What I think_dd_ It looks a bit hard compared to the rest._lt_/p_gt__lt_p_gt_Rotating and zooming is such smooth. And then you pan_co_ it looks like_lt_/p_gt__lt_p_gt_a 3D program out of the 90_t_s. Would it a be a heavy thing to do it as smooth as zooming and rotating?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Kevin_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-07-03T15:53:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@Luaacro_dd_ you need to add inertia like I did for rotating and zooming_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Luaacro","Date":"2015-07-06T17:29:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_working on it _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Luaacro","Date":"2015-07-07T09:18:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Done_co_ this commit should also come quickly !  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_To get a homogene code_co_ I changed the way how _qt_camera.panningSensibility_qt_ works. It works like _qt_camera.angularSensibility_qt_. Default value is 50.0_sm__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"KevinBLT","Date":"2015-07-09T12:57:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Looks really good._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have thought_co_ whether it would be possible to make a setting_co_ that let the sensibilities be relative to the distance of the camera?_lt_/p_gt__lt_p_gt_I mean this for zooming and panning._lt_/p_gt__lt_p_gt_So it grows proportional. You know what I mean?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"hivestorm","Date":"2016-05-23T15:51:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tis there a way to enable the panning mode on mobile?\n_lt_/p_gt_\n\n_lt_p_gt_\n\ti used to be able to do it programmatically by always setting _t_camera._isCtrlPushed  _eq_ true_sm__t_ but that doesn_t_t seem to do anything since yesterdays preview/playground update_co_ And simulating the ctrl keydown event through js only works for desktop.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEven though it is a bit crude to achieve panning-by-default by constantly overwriting this variable_co_ it was effective_co_ because you could stop writing to it when needed to enable rotation again for mobile users._lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-05-23T16:35:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tHello you can still do your trick with_dd_ camera.inputs.attached[_qt_pointers_qt_]._isCtrlPushed\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Jose Vicente","Date":"2016-06-22T16:52:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAre there any plans to support pan in ArcRotateCamera on mobile devices ? Or the trick  mentioned by Deltakosh is the only way to achieve pan?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRegards\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Luaacro","Date":"2016-06-23T07:21:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tinteresting _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tdo you have an idea of gesture for it ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Jose Vicente","Date":"2016-06-23T13:00:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello Luaacro.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTought question _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ I was thinking on moving two fingers together\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]