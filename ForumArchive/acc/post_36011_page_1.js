[{"Owner":"meteoritool","Date":"2018-02-28T01:23:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI came across a problem where I couldn_t_t have an animation behave as intended _dd__lt_br /_gt_\n\t_lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#7NPQG7_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#7NPQG7_lt_/a_gt__lt_br /_gt_\n\tClick on the plane (aka ground) to move the ball to clicked location. On animation end_co_ the color of the ball randomly changes._lt_br /_gt_\n\tThe movement from point A to point B has a sort of easingFunction to it_co_ and the onAnimationEnd is called much later after ball arrived.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut I expected the animation easing to be linear by default ???_co_ and the onAnimationEnd function be called right on time at _qt_arrival_qt_ ???\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf someone can shed some light on this for me_co_ would be very cool ^^\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-02-28T16:39:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis is because the keys were not independent_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#7NPQG7#1_qt_ ipsnoembed_eq__qt_false_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#7NPQG7#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheck the clone function in lines #32 and #43\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"meteoritool","Date":"2018-02-28T18:06:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks a lot you are dope !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI don_t_t quite understand_co_ I only ever used .clone() for meshes_co_ I usually use .getAbsolutePosition() to obtain a value needed..._lt_br /_gt_\n\tI sense something bigger than me there _lt_img alt_eq__qt__dd_lol_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_laugh.png_qt_ title_eq__qt__dd_lol_dd__qt_ /_gt_ something with the way js arrays work ? or the whole concept of object in general ???_lt_br /_gt_\n\tShould I use .getAbsolutePosition().Clone() all the time from now on ???\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyways thanks a lot ! You saved my day !_lt_br /_gt_\n\tI also changed the animation loop mode to _t_constant_t_ (instead of _t_cycle_t_) to avoid a glitch_dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#7NPQG7%232_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#7NPQG7#2_lt_/a_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt__dd_lol_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_laugh.png_qt_ title_eq__qt__dd_lol_dd__qt_ /_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-02-28T18:39:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou don_t_t always have to clone the absolute position_co_ but if you are going to *change* (ie_dd_ use for animation) or *assign* that Vector3_co_ then cloning is good.  Realize that the position is just a Vector3_co_ so if you set two meshes to the same position_dd__lt_br /_gt_\n\tmeahA.position _eq_ meshB.position_lt_br /_gt_\n\tWhen you move either mesh_co_ both will move..._lt_br /_gt_\n\t_lt_br /_gt_\n\tIt_t_s not really the season_co_ but check out this snowman that I just made for you.  Try to remove the .clone() calls - it shows how the _qt_instances_qt_ of position the same will lead to undesired results_dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#EAXFJ7_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#EAXFJ7_lt_/a_gt_ position_lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#EAXFJ7%231_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#EAXFJ7#1_lt_/a_gt_ getAbsolutePosition()_lt_br /_gt_\n\t_lt_br /_gt_\n\tThe takeaway is that BJS is highly optimized and will re-use the same instances.  So_co_ you need to be explicit in your code.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tedit_dd_ here is the code (_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/25023c1dc83925a513ed1186ec95f52c566b6d04/src/Mesh/babylon.transformNode.ts#L285_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/25023c1dc83925a513ed1186ec95f52c566b6d04/src/Mesh/babylon.transformNode.ts#L285_lt_/a_gt_). You are given access to an internal cache variable_co_ which you_t_re not meant to change.  BJS *could* clone() it for you in the getter_co_ but it_t_s built for speed_co_ so we clone() when required _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"meteoritool","Date":"2018-02-28T19:55:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThank you very much_co_ it kind of clarifies it but I somehow never encountered this before_co_ somehow it seems essential !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn my mind I was copying values from one object.attribute to another object.attribute_co_ but that_t_s not how it works it seems _lt_img alt_eq__qt__dd_lol_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_laugh.png_qt_ title_eq__qt__dd_lol_dd__qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks a lot it improves my knowledge !!! _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-02-28T20:33:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_206523_qt_ data-ipsquote-contentid_eq__qt_36011_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1519847701_qt_ data-ipsquote-userid_eq__qt_17254_qt_ data-ipsquote-username_eq__qt_meteoritool_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t17 minutes ago_co_ meteoritool said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tIn my mind I was copying values from one object.attribute to another object.attribute_co_ but that_t_s not how it works it seems _lt_img alt_eq__qt__dd_lol_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_laugh.png_qt_ title_eq__qt__dd_lol_dd__qt_ /_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tHere_t_s another way to look at it - depends if object.attribute is an _lt_strong_gt_object or a data type_lt_/strong_gt_.  ie_dd_ these look the same_co_ but have different results.  This is copying the object reference_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_meshA.position _eq_ meshB.position_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tvs. copying the object values_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_meshA.position.x _eq_ meshB.position.x\nmeshA.position.y _eq_ meshB.position.y\nmeshA.position.z _eq_ meshB.position.z_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tYou use clone() to create a new independent copy.  You could_co_ however_co_ assign without clone() like above - I likely wouldn_t_t inline this code_dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#EAXFJ7%232_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#EAXFJ7#2_lt_/a_gt__lt_br /_gt_\n\tThe clone is just a shortcut and actually creates a new Vector3_dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Math/babylon.math.ts#L1735_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Math/babylon.math.ts#L1735_lt_/a_gt__lt_br /_gt_\n\t_lt_br /_gt_\n\tVector3 also has a more memory efficient copyFrom() to not unnecessarily new up a Vector3 instance_dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#EAXFJ7%233_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#EAXFJ7#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you look in the Math file you see lots of methods like xxx_co_ xxxInPlace_co_ xxxToRef.  That lets use easily code our intentions and avoiding writing error-prone (and maybe harder to read) code in my example above _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"meteoritool","Date":"2018-03-03T13:53:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThx a LOT ! I guess there are many cases I should have used copyFrom()_co_ then I am lucky I never had bugs before ^^\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHow wonder how much having unnecessary Vector3 impact performances ? My guess is that_t_s really negligible but maybe I_t_m wrong ?_lt_br /_gt_\n\tAnyway I_t_m glad I can have a a more clean script thanks to you !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI LOVE so much BABYLON.js and the community ! \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]