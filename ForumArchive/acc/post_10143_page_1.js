[{"Owner":"shteeve","Date":"2014-10-31T21:10:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey all_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ve just discovered the amazing world of fragment and vertex shaders! But I_t_m finding that when a custom shader is assigned to a mesh deformed by a skeleton_co_ the mesh snaps back to its undeformed state. I_t_m assuming this is because the _qt_position_qt_ and _qt_normal_qt_ attributes passed to the custom shader are pre-deformation. is that a correct assessment? is there any way around this? (Like perhaps some sort of _qt_deformed_position_qt_ attribute instead of _qt_position_qt_)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-11-03T16:34:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_That_t_s correct. The problem is that you will have to handle the deformation by yourself._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You can see what I do for default.vertex.fx_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Babylon/Shaders/default.vertex.fx_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Babylon/Shaders/default.vertex.fx_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]