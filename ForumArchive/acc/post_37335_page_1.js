[{"Owner":"WildBill","Date":"2018-05-01T14:41:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSorry if this is a dumb question but I couldn_t_t find an exact answer on google!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAre bones in a rig technically individual points/nodes or are they counted as the connecting lines between two points/nodes? For example_co_ if I_t_ve got this biped rig below_co_ would this leg count as having 4 bones (in red_co_ the connecting lines between two points/nodes) or would it count as 5 bones (in blue_co_ each individual point/node in the bone chain)?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_eH9Vx3o.png_qt_ class_eq__qt_ipsImage_qt_ height_eq__qt_740_qt_ src_eq__qt_https_dd_//i.imgur.com/eH9Vx3o.png_qt_ width_eq__qt_697_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m working on a character rig but need it to work on iOS devices_co_ and I_t_ve read that iOS only supports up to about 32 bones per rig... so I_t_m trying to count my rig_t_s bones exactly to make sure I_t_m not over that limit._lt_span_gt_ _lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ™‚_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-05-01T14:59:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tNot sure what the _qt_point_qt_ terminology means.Â  A bone is basically a rotation_co_ position_co_ &amp_sm_ scaling that is spread over the vertices that list it as an influencer.Â  A vertex may quality that influence in percentage terms &amp_sm_ may have more than one influencer.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn BabylonJS_co_ bone do not even record the blue values_co_ so I guess the answer to your question is the red set.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBTW_co_ in BJS the safest you really need to keep your bones around 23 / 24 as a max for iOS_co_ unless you know Apple is going to support WebGL 2.0 within your time horizon.Â  32 is the virtual max_co_ but that would leave zero vertex shader uniforms for anything else.Â  I seriously doubt any other WebGL framework can do much better.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf that is not something you can live with_co_ you might build a native app_co_ or possible PR changes to _lt_a href_eq__qt_https_dd_//webkit.org/_qt_ rel_eq__qt_external nofollow_qt__gt_WebKit_lt_/a_gt__co_ if that is a thing.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"WildBill","Date":"2018-05-01T17:18:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAh_co_ that_t_s really good to know!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSorry for the bad description_co_ I don_t_t know the right terminology it but by _qt_point_qt_ I mean like how in the picture above the leg has 5 _qt_points_qt_ (or joints_co_ I guess) labeled in blue that define its rig (1_dd_ hip joint_co_ 2_dd_ knee joint_co_ 3_dd_ ankle_co_ 4_dd_ toe knuckle_co_ and 5_dd_ toe tip) but that means it has 4 _qt_connections_qt_ labeled in red between those 5 points (1_dd_ between the hip and knee [basically the femur]_co_ 2_dd_ between the knee and ankle [basically the shin]_co_ etc.).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo when BJS/WebGL is counting all the bones toward that 23/24 limit_co_ it_t_d count the numbers in red (the _qt_connections_qt_ between the points/joints) and not the numbers in blue (the individual points/joints) on the rig_co_ right?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m still new to WebGL but trying my best haha_co_ thanks for clarifying this for me.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]