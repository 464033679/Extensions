[{"Owner":"Shumberg","Date":"2016-01-13T10:22:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello all.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am trying to get a simple manual bones animation test working_co_ and I think I have all the pieces going_co_ but I see no deformation. The basic idea is I have a mesh which stands about 250 units tall_co_ and I am trying to make a very simple _t_spine_t_ (2 bones) generate a smoothish z-bend_co_ using very simple height-based weighting on a pair of bones_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre class_eq__qt_ipsCode prettyprint lang-javascript_qt__gt_\n//// The mesh data is being brought in from a microservice - the basic mesh data is fine_sm_\n//// My weighting looks reasonable.\n\n            var obj _eq_ new BABYLON.Mesh(objName_co_ scene)_sm_\n            obj.position _eq_ BABYLON.Vector3.Zero()_sm_\n            obj.setVerticesData(BABYLON.VertexBuffer.PositionKind_co_ data[objName].model.P_co_ false_co_ 3)_sm_\n            obj.setVerticesData(BABYLON.VertexBuffer.NormalKind_co_ data[objName].model.N_co_ false_co_ 3)_sm_\n            obj.setVerticesData(BABYLON.VertexBuffer.UVKind_co_ data[objName].model.uv_co_ false_co_ 2)_sm_\n            obj.setIndices(data[objName].model.indices)_sm_\n\n            var tmpAttr _eq_ []\n            for (var i _eq_ 0_sm_ i &lt_sm_ data[objName].model.P.length_sm_ i+_eq_3) {\n                var nHt _eq_ Math.abs(data[objName].model.P[i+1]) / 250.0_sm_\n                tmpAttr.push(1.0 - nHt)_sm_\n                tmpAttr.push(nHt)_sm_\n                tmpAttr.push(0.0)_sm_\n                tmpAttr.push(0.0)_sm_\n            }\n            obj.setVerticesData(BABYLON.VertexBuffer.MatricesWeightsKind_co_ tmpAttr_co_ false_co_ 4)_sm_\n\n            tmpAttr _eq_ []_sm_\n            for (var i _eq_ 0_sm_ i &lt_sm_ data[objName].model.P.length_sm_ i+_eq_3) {\n                tmpAttr.push(0.0)_sm_\n                tmpAttr.push(1.0)_sm_\n                tmpAttr.push(0.0)_sm_\n                tmpAttr.push(0.0)_sm_\n            }\n            obj.setVerticesData(BABYLON.VertexBuffer.MatricesIndicesKind_co_ tmpAttr_co_ false_co_ 4)_sm_\n\n//// ...elided stuff...\n\n            var skel _eq_ new BABYLON.Skeleton(objName + _qt_Skeleton_qt__co_ objName + _qt_Skeleton_qt__co_ scene)_sm_\n            var par _eq_ null_sm_\n            var nBones _eq_ 2_sm_\n            var mat _eq_ new BABYLON.Matrix.FromValues(1.0_co_ 0.0_co_ 0.0_co_ 0.0_co_\n                                                    0.0_co_ 1.0_co_ 0.0_co_ 0.0_co_\n                                                    0.0_co_ 0.0_co_ 1.0_co_ 0.0_co_\n                                                    0.0_co_ 0.0_co_ 0.0_co_ 1.0)_sm_\n            console.log(mat)_sm_\n            for (var i _eq_ 0_sm_ i &lt_sm_ nBones_sm_ i++) {\n                var bone _eq_ new BABYLON.Bone(objName + _qt_Bone_qt_ + i_co_ skel_co_ par_co_ mat)_sm_\n                var boneAnim _eq_ new BABYLON.Animation(_qt_Bone_qt_ + i + _qt_Animation_qt__co_ _qt_matrix_qt__co_ 30_co_\n                                                     BABYLON.Animation.ANIMATIONTYPE_FLOAT_co_\n                                                     BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE)_sm_\n                var keys _eq_ []_sm_\n                keys.push({frame_dd_ 0_co_ value_dd_ mat})_sm_\n                keys.push({frame_dd_ 30_co_ value_dd_ mat})_sm_\n                boneAnim.setKeys(keys)_sm_\n                bone.animations.push(boneAnim)_sm_\n              \n                par _eq_ bone_sm_\n                mat _eq_ BABYLON.Matrix.FromValues(1.0_co_ 0.0_co_ 0.0_co_ 0.0_co_\n                                                0.0_co_ 0.7_co_ -0.7_co_ 125.0 * (i + 1)_co_\n                                                0.0_co_ 0.7_co_ 0.7_co_ 0.0_co_\n                                                0.0_co_ 0.0_co_ 0.0_co_ 1.0)_sm_\n\n\n            }\n            obj.skeleton _eq_ skel_sm_\n            objCopy.skeleton _eq_ skel_sm_\n            console.log(skel)_sm_\n            scene.beginAnimation(skel_co_ 0_co_ 30_co_ true)_sm__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe basic (static) display of my geometric data is working fine - I just see no deformation (i.e._co_ my rather boring/static animation (looking for a 45 deg z bend halfway up the character)). I am using a custom ShaderMaterial_co_ so I also tried adding _qt_matricesWeights_qt_ and _qt_matricesIndices_qt_ to the attributes list in the material constructor (I believe the deformations are being handled in a magic geometry shader (??))_co_ but that didn_t_t work either.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMost of the bones examples are more oriented towards having the char/rig imported from a DCC app - I couldn_t_t find any _qt_from scratch_qt_ examples.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks in advance_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tChris\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]