[{"Owner":"brucewong21","Date":"2017-11-25T17:37:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tSo a gotcha of the moveWithCollisions method is that it uses an ellipsoid mesh to calculate collisions of your mesh instead of the original mesh dimensions. I see a clear way to remove your original mesh but how do we remove the ellipsoid mesh from the scene? I_t_m worried that keeping these ellipsoids even when my original mesh has been disposed of will hurt performance. Thank you so much.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-11-25T18:19:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi BW.  Somemesh.ellipsoid is not a mesh_co_ it is an _qt_area_qt_. It will be gone with somemesh.dispose()_co_ of course.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBUT_co_ are you using a Wingnut function called BABYLON.Mesh.prototype.showEllipsoid()?  Are these _qt_ellipsoid mesh_qt_... wireframed spheres?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf so... do this...    somemesh.ellipsoidMesh.dispose()_sm_   ... after that.. somemesh.dispose()_sm_  Should work to kill those add-on sphere shapes.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOf course_co_ you might wish to console.log(somemesh.ellipsoidMesh) to see if a mesh is there.  It might be so.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WWCK0%2336_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WWCK0#36_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(lines 2-33)  Wingnut written _qt_utility function_qt_ to show collision ellipsoids.  If you are using that_co_ then yes... first somemesh.ellipsoidMesh.dispose()_co_ and then somemesh.dispose().  Good idea.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI hope this helps.  Report back_co_ please.  (thx)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brucewong21","Date":"2017-11-26T01:32:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tHello sorry just saw this now. I will check it out thank you!\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brucewong21","Date":"2017-11-26T05:22:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_196426_qt_ data-ipsquote-contentid_eq__qt_34214_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1511633983_qt_ data-ipsquote-userid_eq__qt_5733_qt_ data-ipsquote-username_eq__qt_Wingnut_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t7 hours ago_co_ Wingnut said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tHi BW.  Somemesh.ellipsoid is not a mesh_co_ it is an _qt_area_qt_. It will be gone with somemesh.dispose()_co_ of course.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tBUT_co_ are you using a Wingnut function called BABYLON.Mesh.prototype.showEllipsoid()?  Are these _qt_ellipsoid mesh_qt_... wireframed spheres?\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tIf so... do this...    somemesh.ellipsoidMesh.dispose()_sm_   ... after that.. somemesh.dispose()_sm_  Should work to kill those add-on sphere shapes.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tOf course_co_ you might wish to console.log(somemesh.ellipsoidMesh) to see if a mesh is there.  It might be so.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WWCK0%2336_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WWCK0#36_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t(lines 2-33)  Wingnut written _qt_utility function_qt_ to show collision ellipsoids.  If you are using that_co_ then yes... first somemesh.ellipsoidMesh.dispose()_co_ and then somemesh.dispose().  Good idea.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tI hope this helps.  Report back_co_ please.  (thx)\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tSorry for the long delay in my response_co_ I was trying to make a PG (no pain no gain _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ ) but couldn_t_t recreate the same situation._lt_strong_gt_ I was not using the Wingnut utility function btw so it_t_s all good there!_lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs usual_co_ my own stupidity overcomes me again! If you don_t_t want to waste time don_t_t read below. It seems that what was left behind after my mesh.dispose was not an _qt_ellipsoid mesh_qt_ but rather an InstancedMesh object. I originally created my mesh like so\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_monsterInstance.hitbox _eq_ monsterType.hitbox.createInstance()_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI tried to dispose of the mesh as so...\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_monsterInstance.hitbox.dispose()_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt was leaving behind a InstanceMesh object which was still being affected by my other meshes colliding with it. After trying to recreate the error in PG_co_ I eventually found out I was attaching the onCollide handler twice. I was calling the dispose method on my second onCollide handler. _lt_br /_gt__lt_br /_gt_\n\tI never knew about these Wingnut functions and the utility one to see the ellipsoid will definitely help me! _lt_br /_gt_\n\tThanks for your answer _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]