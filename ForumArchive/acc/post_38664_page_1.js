[{"Owner":"Hersir","Date":"2018-07-06T06:50:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\twas messing with material freeze_co_ and found behaviour that I haven_t_t thought about. If material is set to `checkReadyOnlyOnce _eq_ true` inside babylon file_co_ and lights are added after that material is ready. Light will not be added to material_co_ what is logical as material is frozen. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#JI6GDR_qt_ rel_eq__qt_external nofollow_qt__gt_PG_lt_/a_gt_ with that behaviour. So in this case _co_every time light is add / removed_co_ switched of / on or animated I need to loop through all materials on scene and if  `checkReadyOnlyOnce _eq_ true` to force update using `markDirty()`. Just thinking if that could be done automatically by engine without breaking optimisation of freeze or its better to do on project side _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Arte","Date":"2018-07-06T10:21:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/26231-hersir/?do_eq_hovercard_qt_ data-mentionid_eq__qt_26231_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/26231-hersir/_qt_ rel_eq__qt__qt__gt_@Hersir_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHow about scene.registerBeforeRender???\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#JI6GDR%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#JI6GDR#1_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-07-06T14:53:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAlso freezing a material is no more a big deal. We introduced several optimizations lately that could allow you to not freeze materials but still get the same perf\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Hersir","Date":"2018-07-10T05:53:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ thanks for info\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]