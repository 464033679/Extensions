[{"Owner":"fenomas","Date":"2015-02-19T13:14:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I am rendering Minecraft-style terrain_co_ but I can_t_t find a way to make it scale well in BJS. Basically the terrain has two important features_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_1. Terrain must be split into chunks (so that pieces of terrain can be added/removed/changed quickly)_lt_/p_gt__lt_p_gt_2. Each chunk of terrain contains a variety of textures_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I built this the straightforward way - one parent mesh for each chunk_co_ and one child mesh for each texture in that chunk. The problem is that if there are N chunks of terrain visible_co_ and M different textures in each chunk_co_ then this requires N*M draw calls to render. For even a minimal game N might be several hundred and M a few dozen_co_ so N*M can quickly reach 10K draw calls._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Is there any better way to make the BJS meshes or materials_co_ to reduce the draw calls?_lt_/p_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_(Notes_dd_ I_t_m not using instancing because each voxel face can look different due to AO and lighting. I have not tried things like mesh simplification because here the number of vertexes is not necessarily high - it_t_s the number of draw calls that spirals out of control.)_lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"davrous","Date":"2015-02-19T13:17:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Meulta and deltakosh have been working on tweaking Babylon.js for a Minecraft like rendering. This has been presented during mstechdays at Paris. They have done a lot of work and gone far from our core engine. Etienne (Meulta) will soon share the code and approach._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-02-19T14:42:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Cool stuff davrous!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I wonder if this means some sort of texture atlas support? Because the exploding number of draw calls is the only blocker I_t_ve found so far. Otherwise BJS already handles voxels quite well.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-02-19T17:45:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_We did not have time for a global atlas but this is the next step _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-02-19T18:01:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_But it_t_s not an _qt_offical_qt_ bring minecraft to browser thing from microsoft_co_... or is it? (you can tell me_co_ I wont tell anybody else _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ )_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-02-19T19:41:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_No just a spare time project _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-02-20T02:57:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Sounds good_co_ please let us see the code! I_t_m anxious to see how this overlaps with voxeljs or what I_t_m doing. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Stephen Andrews","Date":"2015-02-20T08:44:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@fenomas_co_ I wrote a library for this_co_ though it only supports colored voxels (no textures_co_ feel free to implement. _dd_3) and no ambient occlusion_co_ it does have greedy meshing which greatly helps performance. It uses one draw call per-chunk (two if using transparent voxels_co_ which uses an additional mesh and is rather hacky)_co_ and chunks can have any size/dimensions._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Repo_dd_ _lt_a href_eq__qt_https_dd_//github.com/TriBlade9/CEWBS_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/TriBlade9/CEWBS_lt_/a_gt__lt_/p_gt__lt_p_gt_Examples_dd_ (Unfinished) _lt_a href_eq__qt_http_dd_//triblade9.github.io/CEWBS/example/examples/animation/index.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//triblade9.github.io/CEWBS/example/examples/animation/index.html_lt_/a_gt_ _lt_a href_eq__qt_%3A%C2%A0http%3A//triblade9.wc.lt/CEWBS/_qt_ rel_eq__qt_external nofollow_qt__gt__dd_ http_dd_//triblade9.wc.lt/CEWBS/_lt_/a_gt_ _lt_/p_gt__lt_p_gt_Forum thread_dd_ _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/10688-library-cewbs-voxel-mesher-and-helper-utilities/_qt__gt_http_dd_//www.html5gamedevs.com/topic/10688-library-cewbs-voxel-mesher-and-helper-utilities/_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-02-21T02:17:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks Stephen_co_ I saw your very fine library before I started. You_t_re welcome to plunder my code for AO and textures if you like_co_ though I_t_m not sure it_t_s worth it if there is some crazy new voxel support coming soon.. _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//andyhall.github.io/noa-hello-world/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//andyhall.github.io/noa-hello-world/_lt_/a_gt__lt_/p_gt__lt_p_gt_Incidentally I profiled your lib at some point and I recall that having bjs calculate the normals was taking a really big chunk of time. I think it would be way faster to make a normals array by hand (if you_t_re still working with it). _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Stephen Andrews","Date":"2015-02-21T03:03:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Wow fenomas_co_ I greatly like your approach to a voxel game. The performance is quite good on my machine_co_ almost twice as fast as my demos_co_ which is quite remarkable. It seems like you_t_re going in a minecraft-like direction_co_ sort of like voxel.js. Your picking code in particular is far more efficient and sensible than mine_co_ although I don_t_t know if it works with rotated chunks.  If you happen to add non-grid-locked and non-dimension-locked voxel meshes_co_ I will probably prefer your library over mine. x]_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I may look into the normals issue_co_ I noticed that as well. The demo also appears to run a lot slower in Chrome 36(8?)+ than in Chrome 35_co_ which is a bit of a dissapointment. However I am no longer actively developing it due to some real-life constraints. (Though I check these forums every day)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Keep up the good work!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-02-21T04:13:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks Stephen. I_t_m not trying to recreate minecraft particularly_co_ just round out the basic features that would be required to do so. To answer your comments_co_ nothing in my mesher or renderer knows that all the chunks are unscaled and unrotated_co_ I just haven_t_t added non-terrain items yet. However the pick function is fast because it_t_s testing against the world_t_s voxel data_sm_ it has no idea there_t_s meshing involved. (I didn_t_t write it incidentally_co_ I_t_m using _t_voxel-raycast_t_ from voxel.js). Picking against a scaled/rotated mesh could be done the same way if the picking vector was put into the mesh_t_s local coords_co_ but to apply it throughout a scene you_t_d need a broadphase test to know which meshes to test against. (I imagine BJS probably has a way to do that?)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The physics also works the same way - testing against a canonical 3D array of world voxels_co_ not meshes. There again I_t_m using a library from voxel.js_co_ though in that case it_t_s one of mine._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_About performance_co_ yeah_co_ I seem to recall that the builtin normal calculation was more than half the running time of your library_co_ and since you have normals for free when meshing I_t_d think that would double your performance right there_co_ if you ever feel like hacking on it. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-02-28T05:10:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_72603_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_12608_qt_ data-ipsquote-username_eq__qt_davrous_qt_ data-cite_eq__qt_davrous_qt_ data-ipsquote-timestamp_eq__qt_1424351871_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Meulta and deltakosh have been working on tweaking Babylon.js for a Minecraft like rendering. This has been presented during mstechdays at Paris. They have done a lot of work and gone far from our core engine. Etienne (Meulta) will soon share the code and approach._lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Reminder - it would be great if someone could post some details about this. I have no idea whether the voxel work I_t_m doing overlaps with what you_t_ve done._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"davrous","Date":"2015-02-28T07:18:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Reminder_dd_ this is a personal project _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_So_co_ my 2 friends will post their work once they will have finished and available spare time to do so._lt_/p_gt__lt_p_gt_Still_co_ I_t_m going to ask to meulta to at least share a bit of concepts he has used_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Meulta","Date":"2015-02-28T14:41:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello Guys_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I am sorry for the late anwser_co_ I have had few spare time these last days. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Deltakosh and I wanted to create a perfomance technical demo for a big event we have in France. We thought trying to create a minecraft like game was a big challenge on the performance part so we gave it a try._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_We have gone through a lot of different implementations and the one we are in right now is one where we have created a new type of mesh (BoxMesh) who is responsible for drawing 0 to X boxes. It is a dynamic one with a starting size where we preset a list of unpositioned boxes (with related normals and uvs). As we do not give positions_co_ nothing is rendered. When we want to _qt_display_qt_ a box we just edit the AGP array corresponding to indices and positions and we ask the mesh to refresh._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The advantage in this is that everything in the mesh is already set. All we have to do is to set the position and BAM_co_ it is displayed. This is the fastest way to display a lot of boxes right now (but we never know_co_ there might be a faster way _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_At first we did not use chunks but the compute time to choose which box to display and hide depending on the player position was to much CPU costly. The current version uses chunks as a data store for the whole world data and chunk displayers to display them around the player. A chunk displayer contains one BoxMesh per material and has the capacity to display a chunk _qt_data_qt_ object._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Our next step is to use a global atlas for textures to avoid having one BoxMesh per material and reduce it to one boxmesh per chunk._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I am currently writing a blog post about this and will publish the code as soon as possible. I would love to get your feedback once it is done ! _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Meulta _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-02-28T23:39:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi Meulta_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks for the writeup_co_ sounds interesting!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If I understand you correctly_co_ it sounds like your project takes a very different approach to meshing than mine but they should be basically equivalent in the steady state (when no chunks are being created or re-meshed). If you want to compare performance mine is _lt_a href_eq__qt_http_dd_//andyhall.github.io/noa-hello-world/_qt_ rel_eq__qt_external nofollow_qt__gt_here_lt_/a_gt_ - basically I implemented greedy meshing similar to what_t_s done in voxel.js._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It will be great to see what you_t_ve made_co_ and looking forward to seeing what you come up with regarding atlases!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Meulta","Date":"2015-03-01T16:11:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi Fenomas_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I will tell you whenever the code and blog post are published ! _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Meulta_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Stephen Andrews","Date":"2015-03-17T06:40:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_72861_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_12608_qt_ data-ipsquote-username_eq__qt_fenomas_qt_ data-cite_eq__qt_fenomas_qt_ data-ipsquote-timestamp_eq__qt_1424492005_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_About performance_co_ yeah_co_ I seem to recall that the builtin normal calculation was more than half the running time of your library_co_ and since you have normals for free when meshing I_t_d think that would double your performance right there_co_ if you ever feel like hacking on it. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_Done in 0.2.5 _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-03-30T08:19:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_73672_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_12608_qt_ data-ipsquote-username_eq__qt_Meulta_qt_ data-cite_eq__qt_Meulta_qt_ data-ipsquote-timestamp_eq__qt_1425134500_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Our next step is to use a global atlas for textures to avoid having one BoxMesh per material and reduce it to one boxmesh per chunk._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I am currently writing a blog post about this and will publish the code as soon as possible. I would love to get your feedback once it is done ! _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Just a friendly reminder that it would be great to see what you guys were working on!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-03-30T22:43:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Meulta is a little bit slow this time _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Meulta","Date":"2015-03-31T21:52:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey guys_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I wanted for everything to be ready before publishing (like the blog article which would come later... _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I published a v0.1 here _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Samples/tree/master/Scenes/BoxMonger_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Samples/tree/master/Scenes/BoxMonger_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Do not look too much at the code in the index.html file _sm_-)_lt_/p_gt__lt_p_gt_Everything is happening in the .ts files._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_There is a readme._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Any feedbacks will be appreciated !_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Have fun_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Meulta_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-04-01T04:51:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks Muelta! I_t_ll have a look._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Initial thoughts_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_1. Are you doing any culling of invisible faces? It looks like you_t_re drawing all the unreachable faces between adjacent solid blocks - or am I missing something?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_2. In the readme you mention doing collisions/gravity next - might want to check _lt_a href_eq__qt_https_dd_//github.com/andyhall/voxel-physics-engine_qt_ rel_eq__qt_external nofollow_qt__gt_this_lt_/a_gt_._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]