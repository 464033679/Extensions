[{"Owner":"gamedevtothepros","Date":"2014-05-16T12:56:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello forum_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_i am trying for hours to get this little physics scene running_co_ but the cube is always falling through the basement_co_ could you give me some advise please?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_My code_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint lang-html_qt__gt_&lt_sm_!doctype html&gt_sm_&lt_sm_html&gt_sm_&lt_sm_head&gt_sm_    &lt_sm_script type_eq__qt_text/javascript_qt_ src_eq__qt_babylon.1.12-beta.js_qt_&gt_sm_&lt_sm_/script&gt_sm_    &lt_sm_script type_eq__qt_text/javascript_qt_ src_eq__qt_hand-1.3.8.js_qt_&gt_sm_&lt_sm_/script&gt_sm_    &lt_sm_script type_eq__qt_text/javascript_qt_ src_eq__qt_cannon.min.js_qt_&gt_sm_&lt_sm_/script&gt_sm_    &lt_sm_style type_eq__qt_text/css_qt_&gt_sm_        html_co_        body_co_        div_co_        canvas {            width_dd_ 100%_sm_            height_dd_ 100%_sm_            padding_dd_ 0_sm_            margin_dd_ 0_sm_            overflow_dd_ hidden_sm_        }    &lt_sm_/style&gt_sm_&lt_sm_/head&gt_sm_&lt_sm_body&gt_sm_    &lt_sm_canvas id_eq__qt_canvas_qt_&gt_sm_&lt_sm_/canvas&gt_sm_    &lt_sm_script type_eq__qt_text/javascript_qt_&gt_sm_        var canvas _eq_ document.getElementById(_qt_canvas_qt_)_sm_        var engine _eq_ new BABYLON.Engine(canvas_co_ true)_sm_        var scene _eq_ new BABYLON.Scene(engine)_sm_        scene.clearColor _eq_ new BABYLON.Color3(1_co_ 1_co_ .75)_sm_ //set Background-Color        scene.enablePhysics(new BABYLON.Vector3(0_co_ -9.81_co_ 0))_sm_         //New Antialias Post        var postProcess _eq_ new BABYLON.FxaaPostProcess(_qt_fxaa_qt__co_ 1.0_co_ null_co_ null_co_ engine_co_ true)_sm_        var light _eq_ new BABYLON.DirectionalLight(_qt_Omni_qt__co_ new BABYLON.Vector3(-10_co_ 10_co_ 10)_co_ scene)_sm_        var light_fill _eq_ new BABYLON.PointLight(_qt_Point_qt__co_ new BABYLON.Vector3(-10_co_ 80_co_ 25)_co_ scene)_sm_        var camera _eq_ new BABYLON.DeviceOrientationCamera(_qt_DevOr_camera_qt__co_ new BABYLON.Vector3(0_co_ 50_co_ -300)_co_ scene)_sm_         //view field of the camera        camera.minZ _eq_ 0_sm_        camera.maxZ _eq_ 10000_sm_        camera.applyGravity _eq_ true_sm_        camera.attachPostProcess(postProcess)_sm_ //ATTACH POST PROCESS        var createRect _eq_ function (width_co_ height_co_ depth) {            var box _eq_ new BABYLON.Mesh.CreateBox(_qt_box_qt__co_ 10_co_ scene)_sm_            box.scaling _eq_ new BABYLON.Vector3(width_co_ height_co_ depth)_sm_            return box_sm_        }_sm_         //Creation of spheres        var object _eq_ createRect(1_co_ 1_co_ 1)_sm_        object.position.x _eq_ 0_sm_        object.position.y _eq_ 50_sm_        object.position.z _eq_ -200_sm_        object.checkCollisions _eq_ true_sm_                //set Physics for cube        object.setPhysicsState({            impostor_dd_ BABYLON.PhysicsEngine.BoxImpostor_co_            mass_dd_ 1_co_            friction_dd_ 0.4_co_            restitution_dd_ 0.3        })_sm_        var ground _eq_ createRect(50_co_ .25_co_ 50)_sm_        ground.checkCollisions _eq_ true_sm_                //set physics for ground object        ground.setPhysicsState({            impostor_dd_ BABYLON.PhysicsEngine.BoxImpostor_co_            mass_dd_ 0_co_            friction_dd_ 0.7_co_            restitution_dd_ 0.7        })_sm_         //assign materials        object.material _eq_ new BABYLON.StandardMaterial(_qt_texture_qt__co_ scene)_sm_        object.material.diffuseTexture _eq_ new BABYLON.Texture(_qt_woodTex.jpg_qt__co_ scene)_sm_                ground.material _eq_ new BABYLON.StandardMaterial(_qt_texture_2_qt__co_scene)_sm_        ground.material.diffuseTexture _eq_ new BABYLON.Texture(_qt_grassTex.jpg_qt__co_scene)_sm_         // Attach the camera to the scene        scene.activeCamera.attachControl(canvas)_sm_         // Once the scene is loaded_co_ just register a render loop to render it        engine.runRenderLoop(function () {            scene.render()_sm_        })_sm_    &lt_sm_/script&gt_sm_&lt_sm_/body&gt_sm_&lt_sm_/html&gt_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-05-16T17:20:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi gdttp!  (I hope you don_t_t mind me calling you that.  Your name is LONG!)  Welcome to the forum._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_To be honest_co_ babylon.1.12 beta has bugs in its implementation of cannon.js.  It is experiencing the same problems I had with 1.8.0... something to do with delta... which I don_t_t understand.  The gravity is going sideways_co_ too_co_ just like it was when I had problems back then._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So_co_ _lt_u_gt__lt_strong_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/misc/gdttp.zip_qt_ rel_eq__qt_external nofollow_qt__gt_here is your project in zip form_lt_/a_gt__lt_/strong_gt__lt_/u_gt_ .  I adjusted a few things... which you can re-adjust if you like.  First_co_ I switched to babylon.js version 1.11.0_co_ which is included in the zip.  I moved the box object to 0_co_50_co_0_co_ and made your ground a bit smaller.  I adjusted your directional light to aim Y -1 straight down.  (You might want to position that up in the air a bit... I forgot to do that).  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I turned off your point light_co_ I remmed-out your post process thing_co_ I temporarily turned off your textures (easy to turn on again) and I turned on an arcRotateCamera instead of a device orientation camera.  The main thing is... your box is now falling straight down_co_ and giving a little restitution bounce when it hits the ground.  It doesn_t_t fall through the ground anymore_co_ or at least not often._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you have questions_co_ feel free to ask them here.  I am sure you already know about our API documentation_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//doc.babylonjs.com_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And our wiki Home Menu_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/wiki_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/wiki_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Again_co_ welcome_co_ good to have you with us_co_ and good luck on your physics engine testing._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gamedevtothepros","Date":"2014-05-16T18:33:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thank you (very_co_ very_co_ very_co_ very ) ** 1000 times. It works!!!  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-05-16T18:35:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey and thank you for posting. Could you create a small repo on jsfiddle? I will it to debug current implementation _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-05-16T19:37:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok I figured out the problem _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_First of all you cannot use a camera.minZ _eq_ 0 (I will check that and enforce a value like 0.001 in this case) because it generates a division by zero_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Then you found an ugly bug in my cannon.js driver _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_you can grab the new beta on github it should be good now!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gamedevtothepros","Date":"2014-05-16T20:49:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Wow_co_ thats very quick. Thank you very much. I tried to implement shadows in my scene and i think i did it the same way it is done in this example_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/wiki/17-Shadows_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/wiki/17-Shadows_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But the shadow looks very strange _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint lang-html_qt__gt_&lt_sm_!DOCTYPE html&gt_sm_&lt_sm_html xmlns_eq__qt_http_dd_//www.w3.org/1999/xhtml_qt_&gt_sm_&lt_sm_head&gt_sm_    &lt_sm_meta http-equiv_eq__qt_Content-Type_qt_ content_eq__qt_text/html_sm_ charset_eq_utf-8_qt_ /&gt_sm_    &lt_sm_!-- &lt_sm_script type_eq__qt_text/javascript_qt_ src_eq__qt_./js/babylon.1.12-beta3.js_qt_&gt_sm_&lt_sm_/script&gt_sm_ --&gt_sm_    &lt_sm_script type_eq__qt_text/javascript_qt_ src_eq__qt_JS/babylon.1.11.0.js_qt_&gt_sm_&lt_sm_/script&gt_sm_    &lt_sm_script type_eq__qt_text/javascript_qt_ src_eq__qt_JS/hand-1.3.8.js_qt_&gt_sm_&lt_sm_/script&gt_sm_    &lt_sm_script type_eq__qt_text/javascript_qt_ src_eq__qt_JS/cannon.min.js_qt_&gt_sm_&lt_sm_/script&gt_sm_    &lt_sm_style type_eq__qt_text/css_qt_&gt_sm_        html_co_        body_co_        div_co_        canvas {            width_dd_ 100%_sm_            height_dd_ 100%_sm_            padding_dd_ 0_sm_            margin_dd_ 0_sm_            overflow_dd_ hidden_sm_        }    &lt_sm_/style&gt_sm_&lt_sm_/head&gt_sm_&lt_sm_body&gt_sm_    &lt_sm_canvas id_eq__qt_canvas_qt_&gt_sm_&lt_sm_/canvas&gt_sm_    &lt_sm_script type_eq__qt_text/javascript_qt_&gt_sm_        var canvas _eq_ document.getElementById(_qt_canvas_qt_)_sm_        var engine _eq_ new BABYLON.Engine(canvas_co_ true)_sm_        var scene _eq_ new BABYLON.Scene(engine)_sm_        scene.clearColor _eq_ new BABYLON.Color3(1_co_ 1_co_ .75)_sm_ //set Background-Color        scene.enablePhysics(new BABYLON.Vector3(0_co_ -9.81_co_ 0))_sm_         //New Antialias Post        //var postProcess _eq_ new BABYLON.FxaaPostProcess(_qt_fxaa_qt__co_ 1.0_co_ null_co_ null_co_ engine_co_ true)_sm_        var light _eq_ new BABYLON.DirectionalLight(_qt_Omni_qt__co_ new BABYLON.Vector3(-5_co_ -5_co_ -5)_co_ scene)_sm_        light.intensity _eq_ 2_sm_        light.position _eq_ new BABYLON.Vector3(0_co_ 0_co_ 0)_sm_        var shadowGenerator _eq_ new BABYLON.ShadowGenerator(512_co_light)_sm_        var ac _eq_ new BABYLON.ArcRotateCamera(_qt_ac_qt__co_ 10_co_ 0_co_ 0_co_ new BABYLON.Vector3(0_co_ 0_co_ 0)_co_ scene)_sm_        //ac.attachPostProcess(postProcess)_sm_        ac.target _eq_ new BABYLON.Vector3(0_co_ 1_co_ 0)_sm_        ac.alpha _eq_ 0_sm_        ac.radius _eq_ 120_sm_        ac.beta _eq_ Math.PI / 4_sm_        ac.wheelPrecision _eq_ 10_sm_        scene.activeCamera _eq_ ac_sm_        scene.activeCamera.attachControl(canvas)_sm_        var createRect _eq_ function (width_co_ height_co_ depth) {            var box _eq_ new BABYLON.Mesh.CreateBox(_qt_box_qt__co_ 10_co_ scene)_sm_            box.scaling _eq_ new BABYLON.Vector3(width_co_ height_co_ depth)_sm_            return box_sm_        }_sm_         //Creation of object        var object _eq_ createRect(1_co_ 1_co_ 1)_sm_        shadowGenerator.getShadowMap().renderList.push(object)_sm_        object.position.y _eq_ 50_sm_        object.rotation.z _eq_ 45_sm_        object.checkCollisions _eq_ true_sm_         //set Physics for cube        object.setPhysicsState({            impostor_dd_ BABYLON.PhysicsEngine.BoxImpostor_co_            mass_dd_ 1_co_            friction_dd_ 0.4_co_            restitution_dd_ 0.3        })_sm_        var ground _eq_ createRect(25_co_ .25_co_ 25)_sm_        ground.receiveShadows _eq_ true_sm_        ground.checkCollisions _eq_ true_sm_         //set physics for ground object        ground.setPhysicsState({            impostor_dd_ BABYLON.PhysicsEngine.BoxImpostor_co_            mass_dd_ 0_co_            friction_dd_ 0.7_co_            restitution_dd_ 0.7        })_sm_         //assign materials        object.material _eq_ new BABYLON.StandardMaterial(_qt_texture_qt__co_ scene)_sm_        //object.material.diffuseTexture _eq_ new BABYLON.Texture(_qt_Textures/wood.jpg_qt__co_ scene)_sm_        ground.material _eq_ new BABYLON.StandardMaterial(_qt_texture_2_qt__co_ scene)_sm_        //ground.material.diffuseTexture _eq_ new BABYLON.Texture(_qt_Textures/grass.jpg_qt__co_ scene)_sm_         //repeat mapping        //ground.material.diffuseTexture.uScale _eq_ 6.0_sm_        //ground.material.diffuseTexture.vScale _eq_ 6.0_sm_         // Once the scene is loaded_co_ just register a render loop to render it        engine.runRenderLoop(function () {            document.onclick _eq_ checkOnClick_sm_            function checkOnClick(event) {                var newMesh _eq_ createRect(1_co_ 1_co_ 1)_sm_                shadowGenerator.getShadowMap().renderList.push(newMesh)_sm_                var x _eq_ 0_sm_                var y _eq_ Math.random() * 50_sm_                var z _eq_ 0_sm_                newMesh.position.x _eq_ x_sm_                newMesh.position.y _eq_ y_sm_                newMesh.position.z _eq_ z_sm_                newMesh.material _eq_ new BABYLON.StandardMaterial(_qt_texture_qt__co_ scene)_sm_                //newMesh.material.diffuseTexture _eq_ new BABYLON.Texture(_qt_Textures/wood.jpg_qt__co_ scene)_sm_                newMesh.setPhysicsState({                    impostor_dd_ BABYLON.PhysicsEngine.BoxImpostor_co_                    mass_dd_ 2_co_                    friction_dd_ 0.7_co_                    restitution_dd_ 0.7                })_sm_            }_sm_            scene.render()_sm_        })_sm_    &lt_sm_/script&gt_sm_&lt_sm_/body&gt_sm_&lt_sm_/html&gt_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-05-17T19:16:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi again!  Looks like you are having good fun._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The main problem with your shadows... was that it needed a line... shadowGenerator.useVarianceShadowMap _eq_ false_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I am newbie myself_co_ so I don_t_t know why that caused such a major difference in your scene.  Maybe some experts will tell us more about it.  Anyway_co_ below is another version of your scene_co_ with quite a few changes_co_ but not too many.  You are doing well.  I just tweaked a few things._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_&lt_sm_!DOCTYPE html&gt_sm_&lt_sm_html xmlns_eq__qt_http_dd_//www.w3.org/1999/xhtml_qt_&gt_sm_&lt_sm_head&gt_sm_\t&lt_sm_meta http-equiv_eq__qt_Content-Type_qt_ content_eq__qt_text/html_sm_ charset_eq_utf-8_qt_ /&gt_sm_\t&lt_sm_!-- &lt_sm_script type_eq__qt_text/javascript_qt_ src_eq__qt_./js/babylon.1.12-beta3.js_qt_&gt_sm_&lt_sm_/script&gt_sm_ --&gt_sm_\t&lt_sm_script type_eq__qt_text/javascript_qt_ src_eq__qt_JS/babylon.1.11.0.js_qt_&gt_sm_&lt_sm_/script&gt_sm_\t&lt_sm_script type_eq__qt_text/javascript_qt_ src_eq__qt_JS/hand-1.3.8.js_qt_&gt_sm_&lt_sm_/script&gt_sm_\t&lt_sm_script type_eq__qt_text/javascript_qt_ src_eq__qt_JS/cannon.min.js_qt_&gt_sm_&lt_sm_/script&gt_sm_\t&lt_sm_style type_eq__qt_text/css_qt_&gt_sm_\t\thtml_co_body_co_div_co_canvas {\t\t\twidth_dd_ 100%_sm_\t\t\theight_dd_ 100%_sm_\t\t\tpadding_dd_ 0_sm_\t\t\tmargin_dd_ 0_sm_\t\t\toverflow_dd_ hidden_sm_\t\t}\t&lt_sm_/style&gt_sm_&lt_sm_/head&gt_sm_&lt_sm_body&gt_sm_\t&lt_sm_canvas id_eq__qt_canvas_qt_&gt_sm_&lt_sm_/canvas&gt_sm_\t&lt_sm_script type_eq__qt_text/javascript_qt_&gt_sm_\t\tdocument.onclick _eq_ checkOnClick_sm_\t\tvar canvas _eq_ document.getElementById(_qt_canvas_qt_)_sm_\t\tvar engine _eq_ new BABYLON.Engine(canvas_co_ true)_sm_\t\tvar scene _eq_ new BABYLON.Scene(engine)_sm_\t\tscene.clearColor _eq_ new BABYLON.Color3(1_co_ 1_co_ .75)_sm_ //set Background-Color\t\tscene.enablePhysics(new BABYLON.Vector3(0_co_ -9.81_co_ 0))_sm_\t\t//New Antialias Post\t\t//var postProcess _eq_ new BABYLON.FxaaPostProcess(_qt_fxaa_qt__co_ 1.0_co_ null_co_ null_co_ engine_co_ true)_sm_\t\tvar light _eq_ new BABYLON.DirectionalLight(_qt_dir_qt__co_ new BABYLON.Vector3(0_co_ -1_co_ 0)_co_ scene)_sm_\t\tlight.intensity _eq_ .5_sm_\t\tlight.position _eq_ new BABYLON.Vector3(-20_co_ 80_co_ 20)_sm_ // up in the air and off to the side a bit.\t\t// in version 1.12_co_ this is a function called light.setDirectionToTarget(target).  For 1.11_co_ we do it manually.\t\t// Setting a light_t_s direction is not very easy.  The below line sets direction to aim at 0_co_0_co_0 automatically.\t\tlight.direction _eq_ BABYLON.Vector3.Normalize(BABYLON.Vector3.Zero().subtract(light.position))_sm_\t\tvar shadowGenerator _eq_ new BABYLON.ShadowGenerator(1024_co_light)_sm_ // 1024 for less jaggies on the shadow.\t\tshadowGenerator.useVarianceShadowMap _eq_ false_sm_ // I don_t_t know why this line was needed_co_ but it was the main shadow problem.\t\t// This extra light... lights up the sides of the boxes that are away from the directional light.\t\t// hemispheric lights often aim at the sky... thus its direction is set to Y _eq_ 1.\t\tvar light2 _eq_ new BABYLON.HemisphericLight(_qt_Hemi0_qt__co_ new BABYLON.Vector3(0_co_ 1_co_ 0)_co_ scene)_sm_\t\tlight2.intensity _eq_ .3_sm_\t\tvar ac _eq_ new BABYLON.ArcRotateCamera(_qt_ac_qt__co_ 10_co_ 0_co_ 0_co_ new BABYLON.Vector3(0_co_ 0_co_ 0)_co_ scene)_sm_\t\t//ac.attachPostProcess(postProcess)_sm_\t\tac.target _eq_ new BABYLON.Vector3(0_co_ 1_co_ 0)_sm_\t\tac.alpha _eq_ 0_sm_\t\tac.radius _eq_ 120_sm_\t\tac.beta _eq_ 1.00_sm_\t\tac.wheelPrecision _eq_ 10_sm_\t\tscene.activeCamera _eq_ ac_sm_\t\tscene.activeCamera.attachControl(canvas)_sm_\t\tvar createRect _eq_ function (width_co_ height_co_ depth) {\t\t\tvar box _eq_ new BABYLON.Mesh.CreateBox(_qt_box_qt__co_ 1_co_ scene)_sm_\t\t\tbox.scaling _eq_ new BABYLON.Vector3(width_co_ height_co_ depth)_sm_\t\t\treturn box_sm_\t\t}_sm_\t\t//Creation of object\t\tvar object _eq_ createRect(5_co_ 5_co_ 5)_sm_\t\tshadowGenerator.getShadowMap().renderList.push(object)_sm_\t\tobject.position.y _eq_ Math.floor((Math.random()*50)+25)_sm_ //  a random number between 25 and 50\t\t// Object rotations on objects with their physics state set... is done differently... because they use quaternions.\t\t// But for all types of rotations_co_ the numbers generally range from -6.28 to +6.28 radians. .707 radians _eq_ 45 degrees.\t\tobject.rotate(BABYLON.Axis.X_co_ .7_co_ BABYLON.Space.LOCAL)_sm_\t\tobject.rotate(BABYLON.Axis.Z_co_ 1.3_co_ BABYLON.Space.LOCAL)_sm_\t\tobject.checkCollisions _eq_ true_sm_\t\t//set Physics for cube\t\tobject.setPhysicsState({\t\t\timpostor_dd_ BABYLON.PhysicsEngine.BoxImpostor_co_\t\t\tmass_dd_ 1_co_\t\t\tfriction_dd_ 0.4_co_\t\t\trestitution_dd_ 0.3\t\t})_sm_\t\t//create the ground\t\t// var ground _eq_ createRect(150_co_ .25_co_ 150)_sm_\t\t// here is our mostly-undocumented createGround command... kind of handy.\t\tvar ground _eq_ BABYLON.Mesh.CreateGround(_qt_grnd_qt__co_ 100_co_ 100_co_ 2_co_ scene)_sm_\t\tground.receiveShadows _eq_ true_sm_\t\tground.checkCollisions _eq_ true_sm_\t\t//set physics for ground object\t\tground.setPhysicsState({\t\t\timpostor_dd_ BABYLON.PhysicsEngine.BoxImpostor_co_\t\t\tmass_dd_ 0_co_\t\t\tfriction_dd_ 0.7_co_\t\t\trestitution_dd_ 0.7\t\t})_sm_\t\t//assign materials\t\tobject.material _eq_ new BABYLON.StandardMaterial(_qt_texture_qt__co_ scene)_sm_\t\t//object.material.diffuseTexture _eq_ new BABYLON.Texture(_qt_Textures/wood.jpg_qt__co_ scene)_sm_\t\tground.material _eq_ new BABYLON.StandardMaterial(_qt_texture_2_qt__co_ scene)_sm_\t\tground.material.backFaceCulling _eq_ false_sm_ // this is so you can see the bottom of the ground.\t\t//ground.material.diffuseTexture _eq_ new BABYLON.Texture(_qt_Textures/grass.jpg_qt__co_ scene)_sm_\t\t//repeat mapping\t\t//ground.material.diffuseTexture.uScale _eq_ 6.0_sm_\t\t//ground.material.diffuseTexture.vScale _eq_ 6.0_sm_\t\t// render loop!\t\tengine.runRenderLoop(function () {\t\t\tscene.render()_sm_\t\t})_sm_\t\t// I moved this function outside-of the render loop.  Better to keep the renderloop tiny.\t\t// The onClick check is way at the top.  It does not need to be in the render loop.\t\tfunction checkOnClick(event) {\t\t\tvar newMesh _eq_ createRect(5_co_ 5_co_ 5)_sm_\t\t\tshadowGenerator.getShadowMap().renderList.push(newMesh)_sm_\t\t\tvar x _eq_ 0_sm_\t\t\t// var y _eq_ Math.random() * 50_sm_\t\t\tvar y _eq_ Math.floor((Math.random()*50)+25)_sm_ //  a random number between 25 and 50\t\t\tvar z _eq_ 0_sm_\t\t\tnewMesh.position.x _eq_ x_sm_\t\t\tnewMesh.position.y _eq_ y_sm_\t\t\tnewMesh.position.z _eq_ z_sm_\t\t\tnewMesh.material _eq_ new BABYLON.StandardMaterial(_qt_texture_qt__co_ scene)_sm_\t\t\t//newMesh.material.diffuseTexture _eq_ new BABYLON.Texture(_qt_Textures/wood.jpg_qt__co_ scene)_sm_\t\t\tnewMesh.setPhysicsState({\t\t\t\timpostor_dd_ BABYLON.PhysicsEngine.BoxImpostor_co_\t\t\t\tmass_dd_ 2_co_\t\t\t\tfriction_dd_ 0.7_co_\t\t\t\trestitution_dd_ 0.7\t\t\t})_sm_\t\t}_sm_\t&lt_sm_/script&gt_sm_&lt_sm_/body&gt_sm_&lt_sm_/html&gt_sm__lt_/pre_gt__lt_p_gt_Even though I changed the way your ground is created (from your box method to our createGround PLANE method)_co_ I left the ground imposter as BoxImposter.  This allows your boxes to fall-off the edge of the ground.  If you DON_t_T want the boxes to fall off the edge_co_ change your ground_t_s BoxImposter to be PlaneImposter instead.  I still want to do some more studying on your project... to see if I can learn why some things are acting strange_co_ but this will get you rolling sooner.  Be sure to increase your restitution numbers on your ground and boxes... for more bounce (and maybe more fun).  Your box stacking thing is quite fun already_co_ isn_t_t it?  I enjoyed watching the box activity while i adjusted things.  Keep up the good work on the your fun experiments.  You are becoming a babylon.js expert rather quickly.  Be well!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gamedevtothepros","Date":"2014-05-17T20:56:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_thank you very much for your help. I learned a lot from you and i finally got shadows  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I am glad to read that you had fun with my little physics-idea!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]