[{"Owner":"babbleon","Date":"2018-03-01T16:10:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI would like to convert the material definitions in a .babylon file to the most basic PBR possible.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCurrently_co_ exported from Blender_co_ I have two materials_sm_ bed.Floor &amp_sm_ Bed.Wood_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt__qt_materials_qt__dd_[  \n   {  \n      _qt_name_qt__dd__qt_bed.Floor_qt__co_\n      _qt_id_qt__dd__qt_bed.Floor_qt__co_\n      _qt_ambient_qt__dd_[  \n         1_co_\n         1_co_\n         1\n      ]_co_\n      _qt_diffuse_qt__dd_[  \n         1_co_\n         1_co_\n         1\n      ]_co_\n      _qt_specular_qt__dd_[  \n         0_co_\n         0_co_\n         0\n      ]_co_\n      _qt_emissive_qt__dd_[  \n         0_co_\n         0_co_\n         0\n      ]_co_\n      _qt_specularPower_qt__dd_50_co_\n      _qt_alpha_qt__dd_1_co_\n      _qt_backFaceCulling_qt__dd_true_co_\n      _qt_checkReadyOnlyOnce_qt__dd_false_co_\n      _qt_maxSimultaneousLights_qt__dd_4\n   }_co_\n   {  \n      _qt_name_qt__dd__qt_bed.Wood_qt__co_\n      _qt_id_qt__dd__qt_bed.Wood_qt__co_\n      _qt_ambient_qt__dd_[  \n         1_co_\n         1_co_\n         1\n      ]_co_\n      _qt_diffuse_qt__dd_[  \n         1_co_\n         1_co_\n         1\n      ]_co_\n      _qt_specular_qt__dd_[  \n         0_co_\n         0_co_\n         0\n      ]_co_\n      _qt_emissive_qt__dd_[  \n         0_co_\n         0_co_\n         0\n      ]_co_\n      _qt_specularPower_qt__dd_30_co_\n      _qt_alpha_qt__dd_1_co_\n      _qt_backFaceCulling_qt__dd_true_co_\n      _qt_checkReadyOnlyOnce_qt__dd_false_co_\n      _qt_maxSimultaneousLights_qt__dd_4\n   }\n]_co__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI would like to manually edit this file so that BJS treats this as PBR? But can_t_t work out what to do.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYes_co_ I know I can create new materials in my scene script... but would be grateful if anyone could advise what changes I need to make to the .babylon file by hand? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHope this makes sense!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you all.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-03-01T16:58:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI do not know_co_ but please post your hand changes.  PBR will not be in version 5.6 of exporter_co_ but knowing what to write will help for the future.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI can give a hint though.  Look through this _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/PBR/babylon.pbrMaterial.ts#L62_qt_ rel_eq__qt_external nofollow_qt__gt_file_lt_/a_gt__co_ and add a tag every time you see a _t_@serialize()_t_ line. For instance_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt__qt_directIntensity_qt__dd_ 1_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tOnce you do the leg work_co_ post what you got and maybe someone can further explain.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"babbleon","Date":"2018-03-01T17:11:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8492_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/_qt_ rel_eq__qt__qt__gt_@JCPalmer_lt_/a_gt_ - thank you for this hint.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI will have a mess around with this later on this evening. In the mean time_co_ below is what extracted from _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/PBR/babylon.pbrMaterial.ts_qt_ rel_eq__qt_external nofollow_qt__gt_here_lt_/a_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet_t_s see if I put these in my .babylon_co_ it will automagically make it a PBR - are things ever that simple?\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_alphaCutOff _eq_ 0.4_sm_\nambientTextureStrength_dd_ number _eq_ 1.0_sm_\ndirectIntensity_dd_ number _eq_ 1.0_sm_\ndisableBumpMap_dd_ boolean _eq_ false_sm_\ndisableLighting _eq_ false_sm_\nemissiveIntensity_dd_ number _eq_ 1.0_sm_\nenvironmentIntensity_dd_ number _eq_ 1.0_sm_\nforceAlphaTest _eq_ false_sm_\nforceIrradianceInFragment _eq_ false_sm_\nforceNormalForward _eq_ false_sm_\nindexOfRefraction _eq_ 0.66_sm_\ninvertNormalMapX _eq_ false_sm_\ninvertNormalMapY _eq_ false_sm_\ninvertRefractionY _eq_ false_sm_\nlinkRefractionWithTransparency _eq_ false_sm_\nmaxSimultaneousLights _eq_ 4_sm_\nmetallic_dd_ number_sm_\nmicroSurface _eq_ 1.0_sm_\nparallaxScaleBias _eq_ 0.05_sm_\nroughness_dd_ number_sm_\nspecularIntensity_dd_ number _eq_ 1.0_sm_\ntwoSidedLighting _eq_ false_sm_\nuseAlphaFresnel _eq_ false_sm_\nuseAlphaFromAlbedoTexture _eq_ false_sm_\nuseAmbientInGrayScale _eq_ false_sm_\nuseAmbientOcclusionFromMetallicTextureRed _eq_ false_sm_\nuseAutoMicroSurfaceFromReflectivityMap _eq_ false_sm_\nuseHorizonOcclusion _eq_ true_sm_\nuseLightmapAsShadowmap _eq_ false_sm_\nuseLinearAlphaFresnel _eq_ false_sm_\nuseMetallnessFromMetallicTextureBlue _eq_ false_sm_\nuseMicroSurfaceFromReflectivityMapAlpha _eq_ false_sm_\nuseObjectSpaceNormalMap _eq_ false_sm_\nuseParallax _eq_ false_sm_\nuseParallaxOcclusion _eq_ false_sm_\nusePhysicalLightFalloff _eq_ true_sm_\nuseRadianceOcclusion _eq_ true_sm_\nuseRadianceOverAlpha _eq_ true_sm_\nuseRoughnessFromMetallicTextureAlpha _eq_ true_sm_\nuseRoughnessFromMetallicTextureGreen _eq_ false_sm_\nuseSpecularOverAlpha _eq_ true_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-03-01T17:18:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIn this case there are just a lot of numbers and booleans.  Once you start dealing with nested arrays or frame animation_co_ a .babylon get a lot more tricky\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"V!nc3r","Date":"2018-03-01T17:29:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou can directly export to PBR using the _lt_a href_eq__qt_https_dd_//github.com/KhronosGroup/glTF-Blender-Exporter_qt_ rel_eq__qt_external nofollow_qt__gt_GLTF exporter_lt_/a_gt__co_ if this file format is adequate for your needs.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"babbleon","Date":"2018-03-01T17:35:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/20526-vnc3r/?do_eq_hovercard_qt_ data-mentionid_eq__qt_20526_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/20526-vnc3r/_qt_ rel_eq__qt__qt__gt_@V!nc3r_lt_/a_gt_ - thank you. I tried that but it only supports one animation - as far as I_t_m aware.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHowever_co_ I have just looked at the GLTF file and the material bit of it may work in the .babylon _dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_    _qt_materials_qt__dd_ [\n        {\n            _qt_emissiveFactor_qt__dd_ [\n                0.0_co_\n                0.0_co_\n                0.0\n            ]_co_\n            _qt_name_qt__dd_ _qt_Floor_qt__co_\n            _qt_pbrMetallicRoughness_qt__dd_ {\n                _qt_baseColorFactor_qt__dd_ [\n                    0.64000004529953_co_\n                    0.64000004529953_co_\n                    0.64000004529953_co_\n                    1.0\n                ]_co_\n                _qt_metallicFactor_qt__dd_ 0.0_co_\n                _qt_roughnessFactor_qt__dd_ 1.0\n            }\n        }_co_\n        {\n            _qt_emissiveFactor_qt__dd_ [\n                0.0_co_\n                0.0_co_\n                0.0\n            ]_co_\n            _qt_name_qt__dd_ _qt_Wood_qt__co_\n            _qt_pbrMetallicRoughness_qt__dd_ {\n                _qt_baseColorFactor_qt__dd_ [\n                    1.0_co_\n                    1.0_co_\n                    1.0_co_\n                    1.0\n                ]_co_\n                _qt_baseColorTexture_qt__dd_ {\n                    _qt_index_qt__dd_ 0_co_\n                    _qt_texCoord_qt__dd_ 0\n                }_co_\n                _qt_metallicFactor_qt__dd_ 0.20000000298023224_co_\n                _qt_roughnessFactor_qt__dd_ 0.5\n            }\n        }\n    ]_co__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8492_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/_qt_ rel_eq__qt__qt__gt_@JCPalmer_lt_/a_gt_ - as a start_co_ I think I will try this as I know it works at least in GLTF... but I have to run now.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"babbleon","Date":"2018-03-01T20:41:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8492_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/_qt_ rel_eq__qt__qt__gt_@JCPalmer_lt_/a_gt_  Okay_co_ so.. it looks like all you need to do is add the following to the .babylon file_dd_ _lt_strong_gt__qt_customType_qt__dd__qt_BABYLON.PBRMaterial_qt__lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy materials now look like this_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt__qt_materials_qt__dd_[  \n   {  \n      _qt_name_qt__dd__qt_bed.Floor_qt__co_\n      _qt_id_qt__dd__qt_bed.Floor_qt__co_\n      _qt_customType_qt__dd__qt_BABYLON.PBRMaterial_qt__co_\n      _qt_ambient_qt__dd_[  \n         1_co_\n         1_co_\n         1\n      ]_co_\n      _qt_diffuse_qt__dd_[  \n         1_co_\n         1_co_\n         1\n      ]_co_\n      _qt_specular_qt__dd_[  \n         0_co_\n         0_co_\n         0\n      ]_co_\n      _qt_emissive_qt__dd_[  \n         0_co_\n         0_co_\n         0\n      ]_co_\n      _qt_specularPower_qt__dd_50_co_\n      _qt_alpha_qt__dd_1_co_\n      _qt_backFaceCulling_qt__dd_true_co_\n      _qt_checkReadyOnlyOnce_qt__dd_false_co_\n      _qt_maxSimultaneousLights_qt__dd_4\n   }_co_\n   {  \n      _qt_name_qt__dd__qt_bed.Wood_qt__co_\n      _qt_id_qt__dd__qt_bed.Wood_qt__co_\n      _qt_customType_qt__dd__qt_BABYLON.PBRMaterial_qt__co_\n      _qt_ambient_qt__dd_[  \n         1_co_\n         1_co_\n         1\n      ]_co_\n      _qt_diffuse_qt__dd_[  \n         1_co_\n         1_co_\n         1\n      ]_co_\n      _qt_specular_qt__dd_[  \n         0_co_\n         0_co_\n         0\n      ]_co_\n      _qt_emissive_qt__dd_[  \n         0_co_\n         0_co_\n         0\n      ]_co_\n      _qt_specularPower_qt__dd_30_co_\n      _qt_alpha_qt__dd_1_co_\n      _qt_backFaceCulling_qt__dd_true_co_\n      _qt_checkReadyOnlyOnce_qt__dd_false_co_\n      _qt_maxSimultaneousLights_qt__dd_4\n   }\n]_co__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tSome of the properties are maybe redundant as it_t_s now a PBRMaterial_co_ but if you log these materials to console they show as PBR.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere_t_s a _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#73069S%232_qt_ rel_eq__qt_external nofollow_qt__gt_playground_lt_/a_gt_ that exports the scene.materials as a .babylon_co_ you can pick through the file to see how things are done with PBR.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]