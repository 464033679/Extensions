[{"Owner":"ChaseMoskal","Date":"2016-06-27T03:31:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey folks! I_t_m new to the HTML5 Game Devs community_co_ and am in the process of learning BabylonJS.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m looking for advice on how I should simulate vehicular physics for tanks in an open source game project I_t_ve began with some old friends.\n_lt_/p_gt_\n\n_lt_ul_gt__lt_li_gt_\n\t\t_lt_a href_eq__qt_https_dd_//github.com/ChaseMoskal/Nanoshooter_qt_ rel_eq__qt_external nofollow_qt__gt__qt_Nanoshooter_qt_ open source tank game on GitHub_lt_/a_gt_\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\t_lt_a href_eq__qt_https_dd_//github.com/ChaseMoskal/Nanoshooter/issues/23_qt_ rel_eq__qt_external nofollow_qt__gt_Issue specifically about the tank physics_lt_/a_gt_\n\t_lt_/li_gt_\n_lt_/ul_gt__lt_p_gt_\n\tWe_t_re hoping to create a physical simulation for tank movement that is as simple and optimal as possible_co_ because we want to be able to simulate as many tanks as we can get away with.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe_t_re not looking for realism or high accuracy — we_t_re more interested in producing a zippy and capable feel to the tank movement_co_ where the player can easily roll over obstacles instead of becoming stuck on them_co_ making the player feel in control rather than frustrated at a finicky tank that gets stuck on rocks and things.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI was hoping that somebody from this community might be able to point us in the right direction with some tips_co_ pointers_co_ and ideas about how we could accomplish physics based tank movement for our game.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOverall_co_ with this game project_co_ we_t_re hoping to build a fun tank game_co_ but also contribute to this community and the BabylonJS ecosystem by creating an open source framework for building online multiplayer realtime action games on BabylonJS.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tGlad to have joined this community_co__lt_br /_gt_\n\tThanks!_lt_br /_gt_\n\t  - Chase_co_ and the Nanoshooter team.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ChaseMoskal","Date":"2016-06-28T01:36:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI_t_m going to bump this thread_co_ because I do believe that this thread sunk to the bottom of the first page before the moderator approved it_co_ so I think it_t_s fair.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-06-28T03:34:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCould you say more ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHow do you intend to design the ground ? a heightmap maybe ? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tDo you intend to set some extra obstacles as independent BJS objects on the ground ? etc ? do you intend to use one of BJS pluggable physics engine (oimo or cannon) or to make your own ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-06-28T19:37:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Chase_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\ta tank is a heavy bulk of metal_co_ that has good suspensions and low speed. It has some wheels (the tanks I know have 6 _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ )_co_ and a chain thing that circulates them. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe chain would be the hardest part to simulate_co_ IMHO. The rest is more than possible.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou will need to choose your physics engine_co_ of course after considering the ups and downs of both. To build a tank_co_ I think Oimo_t_s prismatic joints will be very helpful. cannon_co_ however_co_ has better support for different types of meshes. So_co_ if you can live with basic primitives (sphere_co_ box_co_ cylinder)_co_ go with oimo. I showed once how to build a car with suspensions using oimo and babylon - _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#SFELK%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#SFELK#1_lt_/a_gt_ . I am in the middle of writing a blog post about it_co_ fully explaining it. But the code is there.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ChaseMoskal","Date":"2016-06-29T02:49:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_134191_qt_ data-ipsquote-contentid_eq__qt_23449_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1467084871_qt_ data-ipsquote-userid_eq__qt_5453_qt_ data-ipsquote-username_eq__qt_jerome_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t23 hours ago_co_ jerome said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tCould you say more ?\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tHow do you intend to design the ground ? a heightmap maybe ? \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tDo you intend to set some extra obstacles as independent BJS objects on the ground ? etc ? do you intend to use one of BJS pluggable physics engine (oimo or cannon) or to make your own ?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tWe_t_re hoping for the ground to be composed of hand-sculpted meshes_co_ allowing for interesting possibilities like cliffs_co_ bridges_co_ caves_co_ etc. We_t_re looking to create a dynamic environment_co_ including other physical obstacles that can be interacted with_co_ run over_co_ bumped into_co_ etc.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe_t_re also preferring to use the BJS pluggable physics engine unless there are major drawbacks with the approach. Something that_t_s caught my eye_co_ is that I haven_t_t noticed a mechanism to engage the physics engine under a web worker. Is there a way to run physics on a dedicated worker?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for your input and questions.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ChaseMoskal","Date":"2016-06-29T03:13:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_134327_qt_ data-ipsquote-contentid_eq__qt_23449_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1467142650_qt_ data-ipsquote-userid_eq__qt_10310_qt_ data-ipsquote-username_eq__qt_RaananW_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t7 hours ago_co_ RaananW said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tHi Chase_co_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\ta tank is a heavy bulk of metal_co_ that has good suspensions and low speed. It has some wheels (the tanks I know have 6 _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ )_co_ and a chain thing that circulates them. \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThe chain would be the hardest part to simulate_co_ IMHO. The rest is more than possible.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tYou will need to choose your physics engine_co_ of course after considering the ups and downs of both. To build a tank_co_ I think Oimo_t_s prismatic joints will be very helpful. cannon_co_ however_co_ has better support for different types of meshes. So_co_ if you can live with basic primitives (sphere_co_ box_co_ cylinder)_co_ go with oimo. I showed once how to build a car with suspensions using oimo and babylon - _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#SFELK%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#SFELK#1_lt_/a_gt_ . I am in the middle of writing a blog post about it_co_ fully explaining it. But the code is there.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThanks for sharing your vehicle physics demo_co_ I appreciate it!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe_t_re hoping to prioritize performance over physical accuracy. If Cannon can support physics impostors based on any convex mesh_co_ we may want to pursue that_co_ perhaps creating a simple situation where two trapezoidal impostors might form _qt_skis_qt_ where the treads are. The challenge may then be to create the equivalent of a parking brake for the tank — if the driver stops moving while on a steep hill_co_ the tank shouldn_t_t slide down the hill. Does BabylonJS physics have a Dampening feature? Perhaps we want the tank to have really strong traction (friction) against the ground_co_ which is only overcome by very powerful movement forces — and then the movement is disabled whenever the tank isn_t_t directly against the ground_co_ so that it doesn_t_t ever go flying? As you can tell_co_ I_t_m just shooting ideas around_co_ and am not very sure of how this might be accomplished properly given the tools and features BabylonJS or its underlying physics engines.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe want the tank to have a lot of horsepower and be capable of pushing obstacles around and hopefully rolling over things. With an extremely simple physical setup like described above_co_ we may be forced to forgo this capability for the sake of performance (I_t_m imagining that for a proper _qt_roll-over_qt__co_ we really would need highly dynamic and realistic treads that can conform to the surface profile of whatever is being rolled over_co_ if you know what I mean).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe_t_re hoping to support scenes of 10 or more of these simple tanks rolling around.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m not sure how we_t_ll animate the treads rolling_co_ but perhaps some solution that would involve scrolling the UV coordinates for those polygons in a specific way.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks again for your thoughts and advice.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]