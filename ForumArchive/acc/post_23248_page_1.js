[{"Owner":"V!nc3r","Date":"2016-06-17T14:01:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIs it possible to set a startColor for particles ? I know there is color1_co_ color2 &amp_sm_ colorDead_co_ but i want to avoid the _qt_pop_qt_ when a particle is emit_co_ and for that i want to set a full transparent color_co_ which gradually switch to color1 &amp_sm_ color2.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_uKIuZ3E.gif_qt_ class_eq__qt_ipsImage_qt_ src_eq__qt_http_dd_//i.imgur.com/uKIuZ3E.gif_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ it could be cool to tell a particle that its size change over time (become bigger or smaller)_co_ i don_t_t know if this option exist.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-06-17T15:28:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe idea to apply your changes could be to provide your own updateFunction.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/tutorials/Particles#custom-functions_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/tutorials/Particles#custom-functions_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"chicagobob123","Date":"2016-06-17T18:10:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYes yes. On intialize you can create a time member and fill it and decide what to do over time. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tvar timeInSec_eq_var time _eq_ new Date().getTime()/1000_sm_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can add that to each particle. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tp.timeInSec_eq_var time _eq_ new Date().getTime()/1000_sm_  on initialization. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen you do the update you can decide what you want have happen. Maybe alter the scale over time? \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"V!nc3r","Date":"2016-06-23T08:14:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOk thanks. These are kind of things that scared graphist usually ahah _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-06-25T15:43:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi guys.  Let_t_s take a look at some custom particle functions.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#WQBB3%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#WQBB3#4_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRight after I create the PS particle system in line 49_co_ I set the customUpdateFunc in line 50. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAfter that_co_ myupdateFunction is used for updating... instead of the default one. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn myupdateFunction_co_ I no longer use color1_co_ color2_co_ and colorDead_co_ and instead just make the particles change to a different random color each update cycle (lines 36-38).  Notice in lines 28 and 29 that each _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Particles/babylon.particle.js_qt_ rel_eq__qt_external nofollow_qt__gt_particle_lt_/a_gt_ has an _lt_em_gt_age_lt_/em_gt_ and _lt_em_gt_lifeTime_lt_/em_gt_ properties_co_ by default.  A simple _lt_em_gt_if (particle.age &gt_sm_ ???) {...}_lt_/em_gt_ could easily be used in your custom update func.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet_t_s look at a standard default update function... _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Particles/babylon.particleSystem.js#L99_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Particles/babylon.particleSystem.js#L99_lt_/a_gt_ .  Notice that a value called _lt_em_gt__scaledUpdateSpeed_lt_/em_gt_ is used heavily... and that might be a helper for you_co_ too_co_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/20526-vnc3r/?do_eq_hovercard_qt_ data-mentionid_eq__qt_20526_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/20526-vnc3r/_qt_ rel_eq__qt__qt__gt_@V!nc3r_lt_/a_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy demo goes a bit further_co_ and also uses a customStartPosition function_co_ too.  (lines 58-148).  This is how I accomplished 24 emitters.  Notice that the installation of the startPositionFunction is not done the same (no line 50 for startPositionFunction)... so you must name your _qt_override_qt_ function... startPositionFunction.   But I could have also done ps.startPositionFunction _eq_ myStartPositionFunction... and that would have worked_co_ too.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAll in all_co_ study this playground a bit_co_ and in no time_co_ you will be making custom/override functions for our standard and SPS particle systems... with good success.  Party(cle) on!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"aWeirdo","Date":"2016-06-25T16:21:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tVery interesting question_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat i personally did_co_ was that i made the particalsystem a _qt_child_qt_ of the emitter_co_ the emitter is then stored in an array of emitters (containing all emitters &amp_sm_ particalSystems of my scene)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tvar emitter _eq_ []_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t//function that creates a new emitter &amp_sm_ particle system.. i don_t_t have long so_co_ need to get to work_co_ so i_t_ll only post critical points.\n_lt_/p_gt_\n\n_lt_p_gt_\n\temitter[id].particleSystem _eq_ new BABYLON.ParticleSystem(_qt_particles_qt__co_ 2000_co_ scene)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI then added a specific _qt_updateType_qt_(custom) Id to the particle system depending on what it is and what i want to change over time.\n_lt_/p_gt_\n\n_lt_p_gt_\n\temitter[id].updateType _eq_ 1_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tin my case 1 is for adding a _qt_tail_qt_ to a moving ball of fire.(reducing the size of each particle as it gets older)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI then go though each emitter in the renderLoop_co_ check the updateType and for updateType _eq__eq__eq_ 1_co_ i reduce the size of the particles as they grow older _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tparticles can be accessed from emitter[id].particleSystem.particles.\n_lt_/p_gt_\n\n_lt_p_gt_\n\ttry to make a PG and play around with it_co_ console.log to see what_t_s what _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ have fun and good luck!\n_lt_/p_gt_\n\n_lt_p_gt_\n\thopefully this added another idea of how to work with particles.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]