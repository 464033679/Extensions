[{"Owner":"Flomotion","Date":"2015-09-13T10:02:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi all_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m importing my camera position and rotation from a .max export to .Babylon. And I make the camera fly from 1 camera point to the other._lt_/p_gt__lt_p_gt_But in some cases the camera rotation rotates like 270 degrees to get to the end rotation. I_t_ve set up the angles in this playground._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#W27OD_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#W27OD_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_How can I calculate the difference in angle between 2 vectors and convert 1 of them to make sure that the shortest route will be taken?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_thanks_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_To clarify_dd__lt_/p_gt__lt_p_gt__lt_img src_eq__qt_http_dd_//flomotion.nl/babylon/cam_rotation.jpg_qt_ alt_eq__qt_cam_rotation.jpg_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dimumurray","Date":"2015-09-14T14:59:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You can use the _lt_strong_gt_Dot Product_lt_/strong_gt_ to find the shortest angle between the vectors. Let _lt_strong_gt_A_lt_/strong_gt_ be the vector defined by the dark blue colored arrow and let _lt_strong_gt_B_lt_/strong_gt_ be the vector defined by the cyan colored arrow. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The _lt_strong_gt_Dot Product_lt_/strong_gt_ of two vectors can be calculated using any of two equations._lt_br_gt__lt_br_gt_One equation states that the _lt_strong_gt_Dot Product_lt_/strong_gt_ of 2 vectors is the product of the magnitude of the vectors times the cosine of the shortest angle (theta) between them_co_ written as_dd__lt_/p_gt__lt_p_gt__lt_strong_gt_A . B _eq_ ||A|| ||B|| cos(theta)_lt_/strong_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The other equation finds the dot product by taking the product of the x and y components of the two vectors and adding them together_co_ written as_dd__lt_br_gt__lt_strong_gt_A . B _eq_ A_lt_sub_gt_x_lt_/sub_gt_B_lt_sub_gt_x_lt_/sub_gt_ + A_lt_sub_gt_y_lt_/sub_gt_B_lt_sub_gt_y_lt_/sub_gt__lt_/strong_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_These equations are equivalent so you can solve for theta using_dd__lt_br_gt__lt_strong_gt_A_lt_sub_gt_x_lt_/sub_gt_B_lt_sub_gt_x_lt_/sub_gt_ + A_lt_sub_gt_y_lt_/sub_gt_B_lt_sub_gt_y_lt_/sub_gt_ _eq_ ||A|| ||B|| cos(theta)_lt_/strong_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_However you can simplify things a great deal by normalizing the two vectors so that their magnitudes are of unit length. Once normalized the magnitudes of _lt_strong_gt_A_lt_/strong_gt_ and _lt_strong_gt_B_lt_/strong_gt_ are both 1. So you end up with._lt_br_gt__lt_strong_gt_A_lt_sup_gt_n_lt_/sup_gt_ _eq_ normalize( A )_lt_/strong_gt__lt_/p_gt__lt_p_gt__lt_strong_gt_B_lt_sup_gt_n_lt_/sup_gt_ _eq_ normalize( B )_lt_/strong_gt__lt_br_gt__lt_br_gt_And from that you get_dd__lt_br_gt__lt_strong_gt_A_lt_sup_gt_n_lt_/sup_gt__lt_sub_gt_x_lt_/sub_gt_B_lt_sup_gt_n_lt_/sup_gt__lt_sub_gt_x_lt_/sub_gt_ + A_lt_sup_gt_n_lt_/sup_gt__lt_sub_gt_y_lt_/sub_gt_B_lt_sup_gt_n_lt_/sup_gt__lt_sub_gt_y_lt_/sub_gt_ _eq_ cos(theta) _lt_/strong_gt__lt_br_gt__lt_br_gt_and theta can be found using_dd__lt_br_gt__lt_strong_gt_theta _eq_ arccos(A_lt_sup_gt_n_lt_/sup_gt__lt_sub_gt_x_lt_/sub_gt_B_lt_sup_gt_n_lt_/sup_gt__lt_sub_gt_x_lt_/sub_gt_ + A_lt_sup_gt_n_lt_/sup_gt__lt_sub_gt_y_lt_/sub_gt_B_lt_sup_gt_n_lt_/sup_gt__lt_sub_gt_y_lt_/sub_gt_)_lt_/strong_gt__lt_br_gt__lt_br_gt_There is still one problem though. Theta is just the raw angle of rotation_co_ a scalar value. It doesn_t_t tell you whether you should be doing clockwise rotation or counter-clockwise rotation from _lt_strong_gt_A_lt_/strong_gt_ to _lt_strong_gt_B_lt_/strong_gt_. To figure that out you_t_ll have to use the 2D version of the _lt_strong_gt_Cross-Product_lt_/strong_gt_ (aka _lt_strong_gt_Wedge Product_lt_/strong_gt_)._lt_/p_gt__lt_p_gt_ _lt_br_gt_To find the 2D _lt_strong_gt_Cross-Product_lt_/strong_gt_ of vector _lt_strong_gt_A_lt_/strong_gt_ and _lt_strong_gt_B_lt_/strong_gt_ use the following equation_dd__lt_br_gt__lt_strong_gt_A X B _eq_ A_lt_span style_eq__qt_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_15px_sm__qt__gt__lt_sub_gt_x_lt_/sub_gt_B_lt_sub_gt_y_lt_/sub_gt_ - A_lt_sub_gt_y_lt_/sub_gt_B_lt_sub_gt_x_lt_/sub_gt__lt_/span_gt__lt_/strong_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now what you want to know is if the result of the above gives you a _lt_strong_gt_+ve_lt_/strong_gt_ or _lt_strong_gt_-ve_lt_/strong_gt_ value. If _lt_strong_gt_+ve_lt_/strong_gt_ you have clockwise rotation_co_ if _lt_strong_gt_-ve_lt_/strong_gt_ you have counter-clockwise rotation. Once you know that you can make theta _lt_strong_gt_-ve_lt_/strong_gt_ or leave it as _lt_strong_gt_+ve_lt_/strong_gt_._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Flomotion","Date":"2015-09-14T15:20:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_wow.. thanks._lt_/p_gt__lt_p_gt_I was afraid it wouldn_t_t be a very simple thing. But.. I should be able to write it down in code. If I manage to get it right I_t_ll post it here._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I just noticed that I see no z-value in the equation. Does it mean that this calculation is only for 2D vectors?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dimumurray","Date":"2015-09-14T15:35:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I assumed this was a 2D question. These concepts can be applied to 3D (Babylon_t_s _lt_a href_eq__qt_http_dd_//www.sokrate.fr/documentation/babylonjs/BABYLON.Vector3.html_qt_ rel_eq__qt_external nofollow_qt__gt_Vector3_lt_/a_gt_ class has the requisite methods to cover both dot and cross products)_co_ but you_t_d be far better off using quaternions (Babylon_t_s _lt_a href_eq__qt_http_dd_//www.sokrate.fr/documentation/babylonjs/BABYLON.Quaternion.html_qt_ rel_eq__qt_external nofollow_qt__gt_Quaternion_lt_/a_gt_ class should cover your needs)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you go the Quaternion route you_t_ll still need to find the angle using the dot product. You_t_ll need the cross produlct as well_co_ but to determine the axis of rotation. In 3D the cross-product of 2 vectors gives you a vector that is perpendicular to both vector (which can then serve as the axis of rotation common to both). You can use the Vector3_t_s cross product method to calculate that vector and then pass that vector and the angle to the method Quaternion_dd__dd_RotationAxis(angle_co_ axis) to get the Quaternion. Then you can use the slerp method on it to smoothly animate the camera._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Best part is that you don_t_t have to worry about clockwise and counter-clockwise rotation (as in the 2D case). That comes built in once your calculate the axis of rotation._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Flomotion","Date":"2015-09-14T15:55:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks for your answer. Would you mind giving a small example?_lt_/p_gt__lt_p_gt_I might be able to pull it of with your description. But for now it sounds very complicated to me._lt_/p_gt__lt_p_gt_Hope I_t_m not overasking._lt_/p_gt__lt_p_gt__dd_-)_lt_/p_gt__lt_p_gt_Floris_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2015-09-14T17:28:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It_t_s easier to ease a rotation of this type with quaternions_co_ but since bablyon cameras don_t_t have a rotationQuaternion property I first rotated a box mesh and then copied it to the camera._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#W27OD%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#W27OD#2_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Flomotion","Date":"2015-09-14T18:38:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi Adam_co__lt_/p_gt__lt_p_gt_thanks for your reply. And clever to use the box for the rotationQuaternion._lt_/p_gt__lt_p_gt_The rotation seems to be taking the short route. But the starting and ending viewpoint is different from my example._lt_/p_gt__lt_p_gt_I noticed that you had shifted the value_t_s in the fromRotation and toRotation._lt_/p_gt__lt_p_gt_But changing it to my original value_t_s unfortunately didn_t_t fix it.(though hard to see.. with only clouds _sm_-)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ll try to do what Dimumurray suggested with your method._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2015-09-14T19:23:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It does look like there is an issue with my proposed solution._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I can_t_t make the camera ease to the left using a negative value_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#W27OD%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#W27OD#3_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dimumurray","Date":"2015-09-14T21:44:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I don_t_t have any implementation for you but here_t_s a decent series of videos that cover the theory behind how Quaternions work. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//www.youtube.com/watch?v_eq_dttFiVn0rvc&amp_sm_list_eq_PLW3Zl3wyJwWNWsJIPZrmY19urkYHXOH3N_qt_ rel_eq__qt_external nofollow_qt__gt_Math For Game Developers - Quaternions_lt_/a_gt__lt_br_gt__lt_br_gt_Once you get that under you belt you should be able to look at the Babylon.js APIs and figure out how best to solve the problem. Better yet you_t_ll have a solid grasp of quaternions and when to apply them.  _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2015-09-14T23:33:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_[DELETED]_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-09-15T01:23:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_96605_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_17131_qt_ data-ipsquote-username_eq__qt_adam_qt_ data-cite_eq__qt_adam_qt_ data-ipsquote-timestamp_eq__qt_1442258599_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_It does look like there is an issue with my proposed solution._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I can_t_t make the camera ease to the left using a negative value_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#W27OD%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#W27OD#3_lt_/a_gt__lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m no quaternion expert but it looks to me like Babylon_t_s quaternion.toEulerAngles() is buggy_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_BABYLON.Quaternion.RotationYawPitchRoll( 0_co_ 0.1_co_ 0 ).toEulerAngles()t {x_dd_ 0_co_ y_dd_ 0.09999999999999945_co_ z_dd_ 0}BABYLON.Quaternion.RotationYawPitchRoll( 0_co_ -0.1_co_ 0 ).toEulerAngles()t {x_dd_ 3.141592653589793_co_ y_dd_ 0.09999999999999945_co_ z_dd_ -3.141592653589793}_lt_/pre_gt__lt_p_gt_For your demo_co_ if you avoid conversions by parenting the camera to the mesh with the rotation quaternion_co_ it should work_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#W27OD%236_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#W27OD#6_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-09-15T02:55:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Actually I think I was wrong about toEulerAngles being buggy. I_t_m not sure what_t_s wrong here._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-15T11:32:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_if you are in 3D and you know the initial direction and the final wanted one_co_ you can get the rotation from the initial to the final with _dd_ _lt_em_gt_RotationFromAxis()_lt_/em_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Flomotion","Date":"2015-09-15T12:57:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m affraid none of the solutions work yet. I_t_d like to be able to do it with imported camera_t_s._lt_/p_gt__lt_p_gt_But many thanks for the suggestions._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Maybe after taking the course Dimumuray suggested I_t_ll be able to create something. Going to watch it now _dd_-)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Flomotion","Date":"2015-09-15T13:34:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_well.. it seems my problem was easy to fix.. I feel a bit stupid._lt_/p_gt__lt_p_gt_I just checked for every axis_dd__lt_/p_gt__lt_p_gt_if (Math.abs(fromRotation.x-toRotation.x)&gt_sm_ Math.PI) {_lt_br_gt_        if ((fromRotation.x-toRotation.x)&gt_sm_0) {_lt_br_gt_            fromRotation.x _eq_ fromRotation.x-Math.PI*2_sm__lt_br_gt_        } else {_lt_br_gt_            fromRotation.x _eq_ fromRotation.x+Math.PI*2_sm__lt_br_gt_        }_lt_br_gt_    }_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But finding out about the math for game developers is very nice._lt_/p_gt__lt_p_gt_Thanks for all your replies!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MinsuKim","Date":"2018-07-20T06:01:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_96598_qt_ data-ipsquote-contentid_eq__qt_17131_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1442251715_qt_ data-ipsquote-userid_eq__qt_4289_qt_ data-ipsquote-username_eq__qt_adam_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 2015. 9. 15. at 오전 2시 28분_co_ adam said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t_lt_font style_eq__qt_vertical-align_dd_inherit_sm__qt__gt__lt_font style_eq__qt_vertical-align_dd_inherit_sm__qt__gt_이 타입의 회전을 쿼터니언으로 쉽게하는 것이 쉽지만_co_ bablyon 카메라에는 rotationQuaternion 속성이 없으므로 먼저 상자 메쉬를 회전시킨 다음 카메라로 복사합니다._lt_/font_gt__lt_/font_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#W27OD%232_qt_ rel_eq__qt_external nofollow_qt__gt__lt_font style_eq__qt_vertical-align_dd_inherit_sm__qt__gt__lt_font style_eq__qt_vertical-align_dd_inherit_sm__qt__gt_http_dd_//www.babylonjs-playground.com/#W27OD#2_lt_/font_gt__lt_/font_gt__lt_/a_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\ti find my Issue!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]