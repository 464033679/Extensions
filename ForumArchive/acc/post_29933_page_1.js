[{"Owner":"Visam","Date":"2017-04-21T18:28:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have many FBX files. Each FBX file has unique material names.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFbxExporter.exe converts these files to babylon files. The FBX material names go to babylon materials.name\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut many babylon files contain materials with id value _qt_45_qt_ (_qt_id_qt__dd_ _qt_45_qt_). It seems that FbxExporter.exe generates these id somehow by itself.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is the reason why loading many babylon files to one (same) scene shows incorrecet colors.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAre there any ways to fix it?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jeremybyington","Date":"2017-04-22T00:11:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI don_t_t know if there is a parameter you need to pass or something further up the chain you can do_co_ but I think theoretically you could loop through your materials in the BABYLON.SceneLoader.Append/ImportMesh/Load callback and  assign them new ids based on the loop_t_s current index or something. Another thing you can do is edit the Babylon JSON directly_co_ but the major disadvantage to that is you have to do that all over again next time you re-export from your FBX. But_co_ if you are confident you have the final versions then it is better to have the data correct in the JSON.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway_co_ those are a couple hacky ideas....stay tuned for someone who knows the real answer you are looking for.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Visam","Date":"2017-04-22T22:02:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_171951_qt_ data-ipsquote-contentid_eq__qt_29933_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1492819912_qt_ data-ipsquote-userid_eq__qt_26286_qt_ data-ipsquote-username_eq__qt_jeremybyington_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t21 hours ago_co_ jeremybyington said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI don_t_t know if there is a parameter you need to pass or something further up the chain you can do_co_ but I think theoretically you could loop through your materials in the BABYLON.SceneLoader.Append/ImportMesh/Load callback and  assign them new ids based on the loop_t_s current index or something. Another thing you can do is edit the Babylon JSON directly_co_ but the major disadvantage to that is you have to do that all over again next time you re-export from your FBX. But_co_ if you are confident you have the final versions then it is better to have the data correct in the JSON.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tAnyway_co_ those are a couple hacky ideas....stay tuned for someone who knows the real answer you are looking for.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tHi\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthank you. I fixed the problem by loading babylon file from a server (XMLHttpRequest) / JSON.parse / change material ids / JSON.stringify / ImportMesh.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]