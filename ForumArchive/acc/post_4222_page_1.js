[{"Owner":"Xanmia","Date":"2014-02-25T17:15:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Not sure if this is object miss use or a bug...._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_When creating multiple dynamicTexures with drawText after around 3000 it crashes webGL_co_ even with disposing of each object and texture right after it was created._lt_/p_gt__lt_p_gt_However_co_ you remove the drawText function call and it works fine._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have attached the full html file that I used to reproduce the error as well as provide a correction for work around.  The below is the code in issue_dd__lt_/p_gt__lt_div_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_function testFail(){total++_sm_var background2 _eq_ BABYLON.Mesh.CreatePlane(_qt_COUNT_qt__co_ 20_co_ scene)_sm_background2.material _eq_ new BABYLON.StandardMaterial(_qt_background_qt__co_ scene)_sm_background2.rotation.y _eq_ Math.PI_sm_background2.rotation.x _eq_ Math.PI/2_sm_background2.rotation.z _eq_ Math.PI*1.5_sm_   var backgroundTexture2 _eq_ new BABYLON.DynamicTexture(_qt_dynamic texture_qt__co_ 512_co_ scene_co_ true)_sm_background2.material.diffuseTexture _eq_ backgroundTexture2_sm_backgroundTexture2.drawText(_qt_+5_qt__co_ null_co_ 350_co_ _qt_bold 325px Segoe UI_qt__co_ _qt_white_qt__co_ _qt_#555555_qt_)_sm_backgroundTexture2.dispose()_sm_background2.dispose()_sm_backgroundTexture2_eq_null_sm_background2_eq_null_sm_}    scene.registerBeforeRender(function() {StatusText.innerHTML _eq_ _qt_total objects - _qt_ + total_sm_//testWorks()_sm_testFail()_sm_    })_sm__lt_/pre_gt__lt_/div_gt__lt_p_gt_Anyone else run into this???  I was going to put an issue in on github but wanted to validate..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/applications/core/interface/file/attachment.php?id_eq_1067_qt__gt_MemoryIssueWtext.html_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2014-02-25T18:36:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_co_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I was running your test and my chrome crashed at 9000 objects. It is clearly a memory crash _dd_ _lt_a href_eq__qt_http_dd_//i.imgur.com/Mx8yyIl.png_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//i.imgur.com/Mx8yyIl.png_lt_/a_gt__lt_/p_gt__lt_p_gt_See the _qt_System commit_qt_ graph._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Any idea Delta ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-02-25T20:12:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Try to replace this line_dd__lt_/p_gt__lt_p_gt__lt_span_gt_backgroundTexture2_lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(102_co_102_co_0)_sm__qt__gt_._lt_/span_gt__lt_span_gt_dispose_lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(102_co_102_co_0)_sm__qt__gt_()_lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_by this one_dd__lt_/p_gt__lt_p_gt_background2.material.dispose()_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2014-02-25T20:57:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Everything is ok now. But does that means all materials should be disposed manually ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Xanmia","Date":"2014-02-25T21:25:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yup_co_ fixed on my end too_co_ good question Temechon.   I guess I assumed the _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_background2.dispose() was doing that for me..._lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-02-26T09:13:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_26302_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_4222_qt_ data-ipsquote-username_eq__qt_Temechon_qt_ data-cite_eq__qt_Temechon_qt_ data-ipsquote-timestamp_eq__qt_1393361867_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Everything is ok now. But does that means all materials should be disposed manually ?_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I guess the material could be shared so used by another mesh and that_t_s why it_t_s not disposed. Does it exist a property _qt_references_qt_ on material such as for buffers?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-02-26T09:15:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_26387_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_4222_qt_ data-ipsquote-username_eq__qt_gwenael_qt_ data-cite_eq__qt_gwenael_qt_ data-ipsquote-timestamp_eq__qt_1393406024_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Does it exist a property _qt_references_qt_ on material such as for buffers?_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Quick check on GitHub. Looks like the answer is no._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Xanmia","Date":"2014-02-26T13:59:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Not sure I am following on the property references on material.  Do you have a code sample or are you referring to the references within Visual Studio?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2014-02-26T14:25:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_He is referring to an hypothetical attribute on the Material class in babylon js. This attribute is called _t_references_t__co_ and holds the number of mesh this material is linked to._lt_/p_gt__lt_p_gt_With such an attribute_co_ it would be easy to remove automatically all materials without any references (material.references _eq__eq__eq_ 0)_co_ as it is being done for meshes buffers and their clones._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Gwenael checked in the source code of Babylon in Github_co_ but this attribute does not exists_co_ thus all material have to be removed manually._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-02-26T16:07:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I couldn_t_t have expressed myself better. Thanks Temechon. That was exactly what I wanted to say _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-02-26T16:09:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Now Temechon you know how to do a pull request_co_ it_t_s all yours _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_. Let me know if you don_t_t do it. I may work on it tonight._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2014-02-26T16:39:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Sorry Gwenael_co_ but I won_t_t have the time to work on this tonight. Creating my first pull request was quite exhausting_co_ and I have to rest now _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-02-26T17:16:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_materials do not track references for now because _dd__lt_/p_gt__lt_ul_gt__lt_li_gt_They can be shared between meshes (this is a good thing for performance)_lt_/li_gt__lt_li_gt_You can have a material ready to be used but not affected to a mesh (and you do not want to dispose it_dd_))_lt_/li_gt__lt_li_gt_Disposing texture must not dispose materials (but the opposite is true)_lt_/li_gt__lt_/ul_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-02-26T22:21:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_May I suggest to add an optional paramater?_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_BABYLON.Material _eq_ function (name_co_ scene_co_ notShared) {    this.name _eq_ name_sm_    this.id _eq_ name_sm_            this._scene _eq_ scene_sm_    scene.materials.push(this)_sm_    this._canBeShared _eq_ !notShared_sm_}_sm__lt_/pre_gt__lt_p_gt_Thus_co_ by default_co_ a material can be shared (current behavior) but you can specify while creating it that you don_t_t want to share it. When a mesh is disposed_co_ we check if its material can be shared. If it can be disposed then we dispose it during disposing the mesh._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Maybe this change wouldn_t_t be useful though..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-02-27T00:44:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Not sure though _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_material are shared by essence from my point of view_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]