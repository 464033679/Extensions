[{"Owner":"testure","Date":"2014-08-04T02:46:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The standard material doesn_t_t seem to have a setting to change the blend mode_co_ so I_t_m trying to create a custom shader that is additive. I opened up the particle and lens flare shaders that come with babylon_co_ but when I start hacking those shaders up and using parts of them for my own purposes_co_ they don_t_t blend with the background at all. Any shader gurus able to point me in the right direction?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"testure","Date":"2014-08-04T04:26:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_to clarify- I can get additive blending working in the fragment shader just fine with something like gl_FragColor _eq_ baseColor + vColor_sm__lt_/p_gt__lt_p_gt_The problem is that it doesn_t_t blend with what_t_s in the scene at all. I_t_m pretty sure I need to set the gl blend mode to one/one_co_ but I_t_m not sure how to do that with babylon. Any ideas?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2014-08-04T14:27:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey_co_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I don_t_t know if this can help you_co_ but you can add two options when you create your ShaderMaterial _dd_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_ShaderMaterial(name_co_ scene_co_ shaderPath_co_ options)_lt_/pre_gt__lt_p_gt_options is an set of parameters_co_ two in particular_co_ that you can define like this _dd_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_{needAlphaBlending_dd_true_co_ needAlphaTesting_dd_true}_lt_/pre_gt__lt_p_gt_They are set to false by default. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Maybe I_t_m totally wrong_co_ I_t_m not a shader expert _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Cheers_co_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"testure","Date":"2014-08-04T16:43:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_49715_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_8315_qt_ data-ipsquote-username_eq__qt_Temechon_qt_ data-cite_eq__qt_Temechon_qt_ data-ipsquote-timestamp_eq__qt_1407162433_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Hey_co_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I don_t_t know if this can help you_co_ but you can add two options when you create your ShaderMaterial _dd_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_ShaderMaterial(name_co_ scene_co_ shaderPath_co_ options)_lt_/pre_gt__lt_p_gt_options is an set of parameters_co_ two in particular_co_ that you can define like this _dd_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_{needAlphaBlending_dd_true_co_ needAlphaTesting_dd_true}_lt_/pre_gt__lt_p_gt_They are set to false by default. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Maybe I_t_m totally wrong_co_ I_t_m not a shader expert _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Cheers_co_ _lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_I_t_m trying to test this now- and I was about to report back that it did not work_co_ but I just realized that no matter what change I make to my shader file it doesn_t_t get updated in-game! The file is definitely named correctly and in the correct location- I can put blatant errors in the shader and it doesn_t_t even throw an error. Does babylon cache the compiled shaders somewhere? If so_co_ how would one go about forcing a shader to recompile?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2014-08-04T16:50:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Do you have a demo somewhere ? Maybe the shader file is in your browser cache_co_ try to refresh it !_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"testure","Date":"2014-08-04T16:58:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_yea_co_ it was definitely some sort of caching issue. I renamed the shader and the changes I made appeared._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_At any rate_co_ I_t_m back at square one_co_ setting needAlphaBlending and needAlphaTesting to true didn_t_t seem to work. It did enable the use of alpha_co_ if I set the textureSampler to use a transparent png_co_ it renders correctly- but it_t_s just alpha blended_co_ not additive._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-08-04T18:52:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yes right now this is based on the following code_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_this.setDepthWrite(false)_sm_                    this._gl.blendFuncSeparate(this._gl.SRC_ALPHA_co_ this._gl.ONE_MINUS_SRC_ALPHA_co_ this._gl.ONE_co_ this._gl.ONE)_sm_                    this._gl.enable(this._gl.BLEND)_sm__lt_/pre_gt__lt_p_gt_perhaps I can add an event on mesh to allow you to change this ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-08-04T18:56:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Actually you can already do that _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_mesh.registerBeforeRender(function() {    engine.setAlphaMode(BABYLON.Engine.ALPHA_ADD)_sm_})_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"testure","Date":"2014-08-04T20:28:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_49740_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_8315_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1407178617_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Actually you can already do that _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_mesh.registerBeforeRender(function() {    engine.setAlphaMode(BABYLON.Engine.ALPHA_ADD)_sm_})_sm__lt_/pre_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_Yeah_co_ I actually just now found that digging through the mesh and engine classes and was coming here to post my results. This is working great for my purposes. Thanks!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]