[{"Owner":"The Snow Irbix","Date":"2017-08-29T23:12:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi guys !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI did a playground with my FreeCamera jumping when pressing the spacebar_co_ here it is _dd_ _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#JRHZ1B_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#JRHZ1B_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo get a good result_co_ I was forced to set the gravity to -0.2_co_ and I want to know why setting the gravity to -0.9 doesn_t_t give a realistic result.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI already read the older topics on the forum on how to create a jumping animation_co_ but they don_t_t use gravity and causes the player_t_s camera to go through the box (_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#XN87O%2341_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#XN87O#41)_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny idea to improve my jump animation with a gravity set to -0.9 ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOr can I set a different gravity for the camera and for the other objects ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"The Snow Irbix","Date":"2017-08-31T12:30:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIn fact_co_ the gravity implementation is weird.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCurrently_co_ the camera falls at a constant speed instead of gaining speed while falling (until the air resistance prevents the speed from increasing).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHow could I make my own implementation of the gravity while keeping the collision system ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-08-31T16:18:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tyou can set the camera.applyGravity _eq_ false and then manually compute it\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"The Snow Irbix","Date":"2017-09-13T15:10:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI managed to get a better gravity implementation by modifying the FreeCamera code directly.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI share it with the forum if someone wanna make a realistic jump animation.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFeel free to improve the code and share it with us.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var BABYLON_sm_\n(function (BABYLON) {\n    var FreeCamera _eq_ (function (_super) {\n        __extends(FreeCamera_co_ _super)_sm_\n        function FreeCamera(name_co_ position_co_ scene) {\n            var _this _eq_ _super.call(this_co_ name_co_ position_co_ scene) || this_sm_\n            _this.ellipsoid _eq_ new BABYLON.Vector3(0.5_co_ 1_co_ 0.5)_sm_\n            _this.checkCollisions _eq_ false_sm_\n            _this.applyGravity _eq_ false_sm_\n            _this._impulsion _eq_ BABYLON.Vector3.Zero()_sm_\n            _this._jumpingFlag _eq_ false_sm_\n            _this._inertia _eq_ BABYLON.Vector3.Zero()_sm_\n            _this._needMoveForGravity _eq_ false_sm_\n            _this._oldPosition _eq_ BABYLON.Vector3.Zero()_sm_\n            _this._diffPosition _eq_ BABYLON.Vector3.Zero()_sm_\n            _this._newPosition _eq_ BABYLON.Vector3.Zero()_sm_\n            // Collisions\n            _this._collisionMask _eq_ -1_sm_\n            _this._onCollisionPositionChange _eq_ function (collisionId_co_ newPosition_co_ collidedMesh) {\n                if (collidedMesh _eq__eq__eq_ void 0) { collidedMesh _eq_ null_sm_ }\n                //TODO move this to the collision coordinator!\n                if (_this.getScene().workerCollisions)\n                    newPosition.multiplyInPlace(_this._collider.radius)_sm_\n                var updatePosition _eq_ function (newPos) {\n                    _this._newPosition.copyFrom(newPos)_sm_\n                    _this._newPosition.subtractToRef(_this._oldPosition_co_ _this._diffPosition)_sm_\n                    var oldPosition _eq_ _this.position.clone()_sm_\n                    if (_this._diffPosition.length() &gt_sm_ BABYLON.Engine.CollisionsEpsilon) {\n                        _this.position.addInPlace(_this._diffPosition)_sm_\n                        if(collidedMesh)\n                        {\n                            // when moving but collision with ground\n                            _this._inertia _eq_ BABYLON.Vector3.Zero()_sm_\n                            _this._jumpingFlag _eq_ false_sm_\n                        }\n                        if (_this.onCollide &amp_sm_&amp_sm_ collidedMesh) {\n                            _this.onCollide(collidedMesh)_sm_\n                        }\n                    }\n                    else\n                    {\n                        // when not moving but still near the ground\n                        _this._inertia _eq_ BABYLON.Vector3.Zero()_sm_\n                        _this._jumpingFlag _eq_ false_sm_\n                    }\n                }_sm_\n                updatePosition(newPosition)_sm_\n            }_sm_\n            _this.inputs _eq_ new BABYLON.FreeCameraInputsManager(_this)_sm_\n            _this.inputs.addKeyboard().addMouse()_sm_\n            return _this_sm_\n        }\n        Object.defineProperty(FreeCamera.prototype_co_ _qt_angularSensibility_qt__co_ {\n            //-- begin properties for backward compatibility for inputs\n            get_dd_ function () {\n                var mouse _eq_ this.inputs.attached[_qt_mouse_qt_]_sm_\n                if (mouse)\n                    return mouse.angularSensibility_sm_\n            }_co_\n            set_dd_ function (value) {\n                var mouse _eq_ this.inputs.attached[_qt_mouse_qt_]_sm_\n                if (mouse)\n                    mouse.angularSensibility _eq_ value_sm_\n            }_co_\n            enumerable_dd_ true_co_\n            configurable_dd_ true\n        })_sm_\n        Object.defineProperty(FreeCamera.prototype_co_ _qt_keysUp_qt__co_ {\n            get_dd_ function () {\n                var keyboard _eq_ this.inputs.attached[_qt_keyboard_qt_]_sm_\n                if (keyboard)\n                    return keyboard.keysUp_sm_\n            }_co_\n            set_dd_ function (value) {\n                var keyboard _eq_ this.inputs.attached[_qt_keyboard_qt_]_sm_\n                if (keyboard)\n                    keyboard.keysUp _eq_ value_sm_\n            }_co_\n            enumerable_dd_ true_co_\n            configurable_dd_ true\n        })_sm_\n        Object.defineProperty(FreeCamera.prototype_co_ _qt_keysDown_qt__co_ {\n            get_dd_ function () {\n                var keyboard _eq_ this.inputs.attached[_qt_keyboard_qt_]_sm_\n                if (keyboard)\n                    return keyboard.keysDown_sm_\n            }_co_\n            set_dd_ function (value) {\n                var keyboard _eq_ this.inputs.attached[_qt_keyboard_qt_]_sm_\n                if (keyboard)\n                    keyboard.keysDown _eq_ value_sm_\n            }_co_\n            enumerable_dd_ true_co_\n            configurable_dd_ true\n        })_sm_\n        Object.defineProperty(FreeCamera.prototype_co_ _qt_keysLeft_qt__co_ {\n            get_dd_ function () {\n                var keyboard _eq_ this.inputs.attached[_qt_keyboard_qt_]_sm_\n                if (keyboard)\n                    return keyboard.keysLeft_sm_\n            }_co_\n            set_dd_ function (value) {\n                var keyboard _eq_ this.inputs.attached[_qt_keyboard_qt_]_sm_\n                if (keyboard)\n                    keyboard.keysLeft _eq_ value_sm_\n            }_co_\n            enumerable_dd_ true_co_\n            configurable_dd_ true\n        })_sm_\n        Object.defineProperty(FreeCamera.prototype_co_ _qt_keysRight_qt__co_ {\n            get_dd_ function () {\n                var keyboard _eq_ this.inputs.attached[_qt_keyboard_qt_]_sm_\n                if (keyboard)\n                    return keyboard.keysRight_sm_\n            }_co_\n            set_dd_ function (value) {\n                var keyboard _eq_ this.inputs.attached[_qt_keyboard_qt_]_sm_\n                if (keyboard)\n                    keyboard.keysRight _eq_ value_sm_\n            }_co_\n            enumerable_dd_ true_co_\n            configurable_dd_ true\n        })_sm_\n        // Controls\n        FreeCamera.prototype.attachControl _eq_ function (element_co_ noPreventDefault) {\n            this.inputs.attachElement(element_co_ noPreventDefault)_sm_\n        }_sm_\n        FreeCamera.prototype.detachControl _eq_ function (element) {\n            this.inputs.detachElement(element)_sm_\n            this.cameraDirection _eq_ new BABYLON.Vector3(0_co_ 0_co_ 0)_sm_\n            this.cameraRotation _eq_ new BABYLON.Vector2(0_co_ 0)_sm_\n        }_sm_\n        Object.defineProperty(FreeCamera.prototype_co_ _qt_collisionMask_qt__co_ {\n            get_dd_ function () {\n                return this._collisionMask_sm_\n            }_co_\n            set_dd_ function (mask) {\n                this._collisionMask _eq_ !isNaN(mask) ? mask _dd_ -1_sm_\n            }_co_\n            enumerable_dd_ true_co_\n            configurable_dd_ true\n        })_sm_\n        FreeCamera.prototype._collideWithWorld _eq_ function (velocity) {\n            var globalPosition_sm_\n            if (this.parent) {\n                globalPosition _eq_ BABYLON.Vector3.TransformCoordinates(this.position_co_ this.parent.getWorldMatrix())_sm_\n            }\n            else {\n                globalPosition _eq_ this.position_sm_\n            }\n            globalPosition.subtractFromFloatsToRef(0_co_ this.ellipsoid.y_co_ 0_co_ this._oldPosition)_sm_\n            if (!this._collider) {\n                this._collider _eq_ new BABYLON.Collider()_sm_\n            }\n            this._collider.radius _eq_ this.ellipsoid_sm_\n            this._collider.collisionMask _eq_ this._collisionMask_sm_\n            //no need for clone_co_ as long as gravity is not on.\n            var actualVelocity _eq_ velocity_sm_\n            //add gravity to the velocity to prevent the dual-collision checking\n            if(this.applyGravity)\n            {\n                if(!this._impulsion.equals(BABYLON.Vector3.Zero())) // impulsion !_eq_ 0\n                {\n                    if(this._jumpingFlag _eq__eq__eq_ false) // not already jumping\n                    {\n                        this._jumpingFlag _eq_ true_sm_\n                        this._inertia.addInPlace(this._impulsion)_sm_\n                    }\n                    this._impulsion _eq_ BABYLON.Vector3.Zero()_sm_\n                }\n                this._inertia.addInPlace(this.getScene().gravity.scale(1/60))_sm_ // 1/60 if we assume the 60 fps\n                actualVelocity _eq_ velocity.add(this._inertia)_sm_\n            }\n            this.getScene().collisionCoordinator.getNewPosition(this._oldPosition_co_ actualVelocity_co_ this._collider_co_ 3_co_ null_co_ this._onCollisionPositionChange_co_ this.uniqueId)_sm_\n        }_sm_\n        FreeCamera.prototype._checkInputs _eq_ function () {\n            if (!this._localDirection) {\n                this._localDirection _eq_ BABYLON.Vector3.Zero()_sm_\n                this._transformedDirection _eq_ BABYLON.Vector3.Zero()_sm_\n            }\n            this.inputs.checkInputs()_sm_\n            _super.prototype._checkInputs.call(this)_sm_\n        }_sm_\n        FreeCamera.prototype._decideIfNeedsToMove _eq_ function () {\n            return this._needMoveForGravity || Math.abs(this.cameraDirection.x) &gt_sm_ 0 || Math.abs(this.cameraDirection.y) &gt_sm_ 0 || Math.abs(this.cameraDirection.z) &gt_sm_ 0_sm_\n        }_sm_\n        FreeCamera.prototype._updatePosition _eq_ function () {\n            if (this.checkCollisions &amp_sm_&amp_sm_ this.getScene().collisionsEnabled) {\n                this._collideWithWorld(this.cameraDirection)_sm_\n            }\n            else {\n                _super.prototype._updatePosition.call(this)_sm_\n            }\n        }_sm_\n        FreeCamera.prototype.dispose _eq_ function () {\n            this.inputs.clear()_sm_\n            _super.prototype.dispose.call(this)_sm_\n        }_sm_\n        FreeCamera.prototype.getClassName _eq_ function () {\n            return _qt_FreeCamera_qt__sm_\n        }_sm_\n        return FreeCamera_sm_\n    }(BABYLON.TargetCamera))_sm_\n    __decorate([\n        BABYLON.serializeAsVector3()\n    ]_co_ FreeCamera.prototype_co_ _qt_ellipsoid_qt__co_ void 0)_sm_\n    __decorate([\n        BABYLON.serialize()\n    ]_co_ FreeCamera.prototype_co_ _qt_checkCollisions_qt__co_ void 0)_sm_\n    __decorate([\n        BABYLON.serialize()\n    ]_co_ FreeCamera.prototype_co_ _qt_applyGravity_qt__co_ void 0)_sm_\n    BABYLON.FreeCamera _eq_ FreeCamera_sm_\n})(BABYLON || (BABYLON _eq_ {}))_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThe _qt_inertia_qt_ variable is used to store the current velocity of the camera\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe _qt_jumpingFlag_qt_ is used to prevent the player to jump several times without hitting the ground.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd the _qt_impulsion_qt_ is a velocity vector added to the current velocity of the camera.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo now_co_ jump is as easy as that _dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_window.addEventListener(_t_keydown_t__co_ function(e)\n{\n\tif(e.key _eq__eq__eq_ _t_ _t_)\n\t{\n\t\tcamera._impulsion.set(0_co_ 0.25_co_ 0)_sm_\n\t}\n})_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSadly I couldn_t_t make a good implementation of the gravity with the camera_t_s _qt_onCollide_qt_ callback only_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tso _lt_s_gt_I can_t_t make a demo on the playground cause I modified the internal BABYLON code._lt_/s_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHope it will help another one !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tEDIT _dd_ This works only if the _qt_needMoveForGravity_qt_ flag is set to _t_true_t_.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_camera._needMoveForGravity _eq_ true_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"The Snow Irbix","Date":"2017-09-14T15:56:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCan_t_t stop the progress _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ !\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tQuote\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI can_t_t make a demo on the playground\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tActually I can. And I did _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tHere it is !\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/indexstable#0S38ZF_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/indexstable#0S38ZF_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]