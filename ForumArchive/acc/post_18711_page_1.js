[{"Owner":"Dad72","Date":"2015-11-18T17:25:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt_When you serialize a scene_co_ some property is not serialized._lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_I did not check everything_co_ but that are not present in a scene serialized._lt_/div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_- enablePhysics_lt_/p_gt__lt_p_gt_- collisionsEnabled_lt_/p_gt__lt_p_gt_- workerCollisions_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_and when an object is deleted_co_ the materials used by the deleted objects are serialized anyway_co_ but should not be.._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2015-11-18T18:13:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey Dad_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_A material can be used by several objects_co_ so deleting an object will not remove its material. You have to do it manually._lt_/p_gt__lt_p_gt_Regarding the other points_co_ I can_t_t help as I don_t_t know if it_t_s by design or a bug._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-11-18T18:20:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I will check and add those properties if they are not present. I think the workerCollision property is not being read by the scene loader_co_ so it will have to be changed as well. Temechon is totally right about the materials_co_ you will have to remove them manually._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-11-18T18:24:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ah_co_ yes_co_ I had not thought about the materials shared. That makes sense_co_ yes. thank you for this recall._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-11-18T22:36:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I made a simple demo here_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2EAMX1%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2EAMX1#4_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_- enablePhysics_co__lt_span_gt_ collisionsEnabled and_lt_/span_gt__lt_span_gt_ workerCollisions  _lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(34_co_34_co_34)_sm_font-family_dd__t_Helvetica Neue_t__co_ Arial_co_ Verdana_co_ sans-serif_sm__qt__gt_are not serialized _dd__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_{_qt_autoClear_qt__dd_true_co__qt_clearColor_qt__dd_[0.2_co_0.2_co_0.3]_co__qt_ambientColor_qt__dd_[0_co_0_co_0]_co__qt_gravity_qt__dd_[0_co_-9.807_co_0]_co__qt_lights_qt__dd_[]_co__qt_cameras_qt__dd_[{_qt_name_qt__dd__qt_camera1_qt__co__qt_tags_qt__dd_null_co__qt_id_qt__dd__qt_camera1_qt__co__qt_position_qt__dd_[0_co_5_co_-10]_co__qt_fov_qt__dd_0.8_co__qt_minZ_qt__dd_1_co__qt_maxZ_qt__dd_10000_co__qt_inertia_qt__dd_0.9_co__qt_type_qt__dd__qt_FreeCamera_qt__co__qt_speed_qt__dd_2_co__qt_rotation_qt__dd_[0_co_0_co_0]_co__qt_checkCollisions_qt__dd_false_co__qt_applyGravity_qt__dd_false_co__qt_ellipsoid_qt__dd_[0.5_co_1_co_0.5]_co__qt_animations_qt__dd_[]_co__qt_layerMask_qt__dd_268435455}]_co__qt_activeCameraID_qt__dd__qt_camera1_qt__co__qt_materials_qt__dd_[{_qt_name_qt__dd__qt_default material_qt__co__qt_ambient_qt__dd_[0_co_0_co_0]_co__qt_diffuse_qt__dd_[1_co_1_co_1]_co__qt_specular_qt__dd_[1_co_1_co_1]_co__qt_specularPower_qt__dd_64_co__qt_emissive_qt__dd_[0_co_0_co_0]_co__qt_alpha_qt__dd_1_co__qt_id_qt__dd__qt_default material_qt__co__qt_tags_qt__dd_null_co__qt_backFaceCulling_qt__dd_true}_co_{_qt_name_qt__dd__qt_default material_qt__co__qt_ambient_qt__dd_[0_co_0_co_0]_co__qt_diffuse_qt__dd_[1_co_1_co_1]_co__qt_specular_qt__dd_[1_co_1_co_1]_co__qt_specularPower_qt__dd_64_co__qt_emissive_qt__dd_[0_co_0_co_0]_co__qt_alpha_qt__dd_1_co__qt_id_qt__dd__qt_default material_qt__co__qt_tags_qt__dd_null_co__qt_backFaceCulling_qt__dd_true}]_co__qt_multiMaterials_qt__dd_[]_co__qt_skeletons_qt__dd_[]_co__qt_geometries_qt__dd_{_qt_boxes_qt__dd_[]_co__qt_spheres_qt__dd_[]_co__qt_cylinders_qt__dd_[]_co__qt_toruses_qt__dd_[]_co__qt_grounds_qt__dd_[]_co__qt_planes_qt__dd_[]_co__qt_torusKnots_qt__dd_[]_co__qt_vertexData_qt__dd_[]}_co__qt_meshes_qt__dd_[]_co__qt_particleSystems_qt__dd_[]_co__qt_lensFlareSystems_qt__dd_[]_co__qt_shadowGenerators_qt__dd_[]}_lt_/p_gt__lt_/div_gt__lt_/blockquote_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-11-18T22:40:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yep_co_ they are also not read by the scene loader. _lt_/p_gt__lt_p_gt_I_t_m trying to find the best way to do that_co_ sadly I won_t_t make it today. Will probably commit a change to both tomorrow._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-11-18T22:48:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m trying to do_co_ I think it_t_s pretty simple_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-11-18T22:50:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Serializing yes_co_ but I wanted to fix the physics engine implementation in the scene loader (add support to the engines and to gravity)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-11-18T22:54:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yes this I do not know how for _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_physics engine_lt_/span_gt_._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I done and send (for s_lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_erializing)_lt_/span_gt__dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_- collisionsEnabled_lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_- workerCollisions _lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-11-22T14:57:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_this was added to File_Format_Map _ (. babylon) but don quan look in the literature_co_ this has not been taken into account. Maybe a bug?_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_    _qt_workerCollisions_qt__dd_ boolean_co_    _qt_collisionsEnabled_qt__dd_ boolean_co_    _qt_physicsEnabled_qt__dd_ boolean_co_    _qt_physicsGravity_qt__dd_ vector3 (defaults to [0_co_-9.81_co_0])_co_    _qt_physicsEngine_qt__dd_ string (_qt_oimo_qt_ or _qt_cannon_qt__co_ defaults to the default engine (oimo)_lt_/pre_gt__lt_p_gt_Link comparison_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_strong_gt_.md_lt_/strong_gt_ _eq_&gt_sm_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Documentation/blob/master/content/generals/General/File_Format_Map_(.babylon).md_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Documentation/blob/master/content/generals/General/File_Format_Map_(.babylon).md_lt_/a_gt__lt_/p_gt__lt_p_gt__lt_strong_gt_in the doc_lt_/strong_gt_ _eq_&gt_sm_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/generals/File_Format_Map_(.babylon)/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/generals/File_Format_Map_(.babylon)/_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_By doing all the changes done on this page does not seem to take effect._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_div_gt_It lacks a lot of property in many scene and probably at serialization._lt_/div_gt__lt_ul_gt__lt_li_gt_cameraToUseForPointers_lt_/li_gt__lt_li_gt_forceWireframe_lt_/li_gt__lt_li_gt_forcePointsCloud_lt_/li_gt__lt_li_gt_forceShowBoundingBoxes_lt_/li_gt__lt_li_gt_animationsEnabled_lt_/li_gt__lt_li_gt_fogEnabled_co_ fogMode and other fog... (serialisez Ok_co_ but not in the doc)_lt_/li_gt__lt_li_gt_shadowsEnabled_lt_/li_gt__lt_li_gt_lightsEnabled_lt_/li_gt__lt_li_gt_texturesEnabled_lt_/li_gt__lt_li_gt_particlesEnabled_lt_/li_gt__lt_li_gt_spritesEnabled_lt_/li_gt__lt_li_gt_and other enabgled...._lt_/li_gt__lt_li_gt_database_lt_/li_gt__lt_li_gt_..._lt_/li_gt__lt_/ul_gt__lt_p_gt_The list is very long. I think he is missing is all the properties not serialized and not in the doc._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I think there is a huge reverification to do on its points there. but I will not have time to do so._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-11-22T18:37:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I agree_co_ a lot of properties are not being serialized_co_ as they are never parse in the loader. Maybe a serializer/loader code review would be a good thing _dd_-)_lt_/p_gt__lt_p_gt_Having said that_co_ the idea of the loader is mainly to load scenes created using external tools like blender and 3ds. Can those tools export all of the Babylon-supported properties? Would be nice to check that as well._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-23T03:45:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This is a grea idea but beware_dd_ Some properties like xxxEnabled or forceXXXX should not be serialized as they are here for debugging purpose_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The database object is an internal property as well._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m absolutely ok to add properties that I missed (because they were added after the file loader creation for instance or just because I forgot to add them _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_My only ask is to keep the doc in sync with the loader and the serializer_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-23T03:47:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_As well workerCOllisions should not be part of the file as this is dependant on the browser implementation and has nothing to do with the file format_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-11-23T12:20:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt_DK I understand_co_ it is not easy to update_co_ the engine is changing fast and we can forget. The thing is normal._lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_In this case_co_ if some thing should not be added_co_ missing exactly (scene)_co_ if I understand._lt_/div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But perhaps its properties there need not add beings? in this case everything is I guess._lt_/p_gt__lt_ul_gt__lt_li_gt_cameraToUseForPointers_lt_/li_gt__lt_li_gt_useDelayedTextureLoading_lt_/li_gt__lt_li_gt_importedMeshesFiles_lt_/li_gt__lt_/ul_gt__lt_p_gt_The engine is never serialized?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I think for my editor I have to create my own serialization and loading system for what did not with Babylon. because I want that all ownership changes did with my editor_co_ is save to a file. I thought Babylon serialize all properties._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m not able to do the things listed loader changes. If Raanan  or anyone else want to take charge...  But maybe everything is ok_co_ so I do not know exactly._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-23T18:09:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I agree with you_co_ you should add your own info in the babylon file format. This is intented to be the case (you only need to overload the loader and the serializer)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-11-23T18:34:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It is necessary that I learn about overloading functions with javascript. I have never done that. but I like to learn new thing._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I find that_co_ you think this is a good method?_lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//ejohn.org/blog/javascript-method-overloading/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//ejohn.org/blog/javascript-method-overloading/_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_div_gt_Any advice or example would be very appreciated.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_Thank you_lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-11-23T20:03:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi Dad_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_there is technically no function overloading in javascript. In java_co_ for example_co_ you can do this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_public void saySomething(String something) {//implementation for a single string}public void saySomething(List&lt_sm_Integer&gt_sm_ listOfThingsToSay) {//implementation for a list of integers}public void saySomething(String something_co_ boolean yesNoMaybe) {//}// and so on_lt_/pre_gt__lt_p_gt_In JavaScript you can_t_t. The function will always be open to all types. In JavaScript_co_ those 3 functions are a single function and YOU should inspect the type provided. This is rather confusing and (in my opinion) should be avoided..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_EDIT - Just read what DK said - I think he meant extending. DK?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-11-23T20:27:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi Raanan_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I see that there are possibility for overloading in Javascript. But yes I will extend the function given that I want to complete it. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-11-23T20:52:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt_Is an expert among you can tell me how to extend the sceneSerializer and sceneLoader_co_ I have big doubts about the ways to do it for the beginning. A concrete example of code would help me a lot for its two functions._lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_I use this for extend _dd__lt_/div_gt__lt_br_gt__lt_div_gt__lt_br_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt__lt_br_gt_\nvar Extends _eq_ function(ChildClass_co_ ParentClass) { // ClassB (child) herite de classA (parent)_lt_br_gt_\n        ChildClass.prototype _eq_ Object.create(ParentClass.prototype) || objectCreate(ParentClass.prototype)_sm__lt_br_gt_\n\tChildClass.prototype.constructor _eq_ ChildClass_sm__lt_br_gt_\n}_sm__lt_br_gt_\nvar Super _eq_ function(ChildClass) { //appel du constructeur de la classe mere_lt_br_gt_\n\tChildClass.call(this)_sm__lt_br_gt_\n}_sm__lt_br_gt__lt_/pre_gt__lt_br_gt__lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_But also for static functions as serializing and loader is that it_t_ll work. I am not sure._lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_Then I did this_co_ is this ok?_lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt__lt_br_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt__lt_br_gt_\n_qt_use strict_qt__sm__lt_br_gt_\nvar CASTORENGINE _eq_ CASTORENGINE || {}_sm__lt_br_gt_\n(function () {_lt_br_gt__lt_br_gt_\n\tCASTORENGINE.SceneLoader _eq_ function()_lt_br_gt_\n\t{\t\t_lt_br_gt_\n\t\tSuper(BABYLON.SceneLoader)_sm__lt_br_gt__lt_br_gt_\n\t}_sm_\t_lt_br_gt_\n\tExtends(CASTORENGINE.SceneLoader_co_ BABYLON.SceneLoader)_sm__lt_br_gt__lt_br_gt_\n\tCASTORENGINE.SceneLoader.Load _eq_ function (rootUrl_co_ sceneFilename_co_ engine_co_ onsuccess_co_ progressCallBack_co_ onerror)_lt_br_gt_\n\t{_lt_br_gt__lt_br_gt_\n\t}_sm_\t_lt_br_gt_\n})()_sm__lt_br_gt__lt_/pre_gt__lt_br_gt__lt_/div_gt__lt_br_gt__lt_div_gt_Or should I extend the plugin. and here I do not know how._lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_Thank you for your help and time._lt_/div_gt__lt_br_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-11-24T08:31:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_If we are already using typescript_co_ just take their extends implementation_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var __extends _eq_ (this &amp_sm_&amp_sm_ this.__extends) || function(d_co_  {        for (var p in             if (b.hasOwnProperty(p)) d[p] _eq_ b[p]_sm_        function __() {            this.constructor _eq_ d_sm_        }        __.prototype _eq_ b.prototype_sm_        d.prototype _eq_ new __()_sm_    }_sm__lt_/pre_gt__lt_p_gt_To extend a class_co_ use this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var newClass _eq_ (function() {  __extends(newClass _co_ OldClass)_sm_  function newClass(var1_co_ var2_co_ var) {    //....  }  return newClass_sm_})()_lt_/pre_gt__lt_p_gt_You could also use the (relatively) new Object.assign to practically do the same... But this is a different subject _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_strong_gt_But_lt_/strong_gt__co_ actually_co_ there is no need for that._lt_/p_gt__lt_p_gt_Check out this line - _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Loading/Plugins/babylon.babylonFileLoader.js#L1141_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Loading/Plugins/babylon.babylonFileLoader.js#L1141_lt_/a_gt__lt_/p_gt__lt_p_gt_This is how the current plugin registeres. You could_co_ of course_co_ implement it differently (a class_co_ containing all of the needed properties)_co_ but - this is more than enough._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I think you have two nice options - _lt_/p_gt__lt_p_gt_you either _qt_empty_qt_ the plugin array in the scene laoder_co_ and reregister a new .babylon loader plugin (while extending its functionality)_co_ or_co_ and I think this is the better option_co_ create your own file format._lt_/p_gt__lt_p_gt_Create a plugin to a .castor file type_co_ and implement it the way you want. Create a new Serializer_co_ extending the babylon serializer_t_s code_co_ that will export all of the needed properties for your scenes. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The .castor file will be compatible with the babylon loader as well_co_ and babylon files CAN be compatible with your castor loader. That is_co_ if you implement it with defaults._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-11-24T11:19:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok_co_ I see_co_ Thanks Raanan . I_t_ll watch it all ready. I think the solution to create my own format .castor is interesting _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-11-24T13:18:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_For the plugin_co_ I understood.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_How to reach serializationObject draws from babylon.sceneSerializer ?_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint lang-auto_qt__gt__qt_use strict_qt__sm_var CASTORENGINE _eq_ CASTORENGINE || {}_sm_(function () {\t\tCASTORENGINE.SceneSerializer _eq_ { }_sm_\tCASTORENGINE.SceneSerializer.Serialize _eq_ function(scene_co_ engine)\t{\t\t\t\t\t\tBABYLON.SceneSerializer.Serialize(scene)_sm_ // serialize scene by BABYLON\t\t// Serialize added by CASTORENGINE\t\tserializationObject.loadingUIText _eq_ engine._loadingScreen._loadingText_sm_\t\tserializationObject.loadingUIBackgroundColor _eq_ engine._loadingScreen._loadingDivBackgroundColor_sm_\t\tserializationObject.enableOfflineSupport _eq_ engine.enableOfflineSupport_sm_\t\t\t\tserializationObject.cameraToUseForPointers _eq_ scene.cameraToUseForPointers_sm_\t\tserializationObject.activeCamera _eq_ scene.activeCamera_sm_\t\tserializationObject.useOctree _eq_ scene.useOctree_sm_\t\t\t\t\t\treturn serializationObject_sm_\t}_sm_\t})()_sm__lt_/pre_gt__lt_p_gt_Here_co_ serializationObject the property is not defined_co_ which is normal_co_ but how can I achieve this variable on the file babylon.sceneSerializer to complete the serializer ?_lt_/p_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_I would like some advice please._lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-11-24T13:32:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Simply use the return value_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var serializationObject _eq_ BABYLON.SceneSerializer.Serialize(scene)_sm_//continue_lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-11-24T13:56:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_yes_co_ but in doing so_co_ I have this error Converting circular structure to JSON on JSON.stringify()._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_[Edit_dd_]_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_div_gt_This seems to be because of_dd__lt_/div_gt__lt_div_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_serializationObject.cameraToUseForPointers _eq_ scene.cameraToUseForPointers_sm_serializationObject.activeCamera _eq_ scene.activeCamera_sm__lt_/pre_gt__lt_/div_gt__lt_div_gt_I guess there are already serialized. i made this and fix _dd__lt_/div_gt__lt_div_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_serializationObject.cameraToUseForPointersID _eq_ scene.cameraToUseForPointers.name_sm_ // cameraToUseForPointersID is personnal property_lt_/pre_gt__lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-11-24T15:54:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt_I have one last question. When you create a plugin for loadScene with a new extension and other properties. If a load scene with _qt_data_dd_ {}_qt__co_ which plugin is used? is that when you create a plugin replaces the default of Babylon ?_lt_/div_gt__lt_br_gt__lt_div_gt_How to define the plugin to be used in the case of loading with _qt_data_dd_ {}_qt_ For there is no extension to set the plugin to use. _lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_Maybe it would be nice to set the plugin to use. The doc on this subject is very minimal._lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_Thanks_lt_/div_gt__lt_br_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]