[{"Owner":"elkyu","Date":"2015-06-16T12:15:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div style_eq__qt_color_dd_rgb(0_co_0_co_0)_sm_font-family_dd__t_times new roman_t__co_ _t_new york_t__co_ times_co_ serif_sm_font-size_dd_18.6666660308838px_sm__qt__gt_Hi_co__lt_/div_gt__lt_div style_eq__qt_color_dd_rgb(0_co_0_co_0)_sm_font-family_dd__t_times new roman_t__co_ _t_new york_t__co_ times_co_ serif_sm_font-size_dd_18.6666660308838px_sm__qt__gt__lt_br_gt_I have a plan with many points (like a grid) created with Blender and exported to Babylon._lt_/div_gt__lt_div style_eq__qt_color_dd_rgb(0_co_0_co_0)_sm_font-family_dd__t_times new roman_t__co_ _t_new york_t__co_ times_co_ serif_sm_font-size_dd_18.6666660308838px_sm__qt__gt_ _lt_/div_gt__lt_div style_eq__qt_color_dd_rgb(0_co_0_co_0)_sm_font-family_dd__t_times new roman_t__co_ _t_new york_t__co_ times_co_ serif_sm_font-size_dd_18.6666660308838px_sm__qt__gt_I want invert the normal of some part of this grid to create a _qt_hole_qt_ in the plan_co_ how can I do this ? By inverting the normal of a point ? If it is possible to do this_co_ can you explain to me how ?_lt_/div_gt__lt_div style_eq__qt_color_dd_rgb(0_co_0_co_0)_sm_font-family_dd__t_times new roman_t__co_ _t_new york_t__co_ times_co_ serif_sm_font-size_dd_18.6666660308838px_sm__qt__gt__lt_br_gt_What I want to do_co_ is for example_co_ to show a clickable element  under this plan and can click on through the created hole in the plan._lt_/div_gt__lt_div style_eq__qt_color_dd_rgb(0_co_0_co_0)_sm_font-family_dd__t_times new roman_t__co_ _t_new york_t__co_ times_co_ serif_sm_font-size_dd_18.6666660308838px_sm__qt__gt__lt_br_gt_How can i do this ?_lt_/div_gt__lt_div style_eq__qt_color_dd_rgb(0_co_0_co_0)_sm_font-family_dd__t_times new roman_t__co_ _t_new york_t__co_ times_co_ serif_sm_font-size_dd_18.6666660308838px_sm__qt__gt_ _lt_/div_gt__lt_div style_eq__qt_color_dd_rgb(0_co_0_co_0)_sm_font-family_dd__t_times new roman_t__co_ _t_new york_t__co_ times_co_ serif_sm_font-size_dd_18.6666660308838px_sm__qt__gt_Thank you _lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-06-16T13:38:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_assuming_dd__lt_/p_gt__lt_p_gt_mesh _eq_ var for target mesh_lt_/p_gt__lt_p_gt_offset _eq_ the offset of the vertex you wish to change_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_var normals _eq_ mesh.getVerticesData(BABYLON.VertexBuffer.NormalKind)_sm__lt_/p_gt__lt_p_gt_normals[offset      ] *_eq_ -1_sm__lt_/p_gt__lt_p_gt_normals[offset + 1] *_eq_ -1_sm__lt_/p_gt__lt_p_gt_normals[offset + 2] *_eq_ -1_sm__lt_/p_gt__lt_p_gt_mesh.setVerticesData(BABYLON.VertexBuffer.NormalKind_co_ normals)_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_There are 2 levels of optimization that can be done_co_ but if this is only being done for a click_co_ then it will not matter.  Unless_co_ you wish the click to morph over a series of frames _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"elkyu","Date":"2015-06-18T12:36:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thank You for your help but I find an other way to invert the normal of a part of my plan (invert the order of the 3 vertex of the part in the vertice Data)._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"elkyu","Date":"2015-06-24T09:05:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Finally_co_ it_t_s not working_co_ if_co_ like you said I invert the normal of one vertice in the plan nothing happend._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The points on my plan make several triangle_co_ and I want invert the normal of a triangle_co_ it doesn_t_t work if I  invert the normal of just one vertice_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-06-24T15:53:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi.  I actually think that inverting a single triangle of a standard non-flat-shaded mesh... is impossible (but I could easily be wrong).  Often_co_ triangles share vertices with each other_co_ so if you invert the normal of ONE vertex_co_ it affects many triangles (up to 6).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI haven_t_t got a solution_co_ but I built a playground scene to experiment-with.  _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#CG2MJ%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#CG2MJ#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat one is WITHOUT flatShading.  When a mesh is set to flat shaded_co_ vertices are added_co_ with each new vertex having a normal (to the best of my knowledge).  In the above demo_co_ look at the console.  100 vertices.  Take note of lines 31-33.  They are currently just like JcPalmer_t_s code_dd_\n_lt_/p_gt_\n\n_lt_pre class_eq__qt_ipsCode prettyprint prettyprinted_qt__gt_\n_lt_span class_eq__qt_pln_qt__gt_\tnormals_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_[_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_normnum_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_]_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_*_eq__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_-_lt_/span_gt__lt_span class_eq__qt_lit_qt__gt_1_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__sm__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_\tnormals_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_[_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_normnum_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_+_lt_/span_gt__lt_span class_eq__qt_lit_qt__gt_1_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_]_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_*_eq__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_-_lt_/span_gt__lt_span class_eq__qt_lit_qt__gt_1_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__sm__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_\tnormals_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_[_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_normnum_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_+_lt_/span_gt__lt_span class_eq__qt_lit_qt__gt_2_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_]_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_*_eq__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_-_lt_/span_gt__lt_span class_eq__qt_lit_qt__gt_1_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__sm__lt_/span_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tIt is not working correctly_co_ is it?  Now let_t_s turn-on flat shaded.  _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#CG2MJ%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#CG2MJ#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRefer to the console... now 486 vertices.  I also changed lines 31-33 to this_dd_\n_lt_/p_gt_\n\n_lt_pre class_eq__qt_ipsCode prettyprint prettyprinted_qt__gt_\n_lt_span class_eq__qt_pln_qt__gt_\tnormals_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_[_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_normnum_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_]_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_*_eq__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_-_lt_/span_gt__lt_span class_eq__qt_lit_qt__gt_1_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__sm__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_\tnormals_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_[_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_normnum_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_+_lt_/span_gt__lt_span class_eq__qt_lit_qt__gt_3_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_]_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_*_eq__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_-_lt_/span_gt__lt_span class_eq__qt_lit_qt__gt_1_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__sm__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_\tnormals_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_[_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_normnum_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_+_lt_/span_gt__lt_span class_eq__qt_lit_qt__gt_6_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_]_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_*_eq__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_-_lt_/span_gt__lt_span class_eq__qt_lit_qt__gt_1_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__sm__lt_/span_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThere we go_co_ a single triangle_co_ backFaced.  _lt_img alt_eq__qt__dd_)_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ data-emoticon_eq__qt__qt_ /_gt_  It_t_s not a hole_co_ because we cannot see the blue background color there.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen we converted to flat shaded mesh_co_ our vertices are less _qt_shared_qt_... so inverting a single vertex... no longer affects up-to 6 triangles (because of shared vertices).  Now you can invert a single triangle without affecting adjacent triangles.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHow the normals are formatted after a .convertToFlatShadedMesh()... I have no idea.  But I did flip a single triangle_co_ and hey_co_ that_t_s something_co_ right?  _lt_img alt_eq__qt__dd_)_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ data-emoticon_eq__qt__qt_ /_gt_  Modify the code_co_ do experiments_co_ hit RUN again and again_co_ and when you discover something_co_ SAVE it and then send us the new URL so we can learn.  (thx).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust for fun_co_ let_t_s apply a displacement map to the ground and wireframed ground2.  _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#CG2MJ%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#CG2MJ#4_lt_/a_gt_  Well look at that.  NOW the triangle _lt_u_gt_IS_lt_/u_gt_ a hole.  I can see blue through it.  Unfortunately_co_ a black triangle resides below.  Maybe we should not be applying displacement maps onto flat shaded mesh_co_ because it is apparently getting confused. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe also lost our flat shading after the applyDisplacementMap_co_ I think.  This might happen because applyDisplacementMap is using normals to do its job... maybe.  Most people would use a createGroundFromHeightMap instead of applyDisplacementMap.  But it_t_s all quite strange_co_ eh?  And fun.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEven when using createGroundFromHeightMap... _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#CG2MJ%235_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#CG2MJ#5_lt_/a_gt_ ...convertToFlatShaded fails (activate line 30 - no subMeshes error).  How DOES a person get a flat shaded ground with BJS?  hmm.  _lt_img alt_eq__qt__dd_)_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ data-emoticon_eq__qt__qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tLike this!  _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#CG2MJ%236_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#CG2MJ#6_lt_/a_gt_  Using the applyDisplacementMap method.  (I had a bug... quite _t_normal_t_ for me)  heh\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSorry that I couldn_t_t explain WHY these things act this way.  I_t_m a newbie to these kinds of things.  Jerome has done some things with _qt_double sided_qt_ mesh_co_ so you might want to search the forum for that_co_ too.  It_t_s new_co_ and I don_t_t know if it is available for all mesh.  Good luck... keep us posted.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"elkyu","Date":"2015-06-29T09:03:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_So_co_ I find a way. On a mesh we have 3 arrays (position_co_ normal_co_ indice)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_We can_t_t invert the normal of a face with the normal array_co_ it_t_s not working (or I fail but ..)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But_co_ we can get the 3 indices which make the face and invert the order of two of this 3 indices and it_t_s working !_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-29T09:09:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_If you know the mesh positions and indices concerned by your inversion_co_ then _lt_em_gt_BABYLON.VertexData_computeSides()_lt_/em_gt_ does the job _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.mesh.vertexData.ts#L1280_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.mesh.vertexData.ts#L1280_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"elkyu","Date":"2015-06-29T09:20:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_... Thank you_lt_/p_gt__lt_p_gt_The implementation of this function is the same of mine .. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_laugh.png_qt_ alt_eq__qt__dd_lol_dd__qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]