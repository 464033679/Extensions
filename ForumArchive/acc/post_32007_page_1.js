[{"Owner":"distraub","Date":"2017-07-28T20:32:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey guys_co_ I have been trying to do this for awhile_co_ and feel like I am almost there.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI had been using Bezier Curves but it wasn_t_t quite doing what I needed. I need to draw an arc made with lines between 2 points on the sphere_co_ following the curve of the sphere.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think  I am close on this playground but some of my math isn_t_t right in the drawArcFromPoints function\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyone think they can take a look and tell me where I am going wrong?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#2I0VXX%2328_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#2I0VXX#28_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"distraub","Date":"2017-07-31T09:45:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAnd I finally figured it out.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#2I0VXX%2334_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#2I0VXX#34_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"distraub","Date":"2017-07-31T11:51:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWell thought I figured it out but it doesn_t_t exactly work for all points_co_ sort of spirals on some.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#2I0VXX%2339_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#2I0VXX#39_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"d13","Date":"2017-12-08T13:55:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/27428-distraub/?do_eq_hovercard_qt_ data-mentionid_eq__qt_27428_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/27428-distraub/_qt_ rel_eq__qt__qt__gt_@distraub_lt_/a_gt_This is awesome!!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe `_lt_font color_eq__qt_#000000_qt__gt_projectLatLongToSphere` function was exactly what I needed for my current project._lt_/font_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-12-09T05:53:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tthe function showAngleSectors() here _lt_a href_eq__qt_https_dd_//github.com/jbousquie/UserFunctions/blob/master/showAngleSector.js_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/jbousquie/UserFunctions/blob/master/showAngleSector.js_lt_/a_gt_  does exactly what you need\n_lt_/p_gt_\n\n_lt_p_gt_\n\torigin is the center of the sphere_co_  vector1 your first point_co_ vector2 your second point and radius the sphere radius\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#FUK3S%237_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#FUK3S#7_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"distraub","Date":"2018-06-07T12:18:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWow Jerome\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSorry I didn_t_t realize you came back and replied_co_ you are awesome\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"olsibob","Date":"2018-08-15T21:17:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tApologies for bumping an old topic_co_ here_t_s my effort. It uses TransformNode.LookAt to create rotationQuaternions_co_ and then Quaternion.Slerp to interpolate the line points_dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/ts.html#QIX6TN%2311_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/ts.html#QIX6TN#11_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTap on the sphere to add more lines. The lines are fairly good_co_ though can get a bit curvy _lt_s_gt_depending on where on the sphere you tap _lt_/s_gt_ if one of the points is at the north pole (I guess because of this being the up axis of the look-at function? I wonder whether I could supply an alternate up axis in those cases).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOn the plus side_co_ there_t_s no custom maths_co_ it just uses BabylonJS methods. On the minus_co_ I_t_m not sure I like adding/removing temporary TransformNodes to the scene just to jump on their LookAt methods (I tried using the Matrix.LookAt methods_co_ but the results weren_t_t good).\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]