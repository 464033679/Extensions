[{"Owner":"Baker Xiao","Date":"2017-08-15T02:30:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi everyone_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe_t_ve been working on a 3d mobile RPG game for a few weeks using Babylon.js and what we_t_ve been continuously struggling with is how challenging it is to keep 60fps on mobile.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet me share the _qt_game_qt_ here to show you what the scene looks like_dd_ _lt_a href_eq__qt_https_dd_//xiaobaker.github.io/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//xiaobaker.github.io/_lt_/a_gt_. Don_t_t laugh. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSome stats_dd_\n_lt_/p_gt_\n\n_lt_ul_gt__lt_li_gt_\n\t\tWe have a ground mesh with standard material\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tWe have 4 different kinds of environment objects_co_ tree1_co_ tree2_co_ rock1_co_ rock2. We created 50 meshes of them using mesh.createInstance(). \n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tWe have up to around 10 active characters in the camera. Each character has 6 meshes. I don_t_t think we can instance them because each of them will need its own bone animation (one day -_-). \n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tUnder 50 draw calls in total\n\t_lt_/li_gt_\n_lt_/ul_gt__lt_p_gt_\n\tRunning this on iphone 6 with ios 10.3.3 gives under 40 fps. We are hoping to keep it at 60 with even more stuff we want to add later on. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m not super experienced with graphics optimizations_co_ so could really use some advice here. A few optimizations I_t_m thinking of_dd_\n_lt_/p_gt_\n\n_lt_ul_gt__lt_li_gt_\n\t\tThe environment objects never change position or anything. How can we optimize for that? They use different materials_co_ so I can_t_t just merge them. Also_co_ freezeWorldMatrix() on instanced meshes seem to destroy the mesh. \n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tCurrently in the inspector it shows that mesh selection is taking 9.4ms and render takes 13ms. How do we bring mesh selection down? Octree can bring mesh selection down to 4.5ms but still that_t_s quite a bit. \n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tHow do we debug what_t_s happening in the 13ms of _qt_render_qt_? How do we debug webGL performance issues on mobile devices in general? \n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tAny general suggestions on how to optimize for a game like this? \n\t_lt_/li_gt_\n_lt_/ul_gt__lt_p_gt_\n\tAny inputs are greatly appreciated! \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Baker Xiao","Date":"2017-08-15T07:28:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOK guys we did some profiling and identified one major bottleneck being computing world matrix for all the meshes. This happens before evaluating mesh visibility_co_ so basically every mesh that_t_s enabled will go through this CPU intensive process. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe wish we can freeze world matrix for these meshes however doing that on InstancedMesh seems to cause the meshes to disappear. Bug?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBesides that_co_ we made a bit improvement by manually doing things like mesh.setEnabled(distanceFromPlayer &lt_sm_ X)_sm_ but that only helps so much. For things inside the camera fov_co_ computing world matrix for every mesh every frame is still quite expensive. Any ideas how to optimize that? Is there a way to force a more efficient way of calculating bounding info for these meshes?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_08/image.png.92f04485488f54adcb2a4ae57fa0999e.png_qt_ data-fileid_eq__qt_14441_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_image.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_14441_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_08/image.png.92f04485488f54adcb2a4ae57fa0999e.png_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-08-15T08:23:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t- For meshes that won_t_t never move_co_ freeze all their WM\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- If you know what meshes are always in the screen (or are surely at certain moment)_co_ select them manually (ex _dd_ the player is always in the frustum_co_ maybe the enemy players that you spawn sometimes also)_co_ this will skip the selection algo for them.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- Instances reduce the number of draw calls what_t_s a good optimization (for obstacles or landscape elements) but there_t_s still a WM computation for each instance (so freeze it also). You could maybe try the Solid Particle System instead (only one WM computation and one draw call) to check if it improves the performance for the landscape elements. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t- Every FX GPU side consumes time_co_ so the lower_co_ the fastest\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tbtw_co_ the game looks nice _sm_-)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Baker Xiao","Date":"2017-08-15T08:39:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5453_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/_qt_ rel_eq__qt__qt__gt_@jerome_lt_/a_gt_ thanks for the response! The issue I ran into with freezing WM was that the mesh disappears when i freeze the WM of an InstancedMesh. I can try to get a PG repro of that if it helps. If we can indeed freeze InstancedMeshes I_t_m sure it_t_ll be a huge improvement. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor some meshes that do need to move a lot_co_ I_t_m wondering if there_t_s any way to simplify the calculation of bounding info since that_t_s the most expensive thing? Maybe force using a constant box value? \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-08-15T16:33:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\thello_co_ you should be able to freeze isntances. Please provide a repro in the PG_co_ I will fix it _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tfor meshes not moving a lot_dd_ why not freezing them and manually calling comptueWorldMatrix(true) which will force the computation\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Christoph","Date":"2017-08-15T17:06:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_185606_qt_ data-ipsquote-contentid_eq__qt_32374_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1502786354_qt_ data-ipsquote-userid_eq__qt_28015_qt_ data-ipsquote-username_eq__qt_Baker Xiao_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t10 hours ago_co_ Baker Xiao said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tFor some meshes that do need to move a lot_co_ I_t_m wondering if there_t_s any way to simplify the calculation of bounding info since that_t_s the most expensive thing? Maybe force using a constant box value? \n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tFrom looking at your game I think the terrain is rather regular_co_ or in other words_dd_ Instead of doing any bounding box and collision detection you could just compute the distance between player/npc and the rocks_co_ if it_t_s too small -&gt_sm_ consider it as some kind of collision. Maybe that could be faster.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHowever when looking at the stats it lists around 25k+ verts so your average mesh is around 100 (Edit_dd_ It seems that_t_s not 100 but ~1000) vertices. That seems pretty high.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-08-15T17:20:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_185667_qt_ data-ipsquote-contentid_eq__qt_32374_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1502814823_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t44 minutes ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\thello_co_ you should be able to freeze isntances. Please provide a repro in the PG_co_ I will fix it _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tfor meshes not moving a lot_dd_ why not freezing them and manually calling comptueWorldMatrix(true) which will force the computation\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI think you mean manually calling freezeWorldMatrix().  _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.abstractMesh.ts#L1102_qt_ rel_eq__qt_external nofollow_qt__gt_ComputeWorldMatrix _lt_/a_gt_ignores force when frozen. _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.abstractMesh.ts#L1102_qt_ rel_eq__qt_external nofollow_qt__gt_freezeWorldMatrix _lt_/a_gt_does a compute.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-08-15T17:29:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYes correct!\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Baker Xiao","Date":"2017-08-15T21:16:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_185667_qt_ data-ipsquote-contentid_eq__qt_32374_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1502814823_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t4 hours ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\thello_co_ you should be able to freeze isntances. Please provide a repro in the PG_co_ I will fix it _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tfor meshes not moving a lot_dd_ why not freezing them and manually calling comptueWorldMatrix(true) which will force the computation\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\thmmmm.. that_t_s indeed an interesting idea. for characters which sometimes stand still_co_ we can probably just freeze them whenever they don_t_t move. will try it out! thanks a lot for the suggestion. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Baker Xiao","Date":"2017-08-15T21:17:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_185673_qt_ data-ipsquote-contentid_eq__qt_32374_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1502816788_qt_ data-ipsquote-userid_eq__qt_18232_qt_ data-ipsquote-username_eq__qt_Christoph_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t4 hours ago_co_ Christoph said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tFrom looking at your game I think the terrain is rather regular_co_ or in other words_dd_ Instead of doing any bounding box and collision detection you could just compute the distance between player/npc and the rocks_co_ if it_t_s too small -&gt_sm_ consider it as some kind of collision. Maybe that could be faster.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tHowever when looking at the stats it lists around 25k+ verts so your average mesh is around 100 (Edit_dd_ It seems that_t_s not 100 but ~1000) vertices. That seems pretty high.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tIt should be around 100 vertices per mesh. Is that still considered high for a mobile game?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Christoph","Date":"2017-08-16T04:56:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_185716_qt_ data-ipsquote-contentid_eq__qt_32374_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1502831865_qt_ data-ipsquote-userid_eq__qt_28015_qt_ data-ipsquote-username_eq__qt_Baker Xiao_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t7 hours ago_co_ Baker Xiao said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tIt should be around 100 vertices per mesh. Is that still considered high for a mobile game?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI don_t_t think so_co_ I confused in that post active and total meshes so the Edit  I made is not correct _lt_img alt_eq__qt__dd_(_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ title_eq__qt__dd_(_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Baker Xiao","Date":"2017-08-16T06:35:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_185667_qt_ data-ipsquote-contentid_eq__qt_32374_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1502814823_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t13 hours ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\thello_co_ you should be able to freeze isntances. Please provide a repro in the PG_co_ I will fix it _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tfor meshes not moving a lot_dd_ why not freezing them and manually calling comptueWorldMatrix(true) which will force the computation\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI just realized that this line is supposed do exactly this job for us_co_ right? _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/6c8f2434f2f21b702b7cac8cffd788bcd33c7c85/src/Mesh/babylon.abstractMesh.ts#L1107_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/6c8f2434f2f21b702b7cac8cffd788bcd33c7c85/src/Mesh/babylon.abstractMesh.ts#L1107_lt_/a_gt_ I guess it won_t_t be very useful to repeat that logic in a similar way?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBTW_co_ InstancedMesh can be frozen correctly. What we saw previously was a bug in our own logic_co_ not Babylon. _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow we have frozen all static meshes_co_ which gave a significant boost. And we did some naive culling logic for most objects in the scene based on distance to player_co_ which gave another boost. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tCPU bottleneck now looks like this_dd_ (which has been reduced a lot compared to before! yay)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_14458_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_08/image.png.dee1ee39cef0ee81380ba11c30548c23.png_qt_ alt_eq__qt_image.png.dee1ee39cef0ee81380ba11c30548c23.png_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tQuestions_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) matrix multiply seems pretty heavy here. is it feasible to move those to GPU?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) for meshes that do keep moving_co_ update bounding info seems pretty CPU intensive. in our case we actually don_t_t care too much about the bounding box_co_ we_t_d rather treat it as a fixed sized box. is it reasonable to consider providing a way to override that behavior to save some CPU cycles?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-08-16T07:32:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/3.0/boundinginfo#islocked-boolean_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/classes/3.0/boundinginfo#islocked-boolean_lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Baker Xiao","Date":"2017-08-16T07:48:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_185742_qt_ data-ipsquote-contentid_eq__qt_32374_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1502868774_qt_ data-ipsquote-userid_eq__qt_5453_qt_ data-ipsquote-username_eq__qt_jerome_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t10 minutes ago_co_ jerome said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/3.0/boundinginfo#islocked-boolean_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/classes/3.0/boundinginfo#islocked-boolean_lt_/a_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\toh interesting. that basically freezes the bounding box including translation though_co_ right? we do want the bounding box to move along with the mesh_co_ otherwise they might be culled during frustum culling.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-08-16T08:38:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYep this prevents the BBox computation. Then you can update it by your own computation (translation only) if you want\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-08-16T17:18:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_185742_qt_ data-ipsquote-contentid_eq__qt_32374_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1502868774_qt_ data-ipsquote-userid_eq__qt_5453_qt_ data-ipsquote-username_eq__qt_jerome_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t9 hours ago_co_ jerome said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/3.0/boundinginfo#islocked-boolean_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/classes/3.0/boundinginfo#islocked-boolean_lt_/a_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tYeah_co_ as soon as you get a performance improvement the next bottleneck shows up.  Wondering out loud_co_ could the value of a boundingbox change when it is computematrix is frozen? Morphing?  Maybe bake this into freezeWorldMatrix?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-08-16T17:24:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tActually if the world matrix is frozen the bounding info won_t_t change\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]