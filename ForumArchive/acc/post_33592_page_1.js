[{"Owner":"friz42","Date":"2017-10-22T15:45:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am new to Babylonjs. I wanted to learn more how it handles physics. I_t_ve found great demo_dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs.com/demos/physics/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs.com/demos/physics/_lt_/a_gt_ _co_ but I could not find any code that what do something like that. I actually wanted to make springs similar to this _lt_a href_eq__qt_https_dd_//github.com/bit101/CodingMath/tree/master/episode16_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/bit101/CodingMath/tree/master/episode16_lt_/a_gt_ but in 3D. Is there any opensource code that shows dynamic physics in babylonjs? Otherwise what materials would you suggest to study to understand how physics works in babylonjs and what are limitations.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tP.S. I know about this lesson _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/overviews/using_the_physics_engine_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/overviews/using_the_physics_engine_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2017-10-23T14:05:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tHi and welcome. Unfortunately this should be in the question and answer section. In that section you are more likely to get answers. You could also do a search in the Q&amp_sm_A for physics engine.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-10-23T20:31:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/28956-friz42/?do_eq_hovercard_qt_ data-mentionid_eq__qt_28956_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/28956-friz42/_qt_ rel_eq__qt__qt__gt_@friz42_lt_/a_gt__co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\twelcome!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat_t_s a great question. The overview you found in the doc is really just an overview. One of my assigns github issue is to make the physics documentation great again_co_ and you really made a good point in convincing me this is very much needed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe best person to ask for demos is _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt__co_ which is an amazing list of wonderful demos from many different people. I hope he will paste a few playgrounds soon_co_ so you can get to know the physics engine a bit more with code examples.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI would recommend to start with the simple playgrounds in the overview_co_ and take it from there. You can also search for playgrounds on the documentation website.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe engines we are using_co_ cannon.js (_lt_a href_eq__qt_https_dd_//github.com/schteppe/cannon.js_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/schteppe/cannon.js_lt_/a_gt_) and oimo.js (_lt_a href_eq__qt_https_dd_//github.com/lo-th/Oimo.js/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/lo-th/Oimo.js/_lt_/a_gt_) have native demos of what_t_s possible with the engines themselves. Anything you can do there is also possible with babylon (and hopefully a bit easier as well). \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-10-23T22:15:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOh yeah_co_ and THANKS for choosing ME!  heh\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAhhh Raanan... throwing a little poop back-at me_co_ huh?  _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tWelcome Friz 42! \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut really_co_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/22713-raggar/?do_eq_hovercard_qt_ data-mentionid_eq__qt_22713_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/22713-raggar/_qt_ rel_eq__qt__qt__gt_@Raggar_lt_/a_gt_ is physics-engine hot hot hot!  He dives into _qt_native_qt_ layers and just hacks and whacks like a mad man.  Brutal!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tReading his code is almost as tough as reading _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/13038-nasimiasl/?do_eq_hovercard_qt_ data-mentionid_eq__qt_13038_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/13038-nasimiasl/_qt_ rel_eq__qt__qt__gt_@NasimiAsl_lt_/a_gt_ shaderBuilder code!  GRUESOME.  _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/?do_eq_hovercard_qt_ data-mentionid_eq__qt_19199_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/19199-pryme8/_qt_ rel_eq__qt__qt__gt_@Pryme8_lt_/a_gt_ is a hot physics engine coder_co_ too... I_t_ve seen him do some _qt_holy crappers_qt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe all know_co_ though_co_ that these physics engines are not for children.  It_t_s best to have full coverage insurance for the entire neighborhood_co_ hard hats_co_ safety shields_co_ leather gloves_co_ and medical teams standing-by.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSometimes_co_ it just takes experiment after experiment... to get a _qt_feel_qt_ for physics engines and impostor usage.  Start with impulsing (or setLinearVelocity) on some simple shapes_co_ learn your friction_co_ mass_co_ restitution params.  Try some gravity and ramps_co_ etc.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOh yeah_co_ springs.  Someone was playing with springs... _lt_strong_gt__lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#7I4SCF%232_qt_ rel_eq__qt_external nofollow_qt__gt_here_lt_/a_gt__lt_/strong_gt_.   Someone was DRAWING springs _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1VPUIR%231_qt_ rel_eq__qt_external nofollow_qt__gt_here_lt_/a_gt_... but not using any physics.  MY _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#RLKVFF%2358_qt_ rel_eq__qt_external nofollow_qt__gt_recent _qt_springs_qt_ project_lt_/a_gt_ is a puppy-level (beginner) landing gear for a Lunar Lander-like space craft.  Pretty bad coding on my part.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  X_co_ Y_co_ Z keys... and shifted X Y Z keys... active for impulsing the green box.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m not very good-at _qt_springJoints_qt__co_ but they are pretty fun.  Requires patience_co_ like all learned things.   (also_co_ I see some inconsistencies when that _qt_lander_qt_ demo is reRUN and reLOADED.  weird.)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn my lander playground_co_ ONE end of the TWO springs on the lander-legs... are _t_anchored_t_  to points that are hovering in space.  There is no mesh hooked to one end of the springs.  They are invisibly located _qt_above_qt_ the two front (boundingBoxed) lander legs. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tOnly two springs are in the scene.  The back two legs have no springs_co_ but they are connected to the front two legs... via two lockJoints.  (like a cross-member between the front and back lander-legs).  Thus_co_ the _qt_back_qt_ legs use the same two springs as the front legs.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWay too much info_co_ huh?  AND_co_ it sucks... not being able to _qt_see_qt_ physics impostors and physics joints_co_ right? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe (I) have been thinking about a _qt_show the physics_qt_ layer_co_ using the new Babylon GUI system... but... it_t_s not done.  When first done... it would simply put name labels at various places in the scene... to show where the impostors and joints are located (as best it can).  It is somewhat difficult to do _qt_visualization_qt_ of physics formulas.  I wish I had a magical idea... for that.  Be well.  We_t_re here with aspirin... for your experimenting pain.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2017-10-24T00:26:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\twith physics_co_ break it till you make it! _lt_img alt_eq__qt_^_^_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_happy.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/happy@2x.png 2x_qt_ title_eq__qt_^_^_qt_ width_eq__qt_20_qt_ /_gt__lt_br /_gt__lt_br /_gt_\n\tJust do tons of experiments to test out a bunch of ideas_co_ make dumb gadgets and rig ups that have no purpose other then for you to mess with it._lt_br /_gt__lt_br /_gt_\n\tAlso google is your best friend_co_ look up real physic algorithms and try to understand them and how their systems would translate to BJS.  _lt_br /_gt_\n\tIts kinda a long road to start down_co_ but follow the examples you can find and just keep hacking.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"friz42","Date":"2017-10-24T21:59:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThank you for links. Most of them I already found by searching _qt_spring_qt_ in playgrounds. I see that springjoints are working_co_ but I am not sure how physical are they. I_t_ve searched for documentation for cannon.js to understand how springjoints work_co_ but I_t_ve found only list of classes used _lt_a href_eq__qt_http_dd_//schteppe.github.io/cannon.js/docs/classes/Spring.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//schteppe.github.io/cannon.js/docs/classes/Spring.html_lt_/a_gt_. Does anyone know where I can get a bit more verbose information about cannon.js implementations?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-10-25T00:43:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Documentation/issues/454_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Documentation/issues/454_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s on the BJS _qt_todo_qt_ list.  (joints)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd _lt_em_gt_parenting_lt_/em_gt_ is also there_co_ which is OUR way of creating compound impostors.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(I think we are supposed to add impostors to the children FIRST_co_ and add impostor to parent_co_ last.)  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tWe were sort-of hoping that Friz42 would write the verbose Joints Tutorial.  _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t*shrug*  Cannon springs are both compression and extension... in the same object (pushers or pullers).  At deep levels_co_ they are formulas_co_ of course.  You can examine them easily with the built-into-browser object inspector.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere appears to be no _qt_spring-loaded hingeJoint_qt_... built-into CannonJS.  I went looking_co_ a bit.  We once talked about a motor-control algorithm that would make a hingeJoint ACT like it was spring-loaded.  But_co_ everyone got scared of that idea_co_ and we all took a nap_co_ instead.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDo ya think the swinging doors on the saloon in the cowboy movies... had springs?  I bet not.  I bet each door raised height a tiny bit when it was swung-open_co_ and then gravity did the work to close the door_co_ via some kind of hinge _qt_cup_qt_ thing.   hmm.  Why am I still talking?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAt the BJS plugin layer... _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Physics/babylon.physicsJoint.ts#L188_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Physics/babylon.physicsJoint.ts#L188_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThree set-ables... length_co_ stiffness_co_ damping_co_ along with mainPivot and connectedPivot.  They_t_re reasonably easy to understand.  They _qt_hand-off_qt_ their values to _qt_native_qt_ properties within the actual 3rd party engine.  You can also _qt_talk native_qt_ _lt_u_gt_directly_lt_/u_gt_... in 2 ways.  One way is done with a feature on our plugins_co_ and the other is simply _qt_going-around the plugin_qt_. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_qt_Talking native_qt_ means getting/setting values much deeper into the physics engine... than would normally be allowed at the BJS physics plugin layer/api.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut_co_ I bet YOU want _qt_friendlier_qt_ and with illustrations.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_   Yep_co_ me too.  Work work work.  _lt_a href_eq__qt_https_dd_//blog.raananweber.com/2016/09/06/webgl-car-physics-using-babylon-js-and-oimo-js/_qt_ rel_eq__qt_external nofollow_qt__gt_Raanan_t_s physics car document_lt_/a_gt_ is pretty decent_co_ but not much info about springs.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Old Info_lt_/strong_gt__dd_  Earlier_co_ I lied to everyone... when I said that one end of my springs were not attached-to any mesh.  They actually are_co_ but their mainPivot is offset SO FAR... that it IS truly hovering in space.   A joint _lt_strong_gt_must_lt_/strong_gt_ have an impostor at each end.  I just wanted to clarify and self-spank for being a dirty rotten liar.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  Also_co_ MANY joints can share an impostor.  The front legs of the lander have springJoints and lockJoints.  When done right_co_ they don_t_t fight. (I_t_m a poet!)   But_co_ a _qt_battle of the springs_qt_ would be a fun drinking/betting game_co_ huh?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-10-25T00:52:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\toops_co_ I accidentally double posted.  But BE SURE to catch my previous post_co_ which is darned interesting_co_ as always. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tDelete this at will_co_ admin.  thx.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"d13","Date":"2017-10-25T12:08:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Everyone_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m curious_dd_ which is best to use Cannon.js or Oimo.js?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs there a reason both are supported?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"friz42","Date":"2017-10-25T12:45:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_192975_qt_ data-ipsquote-contentid_eq__qt_33592_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1508933327_qt_ data-ipsquote-userid_eq__qt_5513_qt_ data-ipsquote-username_eq__qt_d13_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t41 minutes ago_co_ d13 said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI_t_m curious_dd_ which is best to use Cannon.js or Oimo.js?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tHi! If you haven_t_t read this post_dd_\n_lt_/p_gt_\n_lt_iframe allowfullscreen_eq__qt__qt_ data-controller_eq__qt_core.front.core.autosizeiframe_qt_ data-embedcontent_eq__qt__qt_ data-embedid_eq__qt_embed8054690773_qt_ scrolling_eq__qt_no_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/topic/33392-whats-your-prefered-physics-engine-these-days/?tab_eq_comments&amp_sm_do_eq_embed&amp_sm_comment_eq_191765&amp_sm_embedComment_eq_191765&amp_sm_embedDo_eq_findComment#comment-191765_qt_ style_eq__qt_height_dd_278px_sm_max-width_dd_502px_sm__qt__gt__lt_/iframe_gt_\n\n_lt_p_gt_\n\t I would suggest you to read it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOr in few words I can retell you what I understood from it_dd_ Cannon.js is more realistic but far from perfect_co_ Oimo.js is faster and better for big scenes with many interacting objects_co_ Energy.js can be fast and realistic_co_ but it is very raw right now. There are other engines as well and you can try them if you have a spirit of pioneer. (should this be added to _qt__lt_a href_eq__qt_https_dd_//doc.babylonjs.com/overviews/using_the_physics_engine_qt_ rel_eq__qt_external nofollow_qt__gt_using_the_physics_engine_lt_/a_gt__qt_ tutorial?)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]