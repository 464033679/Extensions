[{"Owner":"fenomas","Date":"2015-11-09T14:20:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Two questions related to performance tuning_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_1. I don_t_t know what _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_StandardMaterial.isReady_lt_/span_gt_ does_co_ but it seems to return early in various cases. What can I do to make my materials fall into those cases? This is usually the #1 most costly function in my game._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_2. It appears that _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_scene.pick_lt_/span_gt_ gets called every _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_onPointerMove_lt_/span_gt__co_ even though I_t_m not using picking or BJS_t_s pointer support in any way. Can I prevent this?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In both cases the underlying problem is that v8 deoptimizes the functions_co_ making them dog-slow. This may be fixable in and of itself_co_ but I expect it would be a lot of work._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks for any help..._lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-11-09T14:47:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_1. Set _lt_strong_gt_material.checkOnlyOnce _eq_ true_lt_/strong_gt_.  Might have side effects_co_ especially if you alter it after creation._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_2. Do not know.  Just a scene property _lt_strong_gt_public notDoingPicking _eq_ false_sm_ _lt_/strong_gt_might be a good way to shut it off.  If you fork_co_ try it._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-11-09T15:12:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_104857_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_18486_qt_ data-ipsquote-username_eq__qt_JCPalmer_qt_ data-cite_eq__qt_JCPalmer_qt_ data-ipsquote-timestamp_eq__qt_1447080427_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_1. Set _lt_strong_gt_material.checkOnlyOnce _eq_ true_lt_/strong_gt_.  Might have side effects_co_ especially if you alter it after creation._lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m assuming that_t_s safe to do in some cases and not in others. I_t_m asking_co_ when is it safe?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-09T18:45:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_1. If you don_t_t change anything on your material after settings initial values then checkOnlyOnce is for you._lt_/p_gt__lt_p_gt_2. The scene.pick is called to evaluate potential OnPickTrigger actions and define the value of meshUnderPointer. you can turn it off by calling scene.detachControl()_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-11-10T01:28:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_2. Gotcha._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_1. So if I change a material setting_co_ I need to set _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_checkOnlyOnce_lt_/span_gt_ to false_co_ then wait one render_co_ then set it back? _lt_/p_gt__lt_p_gt_Or maybe set _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt__wasPreviouslyReady_lt_/span_gt_ to false or something?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-10T19:05:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_1. Correct _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-11-11T23:45:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_1. Thanks _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you don_t_t mind feedback_co_ this _lt_em_gt_really_lt_/em_gt_ feels like something that should be managed internally_co_ if the performance affects most users. I know you_t_re not fond of setters or but it_t_s weird that the user should need to set a magic flag to get best performance in the default case_co_ and then set another one after changing certain properties._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If it_t_s just me that this is slow for_co_ then never mind of course..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-12T00:46:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I cannot set the _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_checkOnlyOnce_lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_  _eq_ true by default because it will be incredibly hard to understand for most users that they need to call some functions to have their values updated._lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_Regarding setters_co_ we could do it for all material properties (which will be painful and will increase the size of the framework) but what about others properties like fog for instance? this will mean that each time you change the fog_co_ or enable mirrors or any other global properties (not mentioning light properties) that affect shaders you will have to go through all shaders to turn the flag on?_lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I don_t_t think this is a good idea _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you are smart enough to think about checkOnlyOnce then I know that you won_t_t be too much bothered to change one flag _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-12T00:53:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_To be cleaner_co_ I_t_ve just added material.resetCheckReadyOnlyOnceFlag()_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-11-12T12:44:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This is just feedback_co_ I don_t_t necessarily mean you should make huge changes now. But if there was an opportunity_co_ like major update_co_ using setters when necessary would definitely make the API better._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Look at it this way_dd_ in any API there are basically three kinds of settings_dd__lt_/p_gt__lt_ul_gt__lt_li_gt_Settings you can_t_t change_lt_/li_gt__lt_li_gt_Settings you can change any time_lt_/li_gt__lt_li_gt_Settings you can change_co_ but it causes side effects_lt_/li_gt__lt_/ul_gt__lt_p_gt_In a perfect API_co_ the first group should be getters_co_ the second properties_co_ and the third setters*. If those rules are followed then the API documents itself_co_ and _lt_em_gt_cannot_lt_/em_gt_ be used incorrectly. But otherwise_co_ you start to require users to think about internal implementation_co_ which is precisely what abstraction layers are meant to prevent._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_* (in practice of course this can mean real JS setters_co_ or _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_setValue()_lt_/span_gt_ functions_co_ or cached properties are checked each render. To the user it doesn_t_t matter which)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Personal note_dd_ for my project I started out using three.js_co_ but I found it annoying to memorize all the cases where you have to _lt_a href_eq__qt_https_dd_//github.com/mrdoob/three.js/wiki/Updates_qt_ rel_eq__qt_external nofollow_qt__gt_set special flags every time you update properties_lt_/a_gt_. The cleaner API is 100% of the reason I switched to BJS_co_ that_t_s why I feel strongly about it. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-11-12T12:50:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_105256_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_18486_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1447289618_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_To be cleaner_co_ I_t_ve just added material.resetCheckReadyOnlyOnceFlag()_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What does it do_co_ is it equivalent to three_t_s _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_needsUpdate_lt_/span_gt_?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If so you might consider giving it a generic name (like markForUpdate or markDirty)_co_ so that people who don_t_t know what the readOnlyOnce flag is doing (i.e. me). Also if other places in the engine needed a similar functionality they could use a consistent name._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-11-12T12:52:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I presume this flag do what you were previously doing by hand _dd_ set checkOnlyOnce _eq_ false_co_ wait one render and set again checkOnlyOnce _eq_ true_lt_/p_gt__lt_p_gt_So you can change your material_co_ and simply call this update flag to be able to apply your changes but still with the checkOnlyOnce _eq_ true always active for performance._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-12T16:21:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok for the rename it is better_co_ you are right._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m absolutely agree with you that API has to be really SIMPLE. this is why the _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_checkOnlyOnce is false by default. Turning it on will offer better performance but you will have to call _lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_markDirty (see_co_ I use the new name already _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_) to validate your changes_lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_We cannot always have simpliity and performance. This specific case is a perfect example. If I want checkOnlyOnce _eq_ true AND no need to call markDirty then I will generate a really complex code to maintain because all entities controling values used by the shaders have to go through ALL materials each time you change a value to call markDirty._lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So_co_ in a general way_co_ I completely agree with you and this is what I want to enforce everywhere in babylon.js but this case is an exception _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-12T16:29:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_But I have to admit that I would love to be able to provide this API quality to be honest._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I need to think deeply on how to optimize it...._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-11-13T03:33:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_105354_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_18486_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1447345303_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_We cannot always have simpliity and performance. This specific case is a perfect example. If I want checkOnlyOnce _eq_ true AND no need to call markDirty then I will generate a really complex code to maintain because all entities controling values used by the shaders have to go through ALL materials each time you change a value to call markDirty._lt_/span_gt__lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Sorry_co_ I_t_m not sure if my point has gotten across. Probably my language. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The underlying issue here is that lots of material settings have side effects when changed_co_ right? That is_co_ BJS needs to know whether the user has done anything to invalidate the material. But it can_t_t check this without doing a lot of work_co_ so it assumes the material _lt_em_gt_might_lt_/em_gt_ be invalid_co_ and implements several flags that let the user override this_co_ but then you have to manually tell BJS when an invalidation happens. That_t_s basically what_t_s happening_co_ right?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What I_t_m saying is_co_ in general I think such issues occur when an API uses plain properties for settings that have side effects_co_ and the issue can be avoided by converting properties to setters. In other words_co_ any time an API says _qt_when you change property X then you should set flag Y_qt__co_ instead it could just implement X as a setter that updates Y automatically._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_With that said_co_ three.js is a very mature API and it doesn_t_t do this_co_ so maybe there are considerations I_t_m overlooking. I don_t_t think it can be performance. (I mean setters are a little slower than properties_co_ but nobody is going to change a material_t_s diffuseTexture thousands of times per frame.) Maybe it_t_s browser support? IE6/8 might not support setters_co_ I don_t_t remember._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And again_co_ this is just feedback! I_t_m not asking you to drop everything and change dozens of properties just so that I don_t_t have to set one flag. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ But as a general design principle_co_ I hope you can find ways to use setters to hide complexity_co_ where possible._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-13T16:18:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_No I think it_t_s me who is not clear _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Let me try again_dd_ let_t_s consider I_t_m adding setters everywhere to implement _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_ X as a setter that updates Y automatically._lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_Now let_t_s consider I_t_m doing that for texture.uScale for instance._lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_The pseudo code would be_dd_ _lt_/span_gt__lt_/p_gt__lt_p_gt__lt_em_gt_texture.uScale _eq_ function(value) {_lt_/em_gt__lt_/p_gt__lt_p_gt__lt_em_gt_    texture._uscale _eq_ value_sm__lt_/em_gt__lt_/p_gt__lt_p_gt__lt_em_gt_    for each material in the scene_dd_ if the material uses this texture then mark it as dirty_lt_/em_gt__lt_/p_gt__lt_p_gt__lt_em_gt_}_lt_/em_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So setting texture.uScale becomes now a complete scan of all materials in your scene. And this will be the same for_co_ let_t_s say_co_ scene.fogEnable which will have to go through all materials as well._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So this is why I say performance penalties are too important to make this change. This is not related to performance hit due to the setter but due to what the setter has to do._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-13T16:20:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_In the other hand_co_ I completely agree with you on this_dd__lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_But as a general design principle_co_ I hope you can find ways to use setters to hide complexity_co_ where possible._lt_/span_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_And I count on you to keep giving feedback whenever you want !_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-11-14T04:08:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ahh.. so you_t_re saying the cost here isn_t_t inherent_co_ it just arises because BJS doesn_t_t keep a list of materials using a given texture_co_ so you_t_re asking the (advanced) user to know that instead_co_ is that correct?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If so then I certainly see why that_t_s a reasonable tradeoff_co_ but the cost (to you) is that you_t_re signing yourself up for more questions. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Starting with this_dd_ your sample code suggests that changing uv scale/offsets should invalidate a material_co_ but is that the case? In my scene right now I_t_m just setting _lt_em_gt_every_lt_/em_gt_ material_t_s _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_checkReadyOnlyOnce_lt_/span_gt_ to true_co_ all the time_co_ and nothing seems to break - even though I dynamically change a lot of material parameters - uvscale/offset_co_ emissiveColor_co_ diffuseColor_co_ and others._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What sorts of parameters do I need to be careful with?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-11-14T04:57:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This discussion is really really interesting_co_ for sure !_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-15T16:49:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Absolutely and even keeping the list of materials using a texutre is not that easy because of custom materials that people can create. How can I force them to indicate to the texture that they are using it? this will require a massive rework I_t_m not ready to do_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_uv were an example to make it clearer (I should have used fog actually). The real issue with isReady is that this function compiles the right shader for the current option by defining _qt_#define_qt_ to use inside the shader. This is done to provide the more efficient shader possible (for example if fog is off_co_ the shader code for fog willl be removed hence better perf)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So if you go there_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/babylon.standardMaterial.ts#L20_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/babylon.standardMaterial.ts#L20_lt_/a_gt__co_ you_t_re gonna see the options that can control the compilation of the shader_dd_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt_\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_DIFFUSE_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_AMBIENT_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_OPACITY_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_OPACITYRGB_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_REFLECTION_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_EMISSIVE_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SPECULAR_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_BUMP_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SPECULAROVERALPHA_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_CLIPPLANE_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_ALPHATEST_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_ALPHAFROMDIFFUSE_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_POINTSIZE_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_FOG_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_LIGHT0_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_LIGHT1_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_LIGHT2_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_LIGHT3_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SPOTLIGHT0_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SPOTLIGHT1_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SPOTLIGHT2_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SPOTLIGHT3_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_HEMILIGHT0_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_HEMILIGHT1_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_HEMILIGHT2_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_HEMILIGHT3_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_POINTLIGHT0_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_POINTLIGHT1_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_POINTLIGHT2_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_POINTLIGHT3_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_DIRLIGHT0_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_DIRLIGHT1_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_DIRLIGHT2_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_DIRLIGHT3_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SPECULARTERM_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SHADOW0_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SHADOW1_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SHADOW2_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SHADOW3_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SHADOWS_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SHADOWVSM0_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SHADOWVSM1_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SHADOWVSM2_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SHADOWVSM3_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SHADOWPCF0_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SHADOWPCF1_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SHADOWPCF2_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_SHADOWPCF3_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_DIFFUSEFRESNEL_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_OPACITYFRESNEL_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_REFLECTIONFRESNEL_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_EMISSIVEFRESNEL_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_FRESNEL_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_NORMAL_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_UV1_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_UV2_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_VERTEXCOLOR_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_VERTEXALPHA_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_NUM_BONE_INFLUENCERS_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_0_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_BonesPerMesh_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_0_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_INSTANCES_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_GLOSSINESS_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_ROUGHNESS_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_EMISSIVEASILLUMINATION_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_LINKEMISSIVEWITHDIFFUSE_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_REFLECTIONFRESNELFROMSPECULAR_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_LIGHTMAP_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_USELIGHTMAPASSHADOWMAP_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_REFLECTIONMAP_3D_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_REFLECTIONMAP_SPHERICAL_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_REFLECTIONMAP_PLANAR_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_REFLECTIONMAP_CUBIC_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_REFLECTIONMAP_PROJECTION_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_REFLECTIONMAP_SKYBOX_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_REFLECTIONMAP_EXPLICIT_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_REFLECTIONMAP_EQUIRECTANGULAR_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t\t\t\t\t \t\t\t\t\t\t\t_lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt_public_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(237_co_106_co_67)_sm__qt__gt_INVERTCUBICMAP_lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(167_co_29_co_93)_sm__qt__gt__eq__lt_/span_gt_ _lt_span style_eq__qt_color_dd_rgb(0_co_134_co_179)_sm__qt__gt_false_lt_/span_gt__sm_\t\t_lt_p_gt_ _lt_/p_gt__lt_p_gt_For example_co_ if you set checkOnlyOnce _eq_  true and you use your material with a mesh without bones and with a mesh with bones then it will NOT work._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Why? because the first mesh compiles the shader without bone and the second one will not compile a new version because of checkOnlyOnce._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This cannot be fixed even with setters unfortunately. Smart shaders are really powerful (If you want more detail on it_co_ I wrote a chapter about them in this _lt_a href_eq__qt_http_dd_//www.amazon.com/WebGL-Insights-Patrick-Cozzi/dp/1498716075/ref_eq_sr_1_1?ie_eq_UTF8&amp_sm_qid_eq_1447606078&amp_sm_sr_eq_8-1&amp_sm_keywords_eq_webgl+insights_qt_ rel_eq__qt_external nofollow_qt__gt_book_lt_/a_gt_) but the performance and memory gains come at the cost of adapting them per mesh and per frame._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-11-16T03:24:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ah_co_ so changing the settings for a given feature doesn_t_t invalidate the material_co_ but adding and removing features does. That makes sense._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And again_co_ I understand this is done for performance_co_ it_t_s just that in my scenes the isReady function was eventually taking &gt_sm_10% of the total processing time_co_ at least in Chrome._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks as always!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-16T18:02:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_My pleasure!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]