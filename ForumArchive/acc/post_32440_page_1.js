[{"Owner":"SvenFrankson","Date":"2017-08-18T09:11:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi everyone_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_u_gt_(note _dd_ At first I thought it was a bug_co_ now with a Playground I think it_t_s a feature I don_t_t fully understand...)_lt_/u_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is a case I_t_m facing_co_ waiting for some nice expert to enlighten me...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_em_gt_Use case_lt_/em_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- A mesh is generated with UVs (for diffuse Texture) and UVs1 (for a default ambient texture).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- On a user action_co_ another ambient texture is computed_co_ based on UVs2 channel_co_ and applied.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- The new ambient texture fails to use UVs2.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_u_gt_(note _dd_ I_t_d like to have all the UVs (UVs_co_ UVs1 and UVs2) generated at the same time_co_ and not on user action)_lt_/u_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_u_gt_(note _dd_ A solution for my specific case would be to exchange UVs1 and UVs2 when assigning the new ambient texture)_lt_/u_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlayground _dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#6L74SN%231_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#6L74SN#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Is there a way to use UVs2 for the ambient texture here ?_lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlternatively_co_ _lt_strong_gt_is there a use for all these UV channels_lt_/strong_gt_ in the StandardMaterial (or PBRMaterial ?) ? Some rules like _qt_UVs or UVs1 for diffuse_co_ UVs2 for LightMap_co_ UVs3 for displacement..._qt_ ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks a lot and have a nice day !\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-08-18T15:17:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tnot a bug per se but more a limitation_dd_ StdMaterial and PBRMaterial can only use 2 textures coordinates (uv0 and uv1).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is the code for your record_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Shaders/default.vertex.fx#L138_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Shaders/default.vertex.fx#L138_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]