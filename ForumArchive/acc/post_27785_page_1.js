[{"Owner":"georage","Date":"2017-01-17T19:42:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI think I have answered my own question_co_ but it seems you can_t_t dispose of a root mesh that is used to build instances without deleting all the instances from the scene as well.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs that right?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI created a _qt_galaxy_qt_ (OK_co_ a small one!) of various star types. I created one root star for each star type then made several thousand instances of each star type with different xyx positions and scaling. It works great.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut when I dispose of the root meshes everything disappears. I guess this is how it is supposed to work. Reminds me of a game I worked on where we had to keep all the magic items in a hidden treasure chest somewhere in the game world and whenever a player got a magic sword we just copied one from the hidden chest.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t-- George\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-01-18T19:17:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI think you are correct about the instances_co_ G... but I_t_m not sure.  Makes sense.  Clones... are different_co_ though.  Clones don_t_t inherit their master_t_s material_co_ though.  Instances do.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t*shrug*\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYa know_co_ mister G... that there is some HUGE star-field images... laying around on the web_co_ free.  If you used a BABYLON.Layer image with .isBackground _eq_ true_co_ and... screwed-around enough_co_ you could pan that...  well heck... here_t_s a bad version I once made.  _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1XQKP1%2311_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#1XQKP1#11_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPotential poor-man_t_s starfield.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tBut then... there_t_s these equi-rectangular things...  special images used as single-image skyboxes.  _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#11GAIH%2311_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#11GAIH#11_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat_t_s really something_co_ too.  If you could find a public-usable equi-rectangular starfield image... perhaps you could save yourself a few thousand mesh.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tBut real mesh stars/planets ARE cool_co_ eh?  SPS (solid particle system)... or ANY particle system... would get you real mesh stars... for minimum byte/load costs.  Both solid and standard particle systems... have a function in them... something like startPositionFunction()_co_ and you get to replace that with your own function.  Easily.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWell heck_co_ I got a _qt_star dome_qt_ that I once did... with standard particles... using a custom startPositionFunction().  _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#J6ZLH%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#J6ZLH#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSee the custom startPositionFunction in lines 11-16?  It uses a couple other functions stolen from the web... to plot (start) particles in a spherical shape_co_ and it has some anti- pole-clustering features_co_ too.  Works sort of ok.   See the updateFunction at line 20?  That is the OTHER function in particle systems... that folks often _qt_customize_qt_.  The one in that PG does nothing... but lets _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#J6ZLH%234_qt_ rel_eq__qt_external nofollow_qt__gt_go look at version #4_lt_/a_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tVersion 4 (starts at line 21) (_lt_em_gt_myUpdateFunction_lt_/em_gt_) still doesn_t_t do much... except... lines 34 and 35... which cause star twinkle extraordinaire.  Try changing that *10 to *50 ... in line 35_co_ and RUN again.  WOW!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCustom particle placing_co_ and custom particle updating.  FUN!  Particles are low vertices... better bang-for-the-buck than instances_co_ I suspect.  But one sad note.  Particles don_t_t do godrays.  They once did_co_ but that feature was lost in the depth-rendering wars_co_ I believe.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway_co_ thought I_t_d tell you of a few more ways of doing stars... in case you wanted to go experimenting.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-01-18T19:34:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou are right for instances. You cannot dispose the root.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor clones you can though\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"georage","Date":"2017-01-18T22:00:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks Wingy. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am just making 1 or 2 stars at a time for the godrays thing.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSeparately I am using instances to create a thousand or so stars at a time and storing the x_co_ y_co_ z coords in a database. In truth I don_t_t even need to use meshes to generate random positions ... but it is fun to look at the results.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI like your examples. That #4 is really neat. I can maybe use that for something! I also like one I saw you did with CORONAS ... almost like a godrays thing. You have skills son!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]