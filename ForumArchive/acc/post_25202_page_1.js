[{"Owner":"yevo","Date":"2016-09-15T16:45:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello all\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have a weird scenario where i am stuck. I currently have 2 images that are used as textrue and i load both onto 2 planes where they show on the same side. Now i need to kind of show 2 different planes or a double sided plane where each side has its own image or texture. Please look at the code that i have. For some reason the plane and plane2 show fine but plan3 and plane4 do not show up\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tvar scene _eq_ new BABYLON.Scene(engine)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    //Create an Arc Rotate Camera - aimed negative z this time_lt_br /_gt_\n\t                    var camera _eq_ new BABYLON.ArcRotateCamera(_qt_Camera_qt__co_ -2.5_co_ 1.2_co_ 350_co_ BABYLON.Vector3.Zero()_co_ scene_co_ true)_sm__lt_br /_gt_\n\t                    camera.attachControl(canvas_co_ true)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    //Create a light_lt_br /_gt_\n\t                    var light _eq_ new BABYLON.HemisphericLight(_qt_hemi_qt__co_ new BABYLON.Vector3(0_co_ 1_co_ 0)_co_ scene)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    var spot _eq_ new BABYLON.SpotLight(_qt_spot_qt__co_ new BABYLON.Vector3(0_co_ 0_co_ 0)_co_ new BABYLON.Vector3(0_co_ 0_co_ 1)_co_ 0.8_co_ 2_co_ scene)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    spot.diffuse _eq_ new BABYLON.Color3(1_co_ 1_co_ 1)_sm__lt_br /_gt_\n\t                    spot.specular _eq_ new BABYLON.Color3(1_co_ 1_co_ 1)_sm__lt_br /_gt_\n\t                    spot.intensity _eq_ 1_sm__lt_br /_gt_\n\t                    spot.position _eq_ new BABYLON.Vector3(0_co_ 0_co_ -500)_sm__lt_br /_gt_\n\t                    // spot.setDirectionToTarget(new BABYLON.Vector3(0_co_ 0_co_ 0))_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    spotcone _eq_ BABYLON.Mesh.CreateCylinder(_qt_cone_qt__co_ 16_co_ 12_co_ 0_co_ 8_co_ 0_co_ scene)_sm__lt_br /_gt_\n\t                    var conemat _eq_ new BABYLON.StandardMaterial(_qt_cone_qt__co_ scene)_sm__lt_br /_gt_\n\t                    conemat.diffuseColor _eq_ new BABYLON.Color3(0_co_ 0_co_ 2)_sm__lt_br /_gt_\n\t                    spotcone.rotation.x _eq_ Math.PI/2_sm__lt_br /_gt_\n\t                    spotcone.bakeCurrentTransformIntoVertices()_sm__lt_br /_gt_\n\t                    spotcone.material _eq_ conemat_sm__lt_br /_gt_\n\t                    spotcone.parent _eq_ spot_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt_\n\t                    var sURL _eq_ _qt_images/scodix1.jpg_qt__sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    var materialPlane _eq_ new BABYLON.StandardMaterial(_qt_solid_qt__co_ scene)_sm__lt_br /_gt_\n\t                    materialPlane.diffuseTexture _eq_ new BABYLON.Texture(sURL_co_ scene)_sm__lt_br /_gt_\n\t                    // materialPlane.emissiveTexture _eq_ new BABYLON.Texture(sURL_co_ scene)_sm__lt_br /_gt_\n\t                    //materialPlane.emissiveTexture _eq_ new BABYLON.Texture(_t_images/scodix1.png_t__co_ scene)_sm__lt_br /_gt_\n\t                    //materialPlane.useAlphaFromDiffuseTexture_lt_br /_gt_\n\t                    materialPlane.specularColor _eq_ new BABYLON.Color3(0_co_ 0_co_ 0)_sm__lt_br /_gt_\n\t                    materialPlane.backFaceCulling _eq_ true_sm_//Allways show the front and the back of an element_lt_br /_gt_\n\t                    // materialPlane.emissiveTexture.level _eq_ 1_sm_  // powerfulness\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt_\n\t                    var tURL _eq_ _qt_images/scodix1.png_qt__sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    var spotPlain _eq_ new BABYLON.StandardMaterial(_qt_transp_qt__co_ scene_co_ true)_sm__lt_br /_gt_\n\t                    spotPlain.diffuseTexture _eq_ new BABYLON.Texture(tURL_co_ scene)_sm__lt_br /_gt_\n\t                    spotPlain.anisotropicFilteringLevel _eq_ 0_sm__lt_br /_gt_\n\t                    spotPlain.diffuseTexture.hasAlpha _eq_ true_sm__lt_br /_gt_\n\t                    spotPlain.useAlphaFromDiffuseTexture_sm__lt_br /_gt_\n\t                    spotPlain.hasAlpha _eq_ true_sm__lt_br /_gt_\n\t                    spotPlain.specularColor _eq_ new BABYLON.Color3.FromHexString(_qt_#ffffff_qt_)_sm__lt_br /_gt_\n\t                    spotPlain.backFaceCulling _eq_ true_sm_ // Always show the front and the back of an element\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    var sURL2 _eq_ _qt_images/scodix2.jpg_qt__sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    var materialPlane2 _eq_ new BABYLON.StandardMaterial(_qt_solid2_qt__co_ scene)_sm__lt_br /_gt_\n\t                    materialPlane2.diffuseTexture _eq_ new BABYLON.Texture(sURL2_co_ scene)_sm__lt_br /_gt_\n\t                    // materialPlane.emissiveTexture _eq_ new BABYLON.Texture(sURL_co_ scene)_sm__lt_br /_gt_\n\t                    //materialPlane.emissiveTexture _eq_ new BABYLON.Texture(_t_images/scodix1.png_t__co_ scene)_sm__lt_br /_gt_\n\t                    //materialPlane.useAlphaFromDiffuseTexture_lt_br /_gt_\n\t                    materialPlane2.specularColor _eq_ new BABYLON.Color3(0_co_ 0_co_ 0)_sm__lt_br /_gt_\n\t                    materialPlane2.backFaceCulling _eq_ true_sm_//Allways show the front and the back of an element_lt_br /_gt_\n\t                    // materialPlane.emissiveTexture.level _eq_ 1_sm_  // powerfulness\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt_\n\t                    var tURL2 _eq_ _qt_images/scodix2.png_qt__sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    var spotPlain2 _eq_ new BABYLON.StandardMaterial(_qt_transp2_qt__co_ scene_co_ true)_sm__lt_br /_gt_\n\t                    spotPlain2.diffuseTexture _eq_ new BABYLON.Texture(tURL2_co_ scene)_sm__lt_br /_gt_\n\t                    spotPlain2.anisotropicFilteringLevel _eq_ 0_sm__lt_br /_gt_\n\t                    spotPlain2.diffuseTexture.hasAlpha _eq_ true_sm__lt_br /_gt_\n\t                    spotPlain2.useAlphaFromDiffuseTexture_sm__lt_br /_gt_\n\t                    spotPlain2.hasAlpha _eq_ true_sm__lt_br /_gt_\n\t                    spotPlain2.specularColor _eq_ new BABYLON.Color3.FromHexString(_qt_#ffffff_qt_)_sm__lt_br /_gt_\n\t                    spotPlain2.backFaceCulling _eq_ true_sm_ // Always show the front and the back of an element\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt_\n\t                    var plane _eq_ BABYLON.MeshBuilder.CreatePlane(_qt_plane_qt__co_ {width_dd_ 261_co_ height_dd_ 153_co_ sideOrientation_dd_ 2}_co_ scene_co_ true_co_ BABYLON.MeshBuilder.DoubleSide)_sm__lt_br /_gt_\n\t                    plane.position _eq_ new BABYLON.Vector3(0_co_ 0_co_ 0.5)_sm__lt_br /_gt_\n\t                    plane.material _eq_ materialPlane_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    var plane2 _eq_ BABYLON.MeshBuilder.CreatePlane(_qt_plane2_qt__co_ {width_dd_ 261_co_ height_dd_ 153_co_ sideOrientation_dd_ 2}_co_ scene_co_ true_co_ BABYLON.MeshBuilder.DoubleSide)_sm__lt_br /_gt_\n\t                    plane2.material _eq_ spotPlain_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    var plane3 _eq_ BABYLON.MeshBuilder.CreatePlane(_qt_plane3_qt__co_ {width_dd_ 261_co_ height_dd_ 153_co_ sideOrientation_dd_ 1}_co_ scene_co_ true_co_ BABYLON.MeshBuilder.DoubleSide)_sm__lt_br /_gt_\n\t                    plane3.position _eq_ new BABYLON.Vector3(0_co_ 0_co_ 0.5)_sm__lt_br /_gt_\n\t                    plane3.material _eq_ materialPlane2_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    var plane4 _eq_ BABYLON.MeshBuilder.CreatePlane(_qt_plane4_qt__co_ {width_dd_ 261_co_ height_dd_ 153_co_ sideOrientation_dd_ 1}_co_ scene_co_ true_co_ BABYLON.MeshBuilder.DoubleSide)_sm__lt_br /_gt_\n\t                    plane4.material _eq_ spotPlain2_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t                    var alpha _eq_ Math.PI_sm__lt_br /_gt_\n\t                    scene.beforeRender _eq_ () _eq_&gt_sm_ {_lt_br /_gt_\n\t                      _lt_br /_gt_\n\t                    }\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt_\n\t                    return scene_sm_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-09-15T17:56:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\ta playground example would be better to help you_co_ please\n_lt_/p_gt_\n\n_lt_p_gt_\n\twell_co_ a double-sided plane has ... two sides_co_ but each holds the same texture. If you want a plane with two different sides_co_ you can (for now_co_ as long as the parameter faceUV doesn_t_t exist for the Plane mesh)_co_ you could either _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- stick two different planes on the same position_co_ one front-sided_co_ the other back-sided_co_ each one having its own material and texture ... so 2 meshes in final\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- build a solid particle system with 2 plane particles only_co_ set them at the same position but inverse orientation_co_ and then set each plane particle its own image from a given texture (1 mesh only)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- or_co_ at last_co_ build a double-sided plane and use the multi-material on it (1 mesh only)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"yevo","Date":"2016-09-15T18:09:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tPlease look at _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1Z89KY_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#1Z89KY_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou will notice i have some code commented the commented code is the one i want as the back side of what is showing now. Basically what the existing code for the showing images is doing i need the same affect on the back side but with different images. (thats the commented code i tried to do)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-09-15T18:49:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1Z89KY%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#1Z89KY#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHi yevo!  Look ok?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou will need to remove bounding boxes and remove gaps... but this should work... maybe.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tThe playground is great_co_ eh?  No need to make long code-pastes to forum.  Hope this helps.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAw heck_co_ I guess we could parent all 4 planes to a _lt_em_gt_gizmo_lt_/em_gt__co_ and _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1Z89KY%233_qt_ rel_eq__qt_external nofollow_qt__gt_do some spinning_lt_/a_gt__co_ hunh? \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"yevo","Date":"2016-09-15T19:19:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tya that actually looks good. The only issue i see is the lighting only seems to work on one side. I assume i need to add another spot light and have it be on the back side? \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYa sorry playground is great iv always had hard time finding images to work because of cors with playground but this time it worked\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-09-15T21:51:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tGood.  I will show you... a little secret... to find CORS-ok images.   Try _lt_a href_eq__qt_http_dd_//tinyurl.com/gsybop2_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//tinyurl.com/gsybop2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIgnore _lt_em_gt_-pixabay _lt_/em_gt_part. That is a filter for an annoying website.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust change the word _lt_em_gt_chicken_lt_/em_gt_.. to anything you like.  Notice MANY returns from _t_wikipedia_t_?  All wikipedia/wiki_lt_u_gt_m_lt_/u_gt_edia images are CORS-ok.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHope that is useful.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t------------\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1Z89KY%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#1Z89KY#4_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere_co_ I turned OFF spot_co_ and turned ON hemisphericLight._lt_em_gt_groundColor_lt_/em_gt_ (to full-power white).  The hemi_t_s ._lt_em_gt_groundColor_lt_/em_gt_ is good to illuminate the _lt_u_gt__lt_em_gt_sides_lt_/em_gt__lt_/u_gt_ (and bottoms) of a mesh.  Your planes are _lt_strong_gt_sides_lt_/strong_gt__co_ yes?  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  So_co_ you see_co_ both sides lit the same_co_ and quite well.  BUT... no _lt_em_gt_specular_lt_/em_gt_ shine (light reflection) on the planes_co_ now.  Let_t_s try another.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1Z89KY%235_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#1Z89KY#5_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis one_co_ I turn OFF hemi_co_ and activate spot_co_ and parent spot to camera.  Specular shine has returned.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPerhaps best way is turn ON hemi_co_ and ALSO parent single spot to camera.  *shrug*  Lights are fun to play-with.  Many options.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you will use shadows/shadowGenerator... then yes_co_ maybe 2 spotlights and 2 shadowGenerators (one shadowGenerator for _lt_u_gt_each_lt_/u_gt_ spot).  But maybe one shadowGenerator and one spot_co_ parented to camera_co_ too. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHemispheric Lights don_t_t cast shadows.  They are _lt_em_gt_often _lt_/em_gt_aimed upward_co_ at atmosphere/hemisphere_co_ and light disperses too widely to cast shadows (_lt_em_gt_I think)._lt_/em_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou are becoming a professional lighting tech (and a Babylon pro_co_ too).  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  Party on!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"yevo","Date":"2016-09-15T22:29:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOh nice little trick thank you i didnt know about that. Thanks alot for all your help. Yes im completely new to 3D and babylon but so far with everyones help its been awesome. \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-09-16T00:53:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  Cool.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHow about one more experiment? \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1Z89KY%237_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#1Z89KY#7_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(I changed some variable names and re-arranged some things)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere_co_ I reduce the gaps between planes_co_ and turn OFF _lt_u_gt_all_lt_/u_gt_ lights.  No specular shine_co_ (and no shadows cast-able) ...because no lights.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEmissiveColors are set on each material.  EmissiveColors/EmissiveTextures are for making materials self-illuminate.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNot many scenes... use _lt_strong_gt_all_lt_/strong_gt_ emissive colors/textures_co_ and no lights.  It is rare.  But sometimes_co_ it is handy for a material to self-illuminate. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tShadows and specular shine is not possible... without lights. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ emissiveColor/emissiveTexture do not _qt_cast light_qt_.  The illumination will _lt_u_gt_not_lt_/u_gt_ shine light onto another mesh positioned nearby. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere_t_s a big statement_dd_  The light-rays/light-beams from all Babylon lights... continue forever_co_ and cannot be blocked by any mesh... UNLESS that mesh is included in the renderList... of a shadowGenerator _lt_strong_gt_for that light_lt_/strong_gt_.  Generally speaking_co_ the light-rays from a Babylon light... are not easily blocked.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tOk bye again.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]