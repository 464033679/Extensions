[{"Owner":"freetoplay","Date":"2018-11-30T02:27:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIf I make meshes invisible in the scene_co_ does it have any impact on the performance of the scene? For example_co_ if I have a several slow performing meshes in the scene_co_ would making them invisible increase the performance of my scene? I want to make some meshes visible in only certain cases_co_ but I don_t_t know if making them invisible would do the trick or would I have to dispose to them_co_ then reimport them?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-11-30T03:57:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_236553_qt_ data-ipsquote-contentid_eq__qt_41600_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1543544828_qt_ data-ipsquote-userid_eq__qt_27602_qt_ data-ipsquote-username_eq__qt_freetoplay_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ freetoplay said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tFor example_co_ if I have a several slow performing meshes in the scene_co_ would making them invisible increase the performance of my scene?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tYes.  The _qt_active_qt_ meshes are the ones that slow down your scene.  Notice here where invisible (isVisible _eq__eq_ false and visibility _eq__eq_0) are not included_dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/babylon.scene.ts#L4259_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/babylon.scene.ts#L4259_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you dispose() a mesh instead of hiding it_co_ then I would think it would give you a very marginal speed increase_co_ but with the slow cost of re-importing. I would suggest to keep the meshes_co_ if memory usage is not a concern.  Best thing is to do a speed comparison_co_ as empirical evidence (ie_dd_ FPS/engine.getDeltaTime()) does not always show what would seem intuitive.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"freetoplay","Date":"2018-11-30T04:06:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_236558_qt_ data-ipsquote-contentid_eq__qt_41600_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1543550260_qt_ data-ipsquote-userid_eq__qt_25365_qt_ data-ipsquote-username_eq__qt_brianzinn_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t7 minutes ago_co_ brianzinn said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI would suggest to keep the meshes_co_ if memory usage is not a concern._lt_span_gt_﻿_lt_/span_gt__lt_span_gt_﻿_lt_/span_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tDoes this mean that I shouldn_t_t have a lot of hidden meshes? Is there a way to measure how much memory an invisible mesh is consuming?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-11-30T04:27:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_236561_qt_ data-ipsquote-contentid_eq__qt_41600_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1543550797_qt_ data-ipsquote-userid_eq__qt_27602_qt_ data-ipsquote-username_eq__qt_freetoplay_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t2 minutes ago_co_ freetoplay said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tIs there a way to measure how much memory an invisible mesh is consuming?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tIf you look in the inspector (ie_dd_ open PG click _qt_inspector_qt_ button)_co_ then you can see the number of vertices/faces (ie_dd_ mesh.getTotalVertices()) - along with materials_co_ these are in memory.  To answer your question_co_ though_co_ I am not aware of a way to measure memory usage of a single mesh - I just go by poly count as a basic measurement.  If you have materials with large textures would also have an impact.  Clones vs instances will also reduce memory footprint_co_ if you have multiple.  If you need to _qt_unhide_qt_ meshes quickly then disposing them is not a good option! _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_You may find this useful_co_ but they will remain in memory_dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/how_to/how_to_use_assetcontainer_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/how_to/how_to_use_assetcontainer_lt_/a_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-11-30T09:02:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou can use mesh.setEnabled(false_lt_span_gt_﻿_lt_/span_gt_) and  mesh.setEnabled(true_lt_span_gt_﻿_lt_/span_gt_)  instead of isVisible. The method setEnabled takes the mesh out of the rendering loop and so does not consume processing time. Whereas isVisible hides the mesh but keeps it in the rendering loop.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-12-01T03:49:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_236576_qt_ data-ipsquote-contentid_eq__qt_41600_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1543568526_qt_ data-ipsquote-userid_eq__qt_14282_qt_ data-ipsquote-username_eq__qt_JohnK_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t18 hours ago_co_ JohnK said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThe method setEnabled takes the mesh out of the rendering loop and so does not consume processing time.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThe link from my first response was to the exact line that I thought does that (!mesh.isEnabled() ... continue_sm_)_co_ from my understanding (_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/babylon.scene.ts#L4259_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/babylon.scene.ts#L4259_lt_/a_gt_)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ why does isVisible _eq__eq_ false keep it in the rendering loop_co_ while setEnabled(false) not?  I would think the difference would be hardly noticeable.  Is there somewhere else I should have referenced or a performance penalty I am not seeing? Thanks.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-12-01T08:37:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_236674_qt_ data-ipsquote-contentid_eq__qt_41600_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1543636181_qt_ data-ipsquote-userid_eq__qt_25365_qt_ data-ipsquote-username_eq__qt_brianzinn_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t4 hours ago_co_ brianzinn said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tSo_co_ why does isVisible _eq__eq_ false keep it in the rendering loop_co_ while setEnabled(false) not?  I would think the difference would be hardly noticeable.  Is there somewhere else I should have referenced or a performance penalty I am not seeing? Thanks.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tSorry don_t_t know the reason why. Just following _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt__t_s advice _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/search/?&amp_sm_q_eq_setenabled&amp_sm_type_eq_forums_topic&amp_sm_author_eq_Deltakosh&amp_sm_nodes_eq_28&amp_sm_search_and_or_eq_or&amp_sm_sortby_eq_relevancy_qt_ rel_eq__qt__qt__gt_http_dd_//www.html5gamedevs.com/search/?&amp_sm_amp_sm_q_eq_setenabled&amp_sm_amp_sm_type_eq_forums_topic&amp_sm_amp_sm_author_eq_Deltakosh&amp_sm_amp_sm_nodes_eq_28&amp_sm_amp_sm_search_and_or_eq_or&amp_sm_amp_sm_sortby_eq_relevancy_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"thrice","Date":"2018-12-01T22:27:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_236674_qt_ data-ipsquote-contentid_eq__qt_41600_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1543636181_qt_ data-ipsquote-userid_eq__qt_25365_qt_ data-ipsquote-username_eq__qt_brianzinn_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t18 hours ago_co_ brianzinn said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThe link from my first response was to the exact line that I thought does that (!mesh.isEnabled() ... continue_sm_)_co_ from my understanding (_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/babylon.scene.ts#L4259_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/babylon.scene.ts#L4259_lt_/a_gt_)\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tSo_co_ why does isVisible _eq__eq_ false keep it in the rendering_lt_span_gt_﻿_lt_/span_gt_ loop_co_ while setEnabled(false) not?  I would think the difference would be hardly noticeable.  Is there somewhere else I should have referenced or a performance penalty I am not seeing? Thanks.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThe reason (or at least one of) is because isVisible_eq_false can be used to group meshes together_co_ so that the children meshes are still active in the scene (like a transform node in newer babylon versions). If you setEnabled(false) instead the child meshes will be removed from the rendering loop also. I believe there are other uses I_t_ve encountered as well just can_t_t think of off the top.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2018-12-01T23:01:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe difference is that the hide object with isVisible can still be clickable or receive collisions.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThink of an invisible wall that gets the collisions. While with setEnabled_co_ the object is not visible and not rendered.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]