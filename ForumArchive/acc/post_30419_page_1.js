[{"Owner":"Raggar","Date":"2017-05-14T12:37:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe following functionality applies the current vertices_t_ positions to the same vertices(No change to the mesh).\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var arr _eq_ mesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm_\n                \nfor (var i _eq_ 0_sm_ i &lt_sm_mesh.getTotalVertices()_sm_ i _eq_ i++){\n            var fx _eq_ arr[i * 3 + 0]_sm_ var fy _eq_ arr[i * 3 + 1]_sm_ var fz _eq_ arr[i * 3 + 2]_sm_\n\t    \n            arr[i * 3 + 0] _eq_ fx_sm_\n            arr[i * 3 + 1] _eq_ fy_sm_\n            arr[i * 3 + 2] _eq_ fz_sm_\n        }\n                \nmesh.setVerticesData(BABYLON.VertexBuffer.PositionKind_co_ arr)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI_t_m unsure as to how to apply a random noise_co_ that still takes into account the vertices that are on the same position?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf I use something like fx/fy/fz + a random value_co_ the faces split up_co_ and creates holes in the mesh.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2017-05-14T14:39:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThere are two basic construction methods for a mesh\n_lt_/p_gt_\n\n_lt_ol_gt__lt_li_gt_\n\t\tCorners on a mesh share vertices and normals\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tCorners on a mesh do not share vertices and normals. ( A flat shaded mesh)\n\t_lt_/li_gt_\n_lt_/ol_gt__lt_p_gt_\n\t(read more _lt_a href_eq__qt_http_dd_//babylonjsguide.github.io/advanced/Normals#table-of-indices-positions-and-normals-for-flat-shaded-box_qt_ rel_eq__qt_external nofollow_qt__gt_here_lt_/a_gt_ )\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn BJS a sphere is created using method 1 and a box using method 2.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tShould you apply random noise to a mesh constructed with method 2 then the faces will split apart.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPGs\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#VE6GP%235_qt_ rel_eq__qt_external nofollow_qt__gt_Randomised Sphere_lt_/a_gt_ (but still split along seam)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#VE6GP%239_qt_ rel_eq__qt_external nofollow_qt__gt_Flat Shaded Randomised Sphere_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#VE6GP%236_qt_ rel_eq__qt_external nofollow_qt__gt_Randomised Box_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#VE6GP%238_qt_ rel_eq__qt_external nofollow_qt__gt__qt_Smoothed Randomised Box_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tmore on smoothing function _lt_a href_eq__qt_http_dd_//babylonjsguide.github.io/snippets/Minimise_Vertices_qt_ rel_eq__qt_external nofollow_qt__gt_here_lt_/a_gt_ but not the added TRUE parameter for applyToMesh since we need to maintain update-ability of the mesh\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Raggar","Date":"2017-05-14T16:42:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHmm.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI might be missing something here.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLook at my imported model_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#JZS611%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#JZS611#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe model has smoothing groups (From 3Ds max). Flat-shaded or smooth doesn_t_t seem to make a difference.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMight this be due to the way the model is exported or created in 3Ds max?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2017-05-14T17:40:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAdded in minimising function _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#JZS611%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#JZS611#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDo not know anything about 3D max.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Raggar","Date":"2017-05-31T15:32:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHmm. For now_co_ I_t_ve been using morph targets_co_ but I_t_d like some more randomization without having multiple models.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ll try another model_co_ as the one in this example was a quick one_co_ where I applied the push modifier due to weird normal behavier. This was a bad fix_co_ but the quickest one.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]