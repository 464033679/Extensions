[{"Owner":"David78","Date":"2014-12-16T10:49:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_These  are two simple questions_co_ regarding parent-child relationships. It_t_s not that I don_t_t get this_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__qt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(51_co_51_co_51)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ _t_Segoe UI_t__co_ Arial_co_ freesans_co_ sans-serif_sm_font-size_dd_16px_sm__qt__gt_Any postion_co_ rotation and scaling transformations made to the parent... prior to assigning it to children... will also be applied to the children when the parent is assigned._lt_/span_gt__lt_/p_gt__lt_p_gt__qt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What_t_s happening rather is that when I load two meshes and make the first one the parent of the second or vice versa_co_ there is an initial displacement in the child_t_s position. On loading the meshes_co_ this is the only line of code involving them_co_ the rest sets up the camera_co_ lights_co_ etc_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_newMeshes[1].parent _eq_ newMeshes[0]_sm__lt_/pre_gt__lt_p_gt_Which results in newMeshes[1] being displaced. When newMeshes[0] is moved after this it works fine_co_ whatever transformations are done on it are also done to newMeshes[1]_co_ the issue is this initial displacement. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The second question is whether parent-child relationships can be defined between specific parts of a mesh and another mesh. For example_co_ say a human-like mesh is loaded that has skeletal animation where one hand moves up and down_co_ and I want a sphere or another mesh to also move based on the motion of this one hand and not of the entire body. (Without using sub-meshes) how can this be done? Can a mesh be attached to the motion of skeletal animation?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Still a noobie learning the ropes..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks in advance._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Xeonzinc","Date":"2014-12-16T11:33:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_On question one_dd_ it sounds like your initial mesh parent ( newMeshes[0]) is already slightly displaced when loaded (from whichever program you use)_co_ which is then getting applied to the child. My approach for dealing with this is to create a new empty mesh (which will automatically be centered at 0) then attach all the other meshes to that as children. Then assuming you never move newMeshes[0]_co_ you can treat the new empty mesh as if it is newMeshes[0]....if that makes sense._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_On the second point_co_ that is an interesting question (which i will need to address for my own project actually..). I don_t_t think there is anything built into Babylon_co_ but there is no reason you couldn_t_t select the deformation of a specific vertex (say one from the characters hand) and apply that to the sphere with a bit of coding._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2014-12-16T13:20:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_If you are using Blender_co_ I had an issue when scaling and/or position was not all the same in Blender while in Object Mode . It seems as if all scaling and positioning needs to be done when you are in edit mode of the object._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For example when in object mode_co_ both objects should have a scaling of x_dd_1_co_ y_dd_1_co_ z_dd_1 and a position of x_dd_0_co_ y_dd_0_co_ z_dd_0._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"David78","Date":"2014-12-16T15:13:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thank you both for your answers. It makes sense that the mesh is slightly displaced from loading it from blender. I never thought that that would affect it however_co_ it is rather meticulous!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_On the second question_co_ yes I thought of using vertex deformation but before doing so was wondering if Babylon.js had an-in built way of handling this specific case._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]