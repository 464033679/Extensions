[{"Owner":"MackeyK24","Date":"2016-12-11T20:39:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFrom what i see in the debug layer_co_ there is ALWAYS a bounding box around meshes. I assume this is the bounding box used for camera collisions against the camera.ellipsoid. My question is_co_ If this is the case then how come ALL meshes wouldn_t_t automatically have a _t_SIMPLE_t_ collision box WHY would you need to create a simplified mesh for collisions if every mesh automatically get a very simple bounding box.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow i use a separate simplified mesh for terrains_co_ so i understand the collision system being impacted by the detail of the terrain mesh. I even have support (in my BabylonJS Toolkit For Unity) the Mesh Collider component so you can more easily attach a simplified mesh directly on the game object (just as you would in unity) and it works great... I simply take the _t_Simplied Mesh_t_ and enable collisions on that mesh_co_ set its alpha to 75% and isvisible to false. I then set it as the child of the original mesh and reset its transform (because it parented in original mesh). Looks good_co_ works great for both terrains and everyday meshes... I just don_t_t quite understand why i would need these separate simplified meshes IF simple bounding boxes for EVERY mesh AUTOMATICALLY get created and used for collisions ???\n_lt_/p_gt_\n\n_lt_p_gt_\n\tP.S. - Even though i wrote (what i think) is an awesome Managed Scene Component API and a KICK-ASS Game Editor Toolkit (almost ready)... I am still new to some of the 3D game concepts. That is the main reason i built the toolkit... was so i can use _t_Unity_t_ as my game concept learning tool... So if i want to make some kind of racing game... Ill go find some in-depth training on making a racing game in unity (follow all the tutorials) but use my toolkit to actually implement those concepts in BabylonJS.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo again... Sorry for the real newbie questions sometimes _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MackeyK24","Date":"2016-12-11T22:50:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/20193-sebavan/?do_eq_hovercard_qt_ data-mentionid_eq__qt_20193_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/20193-sebavan/_qt_ rel_eq__qt__qt__gt_@Sebavan_lt_/a_gt_ or _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ How bout this one... Do we have to have mesh.checkCollisions _eq_ true for the intersectMesh function to work. Or is the checkCollision _eq_ true ONLY for camera collisions (what about physics collisions ... is that also dependent on mesh.checkCollisions _eq_ true) ???\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-12-12T09:08:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi people_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tno_co_ it isn_t_t.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBabylon has an internal collision system with a simple collide algorithm. No physics is taken into account. This is a wonderful solution for walking on top of a surface or making sure you are not going through walls. This is why we have mesh.checkCollisions . \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe physics is on when you add an impostor to a mesh and enable the physics engine (actually in a reversed order _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ . Enable first!). If you dispose the physics impostor_co_ the physics collisions won_t_t work.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe two systems won_t_t really collide_co_ unless you try really hard. Meshes won_t_t constantly check for collisions between them (only if you use mesh.moveWithCollision) and camera_t_s can_t_t have a physics impostor attached directly to them.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow_co_ about the initial question (this)_dd_\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_154767_qt_ data-ipsquote-contentid_eq__qt_26989_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1481488764_qt_ data-ipsquote-userid_eq__qt_24012_qt_ data-ipsquote-username_eq__qt_MackeyK24_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t22 hours ago_co_ MackeyK24 said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI assume this is the bounding box used for camera collisions against the camera.ellipsoid. My question is_co_ If this is the case then how come ALL meshes wouldn_t_t automatically have a _t_SIMPLE_t_ collision box WHY would you need to create a simplified mesh for collisions if every mesh automatically get a very simple bounding box.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThe bounding box you see in the (new_co_ amazing_co_ wonderful_co_ godly_co_ 1337) inspector is just a standard bounding box. It is being used for many many things_co_ but_co_ surprisingly it_t_s not being used for collisions. At least not in the sense you are describing. The ellipsoid is NOT the bounding box. Is is defined by you (and can be the same_co_ if this is what you wish).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen calculating collisions between meshes Babylon will use the bounding boxes to check if the two meshes are anywhere near each other_co_ but it will continue checking the meshes themselves. The physics engine will create a box impostor which is probably the same size as the bounding box_co_ if you choose the BoxImpostor. But it won_t_t constantly use the bounding boxes you see. If you rescale the mesh after creating the impostor_co_ the bounding box will change_co_ but the impostor will stay the same.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI hope it helps!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]