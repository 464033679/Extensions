[{"Owner":"satguru","Date":"2016-01-17T03:04:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI have an ArcRotateCamera_co_ a box and a sphere.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs I rotate the camera I want the sphere to be at always a fixed distance from the camera and between the camera and the box _co_ (that is on a line joining the camera and the box).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn other words it should look like the sphere is stuck to the box.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEvery render cycle I calculate the position of the sphere based on the camera and box position and set the position of the sphere to that.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut for some reason there is  a lag between the movement of the camera and  the sphere.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is due to the camera inertia. If I set the inertia to zero the lag decreases considerably but there is still some.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is an example\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1Z1Q0D%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1Z1Q0D#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny idea how i can prevent the lag?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRegards\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSatguru\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2016-01-17T19:53:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIs this example is ok for you ? I didn_t_t fix your code but took a different approach for the wanted behaviour _dd_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1Z1Q0D%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1Z1Q0D#2_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"satguru","Date":"2016-01-17T21:50:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t@Temechon_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for the solution. It works for me except for the fact that the scale of the object_co_ sphere in this case_co_ changes with the distance from the camera.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo I did  end up using this approach but in addition I also change the scale of the object with the distance - the farther away the larger the scale - so the size always appear the same.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs an FYI_co_ I am building a small editor and the sphere is actually a 3 axis object which can be used to position  things.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am happy with this work around but I am still curious about the lag.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLooks like the camera position is not updated during the render cycle. The position which my code gets during the render cycle seems to be an older value - maybe the camera keeps moving while my render loop code is executing. Does the camera moves in a different thread?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRegards\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSatguru\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]