[{"Owner":"Dad72","Date":"2014-04-18T18:36:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt_I asked myself the following question about cannon.js. There has been no update for 1 year. view babylon.js depends cannon.js (for the physics)_co_ Babylon.js will not be able to evolve its physics engine?_lt_/div_gt__lt_br_gt__lt_div_gt_I think the possibility that babylon.js can have on the physical complex meshes (eg character)_lt_/div_gt__lt_br_gt__lt_div_gt_Cannon.js not evolving_co_ that_t_s what it_t_ll prevented babylon.js to evolving its physics engine? Maybe I_t_m wrong. I do not know._lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_This is just to know what it was about the future of physics engine babylon._lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_Thanks_lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2014-04-21T15:02:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I would have to agree with dad72 on this. There are features missing from cannon like the ability to handle collisions with a _qt_terrain_qt_ object that aren_t_t a standard object. Just leads me to ask the question of what would be the solution for situations like this where the source is dead and not expansive enough for our needs? Complex terrain as an example is necessary in most modern games._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-21T18:23:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Agree with both of you guys. Why not supporting another physics engine then?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Do you know other javascript physics engine we can support?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Artem","Date":"2014-04-21T21:55:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_34991_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_5771_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1398104592_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Agree with both of you guys. Why not supporting another physics engine then?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Do you know other javascript physics engine we can support?_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_How about _lt_a href_eq__qt_https_dd_//github.com/lo-th/Oimo.js_qt_ rel_eq__qt_external nofollow_qt__gt_Oimo.js_lt_/a_gt_? _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Also _lt_a href_eq__qt_https_dd_//github.com/chandlerprall/Physijs_qt_ rel_eq__qt_external nofollow_qt__gt_Physijs_lt_/a_gt_ has heightmaps stuff._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Xanmia","Date":"2014-04-21T23:33:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Omio.js looks promising.  _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Just a thought_co_ a little more work but what if we could switch between two?_lt_/p_gt__lt_p_gt_Probably more work to support_co_ but would be nice to switch between a lighter or heavier weight physics engine._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Phaser does it but not invisible to the user with completely different calls...._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-04-21T23:37:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/lo-th/Oimo.js_qt_ rel_eq__qt_external nofollow_qt__gt_Oimo.js_lt_/a_gt_ seems perfect for Babylon. the demos are very fast. The code seems easy.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-04-22T07:58:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_What about working on cannon.js? Babylon.js could be a second life for it. Just an idea_co_ maybe another engine would be better but maybe we would get stuff done quicker by participating to cannon.js development _lt_a href_eq__qt_https_dd_//github.com/schteppe/cannon.js_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/schteppe/cannon.js_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amerkoleci","Date":"2014-04-22T08:16:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Why not using Ammo.js which is emscripten port of bullet? _lt_/p_gt__lt_p_gt_Is very performant and can be updated with latest C++ bullet version._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-04-22T10:32:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_35039_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_5771_qt_ data-ipsquote-username_eq__qt_gwenael_qt_ data-cite_eq__qt_gwenael_qt_ data-ipsquote-timestamp_eq__qt_1398153499_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_What about working on cannon.js? Babylon.js could be a second life for it. Just an idea_co_ maybe another engine would be better but maybe we would get stuff done quicker by participating to cannon.js development _lt_a href_eq__qt_https_dd_//github.com/schteppe/cannon.js_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/schteppe/cannon.js_lt_/a_gt__lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_To participate in the development of cannon.js must already know physical. this is a complex area. Much remains to be accomplished in a working cannon.js. Using another motor as Oimo.js this engine covering most of the needs. No need to spend time on additionally cannon.js_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-23T00:02:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@Xanmia_dd_ If we add a second physics engine_co_ I will allow developer to freely select which one he wants to use_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2014-04-23T12:03:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ammo would be nice as bullet is always being worked on. I think we should probably speed test all the candidates and then feature compare to see what would be best. I would like to be able to use gravity physics on 3rd person camera on more than just height mapped terrain_co_ and standard shaped objects. It would be nice if there was a package that could handle this as my terrains are compiled and not height maps._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_A little off subject_co_ but while we_t_re on the topic of emscription compiled C++ programs..._lt_/p_gt__lt_p_gt_I_t_ve had experience with Recast for path finding etc. it_t_s a great tool. It will even spec out hole sizes to path a monster based on his height._lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/memononen/recastnavigation_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/memononen/recastnavigation_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I had planned on eventually emscripting recast for my client project since it_t_s worked so well for our server._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-23T16:23:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The first step will be to allow physics plugins into babylon.js_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I will do that right after finishing the port to Typescript_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Samuel Girardin","Date":"2014-04-23T21:26:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Typescript port sounds awesome ! _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For the physics engine _dd_ here is some demos of Loth (french guy) using is oimo.js port _dd_ _lt_a href_eq__qt_http_dd_//lo-th.github.io/Ammo.lab/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//lo-th.github.io/Ammo.lab/_lt_/a_gt_ it uses three.js. Oimo is fast._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"lo.th","Date":"2014-04-24T03:11:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt_Yo_co_ yes i_t_m in deep test of ammo physics for the moment is slower than oimo for many objects simulation._lt_/div_gt__lt_br_gt__lt_div_gt_for shapes _dd_ 500 for oimo / 200 for ammo at 60 fps _lt_/div_gt__lt_br_gt__lt_div_gt_for contraint _dd_ 60 ragdoll in oimo / 20 max in ammo._lt_/div_gt__lt_br_gt__lt_div_gt_ammo takes more cpu resource. _lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_oimo.js is far lightweight and simple_lt_/div_gt__lt_br_gt__lt_div_gt_146kb for oimo (30 kb in png)_lt_/div_gt__lt_br_gt__lt_div_gt_3617kb for ammo (554 kb in png)_lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_but ammo have powerfull vehicle systeme_co_ terrain_co_ more shape_co_ TriangleMeshShape..._lt_/div_gt__lt_br_gt__lt_div_gt_maybe next release can be faster (yes 20% faster _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_is possible to add this to oimo.js but is huge work._lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_i developpe the same method for oimo.js and ammo.lab_lt_/div_gt__lt_br_gt__lt_div_gt_both use same unit (1 unit _eq_ 1 meter)._lt_/div_gt__lt_br_gt__lt_div_gt_demo editor will be the same in next version._lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_i have to make doc for oimo.js_lt_/div_gt__lt_br_gt__lt_div_gt_i think is easy to use both on any 3d engine._lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt__lt_a href_eq__qt_https_dd_//github.com/lo-th/Oimo.js_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/lo-th/Oimo.js_lt_/a_gt__lt_/div_gt__lt_br_gt__lt_div_gt__lt_a href_eq__qt_https_dd_//github.com/lo-th/Ammo.lab_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/lo-th/Ammo.lab_lt_/a_gt__lt_/div_gt__lt_br_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Artem","Date":"2014-04-24T10:11:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It looks like everyone really liked Oimo.js_co_ found it a while ago _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_35376_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_5771_qt_ data-ipsquote-username_eq__qt_Samuel Girardin_qt_ data-cite_eq__qt_Samuel Girardin_qt_ data-ipsquote-timestamp_eq__qt_1398288381_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Typescript port sounds awesome ! _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For the physics engine _dd_ here is some demos of Loth (french guy) using is oimo.js port _dd_ _lt_a href_eq__qt_http_dd_//lo-th.github.io/Ammo.lab/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//lo-th.github.io/Ammo.lab/_lt_/a_gt_ it uses three.js. Oimo is fast._lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Demo 4 and 8 is something that everyone would love to see while using Babylon.js_co_ that_t_s for sure _sm_D_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-04-24T10:39:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt_Demo 4 and 8 is something that everyone would love to see while using Babylon.js_co_ that_t_s for sure _sm_D_lt_p_gt_ _lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Yes_co_ the demo 4 and 8 its really cool. this is exactly what I expected of physics._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-24T22:04:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Here is the plan_dd_ Right after finishing typescript port_co_ I will add a pulgin mechanism for physics engine and write the first plugin for cannon.js. If someone wants to do the same for Oimo this will be really helpful _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2014-04-27T21:19:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_with what you_t_re planning_co_ could we plug in multiple and call the parts of each we wanted? Then you could use Oimo for almost everything_co_ and ammo for the few random things missing as needed._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-28T21:14:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m not sure because this will implies to get all physics engine running together which will kill performances_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2014-04-29T12:03:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I can understand that_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-29T17:05:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Plugin system is ready for beta test_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/wiki/Adding-your-own-physics-engine-plugin-to-Babylon.js_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/wiki/Adding-your-own-physics-engine-plugin-to-Babylon.js_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Feel free to try to port oimo.js for instance_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Xanmia","Date":"2014-04-29T17:47:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Really exciting Deltakosh! Going to try it out tonight!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-04-30T10:15:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Why keep Cannon.js by default being given that he died?_lt_br_gt_I think the creation of the plugin (here) is complicated and makes the use or change in physical babylon complicated. I understand anything_co_ I do not feel able to do this plugin to Oimo.js or Ammo.js (which is awesome too)_lt_br_gt_ _lt_br_gt_In the roadmap it was noted _dd__lt_br_gt_Add support for _lt_a href_eq__qt_https_dd_//github.com/lo-th/Oimo.js_qt_ rel_eq__qt_external nofollow_qt__gt_Oimo.js_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I thought that Oimo.js or _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_Ammo.js_lt_/span_gt_ is more complete_co_ would replace Cannon.js who died and not complete. I think now the use of physics in babylon is limited to a handful of users expert_co_ the others will not understand anything_co_ I too as a user and not a developer of complex engine._lt_/p_gt__lt_p_gt_I preferred to use before_co_ but with a replacement to Oimo.js or Ammo.js. Wholesale now we must make a physical complex plugin. That_t_ll do it? 2_co_ 3 person? And the others users who are not experts?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-30T18:15:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I keep it for now because this is the only one we have _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ But I really count on our community to create new plugins quickly (Oimo and Ammo for instance)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_BTW for regular users you have nothing to do_co_ babylon.js will continue to work as before. Once a new plugin will be ready I will add it to babylon.js as a default plugin too._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Perhaps a side note here is required to explain how plugins work_dd_ As long as you reference cannon.js_co_ then the plugin by default will be cannon. If we have a plugin for ammo then as  long as you reference ammo.js it will be used by default and so on_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So absolutely free and transparent for users_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-04-30T18:34:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Okay_co_ thank you for explanations DK. And thank you to the developer(s) who will do a plugin for Oimo.js and Ammo.js_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]