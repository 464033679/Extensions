[{"Owner":"Herbert","Date":"2017-09-27T07:52:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI have a box and a ground with physicsImpostor_co_ how can I keep the rotation of the ground up to date with the rotation of the box. here is the playground_lt_br /_gt__lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#T310H5_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#T310H5_lt_/a_gt__lt_br /_gt_\n\tIf I use _qt_ground.rotation _eq_ box.rotation_qt__co_ then the ground rotate but the box do not._lt_br /_gt_\n\tIf I use _qt_ground.rotation.x _eq_ box.rotation.x_qt__co_ then the ground will keep rotating.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-09-27T08:00:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYou can_t_t rotate a mesh using rotation when it has a physicsImpostor.  You can mesh.physicsImpostor.sleep()_co_ then rotate_co_ and then mesh.physicsImpostor.wakeUp()_co_ but inbetween those sleep/awake it does not maintain physics properties.  To maintain physics you could apply forces/impulses. Read the post from Mackey titled _qt_Physics Movement_qt_ - lots of good info in there.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Herbert","Date":"2017-09-27T09:11:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_sleep and wakeUp does not work as I tested _lt_/span_gt__lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_scene.registerBeforeRender(() _eq_&gt_sm_ {\n    ground.physicsImpostor.sleep()_sm_\n    ground.rotation.x _eq_ box.rotation.x_sm_\n    ground.physicsImpostor.wakeUp()_sm_\n})_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tWhat I want is to keep the ground having the same rotation as the box_co_ I think it will be complicated to implement it by applying _lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_forces/impulses._lt_/span_gt__lt_br /_gt_\n\tThanks for your recommended post_co_ I will read it tomorrow~\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Raggar","Date":"2017-09-27T09:26:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIf you would be fine using quaternions instead_co_ this should work_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#T310H5%233_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#T310H5#3_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-09-27T09:43:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYou could also use the mesh.rotate(...) function_co_ if you are not a big quaternion fan.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Herbert","Date":"2017-09-28T03:09:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThanks_lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__co_using _lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_quaternions works_co_ but mesh.rotate(...) function seems having the same issue as changing rotation directly._lt_/span_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-09-28T07:07:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThat seems odd. The rotate function is internally using quaternions to rotate the mesh. Can you reproduce this on the playground?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Herbert","Date":"2017-09-28T08:06:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\toh_co_ I found what I was missing when I tried to _lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_reproduce it_co_ so I have to set the rotationQuaternion for my box first._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt__lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#T310H5%234_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#T310H5#4_lt_/a_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_box.rotationQuaternion _eq_ new BABYLON.Quaternion()_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tand it turns out after this both calling rotate function or setting rotation.x directly work_co_ while setting the whole rotation still not work.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_scene.registerBeforeRender(() _eq_&gt_sm_ {\n    box.rotation.x -_eq_ -0.001_sm_\n    console.log(box.rotation.x)_sm_\n\n    // not work\n    // ground.rotation _eq_ box.rotation_sm_\n\n    // works\n    ground.rotation.x _eq_ box.rotation.x_sm_\n\n    // works\n    // ground.rotate(new BABYLON.Vector3(1_co_ 0_co_ 0)_co_ box.rotation.x)_sm_\n})_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI think there might be a setter function when I set rotation.x directly_co_ which will actually check _lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_rotationQuaternion?_lt_/span_gt__lt_br /_gt_\n\tI log the value of  box.rotation.x right after I change it_co_ but it shows 0.001 constantly_co_ does that mean once _lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_rotationQuaternion exists the value of _lt_/span_gt_rotation doesn_t_t mean much anymore?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-09-28T08:22:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOnce a rotationQuaternion exists_co_ the rotation variable is being ignored and should not be used.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe rotate function will set a rotationQuaternion for you_co_ if it doesn_t_t already exist (of couse_co_ taking your current rotation in account). Setting a physicsImpostor to your mesh will do the same. afterwards_co_ the rotation should not be used.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHint regarding .rotate_co_ the first variable is an Axis. If you need either X_co_ Y or Z_co_ you can use the static BABYLON.Axis.X (or Y or Z _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ ) instead of creating a new vector. Will save you a few microseconds per frame.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Herbert","Date":"2017-09-28T08:41:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAs you said_co_ I shouldn_t_t use _lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_rotation once a rotationQuaternion exists_co_ then I am confused how my playground still work(I actually think it shouldn_t_t be working since box.rotation.x is constantly 0.001)._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tand if _lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_rotation is not referable_co_ what can I be used to pass to the second variable of rotate function?_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-09-28T09:27:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAbout the 2nd variable to the rotate function_co_ it is an angle_co_ expressed in radians. Pretty straight forward.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRegarding the rotation update when quaternion already exists - a few months ago I added a code to the AbstractMesh_t_s computeWorldMatrix that updates the mesh_t_s rotationQuaternion_co_ if rotation was used. This is to keep people from changing habits_co_ but is relatively discouraged_co_ mainly due to the conversion between euler units and quaternion. that_t_s the code_co_ if you are interested - _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.abstractMesh.ts#L1258_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.abstractMesh.ts#L1258_lt_/a_gt_ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Herbert","Date":"2017-09-28T10:04:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for being patient and your very detailed answers_co_ it helps a lot_lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_br /_gt_\n\tI know the _lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_2nd variable_t_s meaning~ just curious is there any other attribute of the box that I can just take and pass to the second variable to keep their rotation the same(since taking rotation.x is relatively discouraged )._lt_br /_gt_\n\tIf no such attribute exists_co_ I will do it another way or just set the rotationQuaternion instead._lt_/span_gt__lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-09-28T10:10:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe rotate function adds rotation_co_ not setting it. So_co_ doing that_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_ground.rotate(BABYLON.Axis.X_co_ -0.001)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tIs the same as\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_ground.rotation.x -_eq_ 0.001_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Herbert","Date":"2017-09-28T10:42:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt make sense to me now\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_qt_ground.rotaion.x -_eq_ 0.001_qt_ works fine\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_qt_ground.rotaion.x _eq_ -0.001_qt_ has the similar effect although it make no sense to me_co_ but as you said it shouldn_t_t be used this way after all\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#T310H5%235_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#T310H5#5_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-09-28T11:24:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe reason it works (in case anyone is interested) is those few lines of code in AbstractMesh i mentioned earlier.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEach time the computeWorldMatrix is called_co_ the rotation variable is being inspected. if it is not only 0_co_0_co_0_co_ it is being added to the rotationQuaternion and being reset. So_co_ you either add -0.001 and then reset to 0_co_ or set it to be -0.001 and reset it back to 0. As simple as that _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tWhy it is not accumulated_co_ you ask? it is practically impossible to go back to rotation from rotationQuaternion. So in order to prevent users from thinking rotation _eq__eq__eq_ rotationQuaternion_co_ I reset the variable.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Herbert","Date":"2017-09-29T01:43:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tTotally get it_co_ cheers_lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]