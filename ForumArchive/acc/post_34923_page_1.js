[{"Owner":"gopher","Date":"2018-01-08T04:21:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi awesome BJS people_co_ thanks for this awesome work! I had a quick question about applyAngularImpulse(). It seems to be missing! _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tI can produce similar results by two applyImpulse() at an offset in opposite direction or by setAngularVelocity() or by using a joint and setMotor() but it would be great to have applyAngularImpulse().\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2018-01-08T10:42:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThat_t_s mainly (or better yet solely) because both physics engines we are working with don_t_t really support it _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tsetAngularVelocity is your friend in this case. I know the physically speaking_co_ it is not the same. But this can be easily emulated with the setter. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tA better choice would be_co_ as you wrote_co_ using motors_co_ but this is a bit more complex and sometimes a bit too much just to rotate an object.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-01-08T10:46:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi gopher_co_ welcome to the forum!  Thanks for your kind words/thoughts!  Thx for reply_co_ Raanan!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t    Yes_co_ I_t_ve used the double-impulser method_co_ AND the setAngularVelocity... both work fine.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tGopher_co_ if YOU were to code-up an applyAngularImpulse() function_co_ how would YOU accomplish it_co_ programmatically?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat would you do... inside that function?   Perhaps use setAngularVelocity?  Or maybe use a dual linear impulser (a twister)?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think you_t_ll find... that you would simply be _qt_wrapping_qt_ setAngularVelocity.  It can be done... of course_co_ but I_t_m not sure how much it would be used.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt is pretty simple to make your own_co_ inside your project.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOn a related topic_co_ I am working on a physics scene myself_co_ and I decided I needed some _qt_tools_qt_ (widgets).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#1ND6TH%2357_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#1ND6TH#57_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe little _lt_strong_gt_PULS_lt_/strong_gt_ing _lt_strong_gt_AR_lt_/strong_gt_rows are called Pulsars.  The little rotation widgets (with 6 click-zones on each) are called Quasars.  (_lt_strong_gt_QUA_lt_/strong_gt_ternion _lt_strong_gt_S_lt_/strong_gt_ymmetrical _lt_strong_gt_A_lt_/strong_gt_xial _lt_strong_gt_R_lt_/strong_gt_otaters).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlthough nobody has shown any excitement over them_co_ nor is there any push to create a PhysicsTools library_co_ I like them.  They are handy_co_ imho.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPerhaps you would like to use them in your projects.  Freely use them_co_ improve them_co_ do whatever you like with them.  All required code is inside that PG.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPS_dd_  Using a motor_co_ it would need to be turned ON_co_ and then instantly turned OFF... to sim a rotational impulse.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gopher","Date":"2018-01-11T00:27:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/?do_eq_hovercard_qt_ data-mentionid_eq__qt_10310_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/_qt_ rel_eq__qt__qt__gt_@RaananW_lt_/a_gt_ Thanks for explaining that. Interesting that the physics libs doesn_t_t support that (API feels a bit incomplete to me without it). Maybe it is less used by game developers or maybe angular velocity is easier to work with for common scenarios._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_  Cool demo! I think that it can be implemented if needed using either methods. A pair of impulses or by adding to the angular velocity._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_In the first case_co_ we can calculate change in angular velocity assuming we know the change in angular momentum we are after (based on the desired angular impulse) and the moment of inertia of the body (I assume this is available already from the underlying physics objects or we can calculate this for simple shapes easily). change_in__lt_/span_gt__lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#222222_sm_font-size_dd_14px_sm__qt__gt_angular_momentum _eq_ moment_of_inertia * change_in_angular_velocity._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_In the second case_co_ we can apply two co-planar linear impulses perpendicular to and at an arbitrary non-zero offset to the axis of angular impulse in opposite direction. The magnitudes of each of the impulses can be calculated as 0.5 * angular_impulse / offset._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_In my case_co_ I went with the second option as I can calculate my axis and points of application easily. Having an _lt_/span_gt__lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_applyAngularImpulse() would be very handy however for general cases._lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-01-11T06:27:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_201038_qt_ data-ipsquote-contentid_eq__qt_34923_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1515630441_qt_ data-ipsquote-userid_eq__qt_29926_qt_ data-ipsquote-username_eq__qt_gopher_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t15 hours ago_co_ gopher said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tat an arbitrary non-zero offset\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tYep.  And the amount of offset... is the _qt_twist amplifier_qt_  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#PBVEM%23160_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#PBVEM#160_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHELD control-arrows apply dual-impulse _t_twister_t_ impulsing.  (It uses held-keypress natural repeating... to accumulate the micro-pulsings)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tControl-pageUP and and pageDown WERE once operational too_co_ but are now broken for some reason.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tControl-numericKeypad _lt_strong_gt_+/- keys_lt_/strong_gt_ still works for that broken axis.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can see the arbitrary offset in line 17.  Lines 164 - 510 are the 6 _t_twister_t_ rotation funcs_co_ documented at kindergarten levels (to remind me how they work_co_ 4 years after initial coding).  I wrote that impulse controller when I was &lt_sm_ 1 year old_co_ BabylonJS-wise.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  I would use an accumulating setAngularVelocity system... if I re-coded it these days.  I didn_t_t know about setAngularVelocity back then... too noob.  heh.  All 6 twister funcs... could be done in a single func_co_ of course.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_u_gt_Shifted_lt_/u_gt_ arrow keys and shifted pageUP/pageDown are for translating the craft (translating its master parent/handle).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBJS-wide_co_ all physics rotation is done with Quaternions and not Vector3 Euler.  (mesh.rotationQuaternion instead of mesh.rotation).  Notice the cool func at lines 157-163.  It is called in EVERY rotation and translation function.  If the craft is rotated at a strange angle_co_ or inverted around some/multiple axes_co_ THAT func lets translations STILL happen in the correct localSpace directions. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat magic func is also called for setting the _t_arbitrary offset_t_ contact-points... for the rotations.  It is difficult to know which directions to set the offsets on the craft_t_s handle_co_ because it could be upside down or oddly rotated.  That function is used in the twisters... to make sure the arbitrary offsets are aligned along the correct axes on the handle/flyer.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tA bit difficult to explain_co_ but you seem to have a reasonably good grasp on impulse twisting_co_ and translating-per-current-_t_quat-rot_t_.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tThe first 650 lines of code... are all controller.  Jquery is used_co_ and 3 different areas of the keyboard are allowed to control the craft (arrow keys_co_ numpad keys_co_ and around _qt_L_qt_ key).  Gruesome.  Serious over-kill.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI bet a guy like you could code a much better impulsing controller.  My controller was also ready for 24 thruster ports (3 on each corner of the craft)_co_ and their particle systems.  It actually all started... with the flying bedframe...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/thruster/t26/flyer26.htm_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//urbanproductions.com/wingy/babylon/thruster/t26/flyer26.htm_lt_/a_gt_  [_lt_a href_eq__qt_http_dd_//webpages.charter.net/wingthing/webGL/flyer28.zip_qt_ rel_eq__qt_external nofollow_qt__gt_zip_co_ slightly fresher_lt_/a_gt_]\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(Yay_co_ now we have some buttons to click/hold.  All previously-mentioned _t_hot keys_t_ are also active.) \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can see the 24 thruster ports and their particle systems_co_ there.  There_t_s 4 particle systems available on each port_co_ one for fire_co_ one for smoke_co_ one for soot_co_ and one for ice particles.... for a grand total of 96 particle systems.  WOW!  Overkill extraordinaire!  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\thehe.  The grand intent was to allow users to parent ANY model to the _t_flyerframe_t_... and instantly make that model into a flying machine.  I haven_t_t ever finished_co_ and there is little interest from others.  Someday_co_ perhaps it becomes part of Babylon.PhysicsTools or something.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tAt this point_co_ now that you have seen the thruster ports on the ends of _qt_arms_qt_... you might be thinking IK (inverse kinematics).   It would be nice if the impulsing was ACTUALLY happening at the positions of the thruster ports_co_ and that energy was transferred through the flyer_t_s frame... and to its central _t_handle_t_/mass. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut no_co_ there is no IK happening in the flying bedframe.  It_t_s all faked_co_ and all impulsing happens ONLY upon the flyer_t_s _t_handle_t_/parent_co_ which is a simple box.  But wouldn_t_t it be cool to have IK?  Yum!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIF impulse WAS actually happening at the thruster ports (IK)_co_ and you accidentally broke-off one _qt_arm_qt_ (3 thruster ports) of the flyer_co_ you_t_d have one hell of a time trying to get the flyer to fly straight_co_ eh?  We might need to call a Jamie Davis heavy wrecker tow-craft... in order to get home.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tMacGyver type folk... would space-walk_co_ and install a temporary repair_co_ using a broomstick with 3 cans of hairspray duct-taped to it.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  (Cans of hairspray work great for rescuing space-walkers that become un-tethered and float-off)  _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_  A _qt_fishing reel gun_qt_ (with line tied to station) could also be fired-at float-away spacewalkers_co_ and I had a Silly String rescue method almost invented_co_ once_co_ too.  (Like MY ideas ever get heard.)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt wasn_t_t so dangerous when the space walks happened from the shuttle_co_ because the shuttle could possibly _t_fetch_t_ the float-away space-walker.  But space walks that happen from the international space station... that_t_s a different cup-of-tea.  Not much _t_flying around_t_ (fetching) allowed for THAT big pig.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tThe flying bedframe is somewhat based-upon NASA MMU and _lt_a href_eq__qt_http_dd_//blogs.esa.int/tim-peake/2016/01/15/best-to-be-safer/_qt_ rel_eq__qt_external nofollow_qt__gt_SAFER systems_lt_/a_gt_ (for spacewalkers)_co_ and upon basic _t_flyer_t_ satellites such as the Spartan.  Current space-walker SAFER units still use 24 cold-thrust (hair spray - heh) ports_co_ I believe_co_ and every space-walker wears one_co_ as far as I know.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWAY more prattle than ANY of us really needed to know_co_ eh?  heh.  I like this subject_co_ though.  I like precision zero-G flying and gentle docking challenges.  I used to be a NASA TV junkie.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCan I ask... what you_t_re planning/dreaming?  Something... space craft-ish_co_ by chance?  If it_t_s a secret_co_ just ignore me.  In fact_co_ you might want to ignore me_co_ in general.  heh\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gopher","Date":"2018-01-13T19:22:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_ Thanks for sharing! And not at all a secret. I am trying to simulate a combination of flight dynamics and orbital dynamics. Realism or correctness is not the objective but the movements should look appealing visually. It_t_s a side project I am working on during my abundant free time and the objective is to see if I can evolve visually correct avionics with machine learning (NN_co_ GA_co_ RBM_co_ etc.).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI don_t_t need IK yet but I agree_co_ IK would be great to have!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou seem to have a lot more experience building for space/flight. Have you done much lift+drag simulation (or maybe voxel based approximation)? My current thoughts are to apply a force proportional to the cross-sectional area opposite to the direction of movement to simulate drag for example_co_ but that is a crude approximation. Voxels are much better but looks complicated to implement unless there libraries to help with that.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-01-14T00:12:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCooool!  That_t_s sounds great.  I haven_t_t done lift or drag sims/calcs... but... lift is essentially thrust_co_ mass and gravity_co_ as you know.  Me...I need 3rd grade math and below.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tSome of the _qt_hot_qt_ physics guys _t_round here... were once talking about wind resistance_co_ and how to stop spheres from rolling forever.  (Spheres have NO significant surface area with ground_co_ so friction parameter is essentially worthless.)  They came up with the _qt_multiply .99_qt_ method... where... in the render loop...  (pseudo code)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t    if body has linearVelocity { linearVelocity multiplyInPlace( vec3(.99_co_ .99_co_ .99) ) }\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou get the idea.  We constantly downScale the velocity vector.  (That sure is a pile of fancy words that I likely mis-used).  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tEssentially_co_ the above is a .01 drag. And that drag value can be constantly changing_co_ of course (various scene conditions/locations). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s not .01 Newtons_co_ it_t_s... gopherUnits.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  .01 gophers of drag.  heh.  I like it.  You just became famous_co_ G-man.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI say that for a reason... and I_t_m glad you don_t_t want _qt_scientific precision_qt_ and actual Newtons.  Some people get _t_hung up_t_ on trying to get scientific and micro-precise.  Although it is a fun _qt_branch_qt_ to play-with_co_ it can also bog and frustrate.  The physics engines are xxx precise and predictable_co_ and there_t_s a _qt_good enough_qt_ line that _lt_em_gt_should_lt_/em_gt_ be respected_co_ I guess.  I have troubles getting my _qt_good enough_qt_ line to stay in-focus.  _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_  \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_qt_Abundant free time_qt__co_ he says.  hmm.  Allow me to introduce you to professional train engineer _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/?do_eq_hovercard_qt_ data-mentionid_eq__qt_14282_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/_qt_ rel_eq__qt__qt__gt_@JohnK_lt_/a_gt_ - who drives trains for the _qt_Doc Island Line_qt_ railroad.  (JK recently COMPLETELY overhauled our docs system_co_ and he could use helpers to do proof-reads and test examples_co_ as well as build a new thing called Playground Based Tutorials. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAll in all_co_ learn and help-with our docs system if/when you get a chance.  (thx)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd... thanks for the peak at your plans!  Yep_co_ you_t_re either headed down Rocketry Avenue_co_ or you_t_re going to open a Frisbee factory.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  I can smell it.  heh.  Maybe a helicopter builder.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tShare whatever ya can... demos and conversations... we love that kind of stuff _t_round here. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gopher","Date":"2018-01-15T00:31:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_I write code for a living but frisbee factory summarizes it really well _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_Rule 23_dd_ The words _qt_abundant free time_qt_ is never used in that order together unless it implies sarcasm. I am just messing around with JS 3d and physics libs at this point but I will try to make time to contribute if I spend enough time/learn enough._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tScale by 0.99 is a perfectly valid trick. That said_co_ although I am not after accurate numbers_co_ I would love for the simulation to _qt_look_qt_ realistic. I am wondering if we can derive a bit more detailed _qt_air related_qt_ forces based on shapes+orientation+velocity so that a piece of plywood will not fall straight down through the air. I would like it to experience the _qt_wrath of pseudo fluid dynamics_qt_ and be taken for a flappy ride. NB_dd_ Catching fire is out of scope for now!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am not assuming this is a BJS concern by the way. In fact_co_ it makes sense for it to be a different lib (or a class/piece of code). Maybe the forces returned from this can then be applied to the world to integrate with the rigid body physics? How would you do it _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlthough not JS_co_ this KSP plugin looks interesting_dd_ _lt_a href_eq__qt_https_dd_//github.com/ferram4/Ferram-Aerospace-Research/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/ferram4/Ferram-Aerospace-Research/_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDrools about writing a small JS library of this kind. Lift and drag by themselves look simple enough to do for small assemblies but might need some work to generalize. Any takers? _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]