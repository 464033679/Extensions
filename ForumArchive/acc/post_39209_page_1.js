[{"Owner":"BartW","Date":"2018-08-01T08:57:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi all!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m terrible at shaders. I get the gist of it but I have no idea where to start. Especially when I need to extend a complexÂ shader/material like PBRMaterial.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy use case_dd_Â I have a customisable product_co_ lets say a table. The idea is that you can specify the width and length of the table and it will animate (tween) to these dimensions. Simply scaling theÂ table top is not an option since it consists of 9 submeshes since the edges contain a nice bevel which should keep its ratios mostlyÂ intactÂ (like a 9-sliced tile). I_t_ve been playing around with scaling and offsetting the UV_t_s per scaled submesh and I_t_m coming close to a working solution_co_ but when the UV_t_s are not neatly set up for me I have a hell of a job on figuring out the exact scale and offset per submesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tA planarÂ projection would solve this issue for me as it would layout the texture perfectly and would save me an enormous amount of UV calculations per mesh_co_ per frame. Modifying the TriPlanarMaterial doesn_t_t work for me since the rest of the materials are PBR instead of Standard_co_ and the lighting is HDR only.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo my question is_dd_ how do I modify the existing PBRMaterial in such a way that it only projects textures in worldspace? Would this be a simple hack - hook into some callback or register a render process - or would I need to create an entireÂ new material from the materialLibrary repo? Any adviceÂ would be much appreciated. A working example would really make my day. Possibly my weekÂ _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_Â Thanks in advance\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- Bart\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BartW","Date":"2018-08-01T12:24:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI guess what I_t_m trying to do is hack into the PBRMaterial_t_s vertex shader and reset the uv_t_s by setting uv _eq_ worldPos.xz_co_ right?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-08-01T15:28:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHelloÂ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/32326-bartw/?do_eq_hovercard_qt_ data-mentionid_eq__qt_32326_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/32326-bartw/_qt_ rel_eq__qt__qt__gt_@BartW_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am having a hard time figuring out what you are trying to achieve exactly_co_ could you create a playground with what you already have and I can try to hack in the shader for you or maybe even add a special mode for this kind of projection ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs soon as I ll get a better grip on your issue I can definitely help hacking in the shader and then adding dedicating extension points in the material.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BartW","Date":"2018-08-02T12:41:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for responding Sebavan!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPG here_dd_Â _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#BLMRX2_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#BLMRX2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis should illustrate that I try to create the same effect as the TriPlanarMaterial_dd_ render textures in worldspace.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen the object scales or translates_co_ the textures should still render at the same worldspace position.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWell maybe not when translating... The best would be whenÂ textures render inÂ object space _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-08-02T14:46:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHere it is _lt_span_gt__dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#BLMRX2%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#BLMRX2#2_lt_/a_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_I am really not sure it is a common behavior so I do not think to make it a feature but a cleaner way would be to simply replace the mainUV part without setting offset nor scale on the texture_dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#BLMRX2%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#BLMRX2#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet me know if that works for you.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BartW","Date":"2018-08-02T15:15:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAwesome_co_ that is exactly what I was looking for. Thank you so much!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo you override the actual pbr vertex shader in the store.. Is there a way to create a new entry with this adaptation and create a new PBRMaterial type that uses the new shader instead of overwriting the shader for all PBRMaterials?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-08-02T16:04:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYes_co_ you could but you would need to dupplicate the pbr code.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-08-02T16:18:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/32326-bartw/?do_eq_hovercard_qt_ data-mentionid_eq__qt_32326_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/32326-bartw/_qt_ rel_eq__qt__qt__gt_@BartW_lt_/a_gt_Â You could also modify the pbrBaseMaterial class to allow using a different shader this could be customized in the constructor for instance.Â \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BartW","Date":"2018-08-02T16:46:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m browsing through the source code to figure out where this is hooked up to the shader store...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy guess is I need to hook intoÂ babylon.pbrBaseMaterial.ts line 1019_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_return engine.createEffect(_qt_pbr_qt__co_ &lt_sm_EffectCreationOptions&gt_sm_{_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tProbably change _qt_pbr_qt_ to some other prefix and inject new shaders in the store?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-08-03T00:10:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYup_co_ exactly _lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ™‚_lt_/span_gt_Â \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]