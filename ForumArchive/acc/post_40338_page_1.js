[{"Owner":"Superfly","Date":"2018-09-29T13:30:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\ti just started a little testproject with babaylon. No big thing_co_ just walking around in a Level an collecting items.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen i was doing a prototype i looked a the playground examples. The collision-example is quite close to what i want to achieve_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#U8MEB0%230_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#U8MEB0#0_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tyou can run around_co_ land on the ground and can_t_t walk through obstacles. This is what I want for my player object. So i created_co_ as in the example_co_ a surface as a floor_co_ a couple of boxes as obstacles and a ball as a player. I activated collision detection for the scene and all objects_co_ gravity and a asigned vector_co_ but nothing happened. If I now move objects using locallyTranslate() there will be no collision between the objects.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI just think I misunderstood something and so I wanted to ask here what the correct way is to implement a character walking arround in a level.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-09-29T21:40:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHiya S_co_ and welcome.  I have done SOME mesh-to-mesh collision play... using the built-into-BJS collision system (non-physics engine)...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WWCK0%2353_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WWCK0#53_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUse W A S D Q E keys to move LEFT cylinder_co_ and SHIFTED W A S D Q E keys to move right cylinder.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlthough it is not needed_co_ I put an actionManager intersection tester on one of the cylinders.  *shrug*  Something to play-with.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIncluded in this playground are two _qt_tool functions_qt_ to make it easier to see and position the mesh_t_s invisible .ellipsoid area/volume.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThese tools are not well coded (by me).  They are_co_ at best_co_ alpha-grade. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ that playground is essentially a mesh-to-mesh collision testing scene.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_BUT_lt_/strong_gt_... I_t_m quite sure that this collision system... was not meant for mesh-to-mesh collisions.  It is/was designed for freeCamera-to-mesh collisions (first-person shooters?).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMesh are never affected by scene.gravity (unless a third-party physics engine is used_co_ such as CannonJS or OimoJS_co_ both available to BJS scenes).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ you probably didn_t_t use _lt_strong_gt_camera.applyGravity _eq_ true_sm__lt_/strong_gt_  ...yet (freeCams only_co_ I believe).  And then... if your camera starts-out above the collision-active ground_co_ you need _lt_strong_gt_camera._needMoveForGravity _eq_ true_sm__lt_/strong_gt_   ... to make the camera start falling as soon as the scene finishes loading.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPretend that one of the cylinders is a player_co_ and the other is an obstacle.  Notice that I do not use the free camera controls to move the cylinder (via parenting cylinder to camera).  Instead_co_  I move the cylinder itself... with nav keys  This makes it easier to test TRUE mesh-to-mesh collision_co_ and keep the camera completely un-involved (for now).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere is also a property on mesh and freeCamera called .ellipsoidOffset.  This vec3 local-Space value moves the mesh or freeCamera collision .ellipsoid... forward/backward/left/right/up/down... away-from actual mesh or camera position... _lt_em_gt_some_lt_/em_gt_ amount.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ you could set camera.ellipsoidOffset so that its .ellipse collider is in-front-of camera_co_ instead of encircling it.  I dunno what that will solve.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you place/parent a sphere (player) in-front-of camera (at same place as camera.ellipsoidOffset_co_ it might block the camera_t_s view.  No good.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you place the ellipsoidOffset TOO far in-front-of camera (and maybe position a parented-to-cam sphere at that location as well)_co_ it might make the game play strangely.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tOur friend _lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/7708-bitofgold/?do_eq_hovercard_qt_ data-mentionid_eq__qt_7708_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/7708-bitofgold/_qt_ rel_eq__qt__qt__gt_@BitOfGold_lt_/a_gt_ (I think) coded a cool 3D PacMan_lt_/span_gt_-like thing... which I think works real nice (follow camera_co_ I think).  You should borrow some code from there.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#LYCSQ%23256_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#LYCSQ#256_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCollision detection is always a challenge.  Don_t_t forget the actionManager...\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_    barrel2.actionManager _eq_ new BABYLON.ActionManager(scene)_sm_\n\n    barrel2.actionManager.registerAction(\n        new BABYLON.ExecuteCodeAction({ trigger_dd_ BABYLON.ActionManager.OnIntersectionEnterTrigger_co_ parameter_dd_ barrel1}_co_\n        function (bjsEvent) {\n            // do stuff_co_ like reverse camera/player to PREVIOUS non-intersection position\n        })\n    )_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tIt doesn_t_t use .ellipse_co_ or ellipsoidOffset_co_ or .moveWithCollisions()_co_ enableCollisions_co_ checkCollisions_co_ none of it.  This just watches for intersections between mesh_co_ even invisible spheres that are parented _qt_around_qt_ a camera.  Hint hint.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd_co_ with all collisions... watch out for continuous collision between ground_co_ and cameras/mesh sliding across ground.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI hope I have been helpful.  SO much to think-about_co_ eh?  *nod*  Collision-detection/processing is one of the most difficult parts to video games.  Stay tuned... others will comment_co_ I_t_m sure.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Superfly","Date":"2018-09-30T14:18:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks a lot for the detailed answer!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo what_t_s a common way to keep a player object on the floor and prevent it from going through walls? Or should i use a physicsengine with rigidbodys ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-09-30T14:56:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHeya!  I would say.... follow that #256 playground method.  _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#LYCSQ%23256_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#LYCSQ#256_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat little yellow pacman-like character... stays on the floor and collides with walls... nicely_co_ right?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNotice that the author DID use .moveWithCollisions() (line 195) and .checkCollisions (line 135)_co_ so pacman demo is using the same collision system as you are testing.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYet_co_ the author never changed player or wall ._lt_em_gt_ellipsoid_lt_/em_gt_ sizes or ._lt_em_gt_ellipsoidOffset_lt_/em_gt_.  All those are using _qt_default_qt_ settings.  That is pretty nice_co_ huh?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe demo has a rather large _qt_renderLoop_qt_... lines 157-210.  Plenty of study to be done_co_ there.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHave you decided HOW you are going to control your player or _qt_driven objects_qt_ yet?  Want to use mouse pointer/buttons for steering and throttle/speed?  Keyboard?  GUI buttons?  Clicks on the ground?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn a way_co_ _qt_how will you collide_qt_ is dependent-upon _qt_how will you navigate/move_qt__co_ right?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou are likely still experimenting with various methods.  But perhaps you already have an exact gameplan... as far as camera views_co_ player mesh_co_ and assorted colliding.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou see how large the author_t_s renderLoop is_co_ right?  Lots of testing/forcing can be done in that time... like setting player.position.y _eq_ floorHeight+5 (to keep player from falling thru_co_ and then no need to set ground.checkCollisions). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSame with cameras.  If arcRotateCam_co_ don_t_t let it_t_s .beta go higher than 1.57.  (use arcCam _lt_em_gt_.upperBetaLimit_lt_/em_gt_ setting) That will keep the camera above the horizon_co_ and never below the floor.  With free/universal cams_co_ keep its position.y above 0.  (just force it to 0 every time thru the renderLoop_co_ perhaps)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor player-moving_co_ I think moveWithCollisions() accepts a vector 3_co_ which has a Y value.  Always set the Y value to 0_co_ and the player won_t_t sink into floor.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOk_co_ go get _t_em.  I won_t_t say that the pacman demo is _lt_u_gt_the best_lt_/u_gt_ third-person-view bumper-car-like demo I have seen so far in BJS... but it_t_s right up there in the rankings_co_ imho.  It is one of my _qt_gold star bookmarks_qt_.  _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ again_co_ wait until approx mid-week... to make any firm decisions.  Try to allow other forum users to give their opinions_co_ because I don_t_t have very much experience with coding games.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCya later_co_ party on!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Superfly","Date":"2018-09-30T18:43:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tTanks again Wingnut.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tmoveWithCollisions is the key _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Is there something simular wich can be used when the objekt gets rotated? locallyTranslate() but with collision _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-09-30T22:35:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMy pleasure.  There is a mesh.rotate(someAxis_co_ someAmount_co_ BABYLON.Space.Local)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEx_dd_  rotate(new BABYLON.Vector3(1.0_co_ 0.0_co_ 0.0)_co_ Math.PI / 2.0_co_ BABYLON.Space.Local)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEx2_dd_  rotate(BABYLON.Axis.Y_co_ sphere.rotation.x + 2_co_ BABYLON.Space.LOCAL)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is a Quaternion rotation_co_ but it still _lt_u_gt_does not_lt_/u_gt_ check for collisions.  There is also a sister .translate() function that is very similar_co_ also _lt_u_gt_not_lt_/u_gt_ a collision checker.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe really don_t_t have a rotateWithCollisions()_co_ and I think it is because collisions are very dependent upon .position.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere is ANOTHER collision system using a func called _qt_intersectsMesh_qt_  ... _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/playground/?code_eq_intersectsMesh_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/playground/?code_eq_intersectsMesh_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut_co_ I would put an _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/how_to/how_to_use_actions_qt_ rel_eq__qt_external nofollow_qt__gt_actionManager_lt_/a_gt_ with _qt_onIntersectionEnterTrigger_qt_.... on the rotating mesh.  The actionManager is constantly _qt_polled_qt_ automatically_co_ watching for intersect with ANY other mesh.  ActionManagers take a few minutes to learn_co_ but once you _qt_see the light_qt__co_ you will LOVE that system.  Very powerful.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor an ACTION on that ActionManager (all actionManagers require a trigger and an action)... use executeCodeAction.  It tells the actionManager to run SOME function that YOU create... if your rotating mesh intersects another mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tInside your _lt_strong_gt_somethingCollidedWIthMyRotater() _lt_/strong_gt_func (if that_t_s what you name it)... you immediately stop rotating (and/or moving position) and block further attempts from the user.  THEN... there is a SLIM possibility that you will be sort-of _qt_stuck in intersect_qt_.  Some programmers try to _qt_store_qt_ (in constantly-updated variables) the PREVIOUS rotation and position...  whenever a NEW move or rotation is done.  IF an intersect happens_co_ it might be wise to set the rotated mesh .position and .rotation to PREVIOUS step_t_s values... which SHOULD remove it from any intersect condition.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WWCK0%2353_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WWCK0#53_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLook at lines 134-143.  Barrel2 has an actionManager with an intersectionEnter_lt_strong_gt_Trigger_lt_/strong_gt_ and an executeCode_lt_strong_gt_Action_lt_/strong_gt_.  Open your JS console_co_ then click on the canvas_co_ then hold down the D key.  Left barrel1 will slide-over and collide-with barrel2.  ActionManager on B2 reports intersect at the JS console.  (yay!)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow use _qt_A_qt_ key to move B1 away-from B2 again.  Now try the _qt_D_qt_ key again_co_ collide B1 into B2 again.  NOW the actionManager intersect test... doesn_t_t work anymore.  hmm.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI still haven_t_t determined why.  I might work on that... to see if I can learn why it only works once.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLots to think about_co_ eh?  Sorry.  I wish I knew more.  I wish I was a better helper.  Stay tuned_co_ keep experimenting.  It sounds like you are on the right track.  Share things you learn_co_ (especially test playgrounds)_co_ if you please.  Thx.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Superfly","Date":"2018-10-07T11:53:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tthings getting clearer now _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\ti build a little prototype for a 3rd person character controller that works (for me)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1ZJJ54%2313_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1ZJJ54#13_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthe next problem is that checkCollisions() seams not to work with costum meshes _lt_span class_eq__qt_ipsEmoji_qt__gt_🤔_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]