[{"Owner":"Dong","Date":"2018-10-10T02:50:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_#f7f8fa_sm_color_dd_#333333_sm_font-size_dd_14px_sm__qt__gt_I need to use some of the features of webgl2.0 (_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/features/webgl2_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/features/webgl2_lt_/a_gt_) in some businesses_co_such as deferred shadding._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt_\n\tbut it says _qt__lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#000000_sm_font-size_dd_medium_sm__qt__gt_In Babylon.js_co_ our first use of this technique is to render a geometry buffer of the scene._lt_/span_gt__qt_Â  in the document#Multiple Render Target.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI still don_t_t know how I should code_co_can I just use API fromÂ _lt_a href_eq__qt_https_dd_//developer.mozilla.org/zh-CN/docs/Web/API/WebGL2RenderingContext/drawBuffers_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//developer.mozilla.org/zh-CN/docs/Web/API/WebGL2RenderingContext/drawBuffers_lt_/a_gt_Â ???\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_#f7f8fa_sm_color_dd_#333333_sm_font-size_dd_14px_sm__qt__gt_I would like to have a documentation to help me ! thannnnnnnks_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-10-10T09:47:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_ it is such a broad question _lt_span_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ™‚_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Deferred shading is not a webgl 2 feature but some features from webgl2 or through extension in webgl 1 called draw buffers can ease its implementation._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCurrently our entire lighting and standard materials are based on forward rendering techniques.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn order to implement deferred most of the lighting shared code would require to be changed if you are willing to benefit from the other framework features.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat said it would be a nice addition to the framework. You could start by taking a look at the multi render target class and how it is used in ssao2 or object motion blur in order to inspire yourself and see how you could leverage it to create a deferred support.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHope this might help.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dong","Date":"2018-10-10T15:00:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_231178_qt_ data-ipsquote-contentid_eq__qt_40546_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1539164850_qt_ data-ipsquote-userid_eq__qt_20193_qt_ data-ipsquote-username_eq__qt_Sebavan_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t5 hours ago_co_ Sebavan said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tHello_co_ it is such a broad question _lt_span_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ™‚_lt_/span_gt__lt_/span_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_span_gt_Deferred shading is not a webgl 2 feature but some features from webgl2 or through extension in webgl 1 called draw buffers can ease its implementation._lt_/span_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tCurrently our entire lighting and standard materials are based on forward rendering techniques.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tIn order to implement deferred most of the lighting shared code would require to be changed if you are willing to benefit from the other framework features.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThat said it would be a nice addition to the framework. You could start by taking a look at the multi render target class and how it is used in ssao2 or object motion blur in order to inspire yourself and see how you could leverage it to create a deferred support.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tHope this might help.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_#f7f8fa_sm_color_dd_#333333_sm_font-size_dd_14px_sm__qt__gt_Yeah_co_My confusion is how do I migrate a program I wrote in webgl2 to BABYLON_co_ like deferred shadding based on MRT or something._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_#f7f8fa_sm_color_dd_#333333_sm_font-size_dd_14px_sm__qt__gt_I can_t_t find a way to use it in the document_co_ like I want to create a frame buffer_co_ send it to the shader through drawBuffer_co_ and then output it to a different texture object._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-10-10T15:50:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou should be able to use the geometry buffer renderer like what we do in the Motion Blur postprocess_dd_Â _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/PostProcess/babylon.motionBlurPostProcess.ts#L56_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/PostProcess/babylon.motionBlurPostProcess.ts#L56_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis object is responsible for the draw buffer webgl2 code. Once done you can use the data generated like a texture in your own shader_dd_Â _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/PostProcess/babylon.motionBlurPostProcess.ts#L74_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/PostProcess/babylon.motionBlurPostProcess.ts#L74_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHow to use your own shader_dd_Â _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/how_to/shader_material_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/how_to/shader_material_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]