[{"Owner":"jdurrant","Date":"2015-03-20T19:21:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Forgive me if this isn_t_t the right place to put this. I just wanted to put in a request for better control over LOD. Specifically_co_ it would be great if there were a callback function (with distance as one of its parameters) that would allow me to have greater control over what is and isn_t_t displayed at a given distance. For example_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_1) Rather than switching suddenly between levels of detail_co_ I could use the distance to implement a fading transition (i.e._co_ one level would fade in as the other was fading out). This would allow for LOD changes to occur much closer to the camera_co_ without bothering the user as much. Also_co_ it would allow for greater mesh simplification_co_ because differences in meshes wouldn_t_t be as noticeable. Could be particularly helpful for the null to not-null transition a lot of people use as the farthest level of detail. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_2) LOD shadows are another example of how an LOD callback function could be helpful. I could assign an object to different shadow generators (with different shadow-map resolutions) based on distance._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Looking at the code_co_ I don_t_t think it wouldn_t_t be too hard to implement. The Mesh.prototype.getLOD function seems to be the right place_co_ after distanceToCamera is defined. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Anyway_co_ I know the developers are working on a million things right now_co_ and I_t_m amazed at how quickly the engine is improving. Thought I_t_d just throw in my two cents in case it_t_s helpful. Thanks!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-03-21T02:35:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Can you sketch some lines of code to show me how you think you could use it? I appreciate having a glance at how the API could look like _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jdurrant","Date":"2015-03-21T07:51:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Here_t_s a working example of what I mean_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1S5TZL_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1S5TZL_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I made just a few changes to babylon.js_co_ implementing an LOD callback function. I then use that to _qt_smooth_qt_ the transitions between different LOD levels using fade transitions. It makes the LOD transitions easier on the eye_co_ I think. There are many other things that could be done with a callback function_co_ though. This LOD fading is just an example._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Note that my implementation here is not very elegant! I_t_m sure there_t_s a better way that_t_s more user friendly. But at least it works. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ Thanks for the attention._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-03-21T11:47:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The idea is good._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2015-03-21T18:55:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Looks like how skyrim does it! Very nice!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-03-21T19:20:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Will be part on the next commit_dd_)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]