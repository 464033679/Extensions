[{"Owner":"bws","Date":"2015-09-05T14:48:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I can create a _t_cube_t_ that is 10x10x10 by doing_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var box _eq_ BABYLON.Mesh.CreateBox(_qt_box_qt__co_ 10.0_co_ scene)_sm__lt_/pre_gt__lt_p_gt_but how do I create a 3D rectangle that is 10x20x5 ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I can_t_t see anything in the _lt_strong_gt_BABYLON.Mesh_co_CreateXXX( name_co_ ... )_sm__lt_/strong_gt_ methods !?!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks_co__lt_/p_gt__lt_p_gt_bws._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"davrous","Date":"2015-09-05T15:09:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ You need to play with the scaling property. Feel free to read our doc_dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/generals/A_Babylon.js_Primer#my-new-friends-position-rotation-and-scalingnbsp_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/generals/A_Babylon.js_Primer#my-new-friends-position-rotation-and-scalingnbsp_lt_/a_gt_ and/or test our playground _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_Bye_co__lt_/p_gt__lt_p_gt_David_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-09-05T16:43:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var box _eq_ BABYLON.Mesh.CreateBox(_qt_box_qt__co_ 10.0_co_ scene)_sm_box.scaling.x _eq_ 30_sm__lt_/pre_gt__lt_p_gt_and have your rectangle_lt_/p_gt__lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Ahiru","Date":"2015-09-05T16:58:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi bws_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAt the moment I guess the only possibility is to scale your box like this_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe have a playground where you can test it - it would be the easiest way next time to create your example in it_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#JRG4T_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#JRG4T_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_pre class_eq__qt_ipsCode prettyprint prettyprinted_qt__gt_\n_lt_span class_eq__qt_kwd_qt__gt_var_lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ box _lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__eq__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ BABYLON_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_._lt_/span_gt__lt_span_gt_Mesh_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_._lt_/span_gt__lt_span_gt_CreateBox_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_(_lt_/span_gt__lt_span class_eq__qt_str_qt__gt__qt_box_qt__lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__co__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_lit_qt__gt_10_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt__co__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ scene_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_)_sm__lt_/span_gt__lt_span class_eq__qt_com_qt__gt_// box.position _eq_ new BABYLON.Vector3(0_co_ 0_co_ 0)_sm_box.scaling.y _eq_ 2_sm_box.scaling.z _eq_ 0.5_lt_/span_gt__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2015-09-05T18:50:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_If you want to create a 3D rectangle or cuboid directly without scaling a cube you can use this function_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_function  CreateCuboid(name_co_ length_co_ width_co_ height_co_ scene) { //length x_co_ width z_co_ height y        var cuboid _eq_ new BABYLON.Mesh(name_co_ scene)_sm_        var normalsSource _eq_ [            new BABYLON.Vector3(0_co_ 0_co_ 1)_co_ //z            new BABYLON.Vector3(0_co_ 0_co_ -1)_co_ //z            new BABYLON.Vector3(1_co_ 0_co_ 0)_co_ //x            new BABYLON.Vector3(-1_co_ 0_co_ 0)_co_ //x            new BABYLON.Vector3(0_co_ 1_co_ 0)_co_ //y            new BABYLON.Vector3(0_co_ -1_co_ 0) //y        ]_sm_        var indices _eq_ []_sm_        var positions _eq_ []_sm_        var normals _eq_ []_sm_        var uvs _eq_ []_sm_        // Create each face in turn.        for (var index _eq_ 0_sm_ index &lt_sm_ normalsSource.length_sm_ index++) {            var normal _eq_ normalsSource[index]_sm_            // Get two vectors perpendicular to the face normal and to each other.            var side1 _eq_ new BABYLON.Vector3(normal.y_co_ normal.z_co_ normal.x)_sm_            var side2 _eq_ BABYLON.Vector3.Cross(normal_co_ side1)_sm_            // Six indices (two triangles) per face.            var verticesLength _eq_ positions.length / 3_sm_            indices.push(verticesLength)_sm_            indices.push(verticesLength + 1)_sm_            indices.push(verticesLength + 2)_sm_            indices.push(verticesLength)_sm_            indices.push(verticesLength + 2)_sm_            indices.push(verticesLength + 3)_sm_            // Four vertices per face.            var vertex _eq_ normal.subtract(side1).subtract(side2)_sm_            positions.push(vertex.x*length/2_co_ vertex.y*height/2_co_ vertex.z*width/2)_sm_            normals.push(normal.x_co_ normal.y_co_ normal.z)_sm_            uvs.push(1.0_co_ 1.0)_sm_            vertex _eq_ normal.subtract(side1).add(side2)_sm_            positions.push(vertex.x*length/2_co_ vertex.y*height/2_co_ vertex.z*width/2)_sm_            normals.push(normal.x_co_ normal.y_co_ normal.z)_sm_            uvs.push(0.0_co_ 1.0)_sm_            vertex _eq_ normal.add(side1).add(side2)_sm_            positions.push(vertex.x*length/2_co_ vertex.y*height/2_co_ vertex.z*width/2)_sm_            normals.push(normal.x_co_ normal.y_co_ normal.z)_sm_            uvs.push(0.0_co_ 0.0)_sm_            vertex _eq_ normal.add(side1).subtract(side2)_sm_            positions.push(vertex.x*length/2_co_ vertex.y*height/2_co_ vertex.z*width/2)_sm_            normals.push(normal.x_co_ normal.y_co_ normal.z)_sm_            uvs.push(1.0_co_ 0.0)_sm_                    }        cuboid.setVerticesData(BABYLON.VertexBuffer.PositionKind_co_ positions)_sm_        cuboid.setVerticesData(BABYLON.VertexBuffer.NormalKind_co_ normals)_sm_        cuboid.setVerticesData(BABYLON.VertexBuffer.UVKind_co_ uvs)_sm_        cuboid.setIndices(indices)_sm_        return cuboid_sm_           }_sm__lt_/pre_gt__lt_p_gt_For example_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_cuboid _eq_ CreateCuboid(_qt_rect3_qt__co_ 10_co_ 20_co_ 5_co_ scene)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Convergence","Date":"2015-09-06T01:41:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Any chance the above rectangle function could be a standard Primitive in BABYLON? Scaling a prim to achieve a desired size has all kinds of undesirable side effects such as it children_t_s transformations acting unexpectedly_co_ or any other operation which assumes a Mesh_t_s standard scale is Vector3(1_co_1_co_1) or at least uniform._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-06T04:08:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_As it is a recurrent request_co_ I think we will do quickly do something in this purpose_lt_/p_gt__lt_p_gt_Maybe more general and versatile._lt_/p_gt__lt_p_gt_We had a PM with DK about the need to improve the future extensibility of the next _lt_em_gt_Mesh.CreateXXX()_lt_/em_gt_ methods_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So maybe something like _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var boxParams _eq_ {}_sm_boxParams.width _eq_ 5_sm_boxParams.height _eq_ 11_sm_boxParams.length _eq_ 3_sm_boxParams.stretchTexture _eq_ true_sm_ // up to come exotic texture param for instancevar box _eq_ BABYLON.Mesh.CreateXTBox(_qt_box_qt__co_ boxParams_co_ scene)_sm__lt_/pre_gt__lt_p_gt_Or any more pertinent name than _lt_em_gt_CreateXTBox_lt_/em_gt_ ... any suggestions_co_ native english speakers ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2015-09-06T07:07:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_95457_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_16956_qt_ data-ipsquote-username_eq__qt_Convergence_qt_ data-cite_eq__qt_Convergence_qt_ data-ipsquote-timestamp_eq__qt_1441503691_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Any chance the above rectangle function could be a standard Primitive in BABYLON? Scaling a prim to achieve a desired size has all kinds of undesirable side effects such as it children_t_s transformations acting unexpectedly_co_ or any other operation which assumes a Mesh_t_s standard scale is Vector3(1_co_1_co_1) or at least uniform._lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You can do something like this_dd_ _lt_/p_gt__lt_p_gt_var box _eq_ BABYLON.Mesh.CreateBox(_qt__qt__co_ 1_co_ scene)_sm__lt_/p_gt__lt_p_gt_box.scaling _eq_ new BABYLON.Vector3(2_co_3_co_4)_sm_ // Create a rectangle _lt_/p_gt__lt_p_gt_box.bakeCurrentTransformIntoVertices()_sm_ // _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/2.2-alpha/Mesh#bakecurrenttransformintovertices-rarr-void_qt_ rel_eq__qt_external nofollow_qt__gt_See doc here_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_After this_co_ your box scaling will be reset to (1_co_1_co_1)_co_ but its width_co_ height and length will be 2_co_3 and 4._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-10T08:23:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I guess this _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/17044-evolution-for-out-of-the-box-meshes-creation/_qt__gt_post_lt_/a_gt_ will close this topic _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"bws","Date":"2015-09-13T06:18:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt_Thanks dad72 and Ahiru. I would need to do it like you suggested as i need to set the Side Orientation parameter on my Meshes._lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_JohnK - thanks for your detailed answer. I didn_t_t know you could do var cuboid _eq_ new BABYLON.Mesh(name_co_ scene)_sm_ in Babylon. This will also help me in my understanding of scaling with textures (I_t_m a bit new to 3D!)._lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_Convergence - yes a standard primitive. A benefit that I can think of is to assist with any texture scaling issues. I would like my textures to be of a _t_certain_t_ level of quality_co_ thus pixelation could be somewhat managable should I know my size of my cuboid as I can then make my texture scale nicely with the cuboid._lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_**EDIT** jerome (et.al.) - thanks for this new signature (looks like I may have just tipped this issue over the edge from many previous requests for this feature)._lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_Thanks to all whom replied_co__lt_/div_gt__lt_br_gt__lt_div_gt_bws._lt_/div_gt__lt_br_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mwpowellhtx","Date":"2016-03-26T18:55:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_95457_qt_ data-ipsquote-contentid_eq__qt_16956_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1441503691_qt_ data-ipsquote-userid_eq__qt_8101_qt_ data-ipsquote-username_eq__qt_Convergence_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 9/6/2015 at 9_dd_41 PM_co_ Convergence said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tAny chance the above rectangle function could be a standard Primitive in BABYLON? Scaling a prim to achieve a desired size has all kinds of undesirable side effects such as it children_t_s transformations acting unexpectedly_co_ or any other operation which assumes a Mesh_t_s standard scale is Vector3(1_co_1_co_1) or at least uniform.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\t+1 for this one_co_ please.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs a frame of reference_co_ Helix Toolkit supports a rectangle. The key with that_co_ if memory serves_co_ is that you need to know the perpendicular. After that_co_ you specify height and width as you normally would_co_ in reference the perpendicular. Perpendicular_co_ I believe_co_ is a vector. So if you want a flat _qt_plane_qt__co_ you do something like this new Vector3(0_co_ 0_co_ 1)_co_ in the upwards direction. Or new Vector(0_co_ 0_co_ -1)_co_ in the downwards direction. And so on.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Edit_lt_/strong_gt__dd_ Possibly_co_ CreateRibbon might satisfy my requirements_co_ with a three-point closed path. Will need to experiment with it some. It should be able to fill with a material.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2016-03-26T19:14:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tUse MeshBuilder.CreateBox as Jerome pointed to above.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/tutorials/Mesh_CreateXXX_Methods_With_Options_Parameter#box_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/tutorials/Mesh_CreateXXX_Methods_With_Options_Parameter#box_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tit takes a width_co_ height_co_ depth\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-03-26T19:50:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tyep\n_lt_/p_gt_\n\n_lt_p_gt_\n\tif a prism is needed_co_ you can desing it either with a cylinder tessellated to 3 _dd_ _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/tutorials/Mesh_CreateXXX_Methods_With_Options_Parameter#cylinder-or-cone_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/tutorials/Mesh_CreateXXX_Methods_With_Options_Parameter#cylinder-or-cone_lt_/a_gt_  (regular prism_co_ all sides will have the same size)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tor the right polyhedron _dd_ _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/tutorials/Mesh_CreateXXX_Methods_With_Options_Parameter#polyhedron_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/tutorials/Mesh_CreateXXX_Methods_With_Options_Parameter#polyhedron_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\ttype _eq_ 5\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthe polyhedron is then sizeable on X_co_ Y and Z like the box\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mwpowellhtx","Date":"2016-03-26T19:57:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tNot a prism. I don_t_t want it 3D_sm_ just a box. Picture_co_ painted chalk lines on a field.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Edit_lt_/strong_gt__dd_ And the_co_ beyond the _qt_basic_qt_ options_co_ I want to move its position_sm_ possibly even merge a couple of the meshes once they are created_sm_ i.e. boundary chalk lines.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RalphEl","Date":"2016-03-26T20:03:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJohnK is right _co__co__co_ somethimes we need to learn code_co__co__co_ to extend core functionality of engines for our needs _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-03-26T20:41:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tnot sure to understand ... do you want a box or a rectangle ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tif you just need a rectangle (so a planar shape)_co_ you can choose a plane_co_ a ground_co_ a tiled ground or even a disc tessellated to 4 (actually here _qt_disc_qt_ is a short name for any regular polygon)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/tutorials/Mesh_CreateXXX_Methods_With_Options_Parameter#plane_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/tutorials/Mesh_CreateXXX_Methods_With_Options_Parameter#plane_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/tutorials/Mesh_CreateXXX_Methods_With_Options_Parameter#ground_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/tutorials/Mesh_CreateXXX_Methods_With_Options_Parameter#ground_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/tutorials/Mesh_CreateXXX_Methods_With_Options_Parameter#tiled-ground_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/tutorials/Mesh_CreateXXX_Methods_With_Options_Parameter#tiled-ground_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/tutorials/Mesh_CreateXXX_Methods_With_Options_Parameter#disc_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/tutorials/Mesh_CreateXXX_Methods_With_Options_Parameter#disc_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mwpowellhtx","Date":"2016-03-26T21:15:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tTurns out_co_ plane will work. For some reason_co_ which I don_t_t quite understand right at the moment_co_ I also need a PI/2 rotation about the X axis. Perhaps an actual _qt_ground_qt_ is better in that case.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-03-27T05:17:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tyep\n_lt_/p_gt_\n\n_lt_p_gt_\n\ta plane mesh is defined in xOy in its local space whereas a ground mesh is defined in xOz\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"peej","Date":"2017-03-10T04:11:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJohn K_t_s post above really helped me understand how this is working. I had to dig and go step by step to wrap my head around it_co_ because I wanted to build a Trapezoidal Prism. So I built a playground to show the mesh being built at each iteration of the FOR loop on the normals. In the playground_co_ you can see one polyhedra for each of the loops and each vertex that is drawn in that iteration is labeled with A_co_ B_co_ C_co_ D so you can see what_t_s happening.  Anyway_co_ here_t_s the link to the playground_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#VKBJN%2334_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#VKBJN#34_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]