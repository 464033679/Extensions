[{"Owner":"timm","Date":"2018-09-16T03:06:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello All_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have been using Babylon.js for over a year and have been able to get along quite well_co_ thanks a lot in part the the valuable advice and playground examples I find on this forum.Â  I have run into one issue that I have searched for to no avail and I am looking for an elegant solution to.Â  The shape I would like to generate is a 3D flat oval.Â  I found an example of how to do this in three.js using a set of lines that are extruded_co_ but I am not sure how to do this operation easily in Babylon.js.Â  The example below is a link to the three.js example and I have extracted the portion of the code that generates what they call a track shape_co_ as a flat oval is shaped just like a 400m running track.Â  Here is a snippet of the code and a link to that example.Â  I have thought about generating this by building a left half circle_co_ box_co_ right half that are aligned left to right_co_ but I wanted to see if there is a more elegant way to do this.Â  I did a playground for example for this_co_ but it did not come out the way I would have liked it to.Â  The ends of the extruded object do not have the caps filled in.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy babylon.js attempt to do this_dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#3ZAKGF%234_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#3ZAKGF#4_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthree.js link to the example I am talking about (it is the emerlad/teal shape in the example)_dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//threejs.org/examples/webgl_geometry_shapes.html_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//threejs.org/examples/webgl_geometry_shapes.html_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCode snippet in three.js that they use to generate the flat oval_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_\t\t\t\t// Track\n\n\t\t\t\tvar trackShape _eq_ new THREE.Shape()_sm_\n\n\t\t\t\ttrackShape.moveTo( 40_co_ 40 )_sm_\n\t\t\t\ttrackShape.lineTo( 40_co_ 160 )_sm_\n\t\t\t\ttrackShape.absarc( 60_co_ 160_co_ 20_co_ Math.PI_co_ 0_co_ true )_sm_\n\t\t\t\ttrackShape.lineTo( 80_co_ 40 )_sm_\n\t\t\t\ttrackShape.absarc( 60_co_ 40_co_ 20_co_ 2 * Math.PI_co_ Math.PI_co_ true )_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI am thinking that if I could do something like the following_co_ that would work in Babylon.js.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_    // Track in Babylon.JS\n    var deltaTheta _eq_ 0.1_sm_\n    var flatLength _eq_ 10_sm_\n    var flatWidth _eq_ 4_sm_\n    var radius _eq_ flatWidth / 2_sm_\n\n    // create top line for the track\n    var line1Points _eq_ []_sm_\n    line1Points _eq_ [\n        new BABYLON.Vector3(+flatLength / 2_co_ +flatWidth / 2_co_ 0)_co_\n        new BABYLON.Vector3(-flatLength / 2_co_ +flatWidth / 2_co_ 0)\n    ]_sm_\n\n    // create bottom line for the track\n    var line2Points _eq_ []_sm_\n    line2Points _eq_ [\n        new BABYLON.Vector3(-flatLength / 2_co_ -flatWidth / 2_co_ 0)_co_\n        new BABYLON.Vector3(+flatLength / 2_co_ -flatWidth / 2_co_ 0)\n    ]_sm_\n\n    // create left side half-circle for the oval\n    var leftHalfCirclePath _eq_ []_sm_\n    for(var theta _eq_ Math.PI / 2_sm_ theta &lt_sm_ 3.0 / 2.0 * Math.PI_sm_ theta +_eq_ deltaTheta ) {\n        leftHalfCirclePath.push(new BABYLON.Vector3(radius * Math.cos(theta) + -flatLength / 2_co_ radius * Math.sin(theta)_co_ 0))_sm_\n    }\n    var leftHalfCircle _eq_ new BABYLON.Curve3(leftHalfCirclePath)_sm_\n\n    // create right side half-circle for the oval\n    var rightHalfCirclePath _eq_ []_sm_\n    for(var theta _eq_ -Math.PI / 2_sm_ theta &lt_sm_ Math.PI / 2_sm_ theta +_eq_ deltaTheta ) {\n        rightHalfCirclePath.push(new BABYLON.Vector3(radius * Math.cos(theta) + +flatLength / 2_co_ radius * Math.sin(theta)_co_ 0))_sm_\n    }\n    var rightHalfCircle _eq_ new BABYLON.Curve3(rightHalfCirclePath)_sm_\n\n    // join the paths together into myShape\n    // join leftHalfCircle_co_ line1_co_ line2_co_ rightHalfCircle\n    // I have to figure this part out_co_ how to get points from shape and join them\n    var myShape _eq_ []_sm_\n    for (var i in line1Points) {\n        myShape.push(line1Points[i])_sm_\n    }\n    var points _eq_ leftHalfCircle.getPoints()_sm_\n    for (var i in points) {\n        myShape.push(points[i])_sm_\n    }\n    for (var i in line2Points) {\n        myShape.push(line2Points[i])_sm_\n    }\n    var points _eq_ rightHalfCircle.getPoints()_sm_\n    for (var i in points) {\n        myShape.push(points[i])_sm_\n    }\n    myShape.push(line1Points[0])_sm_ // Close the shape back to the starting point\n\n    // Define the extrusion path for depth of 1 unit\n    var myPath _eq_ [\n        new BABYLON.Vector3(0_co_ 0_co_ 0)_co_\n        new BABYLON.Vector3(0_co_ 0_co_ 1)\n    ]_sm_\n\n    // creates an instance of a Custom Extruded Shape\n    var extruded _eq_ BABYLON.MeshBuilder.ExtrudeShapeCustom(_qt_ext_qt__co_ {shape_dd_ myShape_co_ path_dd_ myPath_co_ sideOrientation_dd_ BABYLON.Mesh.DOUBLESIDE}_co_ scene)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tIs there an easier way to do this using an existing Babylon.js mesh (I have been unable to find one)_co_ or is there another much simplerÂ way to do this that anyone is aware of?Â  Also_co_ would I need to build the caps of the extruded object as 2D planes to put on the top and bottom_co_ or can that be done in another way?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTim\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"timm","Date":"2018-09-16T04:12:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI have a minor update.Â  I was able to get the caps working_co_ didn_t_t realize there was a cap option to extrudeÂ _lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ˜ƒ_lt_/span_gt_Â  Whoever added that_co_ thank you!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI cannot directly render edges on the mesh for the outer shape as it shows edges on all of the internal triangles.Â  You can uncomment the enableEdgesRendering() statement at the bottom of this first playground to see the effect._lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#3ZAKGF%237_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#3ZAKGF#7_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI created a second playground_co_ where I built the curves for the caps at 1 dimensional lines then enabled Edge rendering on those lines.Â  It seems to work but does have some artifact issues on edge thickness._lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#G1MBAL%232_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#G1MBAL#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI would still be curious to know if there is a more elegant_co_ shorter way to do this with existing Babylon.js methods_co_ if not then this is a good playground to get started with if you want a similar flat oval object.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-09-16T13:24:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/32800-timm/?do_eq_hovercard_qt_ data-mentionid_eq__qt_32800_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/32800-timm/_qt_ rel_eq__qt__qt__gt_@timm_lt_/a_gt_ and welcome to the forum from me. Well done with your solution. Here is an _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#G1MBAL%236_qt_ rel_eq__qt_external nofollow_qt__gt_alternative_lt_/a_gt_ using _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/how_to/parametric_shapes#extruded-non-regular-polygon_qt_ rel_eq__qt_external nofollow_qt__gt_extrudePolygon_lt_/a_gt_ but probably no better than yours as it has a couple of disadvantages\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. Edge rendering round circles shows up\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. You can see in the docs that for non-playground use extrudePolygon requires Earcut to be installed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso note that the path for the polygon needs to be in XZ plane\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"timm","Date":"2018-09-16T21:33:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThank you @JohnK for putting that example together.Â  I took the Polygon that you did and added it as the an overlay to draw text to the front side of the object as an embedded innerTrack of smaller size.Â  It is starting to come out really nice.Â  Two issues I am running into that I could use some advice on from the community_dd_\n_lt_/p_gt_\n\n_lt_ol_gt_\n\t_lt_li_gt_\n\t\tAutosizing the text to fit the object is somewhat trial and error in that I have had to play with two sets of variables_co_ one is the pixel size to use for the text and the other is the height/width of the dynamic text texture.Â  It would be nice if there was a cleaner way to do this so that it would scale to different sizes of the object without hardcoding.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tThis one is quite strange.Â  When I added the innerTrack (2D polygon) in front of the outerTrack (3D extruded shape) I ran into two issues.\n\t\t_lt_ol_gt_\n\t\t\t_lt_li_gt_\n\t\t\t\tOne is that I need to move the 2D polygon just slightly in front of the 3D track or the two surfaces alias into each other.Â  So I did a tiny offset of -0.001 to prevent them from being exactly in the same plane.Â  Is there are better way to fix this.Â  In HTML/CSS there is a z-index property I use forÂ  this.Â  Is there a better way to achieve this in Babylon.js than what I have done with the small offset?\n\t\t\t_lt_/li_gt_\n\t\t\t_lt_li_gt_\n\t\t\t\tThis one is really strange.Â  For some reason when I add the 2D shape in front of the 3D shape_co_ the edges from the BACK of 3D shape are visible_co_ even though they shouldn_t_t be (I think?).Â  However if you get rid of the 2D innerTrack then the back endgesÂ don_t_t render through the 3D object.\n\t\t\t_lt_/li_gt_\n\t\t_lt_/ol_gt_\n\t_lt_/li_gt_\n_lt_/ol_gt_\n\n_lt_div_gt_\n\tYou can see it in this playground example I put together.Â  If you disable the 2D innerTrack the edges will not render through the 3D outerTrack._lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#G1MBAL%2310_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#G1MBAL#10_lt_/a_gt_\n_lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"timm","Date":"2018-09-16T21:45:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJust to clarify_co_ the edges are from a 1D shape that are located at the front and back of the 3D shape.Â  These 1D shapes are there only to enableEdges() as enabling Edges on the extruded shape did not provide the desired effect (there were too many edges for all of the smaller arcs of the circle).Â  The 3D object that is extruded has a high alpha (0.9) but the 1D object with the edge does not come through that object strongly since the alpha is so high.Â  However_co_ when putting a text 2D object in front of the 3D object_co_ the edges come through very strongly_co_ it is as if adding the 2D shape in front of the 2D shape causes the alpha of that 3D shape to be ignored.Â  If you set the alpha of the 3D shape to 1.0_co_ this does not happen_co_ but set it to a high number just under 1.0_co_ such as 0.99999 and the edge comes through just as if it was 0.0000._lt_br /_gt_\n\t_lt_br /_gt_\n\tI could probably put together a simpler Playground to show this effect if that would help_co_ but I am guessing somebody who is more experienced with Babylon.js materials than I knows why this occurs.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-09-20T10:08:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/32800-timm/?do_eq_hovercard_qt_ data-mentionid_eq__qt_32800_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/32800-timm/_qt_ rel_eq__qt__qt__gt_@timm_lt_/a_gt_ Reference your questions above\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. Do not have an immediate answer but have an idea I will try later\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2.1 In some sense by using a tiny offset you are doing in 3D the HTML/CSS equivalent of setting a different z-index_co_ so yes this is the way to do it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2.2 It is because you are setting the _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/how_to/more_materials#opacity_qt_ rel_eq__qt_external nofollow_qt__gt_opacityTexture_lt_/a_gt_ of yourÂ  textMaterial based on your textTexture which is a black and white image making the white areas transparent_co_ just remove line 148 _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#G1MBAL%2319_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#G1MBAL#19_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-09-20T13:22:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/32800-timm/?do_eq_hovercard_qt_ data-mentionid_eq__qt_32800_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/32800-timm/_qt_ rel_eq__qt__qt__gt_@timm_lt_/a_gt_ as promised I did some work onÂ  question 1 _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#G1MBAL%2320_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#G1MBAL#20_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLines 140 to 148 use a temporary dynamictexture to calculate a ratio to use with the width of the dynamictexture and the ovalÂ  in order to find a suitable font size. Probably you could use just the textTexture dynamictexture once to find ratio and then drawText on it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEDIT yes you can _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#G1MBAL%2321_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#G1MBAL#21_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"timm","Date":"2018-09-21T17:43:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t@JohnK.Â  Thanks so much for posting that solution for the text.Â  That is brilliant!Â  I have moved this to solved.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI understand that setting the opacityTexture fixes the problem_co_ the issue I am having is I don_t_t understand why.Â  I put together another rendering that shows the behavior.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe top oval had no text overlay_co_ the middle oval has the text overlay with opacityTexture set_co_ and the bottom oval has the text overlay without opacityTexture set.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#G1MBAL%2322_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#G1MBAL#22_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat I don_t_t understand is why adding a text overlay with an opacityTexture makes the edge BRIGHTER and come through the rest of the 3D oval versus the case with no text overlay.Â  Also_co_ why wouldn_t_t the rest of the 3D oval render through the opacity texture versus only the 2D edge.Â  Â It seems like the opacityTexture setting completely ignores the 3D shape behind it (i.e. the main outer oval) but not the 2D shape behind it (i.e. the rear outer edge).Â  I would have expected opacityTexture to allow the combination of 2D and 3D shapes behind it to render through which would mean that rear edge would not be so bright and the other 3D caps would show up in the text texture as well.Â  I could put together a simpler example to show this behavior if this question doesn_t_t make any sense.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for the help on this and with the dynamic text resizing!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"timm","Date":"2018-09-22T02:25:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOK_co_ I built a simpler example to demonstrate the behavior.Â  It looks like edges of objects render through a text material opacity texture but nothing else does.Â  Here is a playground that demonstrates this.Â  Any idea why they come through but none of the other colors do?Â  Is this the expected behavior?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#CYVB8N%233_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#CYVB8N#3_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-09-22T08:01:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSorry cannot answer that. Suggest as this topic is now marked solved and the question is different you ask a new question about edge rendering and opacity texture for more responses.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]