[{"Owner":"jerome","Date":"2015-06-27T08:55:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I will need to tweak the SPS code and to deeply look for any un-needed memory allocations._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_To update the SPS mesh_co_ I use the _lt_em_gt_getVerticesData(PositionKind)_lt_/em_gt_ method. I hacked the BJS code to understand whether this function returned a new array each call. I understood it didn_t_t._lt_/p_gt__lt_p_gt_Maybe I am wrong._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So I would like to be sure it doesn_t_t_co_ please. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2015-06-27T10:55:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m new to this codebase_co_ but it appears you are fine unless you are setting the the _lt_span_gt_copyWhenShared param to true._lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-06-28T08:24:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Looks like it ultimately calls vertexBuffer.getData_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_public getData()_dd_ number[] {   return this._data_sm_}_lt_/pre_gt__lt_p_gt_Incidentally_co_ I recently found out that chrome has a devtools setting to make the heap profiler record all allocations_co_ so you can get an idea of where memory_t_s being allocated even if it_t_s collected immediately_co_ which would make it really obvious if big arrays are being created and destroyed every frame._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Random side note_dd_ using this feature_co_ I noticed that even for very simple scenes_co_ StandardMaterial.isReady() churns through a lot of memory. It looks like it_t_s making great big arrays full of strings every frame_co_ so I guess that_t_s why. Anyway in the thing I_t_m working on_co_ standard Babylon code churns through a lot more temp variables than the user code._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2015-06-28T11:27:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_87398_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_15416_qt_ data-ipsquote-username_eq__qt_fenomas_qt_ data-cite_eq__qt_fenomas_qt_ data-ipsquote-timestamp_eq__qt_1435479844_qt__gt__lt_div_gt__lt_div_gt_Random side note_dd_ using this feature_co_ I noticed that even for very simple scenes_co_ StandardMaterial.isReady() churns through a lot of memory. It looks like it_t_s making great big arrays full of strings every frame_co_ so I guess that_t_s why. Anyway in the thing I_t_m working on_co_ standard Babylon code churns through a lot more temp variables than the user code._lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m seeing a few places in that function where they are instantiating arrays.  I wonder why they didn_t_t make those member variables and reset the length to 0 whenever isReady is called._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Edit_dd_  Maybe they weren_t_t expecting this function to get hit every frame.  There is a _wasPreviouslyReady property that might not be getting set correctly._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Edit 2_dd_  There is a checkReadyOnlyOnce property that you can set.  I wonder when it is appropriate to use that._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-28T12:10:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yep_co_ many functions (like computeNormals) weren_t_t initially intended to be called in the render loop but only to build/set things._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Arf_co_ this is my fault _dd_ I want to distort everything each frame  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]