[{"Owner":"Zagrava","Date":"2018-11-02T11:18:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIn every game you have entities (players_co_ mobs)_co_ they almost always have some attributes_dd_ it can be an array of skills_co_ hp_co_ speed_co_ all of that very common game logic stuff. Most likely during a game process_co_ these attributes will change_dd_ an array will be pushed/popped_co_ hp will be changed and so on. I am going to use Babylon on the server side (using NullEngine) as a physics engine. But I am also curious can it help me with this very common game logic stuff that I have described. I glanced through the docs but haven_t_t seen anything that I want yet.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDoes this functionality exist in game engines at all? I am talking about helping with common game logic stuff. It should be_co_ right? Does Babylon have it? And by the way what do you think about the idea of using Babylon on the server?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-11-02T14:46:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello and welcome _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_In babylon.js you have multiple options to store game data_dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- you can use entity.metadata and save whatever you want here (recommended solution)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- you can use tags_dd_Â _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/resources/tags_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/resources/tags_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- perhaps even behaviors_dd_Â _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/features/behaviour_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/features/behaviour_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Zagrava","Date":"2018-11-02T14:51:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_233584_qt_ data-ipsquote-contentid_eq__qt_41007_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1541170004_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 minute ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tHello and welcome _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_span_gt_In babylon.js you have multiple options to store game data_dd__lt_/span_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t- you can use entity.metadata and save whatever you want here (recommended solution)\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t- you can use tags_dd_Â _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/resources/tags_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/resources/tags_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t- perhaps even behaviors_dd_Â _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/features/behaviour_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/features/behaviour_lt_/a_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThanks! Glad to be in your community! But what do you thinkÂ _lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_about the idea of using Babylon on the server? Will it work if I let_t_s say use _lt_strong_gt_PlayFab_lt_/strong_gt_ as _lt_strong_gt_Baas_lt_/strong_gt__co_ and _lt_strong_gt_Babylon_lt_/strong_gt_ or maybe even _lt_strong_gt_Playcanvas _lt_/strong_gt_on the client side?_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-11-02T14:54:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYes no problem_co_ a lot of people already did it\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Zagrava","Date":"2018-11-02T15:04:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_233589_qt_ data-ipsquote-contentid_eq__qt_41007_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1541170441_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t9 minutes ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tYes no problem_co_ a lot of people already did it\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThank you so much! If you have time_co_ can you give me more info about games that use it like that? How do they use? How can I contact them? Do they use Babylon also on the client? Do they use Playfab? Don_t_t want to be annoying_co_ I just want to have all the info I can gather. _lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ˜€_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-11-02T18:03:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/33271-zagrava/?do_eq_hovercard_qt_ data-mentionid_eq__qt_33271_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/33271-zagrava/_qt_ rel_eq__qt__qt__gt_@Zagrava_lt_/a_gt_ and welcome from me. One thing to try would be to do search for _lt_strong_gt_multiplayer_lt_/strong_gt_ in the following sub-forums of the Babylon.js forum_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnnouncements\n_lt_/p_gt_\n\n_lt_p_gt_\n\tQuestions and Answers\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDemos and Projects\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMake sure you select the _lt_em_gt_This Forum_lt_/em_gt_ radio button before searching each sub-forum.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor some reason trying to search with _lt_em_gt_This Forum_lt_/em_gt_ selectedÂ  in the overarching Babylon.js forum leads to no results\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Spankied","Date":"2018-11-04T20:56:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m working on an ECS. You can checkout code _lt_a href_eq__qt_https_dd_//github.com/Spankyed/sched-proto_qt_ rel_eq__qt_external nofollow_qt__gt_here_lt_/a_gt_. Below is a snippet of how its structured.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_class Entity {\n  foo() {\n    console.log(_t_foo from Entity_t_)_sm_\n  }\n}\n\nEntity.with _eq_ function (...components) { \n    return components.reduce((base_co_ component) _eq_&gt_sm_ component(base)_co_ this)_sm_\n}\n\n\nlet ActionComponent _eq_ (base) _eq_&gt_sm_ class extends base {  \n  foo() {\n    console.log(_t_foo from ActionComponent_t_)_sm_\n    if (super.foo) super.foo()_sm_\n  }\n}_sm_\n\n\nlet NavigationComponent _eq_ (base) _eq_&gt_sm_ class extends base {  \n  foo() {\n    console.log(_t_foo from NavigationComponent_t_)_sm_\n    if (super.foo) super.foo()_sm_\n  }\n}_sm_\n\n\nclass Player extends Entity.with(ActionComponent_co_ NavigationComponent)  {  \n  foo() {\n    console.log(_t_foo from Player_t_)_sm_\n    super.foo()_sm_\n  }\n}\n\nnew Player().foo()_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"timetocode","Date":"2018-11-05T04:37:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m sure its a matter of taste_co_ but personally I like to keep the bulk of my game logic outside of any other engine. I just use the engine features a la carte. Here_t_s a sample entity from a multiplayer game I_t_m working on now.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_class PlayerCharacter {\n    constructor(scene) {\n        this.mesh _eq_ new BABYLON.Mesh(_t_dummy_t__co_ scene)\n        this.mesh.ellipsoid _eq_ new BABYLON.Vector3(1_co_ 4_co_ 1)       \n\n        this.hp _eq_ 100\n        this.kevlar _eq_ 25\n        this.likesCats _eq_ true\n        this.acceleration _eq_ 25\n        this.recoilAmount _eq_ 0\n        this.x _eq_ 1\n        this.z _eq_ 1\n        this.y _eq_ 20\n        this.velocity _eq_ new BABYLON.Vector3(0_co_ 0_co_ 0)\n\n        this.weaponSystem _eq_ new CooldownElement(0.1)\n        this.jumpSystem _eq_ new CooldownElement(0.5)\n\n        this.scene _eq_ scene\n    }\n\n    get x() { return this.mesh.position.x }\n    set x(value) { this.mesh.position.x _eq_ value }\n\n    get y() { return this.mesh.position.y }\n    set y(value) { this.mesh.position.y _eq_ value }\n\n    get z() { return this.mesh.position.z }\n    set z(value) { this.mesh.position.z _eq_ value }\n\n    update(delta) {\n       /* skipped */\n    }\n\n    processPlayerCommand(command) {\n        if (command.primary) {\n            if (this.weaponSystem.isOffCooldown()) {\n                this.weaponSystem.use()\n                /* skipped_dd_ code that casts a ray through\n                 * the scene and does damage to other players */\n            }\n        }\n\n        this.weaponSystem.update(command.delta)\n        this.jumpSystem.update(command.delta)\n  \n        if (command.forward) {  }\n        if (command.backward) {  }\n        if (command.left) { }\n        if (command.right) {  }\n\n        /* skipped_dd_ moving the player collisions_co_ jumping_co_ external forces_co_ etc */\n    }\n    takeDamage(amount) { /* does what you would think */\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tAll I_t_m really trying to show with the pseudo code is that this class just has whatever properties I want and it uses Mesh_co_ Scene_co_ and Vector3 where it needs to. This as opposed to subclassing an entity from some engine_co_ or a mesh from babylon.Â \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis game uses NullEngine on the server where it creates objects that use either the real meshes or dummy meshes and ellipsoids depending on which collisions I care about. On the client it is just normal Babylon stuff. It uses websockets_co_ and sends primarily the position xyz and rotation xyz of the players moving around. It also sends some messages when a player fires a shot so that the other players can draw it. Both client and server just load the same map when they start up.Â  I_t_m a network programmer so I may have drastically oversimplified some things_co_ and I don_t_t mean to suggest that programming a multiplayer first person game isÂ easy_co_Â  but it is definitely possible and NullEngine helps.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDepending what you mean by game logic babylon can be more or less involved. I_t_m keeping it *less* involved deliberately_co_ but still I have big sections of code surrounding collisions and animations that are babylon-centric. Entity management I do myself.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]