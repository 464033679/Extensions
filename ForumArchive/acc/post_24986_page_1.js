[{"Owner":"JCPalmer","Date":"2016-09-05T17:52:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI looked around for an example of FireMaterial_co_ but no luck.  I see a _lt_a href_eq__qt_http_dd_//www.babylonjs.com/Demos/FireMaterial/_qt_ rel_eq__qt_external nofollow_qt__gt_candle_lt_/a_gt__co_ but not a place where the source for this exists.  I know there is a search-able playground list_co_ but saw no search button on the PG.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI coded something up based on setting properties based on what its Parse loaded.  I did not do any adds of textures.  Is it absolutely required?  Basically_co_ I wanted to a special effect where a mesh appears on a scene briefly on fire.  The mesh may or may not have a UV.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor this all I get is a white solid (with 50% alpha) for 250 millis.  Does this even sound doable?\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_/// &lt_sm_reference path_eq__qt_./Mesh.ts_qt_/&gt_sm_\n/// &lt_sm_reference path_eq__qt_./queue/MotionEvent.ts_qt_/&gt_sm_\n/// &lt_sm_reference path_eq__qt_./queue/EventSeries.ts_qt_/&gt_sm_\nmodule QI {\n    export class FireEntrance extends QI.Mesh{\n        // nothing to do in constructor_co_ so leave it to super\n        \n        private _inlineSound _dd_ BABYLON.Sound_sm_ // todo\n        \n        /** @override */\n        public performCustomGrandEntrance() _dd_ void {\n            if (!BABYLON.FireMaterial) throw _qt_QI.FireEntrance_dd_  Fire Material library not found_qt__sm_\n            var materialHold _eq_ this.material_sm_\n            \n            var fire _eq_ new BABYLON.FireMaterial(_qt_Fire Entrance_qt__co_ this.getScene() )_sm_\n            fire.diffuseColor _eq_ new BABYLON.Color3(0.8_co_ 0.1_co_ 0)_sm_\n            fire.speed _eq_ 1.0_sm_\n            fire.alpha _eq_ 0.5_sm_\n//            fire.checkReadyOnlyOnce _eq_ true_sm_\n            \n            // diffuseTexture_co_ distortionTexture_co_ opacityTexture\n            \n            this.material _eq_ fire_sm_\n            \n            // queue a return to actual material\n            var ref _eq_ this_sm_\n            var series _eq_ new EventSeries([\n                function(){ref.isVisible _eq_ true_sm_}_co_   // make visible\n                new Stall(250_co_ this._inlineSound)_co_  // stall for a while_co_ starting sound\n                function(){\n                    // resume with original material &amp_sm_ make any children visible as well\n                    ref.material _eq_ materialHold_sm_\n                    ref.makeVisible(true)_sm_\n\n                    // eliminate resources\n                    fire.dispose()_sm_                  \n                    // this._inlineSound.dispose()_sm_\n                }\n            ])_sm_\n            this.queueEventSeries(series)_sm_\n        }\n    }\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2016-09-05T18:05:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYou will find information and examples in the BJS documentation under the Extensions heading. The PG search facility is found using the Playground heading in the BJS documentation. Note as fireMaterial is an extension you need to add the code to your project.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-09-05T18:21:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThanks.  Yes_co_ I knew FireMaterial was its own JS file_co_ hence the check &amp_sm_ throwing exception above.  I thought _t_Extensions_t_ was something else_co_ so I never clicked it before.  Have _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#21IIM9%231_qt_ rel_eq__qt_external nofollow_qt__gt_it _lt_/a_gt_now.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-09-05T21:05:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tEpilogue_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI got the 3 fire textures from the _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Samples/tree/master/Assets/fire_qt_ rel_eq__qt_external nofollow_qt__gt_repo_lt_/a_gt_. I converted them to jpegs_co_  then to base64_co_ and in-lined them into source code.  When I applied the fire material to the mesh_co_ it was kind of spotty_co_ shown at bottom.  I also tried adding a plane to display the fire.  The fire was opaque_co_ so the plane was placed in front of mesh_co_ but even with billboard mode did not always cover.  Here is a video _lt_a class_eq__qt_ipsAttachLink_qt_ href_eq__qt_//www.html5gamedevs.com/applications/core/interface/file/attachment.php?id_eq_9362_qt_ data-fileid_eq__qt_9362_qt_ rel_eq__qt__qt__gt_fire entrance.avi_lt_/a_gt_  (length due to operating controls)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPerhaps if I did not just rip off the textures_co_ I could have something that was worthy of publishing.  Either way it would not be in QueuedInterpolation extension itself_co_ as it doubled the min.js file to 87 kb due to the textures.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_09/Selection_007.jpg.f9043ccdec0b3c6eee6f8c333eef8374.jpg_qt_ data-fileid_eq__qt_9361_qt_ rel_eq__qt__qt__gt__lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_9361_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_09/Selection_007.thumb.jpg.b7b1111f0c76623be8c0192202e6fc1b.jpg_qt_ alt_eq__qt_Selection_007.jpg_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]