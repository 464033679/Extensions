[{"Owner":"dbawel","Date":"2017-03-01T06:13:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5482_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/_qt_ rel_eq__qt__qt__gt_@davrous_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn the past year I_t_ve and others have seen a huge shift to Typescript. Why? In my opinion it is only creating a gap between native JS and those who might wish to use a wrap-around language - which has far less advantages than native WebGL. And for the future_co_ will create serious limitations and divisions between users. Please explain the advantage to .TS files in the Github src directory of recent versions of BJS - if you can come up with ANY good reasons. Sorry if this sounds a bit harsh_co_ but I_t_m having issues working with BJS for the first time in more than 2 years due to reading and working with Typescript.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gryff","Date":"2017-03-01T07:32:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_165460_qt_ data-ipsquote-contentid_eq__qt_28773_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1488348821_qt_ data-ipsquote-userid_eq__qt_11286_qt_ data-ipsquote-username_eq__qt_dbawel_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ dbawel said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tIn the past year I_t_ve and others have seen a huge shift to Typescript. Why?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tWell David - given the background and connections of the BJS originators and developers_co_ a quick look at this wikipedia entry for _lt_a href_eq__qt_https_dd_//en.wikipedia.org/wiki/TypeScript_qt_ rel_eq__qt_external nofollow_qt__gt_Typescript_lt_/a_gt_ might explain why.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tQuote\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tTypeScript is a free and open-source programming language  developed and maintained by Microsoft\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tAlso note the line that says_dd_\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tQuote\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tTypeScript is included as a first-class programming language in Microsoft Visual Studio 2013\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tWhat the BJS developers use every day - or perhaps later versions?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tGiven that javascript is hard enough for me_co_ I_t_m not sure that I am happy with the direction either.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tcheers_co_ gryff_dd_ _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"inteja","Date":"2017-03-01T07:47:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tPersonally_co_ BJS being Typescript is one of the core reasons that I was drawn to it_co_ and I_t_ve been using JS for 20 years. After all that time I still dislike javascript_t_s idiosyncrasies. TS is cleaner and lets me use the latest bleeding edge features of ES6 right now_co_ with type checking to boot. I value the direction the BJS project is headed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI don_t_t really see what the issue is. This is the direction JS is headed anyway. Like Babel_co_ TS is just a great way to utilise the latest and greatest ES6 syntax now without sacrificing broad compatibility. Complaining about it just seems like you don_t_t want JS to change at all_co_ ever. But that_t_s a different discussion.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Kesshi","Date":"2017-03-01T08:30:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tFor me Typescript was also one of the main reasons to use BabylonJs instead of ThreeJs._lt_br /_gt_\n\tI use BJS for commercial projects. That means i need to deliver robust and reliable code. I would not use plain JavaScript for big projects. Especially if different people working at the same code._lt_br /_gt_\n\tThe type checking_co_ the language features and the IDE support you get with TypeScript (i use VsCode) makes development much easier and faster._lt_br /_gt_\n\tOne example would be refactoring. Lets say you rename a function or you change the data type of a variable. With plain JavaScript its very easy that you miss to adjust some code and later you get a problem in the released project._lt_br /_gt_\n\tWith typescript you will get a compile error right away._lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"davrous","Date":"2017-03-01T10:15:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_I_t_m going to answer that as I_t_m the one who forced _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ to switch to TypeScript._lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_First_co_ TypeScript is _qt_just_qt_ a superset of JavaScript_co_ adding types and supporting future features of ECMAScript by transpiling down to ES5 or ES6. This means that we don_t_t break anything with regular users that will just use the compiled JS version in ES5 or ES6 and will never see it comes from TypeScript. _lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_Thanks to the switch we_t_ve made 3 years ago_co_ we_t_ve managed to find bugs that were just under our eyes and difficult to find in plain JavaScript and we_t_ve also managed to boost our productivity on the engine_co_ which is good for us and our community/customers. _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ has done a great article on that_dd_ _lt_a href_eq__qt_https_dd_//www.eternalcoding.com/?p_eq_103_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.eternalcoding.com/?p_eq_103_lt_/a_gt__lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_On my side_co_ 3 years ago_co_ I was also concerned on the fact we were spending a lot of time answering basic questions of our users_co_ trying to understand if there was a bug in their code or in our code. All this time was our spare time and wasn_t_t used to improve the engine. I_t_ve then started to discuss with _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ on ways to solve that and again TypeScript was a good candidate. Why? Again_co_ thanks to the types exposed_co_ I’ve discovered great possibilities such as the TypeScript playground_dd_ _lt_a href_eq__qt_http_dd_//www.typescriptlang.org/play/index.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.typescriptlang.org/play/index.html_lt_/a_gt_ _lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_I’ve then told to _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ we could do something similar_co_ having autocompletion in the browser_co_ building some basic sample codes to help our users_co_ learning by live discovering the API. Deltakosh ended up building a much better playground with great features such as saving your code to share it with your colleagues or on the forum for review_co_ downloading the ZIP_co_ etc. Something which would have been much more difficult without TypeScript. _lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_TypeScript also offers us to use future features of ES now to add clarity to our code_dd_ module_co_ class_co_ arrow functions_co_ generators_co_ async/await_co_ etc. Those are not TypeScript specifics. You will have to learn them to be able to write ES2016/ES2017 code anyway. _lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_Regarding the fact it comes from Microsoft_co_ this is really not what influenced us (everybody knows deltakosh and I are MSFTees). Deltakosh was even against at the beginning but quickly changed his mind when he discovered the potential behind without affecting our users. Even if it comes from Microsoft_co_ the web community enjoys TypeScript and other big companies such as Google is using it for Angular 2. _lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_TypeScript also offers another great benefit for us_dd_ we managed to attract talented developers such as _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/18979-nockawa/?do_eq_hovercard_qt_ data-mentionid_eq__qt_18979_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/18979-nockawa/_qt_ rel_eq__qt__qt__gt_@Nockawa_lt_/a_gt_ writing the awesome Canvas2D extension who was mainly a C# developer. C#_co_ C++ and Java developers tends to have difficulties understanding some paradigms of JS at the beginning such as the prototype oriented programming_co_ the classical issue with capturing this for closure_co_ writing module/class like with self-executed anonymous functions_co_ etc. TypeScript is hiding that by still generating perfectly written JavaScript under the hood. I tend to find TypeScript also better to work as a team._lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_At last_co_ as said before_co_ we managed to attract some customers using Babylon.js because it is written in TypeScript and you can them fully develop with the .ts version of our engine instead of the .js to have a full typed experience during your development process. _lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_Another great benefit_dd_ I can compile an ES6 (ES2015) or ES7 (ES2016) version today without changing a single line of code of Babylon. If we would be in plain JavaScript_co_ we would have been forced to rewrite everything to switch from ES3/ES5 to ES6 for instance. _lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span lang_eq__qt_en-us_qt_ xml_dd_lang_eq__qt_en-us_qt__gt_The only caveat is that it’s a bit more complex for contributors to the code to do PR to fix bugs or add features. But to be honest_co_ as said_co_ it’s just the JavaScript we will all use in 1 to 2 years. Except this small part_co_ TS doesn’t affect our users because it’s transparent for them_co_ we’re improving the quality of the code_co_ we’re going faster_co_ we’re attracting more diverse talented developers_co_ we’re ready for the future. I really don’t see where the problem is then. _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2017-03-01T10:58:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOne of the main reason for me is the type visibility. How many times I was asked by my team _dd_ _qt_what kind of object do I have to give to this constructor/function?_qt__lt_br /_gt_\n\tNow I just answer _t_check the definition file / check the doc_t_. It_t_s much more easier from a dev point of view.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you want to contribute to Babylon.js_co_ there are several articles available _dd_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t- _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/generals/how_to_start_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/generals/how_to_start_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/generals/setup_visualstudio_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/generals/setup_visualstudio_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- _lt_a href_eq__qt_http_dd_//pixelcodr.com/tutos/contribute/contribute.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//pixelcodr.com/tutos/contribute/contribute.html_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs Typescript is a superset of Javascript_co_ all the JS code you will write IS fully compatible. And _lt_strong_gt_we _lt_/strong_gt__lt_em_gt_(project admins and the whole forum family as DK said)_lt_/em_gt_ are at your entire disposal if you want advices and PR reviews about doing your updates the best possible way.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-03-01T11:07:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCool topic_co_ and good info and points.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor .ts_co_ I love it _lt_em_gt_and_lt_/em_gt_ hate it.  Right side of me loves it_co_ left side hates it.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tJS is a _qt_rubber_qt_ language_co_ a _qt_draw-in-mud-with-stick language_qt_... finger-painting... with few rules.  That_t_s why it is fun and quickly-accepted (easy) by bad/loose coders like me (children with power tools). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut_co_ computers have a _lt_u_gt_different version_lt_/u_gt_ of fun and easy... than humans do.  Typescript washes-off all the _qt_human_qt_ from the source code_co_ and makes the resulting JS be fun and easy... for the computer.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Just a quick reminder - current _lt_strong_gt_JS_lt_/strong_gt_ _lt_strong_gt_source _lt_/strong_gt_can be gotten from _lt_/span_gt__lt_a href_eq__qt_https_dd_//raw.githubusercontent.com/BabylonJS/Babylon.js/master/dist/babylon.2.5.max.js_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//raw.githubusercontent.com/BabylonJS/Babylon.js/master/dist/babylon.2.5.max.js_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(for hijacking/stealing needs)  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tIt is more difficult to find JS pieces_co_ but still works.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tGithub src folders are much cleaner/nicer_co_ with only .ts in them. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t(Wingy sprays some Bactine on _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/?do_eq_hovercard_qt_ data-mentionid_eq__qt_11286_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/_qt_ rel_eq__qt__qt__gt_@dbawel_lt_/a_gt__t_s stubbed toe_co_ sticks a muffin in his mouth_co_ and pushes him back out-of the farmhouse door... to continue playing with the other children.)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nockawa","Date":"2017-03-01T13:12:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_ve been programming since 1992_co_ I_t_ve seen many IDE_co_ many languages_co_ from pure assembly without  a debugger to C# with a full featured IDE_co_ also cross platform C++ 3D Engines_co_ scripting with LUA_co_ etc. A pretty wide spectrum.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEvery language has a purpose as well as their IDE. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor me (so it_t_s only my opinion) Javascript is in the category of script languages_co_ it_t_s suited for specific tasks and I don_t_t believe it_t_s suited for a medium/large scale project._lt_br /_gt_\n\tDuck typing is great for fast (and sometimes dirty) projects but it_t_s not suited for larger projects.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAt the end of the day it_t_s all a matter of productivity. Yes  you can do a medium/large scale project in Javascript_co_ but is it a good idea? Now that we have languages like TypeScript_co_ I really think it_t_s a no brainer._lt_br /_gt_\n\tI_t_ve spent many years coding without a debugger (ASM in protected mode)_co_ it drove me crazy to the point that I developed a debugger (long summer but one of the coolest things I_t_ve made)._lt_br /_gt_\n\tI_t_ve spent many years coding without intellisense and I bless the day I could use it in C++ with Visual Assist.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI would have never started a medium scale project without a typed language_co_ without intellisense_co_ without a debugger. A full features 3D Engine (now along with a 2D too) is at least a medium scale project._lt_br /_gt_\n\tI would have never contributed to babylon.js if it were a 100% JS project_co_ simply because I would have felt I wouldn_t_t be productive enough in such environment.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow I can understand the point of view of a user who is fine with developing in Javascript because he works on projects that are suited for that and that one day wants to contribute to babylon.js and realize it_t_s a different story._lt_br /_gt_\n\tIt _lt_strong_gt_is_lt_/strong_gt_ a different story_co_ you can_t_t transpose both experiences.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m not a web expert_co_ far from it_co_ but from my perspective I saw a paradigm shift that happened few years ago when most people/companies was doing javascript for the web because it_t_s everywhere and they realized it wasn_t_t suited anymore for the type of projects they were working on. We are no longer talking about few lines of script inside a HTML file_co_ but big projects that still need to run on all web browse but needed a suited language and tooling. That why typed language producing JS code was developed._lt_br /_gt_\n\tAnd for me the best proof of this shift is Angular_co_ the first version was in plain javascript and the second was made in TypeScript_co_ and it_t_s Google_co_ not Microsoft!_lt_br /_gt_\n\tThe team did that to be more productive and the great thing about it is that you are not surrendering the true nature of JS_co_ it_t_s still there if you want.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAt last _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/7026-gryff/?do_eq_hovercard_qt_ data-mentionid_eq__qt_7026_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/7026-gryff/_qt_ rel_eq__qt__qt__gt_@gryff_lt_/a_gt_ I would say your answer is not something that can be said in 2017... Unfortunately for you I think I_t_m the last guy of the Core Team using Visual Studio to dev on BJS_co_ everybody else are using VSCode or other IDE... This definition of TypeScript was true 3-4 years ago but TypeScript evolved a lot since then.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you guys are afraid of change I would recommend to find something else than IT/Dev_co_ because this is all about change and how we deal with it and embrace it_co_ otherwise you won_t_t last long... My 2 cents...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2017-03-01T16:23:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_165460_qt_ data-ipsquote-contentid_eq__qt_28773_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1488348821_qt_ data-ipsquote-userid_eq__qt_11286_qt_ data-ipsquote-username_eq__qt_dbawel_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t10 hours ago_co_ dbawel said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI_t_m having issues working with BJS for the first time in more than 2 years due to reading and working with Typescript.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tWhat are the issues?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-03-01T16:30:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/?do_eq_hovercard_qt_ data-mentionid_eq__qt_11286_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/_qt_ rel_eq__qt__qt__gt_@dbawel_lt_/a_gt_ Please let us know which issues you are facing. You know that we will do whatever it takes to help you\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-03-01T16:44:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI have not seen d.ts file mentioned yet.  This means in _lt_em_gt__lt_strong_gt_MY_lt_/strong_gt__lt_/em_gt_ code_co_ I can get the syntax of my calls to ANY other typescript written module (not just BJS) validated at transpile time.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ if it were not for Typescript_co_ we would not have a topic with people concerned that we are moving too fast.  Yes_co_ it puts more of a burden on people doing PR_t_s_co_ but that is more a first PR setup overhead.  Makes deciding to merge must more simple. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am on record on a topic way back_co_ where I said Typescript will not require transpilation in the future. Reason is Javascript is the biggest piece of shit I have ever seen_co_ and It_t_s also not truly multi-threadable without crude tricks like workers.  How_t_s that for harsh?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2017-03-02T05:25:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello All_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI personally have issues with going to GitHub and finding .ts files instead of standard JavaScript I can easily read and pull from. I have a backround in Visual Studio_co_ so I get it - however_co_ working in a superset of JavaScript (no matter how much you believe JavaScript might suck) is the most direct way in my opinion to accomplish my personal needs. And then there is the open source element which most often doesn_t_t comply. As and example_co_ use _lt_em_gt__lt_strong_gt_this.object_lt_/strong_gt__lt_/em_gt_ definition as an example. And then look at the other emerging work by many talented people who simply want to use strict code_co_ and not look for shortcuts. Again_co_ only my opinion_co_ but perhaps this is why we have so many posts on the BJS forum for how BJS is moving so quickly_co_ and so many people cannot keep up.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_em_gt_EDIT - And _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8492_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/_qt_ rel_eq__qt__qt__gt_@JCPalmer_lt_/a_gt_ - everything will change within 2 years_co_ and I_t_m sure you can still use typescript just fine - but might the BJS become obsolete? I hope not. And if you can predict the future_co_ then please use kindness to convince me that I am mis-guided._lt_/em_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"davrous","Date":"2017-03-02T09:12:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/?do_eq_hovercard_qt_ data-mentionid_eq__qt_11286_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/_qt_ rel_eq__qt__qt__gt_@dbawel_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTypeScript is not linked to Visual Studio or any Microsoft specific. I know a lot of people using it on Mac or Linux. It_t_s just a language that provide convenient ways to code.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tExcept that_co_ you know we_t_re really like you and we_t_ve been working together for a long time But I_t_m sorry I don_t_t get your point. What is the relationship between TypeScript and people. complaining we_t_re moving too fast (which is to me a huge joke)? How could TS make Babylon.js more absolete than JavaScript itself given that TS is just_co_ again_co_ some JavaScript + types! \n_lt_/p_gt_\n\n_lt_p_gt_\n\tTalking about Open Source contributions_co_ it_t_s truly better for us to have quality checked contributions thanks to the constraints of the language. And to be honest_co_ users complaining are almost always people using it our engine and not people writing code for it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m now going to be more direct. _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ and I_co_ as well as the core team_co_ start to be really affected by all negative feedback during the last weeks about the fact we_t_re moving too fast_co_ we_t_re using TypeScript_co_ we_t_re not updating (for free!!!) old samples for people_t_s own projects. Honestly_co_ those discussions are not constructive at all and lack from convincing arguments. We always have been listening to our community_co_ I_t_ve seen _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ spending so many of his nights and weekends implementing some users_t_ features requests that weren_t_t needed in our roadmap that I_t_ve tended to find all these bad feedback unfair.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDavid\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nockawa","Date":"2017-03-02T09:20:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_165643_qt_ data-ipsquote-contentid_eq__qt_28773_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1488432315_qt_ data-ipsquote-userid_eq__qt_11286_qt_ data-ipsquote-username_eq__qt_dbawel_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t3 hours ago_co_ dbawel said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI personally have issues with going to GitHub and finding .ts files instead of standard JavaScript I can easily read and pull from. I\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tA simple gulp command build the intermediate .js files_co_ it_t_s not something that hard_co_ right? When we_t_re contributing it was always a pain because once you compile bjs you end up with 170 modified files because the intermediate .js files were put under source control. And it_t_s a known good practice to _lt_em_gt_not_lt_/em_gt_ put intermediate files under source control. It_t_s a change for people _lt_em_gt_tweaking_lt_/em_gt_ bjs on their own_co_ but come on_co_ it_t_s simple _qt_npm install_qt_ _qt_gulp typescript_qt_ commands.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_165643_qt_ data-ipsquote-contentid_eq__qt_28773_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1488432315_qt_ data-ipsquote-userid_eq__qt_11286_qt_ data-ipsquote-username_eq__qt_dbawel_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t3 hours ago_co_ dbawel said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI have a backround in Visual Studio_co_ so I get it - however_co_ working in a superset of JavaScript (no matter how much you believe JavaScript might suck) is the most direct way in my opinion to accomplish my personal needs\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tFine_co_ but what do you need the intermediate .js files then ? Why don_t_t you use the babylon.max.js or the minified version instead?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_165643_qt_ data-ipsquote-contentid_eq__qt_28773_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1488432315_qt_ data-ipsquote-userid_eq__qt_11286_qt_ data-ipsquote-username_eq__qt_dbawel_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t3 hours ago_co_ dbawel said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tAnd then there is the open source element which most often doesn_t_t comply. As and example_co_ use _lt_em_gt__lt_strong_gt_this.object_lt_/strong_gt__lt_/em_gt_ definition as an example.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI_t_m sorry I don_t_t understand this_co_ can you elaborate please?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_165643_qt_ data-ipsquote-contentid_eq__qt_28773_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1488432315_qt_ data-ipsquote-userid_eq__qt_11286_qt_ data-ipsquote-username_eq__qt_dbawel_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t3 hours ago_co_ dbawel said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tAnd then look at the other emerging work by many talented people who simply want to use strict code_co_ and not look for shortcuts.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tSame here_co_ I don_t_t really understand this remark in the context of BJS_co_ can you elaborate a bit more?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"javalang","Date":"2017-03-02T09:49:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5482_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/_qt_ rel_eq__qt__qt__gt_@davrous_lt_/a_gt_ please see this discussion not too negative. In my case_co_ I_t_ve switched to typescript a few month ago because my JS knowledge ist_t_t so good as I come from the C#_co_C++_co_java and python world and typescript helped me a lot to neutralize some - in my opinion- odd specificas. To see all arguments here is for me a big confirmation that my decision was right.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn this sense_co_ even though this discussion is a bit needless_co_ it can have a positive impact _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tAgain_co_ thank you_co_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ and many_co_ many others for the good work_co_ this will for sure not overseen by the users.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2017-03-02T11:05:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI still don_t_t understand what the issue is. \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-03-02T12:54:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_165653_qt_ data-ipsquote-contentid_eq__qt_28773_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1488445951_qt_ data-ipsquote-userid_eq__qt_5482_qt_ data-ipsquote-username_eq__qt_davrous_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t4 hours ago_co_ davrous said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tWhat is the relationship between TypeScript and people. complaining we_t_re moving too fast (which is to me a huge joke)? How could TS make Babylon.js more absolete than JavaScript itself given that TS is just_co_ again_co_ some JavaScript + types!\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tHi guys!  I believe the relationship is in the (likely-) fact that JS... is MANY people_t_s first or only programming language.  It is the web programming language of-choice_co_ by far.  So TypeScript _qt_contaminated_qt_ the easiest and most accepted programming/scripting language ever (JS).  In doing that_co_ BJS lost a very large group of hobby-level programmers_co_ and potential future contributors.  There_t_s your relationship.  You/We took the general public_t_s #1 most popular_co_ easiest_co_ notepad-programmable language that LOTS of people learned SOME-OF (in order to tweak their web pages)... and separated that from BJS.  TypeScript made BJS source _qt_alien_qt_ to those people_co_ including me.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYes_co_ it is probably an unwarranted fear and feeling of extreme inconvenience_co_ but it is certainly not a joke.  The phenomena IS happening_co_ whether you choose to recognize it or not.  This is one of the reasons that folks (including me) ASK-for features instead of coding them ourselves.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMany types of people don_t_t want to work with shells_co_ NPM_co_ grunt_co_ gulp_co_ and other _qt_compiling_qt_ and _qt_generating_qt_.  There_t_s plenty of them in the BJS forum.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow_co_ nobody is bashing BJS_co_ nobody is bashing core programmer work accomplishments_co_ and nobody is saying that core programmers shouldn_t_t use what works best for them.  But I KNOW we lost _lt_em_gt_some_lt_/em_gt_ contributors when we went to pure TS.  We went from _qt_submit a JS function_qt_... to _qt_Get an IDE that does TypeScript_co_ learn TypeScript_co_ learn to compile things_qt_.  These are things that DIDN_t_T need to be learned... when working with pure JS.  They were already learned when folks learned primitive JS to tweak their websites.  JS _eq_ widely accepted/used.  TS _eq_ far less accepted/used.  We lost the advantage of JS familiarity that was already established by the web. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis all might be irrelevant.  The move to TS is likely a good idea and inevitable.  But if you think there was no newbie impact with that move_co_ you are mistaken (imho).  We gained some ease and popularity in one area_co_ and lost some ease and popularity in another area.  But_co_ when Deltakosh said _qt_just submit in JS and I will convert it to TS for you_qt_... that took some of the _qt_scared_qt_ away.  That helped.  He should say it more often.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tNewbies rarely know if a mod is a _qt_good idea_qt_ or not_co_ because they can_t_t see the far-reaching impact on the entire framework.  Between this situation_co_ and TypeScript_t_s dev environment from hell (when looked-at from noob perspective)_co_ new feature  _lt_strong_gt_requests_lt_/strong_gt_ will continue to outnumber new feature git submits.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPeople who dream-up features... are often not pro-coders.  They are scene assemblers.  If we keep telling users to setup a TypeScript dev environment_co_ code their feature request_co_ and submit a PR... for every time they ask about the plausibility-of_co_ or otherwise request a feature_co_ you are going to lose a whole lot of good ideas.  You_t_re also going to lose a whole lot of _qt_warm fuzzies_qt_ that COULD have been given to that idea-thinking-up user... for submitting that _qt_feature query_qt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe could have said _qt_Hey_co_ there_t_s an interesting idea._qt_ and then discuss_co_ talk about far-reaching impacts_co_ talk about what errors could happen with this new feature_co_ talk about alternatives_co_ talk about the BJS big picture.  Instead_co_ we say _qt_Can you submit a PR?_qt_  Sheeeeit.  Why not just blast the idea and user inclusion/participation excitement... with ice water from a firetruck hose.  Freeze that idea-spirit dead in its tracks.  Yay us!   SO much love for the puppies_co_ eh?  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tAre you/we trying to make BJS popular among _lt_u_gt_coders only_lt_/u_gt__co_ or are you after EVERYONE_co_ like me? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSometimes I think there should be a USERS forum and a CODERS forum.  Artists and storytellers and scene assemblers hang out in user forum.  Core-change ideas that come from the user-forum... would be nurtured_co_ with on-going discussion_co_ and a GENTLE introduction to _qt_If you would like to add the feature to core YOURSELF_co_ here_t_s the first few steps of the hundred steps needed to build and learn your TypeScript dev environment_qt_).   When people say _qt_Could you submit a PR?_qt_... and that PR requires learning git and setting up a TS dev environment_co_ you might as well have blasted them in the face with a shotgun.  (Not _lt_u_gt_every_lt_/u_gt_ situation is like that_co_ but SOME situations are so.  Do we care?)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCurrently_co_ in our coder_t_s forum... discussion is discouraged_co_ because big dogs dislike long English comments.  Not much nurturing is allowed_co_ or else big dogs won_t_t help later_co_ because the thread got too long.  So instead... _qt_Can you submit a PR?_qt_.  (_qt_Hey kid_co_ here_t_s a bucket of TypeScript ice water... that should cool you down for a few months!_qt_)  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  What is _qt_our job_qt_?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tsigh.  It_t_s not quite that bad_co_ of course.  Big dogs DO weigh plausibility of the idea.  Generally speaking_co_ an idea-proposer doesn_t_t get the _qt_can you submit a pr_qt_ line until after the idea has been deemed possible/plausible.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  We idea-proposers DO appreciate that feasibility quick-weighing_co_ and alternatives-to-modding advice.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  At least I do.  I like talking.  Others... not so much.  heh.     I REALLY like listening to big dogs talk.  That_t_s how we learn the big picture... but it_t_s not an easy story to tell.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPossibly later_co_ .ts dev environments will be load_t_n_t_go.  For now... they present a road bump.  That road bump is BIG to some people_co_ and no problem for others.  But if you think the road bump is not there_co_ or not big_co_ you_t_re fooling yourself.  The road bump IS big... to some.  Do we care about them?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2017-03-02T13:58:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tJavascript is Typescript.  If you want to submit a PR_co_ simply submit the javascript and the core team will work with you.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nockawa","Date":"2017-03-02T13:59:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCome on... when you know JS_co_ TypeScript is fairly easy to learn_co_ what_t_s the big deal? class_co_ properties_co_ interfaces (which are almost not used in BJS) and instances. If the very basics concepts of Object Oriented Programming are unknown to you_co_ spend couple of hours_co_ it_t_s not that hard...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor a project of this size_co_ we need a typed/safe language_co_ that_t_s all. I think it_t_s even not a debate_co_ before there was no debate also because the only choice were javascript and many teams suffered when they had to develop middle size projects.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI repeat it again_dd_ Javascript is a _lt_strong_gt_scripting_lt_/strong_gt_ language_co_ TypeScript is a _lt_strong_gt_programming_lt_/strong_gt_ language. Each language is a tool that is used to serve a specific purpose. This project need a programming language to ensure that we won_t_t break things everyday without realizing it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOk_co_ it_t_s harder to set up a development environment when programming with Type Script_co_ but we did _lt_strong_gt_everything_lt_/strong_gt_ we could to develop and document everything to make it as easy as possible.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYes_co_ people will struggle a bit at first_co_ but it_t_s like that _lt_strong_gt_for everything you learn!_lt_/strong_gt_ And we were always here to help people !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI don_t_t think we loose people due to TS_co_ people like _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/17014-masterk/?do_eq_hovercard_qt_ data-mentionid_eq__qt_17014_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/17014-masterk/_qt_ rel_eq__qt__qt__gt_@MasterK_lt_/a_gt_ _t_s team are all JS and they didn_t_t complain about BJS being TS. They even created many PR to fix/improve things_co_ so it means it_t_s possible. By the way you can check out their _lt_a href_eq__qt_https_dd_//apps.facebook.com/locotitans/_qt_ rel_eq__qt_external nofollow_qt__gt_game here_lt_/a_gt_   (if you have a Facebook account...) you_t_ll see what they could do with this lib. Same thing for _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/20501-numa/?do_eq_hovercard_qt_ data-mentionid_eq__qt_20501_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/20501-numa/_qt_ rel_eq__qt__qt__gt_@Numa_lt_/a_gt_ and _lt_a href_eq__qt_https_dd_//jig.space/_qt_ rel_eq__qt_external nofollow_qt__gt_JIG.space_lt_/a_gt_. I don_t_t see these people complaining and looks like to me they are pretty grateful of all the efforts we put through to help them. These are couple of example_co_ but you all know the list is long.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"davrous","Date":"2017-03-02T14:03:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWell_co_ I definitely think you_t_re wrong. And you obviously don_t_t know me when you_t_re suggesting I_t_m living in my world ignoring your point of view supposed to represent our community. I_t_m reading your point of view but I think it_t_s wrong. It_t_s not facts based and not convincing at all. _lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\tI_t_m very concerned about the usability of Babylon.js since the very beginning and we_t_ve spent of lot of energy &amp_sm_ creativity to make it attractive to various types of developers thanks to the choices we_t_ve made. Today_co_ I can clearly see it_t_s working great. It’s not always perfect_co_ we’re committed to make progressed but globally_co_ we’re really happy of the directions we took. _lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\tContributing to the core engine is another story. I_t_m seeing a lot of people complaining whereas I can_t_t see any major contribution to the engine from them. When I_t_m looking to this graph_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/graphs/contributors_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/graphs/contributors_lt_/a_gt__co_ I can see that the activity is stronger than ever talking about the contributions. And I don_t_t see any of the major contributors complaining about our choices_co_ speed of development or usage of TypeScript. _lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\tYou then have to think about various classes of people among our community_dd__lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t- Major contributors to the engine. We_t_re less than 20 guys_lt_br /_gt_\n\t- Developers using Babylon.js _lt_br /_gt_\n\t- Designer/Artist converting their work in Babylon.js_lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\tI_t_m often talking with developers using Babylon.js and they_t_re quite happy about it. TypeScript? It_t_s transparent for them_co_ most of them didn_t_t see we_t_re using it for 3 years. Going too fast? We_t_re paying so much attention to backward compatibility that they don_t_t care. We_t_ve got so many good features since 2.0_co_ it_t_s often more than enough for them. Optimization is there for a long time and Babylon.js is so stable that big companies are pushing big important sites/app based on that._lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\tGoing back to contribution_co_ core engine maintenance_co_ we have a duty of keeping a professional grade framework. This means discipline_co_ rules and good development skills. We can’t accept quick PR_co_ low quality code because “you know_co_ people are afraid of doing something better”. _lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\tWe_t_re not there to code for free any idea that might look interesting as a first see. Sorry to remind that to everybody but Babylon.js is a FREE OPEN SOURCE project. We’re not making money out of it. We_t_re passionate about it_co_ we love to see people building things on top of it_co_ making some money_co_ driving their business_co_ or simply sharing their passion of 3D with it. This makes us very proud. In the same way_co_ we’re very happy &amp_sm_ proud of our community sharing the bugs they’ve found_co_ helping us on the documentation_co_ suggesting interesting enhancements. _lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\tBut like anybody_co_ our time is precious_co_ we_t_ve got kids_co_ family_co_ some of us have very complex situations to manage you can’t even imagine. So_co_ I_t_m fed up of people complaining it_t_s _qt_too complex_qt_ for them where it_t_s obviously not. Most of them are hiding behind that because they want us (and to be honest most of the time _lt_span_gt__lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt__lt_/span_gt__lt_/span_gt_) to code that for them. _lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\t_lt_span_gt__lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ _lt_/span_gt__lt_/span_gt_has always been very kind on that but I won’t be anymore on those specific topics. _lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n_lt_p_gt_\n\tDavid_lt_/p_gt_\n_lt_p_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2017-03-02T14:05:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAs a naive and simple minded hobby BJS user who keeps looking at Typescript and saying to myself I really should learn this but can_t_t be bothered then I still think like _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4289-adam/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4289_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4289-adam/_qt_ rel_eq__qt__qt__gt_@adam_lt_/a_gt_ what is the issue?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTL_sm_DR\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo what are my reasons for the agreement?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor a start I can do anything I want with BJS using Javascript_co_ the engine is still accessible and downloadable in Javascript_co_ any code on the Playground accepts Javascript. OK there is one thing I cannot do which is add to the development of the engine directly because I have not learned Typescript. But I can still do it indirectly. Only yesterday I made a suggestion_co_ a very small one_co_ and said I couldn_t_t PR it because of my lack of Typescript and within the hour it was added to BJS by DK. However the suggestion would only require a very few additional lines of code and so DK could do it quite quickly. If I had a bigger idea for BJS then I am sure if I developed it with Javascript with appropriate comments and showed it working and it was seen to benefit the engine  then DK or someone would put it into Typescript.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor me to suggest just the idea for BJS it would have to be a major game changing idea that could be seen by BJS active (on the forum) users to be useful for them all for me to expect anyone to develop the idea instead of me. In a big commercial company if I came to the bosses with a good idea that the bosses liked they would then put me in charge of managing the development and check it at each stage. In other words it would still be my responsibility to see it through. This must be even more true in an open source project_co_ the core team will have projects they think are important and are developing and so will expect a minimum of commitment to idea development from anyone suggesting such an idea.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe have a TV programme here in the UK called _t_Dragons Den_t_ where people pitch money making ideas to 5 millionaire business people for investment. Every one who enters the den thinks their idea is so brilliant that they are bound to get investment. The few who do get investment have already put the graft in and shown that their idea is workable as a business.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MasterK","Date":"2017-03-03T02:15:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWhat a hot topic.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/18979-nockawa/?do_eq_hovercard_qt_ data-mentionid_eq__qt_18979_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/18979-nockawa/_qt_ rel_eq__qt__qt__gt_@Nockawa_lt_/a_gt_ talk about our game.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI also don_t_t like TS... I_t_m just numb to complain that...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe_t_r using pure JS. But I want to change to ES6 and maybe use Babel. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI don_t_t like use type. it remove JS_t_s freedom. I was using C++ for some years and I like C++ very much. and then i use LUA_co_ I find it really easy to code... and then I use JS_co_ and I know JS is much popular than LUA_co_ and i choose JS as my main language. They are free to write without type or other limit.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI tried three.js for some months and do some demo projects by three.js. And when i found BJS_co_ oh my god_co_ it_t_s definitely the best 3d js engine i_t_ve seen. And i soon change to BJS without any concern.(I throw my serveral months work of ThreeJs)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd I haven_t_t think issue about TS. i just use its JS code... It has not much effect.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have complain about TS. But I think the core team wont change it. so complain is no use..\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"unintellisense","Date":"2017-03-03T04:12:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m sorry a long time user of BJS is unhappy with the Typescript direction.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut I_t_m also sorry to hear that core contributors to BJS are getting bummed out from negative feedback_co_ that sucks.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHowever I will say personally that the fact that BJS is written in Typescript (let alone having decent typings_co_ using TS during my day job I am always excited when a npm module I learn about has @types _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_ ) was a huge attraction for me. I won_t_t try to evangelize anyone who isn_t_t sold on it_co_ but I love the development experience and the safety it affords. I am not quite to the point where I feel like I can contribute meaningfully to BJS (mainly because my 3D skills are poor)_co_ but I know that Typescript lets those who are sold on it be much more productive and produce better code as a result. Anyway_co_ my $0.02. Thanks again to everyone who makes BJS possible.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2017-03-03T06:44:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5482_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/_qt_ rel_eq__qt__qt__gt_@davrous_lt_/a_gt_ and _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ -\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy apologies for any opinions about using Typescript - as Babylon.js is a great framework. I will not comment any further on this_co_ and withdraw my opinions in the future as this is far too hostile an environment for me to continue. I will however continue to post my projects on GitHub and others whom I work with and have been extremely fortunate to have connected with on this fantastic forum. I expected to be permitted to provide personal opinions - especially if I stated so in advance_co_ and differ from others - so in light of the opposite_co_  I believe I need to leave now_sm_ and am out. We (my company) are launching applications at Weta and Lockheed Martin (finally) in the next 30 days and expanding fast - and I truly apriciate all of the efforts everyone is extending to the rapidly expanding framework. I suppose I simply am looking forward to a different future for babylon and a much more extensive coding process in my own opinion. So unfortunately_co_ you won_t_t be hearing from me much in the future_co_ and _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5482_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/_qt_ rel_eq__qt__qt__gt_@davrous_lt_/a_gt_ you have been extremely instrumental in my evolution into utilizing this framework. So goodbye for now_co_ as I don_t_t believe the proceeding posts are the way to advance the forum. And _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5482_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/_qt_ rel_eq__qt__qt__gt_@davrous_lt_/a_gt_ - I only have great respect for you._lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_ and _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ - I_t_ll miss you except perhaps I_t_ll continue personal messaging to keep you up to date.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ll do my best to keep DK abreast of what we_t_re working on_co_ as well as maintain a positive representation within publications for the BJS framework. And soon there will be recognition of the BJS framework on a level not yet known. I_t_ve done all I can do...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt__co_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5292-dad72/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5292_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5292-dad72/_qt_ rel_eq__qt__qt__gt_@Dad72_lt_/a_gt__co_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/7026-gryff/?do_eq_hovercard_qt_ data-mentionid_eq__qt_7026_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/7026-gryff/_qt_ rel_eq__qt__qt__gt_@gryff_lt_/a_gt__co_ and so MANY others - you_t_ll be sorrily missed. Let_t_s try and keep in touch other ways.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you all_co_ and Goodbye..._lt_img alt_eq__qt__dd_(_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ title_eq__qt__dd_(_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gryff","Date":"2017-03-03T07:19:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/?do_eq_hovercard_qt_ data-mentionid_eq__qt_11286_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/_qt_ rel_eq__qt__qt__gt_@dbawel_lt_/a_gt__sm_ and so will you David _lt_img alt_eq__qt__dd_(_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ title_eq__qt__dd_(_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tcheers_co_ gryff _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]