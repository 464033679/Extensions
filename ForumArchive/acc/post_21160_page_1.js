[{"Owner":"Srisub","Date":"2016-03-13T20:45:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI am busy porting over an app from THREE.js over to Babylon.js_co_ but am finding some surprising inefficiency and holes_co_ that can easily be addressed i believe..\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. In THREE.js_co_ i was able to simple say_dd_ item.findNodeByName( _qt_Foo_qt_ ) - and it would do the right thing whether it was a scene or a node. I saw the latest code for getDescendants(). Thanks for adding the directChildrenOnly flag and the predicate_co_ which i used in this case. I wrote a wrapper to mimic THREE_co_ by doing scene.findMeshByName or node.getDescendants(false_co_ predicate-check-for-name)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. Secondly the code for getMeshByName_co_ as well as getDescendants does a full-scan on ALL objects in the scene. Is that efficient. Wouldnt a recursive traversal of a children field in a node be necessary for efficiency?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-03-13T22:56:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. We support scene.getNodeByName. Did you see it?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. The full scan is required because a node does NOT have a list of children. We could think about adding it but then we need to handle .parent with a property in order to maintain the children list. I_t_m not opposed to it (just need to handle correctly dispose on children). I_t_ll give a try to improve this\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-03-14T02:31:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tDone_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/commit/a42d7f62df8f0b5b0bd24779e0e1be419c30b7ae_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/commit/a42d7f62df8f0b5b0bd24779e0e1be419c30b7ae_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you for the idea_lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Srisub","Date":"2016-03-14T03:36:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou rock_co_ Deltakosh! I just switched to Babylon from THREE just a few days ago_co_ and am already a fan. Hope to contribute soon..\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Kesshi","Date":"2016-03-14T08:48:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_120462_qt_ data-ipsquote-contentid_eq__qt_21160_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1457922705_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t6 hours ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tDone_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/commit/a42d7f62df8f0b5b0bd24779e0e1be419c30b7ae_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/commit/a42d7f62df8f0b5b0bd24779e0e1be419c30b7ae_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThank you for the idea_lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThank you_co_ this is exactly what i need. I can remove my own children caching from my code now._lt_br_gt_\n\tActually i was thinking to do a PR already for this but you are faster _dd_-D\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Kesshi","Date":"2016-03-14T09:14:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt__gt_@Deltakosh_lt_/a_gt_  Maybe you could use the new descandents handling to speed up AbstractMesh.dispose() because it also scans the full scene for child meshes.\n_lt_/p_gt_\n\n_lt_p_gt_\n\there_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.abstractMesh.ts#L1115_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.abstractMesh.ts#L1115_lt_/a_gt__lt_br_gt_\n\tand here_dd_  _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.abstractMesh.ts#L1122_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.abstractMesh.ts#L1122_lt_/a_gt__lt_br_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-03-14T16:04:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCorrect! I_t_ll fix it tonight\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-03-14T16:55:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tDone\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mwpowellhtx","Date":"2016-04-01T22:56:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSo... until this change goes into production_co_ I need to maintain instances of my _qt_children_qt_? It seems that JavaScript is garbage collecting them otherwise_co_ but I could be wrong.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDo you set _lt_em_gt_m.parent _eq_ s_lt_/em_gt__co_ where _lt_em_gt_m _lt_/em_gt_is my mesh_co_ and _lt_em_gt_s _lt_/em_gt_is my scene? If so_co_ that doesn_t_t work_co_ or I don_t_t have the most up to date package.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-04-02T23:19:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThere is no need to attach a mesh to a scene. It is already done automatically.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tyou can use Babylonjs 2.4 right now to get the update\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]