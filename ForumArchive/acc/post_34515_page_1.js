[{"Owner":"amethlex","Date":"2017-12-12T04:20:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi All_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m developing an React.js APP which consists of multiple pages. One of pages contains canvas_co_ scene and of course_co_ engine while other pages don_t_t. Naturally_co_ I need to dispose scene and stop engine when I am going to leave this page while init the scene and runRenderLoop when I re-eneter this page. The related code is as follows.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_class Scene {\n  constructor() {\n    this.canvas _eq_ null_sm_\n    this.engine _eq_ null_sm_\n    this.scene _eq_ null_sm_\n    this.obstacles _eq_ null_sm_\n  }\n\n  init(canvas) {\n    this.canvas _eq_ canvas_sm_\n    this.engine _eq_ new BABYLON.Engine(canvas_co_ true)_sm_\n    this.scene _eq_ new BABYLON.Scene(this.engine)_sm_\n    this.scene.clearColor _eq_ new BABYLON.Color3.Black()_sm_\n    this.obstacles _eq_ new Obstacles(this.scene)_sm_\n  }\n\n  run() {\n    window.addEventListener(_qt_resize_qt__co_ () _eq_&gt_sm_ { this.engine.resize()_sm_ })_sm_\n    this.engine.runRenderLoop(() _eq_&gt_sm_ {\n      STORE.updateFPS(String(this.engine.getFps().toFixed()))_sm_\n      this.scene.render()_sm_\n    })_sm_\n  }\n\n  stop() {\n    STORE.toggleSceneActive(false)_sm_\n    window.removeEventListener(_qt_resize_qt__co_ () _eq_&gt_sm_ { this.engine.resize()_sm_ })_sm_\n    this.engine.stopRenderLoop()_sm_\n    this.scene.dispose()_sm_\n    this.engine.dispose()_sm_\n  }\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_pre_gt_\n_lt_code_gt_export default class Canvas extends React.Component {\n  render() {\n    return (\n      &lt_sm_canvas className_eq__qt_main-canvas_qt_\n              ref_eq_{(canvas) _eq_&gt_sm_ {\n                  if (canvas _eq__eq__eq_ null) {\n                    // React will call the `ref` callback when the\n                    // component is being umounted.\n                    SCENE.stop()_sm_\n                    return_sm_\n                  }\n                  SCENE.init(canvas)_sm_\n                  SCENE.run()_sm_\n              }}&gt_sm_\n      &lt_sm_/canvas&gt_sm_\n    )_sm_\n  }\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThe problem is that when I go back to this page and try to dispose the mesh of obstacle to redraw_co_ which is BABYLON.MeshBuilder.ExtrudePolygon().  It reports error_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDoes anyone have any idea? What_t_s wrong with my operations?\n_lt_/p_gt_\n\n_lt_div style_eq__qt_color_dd_#ce1126_sm_font-size_dd_2em_sm__qt__gt_\n\tTypeError_dd_ engine is null\n_lt_/div_gt_\n\n_lt_div style_eq__qt_font-size_dd_1em_sm__qt__gt_\n\t_lt_div_gt_\n\t\t_lt_div_gt_\n\t\t\t./node_modules/babylonjs/dist/preview release/babylon.max.js/AbstractMesh.prototype.dispose\n\t\t_lt_/div_gt_\n\n\t\t_lt_div style_eq__qt_font-size_dd_.9em_sm__qt__gt_\n\t\t\t_lt_a rel_eq__qt__qt__gt_src/visualization/browser/node_modules/babylonjs/dist/preview release/babylon.max.js_dd_13927_lt_/a_gt_\n\t\t_lt_/div_gt_\n\n\t\t_lt_pre style_eq__qt_background-color_dd_rgba(206_co_17_co_38_co_.05)_sm_padding_dd_.5em_sm__qt__gt_\n_lt_span_gt__lt_a rel_eq__qt__qt__gt__lt_code_gt__lt_span_gt__lt_span_gt_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_ 13924 | _lt_/span_gt__lt_span_gt_    _lt_/span_gt__lt_span style_eq__qt_color_dd_#c80000_sm__qt__gt_this_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt_._lt_/span_gt__lt_span_gt__occlusionQuery _lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt__eq__lt_/span_gt__lt_span_gt_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#c80000_sm__qt__gt_null_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt__sm__lt_/span_gt__lt_/span_gt_\n_lt_span_gt__lt_span_gt_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_ 13925 | _lt_/span_gt__lt_span_gt_}_lt_/span_gt__lt_/span_gt_\n_lt_span_gt__lt_span_gt_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_ 13926 | _lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_// Engine_lt_/span_gt__lt_/span_gt_\n_lt_span style_eq__qt_background-color_dd_#fccfcf_sm__qt__gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt_&gt_sm__lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_ 13927 | _lt_/span_gt__lt_span_gt_engine_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt_._lt_/span_gt__lt_span_gt_wipeCaches()_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt__sm__lt_/span_gt__lt_/span_gt_\n_lt_span_gt__lt_span_gt_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_ 13928 | _lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_// Remove from scene_lt_/span_gt__lt_/span_gt_\n_lt_span_gt__lt_span_gt_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_ 13929 | _lt_/span_gt__lt_span style_eq__qt_color_dd_#c80000_sm__qt__gt_this_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt_._lt_/span_gt__lt_span_gt_getScene()_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt_._lt_/span_gt__lt_span_gt_removeMesh(_lt_/span_gt__lt_span style_eq__qt_color_dd_#c80000_sm__qt__gt_this_lt_/span_gt__lt_span_gt_)_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt__sm__lt_/span_gt__lt_/span_gt_\n_lt_span_gt__lt_span_gt_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_ 13930 | _lt_/span_gt__lt_span style_eq__qt_color_dd_#c80000_sm__qt__gt_if_lt_/span_gt__lt_span_gt_ (_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt_!_lt_/span_gt__lt_span_gt_doNotRecurse) {_lt_/span_gt__lt_/span_gt__lt_/code_gt__lt_/a_gt__lt_/span_gt__lt_/pre_gt_\n\t_lt_/div_gt_\n_lt_/div_gt_\n\n_lt_div_gt_\n\t./node_modules/babylonjs/dist/preview release/babylon.max.js/Mesh.prototype.dispose\n_lt_/div_gt_\n\n_lt_div style_eq__qt_font-size_dd_.9em_sm__qt__gt_\n\t_lt_a rel_eq__qt__qt__gt_src/visualization/browser/node_modules/babylonjs/dist/preview release/babylon.max.js_dd_22773_lt_/a_gt_\n_lt_/div_gt_\n\n_lt_pre style_eq__qt_background-color_dd_rgba(251_co_245_co_180_co_.3)_sm_padding_dd_.5em_sm__qt__gt_\n_lt_span_gt__lt_a rel_eq__qt__qt__gt__lt_code_gt__lt_span_gt__lt_span_gt_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_ 22770 | _lt_/span_gt__lt_span_gt_            highlightLayer_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt_._lt_/span_gt__lt_span_gt_removeExcludedMesh(_lt_/span_gt__lt_span style_eq__qt_color_dd_#c80000_sm__qt__gt_this_lt_/span_gt__lt_span_gt_)_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt__sm__lt_/span_gt__lt_/span_gt_\n_lt_span_gt__lt_span_gt_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_ 22771 | _lt_/span_gt__lt_span_gt_        }_lt_/span_gt__lt_/span_gt_\n_lt_span_gt__lt_span_gt_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_ 22772 | _lt_/span_gt__lt_span_gt_    }_lt_/span_gt__lt_/span_gt_\n_lt_span style_eq__qt_background-color_dd_#fbf5b4_sm__qt__gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt_&gt_sm__lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_ 22773 | _lt_/span_gt__lt_span_gt_    _super_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt_._lt_/span_gt__lt_span_gt_prototype_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt_._lt_/span_gt__lt_span_gt_dispose_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt_._lt_/span_gt__lt_span_gt_call(_lt_/span_gt__lt_span style_eq__qt_color_dd_#c80000_sm__qt__gt_this_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt__co__lt_/span_gt__lt_span_gt_ doNotRecurse)_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt__sm__lt_/span_gt__lt_/span_gt_\n_lt_span_gt__lt_span_gt_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_ 22774 | _lt_/span_gt__lt_span_gt_}_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt__sm__lt_/span_gt__lt_/span_gt_\n_lt_span_gt__lt_span_gt_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_ 22775 | _lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_/**_lt_/span_gt__lt_/span_gt_\n_lt_span_gt__lt_span_gt_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_ 22776 | _lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_ * Modifies the mesh geometry according to a displacement map._lt_/span_gt__lt_/span_gt__lt_/code_gt__lt_/a_gt__lt_/span_gt__lt_/pre_gt_\n\n_lt_div_gt_\n\tupdateState\n_lt_/div_gt_\n\n_lt_div style_eq__qt_font-size_dd_.9em_sm__qt__gt_\n\t_lt_a style_eq__qt_color_dd_#878e91_sm__qt_ rel_eq__qt__qt__gt_src/visualization/browser/src/scene/obstacle.js_dd_73_lt_/a_gt_\n_lt_/div_gt_\n\n_lt_pre style_eq__qt_background-color_dd_rgba(251_co_245_co_180_co_.3)_sm_padding_dd_.5em_sm__qt__gt_\n_lt_span_gt__lt_a rel_eq__qt__qt__gt__lt_code_gt_\n_lt_span_gt__lt_span_gt_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_ 72 | _lt_/span_gt__lt_span style_eq__qt_color_dd_#c80000_sm__qt__gt_if_lt_/span_gt__lt_span_gt_ (_lt_/span_gt__lt_span style_eq__qt_color_dd_#c80000_sm__qt__gt_this_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt_._lt_/span_gt__lt_span_gt_mesh) {_lt_/span_gt__lt_/span_gt_\n_lt_span style_eq__qt_background-color_dd_#fbf5b4_sm__qt__gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt_&gt_sm__lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_ 73 | _lt_/span_gt__lt_span_gt_  _lt_/span_gt__lt_span style_eq__qt_color_dd_#c80000_sm__qt__gt_this_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt_._lt_/span_gt__lt_span_gt_mesh_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt_._lt_/span_gt__lt_span_gt_dispose()_lt_/span_gt__lt_span style_eq__qt_color_dd_#881280_sm__qt__gt__sm__lt_/span_gt__lt_/span_gt_\n_lt_span_gt__lt_span_gt_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_ 74 | _lt_/span_gt__lt_span_gt_}_lt_/span_gt__lt_/span_gt_\n_lt_span_gt__lt_span_gt_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_ 75 | _lt_/span_gt__lt_/span_gt_\n_lt_/code_gt__lt_/a_gt__lt_/span_gt__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-12-12T05:57:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\thi_co_ Instead of relying on the ref_eq_{ () _eq_&gt_sm_ ...} you could wire into the React lifecycle event to tear down your scene/engine in componentWillUnmount().  I_t_m wiring up the canvas in the componentDidMount() event_co_ as that will ensure that the canvas (via ref) is loaded_dd__lt_br /_gt__lt_a href_eq__qt_https_dd_//github.com/brianzinn/react-babylonJS/blob/master/src/Scene.tsx_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/brianzinn/react-babylonJS/blob/master/src/Scene.tsx_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLooking at that code now I really feel like I should be calling engine.dispose() in componentWillUnmount()!  It started as a proof of concept_co_ but I use it a lot and switch between pages with and without BabylonJS scenes - so far no noticeable issues using that code.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ are you maintaining the state in your store to re-init the scene?  I_t_d like to hear more about what you_t_re doing if that doesn_t_t work! _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]