[{"Owner":"Testouille","Date":"2015-06-04T21:29:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello guys !_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So_co_ I_t_m trying to make an FPS. My player is a box_co_ and I wanted to enable Oimo physics with it._lt_/p_gt__lt_p_gt_But here come the problems _dd__lt_br_gt_- OimoJS only have box_co_ sphere and plane impostor. I would have prefered a Cylinder or a Capsule one in order to represent my player accurately._lt_br_gt_- I don_t_t know how to _qt_fix_qt_ the orientation of my mesh. I mean_co_ I_t_d like my boxmesh (representing the player) to always be parallel to the horizontal plane. (Which means it can only rotate around the Y axis)._lt_/p_gt__lt_p_gt_- I_t_d like my player to be able to climb stairs while still being vertical. (So it doesn_t_t mess with collisions) But I don_t_t know how Oimo would react_co_ as I am not able to _qt_fix_qt_ its orientation._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Making it rotate around the Y axis was quite difficult_co_ as I never used quaternion before_co_ but I managed to make it work with a really bad function made by myself (_lt_/p_gt__lt_blockquote class_eq__qt_ipsStyle_spoiler_qt_ data-ipsspoiler_eq__qt__qt__gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_{    function quatPquat(q_co_ w_co_ x_co_ y_co_ z) {        var tw _eq_ q.s * w - q.x * x - q.y * y - q.z * z_sm_        var tx _eq_ q.s * x + q.x * w - q.y * z + q.z * y_sm_        var ty _eq_ q.s * y + q.x * z + q.y * w - q.z * x_sm_        var tz _eq_ q.s * z - q.x * y + q.y * x + q.z * w_sm_        q.s _eq_ tw_sm_        q.x _eq_ tx_sm_        q.y _eq_ ty_sm_        q.z _eq_ tz_sm_    } // q *_eq_ (w_co_ x_co_ y_co_ z)    function quatYRotate(q_co_ v) {        quatPquat(q_co_ Math.cos(v)_co_ 0_co_ Math.sin(v)_co_ 0)_sm_    }} // Quaternion stuff _lt_/pre_gt__lt_p_gt__lt_/p_gt__lt_/blockquote_gt_)_lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Any help would be appreciated_co_ thanks !_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-06-05T01:05:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m pretty sure Temechon can help _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2015-06-05T06:55:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey Testouille ! _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_- OimoJS only have box_co_ sphere and plane impostor. I would have prefered a Cylinder or a Capsule one in order to represent my player accurately._lt_/span_gt__lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Indeed_co_ there is no cylinder ot capsule impostor._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_- I don_t_t know how to _qt_fix_qt_ the orientation of my mesh. I mean_co_ I_t_d like my boxmesh (representing the player) to always be parallel to the horizontal plane. (Which means it can only rotate around the Y axis)._lt_/span_gt__lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_This is a question someone else asked on the forum_co_ and I was not able to answer correctly. The only thing I know is you can set the angular speed of your mesh like this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var body _eq_ mesh.setPhysicsState(...)_sm_var angularSpeed _eq_ body.body.angularVelocity_sm_angularSpeed.x _eq_ angularSpeed.z _eq_ 0_sm__lt_/pre_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_- I_t_d like my player to be able to climb stairs while still being vertical. (So it doesn_t_t mess with collisions) But I don_t_t know how Oimo would react_co_ as I am not able to _qt_fix_qt_ its orientation._lt_/span_gt__lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_I have no idea how to do this _dd_/_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-06-05T07:09:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Generally for stairs_co_ a ramp is used transparently_co_ what helps has to make climb the character._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Testouille","Date":"2015-06-05T07:16:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_dad72 _dd_ When I was talking about stairs_co_ I was indeed talking about ramps ^^_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Teme_t_ _dd_ I will try then_co_ or dig in Oimo ^^_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I forgot to tell you the other problem _dd__lt_br_gt_I want to _qt_go forward_qt__co_ the problem is_co_ when Oimo physics are enabled_co_ I can_t_t use _qt_this.mesh.rotation_qt_ to get the current mesh orientation_co_ and this.registeredmesh.body.body.getRotation() gives me rubish. So_co_ I don_t_t know how I can go forward._lt_br_gt__lt_br_gt_Do you have any idea ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-05T07:18:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I don_t_t really understand what is the oimo problem as I don_t_t know anything about it_co_ but to set a mesh parallel to an horizontal plane without knowing how to rotate it_co_ you could use _lt_em_gt_RotationFromAxis(axis1_co_ axis2_co_ axis3)_lt_/em_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_don_t_t know if it suits to your problem however_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2015-06-05T07:30:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Jerome_co_ when you_t_re using a physics engine_co_ you cannot control directly the mesh orientation. Everything is handled by the physics body. So RotationFromAxis won_t_t have any effect here._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-05T07:41:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_ok..._lt_/p_gt__lt_p_gt_aarg... still so many things to learn_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Testouille","Date":"2015-06-05T09:22:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Teme_t_ _dd_ What about the other problem ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2015-06-05T09:25:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ho sorry I didn_t_t read it _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I use something like this directly by updating the Oimo body._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_this.getScene().registerBeforeRender(function() {   _this.move()_sm_   if (_this.position.y &lt_sm_ -10) {      _this.game.reset()_sm_   }})_sm_Player.prototype.move _eq_ function() {  if (this.directions[0] !_eq_ 0) {    this._moveTo(-1)_sm_  }  if (this.directions[1] !_eq_ 0) {    this._moveTo(1)_sm_  }  if (this.rotations[0]  !_eq_ 0) {    this._rotateTo(0.05)_sm_  }  if (this.rotations[1]  !_eq_ 0) {    this._rotateTo(-0.05)_sm_  }}_sm_Player.prototype._moveTo _eq_ function(s) {  this.computeWorldMatrix()_sm_  var v _eq_ new BABYLON.Vector3(0_co_0_co_s)_sm_  var m _eq_ this.getWorldMatrix()_sm_  var v2 _eq_ BABYLON.Vector3.TransformCoordinates(v_co_ m)_sm_  v2.subtractInPlace(this.position)_sm_  v2.scaleInPlace(0.5)_sm_  this.applyImpulse(v2_co_ this.position)_sm_}_sm_Player.prototype._rotateTo _eq_ function(s) {  // get mesh quaternion  var mq _eq_ this.rotationQuaternion_sm_  // create quaternion to add  var q _eq_ BABYLON.Quaternion.RotationYawPitchRoll(s_co_ 0_co_ 0)_sm_  this.rotationQuaternion _eq_ q.multiply(mq)_sm_  this.body.body.setQuaternion(this.rotationQuaternion)_sm_  this.body.body.sleeping _eq_ false_sm_}_sm__lt_/pre_gt__lt_p_gt_Maybe it can help you _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]