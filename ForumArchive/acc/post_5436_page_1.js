[{"Owner":"MattePatte","Date":"2014-04-05T11:10:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi!_lt_/p_gt__lt_p_gt_I am having some problems that i think i can solve but i am wondering if there is any simpler solutions._lt_/p_gt__lt_p_gt_I want an FPS like camera i am not happy with the standard controls of the FreeCamera even though i have changed the arrow keys to W_co_A_co_S_co_D keys. I don_t_t like that you have to press the left mouse key to rotate it._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Is it possible only using moveCamera controls and skip the rotation part of a FreeCamera?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If it_t_s not_co_ can i move the camera depending on it_t_s rotation so it always moves forward when pressing the W key._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I am also wondering if anyone nows a easy way of implementing a drag and drop for meshes?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I just want recommendations of functions and links_co_ don_t_t solve the algorithms for me. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MattePatte","Date":"2014-04-05T11:45:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I am blind and didn_t_t found the cameraDirection property in the Documentation. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So if anyone is interested building a FPS game the controls is the following_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_//Pressing Wcamera.cameraDirection_eq_ camera.cameraDirection.add(new BABYLON.Vector3(0_co_0_co_0.1))_sm_//Pressing Scamera.cameraDirection_eq_ camera.cameraDirection.add(new BABYLON.Vector3(0_co_0_co_-0.1))_sm_//Pressing Acamera.cameraDirection_eq_ camera.cameraDirection.add(new BABYLON.Vector3(-0.1_co_0_co_0))_sm_\t//Pressing D camera.cameraDirection_eq_ camera.cameraDirection.add(new BABYLON.Vector3(0.1_co_0_co_0))_sm_//The rotation is done by creating mouse variable_dd_var mouse _eq_ new BABYLON.Vector2()_sm_function onDocumentMouseMove( event ) {   mouse.x _eq_ ( event.clientX / window.innerWidth ) * 2 - 1_sm_   mouse.y _eq_ -( event.clientY / window.innerHeight ) * 2 + 1_sm_}function yourRenderFunction(){   if(mouse.x&gt_sm_0.7 || mouse.x&lt_sm_-0.7 || mouse.y&gt_sm_0.7 || mouse.y&lt_sm_-0.7){      camera.rotation _eq_ camera.rotation.add( new BABYLON.Vector3((-mouse.y)/100_co_0_co_0))_sm_      camera.rotation _eq_ camera.rotation.add( new BABYLON.Vector3(0_co_(mouse.x)/100_co_0))_sm_   }}_lt_/pre_gt__lt_p_gt_Works fine for me._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-05T15:46:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Sounds good _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MattePatte","Date":"2014-04-06T08:24:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I didn_t_t manage as well as i thought._lt_/p_gt__lt_p_gt_The camera.cameraDirection don_t_t updates when i am updating the camera.rotation._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I just want to move the camera forward when i am pressing the W key._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-04-06T14:49:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi again_co_ MP.  Sounds like you are having a good time experimenting with cameras._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have not experimented with free cam .setTarget(some target)...  but maybe... if you re-set the target each time you did a camera move (with that function)_co_ maybe that would give you some success._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Also_co_ in some ways_co_ it sounds like you are wanting an arcRotate camera_co_ which always maintains its target.  Maybe you want to use that type of camera_co_ and have the W and S keys adjust its .radius (zoom in and out)_co_ and the A and D keys adjust its .alpha (orbital pan left and right).  Maybe experiement with that._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I am not clear when you say _t_forward_t_.  If your camera is to have a _t_locked target_t__co_ then forward/backward means closer-to_co_ and farther-from... the target.  That is _t_zoom_t_ (at/from target).  The other version of _t_forward_t_ would mean you want the camera to move along a scene axis_co_ such as +z and -z._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If I remember correctly_co_ some _lt_u_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/2872-basic-math-knowledge-for-video-games/page-3_qt__gt_people nearby were talking about lookAt_lt_/a_gt__lt_/u_gt__co_ but I see that was mesh.lookAt.  But maybe_co_ you could set camera.parent _eq_ some_mesh_co_ and then use the mesh.lookAt (as well as mesh.rotate and mesh.position) to drive that camera.  The camera would do what the mesh does.  You can make that camera handle/gizmo/parent invisible by setting mesh.visibility _eq_ 0_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Just some ideas... not necessarily good ones.  Be patient with yourself.  It seems to me that you have a good brain for deductive reasoning.  Generally speaking_co_ don_t_t accidentally write too much code.  Let babylon.js do most of the work FOR you.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-04-07T09:19:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_32793_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_5436_qt_ data-ipsquote-username_eq__qt_MattePatte_qt_ data-cite_eq__qt_MattePatte_qt_ data-ipsquote-timestamp_eq__qt_1396698320_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_//Pressing Wcamera.cameraDirection_eq_ camera.cameraDirection.add(new BABYLON.Vector3(0_co_0_co_0.1))_sm_//Pressing Scamera.cameraDirection_eq_ camera.cameraDirection.add(new BABYLON.Vector3(0_co_0_co_-0.1))_sm_//Pressing Acamera.cameraDirection_eq_ camera.cameraDirection.add(new BABYLON.Vector3(-0.1_co_0_co_0))_sm_\t//Pressing D camera.cameraDirection_eq_ camera.cameraDirection.add(new BABYLON.Vector3(0.1_co_0_co_0))_sm__lt_/pre_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Not a huge improvement but shouldn_t_t it be more efficient to do this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var step _eq_ 0.1_sm_//Pressing Wcamera.cameraDirection.z +_eq_ step_sm_//Pressing Scamera.cameraDirection.z -_eq_ step_sm_//Pressing Acamera.cameraDirection.x -_eq_ step_sm_\t//Pressing D camera.cameraDirection.x +_eq_ step_sm__lt_/pre_gt__lt_p_gt_You would avoid to instanciate a new Vector3._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MattePatte","Date":"2014-04-08T04:34:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks for the ideas Wingnut and the optimization qwaenael._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But i still haven_t_t solved the problem._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I can_t_t use the arcRotateCamera since it_t_s locked to look at a fixed point. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What i am looking for is a camera which is exactly like the FreeCamera except you don_t_t have to hold the left mouse key to rotate it. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have managed with the rotation of the camera_co_ but not when i want it to move forward_co_ backwards_co_ left and right._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This post describes exactly what i want to do._lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www-rohan.sdsu.edu/~stewart/cs583/LearningXNA3_lects/Lect15_Ch11_CreateFirstPersonCamera.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www-rohan.sdsu.edu/~stewart/cs583/LearningXNA3_lects/Lect15_Ch11_CreateFirstPersonCamera.html_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The problem is that the camera.cameraDirection don_t_t updates when i am rotating the rotation of the camera. _lt_/p_gt__lt_p_gt_I need a Vector that always points forward_co_ in the direction i the camera is looking._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This should be the code_co_ except it_t_s not written in JavaScript._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_if (Keyboard.GetState( ).IsKeyDown(Keys.W))_lt_br_gt_cameraPosition +_eq_ cameraDirection * speed_sm__lt_br_gt_if (Keyboard.GetState( ).IsKeyDown(Keys.S))_lt_br_gt_cameraPosition -_eq_ cameraDirection * speed_sm__lt_br_gt__lt_br_gt_// Move side to side_lt_br_gt_if (Keyboard.GetState( ).IsKeyDown(Keys.A))_lt_br_gt_cameraPosition +_eq__lt_br_gt_Vector3.Cross(cameraUp_co_ cameraDirection) * speed_sm__lt_br_gt_if (Keyboard.GetState( ).IsKeyDown(Keys.D))_lt_br_gt_cameraPosition -_eq__lt_br_gt_Vector3.Cross(cameraUp_co_ cameraDirection) * speed_sm__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-04-08T14:18:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi MP._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I need a Vector that always points forward_co_ in the direction the camera is looking._lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_  I am confused. Take a look at _lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/cameras/camplay03.htm_qt_ rel_eq__qt_external nofollow_qt__gt__lt_u_gt_this little demo_lt_/u_gt_._lt_/a_gt_  (there is much extra code in there_co_ please ignore the garbage - it is a messy work area)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I am using a standard freeCamera and using standard rotating.  I am printing the camera.rotation Vector3 numbers at the top of the screen._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Let us forget about cameraDirection for a moment._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_No matter how you rotate this camera_co_ the numbers at the top are a vector always pointing camera - forward_co_ yes?  Camera.rotation is not only a SET-able vector.  It is also a GET-able vector.  (if that matters)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I will keep reading that link_co_ and your posts... and try to understand better.  I think we are near a solution.  I can smell it.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]