[{"Owner":"SvenFrankson","Date":"2017-09-27T15:09:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m currently trying to convert some input code to observer/observables.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere_t_s a playground _dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#XCPP9Y%23259_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#XCPP9Y#259_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen clicking in the scene_co_ the ground color is randomly changed. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs there a _lt_strong_gt_built-in way_lt_/strong_gt_ in the observable design to avoid triggering the scene pointer observer when triggering the gui pointer observer ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(ie _dd_ the ground should not change color when the clic hits the gui button)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf not_co_ can we pick which observer we want to be triggered first ? So we can share some data accross the observer to abort (like skipNextObserver_co_ but on a wider scope)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf not_co_ it seems the GUI observer is triggered first. Can we rely on this ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks a lot for your inputs ! Have a nice day_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tNote _dd_ As well... It seems _qt_scene pickObservable_qt_ already performs some picking in the scene. Is there a way to avoid this behaviour ? (in the case we want to do the picking with another predicate). Thanks !\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2017-09-27T15:37:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou are dealing with two different observables.  I_t_m pretty sure this is not possible.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEDIT_dd_ I was wrong_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/gui/src/advancedDynamicTexture.ts#L359_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/gui/src/advancedDynamicTexture.ts#L359_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-09-27T15:39:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo the button must block the pointer observer. It is a bug (fix will be deployed in a couple of minutes)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI do not see a pickObservable on scene but perhaps you may want to check the default predicate and change them (like scene.pointerMovePredicate or  scene.pointerDownPredicate)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"SvenFrankson","Date":"2017-09-27T15:51:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for the reactivity_co_ once again !\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_font-size_dd_11px_sm__qt__gt_And glad to see that non-compliance with my use-case can qualify as a bug ^^_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]