[{"Owner":"Richard C","Date":"2017-12-05T13:56:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tStill on my submarine project ..............................\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI need to use easing to make diving  through water more realistic.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDive commences with a slow start easing to a constant descent/ascent rate.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is acheived with the formula used on each renderloop (the equivalent of EaseIn) _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t incrementer +_eq_ 0.01_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tdiveRate +_eq_ Math.pow(1_co_ incrementer)_sm__lt_br /_gt_\n\tsubmarine.position.y -_eq_ parseFloat(diveRate / 2500)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis works fine.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHowever I_t_m struggling to acheive the equivalent EaseOut formula to apply to the vessel before it _qt_hits_qt_ the sea bed on the descent or _qt_bursts_qt_ through the water at the surface on ascent.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEasing using Babylon animation or the likes of Greensock is not an option as the user  needs to interact with other _t_features_t_  whilst the dive is underway.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI realise this is a _t_maths_t_ problem_t_ not a babylon issue but if some one has an answer or could point me to a good tutorial I would appreciate it\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthanks as ever\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRichard C\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-12-05T15:36:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi RC!  Good to see you again.  Your joystick taper-to-stop should give you a speed taper-off _qt_method_qt__co_ but perhaps not the best_co_ when adapted for ascents/descents.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRC_co_ can I ask a couple of questions?   Does your sub allow _qt_power_qt_ ascents/descents?   Is any forward_co_ reverse_co_ or side-slewing thrust allowed... WHILE an ascent/descent is happening?  (thx)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou know me_co_ RC.  I_t_m a big fan of invisible mesh _qt_sensors_qt_ around the outside of the sub.  Keep in mind that you can parent invisible mesh to the sub... which are not even touching the sub_t_s mesh at all.  (stand-off parenting)  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  (leaning towards child-neglect)  heh\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe upper sensor might have a _qt_Did sensor suddenly quit intersecting with the water?_qt_   Or perhaps better... _qt_Did sensor get above a certain height?_qt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBottom sensor might be _qt_Did I suddenly intersect with sea floor or items ON the sea floor?_qt_  The distance that you _qt_offset_qt_ (stand-off) these sensors from their parent sub... determines the amount of throttle taper-off distance/time before impact or before surface porpoising. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tA fun thing to do would be to install all 6 invisible _qt_sensing spheres_qt_ on all submarine axes_co_ and put 6 lights on the dashboard.  If any of the sensors reports an _qt_close-proximity_qt_ or _qt_all-stop_qt_ condition_co_ its red light turns ON.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tInside the renderLoop_co_ the six sensors are continuously _qt_polled_qt_ to see if any of them has a no-go condition. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tKeep in mind that the sensor diameter_co_ and distance from sub... are _qt_sensitivity_qt_ adjustments.  You might even find that 3-5 invisible spheres stacked in a (inverted) snowman shape... might be wise.  If the _qt_farthest_qt_ sensor triggers intersect_co_ start taper off.  If 2nd farthest sensor triggers_co_ heavier taper-off.  If near-to-sub sensor triggers_co_ panic braking.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  Perhaps you could use a sphere inside-of sphere inside-of sphere config_co_ too.  If outer sphere intersects... green light on dashboard starts blinking.  Middle sphere_co_ flashing yellow.  Inner sphere... flashing red.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tIf you want to avoid the _qt_snowman stack-o-sensors_qt__co_ then your sensors could reposition themselves closer to the sub... after intersects.  For example_co_ by default_co_ pretend belly sensor protrudes 20 feet from bottom of sub.  If it intersects sea floor_co_ start the dive-speed reduction_co_ and pull-in sensor sphere to 10 feet protrusion from sub belly. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf THAT intersects seafloor_co_ get more serious with braking_co_ and pull sensor into 5 feet from sub.  If IT intersects seafloor_co_ emergency dive-stop.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tI don_t_t know if this is a wise idea_co_ but it IS an idea.  By surrounding the sub with sonar-like sensors_co_ you can maintain a submarine _qt_state_qt_.  That _qt_state_qt_ is a boss for the throttles.  For example_co_ if the nose sensor has a red light_co_ the forward throttle does not work at all... only the other 5 axes.  If you have a red light on the fore and aft sensor_co_ you better go straight up or down.  If you have red lights on all 6 (or more) sensors_co_ then a whale has swallowed your submarine.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  \n_lt_/p_gt_\n\n_lt_p_gt_\n\tStay tuned for other ideas_co_ and likely BETTER ones.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Richard C","Date":"2017-12-05T16:19:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Wingnut\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYes in real-life the sub does allow for powered ascent/descent by use of vertical thrusters BUT these are not used to _t_go faster_t_ but to control ascent rate in the main - the sub always has positive bouyancy and without pilot intervention_co_ would float to the surface. Reducing water pressure as the sub ascends causes air to expand which in turn creates even more bouyancy and the sub _t_rushes_t_ to the surface way beyond safe diving limits.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs a point of interest - we actually allowed the sub to actually do that. The pilot got out of the sub at 15m and just let it ascend of in own accord. The sub actually left the water completely at the surface - a Red October moment for sure . The 900kg sub shot above the water by some 300cm. If that were allowed to happen in real life the passengers would be the whale fodder cos they would be dead as a result of extreme decompression sickness - the lungs could literally blow out of the body.  So the vertical thrusters are used to control the rate of descent. For the same reason. they are used to maintain a fixed depth whilst moving horizontally when submerged.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe purpose for the ease-in / easeout functions are two fold _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. mimick what the pilot strives to do to make a slow start and gradually move to operating speed\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. to mimick the effect of the water / currents\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs I said earlier - the EaseIn formula works well - I just need the negative of it and I can_t_t wrap my head round the solution\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRegarding sensors etc - I am raycasting to get the waterdepth in every render loop so know what depth the sub is at both from the surface and the seabed. The EaseOut function starts at a 1.5m from surface or bottom.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheers\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRichard\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-12-05T16:57:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThx.  Let_t_s see... these are bottomless air-bubble subs_co_ right?  SO if batteries fail_co_ sub starts crash-surfacing_co_ occupants are left on the sea-floor with no more air-bubble_co_ so they drown.  Sub accidentally rises into the launch-barge_co_ and it sinks_co_ and the sub is crushed_co_ along with the drowned people_co_ when the sunken launch-barge pins everything to the sea bed.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  NICE!\n_lt_/p_gt_\n\n_lt_p_gt_\n\terr... no.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tThink about this.  You_t_re _lt_u_gt_always_lt_/u_gt_ applying a braking value of 20 - depth-to-something.  So_co_ when sub is at 30 meters distanceToSeabed_co_ you apply braking force of Math.abs(20 - distanceToSeabed).  20 - 30 _eq_ 0 braking.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen sub is 15 meters from grounded_co_ braking is 20-15 _eq_ 5 units of braking.  etc etc.  Units of braking _eq__eq_ reduction of down-thrust.  So... this 20-whatever_eq_VALUE... is the amount-of-reduction of down-thrust throttle setting.  20 is an arbitrary _qt_testing range_qt_ number_co_ of course.  Adjust as needed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWould that work?  *shrug*\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet_t_s see... the ascent.  hmm.  Is sea level set to 0?  If so_co_ same type of formula.  Increase of down-thrust needs to happen_co_ as sub nears surface.  Sub depth _eq__eq_ sub.position.y.   \n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet_t_s say sub depth _eq_ 30.  abs(20 - 30) _eq_ 0.  No increase in downward thrust. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow pretend sub is at depth 15.  20-15 _eq_ 5 units of increased down-thrust.  *shrug*  thoughts?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-12-05T17:18:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_197606_qt_ data-ipsquote-contentid_eq__qt_34392_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1512490742_qt_ data-ipsquote-userid_eq__qt_22253_qt_ data-ipsquote-username_eq__qt_Richard C_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t43 minutes ago_co_ Richard C said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI just need the negative of it\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\t EasingMode - BABYLON.EasingFunction.EASINGMODE_EASEOUT _dd_ Interpolation follows 100% interpolation minus the output of the formula associated with the easing function.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSorry if you read this doc already on Easing functions_co_ but it_t_s good_dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/babylon101/animations_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/babylon101/animations_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ I think you need to go from _qt_constant descent/ascent_qt_ rate and current rate to get next rate - not just incrementing.  If you look at the interpolation values they all have start/end.  Even a simple lerp (which you kinda want the opposite) for vertical position is_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_const lerpAmount _eq_ 0.1_sm_\nconst start _eq_ mesh.position.y_sm_\nconst end _eq_ mesh.position.y + distanceToAchieveConstantRate_sm_\n\nconst newY _eq_ (start + (end - start) * lerpAmount)_sm_\nmesh.position.y _eq_ newY_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Richard C","Date":"2017-12-05T18:13:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tbrianzinn and Wingnut\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks both - playing with both - I_t_ll let you know\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheers\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-12-05T18:41:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOK_co_ was just thinking as well that you would need to put those in your game loop. For a really smooth animation I think you would use engine.getDeltaTime() for time passed since last frame_co_ but you can use _t_scene.onXXXRenderObservable_t__co_ too_dd__lt_br /_gt__lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#Q81PBV%232_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#Q81PBV#2_lt_/a_gt__lt_br /_gt_\n\tIt_t_s just a quick demo that uses lerp to move the dialog above the sphere without BABYLON.Animations.  I think you could detect a collision with surface or bottom.  edit_dd_ read it was a submarine\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Richard C","Date":"2017-12-07T18:59:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tbrianzinn - your suggested solution set me off on the right road and I now have the sub doing what I need.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMany thanks to you and Wingnut\n_lt_/p_gt_\n\n_lt_p_gt_\n\tR\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-12-07T19:25:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tNice you got that working.  Post your solution_co_ if you think it would help others.  Cheers.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]