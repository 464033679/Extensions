[{"Owner":"splash27","Date":"2018-05-06T11:45:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe problem is here_dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#RAYW6X_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#RAYW6X_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy mesh partially goes through the floor while the physicsImpostor is applied. Can I correct it_t_s behavior on my mesh?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-05-06T12:13:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tA search for _qt_through floor_qt_ in the forum seems it is a common problem with physics engine. Happens when you object is too small. Need to scale up the object. Just how small you need to go you will have to experiment with _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#RAYW6X%231_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#RAYW6X#1_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Raggar","Date":"2018-05-06T13:53:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIn this case_co_ it looks like the merging of the meshes messes with the impostor system. It creates a single shape with the following halfExtents_dd_\n_lt_/p_gt_\n\n_lt_div_gt_\n\t_lt_span style_eq__qt_color_dd_#000000_sm__qt__gt_x_dd_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#09885a_sm__qt__gt_0.1_lt_/span_gt_\n_lt_/div_gt_\n\n_lt_div_gt_\n\t_lt_span style_eq__qt_color_dd_#000000_sm__qt__gt_y_dd_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#09885a_sm__qt__gt_0.30000000596046444_lt_/span_gt_\n_lt_/div_gt_\n\n_lt_div_gt_\n\t_lt_span style_eq__qt_color_dd_#000000_sm__qt__gt_z_dd_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#09885a_sm__qt__gt_0.5000000029802323_lt_/span_gt_\n_lt_/div_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd this does not quite match the L-shape you are trying to achieve. What you want to do instead_co_ is create a compound-shape by using the parent-child system in BJS_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#RAYW6X%232_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#RAYW6X#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"splash27","Date":"2018-05-06T16:45:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t@Raggar_co_ great!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHowever parenting system is not comfortable in cases of spawning instances. You_t_ll have to create instance for every child and attach impostor for every child.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCan I fix halfExtents manually after merging meshes? If yes_co_ how I can do this? I can_t_t find such property in Impostor_t_s properties.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Raggar","Date":"2018-05-06T19:30:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIn that case_co_ the pistol will only be represented by a box_co_ and not a compound shape like an L.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"splash27","Date":"2018-05-07T17:06:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIf dropped pistol will act like a box in Physics world this is not a big problem in my simulation.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt should looks like compound shape however the box-like colliding is a compromise that I can accept.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHow to do this?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"splash27","Date":"2018-06-24T11:15:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMy solution_dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#RAYW6X%233_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#RAYW6X#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s a little bit similar with solution by _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/22713-raggar/?do_eq_hovercard_qt_ data-mentionid_eq__qt_22713_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/22713-raggar/_qt_ rel_eq__qt__qt__gt_@Raggar_lt_/a_gt__co_ however less expensive and more universal (I think). Yeah_co_ the main disadvantage is simplifying physics till bounding box_co_ but it can be accepted in my case.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway_co_ it still looks like a hack. I wonder if merging algorithm can be fixed inside Babylon_t_s core.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]