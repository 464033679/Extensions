[{"Owner":"royibernthal","Date":"2016-12-10T16:25:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m changing the texture of a model in runtime by creating a material with diffuseTexture and setting it as the material of all meshes related to the model.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have 2 questions about that_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) mesh.material is null before I set it to the material I created (even when I test it seconds after initialization)_co_ and the model_t_s texture is still rendered. It leads me to believe the mode_t_s texture/material is set somewhere else_co_ and mesh.material simply overrides the original place.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat is the parameter that contains the texture/material of the mesh? I wasn_t_t able to find it when I went over a mesh_t_s properties in the dev tools.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) The material with diffuseTexture I create in runtime is _qt_shiny_qt_ (reflects light more I guess?).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe puppy on the right is the result of the original material before my intervention_co_ as specified in the .babylon file - this is the result I_t_d like to achieve.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe puppy on the left is the result after I set the material of all meshes to the one I create in runtime - the _qt_shiny_qt_ one.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_puppy.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_10670_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_12/puppy.png.320e82f042b9b2d32b036ab2c3f724ee.png_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tHere_t_s some relevant info from the .babylon file_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_qt_materials_qt__dd_[{_qt_name_qt__dd__qt_puppy.puppy_mat_qt__co__qt_id_qt__dd__qt_puppy.puppy_mat_qt__co__qt_ambient_qt__dd_[1_co_1_co_1]_co__qt_diffuse_qt__dd_[0.8_co_0.8_co_0.8]_co__qt_specular_qt__dd_[0_co_0_co_0]_co__qt_emissive_qt__dd_[0_co_0_co_0]_co__qt_specularPower_qt__dd_12_co__qt_alpha_qt__dd_1_co__qt_backFaceCulling_qt__dd_true_co__qt_checkReadyOnlyOnce_qt__dd_false_co_ _lt_br /_gt_\n\t_qt_diffuseTexture_qt__dd_{_qt_name_qt__dd__qt_puppy_01.jpg_qt__co__qt_level_qt__dd_1_co__qt_hasAlpha_qt__dd_1_co__qt_coordinatesMode_qt__dd_0_co__qt_uOffset_qt__dd_0_co__qt_vOffset_qt__dd_0_co__qt_uScale_qt__dd_1_co__qt_vScale_qt__dd_1_co__qt_uAng_qt__dd_0_co__qt_vAng_qt__dd_0_co__qt_wAng_qt__dd_0_co__qt_wrapU_qt__dd_1_co__qt_wrapV_qt__dd_1_co__qt_coordinatesIndex_qt__dd_0}}]\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhich parameter is responsible for what I_t_d like to achieve (making the material not _qt_shiny_qt_) and how/where do I set it in runtime?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-12-10T19:58:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Royi!  Umm...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1SVN3I%2330_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1SVN3I#30_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSee lines 32-44?  We had to go thru some hell... to make sure the material/texture was loaded/ready... before we set alpha _eq_ 1.  I also added a report to console... about the url used for the texture (line 41).  Reports a good url.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou may need to do the same for your new model.  I don_t_t know if you will need mesh.material.isReady()_co_ because scene.executeWhenReady might already wait for all materials to be ready.  Test and experiment.  If your model has a texture_co_ its ._lt_em_gt_material_lt_/em_gt_ will not be null (impossible_co_ as far as I know).  You might be checking it too early.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe shine of a material is set to 0... by two different methods.  You can set material.specularColor to black_co_ or set light.specular to black.  If the material has a light.specularTexture_co_ kill that_co_ too_co_ or set its texture.level _eq__eq_ 0.  Hope this helps.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"royibernthal","Date":"2016-12-11T01:25:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have a preloader + timeout_co_ so timing wasn_t_t the problem_co_ I referenced the wrong mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe model has 2 meshes_co_ I have no idea what the first one is_co_ but it doesn_t_t have a material. The second mesh does have a material like you helped me see.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFollowing your PG I also got the idea to change the diffuseTexture rather than the material_co_ that way I won_t_t have to deal with material.specularColor and other parameters as everything is already set to what was defined in blender.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRegardless_co_ setting material.specularColor to black indeed solved the _qt_shiny_qt_ issue.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat I_t_m trying to accomplish is having different skins (textures) for each model and changing between them easily. e.g. being able to do mesh.skin _eq_ 2 to render a different (already loaded) texture.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs there an existing way to do that easily (ideally something like add multiple options for texture in blender which will then be exported to .babylon) or would I have to load the skins textures separately from the .babylon and change material.diffuseTexture manually?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Convergence","Date":"2016-12-11T01:39:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou_t_ll have to duplicate materials anyway because if you just change the diffuseTexture on one model it will change it for all models because they still share the same material.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can duplicate the model in blender and apply new materials to the clones as many times as you need_sm_ that way all materials will get exported without having to define them in Javascript.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"royibernthal","Date":"2016-12-11T02:04:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou are right_co_ I_t_ll have to use multiple materials.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_d rather clone the materials and change the diffuseTexture in runtime_co_ cloning the material will still save me the trouble of redefining its parameters.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]