[{"Owner":"unicomp21","Date":"2016-01-13T01:14:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tGiven I_t_m using mesh quads w/ texture tiles_co_ what can I expect when using applyDisplacementMap?  The sphere demo looks like it has higher poly count after applying the displacement map.  What_t_s going on here?  How are the rgba values in the displacement map used for the displacement?  In the demo both the texture and displacement maps use the amiga.jpg_co_ which is confusing.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-01-13T04:26:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi U21... good to see you again.  Take a look at _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#P9UZG%239_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#P9UZG#9_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s just another displaceMap demo... but because of wireframe overlay_co_ you can see that there is no increase in poly count.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ your tiles of quads won_t_t displace properly with applyDisplacementMap.  You_t_ll need another method but it won_t_t be very difficult.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tInside the above playground_co_ I _qt_hijacked_qt_ the _lt_em_gt_applyDisplacementMap_lt_/em_gt_ function and its friend _lt_em_gt_applyDisplacementMapFromBuffer_lt_/em_gt_ from the BabylonJS source code.  It_t_s easy to see how it all works_co_ now_co_ right?  _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt__gt_  Lines 34-45 was an area I needed to _qt_hack_qt_ to try to get my image to fit my sphere_co_ better.  It_t_s a long story.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n_lt_p_gt_\n\tYou_t_ll see in line 54 ... _lt_em_gt_that_lt_/em_gt_ is a sphere.  Lines 65 - 81 do the actual heightMap adjustings to sphere.positions.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo make _lt_em_gt_applyDisplacementMapFromBuffer_lt_/em_gt_ work with a grid-o-quads... you will need to re-code it.  In a grid-of-quads_co_ for each displacement position... you will need to displace 1_co_ 2_co_ 3_co_ or 4 positions_co_ on 1_co_ 2_co_ 3_co_ or 4 quad mesh.  (For example_co_ where 4 quads come together_co_ 4 mesh need a point raised.)  This is different from the current system... which displaces one position on one mesh (ground is a single mesh).  Your ground is MANY mesh_co_ right?  You can still make your grid-o-quads _qt_act_qt_ exactly like a heightMap/displaceMap_co_ you just need to tell it to do so... by re-coding _lt_em_gt_applyDisplacementMapFromBuffer_lt_/em_gt_ (making a custom _lt_em_gt_applyDisplacementMapFromBuffer()_lt_/em_gt_ function).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYes_co_ maybe using amiga.jpg on both texture and displace is a little confusing_co_ but it sure looks cool_co_ eh?  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n_lt_p_gt_\n\tIf you make a playground (even using a spinoff of mine) with a 64x64 grid of quads (a ground of quad tiles)... and include applyDisplacementMap and applyDisplacementMapFromBuffer (like I did)... then maybe somebody will help re-code applyDisplacementMapFromBuffer() so it works on your grid-of-quads.  Or maybe ya got it all handled.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHoller if you have more questions.  I hope I_t_m not telling you wrong things.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt_  Someone please correct me_co_ as needed.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-01-13T16:07:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1VGWP9%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1VGWP9#1_lt_/a_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI started a little work with a BabylonJS tiledGround.  I don_t_t think anyone has ever tried to apply a heightMap/displaceMap on a tiled ground.  This should be some fun experimenting... and I will learn things... I know it.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n_lt_p_gt_\n\tI started with _lt_span_gt__lt_a href_eq__qt_http_dd_//makina-corpus.com/blog/metier/2014/how-to-use-multimaterials-with-a-tiled-ground-in-babylonjs_qt_ rel_eq__qt_external nofollow_qt__gt_Célian Garcia_t_s Tiled Ground Tutorial_lt_/a_gt_ and added a wireframe layer (multimat2/material2)... and I am using colors on the tiles_co_ and not textures.  (Good enough for testing position displacements)._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_My line 67 alert... says there are 24 _qt_indices_qt_ per tile.  Hmm.  That_t_s more than I thought there would be_co_ but I_t_m a newbie in the land of plotting.  _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_There appears to be 4 _qt_quads_qt_ per _qt_tile_qt__co_ so I need to be careful with my terminology.  I am no longer sure what a _qt_quad_qt_ means.  I always thought _qt_quads_qt_ had 4 vertices_co_ and that_t_s all.  SO_co_ I have much to learn.  I have not worked with tiles at all_co_ and I have never tried to displace their vertices.  But there are vertex Gods around the forum_co_ and maybe we can beg some hints and code out of them.  (thx_co_ everyone)_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-01-13T16:22:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_ul_gt__lt_li_gt_\n\t\t_lt_strong_gt_name_lt_/strong_gt_ _dd_ the name of the mesh\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\t_lt_strong_gt_xmin_co_ zmin_co_ xmax_co_ zmax_lt_/strong_gt_ _dd_ extent values \n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\t_lt_strong_gt_subdivisions_lt_/strong_gt_ _dd_ number of tiles (subdivisions.w _dd_ in width_sm_ subdivisions.h _dd_ in height)\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\t_lt_strong_gt_precision_lt_/strong_gt_ _dd_ number of subdivisions in each tile (precision.w _dd_ in width_sm_ precision.h _dd_ in height)\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\t_lt_strong_gt_scene_lt_/strong_gt_ _dd_ the scene which will contain the mesh\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\t_lt_strong_gt_updatable_lt_/strong_gt_ _dd_ if the mesh is updatable or not\n\t_lt_/li_gt_\n_lt_/ul_gt__lt_p_gt_\n\tAFAIUnderstand_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor convinience_co_ let_t_s assume that we subdivide the same way on the width and on the height_co_ so w and h are equals.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou divide the width per subdivisons.w subdivisions. These are the tiles.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen you subdivide each tile per precision.w subdivisions_co_ these should be the quads. And a quad is still two triangular facets_co_ so 4 vertices.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI wish I_t_m not wrong_co_ that_t_s how I understood the stuff.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-01-22T15:52:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks Jerome!  And_co_ hi readers!  Umm...  I decided to TRY to advance this topic a bit.  The quest_dd_  Coding createTiledGroundFromHeightMap() or... adding power to mesh._lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.mesh.js#L882_qt_ rel_eq__qt_external nofollow_qt__gt_applyDisplacementMapFromBuffer()_lt_/a_gt_.  Here is a starter PG_dd_  _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1VGWP9%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1VGWP9#4_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSee my hacked tiledGround.applyDisplacementMap() func at line 87?  Well_co_ that is NOT BJS default code.  I hacked it_co_ so I could do image flips and rotates and scales... to adjust my image buffer.  That is all irrelevant_co_ because the _lt_u_gt_real_lt_/u_gt_ issue is a helper function called _lt_span_gt_applyDisplacementMapFromBuffer() - at line 121.  What you see there _lt_strong_gt_IS_lt_/strong_gt_ default framework code (almost)... and it _lt_u_gt_is_lt_/u_gt_ working... but only _qt_per tile_qt_.  You see the BabylonJS logo on each tile._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_What I want to do... is make a smarter or different applyDisplacementMapFromBuffer() that will spread the displacement map across ALL the tiles... AS IF the tiled ground was a single ground.  (make it look like a standard non-submesh heightMap/displaceMap)._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_I assume _qt_we_qt_ would want to divide-up the buffer into sub-sections... to match the (_lt_strong_gt_variable_lt_/strong_gt_) layout of the tiles.  Then use a big fat double-nested FOR-loop_co_ and we are on our way.  Maybe._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_But I don_t_t have the math skills for this_co_ and others LOVE doing these kinds of challenges.  I... hate them.  _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt__gt_  _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_So_co_ I could use some help.  If ANYONE would like to write a _qt_branch_qt_ for applyDisplacementMapFromBuffer() that handles tiledGrounds properly_co_ or wants to write a custom apply_lt_strong_gt_Tiled_lt_/strong_gt_DisplacementMapFromBuffer()... THANK YOU!  Maybe we will put it into the core framework... possibly adding it to the tiledGround class._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Is this the correct approach_co_ though?  WHAT IF... we (temporarily) merge the subMesh into a single mesh_co_ then apply a STANDARD applyDisplacementMapFromBuffer() action_co_ and then de-merge the subMesh?  Is that a wiser way to go?  Possible?  Thoughts?  Hints?  Wisdom?  Ideas?  HELP?  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt_  (thx!)_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_PS_dd_ If you get a demented idea like trying our edgesRenderer on this_co_ it will fail to find the heightMap edges_co_ and your browser will slap you for trying something too crazy (long script warning).  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-01-23T17:46:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo summarize (DK_t_s way _lt_img alt_eq__qt__dd_lol_dd__qt_ data-emoticon_eq__qt_true_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_laugh.png_qt_ title_eq__qt__dd_lol_dd__qt__gt_)_co_ you wish you can morph a tiled ground from buffer data_co_ like some CreateGroundFromHeightMap or applyDisplacement ?_lt_br_gt_\n\tI think it_t_s possible.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tActually_co_ as the tiled ground was designed_co_ afaik_co_ to set different textures per tile_co_ and not a single big one as for the classic ground_co_ I_t_m wondering about the goal to morph a whole tiled map according to some buffer data. Can_t_t we just change its positions only from known numeric data (geo data_co_ etc) ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-01-23T19:17:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe goal?  Yeah_co_ I was wondering about that_co_ too.  Let_t_s ponder using our playground heightMap...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1BAOJ4%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#1BAOJ4#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEach tile (16x16 tiles used above) would have it_t_s own sub-section of the whole heightMap image.  Each tile object/submesh could/would carry its own subHeightMap (or carry the code to derive it).  Game writers could tell these tiles to render or not... depending upon where the character/camera is located-at.  Tile wrangling.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI THINK this is what Unicomp21 is talking about.  I think folks want to _qt_serve_qt_ these heightMap sections (tiles) and have each tile _qt_carry_qt__co_ or quickly compute... what index of the landscape map they are positioned-at and apply the right sub-section of elevation data... to seamlessly attach to the already-rendered land.  (Man_co_ what an ugly sentence!)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSmart tiles.  These tiles can carry or compute both their diffuseTexture subSection_co_ and their heightMap subSection.  They know how to paint themselves and grow their elevation... because they _qt_know their place_qt_.  Does this make any sense?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI could be an idiot_co_ too.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  I have rarely used servers_co_ and have certainly never done tile-serving_co_ but if I was to try to build Babylon Bay virtual reality _qt_area_qt_ for all forum users... and allow _qt_walking_qt_ from one person_t_s scene... to another_co_  then I would use a tile server system. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tJerome gets a 10x10 tile area along Babylon Road.  Wingy lives next door to his hero_co_ on HIS 10x10 tile area_co_ then Dad72_t_s CastorFarm is next to me_co_ then Temechon Trail turns off_co_ and he and Unicomp21 have ranches down that road_co_ etc.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  (DeltaKosh lives off-world_co_ in a spacecraft_co_ of course.)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust thinkin_t_.  I_t_m not sure what Unicomp had in mind_co_ but it seems we_t_re talking _qt_seams_qt__co_ here.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tUnicomp_dd_  _qt_Given I_t_m using mesh quads w/ texture tiles_co_ what can I expect when using applyDisplacementMap?_qt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think smartTiles would be the way to go.  They know (carry or can compute) what subsection of diffuseTexture they need_co_ they know (carry or can compute) what subsection of heightMapTexture they need_co_ and they know (or can derive) where they are supposed to place themselves. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSelf-contained_co_ self-actualizing tiles_co_ can ya dig it?  Unicomp_t_s world server would serve tileObjects...  smart ones_co_ to a _qt_live_qt_ scene.  *shrug* \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI guess the tileObjects could be _qt_dumb_qt__co_ too... needing to be parsed by a tileParser before installing/rendering.  *shrug*\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe all that image-dividing is done on the server-side_co_ though.  What I speak-of... is having cllent-side code do tile-serving to the scene graph_co_ dependent upon camera/player location.  Ideally_co_ it doesn_t_t matter WHAT serves the tileClass object... the object format would be identical.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDo I make any sense?  If so_co_ that_t_s rare. _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  Sorry for being so newbie_co_ here.  I know there are MANY folks who have thought long and hard about world-serving... and I_t_m sure they are completely bored right now.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-01-25T17:29:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOk_co_ here_t_s my latest (like anyone is following along)  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1VGWP9%237_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1VGWP9#7_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tGrab the zip_co_ take it home_co_ join me in staring at it.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Primary Objective_dd__lt_/strong_gt_ Spread _lt_u_gt_single_lt_/u_gt_ worldmap across all (4) tiles.  Then test with 8 tiles_co_ 16_co_ change precision values_co_ test again... celebrate!  _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt__gt__lt_/p_gt_\n\n_lt_p_gt_\n\tI hijacked the BJS CreateTiledGround() func (line 3)_co_ so I/we could see how tiledGrounds are made (especially their .subMeshes array).  Also_co_ this would be the starter func for a crazy attempt-at Create_lt_u_gt_Tiled_lt_/u_gt_GroundFromHeightMap()  _lt_img alt_eq__qt__dd_o_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_ohmy.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/ohmy@2x.png 2x_qt_ title_eq__qt__dd_o_qt_ width_eq__qt_20_qt__gt_  Wow!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI also hijacked CreateGroundFromHeightMap() - line 84 - having this handy also helps if someone tries Create_lt_u_gt_Tiled_lt_/u_gt_GroundFromHeightMap().\n_lt_/p_gt_\n\n_lt_p_gt_\n\ttiledGround.applyDisplacementMap is at line 224_co_ pretty much stock_co_ and likely needing no changes.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe old applyDisplacementMapFromBuffer() is disabled (line 319)_co_ and replaced with the new_co_ un-coded apply_lt_u_gt__lt_strong_gt_Tiled_lt_/strong_gt__lt_/u_gt_DisplacementMapFromBuffer() at line 262.  It needs coding.  I added two parameters...  subdivisions and precision.  Those values will be needed in the new un-coded func.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ this is THE ultimate starter scene for hacking this challenge.  Zip it up!  Take it home!  Camp it like a Winnebago!  (beg beg beg)  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt_ The re-code probably starts with ANOTHER  _lt_u_gt_outer_lt_/u_gt_ FOR-loop... like...  for (subMesh in that.subMeshes) { apply a certain _lt_u_gt_portion_lt_/u_gt_ of the displaceMap buffer }  *sigh*\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m scared.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt_  I_t_m still staring at this challenge_co_ and adding white-space_co_ and procrastinating.  I_t_m thinking that the code will write itself if I stare at it long enough.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis first buffer-dividing challenge is WAY BEFORE any thoughts of extending BABYLON.SubMesh  (see line 213) into being a _qt_smartTile_qt_.  SmartTiles are for later_co_ and might not be for-framework objects.  (might be user-coded for certain projects only) \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut still_co_ the idea of a tile... _lt_u_gt_knowing_lt_/u_gt_ how to compute its PROPER section of the heightMap_co_ and its proper section of the ALL the textures placed on its material...  that seems cool_co_ and powerful.  hmm.  I think I_t_m going insane.  _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt__gt_  Ideally_co_ I think it would be good if a tile (a tiledGround.subMeshes item)... carried the following info_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- where it belongs in the tiledGround grid._lt_br_gt_\n\t- its START location in the displaceMap/heightMap image buffer (probably not possible - non-linear)._lt_br_gt_\n\t- its STOP location in the displaceMap/heightMap image buffer (probably not possible - non-linear)._lt_br_gt_\n\t- its START/STOP location in any material textures applied to the whole tiledGround (probably not possible - non-linear)._lt_br_gt_\n\t  (That last item _lt_u_gt_might_lt_/u_gt_ need to consider texture wraps_co_ angles_co_ offsets_co_ scales!  Oh no!)_lt_br_gt_\n\t  (I need to study subMaterials better)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLots of _qt_not possible_qt__co_ eh?  Start and stop locations within a texture... I don_t_t think so.  Offsets problems.  *sigh*  That_t_s why having the smartTiles be able to _qt_gather_qt_ their own subMaterial (and subHeightMap) at _qt_install into tiledGround_qt_-time... might be the ONLY way to do that. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ maybe _qt_smartTiles_qt_ IS the way to go... intelligent subClass of BABYLON.SubMesh... maybe.  I dunno.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tsigh.  Help?  Fix my thinking?  (thx)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]