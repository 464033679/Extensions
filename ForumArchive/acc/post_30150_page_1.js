[{"Owner":"ozRocker","Date":"2017-05-02T08:34:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m looking at scene optimisations so I was playing with instances and clones.  I_t_m just wondering_co_ if a clone shares the same vertex data as the object that it cloned_co_ how come the clone still stays on the screen even after deleting the main object?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#XE5CHL_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#XE5CHL_lt_/a_gt_ to demonstrate the point\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Raggar","Date":"2017-05-02T11:17:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tA clone is an actual mesh with its own data. This data is simply copied from the original mesh_co_ and recreated into a new_co_ cloned_co_ mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAn instance is the actual main mesh_co_ where as a clone is an entirely new mesh.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2017-05-02T11:30:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFor real?  I_t_m going through Raanan_t_s blog and it says _qt__lt_span style_eq__qt_color_dd_#3a4145_sm__qt__gt_If all meshes are completely the same_co_ including material_co_ use instances. If the vertex data of the new meshes is the only thing that should be identical to the original mesh_co_ use cloning._qt_ and _qt_Cloning a mesh returns a_lt_span_gt_ _lt_/span_gt__lt_/span_gt__lt_code style_eq__qt_color_dd_#3a4145_sm__qt__gt_Mesh_lt_/code_gt__lt_span style_eq__qt_color_dd_#3a4145_sm__qt__gt__lt_span_gt_ _lt_/span_gt_object that you will be able to manipulate further. The main thing that is cloned here is the geometry - the vertex data of the mesh is reused across all meshes. The material_co_ for example_co_ can be changed._qt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_font color_eq__qt_#3a4145_qt__gt_I thought that meant clones will share the same vertex data but separate materials.  _lt_/font_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2017-05-02T12:14:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tCloned meshes share geometry.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2017-05-02T12:19:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_173142_qt_ data-ipsquote-contentid_eq__qt_30150_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1493714063_qt_ data-ipsquote-userid_eq__qt_12544_qt_ data-ipsquote-username_eq__qt_ozRocker_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t3 hours ago_co_ ozRocker said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\thow come the clone still stays on the screen even after deleting the main object?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI think it has to do with this line_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/8e9cc34160fa1b507c1f73e791ed93a131a77378/src/Mesh/babylon.geometry.ts#L374_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/8e9cc34160fa1b507c1f73e791ed93a131a77378/src/Mesh/babylon.geometry.ts#L374_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is the correct behavior.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2017-05-02T12:24:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_173164_qt_ data-ipsquote-contentid_eq__qt_30150_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1493727581_qt_ data-ipsquote-userid_eq__qt_4289_qt_ data-ipsquote-username_eq__qt_adam_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t3 minutes ago_co_ adam said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI think it has to do with this line_dd_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/8e9cc34160fa1b507c1f73e791ed93a131a77378/src/Mesh/babylon.geometry.ts#L374_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/8e9cc34160fa1b507c1f73e791ed93a131a77378/src/Mesh/babylon.geometry.ts#L374_lt_/a_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI think I get it.  That statement checks to see if any other mesh is using that same geometry.  If it is_co_ remove the mesh from the list of active meshes but keep the geometry in memory _t_cos its still being used\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Raggar","Date":"2017-05-02T12:37:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tMy mistake then _lt_img alt_eq__qt__dd_P_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ title_eq__qt__dd_P_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]