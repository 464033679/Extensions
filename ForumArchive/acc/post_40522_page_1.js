[{"Owner":"ibGoge","Date":"2018-10-08T23:25:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen loading a new level I dispose the old scene and create a new one. My input system observes a new scene was created_co_ unsubscribes itself from the old one_co_ and subscribes to the new scene.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe mouse events continue on as normal from the new scene but the keyboard events stop._lt_br /_gt_\n\tIf I remove focus from the canvas_co_ focus on another html element_co_ and then return to the canvas_co_ I begin to receive keyboard events again.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe _t_keyboard info_t_ console log stops when the new scene is attached to.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAm I missing something else that needs to be done to recapture the keyboard with a new scene?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks!\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_attachScene(scene) {\n    this.clearStates()\n    this.scene _eq_ scene\n    this.onKeyboardObserver _eq_ scene.onKeyboardObservable.add((info) _eq_&gt_sm_ {\n      console.log(_t_keyboard info_t__co_ info)_sm_\n      this.handleBabylonOnKeyboard(info)\n    })\n    this.onMouseObserver _eq_ scene.onPointerObservable.add(this.handleBabylonOnPointer_co_ BABYLON.PointerEventTypes.POINTERDOWN | BABYLON.PointerEventTypes.POINTERUP | BABYLON.PointerEventTypes.POINTERMOVE)_sm_\n  }_lt_/code_gt__lt_/pre_gt_\n\n_lt_pre_gt_\n_lt_code_gt_detachSecne(scene) {\n    this.clearStates()\n    if (this.scene _eq__eq_ undefined) { return }\n    this.scene _eq_ undefined\n    scene.onKeyboardObservable.remove(this.onKeyboardObserver)\n    scene.onPointerObservable.remove(this.onMouseObserver)\n    this.onKeyboardObserver _eq_ undefined\n    this.onMouseObserver _eq_ undefined\n  }_lt_/code_gt__lt_/pre_gt_\n\n_lt_pre_gt_\n_lt_code_gt_createScene() {\n    if (this.currentScene) {\n      this.currentScene.dispose()_sm_\n    }\n    if (this._camera) {\n      this._camera.dispose()_sm_\n      this._camera _eq_ undefined_sm_\n    }\n    // remove watched game objects\n    Object.values(this.objects).forEach(object _eq_&gt_sm_ this.removeObject(object)) \n    // reset material cache\n    this.cachedMaterial _eq_ {}\n    // create new scene\n    let engine _eq_ this.engine\n    this.currentScene _eq_ new BABYLON.Scene(engine)\n    this.currentScene$.next(this.currentScene)_sm_\n    // create default min light level\n    var light _eq_ new BABYLON.HemisphericLight(_qt_HemiLight_qt__co_ new BABYLON.Vector3(0_co_ 1_co_ 0)_co_ this.currentScene)_sm_\n    light.color _eq_ new BABYLON.Color3(0_co_0_co_0)\n    light.intensity _eq_ 2 * 0.1\n    window.ambientLight _eq_ light\n  }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-10-09T10:34:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHave you tried setting the focus on the canvas with code? The canvas element is not focusable by default. You need to set a tab index for the canvas \n_lt_/p_gt_\n\n_lt_pre style_eq__qt_background-color_dd_#eff0f1_sm_border_dd_0px_sm_color_dd_#393318_sm_font-size_dd_13px_sm_padding_dd_5px_sm_text-align_dd_left_sm_vertical-align_dd_baseline_sm__qt__gt_\n_lt_code style_eq__qt_background-color_dd_#eff0f1_sm_border_dd_0px_sm_font-size_dd_13px_sm_padding_dd_0px_sm_vertical-align_dd_baseline_sm__qt__gt__lt_span style_eq__qt_border_dd_0px_sm_color_dd_#7d2727_sm_font-size_dd_13px_sm_padding_dd_0px_sm_vertical-align_dd_baseline_sm__qt__gt_&lt_sm_canvas_lt_/span_gt__lt_span style_eq__qt_border_dd_0px_sm_color_dd_#303336_sm_font-size_dd_13px_sm_padding_dd_0px_sm_vertical-align_dd_baseline_sm__qt__gt_ _lt_/span_gt__lt_span style_eq__qt_border_dd_0px_sm_color_dd_#e64320_sm_font-size_dd_13px_sm_padding_dd_0px_sm_vertical-align_dd_baseline_sm__qt__gt_tabindex_lt_/span_gt__lt_span style_eq__qt_border_dd_0px_sm_color_dd_#303336_sm_font-size_dd_13px_sm_padding_dd_0px_sm_vertical-align_dd_baseline_sm__qt__gt__eq__lt_/span_gt__lt_span style_eq__qt_border_dd_0px_sm_color_dd_#0f74bd_sm_font-size_dd_13px_sm_padding_dd_0px_sm_vertical-align_dd_baseline_sm__qt__gt_0_lt_/span_gt__lt_span style_eq__qt_border_dd_0px_sm_color_dd_#303336_sm_font-size_dd_13px_sm_padding_dd_0px_sm_vertical-align_dd_baseline_sm__qt__gt_ _lt_/span_gt__lt_span style_eq__qt_border_dd_0px_sm_color_dd_#7d2727_sm_font-size_dd_13px_sm_padding_dd_0px_sm_vertical-align_dd_baseline_sm__qt__gt_&gt_sm_&lt_sm_/canvas&gt_sm__lt_/span_gt__lt_/code_gt__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]