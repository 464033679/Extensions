[{"Owner":"ozRocker","Date":"2015-07-28T05:43:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m using a custom font for my scene so I have some code like this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_scene.textureContent.font _eq_ _qt_44pt GillSansMTProExtraBold_qt__sm__lt_/pre_gt__lt_p_gt_The problem is if I_t_m not referencing that font via HTML then its not loaded and it defaults to Times New Roman.  To get around this I created a hidden div with some text in it_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_&lt_sm_div style_eq__qt_position_dd_absolute_sm_ top_dd_-200px_sm_ left_dd_-200px_sm_ font_dd_ 22pt GillSansMTProExtraBold_qt_&gt_sm_hidden&lt_sm_/div&gt_sm__lt_/pre_gt__lt_p_gt_I_t_m just wondering if there_t_s a better way of doing this.  Is there a way I can preload the font with javascript instead?_lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-07-28T07:03:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I don_t_t think so. I searched that a while ago and didn_t_t find another way. But it_t_s not a bad solution. I experienced that you have to wait for the font to load_co_ too with something like $(window).load(function(){...})_sm_ If I didn_t_t the font was noch always loaded when I tried to write my text on a (2D) canvas._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2015-07-28T07:46:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_oh crap!  So you_t_re saying my method can result in race conditions and its better to use $(element).load() to serialise operations?  I guess this hasn_t_t happened _t_cos my initial scene load causes a long enough delay. So for the sake of _qt_safe_qt_ programming I should have something like this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_&lt_sm_div id_eq__qt_hidden_qt_ style_eq__qt_position_dd_absolute_sm_ top_dd_-200px_sm_ left_dd_-200px_sm_ font_dd_ 22pt GillSansMTProExtraBold_qt_&gt_sm_hidden&lt_sm_/div&gt_sm_&lt_sm_script&gt_sm_    $(_qt_#hidden_qt_).load(function(){        //Add 3D text into scene    })_sm_&lt_sm_/script&gt_sm__lt_/pre_gt__lt_p_gt__lt_em_gt_(I do use stylesheets_co_ but for demonstration purposes I_t_m using inline styling)_lt_/em_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-07-28T08:18:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Okay_co_ I searched what I did in that project_co_ and now I remember that even the .load thing didn_t_t quite catch it so I ended up with this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_document.onreadystatechange _eq_ function() {\tif (document.readyState _eq__eq__eq_ _t_complete_t_) {\t\t$(_t_.maincontent .contentRight h2_t_).each(function () {\t\t\tdrawFancyHeadline(this)_sm_\t\t})_sm_\t}}_sm__lt_/pre_gt__lt_p_gt_This was not a babylon project_co_ though_co_ I just used a canvas to draw some fancy headings instead of the normal boring h2 headings. But while testing on my local PC I noticed that it sometimes didn_t_t use the webfont I included. If you didn_t_t experience that issue_co_ it might not be a problem for you. But if you want to make sure everything is ready I guess you could use the above code (I just googled it myself_co_ so don_t_t ask me what exactly the difference between the jquery ready and the onreadystate complete is _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ )_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Well_co_ I hope it helps _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2015-07-28T09:02:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Just did some research.  Jquery _qt_.ready()_qt_ executes as soon as the DOM is constructed.  It is equivalent to document.readyState of _qt_interactive_qt_.  But when all resources have loaded you will get document.readyState _qt_complete_qt_._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here_t_s an explanation of the Javascript .load() event_lt_em_gt_ (not to be confused with the JQuery .load() command)_lt_/em_gt__dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt__lt_p style_eq__qt_color_dd_rgb(51_co_51_co_51)_sm_font-family_dd_Verdana_co_ Geneva_co_ Tahoma_co_ Arial_co_ Helvetica_co_ sans-serif_sm_font-size_dd_15px_sm__qt__gt_This event works with elements associated with a URL (image_co_ script_co_ frame_co_ iframe)_co_ and the window object._lt_/p_gt__lt_p style_eq__qt_color_dd_rgb(51_co_51_co_51)_sm_font-family_dd_Verdana_co_ Geneva_co_ Tahoma_co_ Arial_co_ Helvetica_co_ sans-serif_sm_font-size_dd_15px_sm__qt__gt_Depending on the browser_co_ the load event may not trigger if the image is cached (Firefox and IE)._lt_/p_gt__lt_/div_gt__lt_/blockquote_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-07-28T09:43:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Makes sense_co_ so I did it right_co_ eh? _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2015-07-28T11:09:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Well according to you and that website I quoted from_co_ .load() doesn_t_t always work_co_ so your code snippet is the safest for this workaround.  If you say you did ask around before to see if there was another way to preload the font_co_ then I guess this workaround is the best option_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]