[{"Owner":"lothar","Date":"2015-07-28T11:29:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I am new to this forum and first want to thank for a lot of helpfull posts!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Maybe someone can help me with this one_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ve started with _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#9U086%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#9U086#4_lt_/a_gt_ (I believe created by iiceman_co_ thanks!) and tried to use fabricjs to paint on the canvas. To allow user interaction I_t_ve send the events from the Bayblonjs canvas to the fabricjs canvas translated like this_dd_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var pickResult _eq_ scene.pick(scene.pointerX_co_ scene.pointerY)_sm_var texcoords _eq_ pickResult.getTextureCoordinates()_sm_ if (texcoords) {    var clicked_x _eq_ texcoords.x_sm_    var clicked_y _eq_ texcoords.y_sm_    var posX _eq_ (clicked_x * textureWidth) | 0_sm_    var posY _eq_ (textureWidth - clicked_y * textureHeight) | 0_sm_    var rect1 _eq_ canvas.upperCanvasEl.getBoundingClientRect()_sm_    var clientX _eq_ posX + rect1.left | 0_sm_    var clientY _eq_ posY + rect1.top | 0_sm_                      var evt _eq_ document.createEvent(_qt_MouseEvents_qt_)_sm_   evt.initMouseEvent(name_co_ true_co_ true_co_ window_co_ 1_co_ screenX_co_ screenY_co_ clientX_co_ clientY_co_ event.ctrlKey_co_ event.altKey_co_ event.shiftKey_co_ event.metaKey_co_ event.button_co_ canvas.upperCanvasEl)_sm_    return evt_sm_}_lt_/pre_gt__lt_p_gt_I was surprised that this works._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Sorry i didn_t_t figured it out how to make a playground example with fabricjs_co_ instead I have an example here_dd_ _lt_a href_eq__qt_http_dd_//www.steidle.net/playground/webgl/shirt/test.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.steidle.net/playground/webgl/shirt/test.html_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But my problem is that it is smooth in chrome_co_ slow in firefox and IE_co_ unusable in Mac Safari._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Does someone have a idea how i could get better performance?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The Part where the texture get updated is only called when the underlying fabricjs canvas changes_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_canvas.on(_t_after_dd_render_t__co_ function () {   UpdateTexture()_sm_})_sm__lt_/pre_gt__lt_p_gt_best regards_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Lothar_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-07-28T12:50:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hallo Lothar_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_really nice idea and it it seems to work very well in chorme. Looks cool and has a nice handling ... that_t_s pretty impressive_co_ good job!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_About the performance_dd_ are you sure that it_t_s a babylon problem? I just check out _lt_a href_eq__qt_http_dd_//fabricjs.com/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//fabricjs.com/_lt_/a_gt_ and moved that robot image there around a bit. It seems to have the same problem_dd_ very smooth with chrome_co_ very laggy with firefox. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So maybe you can isolate the problem or try another way of drawing on the canvas? If I have time I_t_ll try to make a playground with that fabric js thing and see if it happens_co_ too_co_ when preforming simple things like in the above playground._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-07-28T13:51:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Profiling in Firefox makes it look like ~3/4 of the time is being spent in BJS_t_s _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_engine#updateDynamicTexture_lt_/span_gt_. Unfortunately_co_ it looks like that method isn_t_t doing much except calling gl methods_co_ so I don_t_t know what might speed it up..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"lothar","Date":"2015-07-28T13:54:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello iiceman_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks for your answer. Didn_t_t thought about the obvious..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ve added a checkbox to turn the texture update off at _lt_a href_eq__qt_http_dd_//www.steidle.net/playground/webgl/shirt/test.html_qt_ title_eq__qt_External link_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.steidle.n...shirt/test.html_lt_/a_gt_ - when you click _qt_show hidden_qt_ and move the text around on the right canvas and then turn the update off and move it around - it doesn_t_t seem like it is faster in IE but it seems faster in Firefox._lt_/p_gt__lt_p_gt_So it seems it is a mixture between slower fabricjs in NON-Chrome and slower _qt_what ever happen when calling update on dynamic texture_qt_ in NON-Chrome._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_best regards_co__lt_/p_gt__lt_p_gt_Lothar_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-07-28T16:18:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I tired to play around with your fabricjs but I didn_t_t really understand it yet and I don_t_t have enough time to play with it. But I made a playground that at least seems to be able to use the fabricjs stuff_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#9U086%2331_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#9U086#31_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you can use that to show the problem in  a playground I am sure people will check it out and can help you find a solution _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"lothar","Date":"2015-07-28T18:36:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks for Setting up. I added the stuff here_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#9U086%2332_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#9U086#32_lt_/a_gt__lt_br_gt_Don_t_t know why it first says fabricjs not defined - so you have to press run again._lt_br_gt_ _lt_br_gt_When you view it in Firefox and Chrome you see the difference._lt_br_gt_ _lt_br_gt_Edit_dd_ Created a second one just for fun_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#9U086%2333_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#9U086#33_lt_/a_gt_ (wanted to see what happens with a lot of elements)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-07-28T20:49:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_That_t_s really super cool! _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Can you try that out_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#9U086%2334_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#9U086#34_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It seems better for me. I was actually just playing around and changed the update after render to a interval based update_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_// Update Texture when fabricjs canvas changedsetInterval(function () {    groundTexture.update()_sm_}_co_ 10)_lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"lothar","Date":"2015-07-29T06:04:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Good finding!_lt_br_gt_ _lt_br_gt_I wasn_t_t aware that _qt_after_dd_render_qt_ was called so many times...._lt_br_gt_ _lt_br_gt_But now the texture is updated 100 Times per second no matter if there is a change or not ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Wouldn_t_t it better to do it like this_dd__lt_br_gt_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint lang-auto_qt__gt_var timeout _eq_ 0_sm_fabricCanvas.on(_t_after_dd_render_t__co_ function () {\t    if (timeout_eq__eq_0) {\t        \ttimeout _eq_ setTimeout(function () { groundTexture.update()_sm_timeout_eq_0 }_co_ 10)_sm_    }    else {\t            }})_sm__lt_/pre_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#9U086%2335_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#9U086#35_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What do you think?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks for you help._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-07-29T07:10:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Sure_co_ seems good to me. So does that actually solve the problem? Did you test in IE_co_ too?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"lothar","Date":"2015-07-29T07:16:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It_t_s not as good as in Chrome but alot better than before. Thanks for you help!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2017-01-15T14:54:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI know this is old.  I_t_m trying to do the same thing but the playground doesn_t_t work.  I fixed the link to the fabric.js file so there_t_s a new playground here _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#9U086%23114_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#9U086#114_lt_/a_gt_ but what isn_t_t working is moving around the fabric objects.  clientX and clientY seem to be correct because the mouse overs are in the right spot but the position of the _qt_text_qt_ element has some big offset that_t_s throwing it completely off.  I don_t_t know what this offset is or even when to apply it.  Any ideas?\n_lt_/p_gt_\n\n\t\t\t\n\t\t\t\t\n\n_lt_span class_eq__t_ipsType_reset ipsType_medium ipsType_light_t_ data-excludequote_gt_\n\t_lt_strong_gt_Edited _lt_time datetime_eq__t_2017-01-16T00_dd_40_dd_50Z_t_ title_eq__t_01/16/2017 12_dd_40  AM_t_ data-short_eq__t_1 yr_t__gt_January 16_co_ 2017_lt_/time_gt_ by ozRocker_lt_/strong_gt_\n\t\n\t\t_lt_br_gt_Updated playground to use latest fabric.js version\n\t\n\t\n_lt_/span_gt_\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2017-01-16T03:18:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t    Texture.update(invertY)_sm_ ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_em_gt__lt_strong_gt_EDIT - Never mind - I misunderstood the issue. I have good performance on all devices from android to IOS - so I will look further._lt_/strong_gt__lt_/em_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2017-01-16T07:44:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI found a problem in the _translateObject() function which is what moves the object.  The position seems to alternate from valid position to invalid position like this_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_left_dd_ 202  top_dd_ 710\nleft_dd_ 1180  top_dd_ 243\nleft_dd_ 201  top_dd_ 710\nleft_dd_ 1179  top_dd_ 243\nleft_dd_ 197  top_dd_ 710\nleft_dd_ 1177  top_dd_ 243\nleft_dd_ 194  top_dd_ 710\nleft_dd_ 1175  top_dd_ 243_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI can do a quick fix for this instance by filtering out _qt_left_qt_ values greater than 1_co_000 which results in a working playground here _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#9U086%23116_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#9U086#116_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHowever_co_ that_t_s just a temporary fix.  Still trying to find the root of the problem.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEdit_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have a feeling this is getting called twice for every movement_co_ like the _qt_mousemove_qt_ event is triggered twice\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2017-01-16T13:16:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI tracked down where its being called twice and its in the _qt__onMouseMove_qt_ function in the fabric library.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI changed that function to this_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_    fabric.Canvas.prototype._onMouseMove _eq_ function (e) {\n\t\tif (arguments.callee.caller _eq__eq__eq_ null) {\n\t\t\treturn_sm_\n\t\t}\n\t  !this.allowTouchScrolling &amp_sm_&amp_sm_ e.preventDefault &amp_sm_&amp_sm_ e.preventDefault()_sm_\n      this.__onMouseMove(e)_sm_\n    }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI was just mucking around_co_ trying to find the calling function.  _onMouseMove gets called by the getEvent() function we previously specified_co_ but it gets called again and the calling function is null (wtf??) so I just made it return when that happens_co_ and it works!  So I_t_m still not sure why this gets called twice (once from getEvent() and another from somewhere unknown) but I stopped that happening and it works in all cases _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#9U086%23117_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#9U086#117_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]