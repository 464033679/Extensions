[{"Owner":"Kreeba","Date":"2017-08-18T16:05:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWhat is the best practice in picking up this gesture_co_ and infact gestures in general?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI know that the Pinch-to-zoom is already implemented as the sorta camera radius increase/decrease on the universal and touch camera_co_ however I want to use the gesture on an orthographic camera_co_ so need to pick up the event.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHow?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-08-21T18:10:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey\n_lt_/p_gt_\n\n_lt_p_gt_\n\tunfortunately there is no direct support for pinch/zoom gesture event on the web\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can have a look here to understand how I do it for the arcRotateCamera_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/Inputs/babylon.arcRotateCameraPointersInput.ts#L115_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/Inputs/babylon.arcRotateCameraPointersInput.ts#L115_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBasically_co_ based on evt.pointerId_co_ I capture position of first two pointers and then compute the distance between both\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"UeliUeli","Date":"2018-11-19T10:54:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi There\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI try to manipulate the pinch-zoom and panning gesture of the arc rotating camera_co_ but the two arguments from the doc don_t_t seem to change the behavier. Do you have any idea what could be wrong?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe problem is_dd_ The cameras pinch function is too slow...\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tQuote\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t_lt_br /_gt_\n\t\t\t                                // Parameters_dd_ alpha_co_ beta_co_ radius_co_ target position_co_ scene_lt_br /_gt_\n\t\t\t                                var camera _eq_ new BABYLON.ArcRotateCamera(_qt_Camera_qt__co_ 0_co_ 0_co_ 5_co_ new BABYLON.Vector3(-1300_co_0_co_2700)_co_ scene)_sm_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_br /_gt_\n\t\t\t                                // Positions the camera overwriting alpha_co_ beta_co_ radius  (LeftOrRight_co_UpOrDown_co_ForwardOrBackward))_lt_br /_gt_\n\t\t\t                                camera.setPosition(new BABYLON.Vector3(-1300_co_0_co_2700))_sm_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t                                //set target_lt_br /_gt_\n\t\t\t                                camera.setTarget(BABYLON.Vector3.Zero())_sm_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t                                // This attaches the camera to the canvas_co_ prevent default and tels it what button is used for panning_lt_br /_gt_\n\t\t\t                                camera.attachControl(canvas_co_ false_co_ false_co_ 2)_sm_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t                                //limit angle_lt_br /_gt_\n\t\t\t                                camera.lowerBetaLimit _eq_ 0.1_sm__lt_br /_gt_\n\t\t\t                                camera.upperBetaLimit _eq_ (Math.PI / 2) * 1.1_sm__lt_br /_gt_\n\t\t\t                                camera.lowerRadiusLimit _eq_ 20_sm__lt_br /_gt_\n\t\t\t                                camera.upperRadiusLimit _eq_ 4500_sm_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t                                //sensitivity_lt_br /_gt_\n\t\t\t                                camera.angularSensibilityX _eq_ 4100_sm__lt_br /_gt_\n\t\t\t                                camera.angularSensibilityY _eq_ 6500_sm__lt_br /_gt_\n\t\t\t                                camera.panningSensibility _eq_ 100_sm__lt_br /_gt_\n\t\t\t                                //camera.speed _eq_ 0.5_sm__lt_br /_gt_\n\t\t\t                                camera.pinchPrecision _eq_ 60.0_sm__lt_br /_gt_\n\t\t\t                                camera.pinchDeltaPercentage _eq_ 800_sm_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t                                scene.activeCamera _eq_ camera_sm_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-11-19T12:39:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tpinchPrecision or pinchDeltaPrecision is the way to go_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#J5RFQP_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#J5RFQP_lt_/a_gt_ vs _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#J5RFQP%231_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#J5RFQP#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]