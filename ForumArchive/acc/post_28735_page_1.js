[{"Owner":"CarlBateman","Date":"2017-02-28T01:22:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m writing an FPS (Asteroids in 3D) and need to change the input mapping and some of the behaviour of the camera (currently Universal Camera).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. rotate left and right (about the y-axis) instead of move - it does this for the mouse_co_ but not keys_lt_br /_gt_\n\t2. when rotating tilt into the direction of roatation - to emphasise the motion and give a _qt_swooping_qt_ feel_lt_br /_gt_\n\t3. control key sensitivity \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAre these behaviours / properties directly configurable? Or do I need to subclass a new camera type_co_ or develop a different input control mechanism?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-02-28T03:41:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello Carl_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBy default the current input for keyboard controls only position (_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/Inputs/babylon.freecamera.input.keyboard.ts_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/Inputs/babylon.freecamera.input.keyboard.ts_lt_/a_gt_). To achieve what you want I suggest creating your own input controller.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDoc_dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/tutorials/customizing_camera_inputs#implementing-your-own-input_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/tutorials/customizing_camera_inputs#implementing-your-own-input_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is a sample for you (it rotate the camera using left/right)_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1WFOOA%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1WFOOA#2_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"CarlBateman","Date":"2017-03-01T13:57:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tBrilliant_co_ thanks_co_ that works.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m afraid I must admit that_co_ try as I might_co_ I can_t_t understand the documentation_co_ not least since it seems aimed at input rather than control and some of the code is TypeScript(?). I_t_ve tried reading it several times to no avail.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe interface does indeed appear simple_co_ sadly actual implementation isn_t_t and seems rather involved for attachControl_co_ detachControl and checkInputs. I_t_d recommend including the sample you provided in the doco. (I might go as far as to say it_t_s vital.)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAgain_co_ thanks. I_t_m always impressed by the speed and utility of your responses/support. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-03-01T16:33:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI went to the same conclusion _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ I added the sample to the doc.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]