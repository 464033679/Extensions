[{"Owner":"heyzxz","Date":"2017-03-23T16:21:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi again_co_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWell as it shows in the doc_co_ most of the BJS objects (meshes_co_ materials_co_ textures...) need a _t_scene_t_ parameter in their constructor function_co_ I guess the main purpose of this design is making the memory management clearer and easier_co_  so the scene takes fully control of the memory management for all stuffs_co_ when you leave a scene_co_ all you need is simply calling a _t_scene.dispose_t_ and it will clear/release everything for you_co_ right?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut I have some questions about this_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. Does this mean when designing a BJS game_co_ it_t_s NOT recommended to share objects(especially model objects ) with multiple scenes?  For example_co_ player_t_s game properties_co_ a gun. What is the correct/recommended way to manage it? Re-_lt_span_gt_instantiate the gun in each scene? or holding the gun(model) out of scene and share it with other scenes?_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. How to deal with the later-loading objects? I mean when calling _t_scene.dispose_t__co_  what if there are still something in the loading?? does the _t_scene.dispose_t_ takes care of them? It looks not... Please see this PG_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#280KRP%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#280KRP#1_lt_/a_gt__co_ there is a texture still in loading when calling the _t_scene.dispose_t__co_ then_co_ you_t_ll see some webgl warnings and also you_t_ll find the onload callback for the texture is triggered (which shouldn_t_t be)...   \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_Screen-Shot-2017-03-24-at-12_10.38-AM.jpg.580d9e683b6f83e4912c14a2b917e414.jpg_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_12174_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_03/Screen-Shot-2017-03-24-at-12_10.38-AM.jpg.580d9e683b6f83e4912c14a2b917e414.jpg_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tA similar example_dd_  What if dispose the scene when there is a  _t_BABYLON.SceneLoader.ImportMesh..._t_  NOT finished...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHow do I deal with these cases?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you! \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-03-23T16:41:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou are right _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ The scene oriented approach is here to help managing resources.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. My recommendation would be to have a _qt_holding_qt_ scene where your objects belong and when you want to use them in a specific scene you can then use addMesh/removeMesh to move your mesh (You will also have to do it for the materials)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1_t_. You can also think about a big scene where you have hidden objects that can be used only when needed\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2.As you found out this is not supported by scene.dispose but I will fix it for next commit (Checking if scene is disposed in the importMesh callback)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"heyzxz","Date":"2017-03-23T17:12:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t1. Good idea! Make sense for me !\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. Thank you!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"heyzxz","Date":"2017-03-30T03:40:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_168425_qt_ data-ipsquote-contentid_eq__qt_29288_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1490287303_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 3/24/2017 at 0_dd_41 AM_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tHey!\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tYou are right _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ The scene oriented approach is here to help managing resources.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t1. My recommendation would be to have a _qt_holding_qt_ scene where your objects belong and when you want to use them in a specific scene you can then use addMesh/removeMesh to move your mesh (You will also have to do it for the materials)\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t1_t_. You can also think about a big scene where you have hidden objects that can be used only when needed\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t2.As you found out this is not supported by scene.dispose but I will fix it for next commit (Checking if scene is disposed in the importMesh callback)\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tHi again _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt__co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI followed your #1 suggestion_dd_ create a holding scene to hold all the shared stuffs (game properties)_co_ and then use addMesh/removeMesh to move them to others scenes_co_ but unfortunately I got another problem _lt_img alt_eq__qt__dd_(_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ title_eq__qt__dd_(_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tThe rendering for materials (checked for StandardMaterial_co_ PBRMaterial_co_ but I guess other things such as Meshes_co_ Textures..may still have this problem) are based on their own scenes_co_ which means if an object belongs to SceneA_co_ then I add it to SceneB( by using _t_addMesh_t_ )_co_ when rendering this object in the sceneB_co_ it still access SceneA_t_s properties ( object.getScene()_co_ object.getScene().activeCamera... )  to do its render_co_ which is wrong in my case.  And I didn_t_t find a _t_public way_t_ to change its _t__scene_t_ property.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/babylon.pbrMaterial.ts#L1334_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/babylon.pbrMaterial.ts#L1334_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/babylon.shaderMaterial.ts#L250_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/babylon.shaderMaterial.ts#L250_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny ideas ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-03-31T23:29:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOh yeah right _dd_(. But you can still update mesh._scene (even if this is a bit hacky) it should work\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"heyzxz","Date":"2017-04-01T04:50:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYeah that_t_s _lt_span style_eq__qt_color_dd_#272a34_sm__qt__gt_hacky_lt_/span_gt_... I think I probably won_t_t do this for now as I_t_m targeting on a long-term project_co_  hacky ways may bring potential risks in the future...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo I_t_m now giving up caching shared BJS objects and choose to create/dispose them in every scene...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut I really like your _t_holding scene_t_ idea_co_ and I hope BJS can think about it and some day can provide an official way to support it. Because it_t_s a great way to keep the memory more stable_co_ which can lead to much less GC rounds of the browsers than frequently creating/disposing things (as we know the GC round somethings is the killer for the performance)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-03T16:57:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tActually we could do an experiment_dd_ does it work when you change the mesh_scene? Because you may also need to change the material._scene in the same way. And if your mesh is referenced by a light_co_ shadows_co_ or an instance then everyone has to move.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe more I think about i_co_ the more I think we should not do it _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tAnd what about having only one scene and playing with mesh.clone? It is acceptable in your case?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"heyzxz","Date":"2017-04-03T17:28:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_169587_qt_ data-ipsquote-contentid_eq__qt_29288_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1491238624_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t22 minutes ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tActually we could do an experiment_dd_ does it work when you change the mesh_scene? Because you may also need to change the material._scene in the same way. And if your mesh is referenced by a light_co_ shadows_co_ or an instance then everyone has to move.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tYes_co_ agree.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_169587_qt_ data-ipsquote-contentid_eq__qt_29288_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1491238624_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t23 minutes ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tAnd what about having only one scene and playing with mesh.clone? It is acceptable in your case?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tNot very sure what do you mean by _t_mesh.clone_t_ do you mean just use only one scene and create(may be clone if possible)/dispose game stuffs in that scene? Yes_co_ I_t_m currently doing this way _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-04T17:56:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYes this is what I meant _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]