[{"Owner":"Numa","Date":"2016-06-24T04:08:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi there_co_Â \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you try to use one of the loaders (for .obj files for instance) and you are loading your scene from a data string_co_ not a file_co_ babylon will use the default load function and fail.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_SceneLoader._getPluginForFilename _eq_ function (sceneFilename) {\n            var dotPosition _eq_ sceneFilename.lastIndexOf(_qt_._qt_)_sm_\n            var queryStringPosition _eq_ sceneFilename.indexOf(_qt_?_qt_)_sm_\n            if (queryStringPosition _eq__eq__eq_ -1) {\n                queryStringPosition _eq_ sceneFilename.length_sm_\n            }\n            var extension _eq_ sceneFilename.substring(dotPosition_co_ queryStringPosition).toLowerCase()_sm_\n            for (var index _eq_ 0_sm_ index &lt_sm_ this._registeredPlugins.length_sm_ index++) {\n                var plugin _eq_ this._registeredPlugins[index]_sm_\n                if (plugin.extensions.indexOf(extension) !_eq__eq_ -1) {\n                    return plugin_sm_\n                }\n            }\n            return this._registeredPlugins[0]_sm_\n        }_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tIt can_t_t find the extension of course_co_ as the fileName variable contains the scene data.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn 2.3 this use to work accidentally because the function would return _registeredPlugins[this._registeredPlugins.length - 1]_co_ which if you had an extra loader registered wold return it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHow do you guys want to go about fixing that one? optional Extension parameter? LoadFromData overload?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-06-24T14:47:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tLike the idea of optional extension parameter\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]