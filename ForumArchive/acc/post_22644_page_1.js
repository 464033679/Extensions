[{"Owner":"chicagobob123","Date":"2016-05-19T00:49:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI started an app about 4 months ago in three.js as a proof of concept. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIts not a game but a ship yard inventory system. It maintains the position of over 20_co_000 containers in 3 basic sizes_co_ and reflects the movement of over 200 vehicles with 5 different types. The prototype app positions the vehicles and the moves the containers around the yard.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe vehicles and containers are using models in the js format. The containers are wrapped in about 15 different textures that have the company logo in 3 basic sizes and  along with a couple default textures when we don_t_t have the a matching company logo. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow the problems. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWith Three.js I have noticed massive memory leak that I think is caused by the adding and removal of containers. For performance I placed all the containers in just a few concatenated pieces of Geometry to reduce the draw calls. The vehicles I left alone. To remove a container I modify the geometry on the fly. That being said_co_ not sure if I should even do it that way and no place just to ask questions like can I do this_co_ or does this work for three js. The other issue I have is it seems to be changing versions with internal alterations. As my code becomes larger modifying it becomes more difficult. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen I did a search on three.js vs ? and found Babylon read a few posts about it being more industrial strength and seeing a board that actually discusses the language I am more intrigued.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDoes it make sense to change? Is the language similar or different.  I saw the multi-thousand spheres but they had no textures is it possible to apply image textures from an array. Does babylon have a js loader for models and png loaders for textures. I_lt_span style_eq__qt_line-height_dd_1.6_sm__qt__gt_s there light that is like sunlight? _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFeel free to ask questions etc. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tthanks\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-05-19T01:19:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\thello and welcome!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLanguage is the same_dd_ Still good ol_t_ Javascript. But we also provide Typescript if you_t_re more into more modern languages _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tRegarding your project I see several options_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- You can rely on instances (if your number of similar containers is high)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- You can use our ubber powerful SPS. Documentation _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/Solid_Particle_System_qt_ rel_eq__qt_external nofollow_qt__gt_here _lt_/a_gt_and probably a good example for you_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1X7SUN%237_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1X7SUN#7_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- We also support cloning (which is similar to sharing geometries in 3.js)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhatever option you_t_ll choose_co_ you_t_ll always find someone here to help you\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"chicagobob123","Date":"2016-05-19T01:38:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks so much for your reply. Instances sounds interesting. Can each instance be altered by an indexed texture? Like here is a box it has texture 7 here is another box it has texture 2. My thinking is texture 7 and 2 provide me with different logos. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSorry_co_ I will try to do some reading on how this stuff works and again thanks for the reply\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-05-19T02:02:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tInstances are constraint to use exactly the same material but you can create two groups of instances_dd_ one for logo 1 and one for logo 2 _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MasterSplinter","Date":"2016-05-19T03:17:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tLol _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s more organized and less buggy than three.  Although the assets make the repo huge _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-05-19T04:10:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tAssets are on a different repo now _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Kesshi","Date":"2016-05-19T07:14:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOne thing you have to keep in mind if you do a conversion is that BabylonJs uses a left handed coordinate system and ThreeJs uses a right handed system. That means you may have to convert your models or otherwise they look mirrored because the z-axis is inverted._lt_br /_gt_\n\tI wrote a custom loader for our models and doing the conversion from right to left directly while loading.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-05-19T07:57:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe SPS (solid particle system) allows to have a different texture per particle_co_ so per container in your case ... from the same single texture image file.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt will generate only one draw call. It can be seen as the equivalent of the buffer geometry in threeJS_co_ although it provides far more methods than the buffer geometry.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"chicagobob123","Date":"2016-05-19T13:44:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIn reading the replies I dont know what repo is? \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_line-height_dd_22.4px_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_float_dd_none_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_.Also _qt_ from the same single texture image file._lt_/span_gt_ _qt_ Is there an example on how to create a texture map for a particle and access its components parts ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am going to have a go at it and convert. First the replies here are so refreshing and its fantastic to have people familiar with the code. This is sorely lacking in three.js_co_ Just starting out at this its imperative to be able to get some sort of leg  up on what to use. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI love the idea of using a Solid Particle system and only one draw call. The bulk of the containers are static.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAbout 5 every few seconds containers are either removed or added. I imagine the particle has a life and it can be removed this way. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for everything so far this is most encouraging. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2016-05-19T15:20:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\trepo - repository (on github)\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-05-19T16:30:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tyou can first read this about the SPS _dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/Solid_Particle_System_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/overviews/Solid_Particle_System_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tcheck out the online examples in the text\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can_t_t add or remove the particles once it_t_s created_co_ but you can make them invisible by scaling them to zero. You have to generate the SPS with the final number of containers.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBTW_co_ I will implement the per particle visibility so it will be straight forward for users.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNote that currently you can set a texture per particle but the way the texture applies to each particle is defined by the particle model._co_ maybe a box in your case\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo set each particle texture_co_ have a read please to this part _dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/Solid_Particle_System#uvs_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/overviews/Solid_Particle_System#uvs_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\there_t_s a very old example when SPS was still a prototype _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2KSQ1R%2338_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2KSQ1R#38_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe principle hasn_t_t changed\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthe texture atlas used is this one _dd_ _lt_img alt_eq__qt_spriteAtlas.png_qt_ class_eq__qt_ipsImage_qt_ src_eq__qt_http_dd_//jerome.bousquie.fr/BJS/images/spriteAtlas.png_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-05-20T11:35:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tthe SPS per particle visibility is just PRed _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ll do a little post to announce it\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-05-20T11:56:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tjust my two cents about the initial post _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- We are here numerous people that have switched from ThreeJs to BabylonJs and noone of us did it with regret. You could search this forum about this topic_co_ you_t_ll see sometimes these testimonials.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- 3Js_co_ BJS_co_ or any other WebGL framework_co_ they all are just WebGL. And I think that 20 000 solids on the screen is still a huge geometry for WebGL if you need to compute and update them each frame.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m afraid some optimizations will be required_co_ some leads to think about _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tdo you need to update 20K meshes each frame ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tdo you need to display 20K meshes ? the user won_t_t make the difference if there are only 8K_co_ 12K or 15K but the CPU will !\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBJS instances or the SPS are good tools to lower the number of draw calls and to not reallocate the memory (so no GC activity)_co_ but they can_t_t override the current JS/WebGL limitations _sm_-)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"chicagobob123","Date":"2016-05-20T14:09:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_line-height_dd_22.4px_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_\n\tdo you need to update 20K meshes each frame ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNo_co_ MOST do not move. There are only a few that do. (about 50 in motion at any given time)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe fact that particles can not be deleted or added to worries me a bit. Not sure how to work around that. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_line-height_dd_22.4px_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_float_dd_none_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_do you need to display 20K meshes ?_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt depends on the field of view which can be all or some. Think of it like google earth for a shipping yard.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFYI here is how I beat this in 3js by using some tricks.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) I know that every yard has a physical size. So I subdivided the containers into large groups by location. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) I knew that I would only use so many corporate logo textures for the containers_co_ so I created an array of them. The Meshes in 3js can use the index into that array. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t3) I merged the geometry of all containers groups_co_ in 3js when you do this you can give it an index to the array of textures.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t4) That created a group of large meshes from the geometry passing it the textures as well. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t5) Knowing exactly how many Faces and Vertices and FaceVertexUvs I modified the cached version of the mesh geometry\n_lt_/p_gt_\n\n_lt_p_gt_\n\tand the clone option to delete or add container geometry.  Then simply replaced it when something was modified. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI get 30 to 60 fps without issue and only have to endure 25 to 50 draw calls on the large meshs.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMemory usage is insane.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_em_gt_I tried the SPS example in the playground raising the number of primitives to 20_co_000 total_co_ that did NOT go well. I am not sure if its the loop that is holding it back? Or the _lt_/em_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_em_gt_actual amount of information. Going to check that next. _lt_/em_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_em_gt_Worse comes to worse I am hoping there is something here that can accommodate what I did last. _lt_/em_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI love community and users which I hope to be more a part of once I can do more than draw a sphere. _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-05-20T14:21:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\twaaaoow... you pushed the SPS to 20K and it worked as you expected _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tcool\n_lt_/p_gt_\n\n_lt_p_gt_\n\twith such a huge mesh (the SPS is a single mesh) if you don_t_t call _lt_em_gt_setParticles()_lt_/em_gt_ every frame or if you don_t_t update all the particles each frame_co_ this should do the job\n_lt_/p_gt_\n\n_lt_p_gt_\n\tnote that the solid particle can now be set to invisible\n_lt_/p_gt_\n\n_lt_p_gt_\n\twell_co_ I would suggest for instance to use less solids anyway and to use what we call the level of detail (LOD) when the camera goes far away so when the field of view increases _dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/tutorials/How_to_use_LOD_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/tutorials/How_to_use_LOD_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tand _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/tutorials/In-Browser_Mesh_Simplification_%28Auto-LOD%29_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/tutorials/In-Browser_Mesh_Simplification_%28Auto-LOD%29_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tmaybe could find also some ideas from this forum topic _dd_\n_lt_/p_gt_\n_lt_iframe data-embedcontent_eq__qt__qt_ frameborder_eq__qt_0_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/topic/21957-how-to-optimise-performance-when-using-a-lot-of-instances/?do_eq_embed&amp_sm_embedComment_eq_125167&amp_sm_embedDo_eq_findComment_qt__gt__lt_/iframe_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"chicagobob123","Date":"2016-05-20T14:23:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tSORRY that was a misquote. _lt_em_gt_that did NOT go well. It bogged down and went slow. _lt_/em_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-05-20T14:31:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tseems quite normal then regarding the number of instances\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tfyi _dd_ this one runs at 60 fps with 8K boxes in chrome on my computer _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#16SA9C%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#16SA9C#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tif I use particle invisibility for some of them (not yet in the PG) and even when adding shadows casted to the walls_co_ I can run more than 10K boxes\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"chicagobob123","Date":"2016-05-20T14:58:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI will be trying some more stuff today. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"chicagobob123","Date":"2016-05-20T15:11:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI modified your code to based on what someone else mentioned.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI created 3 particle systems at 8K each. 8K particles * 3 systems _eq_ 24_co_000 boxes and it\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#16SA9C%237_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#16SA9C#7_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI only moved 8K of the particles. Which is way more than I would do in a normal world. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-05-20T15:32:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tWorks well here _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-05-20T15:38:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tif some of the sps are to never be updated_co_ you can set them as immutable_co_ this will still increase the perfs _dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/Solid_Particle_System#create-an-immutable-sps_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/overviews/Solid_Particle_System#create-an-immutable-sps_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tbut in this case_co_ their particle won_t_t move_co_ neither change once created\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"chicagobob123","Date":"2016-05-20T15:51:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div style_eq__qt_table-layout_dd_fixed_sm_width_dd_1229px_sm_line-height_dd_1.6_sm_color_dd_rgb(39_co_42_co_52)_sm_font-size_dd_14px_sm_margin-bottom_dd_20px_sm_margin-top_dd_0px_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_\n\t_lt_p style_eq__qt_margin-top_dd_0px_sm__qt__gt_\n\t\t_qt_ if some of the sps are to never be updated. _qt_ Sadly that is not the case.\n\t_lt_/p_gt_\n\n\t_lt_p style_eq__qt_margin-top_dd_0px_sm__qt__gt_\n\t\tAlthough my mind is having all kind of thoughts. Maybe one particle set could be trees and or lamp posts.  Those would never move. Knowing that you can stitch together several of these creates a lot of possibilities. \n\t_lt_/p_gt_\n\n\t_lt_p style_eq__qt_margin-top_dd_0px_sm__qt__gt_\n\t\tBut as they say_co_ _qt_Brick by Brick_qt_. I now have to go back see if I can load a texture and give a pretty hard think on how to load the textures for the containers.\n\t_lt_/p_gt_\n\n\t_lt_p style_eq__qt_margin-top_dd_0px_sm__qt__gt_\n\t\t( I saw you can have multiple textures if you stitched them together into one texture and use the percentage of the UV. Thanks Jerome. )\n\t_lt_/p_gt_\n_lt_/div_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-05-20T21:10:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tanother approach (what could be combined with yours) is to use the start and end parameters of _lt_em_gt_setParticles(start_co_ end_co_ update) _dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/Solid_Particle_System#start-and-end-indexes-for-setparticles_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/overviews/Solid_Particle_System#start-and-end-indexes-for-setparticles_lt_/a_gt__lt_/em_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tExample _dd_ here are 20K particles in a single SPS_co_ but each frame only the 100 to 500-th particles are updated _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#16SA9C%239_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#16SA9C#9_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthe loop is done only on this subpart_co_ so faster_co_ but the whole VBO is still passed to the GPU\n_lt_/p_gt_\n\n_lt_p_gt_\n\tof course_co_ you can choose to update only a given i-th particle by calling setParticles(i_co_ i+1_co_ true)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tand you can also call setParticles() many times_co_ for each wanted particle to update\n_lt_/p_gt_\n\n_lt_p_gt_\n\tsetParticles(i_co_ i+1_co_ false)_sm_ // updates only the i-th logical particle and not the VBO\n_lt_/p_gt_\n\n_lt_p_gt_\n\tsetParticles(j_co_ j+1_co_ false)_sm_ // same for the logical j-th\n_lt_/p_gt_\n\n_lt_p_gt_\n\tsetParticles(n_co_ n+1_co_ true)_sm_ // finally updates the logical n-th and updates the VBO only on this last call\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"aWeirdo","Date":"2016-05-21T13:39:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI know i_t_m late in this thread_co_ but i_t_d like to add_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat babylonJs beats threeJs on many points_co_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tnot just preformance_co_ but up-to-date docs_co_ examples and tutorials aswell_co_ together with an active community always ready to help out where they can.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tif you download the latest threeJs and attempt to run one of their examples locally_co_ it_t_ll more than likely error out and drasticly slow down the learning process of the framework_co_ because they are not kept updated_co_ and online_co_ they often run on an older version of threeJs than what you download from their repo_co_ the same goes for their docs_co_ often outdated_co_ and again just slowing down the learning process even more because you have to waste time looking around trying to find the correct method of doing something.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhere babylonJs_t_s examples are run in the playground_co_  which uses the latest version of babylonJs and therefore so does the examples_co_ and are more likely than not_co_ also backwards compatible.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe doc_t_s are ordered by version_t_s and updated with any changes made &amp_sm_ features added when a new  _qt_full_qt_ version is released.e.g. 2.3_co_ the current _qt_master_qt_ version and 2.2_co_ the previous master version. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tFurtheremore_co_ i simply find babylonJs well.. simpler and easier to work with.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tFeel free to correct me if i am wrong on any of my points_co_ this is purely from personal experience with the two frameworks.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-05-26T07:31:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t@chicagobob _dd_  about your containers and SPS as I guess you are still investigating.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAssuming_co_ you_t_ve got thousands of containers but only dozens are updated each frame_co_ what would I  do would be to create two SPS _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- one with thousands particles_co_ this one would be updated just on demand (not each frame) with all the logical optimizations available _dd_ target only the wanted particles in the array_co_ enable/disable on demand the texture computations_co_ etc\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- another one with dozens of particles (the per frame updated containers)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthen_co_ it_t_s up to you to pretend that some containers from the big SPS go to the small one and vice versa by switching the scales_co_ textures_co_ positions from the particles entering/leaving each SPS. This would just be a logical operation_co_ faking that a particle is swapping from a pool to another one.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]