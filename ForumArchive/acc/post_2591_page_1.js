[{"Owner":"ProfessorF","Date":"2013-12-15T02:12:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I use pngs with transparent areas on several planes to simulate plants (see first screenshot in Maya)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2013/post-5799-0-88613400-1387073340.png_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2013/post-5799-0-88613400-1387073340_thumb.png_qt_ data-fileid_eq__qt_553_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_post-5799-0-88613400-1387073340_thumb.pn_qt__gt__lt_/a_gt__lt_/p_gt__lt_div_gt_ _lt_/div_gt__lt_p_gt_But when I export to Babylon_co_ the transparent areas are black_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2013/post-5799-0-98191100-1387073421.png_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2013/post-5799-0-98191100-1387073421_thumb.png_qt_ data-fileid_eq__qt_554_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_post-5799-0-98191100-1387073421_thumb.pn_qt__gt__lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Any ideas? Thanks._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Ariel Yust","Date":"2013-12-15T06:49:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Here you go mate_dd__lt_/p_gt__lt_p_gt_this is what I use in my project._lt_/p_gt__lt_div_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var Materials_eq_[]_sm_Materials.push(loadTexture(_qt_gfx/CategoryMirror.png_qt__co_ true_co_ true))_sm_        function loadTexture(fileName_co_ backFaceCulling_co_ hasAlpha) {        var m _eq_ new BABYLON.StandardMaterial(fileName_co_ scene)_sm_        var texture _eq_ new BABYLON.Texture(fileName_co_ scene)_sm_            texture.anisotropicFilteringLevel _eq_ 0_sm_        m.diffuseTexture _eq_ texture_sm_        m.backFaceCulling _eq_ backFaceCulling_sm_        m.diffuseTexture.hasAlpha _eq_ hasAlpha_sm_ //this is what your looking for _eq_]        return m_sm_    }_lt_/pre_gt__lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2013-12-15T10:38:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Agree with Ariel_dd_)_lt_/p_gt__lt_p_gt_Blender exporter should automatically add it. How do you generate your .babylon file?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ProfessorF","Date":"2013-12-15T16:05:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_&gt_sm_.hasAlpha_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Yeah_co_ I saw that in the documentation. I don_t_t mind writing code to add the .hasAlpha_co_ post hoc_co_ but this is something that should be handled in the exporter._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_&gt_sm_ How do you generate your .babylon file?_lt_/p_gt__lt_p_gt_Maya -&gt_sm_ .fbx -&gt_sm_ BabylonExporter.exe _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ll see about hacking the exporter code. (Or I could use Blender.  Although I think it_t_s better to support Maya &amp_sm_ 3DS Max_co_ since most pro studios use one of the two)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ProfessorF","Date":"2013-12-15T17:27:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_(DeltaKosh_co_ could you please add this fix to the BabylonExporter repository?)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Okay_co_ I modified the exporter code to work with alphas! _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But I don_t_t think it_t_s a hack.  It should be turned on by default. That model has 500K polys and it works with hasAlpha_eq_true by default._lt_br_gt__lt_br_gt_BabylonExport.Core &gt_sm_ Entities &gt_sm_ Export &gt_sm_ StandardMaterial.cs_dd__lt_br_gt_..._lt_/p_gt__lt_div_gt_            babylonMaterial.diffuseTexture _eq_ new BabylonTexture()_sm__lt_/div_gt__lt_div_gt_            babylonMaterial.diffuseTexture.name _eq_ Path.GetFileName(DiffuseTexture)_sm__lt_/div_gt__lt_div_gt_            _lt_span style_eq__qt_color_dd_#008000_sm__qt__gt__lt_strong_gt_babylonMaterial.diffuseTexture.hasAlpha _eq_ true_sm__lt_/strong_gt__lt_/span_gt_ // &lt_sm__eq__eq__eq_ ProfessorF Mod_lt_/div_gt__lt_div_gt_..._lt_/div_gt__lt_div_gt__lt_img src_eq__qt_https_dd_//pbs.twimg.com/media/Bbityl8CEAAVrlR.png_qt_ alt_eq__qt_Bbityl8CEAAVrlR.png_qt__gt__lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2013-12-15T17:36:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello Prof_co_ I cannot do that because it will force ALL material to activate alpha testing which has a cost when it comes to performance_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_When alpha testing is engaged_co_ I must add a pixel alpha test and a discard into the shaders._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ProfessorF","Date":"2013-12-15T19:46:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Oh. I understand. Okay_co_ I think I have a better fix then._lt_br_gt__lt_br_gt_The code that determines whether a texture has alpha_co_ is in BabylonExport.Core &gt_sm_ Exporters &gt_sm_ ThroughXNA &gt_sm_ XNAExporter.cs_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_div_gt_                    if (texture.Format !_eq_ SurfaceFormat.Dxt1)_lt_/div_gt__lt_div_gt_                    {_lt_/div_gt__lt_div_gt_                        filename _eq_ Path.Combine(tempPath_co_ texturesCount + _qt_.png_qt_)_sm__lt_/div_gt__lt_div_gt_                    }_lt_/div_gt__lt_div_gt_                    else_lt_/div_gt__lt_div_gt_                    {_lt_/div_gt__lt_div_gt_                        filename _eq_ Path.Combine(tempPath_co_ texturesCount + _qt_.jpg_qt_)_sm__lt_/div_gt__lt_div_gt_                    }_lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_I experimented with many different files_co_ tga_co_ png_co_ jpg_co_ etc. If a texture had an alpha_co_ then the texture.Format_eq__eq_SurfaceFormat.Dxt5_co_ and the code would create a .png file.  Any texture without an alpha would create a .jpg file.  NOTE_dd_ even if the file was originally a .png_co_ if it had no alpha_co_ the code would force it to become a .jpg._lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_***** NEW FIX (POSSIBLY)_dd__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt__lt_p style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_BabylonExport.Core &gt_sm_ Entities &gt_sm_ Export &gt_sm_ StandardMaterial.cs_dd__lt_br_gt_..._lt_/p_gt__lt_div style_eq__qt_margin_dd_0px_sm_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_            babylonMaterial.diffuseTexture _eq_ new BabylonTexture()_sm__lt_/div_gt__lt_div style_eq__qt_margin_dd_0px_sm_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_            babylonMaterial.diffuseTexture.name _eq_ Path.GetFileName(DiffuseTexture)_sm__lt_/div_gt__lt_div style_eq__qt_margin_dd_0px_sm_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt__lt_div_gt__lt_span style_eq__qt_color_dd_#008000_sm__qt__gt__lt_strong_gt_            if (babylonMaterial.diffuseTexture.name.ToLower().EndsWith(_qt_.png_qt_)) _lt_/strong_gt__lt_/span_gt_// &lt_sm__eq__eq__eq_ Do only if texture.Format !_eq_ SurfaceFormat.Dxt1_lt_/div_gt__lt_/div_gt__lt_div style_eq__qt_margin_dd_0px_sm_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt__lt_span style_eq__qt_color_dd_#008000_sm__qt__gt__lt_strong_gt_            _lt_/strong_gt__lt_/span_gt_    _lt_span style_eq__qt_color_dd_rgb(0_co_128_co_0)_sm__qt__gt__lt_strong_gt_babylonMaterial.diffuseTexture.hasAlpha _eq_ true_sm__lt_/strong_gt__lt_/span_gt_ // &lt_sm__eq__eq__eq_ ProfessorF Mod_lt_/div_gt__lt_div style_eq__qt_margin_dd_0px_sm_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_..._lt_/div_gt__lt_div style_eq__qt_margin_dd_0px_sm_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_ _lt_/div_gt__lt_div style_eq__qt_margin_dd_0px_sm_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_I think that is the correct code._lt_/div_gt__lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2013-12-15T20:00:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Great!!! I add the fix right now_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thank you very much _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]