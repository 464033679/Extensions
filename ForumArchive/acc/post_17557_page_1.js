[{"Owner":"croustibat","Date":"2015-10-01T10:50:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi!_lt_/p_gt__lt_p_gt_I_t_m developing a web app with a 3d viewport made with babylon js._lt_/p_gt__lt_p_gt_It_t_s initialized on a canvas object._lt_/p_gt__lt_p_gt_In my app_co_ it_t_s possible that the viewport is completely destroyed and I need to flush every BABYLON objects instantiated._lt_/p_gt__lt_p_gt_It_t_s possible then that the canvas is recreated and I need to build a new scene again (on a new engine)._lt_/p_gt__lt_p_gt_There are two functions_co_ one called when the canvas dom object is created and rendered_co_ the other is called when it_t_s destroyed._lt_/p_gt__lt_p_gt_After the canvas is created_co_ I do this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_  function CreateEngine(_canvas) {    var engine _eq_ new BABYLON.Engine(_canvas_co_ true)_sm_    window.addEventListener(_qt_resize_qt__co_function() {      engine.resize()_sm_    })_sm_    return engine_sm_  }_sm_  var engine _eq_ CreateEngine(mycanvas)_sm_  var scene _eq_ new BABYLON.Scene(engine)_sm_  scene.clearColor _eq_ new BABYLON.Color3(0.97_co_0.97_co_0.97)_sm_  console.log(_qt_Created a scene_qt_)_sm_  engine.runRenderLoop(function(){    scene.render()_sm_  })_sm__lt_/pre_gt__lt_p_gt_Then when the canvas is destroyed I do this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_  if (engine !_eq__eq_ null) {    console.log(_qt_Scrapping engine..._qt_)_sm_    currentScene.dispose()_sm_    delete currentScene_sm_    engine.stopRenderLoop()_sm_    engine.dispose()_sm_    delete engine_sm_    engine _eq_ null_sm_  }_lt_/pre_gt__lt_p_gt_First canvas creation works fine_lt_/p_gt__lt_p_gt_No error is raised when I destroy it._lt_/p_gt__lt_p_gt_But_co_ when I create the canvas again_co_ here is what I get_dd__lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_BJS - [12_dd_37_dd_03]_dd_ Unable to compile effect_dd_ r._ErrorEnabled @ babylon.2.1.js_dd_4t._prepareEffect @ babylon.2.1.js_dd_15t._prepareEffect @ babylon.2.1.js_dd_15(anonymous function) @ babylon.2.1.js_dd_15t._loadFragmentShader @ babylon.2.1.js_dd_15(anonymous function) @ babylon.2.1.js_dd_15t._loadVertexShader @ babylon.2.1.js_dd_15t @ babylon.2.1.js_dd_15a.createEffect @ babylon.2.1.js_dd_5r.isReady @ babylon.2.1.js_dd_15r.render @ babylon.2.1.js_dd_11t.render @ babylon.2.1.js_dd_13t.render @ babylon.2.1.js_dd_9t.render @ babylon.2.1.js_dd_9t._renderForCamera @ babylon.2.1.js_dd_10t._processSubCameras @ babylon.2.1.js_dd_10t.render @ babylon.2.1.js_dd_10(anonymous function) @ scene.js?56edd9bde385c4f695f9d16bb8263e0a27da1ee0_dd_53a._renderLoop @ babylon.2.1.js_dd_5(anonymous function) @ babylon.2.1.js_dd_5_lt_/p_gt__lt_div_gt_babylon.2.1.js_dd_4 BJS - [12_dd_37_dd_03]_dd_ Vertex shader_dd_defaultr._ErrorEnabled @ babylon.2.1.js_dd_4t._prepareEffect @ babylon.2.1.js_dd_15t._prepareEffect @ babylon.2.1.js_dd_15(anonymous function) @ babylon.2.1.js_dd_15t._loadFragmentShader @ babylon.2.1.js_dd_15(anonymous function) @ babylon.2.1.js_dd_15t._loadVertexShader @ babylon.2.1.js_dd_15t @ babylon.2.1.js_dd_15a.createEffect @ babylon.2.1.js_dd_5r.isReady @ babylon.2.1.js_dd_15r.render @ babylon.2.1.js_dd_11t.render @ babylon.2.1.js_dd_13t.render @ babylon.2.1.js_dd_9t.render @ babylon.2.1.js_dd_9t._renderForCamera @ babylon.2.1.js_dd_10t._processSubCameras @ babylon.2.1.js_dd_10t.render @ babylon.2.1.js_dd_10(anonymous function) @ scene.js?56edd9bde385c4f695f9d16bb8263e0a27da1ee0_dd_53a._renderLoop @ babylon.2.1.js_dd_5(anonymous function) @ babylon.2.1.js_dd_5_lt_/div_gt__lt_div_gt_babylon.2.1.js_dd_4 BJS - [12_dd_37_dd_03]_dd_ Fragment shader_dd_defaultr._ErrorEnabled @ babylon.2.1.js_dd_4t._prepareEffect @ babylon.2.1.js_dd_15t._prepareEffect @ babylon.2.1.js_dd_15(anonymous function) @ babylon.2.1.js_dd_15t._loadFragmentShader @ babylon.2.1.js_dd_15(anonymous function) @ babylon.2.1.js_dd_15t._loadVertexShader @ babylon.2.1.js_dd_15t @ babylon.2.1.js_dd_15a.createEffect @ babylon.2.1.js_dd_5r.isReady @ babylon.2.1.js_dd_15r.render @ babylon.2.1.js_dd_11t.render @ babylon.2.1.js_dd_13t.render @ babylon.2.1.js_dd_9t.render @ babylon.2.1.js_dd_9t._renderForCamera @ babylon.2.1.js_dd_10t._processSubCameras @ babylon.2.1.js_dd_10t.render @ babylon.2.1.js_dd_10(anonymous function) @ scene.js?56edd9bde385c4f695f9d16bb8263e0a27da1ee0_dd_53a._renderLoop @ babylon.2.1.js_dd_5(anonymous function) @ babylon.2.1.js_dd_5_lt_/div_gt__lt_div_gt_babylon.2.1.js_dd_4 BJS - [12_dd_37_dd_03]_dd_ Defines_dd_ r._ErrorEnabled @ babylon.2.1.js_dd_4t._prepareEffect @ babylon.2.1.js_dd_15t._prepareEffect @ babylon.2.1.js_dd_15(anonymous function) @ babylon.2.1.js_dd_15t._loadFragmentShader @ babylon.2.1.js_dd_15(anonymous function) @ babylon.2.1.js_dd_15t._loadVertexShader @ babylon.2.1.js_dd_15t @ babylon.2.1.js_dd_15a.createEffect @ babylon.2.1.js_dd_5r.isReady @ babylon.2.1.js_dd_15r.render @ babylon.2.1.js_dd_11t.render @ babylon.2.1.js_dd_13t.render @ babylon.2.1.js_dd_9t.render @ babylon.2.1.js_dd_9t._renderForCamera @ babylon.2.1.js_dd_10t._processSubCameras @ babylon.2.1.js_dd_10t.render @ babylon.2.1.js_dd_10(anonymous function) @ scene.js?56edd9bde385c4f695f9d16bb8263e0a27da1ee0_dd_53a._renderLoop @ babylon.2.1.js_dd_5(anonymous function) @ babylon.2.1.js_dd_5_lt_/div_gt__lt_div_gt_babylon.2.1.js_dd_4 BJS - [12_dd_37_dd_03]_dd_ Error_dd_ Cannot read property _t_createShader_t_ of null_lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_So_co_ I guess I don_t_t reset the scene properly right?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2015-10-01T11:59:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Why do you have t odelete the whole canvas each time ? Can_t_t you just set it to display_dd_none_co_ or set it invisible ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"croustibat","Date":"2015-10-01T12:22:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi Temechon!_lt_/p_gt__lt_p_gt_I_t_m building my app using the Meteor framework._lt_/p_gt__lt_p_gt_In usual meteor patterns_co_ dom elements can get created/destroyed quite often._lt_/p_gt__lt_p_gt_But as you say_co_ I think I_t_m going to hide/show the canvas_co_ and just flush the meshes_co_ textures_co_ materials and cameras_co_ it should do the trick._lt_/p_gt__lt_p_gt_I thought there was a quick/efficient way of doing all that stuff by disposing the engine instance. But sadly_co_ disposing and deleting the engine seems to make me unable to create a new one._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2015-10-01T12:58:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You can just hide the canvas and call scene.dispose()_co_ then create a whole new scene. It should work this way._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"croustibat","Date":"2015-10-01T13:15:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_98967_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_17557_qt_ data-ipsquote-username_eq__qt_Temechon_qt_ data-cite_eq__qt_Temechon_qt_ data-ipsquote-timestamp_eq__qt_1443704309_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_You can just hide the canvas and call scene.dispose()_co_ then create a whole new scene. It should work this way._lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks Temechon_co_ I_t_ll give it a try _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"croustibat","Date":"2015-10-01T13:59:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Temechon_co_ thanks again_co_ this made the trick (hiding the canvas)._lt_/p_gt__lt_p_gt_But still_co_ I feel frustrated about not knowing what_t_s behind engine.dispose()!_lt_/p_gt__lt_p_gt_Anyway_co_ problem solved!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-10-01T17:11:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This is the power of open source framework_dd_ you can watch the code _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/babylon.engine.ts#L2165_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/babylon.engine.ts#L2165_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"croustibat","Date":"2015-10-02T08:08:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks for pointing the right place._lt_/p_gt__lt_p_gt_From what I see of the source_co_ dispose() already seems to dispose all the scenes_co_ stops the render loop_co_ removes any event listeners_co_ releases the audio engine_co_ does something with webgl (probably reset it)._lt_/p_gt__lt_p_gt_Everything seems to be properly destroyed_co_ so that_t_s strange that I can_t_t dispose an engine object and create a new one_co_ then setting a new render loop with a new scene without my program to fail._lt_/p_gt__lt_p_gt_My code right now is a bit messy_co_ I will try to reproduce that behaviour in a babylon playground_co_ just for curiosity. And for science._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-10-02T16:28:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Lol yes please _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"croustibat","Date":"2015-10-12T08:11:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi again_co__lt_/p_gt__lt_p_gt_I had the time to make some testing around those concerns._lt_/p_gt__lt_p_gt_Starting form fresh_co_ with a simple (and clean _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ ) project_co_ I could make the dom destruction/reconstruction work fine with Babylon engine. But after a few cycles of creating a canvas DOM node_co_ creating a babylon engine_co_ building up a dummy scene_co_ disposing the engine_co_ destroying the canvas node_co_ I ended up with a strange chrome warning saying there were too many webgl contextes. This seems to be a known issue inherent to js garbage collection. For me that was the final proof saying that this is definitely the wrong pattern here_co_ as Temechon said._lt_/p_gt__lt_div_gt_And reinitializing the scene is simple by doing so_dd__lt_/div_gt__lt_div_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_engine.stopRenderLoop()_sm_engine.clear(BABYLON.Color3.Black()_co_false_co_false)_sm_window.removeEventListener(_t_resize_t_)_sm_if (engine.scenes.length!_eq__eq_0) {    //if more than 1 scene_co_ while(engine.scenes.length&gt_sm_0) {    engine.scenes[0].dispose()_sm_}_lt_/pre_gt__lt_p_gt_I couldn_t_t observe any memory leak doing this dozens of time_co_ it seems pretty reliable._lt_/p_gt__lt_p_gt_I will keep developing with that method_co_ which is simple and clean._lt_/p_gt__lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-10-12T15:29:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_That_t_s a good news _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-20T17:43:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tMobile space remains mostly uncharted _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]