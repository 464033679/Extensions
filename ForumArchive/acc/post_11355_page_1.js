[{"Owner":"amorgan","Date":"2014-12-29T17:41:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_So I know if you accidentally create two engines you can get double the fps_co_ but what about if you have 1 engine created and switching between scenes? On faster computers I can get up to like 100fps or higher_co_ but before it would usually capped at 60fps. I am still using v1.14. I would like to better understand how babylon JS manages this? Can someone elaborate or point me to the section of code that deals with this?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It would be hard to duplicate this in the playground_co_ so I was looking for something like_co_ _qt_Oh you need call engine.stopRenderLoop and then functionX before calling engine.runRenderLoop_qt_ or something like that._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In addition is there something I can do enforce a certain fps? I know I can use a the SceneOptimization_co_ but that seems to only degrade if it can_t_t meet it. What if it is running faster? For example_co_ matching someone_t_s fps who has a slower computer_co_ say at 40fps_co_ even though you are able to run at 60fps?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thank you._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Red Spark","Date":"2014-12-30T10:54:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_ve researched this topic rigorously and came to conclusion that even though you can get as much as 250-999 fps in a browser with some smart hack_co_ it still reads keyboard and mouse input at 60 Hz no matter what. So technically that means players will still experience 16 ms input lag_co_ and you will be just rendering lots of duplicated frames._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2014-12-30T12:27:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I always thought the browser limits a single canvas to 60 fps... _lt_/p_gt__lt_p_gt_What does it bring_co_ when you have 100+ FPS? your monitor doesn_t_t support it anyhow._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Luaacro","Date":"2014-12-30T15:29:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It can support_co_ depending on the monitor. It is also called vertical synchronization _lt_a href_eq__qt_http_dd_//en.wikipedia.org/wiki/Screen_tearing_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//en.wikipedia.org/wiki/Screen_tearing_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2014-12-30T15:45:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_So I have the main player character which is being moved by WASD and then some enemy AI that is being moved_co_ which is all done in the renderLoop. When I use BABYLON.Tools.GetFps().toFixed() to output the fps to a div_co_ I can get &gt_sm_ 60 fps (which wasn_t_t always the case_co_ &gt_sm_ 1 scene now_co_ stopping/starting renderloop_co_etc). So the experience I am getting is that my logic for moving meshes_co_ directly correlates to the framerate.Thinking about this now_co_ it seems as if that logic should not be in the renderLoop? But if it should not_co_ why does Babylon not have a logicLoop running at a different (controlled) rate? Obviously I can make one_co_ but just thinking out loud._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Edit_dd_ Just to be clear_co_ I_t_m not so much worried about that refresh rate_co_ but the control logic rate_co_ which in this case is the same and will and does get updated at the rate reflected in the fps_co_ whether or not the screen can physically do it._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2014-12-30T19:25:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Javascript is a single-threaded event based language. mouse/keyboard input are async events that are being triggered when the browser allows it. There is no _qt_control_qt_ loop_co_ as it is handled by the browser itself. When a user presses anything_co_ an event is triggered and fetched by the framework (check the Scene class for example)._lt_/p_gt__lt_p_gt_The events are directly influenced by the refresh rate when the refresh rate is lower than 60 fps_co_ as that means that the browser is busy running javascript code (probably something to do with the rendering). At 60 FPS it is possible that the browser is waiting for events and they will therefore run faster. Having said that - if you update (for example) an object_t_s position_co_ the refresh rate is your prime concern_co_ as the object_t_s position might be updated faster_co_ but it will not be shown..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2014-12-30T23:23:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_raananw_co_ thanks for the input_co_ but I believe we are not on the same page. Really my question just stems from the fact that I am getting faster than 60fps and therefore my render loop is getting processed (at least this is what is seems) at the same_co_ higher_co_ rate. So I was seeing if anyone could shed light on how babylon could allow this._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And in the context of Babylon there is a control/logic loop_co_ right now it is the renderLoop. I understand that events are asynchronous_co_ but then I have to decide what do with that information_co_ and this is decided in the renderLoop._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-12-31T01:29:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_How bjs supports rendering_dd__lt_/p_gt__lt_p_gt_- Using requestAnimationFrame_co_ we ask the browser to call a callback (the render loop function) each time a frame is rendered. So aiming at 60fps_lt_/p_gt__lt_p_gt_- On old devices we are using setTImeout(.._co_ 0) for compatibility_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The browser itself uses DirectX (directly for IE and through Angle for Chrome and firefox). DirectX presents frame on demand but can be synchronized on vertical blank line refresh rate (monitor frequency)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I measure FPS using frequency counter from JS but the precision is around 1ms so you could see 60~63 fps just because of precision lack_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2014-12-31T04:58:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Deltakosh_co_ thanks for the reply. I must be doing something incorrectly then. I saw this behavior when I accidentally created two engines_co_ so I must be doing something similar. When running_co_ I am getting above 100fps_co_ which I_t_m assuming_co_ if I was on a more powerful computer it would actually be running at 120fps. I will look into why this is happening._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-12-31T16:49:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_oh interesting_dd_)_lt_/p_gt__lt_p_gt_Creating two engines is clearly the root cause. This is a bug I will fix immediately_dd_)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Red Spark","Date":"2014-12-31T21:58:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_65891_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_11355_qt_ data-ipsquote-username_eq__qt_raananw_qt_ data-cite_eq__qt_raananw_qt_ data-ipsquote-timestamp_eq__qt_1419942439_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_I always thought the browser limits a single canvas to 60 fps... _lt_/p_gt__lt_p_gt_What does it bring_co_ when you have 100+ FPS? your monitor doesn_t_t support it anyhow._lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It_t_s easy to illustrate. Create a 2D circle following mouse cursor and then start moving your mouse around screen really fast_co_ looking at your cursor. I_t_ll notice how circle is lagging behind - this is caused not by monitor_t_s limited refresh rate (otherwise it would affect mouse cursor too)_co_ but by the fact that the circle is rendered at position where your mouse pointer was 16 ms ago (actually more because the mouse itself is polled with 8 ms interval by default unless overclocked). This is classic input lag that FPS players are trying to eliminate so much because it introduces noticable negative acceleration / smoothing which can not be tolerated when precision is crucial. When you play 60 Hz Doom 3 or Rage after 1000 fps Quake 3 or Warsow you can instantly feel how your screen movement is lagging behind your actual mouse movement._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I had success unlocking fps in browser with window.postMessage() hack (_lt_a href_eq__qt_http_dd_//www.chandlerprall.com/2011/06/beating-60fps-in-javascript/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.chandlerprall.com/2011/06/beating-60fps-in-javascript/_lt_/a_gt_) and it was showing native 250-999 fps depending on browser_co_ but then I_t_ve started tracking mouse events and they were still updating only 60 times per second (values were just duplicated until another 16 ms passes). So that made this hack pointless and the whole prospect of having 200+ fps gaming in browser too._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2015-01-03T16:17:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Deltakosh_co_ I was able to duplicate the issue in the playground_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1NJO7U_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1NJO7U_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_As you can see I am not creating any additional engines. If you click on the canvas div_co_ it will switch between scenes using stopRenderLoop and runRenderLoop functions (check out the onlick function)_co_ which causes the fps to increase_co_ by what seems to be a factor of 2x. You can also click on the fpsLabel to just run it without changing scenes. Can you help explain this?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-01-03T18:52:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This is because they are many renderloop running together._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Due to Javascript monothreaded nature when you run this code_co_ youdo not stop the current render loop_dd_ (I_t_m working on a fix)_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_engine.stopRenderLoop()_sm_engine.runRenderLoop(function () { Game.scene[Game.activeScene].renderLoop()_sm_})_sm__lt_/pre_gt__lt_p_gt_Actually_co_ you should do this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_engine.stopRenderLoop()_sm_setImmediate(function(){\tengine.runRenderLoop(function () {\t\tGame.scene[Game.activeScene].renderLoop()_sm_\t})_sm_})_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-01-03T18:56:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_A fix will be available with my next push _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"amorgan","Date":"2015-01-03T19:35:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks! I will look forward to that._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I tried to use v2.0 before_co_ but was having blender issues. I assume that I will need to export my models using the latest Blender exporter because it has been updated since v1.14?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-01-03T19:37:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yes_dd_)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]