[{"Owner":"mop","Date":"2015-11-21T00:07:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I just switched to webpack in one of my babylon.js projects and found a few oddities_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_1. src version as _qt_main_qt_ in package.json_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This is not only webpack related. As far as I am aware libraries should not refer to a minimized version here. Browserify_co_ webpack and the likes will do minification if desired. I couldn_t_t find the package.json in the git repository. Would have created a pull request but it doesn_t_t seem to be there _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_ohmy.png_qt_ alt_eq__qt__dd_o_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/ohmy@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_2. _qt_use strict_qt__sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_As my project is ES2015 I am using babel to transpile it back to es5. During this process babel will prepend a _qt_use strict_qt_ to every script (for whatever reason _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ ). I am cloning a few meshes in my project and I think it found a possible bug there_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_div_gt_Uncaught (in promise) TypeError_dd_ Cannot set property hasLODLevels of #&lt_sm_r&gt_sm_ which has only a getter_lt_/div_gt__lt_div_gt_    at Function.r.DeepCopy (_lt_a href_eq__qt_http_dd_//localhost_dd_8080/output.js_dd_20748_dd_93937_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//localhost_dd_8080/output.js_dd_20748_dd_93937_lt_/a_gt_) _lt_/div_gt__lt_div_gt_    at new r (_lt_a href_eq__qt_http_dd_//localhost_dd_8080/output.js_dd_20748_dd_333962_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//localhost_dd_8080/output.js_dd_20748_dd_333962_lt_/a_gt_) _lt_/div_gt__lt_div_gt_    at r.clone (_lt_a href_eq__qt_http_dd_//localhost_dd_8080/output.js_dd_20748_dd_349913_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//localhost_dd_8080/output.js_dd_20748_dd_349913_lt_/a_gt_) _lt_/div_gt__lt_div_gt_    at _lt_a href_eq__qt_http_dd_//localhost_dd_8080/output.js_dd_20274_dd_35_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//localhost_dd_8080/output.js_dd_20274_dd_35_lt_/a_gt__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_The problem here is that DeepCopy will iterate over all properties and copy the value to the cloned mesh. This includes all the properties defined via Object.defineProperty _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_ohmy.png_qt_ alt_eq__qt__dd_o_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/ohmy@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ However they are getters only and thus it throws an error here. That makes perfect sense. Maybe babylon.js should always include _qt_use strict_qt_?  Maybe there are more potential bugs hiding out there _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_Currently I am just ignoring babylon.js while building._lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"davrous","Date":"2015-11-21T08:01:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi!_lt_/p_gt__lt_p_gt_ We_t_re using TypeScript to build Babylon.Js which is much more strict than _qt_use strict_qt_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ but maybe we_t_ve missed something. We will check that. _lt_/p_gt__lt_p_gt_Thanks for the head up!_lt_/p_gt__lt_p_gt_David_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-11-21T13:40:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey mop_co_ I_t_ve just been moving my project to webpack as well. Really powerful_co_ although some of the configuration is really hairy._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_About 1. package.json - right now Babylon.js is not set up to be required as a module. So even if there was a package.json and it specified an entry point_co_ webpack (or alternatives like browserify) wouldn_t_t be able to resolve it as a dependency._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What you can do is get webpack to consider a pre-made babylon file as a (static) dependency of your project_co_ so that it gets copied into the distribution (and handled by webpack-dev-server). I_t_m doing this with the _lt_a href_eq__qt_https_dd_//github.com/webpack/file-loader_qt_ rel_eq__qt_external nofollow_qt__gt_file-loader_lt_/a_gt_ module. For example_co_ if you put a minified babylon file in _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_/external/_lt_/span_gt_ _co_ you could then add this anywhere in your javascript_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_require(_t_file?name_eq_b.js!./external/babylon.2.3.min.js_t_)_sm_ _lt_/pre_gt__lt_p_gt_and change your html to reference the script from webpack_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint lang-html_qt__gt_&lt_sm_script type_eq__qt_text/javascript_qt_ src_eq__qt_b.js_qt_&gt_sm_&lt_sm_script&gt_sm_ _lt_/pre_gt__lt_p_gt_This way webpack will treat babylon as a dependency_co_ but not parse it for dependencies or minifiy it or add strict markers and so forth (which is realistically for the best)._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mop","Date":"2015-11-21T14:27:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_106514_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_18770_qt_ data-ipsquote-username_eq__qt_fenomas_qt_ data-cite_eq__qt_fenomas_qt_ data-ipsquote-timestamp_eq__qt_1448113211_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Hey mop_co_ I_t_ve just been moving my project to webpack as well. Really powerful_co_ although some of the configuration is really hairy._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_About 1. package.json - right now Babylon.js is not set up to be required as a module. So even if there was a package.json and it specified an entry point_co_ webpack (or alternatives like browserify) wouldn_t_t be able to resolve it as a dependency._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What you can do is get webpack to consider a pre-made babylon file as a (static) dependency of your project_co_ so that it gets copied into the distribution (and handled by webpack-dev-server). I_t_m doing this with the _lt_a href_eq__qt_https_dd_//github.com/webpack/file-loader_qt_ rel_eq__qt_external nofollow_qt__gt_file-loader_lt_/a_gt_ module. For example_co_ if you put a minified babylon file in _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_/external/_lt_/span_gt_ _co_ you could then add this anywhere in your javascript_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_require(_t_file?name_eq_b.js!./external/babylon.2.3.min.js_t_)_sm_ _lt_/pre_gt__lt_p_gt_and change your html to reference the script from webpack_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint lang-html_qt__gt_&lt_sm_script type_eq__qt_text/javascript_qt_ src_eq__qt_b.js_qt_&gt_sm_&lt_sm_script&gt_sm_ _lt_/pre_gt__lt_p_gt_This way webpack will treat babylon as a dependency_co_ but not parse it for dependencies or minifiy it or add strict markers and so forth (which is realistically for the best)._lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Hi fenomas!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I didn_t_t know about this as well but actually there is a proper babylonjs package on npm which properly exports BABYLON as a module_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//www.npmjs.com/package/babylonjs_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.npmjs.com/package/babylonjs_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The only thing I currently do to work around the strict bug is to ignore babylonjs in my .babelrc like so_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_div_gt_{_lt_/div_gt__lt_div_gt_    _qt_ignore_qt__dd_ _qt_node_modules/babylonjs/*_qt__co__lt_/div_gt__lt_div_gt_    _qt_presets_qt__dd_ [_lt_/div_gt__lt_div_gt_        _qt_react_qt__co__lt_/div_gt__lt_div_gt_        _qt_es2015_qt__co__lt_/div_gt__lt_div_gt_    ]_lt_/div_gt__lt_div_gt_}_lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_However I can perfectly do_lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_import BABYLON from _qt_babylonjs_qt__sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_now _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_So in my setup I have a pretty bare webpack config without any specialties _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-11-21T15:25:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ahh! Okay_co_ that_t_ll work too._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It_t_s good to know about the npm module. I use a script to pull in dailies from github_co_ because quite often I_t_ll complain about something here and DK will have it fixed a few hours later. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In any case I imagine the module on npm is probably built from _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/tree/master/Tools/Gulp_qt_ rel_eq__qt_external nofollow_qt__gt_Tools/Gulp_lt_/a_gt__co_ with the package.json in that folder. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]