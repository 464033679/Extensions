[{"Owner":"Thark","Date":"2017-09-07T13:12:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey everyone\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI just have two simple question I cannot find an answer too._lt_br /_gt__lt_u_gt_First Question_dd__lt_/u_gt_ The _lt_strong_gt_SpriteManager_lt_/strong_gt_ needs a _lt_strong_gt_capacity _lt_/strong_gt_parameter_co_ but why does it need this?_lt_br /_gt_\n\tWhy can I not change this during runtime?_lt_br /_gt_\n\tWhat does it actually do (in the background) (except for just not showing any sprites that exceed the capacity)?_lt_br /_gt_\n\tDoes it hurt performance at all if I just put a _t_crazy_t_ high number?_lt_br /_gt_\n\tCan the manager not just +1 the capacity by itself in the background whenever an instance of the sprite is created? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt just seems so odd that I have to give it a number and I feel like I_t_m missing something here.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_u_gt_My second question_lt_/u_gt_ is how to exactly use the AssetsManager for sprites. The documentation gives this example_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var imageTask _eq_ assetsManager.addImageTask(_qt_image task_qt__co_ _qt_img.jpg_qt_)_sm_\nimageTask.onSuccess _eq_ function(task) {\n    console.log(task.image.width)_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tBut that doesn_t_t explain how to use it with a Sprite since the task _lt_strong_gt_returns an image_lt_/strong_gt__co_ and a SpriteManager only _lt_strong_gt_requires an image url_lt_/strong_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you in advance!_lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-09-07T17:41:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. Capacity\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCapacity is used to dimension GPU resources_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Sprites/babylon.spriteManager.ts#L82_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Sprites/babylon.spriteManager.ts#L82_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt is useful because sprites rely on GPU resources like vertex buffer and we cannot just recreate one every time you add a sprite. So instead_co_ we start with a big buffer that we fill until we reach the capacity\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. You can stil rely on the assetsManager because the image will be in the cache when onSuccess will be called\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]