[{"Owner":"JohnK","Date":"2017-07-21T17:19:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAfter I first pushed the CreatePolygon function and it went live the following this PG _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#4G18GY%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#4G18GY#2 _lt_/a_gt_was giving doublesided polygons_co_ now it is only showing one side. Have had a look at my original code in javascript in a preview version of 3.0 and the current version of 3.0 in Javascript. Other than the additions Jerome did for frontUVs etc I cannot see where any changes would affect the doublesidedness. What is worse is that running the current version of 3.0 with a local example and now on a PG  _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#12X68C_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#12X68C_lt_/a_gt_ I get no mesh at all_co_ but running against the preview version of 3.0 it still works OK.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe preview version I changed to add the polygon code was downloaded on 27 June 2017.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tProbably a lot changed since then but hopefully what it was that did it could be found.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-07-21T19:36:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI need to check this...\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2017-07-21T19:54:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5453_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/_qt_ rel_eq__qt__qt__gt_@jerome_lt_/a_gt_ just to be clear when it worked it used your frontUVs and backUVs correctly.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-07-22T01:43:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tmmhh... very weird_co_ because I didn_t_t touch anything since the frontUVs and backUVs addition_co_ so since a big while\n_lt_/p_gt_\n\n_lt_p_gt_\n\there _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/pull/2212/files_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/pull/2212/files_lt_/a_gt_   on 1st june\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWeirder _dd_ I can_t_t see anything in the code of  _lt_em_gt_VertexData._ComputeSides()_lt_/em_gt_ that would be different for the the Polygon mesh than for the others ... since it_t_s the same called by any double sided mesh.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-07-22T02:29:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tStill investigating_co_ now here _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/pull/2232/files_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/pull/2232/files_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tbtw_co_ like we can_t_t be sure the normalization computation approximation will give integer numbers_co_ I would rather have written _qt_&gt_sm_0_qt_ or _qt_&lt_sm_0_qt_ instead of _qt__eq__eq_1_qt_ and _qt__eq__eq_-1_qt_ here _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.mesh.vertexData.ts#L1653_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.mesh.vertexData.ts#L1653_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tand here _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.mesh.vertexData.ts#L1657_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.mesh.vertexData.ts#L1657_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tor used something like EqualsWithEpsilon()\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2017-07-22T13:29:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_182683_qt_ data-ipsquote-contentid_eq__qt_31797_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1500690585_qt_ data-ipsquote-userid_eq__qt_5453_qt_ data-ipsquote-username_eq__qt_jerome_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t10 hours ago_co_ jerome said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\twe can_t_t be sure the normalization computation approximation will give integer numbers\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tNot too worried about this as the PolygonMeshBuilder Build process set integer values for the normals. Though if you tell me it is still better to make the changes to &lt_sm_0 and &gt_sm_0 then I will do so.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Back to original problem_lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe problem seems to have arisen due to some changes in vertexData. After some time I tracked the discrepancy to the line vertexData.appyToMesh(polygon_co_ options.updatable) up to this point everything is exactly the same_co_ all positions_co_ normals_co_ indices and uvs. It seems that there is a problem using applyToMesh if the mesh already exists.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf I add these lines\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_polygon.dispose()_sm_\npolygon _eq_ new BABYLON.Mesh(name_co_ scene)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tbefore\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_vertexData.applyToMesh(polygon_co_ options.updatable)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tthen everything works as before.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tChecking out what_t_s new I found\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNew BABYLON.VertexData.ExtractFromMesh function\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNew BABYLON.VertexData object to easily manipulates vertex attributes\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAdded mesh.markVerticesDataAsUpdatable() to allow a specific vertexbuffer to become updatable\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo the question now is do I simply add the two lines above or should I be doing something with the new vetexData object.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI will wait for an answer to this before marking the topic as solved.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-07-22T17:22:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tNo idea what is the best ... the best is always the one what works _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-07-23T07:20:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tand BTW_co_ I would probably compare your floats like this because of the precision _dd_ Math.abs(y - 1.0) &lt_sm_ 0.001\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2017-07-23T08:32:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAbout to do the changes and submit a PR so will do this as well. _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tPR submitted\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-07-24T17:13:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tIt was a bug on my side _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_ thanks for having found it _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]