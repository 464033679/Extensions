[{"Owner":"FreeFrags","Date":"2014-11-14T08:52:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Can someone please give an example how to use mesh._lt_span_gt_updateVerticesDataDirectly _lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_i tried the following but no luck so far_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_where vertices is an array filled x_co_y_co_z_co_x_co_y_co_z......._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_ mesh.updateVerticesDataDirectly(BABYLON.VertexBuffer.PositionKind_co_ vertices_co_ false)_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"FreeFrags","Date":"2014-11-14T09:15:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ideally i would like to add vertices to the existing batch i already have loaded_co_ but knowing how to use the function i pointed out is something i would like to know too_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"FreeFrags","Date":"2014-11-14T09:19:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_O my im sorry guys i made a stupid mistake in my code which made it look like it didnt update _dd_S _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_so we can close this topic _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"FreeFrags","Date":"2014-11-14T10:22:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yet still i would like to get the vertices i have loaded and add vertices._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_anyone ever tried that? what would be the best way_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Stephen Andrews","Date":"2014-11-14T11:24:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I too would like more detail on how to do this_co_ as I want to do some experimentation with meshes generated problematically from scratch._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2014-11-14T13:56:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Did you read this ? _lt_a href_eq__qt_http_dd_//pixelcodr.com/tutos/trees/trees.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//pixelcodr.com/tutos/trees/trees.html_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Cheers _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"FreeFrags","Date":"2014-11-14T14:14:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@Temechon thank you for your post _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_That is a very nice page_co_ but it doesnt really show what i would like to do._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_div_gt__lt_p_gt_please see the following simplified piece of code_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var vertexData _eq_ new BABYLON.VertexData()_sm_vertexData.positions _eq_ new Array()_sm_vertexData.normals _eq_ new Array()_sm_vertexData.uvs _eq_ new Array()_sm_for (var i _eq_ 0_sm_ i &lt_sm_ 9_sm_ i++) {  vertexData.positions.push(1)_sm_  vertexData.normals.push(1)_sm_  vertexData.uvs.push(1)_sm_}vertexData.applyToMesh(mbeMesh_co_ true)_sm_var h _eq_ mbeMesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm__lt_/pre_gt__lt_p_gt_somehow h is null here everytime_co_ i would like to get the vertexdata here add new vertices and then call the _lt_span_gt_mesh_lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(102_co_102_co_0)_sm__qt__gt_._lt_/span_gt__lt_span_gt_updateVerticesDataDirectly some thing like this_dd__lt_/span_gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var h _eq_ mbeMesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm_h.push(1_co_2_co_3)_sm_mesh.updateVerticesDataDirectly(BABYLON.VertexBuffer.PositionKind_co_ h_co_ false)_sm__lt_/pre_gt__lt_/div_gt__lt_p_gt_so obviously im doing somthing wrong here... or maybe there is a better way of doing something like this _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2014-11-14T14:50:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_How do you create mbeMesh ? I think there is a bug in babylon if you use a new mesh (without any geometry)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here is the code for setVerticesData _dd_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (!this._geometry) {   var vertexData _eq_ new BABYLON.VertexData()_sm_   vertexData.set(data_co_ kind)_sm_   var scene _eq_ this.getScene()_sm_   new BABYLON.Geometry(BABYLON.Geometry.RandomId()_co_ scene_co_ vertexData_co_ updatable_co_ this)_sm_} else {   this._geometry.setVerticesData(kind_co_ data_co_ updatable)_sm_}_lt_/pre_gt__lt_p_gt_You can see the new geometry is never affected to this._geometry._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"FreeFrags","Date":"2014-11-14T15:10:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_mbeMesh _eq_ new BABYLON.Mesh(name_co_ scene)_sm_var vertexData _eq_ new BABYLON.VertexData()_sm_vertexData.positions _eq_ new Array()_sm_vertexData.normals _eq_ new Array()_sm_vertexData.uvs _eq_ new Array()_sm_for (var i _eq_ 0_sm_ i &lt_sm_ 9_sm_ i++) {  vertexData.positions.push(1)_sm_  vertexData.normals.push(1)_sm_  vertexData.uvs.push(1)_sm_}vertexData.applyToMesh(mbeMesh_co_ true)_sm_var h _eq_ mbeMesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm__lt_/pre_gt__lt_p_gt_Im Sorry i missed that line when copy pasting._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Babylon has no trouble drawing the mesh_co_ its the getVerticesData which returns null. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I hope i can find sometime this weekend to create a sandbox example for this. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2014-11-14T15:38:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_udpateVerticesDataDirectly was added in V1.14 for MORPH.Mesh  (in the Babylon Extensions repository).  When vertices / normals are updated they need to be transmitted to the GPU.  The WebGL call that does this requires that the data structure passed is a Float32Array.  This is really setup to be a one time thing in Babylon from a performance standpoint_co_ since up to the intro of updateVerticesDataDirectly_co_ data had to be a []_co_ not Float32Array.  Babylon then had to do a double copy first from [] to Float32Array_co_ &amp_sm_ again to the GPU._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What made things worse is Float32Arrays are more expensive to create_co_ and they are thrown away every transfer.  Plus_co_ read / update is slightly faster for Float32Arrays._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_MORPH.Mesh however_co_ needs to continuously update vertices / normals during the deformation process.  Early in dev_co_ I used a public method in Engine and bypassed the existing way.  Deltakosh did not really like this_co_ so I gave my requirements of method which accepted a Float32Array &amp_sm_ made not copies along the way.  This is how udpateVerticesDataDirectly came about._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You can look in the repository for an example_co_ but the only source is typescript.  In v1.0_co_ I actually got the names of debug &amp_sm_ uglified backwards.The Morph.js has readable js.  Fixed in futue release._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"FreeFrags","Date":"2014-11-17T14:08:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok i will take another look_co_ first i will need to update my project to use the latest babylonJS since there were a few modifications made when my pull request was merged._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Hopefully i will be able to find it all_co_ my ultimate goal would be that i could update a mesh on the fly_co_ adding and removing vertices when needed. If i manage to get it working and i need to modify anything in the engine you can expect a new pull request _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2014-11-17T14:26:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I do not believe adding or removing vertices is possible in BJS.  The positions are the unique coordinates of vertices_co_ with matching normals_co_ but the indices refer to the positions to create the triangles.  I do not set that indices are updateable.  You may be able to set the indices again_co_ but I would look at source before you do._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Do not know what you wish to do_co_ but you might want fold the locations on top of others to create the illusion of deletion_co_ or the opposite for creation._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"FreeFrags","Date":"2014-11-17T14:41:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Id like to be able to _qt_stream vertices_qt_ to the gpu_co_ creating a FIFO container with a certain size so the container stays the same size (adding them at one end and removing at the other)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In my case it would be enough to only stream vertices and render them as points. The work around you suggest is also possible yes and is not a bad idea at all. ill give that a try before i do anything more complicated._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"FreeFrags","Date":"2014-11-17T15:00:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I think ill need to take a good look at _qt_ParticleSystem_qt__co_ at first glance it looks like it does something similar. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]