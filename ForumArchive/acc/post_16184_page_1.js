[{"Owner":"Drenghel","Date":"2015-08-03T15:45:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi Babylonians !_lt_br_gt__lt_br_gt_I_t_m just getting started in this new beatiful that is WebGl and BJS_co_ I_t_m going through the documentation/ tutorials / Demos for the last two days but I can_t_t find a way to make my mesh fall._lt_br_gt_It works with the free camera_co_ the collisions also works._lt_br_gt__lt_br_gt_Here_t_s a snippet of relevant code I wrote_co_ tell me what I forgot please. I don_t_t think I forgot to include any physic library ( since 2.1 it seems to be packed with BJS ) but I may be wrong and the tutorials done with the older version confuse me a bit _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_br_gt__lt_br_gt__lt_br_gt_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_\t\t\t\tvar scene _eq_ new BABYLON.Scene(engine)_sm_\t\t\t\tscene.gravity _eq_ new BABYLON.Vector3(0_co_ -0.01_co_ 0)_sm_\t\t\t\tscene.workerCollisions _eq_ true_sm_\t\t\t\tscene.collisionsEnabled _eq_ true_sm_\t\t\t\tvar sphere _eq_ BABYLON.Mesh.CreateSphere(_qt_sphere1_qt__co_ 16_co_ 2_co_ scene)_sm_\t\t\t\tsphere.position _eq_ new BABYLON.Vector3(5_co_ 2_co_ -5)_sm_\t\t\t\tsphere.applyGravity _eq_ true_sm_\t\t\t\tsphere.ellipsoid _eq_ new BABYLON.Vector3(0.5_co_ 1.0_co_ 0.5)_sm_\t\t\t\tsphere.checkCollisions _eq_ true_sm_\t\t\t\tvar ground _eq_ BABYLON.Mesh.CreateGround(_qt_ground1_qt__co_ 100_co_ 100_co_ 2_co_ scene)_sm_\t\t\t\tvar groundMaterial _eq_ new BABYLON.StandardMaterial(_qt_groundMaterial_qt__co_ scene)_sm_\t\t\t\tgroundMaterial.diffuseTexture _eq_ new BABYLON.Texture(_qt_grass.bmp_qt__co_ scene)_sm_\t\t\t\tground.material _eq_ groundMaterial_sm_\t\t\t\tground.checkCollisions _eq_ true_sm_\t\t\t\tvar camera _eq_ new BABYLON.FreeCamera(_qt_camera1_qt__co_ new BABYLON.Vector3(-10_co_ 2.5_co_ 0)_co_ scene)_sm_\t\t\t\tcamera.setTarget(sphere.position)_sm_\t\t\t\tcamera.keysUp _eq_ [90]_sm_\t\t\t\tcamera.keysRight _eq_ [68]_sm_\t\t\t\tcamera.keysLeft _eq_ [81]_sm_\t\t\t\tcamera.keysDown _eq_ [83]_sm_\t\t\t\tcamera.checkCollisions _eq_ true_sm_\t\t\t\tcamera.applyGravity _eq_ true_sm_\t\t\t\t//Set the ellipsoid around the camera (e.g. your player_t_s size)\t\t\t\tcamera.ellipsoid _eq_ new BABYLON.Vector3(1_co_ 0.3_co_ 1)_sm_\t\t\t\tcamera.attachControl(canvas_co_ false)_sm__lt_/pre_gt__lt_p_gt_Thanks a lot in advance_co_ I feel stupid not to find what_t_s wrong_co_ plealse _qt_unstupidify_qt_ me _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_br_gt_( And yeah frenchie here so weird english ^^_t_ )_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2015-08-03T17:14:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Heya!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Welcome _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_Actually_co_ the physics engine is not shipped with Babylon... It_t_s the way to use it (called a plugin)!_lt_/p_gt__lt_p_gt_I_t_m not a pro for the collision engine in Babylon_co_ but I think that if you want meshes to use gravity_co_ you have to use a physics engine (cannon or oimo as you wish)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_However_co_ you can use _t_moveWithCollision_t__dd_ it is this method that uses ellipsoid and so on._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For next time_co_ and in order to help you more easily_co_ you can try to reproduce your problem in the _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/_qt_ rel_eq__qt_external nofollow_qt__gt_playground_lt_/a_gt_. This way_co_ we can update it at will_co_ test our solution and get back to you quicker _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_Good luck!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-08-03T19:34:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi! always nice to have fresh users on their quest for the next webgl game _dd_-)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere are two ways to use collisions and physics in babylon. It has a native collision system_co_ that supports gravity on free cameras only. It also supports mesh-to-mesh collision when you wish to avoid meshes _qt_merging_qt_ into one another. As Temechon said_co_ the moveWithCollisions function of any mesh will move it in a specific direction until it collides with a different mesh. you can see a gravity simulation in this playground - _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#NVWUF_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#NVWUF_lt_/a_gt_ . What I am doing is simply applying the scene_t_S gravity constantly to the box on each frame. But this is not the way the collision detection system was meant to be used. It is actually more for the camera and less for meshes. To prevent from going through walls and such.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo allow meshes physically colliding with one another using mass and friction and other fun things_co_ you will need one of the two physics engines Babylon supports. Here is almost the same playground with Oimo physics turned on - _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#NVWUF%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#NVWUF#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTry understanding what_t_S happening here. I think I will soon write an updated tutorial about the collisions system and physics\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOn a side note - I am not sure why we can_t_t add the gravity support to the meshes_co_ let me have a look _dd_-). Maybe 2.2 will include moving meshes with gravity as well.  \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Drenghel","Date":"2015-08-04T12:10:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_91547_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_16184_qt_ data-ipsquote-username_eq__qt_Temechon_qt_ data-cite_eq__qt_Temechon_qt_ data-ipsquote-timestamp_eq__qt_1438622041_qt__gt__lt_div_gt__lt_div_gt_Actually_co_ the physics engine is not shipped with Babylon... It_t_s the way to use it (called a plugin)!_lt_p_gt__lt_/p_gt__lt_p_gt_I_t_m not a pro for the collision engine in Babylon_co_ but I think that if you want meshes to use gravity_co_ you have to use a physics engine (cannon or oimo as you wish)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_However_co_ you can use _t_moveWithCollision_t__dd_ it is this method that uses ellipsoid and so on._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For next time_co_ and in order to help you more easily_co_ you can try to reproduce your problem in the _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/_qt_ rel_eq__qt_external nofollow_qt__gt_playground_lt_/a_gt_. This way_co_ we can update it at will_co_ test our solution and get back to you quicker _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_Good luck!_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It_t_s the _qt_Physics engine (thanks to _lt_a href_eq__qt_https_dd_//github.com/lo-th/Oimo.js_qt_ rel_eq__qt_external nofollow_qt__gt_oimo.js_lt_/a_gt_)_qt_ that made me think that_co_ but I get it know ^^ and I_t_m not used to something like oimo or cannon being so well integrated_co_ I thought of it like another completely different library ._lt_/p_gt__lt_p_gt_I will show you it on a play ground next time_co_ good piece a advice _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_91571_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_16184_qt_ data-ipsquote-username_eq__qt_RaananW_qt_ data-cite_eq__qt_RaananW_qt_ data-ipsquote-timestamp_eq__qt_1438630469_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Hi! always nice to have fresh users on their quest for the next webgl game _dd_-)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_There are two ways to use collisions and physics in babylon. It has a native collision system_co_ that supports gravity on free cameras only. It also supports mesh-to-mesh collision when you wish to avoid meshes _qt_merging_qt_ into one another. As Temechon said_co_ the moveWithCollisions function of any mesh will move it in a specific direction until it collides with a different mesh. you can see a gravity simulation in this playground - _lt_a href_eq__qt_http_dd_//babylonjs-playground.azurewebsites.net/#NVWUF_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjs-playground.azurewebsites.net/#NVWUF_lt_/a_gt_ . What I am doing is simply applying the scene_t_S gravity constantly to the box on each frame. But this is not the way the collision detection system was meant to be used. It is actually more for the camera and less for meshes. To prevent from going through walls and such._lt_/p_gt__lt_p_gt_To allow meshes physically colliding with one another using mass and friction and other fun things_co_ you will need one of the two physics engines Babylon supports. Here is almost the same playground with Oimo physics turned on - _lt_a href_eq__qt_http_dd_//babylonjs-playground.azurewebsites.net/#NVWUF%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjs-playground.azurewebsites.net/#NVWUF#1_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Try understanding what_t_S happening here. I think I will soon write an updated tutorial about the collisions system and physics_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_On a side note - I am not sure why we can_t_t add the gravity support to the meshes_co_ let me have a look _dd_-). Maybe 2.2 will include moving meshes with gravity as well.  _lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This_co_ this is what I needed to know !_lt_/p_gt__lt_p_gt_That physic engine will be really helpful ! To be honest my first project is to recreate a simple game based on Pachinko_co_ I hardly imagine that without a proper physic simulation ^^_lt_/p_gt__lt_p_gt_I_t_ll dissect that playground right-away_co_ and try to find some doc for the engine ( now that I know the name of the methods_co_ should be a piece of cake _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ )_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_EDIT _dd__lt_/p_gt__lt_p_gt_Any advice about Oimo versus cannon ?_lt_/p_gt__lt_p_gt_---_lt_/p_gt__lt_p_gt_Anyway thanks to both of you_co_ I_t_ll set this topic on resolved soon_co_ just need the time to be sure I won_t_t get stuck while writing the first 5 lines ^^_lt_/p_gt__lt_p_gt_Regards Drenghel_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]