[{"Owner":"RaananW","Date":"2015-01-31T22:27:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I got a small problem with conversion from rotation vector to quaternion and back to rotation vector._lt_/p_gt__lt_p_gt_I searched a bit and found this - _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/3159-quaternionrotationyawpitchroll-parameters-and-toeulerangles-result-should-be-the-same/page-2_qt__gt_http_dd_//www.html5gamedevs.com/topic/3159-quaternionrotationyawpitchroll-parameters-and-toeulerangles-result-should-be-the-same/page-2_lt_/a_gt__lt_/p_gt__lt_p_gt_so I ran the very simple test that was suggested there_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var e _eq_ new BABYLON.Vector3(0.1_co_ 0.2_co_ 0.3)_sm_var q _eq_ BABYLON.Quaternion.RotationYawPitchRoll(e.y_co_ e.x_co_ e.z)_sm_ console.log(e)_sm_                 console.log(q.toEulerAngles())_sm_ _lt_/pre_gt__lt_p_gt_The results were not what I expected _dd_-)_lt_/p_gt__lt_p_gt_I would expect that the two console outputs would be the same (with a certain epsilon)_co_ but they are way off _dd_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_e _dd_ {x_dd_ 0.1_co_ y_dd_ 0.2_co_ z_dd_ 0.3}toEulerAngles _dd_ {x_dd_ 1.1031300122019663_co_ y_dd_ 0.22330745949001432_co_ z_dd_ -0.8131717646205182} _lt_/pre_gt__lt_p_gt_I also tried a different order while creating the quaternion and found no good combination._lt_/p_gt__lt_p_gt_Anyone encountered this? Would be great to know if there is a simple solution_co_ before I dive into the Quaternion class _dd_-)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-01-31T23:32:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I had this problem and I give up . _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-02-01T22:15:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_So_co_ I have been working on that for the last few hours._lt_/p_gt__lt_p_gt_Here is my test (if anyone wants an explanation_co_ please let me know) - _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#UCEF7_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#UCEF7_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The main problem is the toEuler function in the quaternion class. This seems to malfunction. It is returning the wrong rotation back. This function is only used at the webVR camera_co_ and it is (very sadly) exactly where I need it _dd_-) ._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I did further inspection. I have created a new euler to quaternion function based on this page - _lt_a href_eq__qt_http_dd_//www.euclideanspace.com/maths/geometry/rotations/conversions/eulerToQuaternion/index.htm_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.euclideanspace.com/maths/geometry/rotations/conversions/eulerToQuaternion/index.htm_lt_/a_gt_ . The results were correct according to many tools_co_ but are wrong in babylon_t_s space. However (and this is where it gets strange) - converting from this quaternion back to euler_co_ using a self-implemented function_co_ returns the correct(!) euler angels. So_co_ quaternion is wrong in bjs_co_ euler that comes back is correct. Which made me wonder how this could be. _lt_/p_gt__lt_p_gt_So_co_ I went and checked the toRotationMatrix function of Quaternion and have compared it to the online version I found here - _lt_a href_eq__qt_http_dd_//www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToMatrix/index.htm_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToMatrix/index.htm_lt_/a_gt_ . There seems to be some kind of weird anomalies between the two. Could this be the reason for all of this? that somehow the quaternion being calculated is off_co_ but then the rotation matrix brings it back to the correct form? And this is how it works correctly in BJS? _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Tl_sm_Dr_lt_/p_gt__lt_p_gt_Is it possible that the toRotationMatrix in Quaternion is wrong? (I doubt it_co_ but I can_t_t find a different explanation to this entire thingy...)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-02-02T04:58:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Possibly_dd_)_lt_/p_gt__lt_p_gt_I_t_ll investigate_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-02-02T18:35:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi DK_co__lt_/p_gt__lt_p_gt_Just wanted to know if it might be the case. I_t_ll run some tests and post the results here. Seems like you have enough to do _dd_-)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Lerige","Date":"2015-02-02T21:30:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi Ranaan_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If this can help_co_ working on my own small demo from babylon 1.14 to 2.0_co_ I_t_ve noticed the problem is located in _qt_toEulerAngles_qt_ function. I_t_ve switched back to 1.14 version which give correct results for me._lt_/p_gt__lt_p_gt_For example_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_e_dd_  {x_dd_ 0_co_ y_dd_ 3.141592653589793_co_ z_dd_ 0}_lt_br_gt_toEulerAngles (2.0 version)_dd_ {x_dd_ 3.141592653589793_co_ y_dd_ 3.141592653589793_co_ z_dd_ 0}_lt_br_gt_toEulerAngles (1.14 version)_dd_ {x_dd_ 0_co_ y_dd_ 3.141592653589793_co_ z_dd_ 0}_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I admit I_t_ve been to lazy to go further at this moment... I_t_ll try look into this next week end if no one found the explanation before _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-02-02T21:54:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi Lerige_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_thanks! Sadly this is not the issue ( i assume). 3.14159 (and so on and so on _dd_-) ) is Math.PI_co_ which means that the rotation in both is correct (360 degrees rotation is actually _eq__eq_ 0). Would be however interesting to see what was changed between the two_co_ as this is probably not the result of the same function. I_t_ll look into that._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I did further tests. I changed most of the quaternion functions - _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#UCEF7%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#UCEF7#4_lt_/a_gt__lt_/p_gt__lt_p_gt_The rotation of all boxes is now correct. It did_co_ however_co_ completely (!!) messed up the entire camera rotation. Try moving the mouse and you will understand what I mean. setTarget won_t_t work anymore as well. The rotation given to the camera (check the console log_co_ it is the only vector that is not 0.7 in all positions) is correct. _lt_/p_gt__lt_p_gt_I guess there is one more function to check_co_ and I assume it is somewhere in the Matrix function (maybe the static LookAt_co_ maybe others)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Changing the camera to ArcRotate totally worked and fixed everything - _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#UCEF7%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#UCEF7#3_lt_/a_gt_ . So it is somewhere in the target camera class._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@DK - Do you think it is the right direction? _lt_/p_gt__lt_p_gt_Another question would be - do we really need that? the toEuler function is hardly used. The only reason I need it_co_ is to set the rotation of a (target) camera from a quaternion. Maybe adding rotationQuaternion to the target camera would simply solve this entire thing? The only problem I see is the _update function of the camera_co_ as X and Y (of the mouse) is being used to change the X and Y of the camera_t_s rotation. with a quaternion it would look a bit different._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I started writing as long as Wingnut... Hi de wingy!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-02-02T22:46:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Actually_co_ only unit quaternions have corresponding Euler angles.  You should try q.normalize().toEulerAngles() instead of q.toEulerAngles()._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-02-02T22:54:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_70293_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_12142_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1422917210_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Actually_co_ only unit quaternions have corresponding Euler angles.  You should try q.normalize().toEulerAngles() instead of q.toEulerAngles()._lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Tried this_co_ I thought this was the reason as well. _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#UCEF7%237_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#UCEF7#7_lt_/a_gt__lt_/p_gt__lt_p_gt_Still off._lt_/p_gt__lt_p_gt_For some reason the camera still behaves funny_co_ even after i commented out the prototype overrides (and reloaded completely_co_ of course). Happens on your side as well?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]