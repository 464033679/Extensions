[{"Owner":"JCPalmer","Date":"2015-01-22T15:50:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I need to store a boolean property in a BABYLON.Mesh that is not defined in it_co_ for cloning purposes.  This is no problem for javascript_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_meshVar.castShadows _eq_ true_sm__lt_/pre_gt__lt_p_gt_Tower of Babel generates both a .js and .ts.  The above line will not compile.  Was looking @ .bind_co_ but this seems to be for functions.  Anyone know the way to do this?  A related question is how would you then access it later?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-01-22T16:32:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Fastest way_dd__lt_/p_gt__lt_p_gt_meshVar[_qt_castShadows_qt_] _eq_ true_sm__lt_/p_gt__lt_p_gt_Best way would be to create an interface with the property._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-01-22T18:25:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Works.  Also_co_ am generating this module function to access castShadows_co_ for anyone searching in future_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_    function freshenShadowRenderLists(scene) {        if (!BABYLON.Engine.Version || Number(BABYLON.Engine.Version.substr(0_co_ BABYLON.Engine.Version.lastIndexOf(_qt_._qt_))) &lt_sm_ 2.0) throw _qt_Babylon version too old_qt__sm_        BABYLON.Tools.Log(_t_In freshenShadowRenderLists_t_)_sm_        var renderList _eq_ []_sm_        for (var i _eq_ 0_sm_ i &lt_sm_ scene.meshes.length_sm_ i++){            if (scene.meshes[i][_qt_castShadows_qt_])                renderList.push(scene.meshes[i])_sm_        }        for (var i _eq_ 0_sm_ i &lt_sm_ scene.lights.length_sm_ i++){            if (scene.lights[i]._shadowGenerator)                scene.lights[i]._shadowGenerator.getShadowMap().renderList _eq_ renderList_sm_        }    }    module_name.freshenShadowRenderLists _eq_ freshenShadowRenderLists_sm__lt_/pre_gt__lt_p_gt_Am in testing phase for TOB 2.0.  Have modified the first test to do mesh factory cloning. _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//googledrive.com/host/0B6-s6ZjHyEwUUW9HX1lqbnFLRzA_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//googledrive.com/host/0B6-s6ZjHyEwUUW9HX1lqbnFLRzA_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Looking at console_dd_ _lt_/p_gt__lt_ol_gt__lt_li_gt_Gus mesh requested_dd_ Gus mesh &amp_sm_ children meshes instanced_lt_/li_gt_\t_lt_li_gt_ShadowGenerator built with embedded freshenShadowRenderLists() call._lt_/li_gt_\t_lt_li_gt_Gus mesh requested_dd_ Gus mesh &amp_sm_ children meshes cloned_lt_/li_gt__lt_/ol_gt__lt_p_gt_Since Cloned after freshenShadowRenderLists()_co_ no shadow for it._lt_/p_gt__lt_p_gt_First Click _qt_Orphan - Conceive_qt_ toggle to see shadows of kids with parent_lt_/p_gt__lt_p_gt_Click _qt_Refresh Shadows_qt_ to get clone shadowed_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The reason I am publishing this is I have changed to a spot light_co_ which handles shadows in BJS 2.0.  There is a minor problem though.  If the very center of the spot is in shadow_co_ the diffuse light still comes through.  Looks like Gus has a bullet hole._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]