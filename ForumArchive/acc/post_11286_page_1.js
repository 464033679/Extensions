[{"Owner":"altreality","Date":"2014-12-24T16:04:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_In the babylon.physicsEngine.js file I see that the z and the y have been interchanged. I guess thats because cannon has z axis up and not y axis like Babylon. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But shouldnt  z or y have their sign changed also to take care of the handedness._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I ask because cannon has added heightmap support and I want to adapt the following code for supporting the heightmaps in babylon from cannon _dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_div_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_ CannonJSPlugin.prototype._createConvexPolyhedron _eq_ function (rawVerts_co_ rawFaces_co_ mesh_co_ options) {            var verts _eq_ []_co_ faces _eq_ []_sm_            mesh.computeWorldMatrix(true)_sm_            for (var i _eq_ 0_sm_ i &lt_sm_ rawVerts.length_sm_ i +_eq_ 3) {                var transformed _eq_ BABYLON.Vector3.Zero()_sm_                BABYLON.Vector3.TransformNormalFromFloatsToRef(rawVerts[i]_co_ rawVerts[i + 1]_co_ rawVerts[i + 2]_co_ mesh.getWorldMatrix()_co_ transformed)_sm_                verts.push(new CANNON.Vec3(transformed.x_co_ transformed.z_co_ transformed.y))_sm_            }            for (var j _eq_ 0_sm_ j &lt_sm_ rawFaces.length_sm_ j +_eq_ 3) {                faces.push([rawFaces[j]_co_ rawFaces[j + 2]_co_ rawFaces[j + 1]])_sm_            }            var shape _eq_ new CANNON.ConvexPolyhedron(verts_co_ faces)_sm_            if (!options) {                return shape_sm_            }            return this._createRigidBodyFromShape(shape_co_ mesh_co_ options.mass_co_ options.friction_co_ options.restitution)_sm_        }_sm__lt_/pre_gt__lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-12-27T18:26:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello from the test I did inverting y and z was enough_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Is it not working for you? (Happy to see _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_heightmap _lt_/span_gt_support added_dd_))_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]