[{"Owner":"Nodragem","Date":"2018-07-22T20:41:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am starting to use BabylonJS and can_t_t find an input manager in the documentation _lt_span_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ˜•_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Let_t_s say I have a main character that can jump and I want my game to be playable on PC_co_ mobile without/with a controller._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_I would like the main character to jump whenever the playerÂ presses the xbox controller_t_s button _qt_A_qt_ or the keyboard_t_s key _qt_space_qt_ or tap on the screen._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Is it possible to register these events under the same name _qt_Jump_qt_ and write something like the following?_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_if inputManager.GetButtonJustPressed(_qt_Jump_qt_){\n\nÂ  Â  mainCharacter.jump()\n\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Thank you very much for the help _lt_span_gt__lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_Â _lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-07-23T00:52:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tsearch for gamepad - also keypress events_dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/how_to/how_to_use_gamepads_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/how_to/how_to_use_gamepads_lt_/a_gt__lt_br /_gt_\n\tThe observable is called when a controller is dis/connected_co_ then you attach the behaviour you want for your player.Â  Hope that makes sense.Â  Otherwise make a playground.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-07-26T12:38:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIf I understand_co_ you would manage the keyboard with the ActionManager and the gamepad with the GamepadManager/Observable?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe documention says_dd_\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tQuote\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThere are two features of Babylon.js that handle events_co_ actions and observables. It is also possible to use plain Javascript.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tIt seems to me that_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- there is no actions in the ActionManager related to the gamepad_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- there is no observableÂ related to the Keyboard\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- there areÂ actions in the ActionManager related to the keyboard_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- there is an observable related to the Gamepad\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe it could make sense to have actions/observables for both?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFurthermore_co_ it could be nice toÂ have actions/observables that do not care from where the event is trigger.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor instance_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI would attachÂ an event _qt_Jump_qt_ to the Button A of my Gamepad and to the space key of my keyboard.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen_co_ I would either use an Observable or the ActionManager to trigger some code when the _qt_Jump_qt_ event is triggered.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat way you could easily change your input settings by changing which inputs (e.g. key press_co_ button press_co_ click)Â triggers the _qt_Jump_qt_ event.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-07-26T13:04:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_223260_qt_ data-ipsquote-contentid_eq__qt_39029_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1532608723_qt_ data-ipsquote-userid_eq__qt_29687_qt_ data-ipsquote-username_eq__qt_Nodragem_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t16 minutes ago_co_ Nodragem said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tthere is no observableÂ related to the Keyboard\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tIn the API _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/api/classes/babylon.scene#onkeyboardobservable_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/api/classes/babylon.scene#onkeyboardobservable_lt_/a_gt_ from scene observables _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/api/classes/babylon.scene_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/api/classes/babylon.scene_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlayground example using WASD keys _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#K1LI48%236_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#K1LI48#6_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-07-26T15:34:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIf you want to add a gamepad trigger for actions_co_ I will gladly merge it as I think this is a good idea to add\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-07-28T17:06:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThank you JohnK_co_ however_co_ if gamepads has the right to have their own BABYLON.GamepadManager()_co_ wouldn_t_t be more consistent to move the keyboard observable to a BABYLON.KeyboardManager()? Why not do the same for the pointer and make aÂ PointerManager()?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you Deltakosh_co_ I am happy to try _lt_span_gt__lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_Â where do I start (and what about the above?)?_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Next to that_co_ do you think it could be nice to have events/observablesÂ that aren_t_t specific to keyboard/gamepad/mouse? _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe could have an InputManagerÂ creating a layer of abstraction with the input sources.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe InputManager could be just a relay that would registers to manyÂ Observables and be itself an Observable.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor instance_co_ BabylonJS_t_s usersÂ would register_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- _qt_Keyboard KeyDownÂ Space_qt_ asÂ _qt_Jump_qt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- _qt_TouchScreen PointerDown_qt_ as _qt_Jump_qt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- _qt_Gamepad ButtonDown A_qt_ as _qt_Jump_qt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen_co_ when the usersÂ are writing their jump mechanics_co_ theyÂ wouldn_t_tÂ need to check for all these input sources_co_ they could just test_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_if inputManager.wasJustTriggered(_qt_Jump_qt_) { doJump() }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tor_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_inputManager.onEvent.add((event_name_co_ state)_eq_&gt_sm_{\n        //event was triggered\n        if(event_name _eq__eq__eq_ _qt_Jump_qt_)\n           doJump()\n        \n})\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t(Note that there could even be a Json import/export to store the input settings)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe could also have a common interface for directional inputÂ (controlling up/down with gamepads_t_ analog stick vs keyboards_t_ keys)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am happy to try doing a PR _lt_span_gt__lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"aWeirdo","Date":"2018-07-28T17:48:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m not sure iÂ understandÂ the need_co_ seems like reinventing the wheel? no?Â _lt_br /_gt_\n\tobservers can doÂ everything you want_co_ as you write the logic._lt_br /_gt_\n\tObservers simply tell you_co_ _qt_this key was pressed_qt_ _qt_this key was released_qt__lt_br /_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#J7HA4U_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#J7HA4U_lt_/a_gt__lt_br /_gt_\n\t_lt_br /_gt_\n\tand here with a _qt_keyIndex_qt__co_ space _eq_ _qt_jump_qt__co_ w _eq_ _qt_forward_qt__lt_br /_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#J7HA4U%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#J7HA4U#2_lt_/a_gt__lt_br /_gt_\n\t_lt_br /_gt_\n\t_lt_br /_gt_\n\tThe json idea is nice_co_ but a simple extension based on keyboard observersÂ seems more reasonable... I might be misunderstanding something.._lt_br /_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-07-28T18:14:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI think he_t_s asking for more than key observables_co_ but a way to map and integrate the various input sources._lt_br /_gt_\n\tie_dd_ space bar_co_ trigger button or left mouse click - triggers a _qt_jump_qt_ event.Â  I am not aware of a way to do a cleanÂ mapping from different sources.Â  The webxr spec looks like it has provided space for _t_gestures_t__co_ so it_t_s only getting more complicated.Â  It doesn_t_t feel to me like a reinventing of the wheel_co_ but adding an abstraction layer as nodragem said.Â  Although I_t_m not sure it belongs in the core_co_ seems notÂ too hard to write a mapping._lt_br /_gt_\n\t// setup.Â  I just made up variables._lt_br /_gt_\n\tinputManager.addAction(PointerEvent.Down_co_ MouseButton.Left &amp_sm_ MouseClick.Single_co_ _qt_jump_qt_)_sm__lt_br /_gt_\n\tinputManager.addAction(KeyboardEvent.KeyDown_co_ 32 /* space */_co_ _qt_jump_qt_)_sm__lt_br /_gt_\n\tinputManager.addAction(GamePad.TriggerButton_co_ _qt_jump_qt_)_sm__lt_br /_gt_\n\t_lt_br /_gt_\n\t// add listener_lt_br /_gt_\n\tinputManager.eventObservables.add(_qt_jump_qt__co_ (evt)Â _eq_&gt_sm_ {_lt_br /_gt_\n\tÂ  Â  doJump()_sm__lt_br /_gt_\n\t})_lt_br /_gt_\n\t_lt_br /_gt_\n\tAll the needed code is in the Observable&lt_sm_T&gt_sm_ already.Â  There is a mask there that kinds works the same - as a _t_filter_t_ on what is triggered_co_ but this is for strings.Â  I think just a simple object dictionary to list would suffice.Â  The observable could be pattern matching (ie_dd_ _qt_jum*_qt_)Â or function as well._lt_br /_gt_\n\tinputManager.eventObservables.add((evt) _eq_&gt_sm_ evt.name.startsWith(_qt_jum_qt_)_co_ () _eq_&gt_sm_ {_lt_br /_gt_\n\tÂ  Â doJump()_sm_ // ie_dd_ will also be triggered on _qt_jumparound_qt__lt_br /_gt_\n\t})\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI would start here - you need something like a _t_mask_t__dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Tools/babylon.observable.ts#L87_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Tools/babylon.observable.ts#L87_lt_/a_gt__lt_br /_gt_\n\tedit_dd_ this input manager also needs to listen for gamepad de/registrations.Â  that code is not too much either.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-08-09T21:32:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/29687-nodragem/?do_eq_hovercard_qt_ data-mentionid_eq__qt_29687_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/29687-nodragem/_qt_ rel_eq__qt__qt__gt_@Nodragem_lt_/a_gt__lt_/span_gt_ If you do end up building something for this - there is an XR concept called _qt_Action Sets_qt_ and I think that is a useful concept to include with any implementation.Â  Basically_co_ depending if you are playing the game or navigating the menu (context)_co_ then the bindings are different.Â  ie_dd_ trigger button is _qt_jump_qt_ during game play_co_ and _qt_select_qt_ when navigating menus.Â  If you watch this video for a couple of minutes then you can see it being explained with kittens (yes_co_ kittens)Â _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//www.youtube.com/watch?v_eq_U-CpA5d9MjI&amp_sm_feature_eq_youtu.be&amp_sm_t_eq_31m23s_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.youtube.com/watch?v_eq_U-CpA5d9MjI&amp_sm_amp_sm_feature_eq_youtu.be&amp_sm_amp_sm_t_eq_31m23s_lt_/a_gt__lt_br /_gt_\n\tAlso_co_ there is a question at 57_dd_30 about action sets_co_ where he discusses theÂ global action set and I think that is key as well.Â  I am researching XR_co_ so wouldn_t_t expect you to make it that far!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-08-10T10:34:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYep_co_ I see what you mean. That would definitely be nice to have! I just need to find some time to start program it _lt_span_gt__lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-09-08T08:13:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI just had a look at the Unity toolkit (_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/resources/intro_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/resources/intro_lt_/a_gt_) and the Scene Manager extension that it uses (_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Extensions/blob/master/SceneManager/src/babylon.scenemanager.ts_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Extensions/blob/master/SceneManager/src/babylon.scenemanager.ts_lt_/a_gt_).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUnity does have an high-level/flexible input manager as described above (see _lt_a href_eq__qt_https_dd_//docs.unity3d.com/Manual/class-InputManager.html_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//docs.unity3d.com/Manual/class-InputManager.html_lt_/a_gt_Â ) _lt_span_gt__dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_The Input Manager_qt_ src_eq__qt_https_dd_//docs.unity3d.com/uploads/Main/InputSetAll.png_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHence I was thinking that maybe the Unity toolkit / exporter already deals with Unity Input Manager_co_ which would mean that somewhere in the Scene Manager extension_co_ there is already a high-level/flexibleÂ Input Manager.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe question is_dd_ Do we need to program an input manager if it was already implemented in the Scene Manager?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHowever_co_ I tried to read through the source code and nothing looks like a Hashmap or structure_co_ which I would have expected to see.Â \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-09-08T15:45:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_227551_qt_ data-ipsquote-contentid_eq__qt_39029_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1536394396_qt_ data-ipsquote-userid_eq__qt_29687_qt_ data-ipsquote-username_eq__qt_Nodragem_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t7 hours ago_co_ Nodragem said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tHence I was thinking that maybe the Unity toolkit / exporter already deals with Unity Input Manager_co_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI don_t_t see that as a supported feature_dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/resources/intro_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/resources/intro_lt_/a_gt__lt_br /_gt_\n\tI can see in the scene manager they are being put into UserInputOptions from metadata_co_ but didn_t_t look further_co_ but that_t_s probably the structure you are after_dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Extensions/blob/f018e82197c2d1de1149b5e3ae589df978fab4f2/SceneManager/src/babylon.scenecomponents.ts#L984_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Extensions/blob/f018e82197c2d1de1149b5e3ae589df978fab4f2/SceneManager/src/babylon.scenecomponents.ts#L984_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]