[{"Owner":"Quadear","Date":"2016-09-14T16:04:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Everyone !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m currently trying to use the babylon assets manager to do some conditionnal loading. I want to to this_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- Load a text file using the assets manager\n_lt_/p_gt_\n\n_lt_p_gt_\n\t---Read the text file and find some urls inside it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t-----Load these urls as textures using the babylon assets manager\n_lt_/p_gt_\n\n_lt_p_gt_\n\t-----When loaded_co_ trigger the on finish event in the loader\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tRight now_co_ I can do easily those parts separatly_co_ but when i try to mix them_co_ the onFinish event from the assets loader triggers when the text file is loaded (logic_co_ it_t_s the only thing in the loader at the moment). I want to delay it_co_ if it_t_s possible_co_ until I_t_ve found the new things to put in the loading queue.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway_co_ I can do this un an _qt_ugly_qt_ way_co_ but there is probably a more elegant build-in way of using the Babylon assets loader to fill this purpose.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"royibernthal","Date":"2016-09-14T18:00:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tTry using BABYLON.Tools.LoadFile to load the text file_co_ once loaded use AssetsManager to load the urls listed in it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can see it in action in the Sponza demo found in bjs samples.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Quadear","Date":"2016-09-15T07:48:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_background-color_dd_rgb(255_co_255_co_255)_sm_float_dd_none_sm__qt__gt_Try using BABYLON.Tools.LoadFile_lt_span_gt_ _lt_/span_gt__lt_/span_gt_ _eq_&gt_sm_ already doing that. The problem is that once the file is loaded_co_ it triggers the _qt_on finish_qt_ event of the loader before reading the text file and loading other textures.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI will look at the sponza démo_co_ ty\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Quadear","Date":"2016-09-15T10:23:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI haven_t_t found what i was looking for on the sponza demo.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is an exemple of what I want _dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_this._assets[_qt_task1_qt_] _eq_ this._assetsManager.addTextFileTask(_qt_resourcesmap_qt__co_ http_dd_//localhost/api/_qt_ + _qt_resourcesmap_qt_)_sm_\nthis._assets[_qt_task1_qt_].onSuccess _eq_ function(task) {\n    let json _eq_ JSON.parse(task[_qt_text_qt_])_sm_\n    for(let i _eq_ 0_sm_ i &lt_sm_ json.length_sm_ i ++) {\n        let current _eq_ json[i]_sm_\n        let textureUrl _eq_ current.textureUrl_sm_\n\n        if (textureUrl) {\n            let id _eq_ current.id_sm_\n\n            self._assets[id] _eq_ self._assetsManager.addTextureTask(id_co_ _qt_http_dd_//localhost/textures/_qt_ + textureUrl_co_ true_co_ false)_sm_\n        }\n    }\n}_sm_\n\nthis._assetsManager.load()_sm_\nthis._assetsManager.onFinish _eq_ function () {\n    window.dispatchEvent(new CustomEvent(_qt_All Assets Loaded_qt_))_sm_\n}_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThe behaviour I would like to have is the following _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- Task1 loads and end\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- the json is parsed\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- the textures are loaded\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- the custom event All Assets Loaded is triggered\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe behaviour I have is the following_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- Task1 loads and end\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- the custom event All Assets Loaded is triggered\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- the textures are never loaded\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe problem comes from _dd_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn the assets Manager_co_ the load function checks the length of all the tasks and never refreshes it. I don_t_t think I have a clean solution to solve that problem_co_ I_t_m going to extend the class and craft something myself. If anyone is interested by it_co_ say it and I will share it.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Athelios","Date":"2016-09-15T13:15:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/23406-quadear/?do_eq_hovercard_qt_ data-mentionid_eq__qt_23406_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/23406-quadear/_qt_ rel_eq__qt__qt__gt_@Quadear_lt_/a_gt_ I was able to do this by code_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var assets _eq_ loader.addTextFileTask(_qt__qt__co_ _qt_/static/assets.json_qt_)\nloader.load()_sm_\nloader.onFinish _eq_ function (tasks) {\n    assets _eq_ JSON.parse(assets.text)_sm_\n    load()_sm_\n}_sm_\n\nload _eq_ function() {\n    for (var i in assets.textures) {\n        assets.textures[i] _eq_ loader.addTextureTask(_qt__qt__co_ _qt_/static/_qt_+assets.textures[i])_sm_\n    }\n    loader.onFinish _eq_ function (tasks) {\n        console.log(_qt_Done! Textures loaded!_qt_)_sm_\n    }_sm_\n    loader.load()_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Quadear","Date":"2016-09-15T13:45:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYup_co_ that_t_s what I_t_m using right now_co_ but ty. I wanted to have something more automatic thoug\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"royibernthal","Date":"2016-09-15T13:56:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_ yes I understood what you meant.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheck babylon.demo.ts in Samples-mater/Demos/Sponza. It does exactly what you want_co_ just replace SceneLoader with AssetsManager.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Quadear","Date":"2016-09-15T15:37:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYeah_co_ Ty.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]