[{"Owner":"Vousk-prod.","Date":"2017-04-12T08:55:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello everyone!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_d like to discuss a little bit about the manifest that goes with the .babylon files.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor now_co_ it contains an _qt_arbitrary_qt_ version number (integer)_co_ and the loader checks if this number is greater than previous one to determine if 3D data an textures should be loaded from indexedDB or network.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWouldn_t_t it be more usefull if this version number could be a string instead of integer (with simple comparison between new string and previous one)? So we could_co_ for instance_co_ put the hash of the .babylon associated_co_ allowing a more standard way to check if file need to be taken from cache or not.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf people can put the string they want_co_ any kind of uid could be used to version the 3D and/or the textures associated. That would be really usefull.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOh_co_ and now I_t_m talking about manifest_co_ I_t_m not totally sure for that but I think I_t_ve noticed several times that if we once have the .babylon cached in indexedDB and then set _lt_strong_gt__qt_enableSceneOffline_qt_ _dd_ false _lt_/strong_gt_the .babylon file is still taken from cache on not loaded from server. Could it possibly be a bug?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-12T17:10:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tPing _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5482_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/_qt_ rel_eq__qt__qt__gt_@davrous_lt_/a_gt_ who did this\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI like the idea btw\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"davrous","Date":"2017-04-13T10:27:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI need to do some testing as it used to work for the bool enableSceneOffline. Can you check using F12 that the .manifest file downloaded by the browser really has the bool set to false? It could be a cache issue. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor your idea_co_ I_t_m not sure to have understood the hash approach. Currently I_t_m using indeed an integer and if the version is different_co_ I_t_m download the complete scene file (.babylon) &amp_sm_ texture associated (based on the 2 boolean values).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor your hash idea_co_ the hash would be on the complete file itself or on the URL?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDavid\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2017-04-13T12:40:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span_gt_@davrous Forget the hash part. User will fill the value with anything he wants (hash or other data_co_ no matter). _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_The idea is just to allow the version value to be a string instead of an integer. So users will be able to manage those manifest with better efficiency (for instance by using some hash of 3D and textures files_co_ or anything else_co_ even in an automated way in continuous integration context or whatever)._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Just check the string value_co_ if new one is different from previous one_co_ simply continue with your previous behavior (download _lt_/span_gt__lt_span style_eq__qt_color_dd_#272a34_sm__qt__gt_.babylon &amp_sm_ texture associated based on the 2 boolean values)._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Gil","Date":"2017-04-14T08:13:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIf i can add something_co_ sometimes the actual manifest file isn_t_t enough to force reload.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have to be in private mode or add a string to all loaded meshes like this _dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var version _eq_ _t_?0.3.1.0_t__sm_\nassetsManager.addMeshTask(_qt_MyMesh_qt__co_ _qt__qt__co_ _qt_path/_qt__co_ _qt_mymesh.babylon_qt_ + version)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tTo force a new url to load\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"davrous","Date":"2017-04-14T12:04:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tAh you_t_re right. I_t_ve added a GUID after the .manifest URL to avoid that but didn_t_t think about the .babylon file itself. \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2017-04-14T12:19:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOh and this explains why sometimes the .babylon is still the old one even when enableSceneOffline is set to false aftewards.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd you see_co_ with string as version_co_ if the cache process is correctly managed by BJS_co_ a CI machine will be able to automaticaly set the manifest (with the hash of the .babylon file for instance) and no need then to bother manually with the manifest file! That would be awesome.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]