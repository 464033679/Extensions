[{"Owner":"ozRocker","Date":"2016-04-18T16:00:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI_t_m trying to make a multiplayer game and I_t_m struggling to even get a ball moving forward on key-press.  I can_t_t get client prediction and server reconciliation done properly.  This is because the latency from server receiving key-down instruction is different to the latency from later receiving the key-up instruction.  So on the server the ball is moving forward_co_ the server gets an instruction from client that key is released and server goes _qt_Oh sht!  That packet took so long to get here_co_ the key was released 1 minute ago.  The ball has moved too far forward!  X should be at 8_co_ but it kept moving forward because it took so long to receive the key-up instruction that its now at 11._qt_  I don_t_t know how to deal with these cases apart from shifting position when the ball stops moving.  Does anyone have an example of a Babylon.js game that handles this properly?  Every tutorial I_t_ve seen on the net only deals with single key-presses instead of key-down/key-up sequences.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2016-04-18T17:49:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWell_co_ I remember this post_dd_\n_lt_/p_gt_\n_lt_iframe data-embedcontent_eq__qt__qt_ frameborder_eq__qt_0_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/topic/6557-babylon-projects/?do_eq_embed&amp_sm_embedComment_eq_111193&amp_sm_embedDo_eq_findComment_qt__gt__lt_/iframe_gt_\n\n_lt_p_gt_\n\tNot perfect but seems to work okay for a first try. Whats your basic setup? Node.js an socket.io?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"eboo","Date":"2016-04-18T20:27:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\ti m _qt_converting_qt_ one to babylonjs. It was a sloooowww old flash game that i stop few years ago.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tmultiplayer game is possible with node.js and socket.io\n_lt_/p_gt_\n\n_lt_p_gt_\n\tyou if you try to be _qt_keypressed_qt_ responsive... you will give users the ability to spam too many broadcasts. So you will have to script an anti-spam test _lt_img alt_eq__qt__dd_P_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ title_eq__qt__dd_P_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tif you realy need this it_t_s possible_co_ and easily done with soket.io. Just send start order _qt_keydown_qt_ with a broadcast and keayup with an other one.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can complete the broadcast with start and final position (and client time).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_I would probably use an other way_dd__lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor your exemple_co_ every client could give his position every 1 seconds broadcaster to others ones and controled by server.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tclient should _qt_animate_qt_ the moves of enemies between 2 updates.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tServer side control (nodejs)_dd_ server should evaluate the move from player. is it not too fast and is it possible.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tyou can use statistic control to reduce stress (controle maybe 10 moves every 10 seconds ^^ and kill if not correct _lt_img alt_eq__qt__dd_P_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ title_eq__qt__dd_P_qt_ width_eq__qt_20_qt_ /_gt_)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tit_t_s less responsive but maybe enought to play ^^\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2016-04-19T00:18:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_125451_qt_ data-ipsquote-contentid_eq__qt_22011_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1461001754_qt_ data-ipsquote-userid_eq__qt_12304_qt_ data-ipsquote-username_eq__qt_iiceman_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t8 hours ago_co_ iiceman said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tWell_co_ I remember this post_dd_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_iframe data-embedcontent_eq__qt__qt_ frameborder_eq__qt_0_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/topic/6557-babylon-projects/?do_eq_embed&amp_sm_embedComment_eq_111193&amp_sm_embedDo_eq_findComment_qt__gt__lt_/iframe_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tNot perfect but seems to work okay for a first try. Whats your basic setup? Node.js an socket.io?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI had a look at that guys code.  He_t_s not using an authoritative server for his multiplayer game.  He_t_s sending player positions and rotations to the server_co_ instead of sending keypresses and getting the server to evaluate position and rotation.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m using a C# back-end for my socket server_co_ using the Fleck library.  Its faster and more accurate than Javascript and very easy to implement.  I_t_m using standard websockets for my Javascript client.  All that works very well.  I am doing what _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/18969-eboo/?do_eq_hovercard_qt_ data-mentionid_eq__qt_18969_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/18969-eboo/_qt_ rel_eq__qt__qt__gt_@eboo_lt_/a_gt_ is suggesting by sending when the key is pressed down and then when the key is released.  That_t_s only 2 instructions that get sent to the server.  I_t_m not sending position information because I_t_m using an authoritative server.  Since this is javascript its very easy for people to change their position and cheat so its important that only server evaluates position.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI understand prediction and latency.  The problem is when you have changing latency.  The client presses key down to walk forward then releases 10 seconds later.  So he is walking for 10 seconds.  The server will receive keypress and will start walking.  What happens is the instruction to stop walking does not arrive exactly 10 seconds later.  Sometimes it arrives 12 seconds later.  So the server has been moving the player too far forward.  It realises this when it eventually gets the key-release instruction and sees its timestamp_co_ so it has to make a correction to jump back a bit.  This is the part that I_t_m not sure how to handle.  I don_t_t want to have my player jumping back at the end of every walk.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tEdit_dd_ I have a feeling that I shouldn_t_t even be sending a timestamp_co_ because client could change that to say _qt_That key was pressed 2 minutes ago_qt_ which will make the server jump the player very far forward.  I_t_ve read somewhere that you need to continuously calculate latency and use that to determine when the event actually happened on the client\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Boz","Date":"2016-04-19T04:13:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI liked this very good article on writing multiplayer game in HTML5 _dd_ _lt_a href_eq__qt_http_dd_//webcache.googleusercontent.com/search?q_eq_cache_dd_-k_6smmA7YwJ_dd_buildnewgames.com/real-time-multiplayer+&amp_sm_cd_eq_1&amp_sm_hl_eq_en&amp_sm_ct_eq_clnk_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//webcache.googleusercontent.com/search?q_eq_cache_dd_-k_6smmA7YwJ_dd_buildnewgames.com/real-time-multiplayer+&amp_sm_cd_eq_1&amp_sm_hl_eq_en&amp_sm_ct_eq_clnk_lt_/a_gt_ (it_t_s a cached page_co_ unfortunately buildnewgames.com is down)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt uses socket.io and NodeJS. I know you use a C# server but the logic should be the same_co_ it_t_s talking about game loops_co_ client prediction_co_ interpolation..\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2016-04-19T06:18:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_125508_qt_ data-ipsquote-contentid_eq__qt_22011_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1461039228_qt_ data-ipsquote-userid_eq__qt_8472_qt_ data-ipsquote-username_eq__qt_Pouet_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ Pouet said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI liked this very good article on writing multiplayer game in HTML5 _dd_ _lt_a href_eq__qt_http_dd_//webcache.googleusercontent.com/search?q_eq_cache_dd_-k_6smmA7YwJ_dd_buildnewgames.com/real-time-multiplayer+&amp_sm_cd_eq_1&amp_sm_hl_eq_en&amp_sm_ct_eq_clnk_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//webcache.googleusercontent.com/search?q_eq_cache_dd_-k_6smmA7YwJ_dd_buildnewgames.com/real-time-multiplayer+&amp_sm_cd_eq_1&amp_sm_hl_eq_en&amp_sm_ct_eq_clnk_lt_/a_gt_ (it_t_s a cached page_co_ unfortunately buildnewgames.com is down)\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tIt uses socket.io and NodeJS. I know you use a C# server but the logic should be the same_co_ it_t_s talking about game loops_co_ client prediction_co_ interpolation..\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tYep_co_ I_t_ve read that one and all the articles mentioned in it.  They are all dealing with single key-press scenarios which is much simpler than time-based key-presses.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think I need to change my code so the client sends a key-down event with every update-loop.  This will cause net traffic (depending on how frequent the update loops are) but dealing with time-based keypressing is too inaccurate.  If a client pressed UP for 50 milliseconds they will move a little bit on their screen_co_ but if the server is waiting 500 milliseconds to get the key-release event then the server will move the player 10 times are far is he should be!  However_co_ this problem is not so bad if the player keeps finger on key for a long time\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"AutoSequence","Date":"2016-08-22T00:52:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t*bump*\n_lt_/p_gt_\n\n_lt_p_gt_\n\tozRocker_co_ I struggled with this too. What you need to do is the following_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOn a key press and hold_co_ record for instance 5 impulses. Apply them on the client side and send them to the server. However_co_ keep a small sort of cache on the clientside of this list. (This is important ill come back to this in a bit)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe server then applies these forces (5x up e.g.). It collects those too and sends them back to the client. On the client side_co_ you loop through this list and delete them in chronical order. If something does not match_co_ fix the position and forces of the client according to the server.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2016-08-22T03:21:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_140837_qt_ data-ipsquote-contentid_eq__qt_22011_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1471827177_qt_ data-ipsquote-userid_eq__qt_23051_qt_ data-ipsquote-username_eq__qt_AutoSequence_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t2 hours ago_co_ AutoSequence said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t*bump*\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tozRocker_co_ I struggled with this too. What you need to do is the following_dd_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tOn a key press and hold_co_ record for instance 5 impulses. Apply them on the client side and send them to the server. However_co_ keep a small sort of cache on the clientside of this list. (This is important ill come back to this in a bit)\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThe server then applies these forces (5x up e.g.). It collects those too and sends them back to the client. On the client side_co_ you loop through this list and delete them in chronical order. If something does not match_co_ fix the position and forces of the client according to the server.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThanks for the info.  I_t_ve managed to implement that system already.  You can see it working at _lt_a href_eq__qt_http_dd_//www.punkoffice.com/webiverse_qt_ rel_eq__qt_external nofollow_qt__gt_www.punkoffice.com/webiverse_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2016-08-22T20:11:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/12544-ozrocker/?do_eq_hovercard_qt_ data-mentionid_eq__qt_12544_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/12544-ozrocker/_qt_ rel_eq__qt__qt__gt_@ozRocker_lt_/a_gt_ -\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAll of the advice above is good. And in my opinion_co_ the best solution (and one you_t_ll be VERY happy discovering) is to use node.js as you can thread many operations and use WebsocketIO to keep connections open. Take a look at some of the existing code available for node.js and you_t_ll find everything you need. Pay close attention to _qt_rooms_qt_ as this provides discreet abilites and security. We are dynamically exchanging allot of events btween a massive number of users including the syncing of media - but there are rules as the media must exist on the server and then stream to each user to maintain sync. However the exchange of mult-user events requires 20ms to 30ms for collaborative drawing and editing of media on average through most all routing we_t_ve tested. I wish I could explain further_co_ but we_t_re under strict utility patent guidelines_co_ and can_t_t expose what we do on the server. But what you_t_re attempting is already written and you can find online.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe following is a bit dated_co_ and you can replace Express of course_co_ and jQuery might be a good fit for you_co_ but we_t_re using our own API on the server side. Once the API is up to spec and less exposed_co_ we_t_ll release_co_ but we_t_re looking at 2017.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//modernweb.com/2013/09/30/building-multiplayer-games-with-node-js-and-socket-io/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//modernweb.com/2013/09/30/building-multiplayer-games-with-node-js-and-socket-io/_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2016-08-22T23:42:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_140938_qt_ data-ipsquote-contentid_eq__qt_22011_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1471896681_qt_ data-ipsquote-userid_eq__qt_11286_qt_ data-ipsquote-username_eq__qt_dbawel_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t3 hours ago_co_ dbawel said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tHello _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/12544-ozrocker/?do_eq_hovercard_qt_ data-mentionid_eq__qt_12544_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/12544-ozrocker/_qt_ rel_eq__qt__qt__gt_@ozRocker_lt_/a_gt_ -\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tAll of the advice above is good. And in my opinion_co_ the best solution (and one you_t_ll be VERY happy discovering) is to use node.js as you can thread many operations and use WebsocketIO to keep connections open. Take a look at some of the existing code available for node.js and you_t_ll find everything you need. Pay close attention to _qt_rooms_qt_ as this provides discreet abilites and security. We are dynamically exchanging allot of events btween a massive number of users including the syncing of media - but there are rules as the media must exist on the server and then stream to each user to maintain sync. However the exchange of mult-user events requires 20ms to 30ms for collaborative drawing and editing of media on average through most all routing we_t_ve tested. I wish I could explain further_co_ but we_t_re under strict utility patent guidelines_co_ and can_t_t expose what we do on the server. But what you_t_re attempting is already written and you can find online.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThe following is a bit dated_co_ and you can replace Express of course_co_ and jQuery might be a good fit for you_co_ but we_t_re using our own API on the server side. Once the API is up to spec and less exposed_co_ we_t_ll release_co_ but we_t_re looking at 2017.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_a href_eq__qt_http_dd_//modernweb.com/2013/09/30/building-multiplayer-games-with-node-js-and-socket-io/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//modernweb.com/2013/09/30/building-multiplayer-games-with-node-js-and-socket-io/_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tDB.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThanks for the info _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/?do_eq_hovercard_qt_ data-mentionid_eq__qt_11286_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/11286-dbawel/_qt_ rel_eq__qt__qt__gt_@dbawel_lt_/a_gt_  I_t_ve already built the framework and its up and running at www.punkoffice.com/webiverse I_t_m using C# as the backend with websockets to communicate with the clients.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2016-08-23T00:22:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/12544-ozrocker/?do_eq_hovercard_qt_ data-mentionid_eq__qt_12544_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/12544-ozrocker/_qt_ rel_eq__qt__qt__gt_@ozRocker_lt_/a_gt_ - I was wondering why this topic appeared again. As you know I_t_ve been to your site and was very impressed - also to meet you in your own world. C# will serve you very well_co_ however node.js has so much flexability and code already available_co_ that I would take another look - at least in the near future - especially for threading processes and partitioning users. Once you generate your initial framework and design in node_co_ maintinence will be much easier to manage_co_ as well as adding features. I_t_m looking forward to where you take your free roaming world_co_ as I_t_ve yet to see anyone else as ambixious_co_ yet already online.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheers_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2016-08-23T00:56:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI considered nodejs and I_t_m still keeping an eye out.  I chose C# because I read that its faster with CPU intensive operations.  Also I was inspired by openSIM which is in C#.  I personally prefer C# to javascript because its a more powerful language and offers strict type system and compile-time error checks.  Its also easier to manage the growing codebase in a project that could end up quite large.  I haven_t_t come across any situations where there_t_s something I can_t_t do in C# which can only be done in nodejs.  That being said_co_ I_t_m constantly checking both technologies to see if there are any major advancements and listening to feedback from other_t_s experiences with both frameworks.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2016-08-23T01:31:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m not that familiar with _lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_line-height_dd_22.4px_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_float_dd_none_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_openSIM_co_ as it had limitations when we considered LSL/C# maybe 5 years ago. I assume for your purposes_co_ you can run what you need by a factor of 10+ for processing physics_co_ collisions_co_ etc. What you_t_re currently building is beyond my current skill set_co_ as I was using C# when it first moved into .Net. Wow_co_ I didn_t_t realize it was that long ago._lt_/span_gt__lt_img alt_eq__qt__dd_mellow_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_mellow.png_qt_ title_eq__qt__dd_mellow_dd__qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_line-height_dd_22.4px_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_float_dd_none_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_Again_co_ looking forward to watching your world grow._lt_/span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2016-08-23T01:55:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tyeh openSIM is kinda old_co_ so I can_t_t really say _qt_I need to use C# cos that_t_s how its always been done_qt_ _t_cos I realise that_t_s a bad reason to stick with a certain framework.  They_t_re probably stuck with the language they started with.  I can_t_t say for certain what the best framework is for what I_t_m trying to do so I_t_m constantly researching to find definitive answers.  I_t_m looking for clues like _qt_I HAD to switch to node.js/C# because there was no way I could_t_ve built this feature_qt_ or _qt_I used node.js/C# because the other language couldn_t_t handle the bandwidth or computations required_qt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheck these guys out _lt_a href_eq__qt_https_dd_//www.facebook.com/groups/1500317060224340/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.facebook.com/groups/1500317060224340/_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCosmos3D is a new webGL virtual world currently being built.  It has so many features it looks like an IDE.  It was initially built using the Virtual World Framework.  Its a framework using node.js and three.js that sets up websockets and 3D graphics for networked 3D scenes (apologies if you already know it).  They got pretty far with it then had to completely switch because that VWF framework couldn_t_t scale up to a large number of avatars.  I_t_m not sure what they are using now though.  They even stopped using Three.js (maybe they_t_re using Babylon.js instead?)  \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2016-08-23T11:53:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_140958_qt_ data-ipsquote-contentid_eq__qt_22011_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1471917351_qt_ data-ipsquote-userid_eq__qt_12544_qt_ data-ipsquote-username_eq__qt_ozRocker_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t9 hours ago_co_ ozRocker said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tCheck these guys out _lt_a href_eq__qt_https_dd_//www.facebook.com/groups/1500317060224340/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.facebook.com/groups/1500317060224340/_lt_/a_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tfacebook login  _lt_img alt_eq__qt__dd_angry_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_angry.png_qt_ title_eq__qt__dd_angry_dd__qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_div class_eq__qt_ipsEmbeddedVideo_qt__gt_\n\t_lt_div_gt_\n\t\t_lt_iframe allowfullscreen_eq__qt_true_qt_ frameborder_eq__qt_0_qt_ height_eq__qt_270_qt_ src_eq__qt_https_dd_//www.youtube.com/embed/FTlir3CJir8?feature_eq_oembed_qt_ width_eq__qt_480_qt__gt__lt_/iframe_gt_\n\t_lt_/div_gt_\n_lt_/div_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]