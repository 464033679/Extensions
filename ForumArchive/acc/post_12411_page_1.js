[{"Owner":"JCPalmer","Date":"2015-02-10T19:33:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I was making a scene_co_ so I could take a picture for the Doc site.  I added a mirror to emphasize the direction a mesh facing_co_ but it does not show up in it._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I made scene by taking a .blend file &amp_sm_ generating an inline source file.  No problem there_co_ but remember a mirror has to be added post Blender.  Added this to my html_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var mirrorMaterial _eq_ new BABYLON.StandardMaterial(_qt_mirrorMat_qt__co_ scene)_sm_mirrorMaterial.reflectionTexture _eq_ new BABYLON.MirrorTexture(_qt_mirrorTex_qt__co_ 1024_co_ scene_co_ true)_sm_mirrorMaterial.reflectionTexture.mirrorPlane _eq_ scene.getMeshByID(_qt_Mirror_qt_)_sm_mirrorMaterial.reflectionTexture.renderList _eq_ [scene.getMeshByID(_qt_Gus_qt_)]_sm__lt_/pre_gt__lt_p_gt_I verified that Meshes _qt_Mirror_qt_ &amp_sm_ _qt_Gus_qt__co_ exist from console.log messages.  Any thoughts?  Light issues_co_ maybe?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here is scene with arc rotate camera.  You can see mesh for mirror is a plane.  With no backside culling left on_co_ it disappears when behind it._lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//googledrive.com/host/0B6-s6ZjHyEwUflhfdFFnNGJQXzc1U3I4YjZ5b1FMWW16ZHNWd2JVbE9abTRDN2tEWWgwclk_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//googledrive.com/host/0B6-s6ZjHyEwUflhfdFFnNGJQXzc1U3I4YjZ5b1FMWW16ZHNWd2JVbE9abTRDN2tEWWgwclk_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2015-02-10T20:00:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey JC_co_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You have to attach your material to a mesh_co_ like this _dd_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_scene.getMeshByName(_qt_meshName_qt_).material _eq_ mirrorMaterial_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-02-10T20:17:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You are also defining a wrong mirror plane - it should be a plane and not a mesh._lt_/p_gt__lt_p_gt_Something like this (depending on your plane_t_s location)_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_material.reflectionTexture.mirrorPlane _eq_ new BABYLON.Plane(0_co_0_co_1_co_-10)_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-02-10T23:07:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks_co_ both were problems.  dbawel also got my values for the plane working_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here is the final html code_co_ for future searches_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_// get the render list for the Mirrorvar gus _eq_ scene.getMeshByID(_qt_Gus_qt_)_sm_var renderList _eq_ gus.getChildren()_sm_renderList.push(gus)_sm_var mirrorMaterial _eq_ new BABYLON.StandardMaterial(_qt_mirrorMat_qt__co_ scene)_sm_mirrorMaterial.diffuseColor  _eq_ new BABYLON.Color3(0.1_co_0.1_co_0.1)_sm_mirrorMaterial.emissiveColor _eq_ new BABYLON.Color3(0.1_co_0.1_co_0.1)_sm_mirrorMaterial.reflectionTexture _eq_ new BABYLON.MirrorTexture(_qt_mirrorTex_qt__co_ 4096_co_ scene_co_ true)_sm_mirrorMaterial.reflectionTexture.mirrorPlane _eq_ new BABYLON.Plane(0_co_0_co_-1_co_-6)_sm_mirrorMaterial.reflectionTexture.renderList _eq_ renderList_sm_scene.getMeshByID(_qt_Mirror_qt_).material _eq_ mirrorMaterial_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-02-10T23:59:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The 4th value for the mirrorPlane is the distance from the reflected object where the reflection appears to occur.  Also_co_ I would change the 3rd value for your mirrorPlane from 1 to -1_co_ as this should correct your reflection angle so that your objects appear to be reflected correctly.  I_t_ll look at the documentation pages and see if there is a page yet created to post all 4 of these parameters_co_ as it took me quite a while to guess (figure out by trial) what all 4 of these values represented before I got it right._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-02-11T07:27:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I had hard time with planes as well_co_ and eventually ended up using this code (modified from a few sources I found here in the forum)_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var pointsArray_dd_ Array&lt_sm_BABYLON.Vector3&gt_sm_ _eq_ []_sm_var meshWorldMatrix _eq_ mesh.computeWorldMatrix()_sm_var verticesPosition _eq_ mesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm_var offset _eq_ 0for (var i _eq_ 0_sm_ i &lt_sm_ 3_sm_ i++) {    var v _eq_ this._object.getIndices()[i + offset]_sm_    pointsArray.push(BABYLON.Vector3.TransformCoordinates(BABYLON.Vector3.FromArray(verticesPosition_co_ v*3)_co_ meshWorldMatrix))_sm_}var plane _eq_ BABYLON.Plane.FromPoints(pointsArray[0]_co_ pointsArray[1]_co_ pointsArray[2])_sm__lt_/pre_gt__lt_p_gt_This will take the first two vertices of the mesh and calculate the plane for them. works great for Ground and normal Planes. If you know the vertices you want to use or their offset you can set the offset parameter._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-02-11T14:35:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_71461_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_12411_qt_ data-ipsquote-username_eq__qt_dbawel_qt_ data-cite_eq__qt_dbawel_qt_ data-ipsquote-timestamp_eq__qt_1423612787_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_The 4th value for the mirrorPlane is the distance from the reflected object where the reflection appears to occur.  Also_co_ I would change the 3rd value for your mirrorPlane from 1 to -1_co_ as this should correct your reflection angle so that your objects appear to be reflected correctly.  I_t_ll look at the documentation pages and see if there is a page yet created to post all 4 of these parameters_co_ as it took me quite a while to guess (figure out by trial) what all 4 of these values represented before I got it right._lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_Thanks_co_  very usable now with the sign change on 3rd arg.  Just need to clean up_dd__lt_/p_gt__lt_ul_gt__lt_li_gt_put back the ground_co_ &amp_sm_ reduce the size of the mirror_lt_/li_gt__lt_li_gt_move the mirror back more_co_ so the _qt_Forward_qt_ sign has more room_co__lt_/li_gt__lt_li_gt_change lighting maybe to give mirror a more shiny appearance._lt_/li_gt__lt_li_gt_Enhance reflection by putting the text _qt_Eat Me_qt_ across the gingerbread man’s chest._lt_/li_gt__lt_/ul_gt__lt_p_gt_As far as the distance being the fourth arg_co_ I noticed changing it made the size of the reflection change.  The minus sign is a little perplexing.  Is that because the reflection is _qt_into_qt_ the mirror?  (Rhetorical_co_  I_t_ll just guess till I like it)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_RaananW_co_  that sounds like it would be a good method for BABYLON.Mesh_dd_ _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt__lt_strong_gt_ public getPlane() _dd_ Plane_lt_/strong_gt__lt_/span_gt_.  Would give strange results from non-plane meshes unfortunately.  I am kind of a OO zealot.  I would have created sub-classes of all those static Mesh.createXXX() methods.  Then you could add methods like this which made sense to them_co_ but not all meshes.  That_t_s just me though._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Will _qt_reflect_qt_ this in the best answer &amp_sm_ update scene when done._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-02-11T14:41:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yep_co_ that would be _lt_/p_gt__lt_p_gt_getTransformedPlaneOfFirstTwoVertices()  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_The problem really is_co_ that a normal user doesn_t_t really know what vertices to choose (I know I wouldn_t_t). For a GroundMesh - there is only one plane. for the box there are 6_co_ but who knows which vertices are which... not even starting to talk about a sphere  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_I have integrate this function in the material editor. You can divide the box to 6 submeshes and make all 6 planes a mirror. But if i make the box_t_s reflection texture a mirror without sub-meshing it doesn_t_t really work._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-02-11T14:51:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt_The problem really is_co_ that a normal user doesn_t_t really know what vertices to choose (I know I wouldn_t_t). For a GroundMesh - there is only one plane. for the box there are 6_co_ but who knows which vertices are which... not even starting to talk about a sphere  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_p_gt_ _lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This is what I suggested here _dd_ _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/12118-new-kind-of-submeshes-suggestion-meshparts/?hl_eq_part_qt__gt_http_dd_//www.html5gamedevs.com/topic/12118-new-kind-of-submeshes-suggestion-meshparts/?hl_eq_part_lt_/a_gt__lt_/p_gt__lt_p_gt_Give the user the way to access some logical part of a mesh without dealing with vertex indexes._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Maybe I_t_ll do it later as an extension for ribbons and other BJS basic shapes _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_cube.getPart(0)_sm_                        // returns the first face as a submesh or vertexData (to be thought)sphere.getPart(29)_sm_                     // returns the 30th ringcylinder.getPart(2)_sm_                    // idem_co_ 3rd ringtorus.getPart(15)_sm_                      // returns the 16th radial ringribbon.getPart(5)_sm_                      // returns the 6th elementary ribbon_lt_/pre_gt__lt_p_gt_etc_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-02-11T14:58:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Sorry_co_ couldn_t_t read this one  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  My french is a bit rusty..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The question is_co_ what can you do with it? And what is the meaning of getPart in a more complex mesh? _lt_/p_gt__lt_p_gt_A developer that requires this would be able to create (for example) 6 submeshes_co_ equal in size for the box_co_ and create his own _qt_getPart_qt_ function._lt_/p_gt__lt_p_gt_This could be very confusing if it will be added to the standard mesh. Maybe to a sub class of a mesh_co_ soemthing like structuredMesh. But I still can_t_t find use cases for it. This mirror thing - I hope no one is planning on creating multiple boxes with mirror textures_co_ as this will be a serious performance killer _dd_-)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-02-11T15:07:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Though Planes are used in other places_co_  maybe a MirrorTexture method_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_setPlaneFromRenderList(targetForMat _dd_ Mesh_co_ distance _dd_ number) _dd_ void_sm__lt_/pre_gt__lt_p_gt_I do not know how to do this_co_ but given the position of the target mesh for the material_co_ might make it easier to use this texture.  Not sure about when RenderList has more than 1 item_co_ or even if it need be consulted._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-02-11T15:28:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@RaananW_lt_/p_gt__lt_p_gt_Sorry_co_ I forgot it was written in french._lt_/p_gt__lt_p_gt_In my idea_co_ the parts were defined arbitrary by the mesh developer (not the BJS user)._lt_/p_gt__lt_p_gt_There are here two different roles in the rest of the post _dd__lt_/p_gt__lt_ul_gt__lt_li_gt_the _lt_em_gt_developer_lt_/em_gt_ implementing a basic/complex shape in the API_co__lt_/li_gt__lt_li_gt_the _lt_em_gt_BJS user_lt_/em_gt__co_ using the API for its own purposes in its own code._lt_/li_gt__lt_/ul_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Ex _dd_ I_t_m a the developer._lt_/p_gt__lt_p_gt_I implement an algo to construct_co_ say_co_ a torus knot as a basic shape for other users._lt_/p_gt__lt_p_gt_Only I know how vertices are ordered by my algo_co_ ok ?_lt_/p_gt__lt_p_gt_So when iterating along my mesh construction_co_ why not refer groups of vertices (_lt_em_gt_parts_lt_/em_gt_) which have a logical sense together _dd_ faces_co_ rings_co_ etc._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Then propose a direct access to these _lt_em_gt_parts_lt_/em_gt_ to BJS users ._lt_/p_gt__lt_p_gt__lt_em_gt_getPart()_lt_/em_gt_ would be implemented by the developer here._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It would be easier to set different material to a given mesh imho for example._lt_/p_gt__lt_p_gt_As a _lt_em_gt_BJS user _lt_/em_gt_now_co_ I wouldn_t_t have to retrieve what vertices and how many to handle a face_co_ a ring (a type of part predifined by the mesh _lt_em_gt_developer_lt_/em_gt_)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Sorry for drifting away_co_ it was not about mirrors_co_ but only about the question _qt_how to know what vertices to access_qt_ on a given mesh._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_anyway_co_ forget it_co_ DK prefers good mesh documentation (cube _dd_ face1 _eq_ vertices[0..5]_co_ face2 _eq_ vertices[6 ..9]_co_ etc)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_maybe I_t_ll do it as an extension... after having read each basic shape construction code _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-02-11T18:50:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Bump.  Link &amp_sm_ best answer updated_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-02-11T19:59:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yep_co_ would make sense for the MirrorTexture..._lt_/p_gt__lt_p_gt_I_t_ll think of a way to integrate it and suggest DK a new function._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@Jerome - I think this is a great idea_co_ but it is hard to implement it in the general mesh _dd_-)_lt_/p_gt__lt_p_gt_I wouldn_t_t use _qt_face_qt_ though_co_ as this has a difference meaning in many kind of meshes (and .obj file for example uses _qt_faces_qt_ to describe the triangles that are created using three vertices/normals/uvs)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-02-11T20:06:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_yep_lt_/p_gt__lt_p_gt__qt_face_qt_ (in general meaning_co_ not 3D design triangles) makes sense only for a cube_lt_/p_gt__lt_p_gt__qt_ring_qt_ for a cylinder_co_ or anything constructed with... rings. Have the sphere mesh wireframed_co_ you_t_ll see the algo uses kind of rings._lt_/p_gt__lt_p_gt_etc_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_My idea was about logical parts (arbitrary chosen by the mesh developer).  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_Not mandatory in the general mesh..._lt_/p_gt__lt_p_gt_Rather a kind of optional interface (an array of submeshes or vertexData or...I don_t_t know  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ ) each mesh could implement (or not)._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-02-11T21:51:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_On 11 Feb. 2015 6_dd_35am_co_ JCPalmer wrote_dd__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-size_dd_14px_sm__qt__gt__lt_strong_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_As far as the distance being the fourth arg_co_ I noticed changing it made the size of the reflection change.  The minus sign is a little perplexing.  Is that because the reflection is _qt_into_qt_ the mirror?  (Rhetorical_co_  I_t_ll just guess till I like it)_lt_/span_gt__lt_/strong_gt__lt_/span_gt__lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_First of all_co_ in your post I like the _qt_Eat Me_qt_ element - which is of course essential to your scene. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_laugh.png_qt_ alt_eq__qt__dd_lol_dd__qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Yes_co_ the fourth argument is basically a symmetry setting globally for all reflected objects in your relection list_co_ and the size of all reflections on the plane should appear to become larger as the whole number value (in the 4th arg) approaches 0.0_co_ and until each reflection appears in the same position and the same size as their respective reflected object (no reflections displayed at a value of 0.)  Thus reflections will appear smaller as the whole # value moves further away from 0.0 once a reflection is displayed using a positive or negative number value.  A value of 0_co_ and values greater or less than 0.0 will show no reflections at all - depending on the orientation of your reflection plane - and if this isn_t_t fully clear_co_ a positive value used in the 4th argument applied to_lt_strong_gt_ your specific scene_lt_/strong_gt_ will produce no reflections at all - based wholly on the specific orientation of the relection plane you created.  _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And if you_t_re not yet or fully familiar with the first 3 arguments in creating the new reflection plane_co_ they represent the position and angle of all object_t_s reflections - depending on the orientation of the reflection plane you_t_ve created.  These first 3 arguments need to be dramatically different if you are reflecting on global (x_co_ z) vs. global (x_co_ y) vs. global (y_co_ z)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_These 4 arguments baffled me for some time_co_ until I experimented in the Playground - but it_t_s far more difficult to explain than I thought._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Cheers_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_DBawel_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-02-11T22:39:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_My short-cut thought for the 1st 3 was they represent a direction.  Take the normal of a vertex of the Mesh plane it is going to be the material for &amp_sm_ multiple by -1 (cause it is a reflection)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Your description is likely more accurate_co_ but if mine is always right_co_ a lot easier to deal with._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The 4th is a size_co_ no short-cut_co_ other than _qt_it_t_s a f**ked up inverted size with a sign dependent on stuff_qt_._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-02-12T00:32:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You _lt_strong_gt__lt_em_gt_are_lt_/em_gt__lt_/strong_gt_ quite correct - the first 3 arguments do represent direction_sm_ and the values are also multipliers_co_ as I have used values greater than 1.0_co_ and less than 0.0 and -1.0.  The first 3 arguments for the _lt_span_gt_mirrorPlane attribute _lt_/span_gt_represent (x_co_y_co_z) locally_co_ and using values greater than 1.0 and less than -1.0 provide additional offset in how the renderer computes normals_sm_ beyond the object in which the StandardMaterial is attached.  I have often thought about using _lt_strong_gt_all_lt_/strong_gt_ 4 arguments to more _qt_simply_qt_ simulate some non-standard_co_ non-uniform lenses and materials_co_ and will put some time into this soon.  Thanks for opening this thread_co_ as I hope no one else will have to spend the time it took me to understand how this works for such an essential _qt_shader_qt_ as reflection._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ll soon begin creating Documentation on dimensional space and dimentional math relative to BJS on the documentation site_co_ and I_t_ll certainly add this to that area of the documentation._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-02-12T14:59:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_My conversations turn into code a very high % of the time.  I do not know if the test to flip the sign of the 4th arg negative is right_co_ just a guess.  Should be some multiplier arg to allow normals to be &gt_sm_ than 1_co_ in this case?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Recommended method to add to MirrorTexture_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_        /**         * Build the mirrorPlane for the texture_co_ based on where the texture is going to be applied         * @param {BABYLON.Mesh} intendedMesh - Mesh applying texture (should be a Plane)         * @param {number} projectionDistance - How far meshes should appear to be from the mirror.           * The lower the value_co_ the larger they will appear.  Must be &gt_sm_ 0.         */        public defineLense(intendedMesh _dd_ BABYLON.Mesh_co_ projectionDistance _dd_ number) _dd_ void{            var normals _eq_ intendedMesh.getVerticesData(VertexBuffer.NormalKind)_sm_            // change the sign of the normal_co_ since the image is coming the direction opposite the mesh            this.mirrorPlane.normal.x _eq_ -1 * normals[0]_sm_            this.mirrorPlane.normal.y _eq_ -1 * normals[1]_sm_            this.mirrorPlane.normal.z _eq_ -1 * normals[2]_sm_                                    // need to change the sign of projectionDistance_co_ when normal.z is negative            if (this.mirrorPlane.normal.z &lt_sm_ 0) projectionDistance *_eq_ -1_sm_                        this.mirrorPlane.d _eq_ projectionDistance_sm_        }_lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-02-14T04:21:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_For myself_co_ without additional code I cannot determine an answer to your question.  As for reflection plane normals_co_ any value other than 1.0 or -1.0 will display results as an offset in firing linear z rays from the camera_t_s position and orientation - to fire off of the reflection plane and the object in which it is attached (which also determines camera distance to reflection plane.)  But if you_t_re speaking to the remark in the above code concerning projectionDistance_co_ and setting a value for this arg. (4th arg. in babylon relection planes)_co_ you_t_ll find that a reflection will oly be displayed for _lt_em_gt__lt_strong_gt_either_lt_/strong_gt_ _lt_/em_gt_a value of &gt_sm_0 or &lt_sm_0 and _lt_em_gt__lt_strong_gt_never_lt_/strong_gt__lt_/em_gt_ both_sm_ which is a determination of the orientation of your reflection plane and the postion and orientation of the active scene camera.  I hope I undestood the question.  Cheers._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]