[{"Owner":"SpaceToast","Date":"2017-11-09T17:38:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey crew. I_t_ve run up against trouble trying to move the vertices of an imported mesh. (So far I_t_ve tried a .babylon file and .glb.) \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere_t_s a_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#6MZV8R%2354_qt_ rel_eq__qt_external nofollow_qt__gt_ Playground example_lt_/a_gt_ where I_t_ve added a randomize-vertex-positions function to the  glTF Importer (Boombox) example. Upon loading the scene file_co_ we do this_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_        //Add a _qt_do this once the mesh loads_qt_ function to the example_dd_\n        var bb _eq_ scene.getMeshByName(_qt_BoomBox_qt_)_sm_ //Get the newly-loaded mesh\n        bb.updateable _eq_ true_sm_ //Not clear if this does anything\n    \tvar positions _eq_ bb.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm_ //Copy the mesh_t_s vertex positions into an array\n        var numberOfVertices _eq_ positions.length/3_sm_\t//Randomize the vertex coordinates in the array\n        for(var i _eq_ 0_sm_ i&lt_sm_numberOfVertices_sm_ i++) {\n            positions[i*3] _eq_ Math.random()*5_sm_\n            positions[i*3+1] _eq_ Math.random()*5_sm_\n            positions[i*3+2] _eq_ Math.random()*5_sm_\n        }_sm_\n        var positionFunction _eq_ function() { //Create a function for updateMeshPositions to call...\n            bb.updateVerticesData(BABYLON.VertexBuffer.PositionKind_co_ positions)_sm_ //...where we replace the old vertex data with our array\n        }_sm_\n        bb.updateMeshPositions(positionFunction_co_ true)_sm_ //Call that updateMeshPositions function\n        //And... nothing happens. The boombox remains as it was at import._lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tNo change. Any thoughts on what I might be doing wrong?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-11-09T18:54:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello here is your fix_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#6MZV8R%2355_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#6MZV8R#55_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHope this helps _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"SpaceToast","Date":"2017-11-09T19:54:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tVery elegant! Is it possible to replace all of the existing vertex positions in a single copy operation_co_ like _lt_strong_gt_existingVertices _eq_ newPositionArray_sm__lt_/strong_gt_ or would I always need to loop through the vertex array replacing values one by one?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-11-10T17:33:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tnope you can replace in one call if you have the data ready _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"SpaceToast","Date":"2017-11-10T19:40:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHmm. Might be a bug. In Chrome and Firefox_co_ at least_co_ only editing the values of the position array _lt_em_gt_in situ_lt_/em_gt_ appears to work.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRegardless_co_ for anyone using this thread for future reference_co_ you_t_ll need to take the following steps to alter an imported mesh. (Here_t_s a _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#6MZV8R%2356_qt_ rel_eq__qt_external nofollow_qt__gt_working playground_lt_/a_gt_ to follow along.)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tKosh (All Kosh?) Thanks again!\n_lt_/p_gt_\n\n_lt_ol_gt__lt_li_gt_\n\t\tRip out the mesh_t_s vertex position data &amp_sm_ stuff it back in_co_ with updateable set to _lt_strong_gt_true_lt_/strong_gt__dd_\n\n\t\t_lt_pre_gt_\n_lt_code_gt_var pos _eq_ bb.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm_\nbb.setVerticesData(BABYLON.VertexBuffer.PositionKind_co_ pos_co_ true)_sm__lt_/code_gt__lt_/pre_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tRip out the mesh_t_s vertex normals &amp_sm_ stuff them back in_co_ with updateable set to _lt_strong_gt_true_lt_/strong_gt__dd_\n\t\t_lt_pre_gt_\n_lt_code_gt_var nm _eq_ bb.getVerticesData(BABYLON.VertexBuffer.NormalKind)_sm_\nbb.setVerticesData(BABYLON.VertexBuffer.NormalKind_co_ nm_co_ true)_sm__lt_/code_gt__lt_/pre_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tCall updateMeshPositions() on the mesh_dd_\n\t\t_lt_pre_gt_\n_lt_code_gt_bb.updateMeshPositions(positionFunction_co_ true)_sm__lt_/code_gt__lt_/pre_gt_\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tCreate a function to edit the vertex positions_co_ for updateMeshPositions() to trigger. Note that updateMeshPositions() automatically passes the vertex position array of the mesh that calls it as an argument to your position function_dd_\n\t_lt_/li_gt_\n_lt_/ol_gt__lt_pre_gt_\n_lt_code_gt_var positionFunction _eq_ function(positions) {\n   var numberOfVertices _eq_ positions.length/3_sm_\n   for (var i _eq_ 0_sm_ i &lt_sm_ numberOfVertices_sm_ i++) {\n      positions[i*3] _eq_ Math.random()_sm_\n      positions[i*3+1] _eq_ Math.random()_sm_\n      positions[i*3+2] _eq_ Math.random()_sm_\n   }_sm_\n}_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-11-10T21:03:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJust call setVertexdata when you want to set a mesh to arbitrary data_co_ instead of updateMeshPositions &amp_sm_ all that un-neccessary stuff.  See _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#6MZV8R%2358_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#6MZV8R#58_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"SpaceToast","Date":"2017-11-13T16:49:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThanks_co_ JC. _lt_s_gt_In other words--to surface the lede from your code--you can replace vertex data directly with _lt_strong_gt_object.setVerticesData()_lt_/strong_gt__co_ but only if your new data is in an [explicitly created] _lt_strong_gt_Float32_lt_/strong_gt_ array._lt_/s_gt_ Is there any advantage to using an _lt_strong_gt_object.setVerticesData()_lt_/strong_gt_ function?\n_lt_/p_gt_\n\n\t\t\t\n\t\t\t\t\n\n_lt_span class_eq__t_ipsType_reset ipsType_medium ipsType_light_t_ data-excludequote_gt_\n\t_lt_strong_gt_Edited _lt_time datetime_eq__t_2017-11-13T21_dd_11_dd_03Z_t_ title_eq__t_11/13/2017 09_dd_11  PM_t_ data-short_eq__t_1 yr_t__gt_November 13_co_ 2017_lt_/time_gt_ by SpaceToast_lt_/strong_gt_\n\t\n\t\t_lt_br_gt_Wrong\n\t\n\t\n_lt_/span_gt_\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Gijs","Date":"2017-11-13T17:03:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/14946-spacetoast/?do_eq_hovercard_qt_ data-mentionid_eq__qt_14946_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/14946-spacetoast/_qt_ rel_eq__qt__qt__gt_@SpaceToast_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you hover over the setVerticesData function in the playground_co_ you will see that the data can be either a number array or a Float32 array\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-11-13T17:49:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tsetVerticesData() just does it.  updateMeshPositions()  must be calling it.  If there is an advantage it is you are not limited to position data.  you can do normals_co_ UVs_co_ vertexcolors_co_ bone indexes &amp_sm_ weights.  Yes _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/22401-gijs/?do_eq_hovercard_qt_ data-mentionid_eq__qt_22401_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/22401-gijs/_qt_ rel_eq__qt__qt__gt_@Gijs_lt_/a_gt_ float32Array is NOT required.  However_co_ if you pass a number array_co_ somewhere along the line it is going to have to be copied to a Float32Array before it can be sent to the GPU.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"SpaceToast","Date":"2017-11-13T18:20:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tAppreciate the help_co_ crew. (And yeah_co_ my Float32 conclusion came from a coding typo on my part!) What I_t_m really trying to do is map out the _qt_gotchas_qt_ around editing vertex data in bjs. What I_t_m mostly finding is that the better-documented _lt_strong_gt_updateMeshPositions()_lt_/strong_gt_ method is rather delicate and unnecessarily complex--at least in my specific case of using a webworker to generate the new vertex arrays. Possibly in most cases.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-11-13T18:26:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI won_t_t say _lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_unnecessarily_lt_span_gt_ _lt_/span_gt__lt_/span_gt_complex _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ It is designed to help updating positions (when the buffer is updatable which is your issue here) and most important it will also rebuild the normals for you\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"SpaceToast","Date":"2017-11-13T21:09:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAhh! Good point_co_ Kosh. _lt_strong_gt_Object.setVerticesData()_lt_/strong_gt_ does not _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#4H25BK%231_qt_ rel_eq__qt_external nofollow_qt__gt_update normals_lt_/a_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUnless that_t_s desirable (or you_t_re also creating a normals array manually)_co_ _lt_strong_gt_object.updateMeshPositions()_lt_/strong_gt_ may still be the best way to go. I_t_ll leave my _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/33907-altering-the-vertices-of-an-imported-mesh/?tab_eq_comments#comment-194641_qt_ rel_eq__qt__qt__gt_four-step answer_lt_/a_gt_ alone.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-11-13T22:40:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tsetVerticesData() can set ANY type of geometry.  You just need to set the first argument to the type you wish. _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#4H25BK%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#4H25BK#2_lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]