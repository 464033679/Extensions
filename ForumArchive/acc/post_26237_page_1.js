[{"Owner":"re_evolutn","Date":"2016-11-06T19:40:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi there_co_ I_t_m in the middle of creating a website that works with multiple control inputs including a virtual cursor for VR using VRDeviceOrientationFreeCamera. The method I_t_m currently using is a bit of a hack i think._lt_br /_gt_\n\tI_t_ve created a long cylinder and attached it to the camera which i use to check for collisions and then fire the same functions I have in OnPointerOverTrigger_co_ OnPointerOutTrigger .etc... \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs this the best solution or is there a way to simulate a mouse pointer that is attached to a camera?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tcheers_co_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-11-08T17:38:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHiya _lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/24311-re_evolutn/?do_eq_hovercard_qt_ data-mentionid_eq__qt_24311_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/24311-re_evolutn/_qt_ rel_eq__qt__qt__gt_@re_evolutn_lt_/a_gt__co_ welcome to the forum!  _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_I tried a _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/playground?q_eq_crosshair&amp_sm_page_eq_1&amp_sm_max_eq_97_qt_ rel_eq__qt_external nofollow_qt__gt_playground search for _qt_crosshair_qt__lt_/a_gt_ and I found _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2GQ27P%232_qt_ rel_eq__qt_external nofollow_qt__gt_this playground_lt_/a_gt_._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_It uses a plane for a crosshair_co_ and it seems to have mouseOver working... using a picking ray._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Perhaps you can use this method.  Hope this helps_co_ and again_co_ welcome._lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"re_evolutn","Date":"2016-11-08T22:12:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThat works perfectly_co_ thanks Wingnut. Your searchfoo is much better than mine _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-11-08T22:44:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMy pleasure.  I_t_d like to pass a _qt_thanks_qt_ to the original coder of that playground_co_ whomever he/she be.  It works great.  BJS picking rays work great.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRays are pretty good at getting distances.  I wonder if they could be used as a 3D scanner of mesh?  We have that skull model thing...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#LNEX4_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#LNEX4_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(allow some time for skull model to load)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI wonder... if _qt_sweeping_qt_ a pickingRay across the surface of the skull... is possible.  As we sweep_co_ we gather distance data into a buffer_co_ and then use that buffer as a heightMap or displaceMap.  Weird.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSorry_co_ I wandered-off_co_ mentally_co_ for a moment.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"re_evolutn","Date":"2016-11-10T00:31:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tWould you also use pickingRay to read the RGB value of the current mesh? (the inside of a sphere with a texture for example) - could be useful to translate into something like a temperature readout on that texture.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-11-10T16:18:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi again!  That_t_s a great question/topic!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#11WQKN%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#11WQKN#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere_co_ even though I have no texture on the _qt_wall_qt_ (the target)_co_ line 33 is reporting pickingInfo.textureCoordinates to console.  The numbers are the fractional distance between 0_co_ 0 in the lower left corner... and 1_co_1 in the upper right corner (of the no-texture texture on the wall plane) (huh?).  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tProgrammers can easily convert those numbers to _qt_percentage of up-ness_qt_ and _qt_percentage of right-ness_qt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI didn_t_t even go _lt_em_gt_that_lt_/em_gt_ far.  I just sent the raw coordinates to the console. (I_t_m lazy)  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYour question is _lt_strong_gt_so_lt_/strong_gt_ good_co_ it should probably be a new forum topic.  Possibly titled...  _t_Eyedropper - Get color under picked point_t_. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you DO start this new topic_co_ possibly include _t_eyedropper_t_ and _t_colorUnderPointer_t_ as tags_co_ if you please.  I searched forum and playgrounds... finding no information about this.  It is a worthy subject to discuss further_co_ probably in a separate thread.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPOSSIBLY... the way to do this... is create a renderTargetTexture (rtt) from the current camera view.  RTT_t_s are like a camera view... that can be used as a texture.  For example_co_ below is a playground with 4 RTT_t_s from 4 different cameras.... textured onto 4 planes... that are parented to the camera (so they stay in the same place).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1WROZH%236_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1WROZH#6_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI know only one way to get RGB data from an image/texture.  Paint/Put the image (our RTT) into a context2D canvas_co_ and then use the context2D_t_s _lt_a href_eq__qt_https_dd_//www.w3.org/TR/2014/CR-2dcontext-20140821/#pixel-manipulation_qt_ rel_eq__qt_external nofollow_qt__gt_pixel manipulation features_lt_/a_gt_.  The _lt_a href_eq__qt_https_dd_//www.w3.org/TR/2014/CR-2dcontext-20140821/#dom-context-2d-getimagedata_qt_ rel_eq__qt_external nofollow_qt__gt_getImageData_lt_/a_gt_ function allows us to retrieve _lt_a href_eq__qt_https_dd_//www.w3.org/TR/2dcontext/#imagedata_qt_ rel_eq__qt_external nofollow_qt__gt_imageData.data_lt_/a_gt_ from a (tiny) rectangular area.  We would want to position that tiny rectangular area... a certain distance upward and right-ward... into the canvas.   Hey_co_ we HAVE up-ness (Y-amount) and right-ness (X-amount) values... from our pickingInfo.textureCoordinates_co_ yes?  I see hope!  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Note_dd__lt_/strong_gt_ When I mention _qt_canvas_qt_ above and below_co_ I do NOT mean the renderCanvas for the entire scene.  I mean a separate HTML canvas where we _qt_put_qt_ a renderTargetTexture (RTT) gotten from our primary camera.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf we CAN get imageData.data from the tiny rectangle... which is position X/Y into the context2D canvas... then perhaps we will be farting through silk (pardon my Klingon dialect).  We could be successful with our _qt_eyedropper_qt_ color getter.  According to some document somewhere... imageData.data contains _qt_a Uint8ClampedArray representing a one-dimensional array containing color data in RGBA order_co_ with integer values between _lt_code_gt_0_lt_/code_gt_ and _lt_code_gt_255_lt_/code_gt_ (inclusive)._qt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSounds like something usable_co_ eh?  What a complicated procedure_co_ though.  erf.  Let_t_s wait for more comments_co_ and then perhaps start a new topic about this... a bit later.  Does that sound like a good plan?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]