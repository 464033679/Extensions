[{"Owner":"Metalx1000","Date":"2014-06-11T13:52:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m currently working on a game_co__lt_br_gt_Playable here_dd__lt_br_gt__lt_a href_eq__qt_http_dd_//filmsbykris.com/scripts/metal_bullets_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//filmsbykris.com/scripts/metal_bullets_lt_/a_gt__lt_br_gt_Code Here_dd__lt_br_gt__lt_a href_eq__qt_https_dd_//github.com/metalx1000/metal_bullets/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/metalx1000/metal_bullets/_lt_/a_gt__lt_br_gt__lt_br_gt_Right now I_t_m using intersectsMesh to check for collisions._lt_/p_gt__lt_p_gt_I have two questions._lt_br_gt__lt_br_gt_1) Is there a better way to do this?_lt_br_gt__lt_br_gt_2) Can you check if an object intersects another without having to check them all?_lt_br_gt__lt_br_gt__lt_br_gt_Here is my current code for enemy collisions._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_                for(var i_eq_0_sm_i&lt_sm_Obstacles.length_sm_i++){                    var obs _eq_ Obstacles[i]_sm_                    //console.log(wall.name + _qt_ is _qt_ + this.mesh.intersectsMesh(wall))_sm_                    var col _eq_ this.check_collision(obs)_sm_                    if(col){break_sm_}                }_lt_/pre_gt__lt_p_gt_Every time an enemy is updated/moves_co_ I check it against ever object in the _qt_Obstacles_qt_ array (which is an array with all meshes that are obstacles for enemies)._lt_br_gt_I use the Obstacles array_co_ that I created_co_ so that I don_t_t have to check every mesh in the scene_co_ but it still seems like there should be a better way_co_ because this is a lot of checking over and over again._lt_/p_gt__lt_p_gt_I_t_m hoping there is a way to have it check if it_t_s intersecting anything and then just check what that object is and if it_t_s in the Obstacles array._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Early on I tried using Cannon.js for this_co_ but I had issues.  Things like_co_ if I apply physics to a wall_co_ and that wall touched another wall_co_ they would fly apart and hit other walls_co_ and basically destroy the level.  Also having a bunch of meshes with physics really slowed down the performance.  But_co_ maybe I_t_m just using it wrong._lt_/p_gt__lt_p_gt_Thanks in advance for any help._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-06-11T15:54:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You can use octrees for that_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/wiki/Optimizing-performances-with-octrees_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/wiki/Optimizing-performances-with-octrees_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_(Scene octree in this case)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You can also speedup your tests by first checking against bounding box before checking against the mesh itself_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Metalx1000","Date":"2014-06-11T17:54:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_42348_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_7093_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1402502070_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_You can use octrees for that_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/wiki/Optimizing-performances-with-octrees_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/wiki/Optimizing-performances-with-octrees_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_(Scene octree in this case)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You can also speedup your tests by first checking against bounding box before checking against the mesh itself_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_Thanks again DeltaKosh_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]