[{"Owner":"Gwir","Date":"2016-08-24T14:48:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI need to verify the overlap of two meshes_co_ specifically the offsets of position rotation and scaling.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy current solution is to check the worldMatrix of both meshes and it works good for position and scaling offsets. Since I rotate meshes with Mesh.rotate() method_co_ i have no way to get the rotation offset.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd even if I get those values_co_ meshes could be perfectly overlapped even if they have different roration values (a box for example).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs it possible to check meshes overlap or am I missing something?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-08-24T23:13:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/21863-gwir/?do_eq_hovercard_qt_ data-mentionid_eq__qt_21863_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/21863-gwir/_qt_ rel_eq__qt__qt__gt_@Gwir_lt_/a_gt__co_ good to see you again.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny chance you could make a playground scene... showing the issue?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ you might want to check out _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/?10_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/?10_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere_co_ we see three kinds of intersection-testing... happening.  One with a low-precision bounding box_co_ one with high-precision_co_ and one mesh-to-point intersection.  The spheres turn red upon intersection.  Maybe this is enough to get you rolling.  If not_co_ we_t_ll keep experimenting.  But_co_ it is easiest if you create a playground_co_ so we can ALL work on the situation easier.  Thx.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Gwir","Date":"2016-08-25T09:13:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#15BK6Z%230_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#15BK6Z#0_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheck the simple intersection is not enough_co_ i need to verify if box is completely (or at least within a certain range) overlapped to box2_co_ i can do that comparing the worldMatrixes.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut i need also to get the overlap _qt_accuracy_qt__co_ it_t_s simple for position and scaling but rotation values for box are always zeroes rotating it with rotate() method_co_ and worldMatrix is not usefoluf for this purpose. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-08-25T13:42:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThx for the PG.  When you use .rotate_co_ that creates and uses a Quaternion to hold the rotation.  _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#15BK6Z%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#15BK6Z#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTake a look at line 33_co_ and the console.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ don_t_t forget about the _qt_point-in-space_qt_ intersection.  Perhaps you could use 8 of those_co_ one for each corner of the box you are testing.  If any of the 8 intersection points... are not intersecting the other box_co_ then it is not perfectly aligned.  I don_t_t know if that would work for you_co_ but it is something to consider.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ keep in mind that square and rectangular boxes set with .visibility _eq_ 0... can still do intersection tests.  So_co_ surrounding a box with invisible mesh_co_ possibly parented to the box_co_ could provide intersection assisting  (by watching the invisible boxes for intersection or lack of intersection).  In a way_co_ you are surrounding the box with _qt_intersection sensors_qt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust some ideas... might be useful.  Maybe more and better ideas will come from others.  Be well.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Gwir","Date":"2016-08-25T15:12:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThank you_co_ didn_t_t know the existence of rotationQuaternion.toEulerAngles()_co_ it seems to work for me.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]