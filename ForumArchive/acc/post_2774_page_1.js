[{"Owner":"highvrahos","Date":"2013-12-25T18:21:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m experiencing some problems with the correct conversion of .obj models to .babylon._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Models are quite complex (50.000-80.000 vertices)_co_ appear correctly in 3ds Max and in Blender._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_When exported to .babylon some of the models appear distored when rendered in the browser. It seems there is some issue with normals or texturing? I can_t_t isolate the problem._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Check the images attached (WebGL and Blender)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Any help will be greatly appreciated._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thank you_co__lt_/p_gt__lt_p_gt__lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2013/post-5854-0-18820900-1387995646.png_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2013/post-5854-0-18820900-1387995646_thumb.png_qt_ data-fileid_eq__qt_625_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_post-5854-0-18820900-1387995646_thumb.pn_qt__gt__lt_/a_gt__lt_/p_gt__lt_p_gt__lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2013/post-5854-0-07267400-1387995650.png_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2013/post-5854-0-07267400-1387995650.png_qt_ data-fileid_eq__qt_626_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_post-5854-0-07267400-1387995650.png_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2013-12-25T23:07:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This may be due to a wrong mesh construct. This is just an idea..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2013-12-26T19:15:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_babylon.js does not (because webgl does not) support meshes with more than 65536 vertices. This requires 32 bits indices where standard webgl only support 16bits indices _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_for meshes with more than 65536 vertices_co_ you have to cut them off into smaller parts _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"highvrahos","Date":"2013-12-27T08:12:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ah_co_ now it makes sense._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I was aware of that limitation from the old days of OpenGL_co_ just didn_t_t think still exists._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Yes_co_ models with less than 65536 vertices load correctly._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thank you very much for your answer._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Best regards_co__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]