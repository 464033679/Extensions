[{"Owner":"dsman","Date":"2015-06-23T06:42:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_So we have some app logic already written in Babylon which is working in browser as intended. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now we want to do AR in mobile devices . Where user can scan a marker (paper sheet or something ) which gives us the transformation matrix of surface on which the marker is placed . And then we can augment our 3D shapes based on our existing logic in babylon. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_We are using Xamarin.Android in our app. For are ios we are planning to do native development. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I checked Wikitude. But if someone has done something like this or know a best way to do _co_ please suggest. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-06-23T16:30:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey Dsman!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you ask for platform support_co_ I know that cocoon.js works well with iOS and that Cordova is great for android_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dsman","Date":"2015-06-24T01:01:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_So the question is doing  everything inside Webview is advisable/practical first of all ?  Ie. Taking device camera stream and showing on canvas _co_ and then imposing babylon 3D graphic on it . _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-06-24T06:03:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Google is using the normal browser for vr_co_ _lt_a href_eq__qt_https_dd_//vr.chromeexperiments.com_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//vr.chromeexperiments.com_lt_/a_gt_ . Using a different framework. The one that starts with three and ends with js.  _lt_/p_gt__lt_p_gt_The performance in the browser (for you_co_ the normal web view) is surprisingly good. But those are simple scenes._lt_/p_gt__lt_p_gt_If your scene is more complex_co_ try first cocoon_t_s webview+_co_ which offers an accelerated web view (different js engine in android and other treats). Eventually you could try canvas+_co_ which is an accelerated version of a canvas. There are pros and cons for each_co_ but performance would be the best with canvas+._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-24T07:41:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Side question while speaking about three.js _dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I wonder how _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/babylon.2.1.js_qt_ rel_eq__qt_external nofollow_qt__gt_BJS_lt_/a_gt_ is 800 KB whereas _lt_a href_eq__qt_https_dd_//github.com/mrdoob/three.js/blob/master/build/three.min.js_qt_ rel_eq__qt_external nofollow_qt__gt_3.js_lt_/a_gt_ is only 400 KB._lt_/p_gt__lt_p_gt_It_t_s been a while I didn_t_t use three.js (actually since I discovered BJS _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ ) and I remember_co_ for instance_co_ some features are external (I mean in external files) like the cam behaviors or some visual effect shaders._lt_/p_gt__lt_p_gt_However threejs provides at least four types of renderer (canvas2D_co_ webGL_co_ SVG and CSS3d) instead of focusing only on webgl as we do here. This would lead to bunch of lines of code afaik._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So I don_t_t really understand where this difference comes from and if it has a significant impact on the framework working ._lt_/p_gt__lt_p_gt_Well_co_ it has a difference on the framework file download time_co_ but compared to everything else (textures_co_ imported meshes_co_ sounds_co_ etc)_co_ I guess it doesn_t_t really matter._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I would state I have absolutely no idea about each framework memory footprint once they run._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dsman","Date":"2015-06-24T08:17:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Our 3D content (Generated by babylon) which needs to be imposed/overlayed on the camera stream will be fairly simple .It will be some 3-4 type of  plane meshes (6 vertices each) _co_ instantiated to some 40-50 meshes.  That_t_s it. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I was wondering how would this happen with Babylon. I mean How would babylon render a mesh but without a background ? Which means 3D content with transparent background. So that_co_ 3D content can be imposed over device camera view. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I think we won_t_t be able to use cocoonjs  because it is kind of app packager (html5/js app to .apk package) and not a separate webview component which we can put in our native or xamarin app. Unless I am wrong in understanding how cocoonjs works. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So I think if we want to add this functionality in existing Xamarin and native iOS based app_co_ we need to use  cordova + JSARToolkit _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-06-24T08:55:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The WebView+ packages can be a aprt of your own application and doesn_t_t need to be packed (they are plugins for phonegap/cordova)_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/ludei/webview-plus_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/ludei/webview-plus_lt_/a_gt__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/ludei/webview-plus-ios_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/ludei/webview-plus-ios_lt_/a_gt__lt_/p_gt__lt_p_gt_They might bring better performance. But if you are saying that the application is fairly simple_co_ a regular webview might suffice. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@Jerome - The two frameworks are incomparable. Three has no Collisions_co_ Three has no physics integration. Three is missing other things that BJS has - which can be added using external plugins. The paradigms are totally different. Three is also developed in vanilla JS_co_ which removes the typescript overhead (which is nothing to worry about performance-wise_co_ but it does make a bit larger files). It_t_s like asking why jQuery and Dojo toolkit are not the same size._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-06-24T09:10:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt_ _lt_/div_gt__lt_div_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_13297_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_15335_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1383383264_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Just set the scene.clearColor to a new BABYLON.Color4 value with alpha value !_eq_ 1_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_/div_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/1939-newbie-question-transparent-scene-background/_qt__gt_http_dd_//www.html5gamedevs.com/topic/1939-newbie-question-transparent-scene-background/_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@dsman_dd_ Is that what you mean with transparent background or did I misunderstand?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-06-24T16:37:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@Jerome_dd_ we also have a complete file loader and save_co_ all shaders are included _co_ collisions_co_ physics_co_ CSG. BJS philosophy is to keep it simple for the developer with no need to find external libs_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And size-wise_co_ the CDN version which uses gzip is 250k _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-24T18:46:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yeeeppp... physics !!! That_t_s the real difference !!!  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"qqdarren","Date":"2015-06-24T19:01:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Jerome_co_ so if we don_t_t use physics_co_ are we wasting 400KB of the 800KB download? That is confusing me_co_ because I thought physics was done with the oimo.js plugin._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I started with three.js_co_ but switched to Babylon.js because the demos were more impressive - it seemed I could get more done with fewer lines of code. So the _qt_everything but the kitchen sink_qt_ philosophy is appealing while doing mock-ups and rapid development. But once I have something to release I_t_d love to try then implementing it in Three.js as well_co_ so I can compare them side by side. Not just file size_co_ but running speed. Especially on mobile. (We_t_ll have to see if I have any resources/energy left at that point!)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-06-24T20:23:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It is not just about physics but everything else that I mentioned(And I probably forgot a lot)_dd__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_ complete file loader and save_co_ all shaders are included _co_ collisions_co_ physics_co_ CSG_co_ particles_co_ etc..._lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-06-24T20:24:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_And once again if you put you babylon.js file in a web server with gzip on_co_ you wont see any difference but a really smaller file_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-24T20:28:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_huuu... I don_t_t know indeed_lt_/p_gt__lt_p_gt_I can see there are currently (22_dd_30 french time) many file reorganizations in the github repo... babylon.js even disappeared ! (temporarily_co_ I hope)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_[edit] it seems to be in the src folder now_lt_/p_gt__lt_p_gt_waiting to see the build respawn _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_[edit2] found in the dist folder !_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dsman","Date":"2015-06-25T10:11:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@iiceman  Yes. I was asking talking about  that transparency. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@RaananW  thanks for pointing that Webview+ is component which we can use in our Xamarin or iOS app. It would be great then. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And yes Babylon is much better than Threejs_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-06-25T10:46:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt_And yes Babylon is much better than Threejs_lt_p_gt_ _lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I like reading this. I am of the same opinion 100%  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-25T12:37:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@discussion _dd_ I know that the download time difference has no importance as quite ALL webservers now compress data since years._lt_/p_gt__lt_p_gt_I was wondering much about the LOC number difference. But I forgot that collisions and physics integration were absent in the raw threejs_co_ as well as many shaders._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Arf_co_ I won_t_t say I prefer three.js ... Have you seen my name in the three.js  contributors list  ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]