[{"Owner":"The Leftover","Date":"2018-05-06T21:45:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tLike mightier folk before me_co_ I have been trying to figure out how to put text into the 3-D Babylon world.  Not unlike the thread at bottom.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt would be best it was dynamic_co_ not a fixed pre-setup_co_ yeah?  One can do this in SVG with a little help from OpenType.js . . . and Text-To-SVG_co_ which uses it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you look at a couple of glyphs (_lt_a href_eq__qt_https_dd_//opentype.js.org/glyph-inspector.html_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//opentype.js.org/glyph-inspector.html_lt_/a_gt_) you may quickly conclude that one could put them in a BABYLON Path2_co_ then into a polygon and we are off and running.  Yay!  One small wrinkle_dd__lt_br /_gt_\n\tThe OpenType output makes extensive use of quadratic curves.  (_lt_a href_eq__qt_http_dd_//blogs.sitepointstatic.com/examples/tech/svg-curves/quadratic-curve.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//blogs.sitepointstatic.com/examples/tech/svg-curves/quadratic-curve.html_lt_/a_gt_)  No such thing in a Path2_sm_ just an arc.  When the OpenType is translated into SVG (using text-to-svg)_co_ the path looks a little like this_dd_      _lt_span style_eq__qt_color_dd_#2980b9_sm__qt__gt__lt_span style_eq__qt_font-size_dd_12px_sm__qt__gt__qt_M1.66 19.58L1.66 19.58L1.66 2.99L1.66 2.99Q1.66 1.80 2.50 0.99L2.50 0.99L2.50 0.99Q3.35 0.18 4.54 0.18L4.54 0.18L4.54 0.18Q5.72 0.18 6.53 0.99L6.53 0.99L6.53 0.99Q7.34 1.80 7.34 2.99L7.34 2.99L7.34 18.90L7.34 18.90Q7.34 20.16 8.44 21.02L8.44 21.02L8.44 21.02Q9.54 21.89 10.76 21.89L10.76 21.89L10.76 21.89Q12.02 21.89 13.00 21.04L13.00 21.04L13.00 21.04Q13.97 20.20 14.00 19.01L14.00 19.01L14.00 2.99L14.00 2.99Q14.00 1.80 14.83 0.99L14.83 0.99L14.83 0.99Q15.66 0.18 16.85 0.18L16.85 0.18L16.85 0.18Q18.04 0.18 18.86 0.99L18.86 0.99L18.86 0.99Q19.69 1.80 19.69 2.99L19.69 2.99L19.69 19.58L19.69 19.58Q19.69 23.00 17.01 25.27L17.01 25.27L17.01 25.27Q14.33 27.54 10.76 27.54L10.76 27.54L10.76 27.54Q7.16 27.54 4.41 25.25L4.41 25.25L4.41 25.25Q1.66 22.97 1.66 19.58Z_qt__lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat_t_s a letter.  (Not sure which letter_sm_ that doesn_t_t matter.)  I could write a wee utility to turn this path into a BABYLON polygon except for those quadratic curves in the path.  If there was a Path2.addCurveTo method_co_ then there would be no technical barrier.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAt this point_co_ I have stalled out a little.  I would be pleased to write an add-on for BABYLON but I am trying to decide what definition would be most useful.  I think emulating Text-To-SVG functionality might be the way to go.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis was brought to you by the Letter G.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t  \n_lt_/p_gt_\n_lt_iframe allowfullscreen_eq__qt__qt_ data-controller_eq__qt_core.front.core.autosizeiframe_qt_ data-embedcontent_eq__qt__qt_ data-embedid_eq__qt_embed8442253614_qt_ scrolling_eq__qt_no_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/topic/32422-3d-text-in-babylonjs-using-vectorize-text/?do_eq_embed_qt_ style_eq__qt_height_dd_341px_sm_max-width_dd_502px_sm__qt__gt__lt_/iframe_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_05/The-Letter-G.png.409f62bec7d5a54143e021f578e5daf1.png_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_18147_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_05/The-Letter-G.png.409f62bec7d5a54143e021f578e5daf1.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_The-Letter-G.png_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Gijs","Date":"2018-05-06T22:18:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou could use Curve3 instead of Path2_co_ and turn the curve into a Path2 later if you need that. Then instead of addLine_co_ you make a new Curve3 that is the line_co_ and use yourCurve.continue(the new curve) to get the added curve. To get the quadratic curve_co_ you can use_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/how_to/how_to_use_curve3#quadratic-bezier-curve_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/how_to/how_to_use_curve3#quadratic-bezier-curve_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tGood luck with your project\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Gijs","Date":"2018-05-06T22:43:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOr you could make an addCurveTo method using a Curve3_co_ like this (not tested)_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_BABYLON.Path2.prototype.addCurveTo _eq_ function(redX_co_ redY_co_ blueX_co_ blueY){\n    let points _eq_ this.getPoints()_sm_\n    let lastPoint _eq_ points[points.length - 1]_sm_\n    let origin _eq_ new BABYLON.Vector3(lastPoint.x_co_ lastPoint.y_co_ 0)_sm_\n    let control _eq_ new BABYLON.Vector3(redX_co_ redY_co_ 0)_sm_\n    let destination _eq_ new BABYLON.Vector3(blueX_co_ blueY_co_ 0)_sm_\n    let nb_of_points _eq_ 10_sm_\n    let curve _eq_ BABYLON.Curve3.CreateQuadraticBezier(origin_co_ control_co_ destination_co_ nb_of_points)_sm_\n    let curvePoints _eq_ curve.getPoints()_sm_\n    for(let i_eq_1_sm_ i&lt_sm_curvePoints.length_sm_ i++){\n        this.addLineTo(curvePoints[i].x_co_ curvePoints[i].y)_sm_\n    }\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"The Leftover","Date":"2018-05-06T22:51:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tGijs_co_ thank you.  Right on point and told me something I didn_t_t know.  I appreciate it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI had started with PolygonMeshBuilder long ago.  My plan was that the text be a polygon mesh.  It takes a Path2 but I don_t_t know about a Curve3.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI just saw your last post.  Wow!  It would be the way to go.  Let me try to get my head around that.  I will return.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"The Leftover","Date":"2018-05-07T14:08:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAs far as I can tell_co_ it worked flawlessly first time.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#PTTMVI%2363_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#PTTMVI#63_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am closing this.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNext up is to create a _qt_font package_qt_ that will generate polygon meshes from letters.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]