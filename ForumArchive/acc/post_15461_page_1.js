[{"Owner":"slippery","Date":"2015-06-29T17:05:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi there_co_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have some performance issues to solve. Instead of having a render loop constantly render a scene I want to only render the scene when my ArcRotateCamera has moved/is moving (i.e_co_ zooming_co_ rotating_co_ panning). I currently have rendered the scene once on load and then tried this to have it update on the mouse wheel zoom_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_$(engine.getRenderingCanvas()).on(_t_mousewheel DOMMouseScroll_t__co_ function(event){       scene.render()_sm_})_sm__lt_/pre_gt__lt_p_gt_It ended up being really sluggish though. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Does anyone have any ideas on how I can do this?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks_co__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-06-30T02:40:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi Slippery_co_ welcome to the forum!_lt_/p_gt__lt_p_gt_   Wow_co_ what an interesting challenge.  I_t_m not very experienced_co_ but... you did say ANY ideas.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  SO_co_ here_t_s a stupid one._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I assume that your performance issues are seen when adjusting html GUI or some other off-canvas operations.  In other words_co_ for some reason_co_ there are times when a _qt_frozen canvas_qt_ would work fine... and then when the user re-focuses on the canvas (preparing to do a camera move)... you need the scene to wake-up and act normal._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here is that idea.  We have a tool to make .png screen grabs.  SO_co_ let_t_s say you added your own canvas.onUnFocus() function.  In that function_co_ you do a quick screen grab of the current camera view_co_ then make a canvas-sized html button_co_ and put THAT image on it.  Then set canvas.style.display _eq_ _qt_none_qt_ which will _qt_collapse_qt_ the webGL canvas... but your new html canvas-size button is perfectly placed BEHIND the collapsed canvas.  So_co_ when the webGL canvas collapses_co_ its ok_co_ because you put a clickable picture of the same camera view... behind it. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The users see no change.  They can adjust off-canvas html gui_co_ or do other off-canvas stuff_co_ and when they click on the big button (which the users _lt_em_gt_think_lt_/em_gt_ is a webGL scene)_co_ POOM_co_ button.onclick... you set canvas.style.display _eq_ _qt_block_qt_ (I think).  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  You re-raise the html canvas element (the BJS scene)_co_ and you can delete your button_co_ or at least set button.style.display _eq_ _qt_none_qt_ and button.style.backgroundImage _eq_ _qt__qt_. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Next time the user un-focuses the webGL_co_ you need to grab a _lt_em_gt_fresh_lt_/em_gt_ screen grab picture for your big button background image._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The REAL question... Does a webGL canvas/scene... after setting canvas.style.display _eq_ _qt_none_qt_...  make your device/computer speed up?  I dunno.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Weird idea_co_ huh?  Probably won_t_t work or help.  Maybe you can_t_t get access to DOM/HTML on your device/platform.  *shrug* _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Again_co_ welcome.  Others will surely comment soon._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2015-06-30T06:21:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I would do something like this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var canRender _eq_ false_sm_$(engine.getRenderingCanvas()).on(_t_mousewheel DOMMouseScroll_t__co_ function(event){   canRender _eq_ true_sm_})_sm_engine.runRenderLoop(function() {   if (canRender) {      scene.render_sm_   }}// canRender should be set to false when there are no movement during X ms_lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]