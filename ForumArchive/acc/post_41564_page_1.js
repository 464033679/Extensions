[{"Owner":"timetocode","Date":"2018-11-28T14:02:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOn some objs that I import_co_ I_t_m having to do foo.scaling _eq_ new BABYLON.Vector3(-1_co_ 1_co_ 1).  For example this zombie needed the torso scaling set (-1_co_ 1_co_ 1) before the left and right hands appeared on the correct sides of the body among other details. The arms are parented to the torso_co_ so I think that is how the scale is factoring into which side they appear on. The head is actually flipped incorrectly at the moment as well_co_ but that doesn_t_t really matter. I_t_m fine with scaling(-1_co_1_co_1) as a solution_co_ but for some reason the gun now has its mesh inside out or something.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo my question is two parts_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) why is the gun inside out? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe parent order (child to parent) is weapon -&gt_sm_ leftHand -&gt_sm_ lowerLeftArm -&gt_sm_ upperLeftArm -&gt_sm_ torso. In theory everything is inheriting its scale from torso.  Each body part is a separate mesh made the same way_co_ yet only the weapon is inside out_co_ not the torso or any of the arm parts (maybe I just have an error in my code_co_ unless there is some reason that this would naturally by the case).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) is there a babylon function to fix only an individual mesh?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI searched the forum and found many pgs dating back up to 3 years_co_ and some mention of including righthand vs lefthand modes in bjs... but I wasn_t_t sure what the current day method would be to fix just the weapon mesh below.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_image.png.84bb352f04cf47ace31655a61e46ea86.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_21242_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_11/image.png.84bb352f04cf47ace31655a61e46ea86.png_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt may be a little hard to see that it is in fact inside-out_co_ so here_t_s another picture of what the weapon is supposed to look like_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ data-fileid_eq__qt_21244_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_11/image.png.c160b2d4281b9b262f87a2e0673a028b.png_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_image.thumb.png.74e2c31b57bb3b76b8234bb91160dece.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_21244_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_11/image.thumb.png.74e2c31b57bb3b76b8234bb91160dece.png_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI cannot use blender+babylon-exporter to make the full model at this point (some complex issues with networking bone animations exported from blender to babylon_co_ a topic for another time).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am still using blender to pose my character as a visual reference before converting the rotations of each body part over to a custom animation system -- so this is perhaps where the conflicting notion of left/right arms is coming from originally.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"timetocode","Date":"2018-11-28T21:12:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFound _lt_strong_gt_mesh.flipFaces(false)_lt_/strong_gt_ which seems to fix all of the meshes I_t_ve had problems with so far.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI also tried the full scene-wide flip (_lt_strong_gt_scene.useRightHandSystem _eq_ true_lt_/strong_gt_) which worked as well and allowed me to not have any negative scales.  I_t_m going back to left hand though_co_ not sure if it is more intuitive or if I just have too much code that relies on it_co_ but flipping a voxel collision system and maps was not so easy.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]