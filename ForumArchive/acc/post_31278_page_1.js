[{"Owner":"AndyBeaulieu","Date":"2017-06-25T20:12:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi All_co_   (I edited this post so it_t_s a bit more clear)...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUsing a _lt_strong_gt_FreeCamera_lt_/strong_gt__co_ I can set _lt_strong_gt_camera.parent_lt_/strong_gt_ equal to a mesh so that the camera moves with the mesh_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t        _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#PPEC6R_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#PPEC6R_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut if I try this with a VR Free Camera (VRDeviceOrientationFreeCamera or WebVRFreeCamera)_co_ then it doesn_t_t seem to work (the camera does not move with the mesh)...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t        _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#PPEC6R%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#PPEC6R#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat I am trying to do is simulate _qt_riding_qt_ on a vehicle or object. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny ideas are appreciated!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks_co__lt_br /_gt_\n\t-Andy\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-06-26T15:52:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Andy_co_ good to see you.  I hope you have been well.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI know of workaround. [_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#PPEC6R%232_qt_ rel_eq__qt_external nofollow_qt__gt_link #2_lt_/a_gt_]  See lines 30-31.  Might not be correct way_co_ but it works.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHope this helps.  Smarter people than I ...will surely comment soon.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"AndyBeaulieu","Date":"2017-06-26T16:45:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks Wingnut! Very good idea - so setting each individual L/R camera.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI wonder if this will work with the WebVRFreeCamera as well? I_t_ll do some tests and report back here.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-06-26T17:14:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSounds good_co_ thx!  There might be some pivot point considerations involved here.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe left eye and right eye should not be rotating precisely the same_co_ and with this work-around kludge_co_ they are doing so.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere is an... umm... _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/3.0/vrcamerametrics_qt_ rel_eq__qt_external nofollow_qt__gt_.lensSeparationDistance and .interpupillaryDistance_lt_/a_gt_ involved in the _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/playground?code_eq_metrics_qt_ rel_eq__qt_external nofollow_qt__gt_metrics_lt_/a_gt_ of VR cameras.  Essentially_co_ it is the nose-bridge width_co_ _lt_em_gt_I think_lt_/em_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBoth cameras are not in the same position.  They are separated by _lt_em_gt_some_lt_/em_gt_ distance.  SO_co_ when both side-by-side cameras are looking at the same target... their rotation values will _lt_u_gt_not_lt_/u_gt_ PERFECTLY match.  The camera that is furthest from the target... will be rotated a bit further than the other_co_ I think.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is a potential problem.  No problems for simple spinning of both cameras like our demo is doing.  But more problem when you wear the VR glasses and you have problems getting left/right rotational _qt_coordination_qt_... and you get a brain tumor after 15 minutes of game-play.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tTruth is_co_ the rig itself... should allow parenting... but the rig is really a matrix transformation_co_ I believe (similar to a bone).  Perhaps_co_ to do this task properly_co_ each camera_t_s CURRENT transformation... should be multiplied by the rotating box transformation... each frame.  (ouch)  This way_co_ the box_t_s rot transform is _qt_affecting_qt_ each camera viewMatrix_co_ but not forcing it to be a COPY of box_t_s rot transform.  Box_t_s rot transform becomes an OFFSET which is added to each camera_t_s current rot.  The two cameras always maintain their slight difference-in-rotation from each other_co_ that way.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s pretty much over my head... but... forcing left/right camera rotations... to be COPIES-of box rotation... seems like an improper solution (kludge) that could cause problems in a project. *shrug*  Party on.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]