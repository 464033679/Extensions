[{"Owner":"jerome","Date":"2015-10-20T17:03:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I added some new features in the SPS useful if you want to optimize a immutable set of 3D objects (buildings in the distance_co_ asteroids_co_ etc) _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Documentation/blob/master/content/tutorials/03_Advanced/Solid_Particle_System.md_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Documentation/blob/master/content/tutorials/03_Advanced/Solid_Particle_System.md_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You can now rotate/ translate_co_ color_co_ etc the SPS objects not only on update (for classical animated particles) but also on creation (for for ever frozen objects)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Under the hood_co_ I also ported the numeric arrays to typed arrays (float32) so it is better to pass data to WebGL_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-10-20T17:20:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This is a tremendous work..Thanks for that!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-10-20T18:09:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_De nada_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Demos soon  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ (maybe one for the future _qt_features demo_qt_ for the BJS web site ? don_t_t know what to do though)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The SPS needs for more little tweaks and is almost OK._lt_/p_gt__lt_p_gt_I think it_t_s already fully functionnal (according to what I expect and I_t_m quite hard to please) for any immutable mesh._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Just some little (most of them invisible for users) fixes to add or some refactor to do and it will be finished for its first introductionin the BJS core._lt_/p_gt__lt_p_gt_You can use it already_co_ of course.  _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I would really like to have some parts of the code in asm.js_co_ or even just our great magic _lt_em_gt_ComputeNormals()_lt_/em_gt_ method_co_ which is a really good candidate for this_co_ in order to check what the gains would be._lt_/p_gt__lt_p_gt_However I don_t_t want to recode everything in C_co_ then to compile to asm.js. I would like to write the asm.js directly _dd_ iterations and accesses in arrays_co_  and simple float operations (+_co_ -_co_ *_co_ /) only_lt_/p_gt__lt_p_gt_If anyone has some experience in coding directly in asm.js_co_ please let me know_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-10-21T15:00:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_First very basic (and commented) examples that you will find in the _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Documentation/blob/master/content/tutorials/03_Advanced/Solid_Particle_System.md_qt_ rel_eq__qt_external nofollow_qt__gt_documentation_lt_/a_gt_ (finished soon)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_plane particles_co_ billboard mode_co_ no rotation _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#WCDZS_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#WCDZS_lt_/a_gt__lt_/p_gt__lt_p_gt_same but without billboard mode and with rotation _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#WCDZS%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#WCDZS#1_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_solid particles _dd_ box and tetrahedrons_lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#WCDZS%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#WCDZS#2_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_last news _dd__lt_/p_gt__lt_p_gt_you can now modify the SPS mesh_co_ per particle_co_ at creation time. This means you can build a non-updatable mesh but you can still set the particle positions_co_ rotations_co_ scales_co_ colors_co_ uvs_co_ even their vertices_co_ once for all and never call then _setParticles()_._lt_/p_gt__lt_p_gt_It is useful for immutable meshes (building in the distance_co_ asteroids_co_ etc) or whatever un-animated because you will have then one draw call and no vertex buffer update (and no need for some behavior logic either_co_ so less CPU consumption). In brief_co_ the more performance possible for immutable customized SPS._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you take a look at the code from this example (feature not yet in PG) _co_ you_t_ll see there_t_s no SPS behavior and its mesh isn_t_t updatable_co_ so the code is quite short _dd_ _lt_a href_eq__qt_http_dd_//jerome.bousquie.fr/BJS/test/solidparticlesAsteroid.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//jerome.bousquie.fr/BJS/test/solidparticlesAsteroid.html_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Have fun_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-10-21T15:18:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Awesome.. good job indeed! Is it already in the current Babylon version? I might give this a try. Got some nice ideas on how to use it _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_By the way_dd_ is it already possible to remove single particles? Lets say I want to shoot some of the asteroids and make them disappear. Could I do that (yet)? Or is this a planed feature? Or just not possible?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Blax","Date":"2015-10-21T15:28:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Really great!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-10-21T16:37:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_thanks_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The SPS particles are just some parts of the SPS mesh. So we can_t_t _qt_remove_qt_ them as is._lt_/p_gt__lt_p_gt_But I think you can find tricks to avoid to display them _dd_ scale them to zero_co_ put them out of the camera frustrum_co_ or whatever you think is useful to your need_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-10-23T09:07:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Example with live morphing shapes _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1X7SUN%235_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1X7SUN#5_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-10-23T09:11:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Kind of like fluid in space_co_ pretty cool!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Ingo Chou","Date":"2015-10-23T09:13:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It_t_s wonderful !!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-10-23T09:21:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_funny with torus also _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1X7SUN%236_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1X7SUN#6_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-10-23T09:27:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Let_t_s do some worms or larva _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1X7SUN%237_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1X7SUN#7_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-10-25T13:10:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_thinking about something ..._lt_/p_gt__lt_p_gt_in this version I added a double-link on each particl to its previous and next neighbour_co_ as I thought it was useful._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But_co_ as the user has access to the global _lt_em_gt_particles_lt_/em_gt_ array and to each particle index_co_ he can know the next and the previous one_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var i _eq_ particle.idx_sm_var next _eq_ SPS.particles[i - 1]_sm_var previous _eq_ SPS.particles[i + 1]_sm__lt_/pre_gt__lt_p_gt_So unless someone tells me the need for the double-link_co_ I guess I will remove it from the SPS_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-10-26T19:34:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_just removed the useless double-link_co_ this will save a lot memory as there was two pointers per particle_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-10-26T22:23:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_That_t_s cool...I was unsure of this as well _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-10-30T11:29:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_After profiling_co_ I have some lead to improve a little the performance of the _lt_em_gt_setParticles() _lt_/em_gt_method_lt_/p_gt__lt_p_gt_and another lead to implement pickable particles _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ll check next week_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-11-02T08:42:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_FYI_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Yesterday night_co_ I was reading some ThreeJS documentation about their feature called BufferGeometry_co_ which is something to optimize the render of massive geometries (ex _dd_ many meshes merged into one big that won_t_t evolve after) in one single draw call._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Well_co_ I_t_m proud to announce to you that the SPS is our BufferGeometry when you use it as an immutable SPS (cf documentation)._lt_/p_gt__lt_p_gt_The difference is that the SPS has many other features like_co_ not the least_co_ the ability to animate each of its components (what we call the solid particles)_co_ even to morph them or to apply them a different texture per component... which aren_t_t avalaible in the ThreeJS BufferGeometry _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ ._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-02T15:18:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yeah man!!! you rock!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_be also use this technique for standard particules_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-11-02T16:20:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_improvment added in _lt_em_gt_setParticles(_lt_/em_gt_)_co_ validated with the profiler _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_as well as a new SPS property to manage cleanly the memory at SPS level and avoid GC trigerring _dd_ _lt_em_gt_SPS.vars_lt_/em_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_documented here _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Documentation/blob/master/content/tutorials/03_Advanced/Solid_Particle_System.md_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Documentation/blob/master/content/tutorials/03_Advanced/Solid_Particle_System.md_lt_/a_gt__lt_/p_gt__lt_p_gt_in _qt_GC concerns_qt_ section_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-11-03T08:16:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_a last lead to improve again _lt_em_gt_setParticles()_lt_/em_gt_ and I will have reached everything possible in JS in this algo _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_[EDIT] _dd_ done_lt_/p_gt__lt_p_gt_Now the particle normals aren_t_t recomputed_co_ but rotated within the same loop on positions_co_ each call of _lt_em_gt_setParticles() _lt_/em_gt_as long as the particles can_t_t be morphed_lt_em_gt__co_ _lt_/em_gt_it is_lt_em_gt_ _lt_/em_gt_to say as long as_lt_em_gt_ SPS.computeParticleVertex_lt_/em_gt_ keeps _lt_em_gt_false._lt_/em_gt__lt_/p_gt__lt_p_gt_Although _lt_em_gt_ComputeNormals()_lt_/em_gt_ has been optimized_co_ it is still a big process reiterating on _lt_em_gt_positions_lt_/em_gt__co_ _lt_em_gt_indices_lt_/em_gt_ and _lt_em_gt_normals_lt_/em_gt_ arrays... so quite CPU consuming when you have to deal with dozens of thousands of position and normal values._lt_/p_gt__lt_p_gt_So now _lt_em_gt_ComputeNormals()_lt_/em_gt_ is called only when the particle shapes may change._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-11-03T12:06:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi Jerome!  Great work_co_ thanks!  The SPS doc is EXCELLENT!  I thought I was a thorough explain-er_co_ but Jerome... you are kicking my butt on that!  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Have you ever thought of splitting setParticles into 2-3 more-distinctly-named functions?  For example_co_ setParticles might call setRotation_co_ setPosition_co_ and setScaling?  That way_co_ users could create custom functions for one or more of those._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What I was thinking about... was a custom setPosition which placed all particles in a giant ball around the emitter.  Now_co_ using each particle_t_s scaling as the MASS value_co_ start spinning the emitter... and use centrifugal force (emitter spin rate/particle mass) to determine when each particle flies away-from the emitter crowd.  (essentially_co_ connect emit power to emitter spin rate)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In this case_co_ I ONLY need a custom setPosition_co_ but not custom setRotation or setScaling._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Or should I be dealing-with updateParticle?  Maybe setParticle just does initial placement.  I_t_m new at this.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  And _t_setParticle_t_ is not very indicative of what the function does.  (I hear echoes of a long-ago programming mentor of mine_co_ who would OFTEN say to me _qt_If a function is more than 10 lines_co_ it should be sub-functioned._qt_)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Just thinkin_t_  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  I realize that particle mass is starting to enter the world of physics_co_ but we are already using one physics property for particles - gravity.  So_co_ I don_t_t think it is too far-fetched to ponder particles having mass (but probably not built-into SPS.  User can add it.) _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The particle mass affects the gravitational pull_co_ too... the fall rate._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What_t_s that?  You say _qt_No_qt_?  Newton claims what? _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Oh_co_ he claims that BB_t_s fall just as fast as bowling balls?  Well I_t_ll be darned.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-11-03T13:37:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Well_co_ you post is interesting because I understand that everything is not really clear in my documentation._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So I_t_ll try to summarize it here _dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The SPS is behavior-agnostic. This means it doesn_t_t know how the particles will move_co_ rotate_co_ if they have a mass_co_ if there are forces_co_ etc. You have to see it like a big mesh that you can create (_lt_em_gt_buildMesh_lt_/em_gt_) from many shape models_co_ some BJS existing meshes_co_ (_lt_em_gt_addShape_lt_/em_gt_) that will be its solid particles. It provides some methods to access then and to manage these solid particles._lt_/p_gt__lt_p_gt_So the initial stuff to do is to create the SPS_co_ then to add as many shapes you need and at last to build the SPS mesh._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var  SPS _eq_ new BABYLON.SolidParticleSystem(_qt_sps_qt__co_ scene)_sm_SPS.addShape(modelMesh1_co_ 100)_sm_SPS.addShape(modelMesh2_co_ 200)_sm_SPS.addShape(modelMesh3_co_ 150)_sm_// etc ...SPS.buildMesh()_sm_   // this builds the mesh and displays it at just construction time_lt_/pre_gt__lt_p_gt_Once you_t_ve done it_co_ you need to manage your solid particles._lt_/p_gt__lt_p_gt_The way to fix the particle status and then to display them at this status is to call _lt_em_gt_SPS.setParticles()_lt_/em_gt__lt_/p_gt__lt_p_gt_Each time you call _lt_em_gt_setParticles()_lt_/em_gt_ the particles are rendered at their current status. Easy_co_ isn_t_t it ?_lt_/p_gt__lt_p_gt_So three steps _dd__lt_/p_gt__lt_ol_gt__lt_li_gt_SPS and its mesh creation_lt_/li_gt_\t_lt_li_gt_compute your particle behavior_lt_/li_gt_\t_lt_li_gt_call _lt_em_gt_setParticles()_lt_/em_gt_ to update the mesh and draw it_lt_/li_gt__lt_/ol_gt__lt_p_gt_Just remember that_co_ once the mesh is build_co_ only _lt_strong_gt_setParticles()_lt_/strong_gt_ does then the job _dd_ updates the mesh VBO and draws it._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_To help you to update each particle status_co_ _lt_em_gt_setParticle()_lt_/em_gt_ will call for each particle _lt_em_gt_SPS.updateParticle(particle). _lt_/em_gt__lt_/p_gt__lt_p_gt_This function doesn_t_t do anything by default_co_ so it is the place were you can implement your particle behavior_co_ with physics if you want._lt_/p_gt__lt_p_gt_It is passed each particle object in turn_co_ which you can set its initial properties (position_co_ rotation_co_ quaternion_co_ scale_co_ color_co_ uvs_co_ velocity) or add and set your own if your logic needs it (age ? mass ? etc)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_example _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_SPS.updateParticle _eq_ function(particle) {  particle.position.x +_eq_ 0.01_sm_  if (particle.age &gt_sm_ 20 ) {    SPS.recycleParticle(particle)_sm_}_lt_/pre_gt__lt_p_gt_So _lt_em_gt_updateParticle()_lt_/em_gt_ just changes the particle data_co_ not the mesh itself. The _lt_em_gt_setParticles()_lt_/em_gt_ process updates the mesh. Hopefully_co_ _lt_em_gt_setParticles()_lt_/em_gt_ calls _lt_em_gt_updateParticle(particle)_lt_/em_gt_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you want to set an initial status_co_ different from the live behavior that you would implement in _lt_em_gt_SPS.updateParticle(particle)_lt_/em_gt__co_ you can use _lt_em_gt_SPS.initParticles()._lt_/em_gt__lt_/p_gt__lt_p_gt_This function doesn_t_t do anything_co_ you have to implement it._lt_/p_gt__lt_p_gt_It doesn_t_t draw the mesh_co_ it just changes the particle initial status that will be taken in account by the next _lt_em_gt_SPS.setParticle()_lt_/em_gt_ call._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_example _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_// declares initParticleSPS.initParticles _eq_ function() {  for (var i _eq_ 0_sm_ i &lt_sm_ SPS.nbParticles_sm_ i++) {    SPS.particles[i].position.x _eq_ Math.random() * 100_sm_    SPS.particles[i].position.y _eq_ Math.random() * 100_sm_    SPS.particles[i].position.z _eq_ Math.random() * 100_sm_  }}SPS.initParticles()_sm_    // calls initParticles _dd_ the particle status are now changed_co_ not the SPS meshSPS.setParticles()_sm_    // the mesh is now updated from the particle status_lt_/pre_gt__lt_p_gt_Same thing with _lt_em_gt_SPS.recycleParticle(particle)_lt_/em_gt_ what is not called automatically and that you have to implement by your own and to call when you need (cf the first example about _lt_em_gt_updateParticle_lt_/em_gt_) _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_SPS.recycleParticle _eq_ function(particle) {  particle.position.x _eq_ 0_sm_  particle.position.y _eq_ 0_sm_  particle.position.z _eq_ 0_sm_}_lt_/pre_gt__lt_p_gt_This is the basic principle that will cover most of the cases_co_ I hope._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_There are plenty of other advanced features (immutable SPS - 3JS BufferGeometry like -_co_ colors and uvs per particle_co_ particle vertex live update_co_ billboard mode_co_ optimizers_co_ pickable particle -up to come-_co_ etc) that you will discover by reading the doc _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_The SPS is quite finished (pickable just missing for now) and the documentation is updated everyday according to the latest features._lt_/p_gt__lt_p_gt_I will code many PG examples once everything is over._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-11-03T16:00:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Just added the support for pickable particles with the optional _lt_em_gt_pickedParticles_lt_/em_gt_ array _dd__lt_br_gt__lt_em_gt_SPS.pickedParticles_lt_/em_gt_ is an array of _lt_em_gt_{idx_dd_ particleIndex_co_ faceId_dd_ particleFaceId }_lt_/em_gt__co_ with an element per SPS global mesh face._lt_/p_gt__lt_div_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var SPS _eq_ new BABYLON.SolidParticleSystem(_t_SPS_t__co_ scene_co_ {pickable_dd_ true})_sm_// add shapes and build SPS mesh as usualSPS.setParticles()_sm_scene.onPointerDown _eq_ function(evt_co_ pickResult) {   var idx _eq_ SPS.pickedParticles[pickResult.faceId].idx_sm_      // get the particle idx from the picked faceId   var p _eq_ SPS.particles[idx]_sm_                                // get the related particle in the SPS   p.color.r _eq_ 1_sm_                                             // change the particle color to red   p.color.b _eq_ 0_sm_   p.color.g _eq_ 0_sm_   SPS.setParticles()_sm_                                        // finally update the SPS}_sm__lt_/pre_gt__lt_/div_gt__lt_p_gt_This array is created and populated only if the SPS is declared explicitly as _lt_em_gt_pickable_lt_/em_gt_ in order to save memory._lt_/p_gt__lt_p_gt_Documentation soon_co_ probably tomorrow _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2015-11-03T17:05:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Sweet! In my maze game I already used SPS for the enemy explosions (wich looks awesome_co_ so thanks for that jerome!)... with pickable particles I want to try making an asteroid field with one SPS and create another SPS when an asteroid has been picked/destroyed and make it explode into little derbies. I imagine that might be pretty cool _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-11-04T00:36:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Jerome_co_ I didn_t_t read the docs (much).  I just saw how large it was_co_ and how it was sectioned_co_ and the playgrounds (and their code comments)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So_co_ its not that you didn_t_t explain well enough.  You did fine.  I just skimmed (quick scanned) the doc while I finished my coffee before I went fishing.  But I DID see _qt_udpate_qt_  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I got skunked!  (no fish)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But hey_co_ thanks for the explanation!  That was nice of you to do that.  I should have told you that I just skimmed them... sorry._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Ok_co_ now_co_ hmm.  It_t_s a single dynamicBuffer mesh_co_ right?  These suffer from the same depth-rendering/alpha issues as the standard particles_co_ correct?  From a single SPS_co_ the particles cannot be BEHIND something and also in-front-of something_co_ right?  errr._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you place a spacecraft in the center of that asteroid field_co_ all the particles will render BEHIND it or IN-FRONT-OF it (afore it?)... but they can_t_t be both? _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What the heck am I thinking about_co_ here?  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_(thx)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]