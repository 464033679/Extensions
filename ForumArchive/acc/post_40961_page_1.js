[{"Owner":"CorayThan","Date":"2018-10-30T19:39:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIs there a simple way to check if a mesh is in the frustum and not hidden by other meshes? It seems pretty easy to check if the camera is aimed at the mesh in general_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_scene.isActiveMesh(mesh)_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tBut I want to check if the mesh is not hidden by other meshes. I_t_m creating a 3-D maze and need to move/lock the camera temporarily when certain objects hidden in the maze come into view._lt_br /_gt_\n\t_lt_br /_gt_\n\tIf I have to_co_ I can determine a geometric area where if the free camera is in that area and the mesh is active it is visible_co_ but I_t_d prefer to do it an easier / better way if possible.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ssaket","Date":"2018-10-31T05:06:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi and Welcome !_lt_br /_gt_\n\tYeah_co_ there are two methods (_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/api/classes/babylon.camera#isinfrustum_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/api/classes/babylon.camera#isinfrustum_lt_/a_gt_) and (_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/api/classes/babylon.camera#iscompletelyinfrustum_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/api/classes/babylon.camera#iscompletelyinfrustum_lt_/a_gt_) you_t_ll find them in Mesh/Camera class_co_  Regarding determining the geometric area you can use this as reference - _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#1BDA0J%230_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#1BDA0J#0_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"CorayThan","Date":"2018-11-28T01:05:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIn case anyone else comes across this_co_ what I was looking for was to use ray casting and check what the ray from the camera to the mesh hits_dd__lt_br /_gt_\n\t_lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_Ray.CreateNewFromTo(cameraPosition_co_ meshPosition)\nconst picked _eq_ scene.pickWithRay(ray)\nreturn picked.hit_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]