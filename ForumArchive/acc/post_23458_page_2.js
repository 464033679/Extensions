[{"Owner":"Deltakosh","Date":"2016-06-28T16:25:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt looks like a file that you reference is playing with array.trim() function. But this is NOT related to babylon.js\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is the code of the GetMeshesByTags_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/babylon.scene.ts#L2888_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/babylon.scene.ts#L2888_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt uses trim in several places like here_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Tools/babylon.andOrNotEvaluator.js#L34_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Tools/babylon.andOrNotEvaluator.js#L34_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf trim does not exist anymore_co_ then this means that ANOTHER script modifies it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mwpowellhtx","Date":"2016-06-28T16:52:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ I hear what you_t_re saying_co_ but I cannot verify that in either case_co_ for PG_co_ or in my own app.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFrom the PG_co_ using Chrome_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_Array.prototype.trim\nundefined\nString.prototype.trim\nfunction trim() { [native code] }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tAnd in my own app_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_Array.prototype.trim\nundefined\nString.prototype.trim\nfunction trim() { [native code] }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tSo if there is something being added_co_ it is by one of the PG references_co_ not mine taking what is undefined away.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"mwpowellhtx","Date":"2016-06-28T16:54:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tAt any rate_co_ I_t_ve abandoned the broken tags approach for the time being. Using a simple _lt_em_gt___mytag _lt_/em_gt_approach_co_ which is working quite well.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]