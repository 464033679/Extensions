[{"Owner":"petemac","Date":"2015-10-02T16:30:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Does mobile safari have a limit of bones per mesh?_lt_/p_gt__lt_p_gt_When I load a mesh with 30 bones from blender_co_ it loads and displays fine._lt_/p_gt__lt_p_gt_However when I add one more bone and load the mesh with 31 bones it doesnt display on screen._lt_/p_gt__lt_p_gt_Ive tried numerous times with different models and no luck._lt_/p_gt__lt_p_gt_The mesh still displays perfectly in Google Chrome on my laptop._lt_/p_gt__lt_p_gt_It also displays perfectly in sandbox on my laptop._lt_/p_gt__lt_p_gt_Is there some sort of limitation on safari mobile? The Iphone6? Babylon?_lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-10-02T16:36:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_the limit is not really in the number of bones but in the number of variables allowed for a single shader. Babylon tries its best to compile the simpler shader possible but sometimes the browser is limiting what we can do_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Two options_dd__lt_/p_gt__lt_p_gt_- Remove bones_lt_/p_gt__lt_p_gt_- Uses software skinning_dd_ mesh.computeBonesUsingShaders _eq_ false_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"petemac","Date":"2015-10-02T17:08:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thank you!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Using _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm_background-color_dd_rgb(234_co_248_co_226)_sm__qt__gt_mesh.computeBonesUsingShaders _eq_ false works perfectly!_lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm_background-color_dd_rgb(234_co_248_co_226)_sm__qt__gt_However_co_ I am curious._lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If I have a mesh with 30 bones_co_ but 31 bones puts me over the limit by 1 bone._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Will two seperate mesh with 30 bones put me over the limit for shader uniforms?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt_The only drawback is that this operation can consume a lot of shaders uniforms (a limited resources representing the variables that can be sent from the CPU). On low-end devices this may be a problem as bones can swallow all the uniforms._lt_/div_gt__lt_/blockquote_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-10-02T19:21:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Please indicate the version of the _t_A_t_ processor you are using_co_ or the model.  It actually would be great to be able to collect limits for as many mobile devices as possible._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Also_co_ I am going to guess_co_ but I am pretty sure it is a per mesh limit._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"petemac","Date":"2015-10-02T22:11:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_A8 - iphone6_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-10-02T22:50:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_Will two seperate mesh with 30 bones put me over the limit for shader uniforms?_lt_/span_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_No as the limit is per mesh_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-10-05T15:59:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Would it be possible to make the following changes to_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_vertexData.ts_co_ and the definitions of methods that call it_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_    export interface IGetSetVerticesData {        isVerticesDataPresent(kind_dd_ string)_dd_ boolean_sm_        getVerticesData(kind_dd_ string_co_ copyWhenShared?_dd_ boolean)_dd_ any[]_sm_        getIndices(copyWhenShared?_dd_ boolean)_dd_ number[]_sm_        setVerticesData(kind_dd_ string_co_ data_dd_ any[]_co_ updatable?_dd_ boolean)_dd_ void_sm_        updateVerticesData(kind_dd_ string_co_ data_dd_ any[]_co_ updateExtends?_dd_ boolean_co_ makeItUnique?_dd_ boolean)_dd_ void_sm_        setIndices(indices_dd_ number[])_dd_ void_sm_    }    export class VertexData {        public positions_dd_ any[]_sm_        public normals_dd_ any[]_sm_        public uvs_dd_ any[]_sm_        public uvs2_dd_ any[]_sm_        public uvs3_dd_ any[]_sm_        public uvs4_dd_ any[]_sm_        public uvs5_dd_ any[]_sm_        public uvs6_dd_ any[]_sm_        public colors_dd_ any[]_sm_        public matricesIndices_dd_ any[]_sm_        public matricesWeights_dd_ any[]_sm_        public indices_dd_ number[]_sm_        public set(data_dd_ any[]_co_ kind_dd_ string) {         ..._lt_/pre_gt__lt_p_gt_Then when update is requested_co_ check if_lt_strong_gt_ instanceof Array&lt_sm_number&gt_sm__co_ _lt_/strong_gt_and only then make a throw away typed array for transmission_co_ otherwise it is already in transmission form.  All existing code should work_co_ but this will have the following advantages_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_ol_gt__lt_li_gt_Whatever type you give SetVertexData() is what will get saved (by reference)._lt_/li_gt_\t_lt_li_gt_updateVerticesDataDirectly() can be removed or depreciated._lt_/li_gt_\t_lt_li_gt_I could morph verts as float32Array using SIMD &amp_sm_ dirty bones in the same frame_co_ &amp_sm_ still go the cpu bone update route._lt_/li_gt__lt_/ol_gt__lt_p_gt_In my Morph 2.0_co_ under dev_co_ I would directly set the VertexData elements directly (they are public) when also doing a bone interpolation in the same beforerender call to avoid double transmission.  When morphing only_co_ just call updateVerticesData()_co_ and it should behave as updateVerticesDataDirectly() would._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_One other note_co_ could not the need to use the cpu bone update be detected using EngineCapabilities?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-10-05T16:47:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I see no issue with this as this is just related to types (so mainly a TS problem)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-10-05T18:09:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Will do_co_ not sure when. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I see that there is a MAX_VERTEX_UNIFORM_VECTORS capability _lt_a href_eq__qt_https_dd_//www.browserleaks.com/webgl_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.browserleaks.com/webgl_lt_/a_gt_ .  Would this work? Could put a method on skeleton like requiresCPUProcessing() if so. Have not completely thought this out_co_ just trying have a way that this could be figured out at runtime_co_ not hardcoding.  I am probably not a good choice for this part._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-10-05T21:34:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The issue is that the skeleton is not aware of other options active on the material (emissive_co_ diffuse? textures_co_ etc..) so this is not possible_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]