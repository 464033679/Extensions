[{"Owner":"SvenFrankson","Date":"2017-08-19T08:38:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi everyone_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m currently makind VR apps with BabylonJS_co_ and try to solve the issue of the canvas resolution. I_t_ve already found some discussions about this topic_co_ oddly none seems to concern the same issue as I do (it_t_s not about anti-aliasing_co_ as far as I understand_co_ it_t_s more about hardware pixel and css pixel)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf I open this playground in my phone _dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#JPJB3A%232_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#JPJB3A#2_lt_/a_gt_ (not VR_co_ the question is the same for mobile VR and mobile non-VR applications)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe pixels are too large. When watching the phone through Google Cardboard it_t_s even worse.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ data-fileid_eq__qt_14494_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_08/Screenshot_2017-08-19-10-20-25.jpg.b077fe19fbe7bc97bd54077d4d1ffc7a.jpg_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_Screenshot_2017-08-19-10-20-25.thumb.jpg.8ddb979e64d373151ddee1f41a058b2a.jpg_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_14494_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_08/Screenshot_2017-08-19-10-20-25.thumb.jpg.8ddb979e64d373151ddee1f41a058b2a.jpg_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis playground _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#JPJB3A%231_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#JPJB3A#1_lt_/a_gt_ is much better_co_ with hardwareScaling set to 0.25\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ data-fileid_eq__qt_14495_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_08/Screenshot_2017-08-19-10-20-11.jpg.25b9411ec8f6de209bb535934a0934f4.jpg_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_Screenshot_2017-08-19-10-20-11.thumb.jpg.b156770e4ca7f7588def5872c5ace9b6.jpg_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_14495_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_08/Screenshot_2017-08-19-10-20-11.thumb.jpg.b156770e4ca7f7588def5872c5ace9b6.jpg_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s fairly logical_co_ because my phone has 4 hardware pixels per _qt_layout pixel_qt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) I_t_m using a ZTE Axon 7 phone_co_ with 2500*1080 screen. A full screen canvas has width _eq_ 900px_co_ height_eq_450px in my browser. _lt_strong_gt_Do you encounter the same issues with your phone_lt_/strong_gt_ ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) Is there already an _lt_strong_gt_automatic built-in way to set the canvas resolution_lt_/strong_gt_ ? Like with the &lt_sm_meta&gt_sm_ or something ? (ie _dd_ without adding resizing code in the app)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t3) If no_co_ should not we add some code to _lt_strong_gt_recognize the screen dpi an set the hardwareScaling accordingly_lt_/strong_gt_ ? So it work _qt_out of the box_qt_ on mobile. Or is it to CPU-intensive to enforce x16 resolution ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks a lot for you inputs ! Have a nice week-end\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPS _dd_ I_t_ve also tried the scenes from _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5482_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/_qt_ rel_eq__qt__qt__gt_@davrous_lt_/a_gt_ -interesting- article here _dd_ _lt_a href_eq__qt_https_dd_//www.davrous.com/2017/07/07/from-zero-to-hero-creating-webvr-experiences-with-babylon-js-on-all-platforms/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.davrous.com/2017/07/07/from-zero-to-hero-creating-webvr-experiences-with-babylon-js-on-all-platforms/_lt_/a_gt_ _co_ I_t_m 90% sure I have the same issues with the examples like Sponza scene_co_ also the fact there are some textures ad lightning make it less obvious.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-08-19T19:03:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI tried it out on a OnePlus One and an S8.  Both rendered good with round edges on the sphere.  I bumped up the subdivs to 64 to make it more rounded.  I_t_m building also a VR game targeting mobile devices_co_ so interested in these types of issues.  Cheers.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"SvenFrankson","Date":"2017-08-19T20:32:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOh okay then it_t_s only on my phone_co_ too bad ^^_co_ seems like it will be harder to fix ! Thanks for the input anyway\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOut of curiosity_co_ which browser do you use ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-08-19T20:59:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m using Chrome dev.  Was looking at this MDN_dd_ _lt_a href_eq__qt_https_dd_//developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI didn_t_t look yet in babylon source to see what setHardwareScalingLevel does_co_ but might be a corelation or a way to auto-set?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-08-19T21:03:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJust checked source and default is set like this_dd__lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var limitDeviceRatio _eq_ options.limitDeviceRatio || window.devicePixelRatio || 1.0_sm_\nthis._hardwareScalingLevel _eq_ adaptToDeviceRatio ? 1.0 / Math.min(limitDeviceRatio_co_ window.devicePixelRatio || 1.0) _dd_ 1.0_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tSo_co_ you are overriding the _hardwareScalingLevel.  Maybe your browser doesn_t_t return window.devicePixelRatio_co_ so it defaults to 1.0?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"SvenFrankson","Date":"2017-08-20T00:12:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_ve updated the playgrounds_co_ they were identical so the bug could not appear ^^\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy phone returns window.devicePixelRatio _eq_ 4_co_ but if I do not override the value_co_ _hardwareScalingLevel is 1.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYet_co_ I think I solved it_co_ thanks ! When instantiating the engine_co_ you have to provide the 4th argument _lt_strong_gt_adaptToDeviceRatio._lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_constructor(canvasOrContext_dd_ HTMLCanvasElement | WebGLRenderingContext_co_ antialias?_dd_ boolean_co_ options?_dd_ EngineOptions_co_ adaptToDeviceRatio _eq_ false)_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tIn my case_co_ the following instantiation _dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_Main.Engine _eq_ new BABYLON.Engine(Main.Canvas_co_ true_co_ {}_co_ true)_sm_ _lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tDid the job ! Thanks a lot for your inputs !\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-08-20T14:52:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tGlad you figured it out.  Correct me if I_t_m wrong_co_ but passing in limitDeviceRatio_dd_ 0.25 won_t_t have the same experience on all devices.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tie_dd_ if you left it alone it would automatically be set to 1/4 for your phone.  my phone might end up as 1/2_co_ but Math.min(..) would take 0.25_co_ so maybe options should just be {}?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"SvenFrankson","Date":"2017-08-20T15:41:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tIndeed_co_ I made a typo copying the line_co_ it_t_s limiteDeviceRatio _eq_ 4_co_ not 0.25_co_ I updated my answer.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-08-20T16:15:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tWhat I meant was if there existed a phone with a devicePixelRatio higher than 4 (ie_dd_ 8) then they would still get the issue you had before_co_ so that maybe passing in limitDeviceRatio is not needed in conjunction with adaptToDeviceRatio_dd_ true in engine constructor?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"SvenFrankson","Date":"2017-08-21T07:55:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou_t_re right. Oddly_co_ when I tried without limitDeviceRatio_co_ I had no scaling at all_co_ so I thought the value was mandatory. But it now works_co_ so I guess it was due to caching issues during my tests.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks_co_ I update the answer !\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]