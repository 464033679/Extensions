[{"Owner":"newbie","Date":"2015-07-02T12:30:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello again. So as stated in the topic title i want to know if there is any alternative for getHeightAtCoordinates function. Here is the solution i thought of_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have a ground 3000x3000 loaded with createGroundFromHeightMap. The problem with getHeightAtCoordinates is that it is too slow._lt_/p_gt__lt_p_gt_For instance if i have a set of 200 points and if i try to find out the y coordinate for each one using a for loop_co_ the y is set to 0. One solution i thought of(knowing that the ground is not going to change) is to remember in an array all the y coordinates of all points (i know there are 9 000 000 y coordinates for the whole map) - or for the active part of the map_sm_ the first time i load up the map._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_My question would be_co_ is there anyway i can compute the y coordinates_co_ without relying on getHeightAtCoordinates?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thank you in advance._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Note_dd_ I_t_m only interested in height where coordinates are whole numbers (ex_dd_ y where x_eq_1.0 _co_ z_eq_2.0)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2015-07-02T14:47:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_d say that you could try breaking the ground mesh into several smaller parts_co_ for example a hundred chunks of 300x300. Then the picking algorithm used by _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_getHeightAtCoordinates _lt_/span_gt_will run much more smoothly. Actually you could also subdivide it into submeshes_co_ which should have pretty much the same effect._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Although it_t_s true that if you only need the height at the _qt_nodes_qt_ (i.e. points on the grid)_co_ the _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_getHeightAtCoordinates function is a waste of performance. In this case I_t_d say the simplest thing would be to read the Y component of the corresponding vertex. Something like_dd__lt_/span_gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var mesh _eq_ CreateGroundFromHeightMap(...)_sm_var positions_array _eq_ mesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm_// let_t_s say I want to know the height at X _eq_ 100 and Z _eq_ 300 (assuming there are 3000 subdivisions)// I can compute the corresponding vertex position in the array this way_dd_var pos_in_array _eq_ 100 + 3000 * 300_sm_// the positions array is constituted like that_dd_// [x1_co_ y1_co_ z1_co_ x2_co_ y2_co_ z2_co_ ..._co_ xN_co_ yN_co_ zN] where N is the last of the vertices var height _eq_ positions_array[pos_in_array*3 + 1]_sm_  // the Y component is in second place_co_ hence the +1_lt_/pre_gt__lt_p_gt_This is untested code but the principle should work out _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"newbie","Date":"2015-07-03T05:36:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi jahow. I actually already subdivided the ground mesh in chunks of 150x150 _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ and the getHeightAtCoordinates still lags behind. I_t_ll try your sugestion and see how it goes. Thank you!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"newbie","Date":"2015-07-03T08:17:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Your idea jahow works well i think only in the case where the number of subdivisions in the ground mesh matches the size of the ground mesh. (in that case we have information for all x_co_z coordinates which are nodes in the mesh ). In my case a 150x150 tile  is subdivided in 4x4 (25 subdivisions). So_co_ from the  below line_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var positions_array _eq_ mesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm__lt_/pre_gt__lt_p_gt_i get only information about the 25 nodes as expected_co_ but what i needed is the height for all 150*150 points (where coordinates are whole numbers). Also i can_t_t afford making a tile with that many nodes (hurts performance). I guess i_t_ll have to rely on _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_getHeightAtCoordinates after all. _lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2015-07-03T08:43:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_If your meshes are of reasonable size_co_ this function should work perfectly. My method of reading the Y component of vertices would have worked only if you had one single big mesh covering the whole ground._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_A grid mesh with 9 million faces is probably too much anyway to be honest _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"newbie","Date":"2015-07-03T09:17:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Every 150x150 tile is an actual ground mesh (i don_t_t use the subMesh implementation from babylon). Each tile has a variable number of subdivisions (depending on the terrain type on that tile). I divided the main ground with the same idea in mind_co_ to improve performance. I also thought that making the tile 150x150 would make the function _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_getHeightAtCoordinates _lt_/span_gt_pretty fast.  It just means that i_t_m doing something wrong. I_t_ll review my code and re-post._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thank you very much for the clarifying thoughts. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MarianG","Date":"2015-12-22T14:28:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi. I did something like that_co_ but I uploaded a map as babylonjs file_co_ . After that_co_ I create a 9 ground meshes_co_ I copy vertices_co_ normals_co_ uvs_co_ from file imported to created mesh_co_ .... all good_co_ but ground.getHeightAtCoordonate function don_t_t work too good. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It work only for 3 midle tiles_co_ others show_co_ all the time 0. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I call _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_m[i].refreshBoundingInfo()_sm__lt_/pre_gt__lt_p_gt_foreach mesh_co_ but not work_co_ and I can_t_t explain. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _lt_/p_gt__lt_p_gt_I_t_ll post a live demo soon..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-12-22T14:37:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co_ just wondering out loud -_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The createHeightMap function is using the image_t_s colors to create a heightmap_co_ using predefined variables (minimum height_co_ maximum height_co_ etc_t_). So_co_ technically_co_ you could calculate the height using the image_t_s pixels_co_ exactly like the createHeightMap function is doing. And this way you are not dealing with a long 3D calculation. This is a simple calculation that can be done every frame without a problem._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Is this a solution you might be able to use?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-12-22T16:12:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_nice idea !_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MarianG","Date":"2015-12-23T09:40:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This is not a bad idea_co_ but in this case I have another problem.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Take a look in console. _lt_a href_eq__qt_http_dd_//prntscr.com/9hkj9a_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//prntscr.com/9hkj9a_lt_/a_gt__lt_/p_gt__lt_p_gt_For almost the same pixel color_co_ i get extremely different values. _lt_/p_gt__lt_p_gt_In this case the character will go in zigzag._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MarianG","Date":"2015-12-23T10:05:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_And surprising_co_ _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_getHeightAtCoordonate function is faster than using Image pixel. _lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-12-23T12:45:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I am not sure how you calculated this_co_ but this is the way the function creates the mesh. So I would guess that the implementation is wrong rather than the function itself doesn_t_t work._lt_/p_gt__lt_p_gt_Better - The createFromHeightMap function creates a single mesh in a second or two. Maybe 3. Which means it calculates ALL heights in 3 seconds. So... _lt_/p_gt__lt_p_gt_Are you reading the image each time you run the function?_lt_/p_gt__lt_p_gt_Just create a array[height][width] with all of the heights and you have an O(1) operation to read them... As simple as that._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-12-23T13:47:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_actually these data already exist in the _lt_em_gt_positions_lt_/em_gt_ array of the mesh vertex data object _dd_ [ x1_co_ y1_co_ z1_co_ x2_co_ y2_co_ z2_co_ x3_co_ y3_co_ z3_co_ ... xN_co_ yN_co_ zN ]_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-12-23T14:12:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yes_co_ you will have to calculate the position in the array. But it will work as well _dd_-)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-12-23T14:47:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This gives me an idea that I won_t_t have time to implement for now infortunately _dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_if we want something like getAltitudeAtCoord(x_co_ z) _eq_&gt_sm_ returns y without sending a ray_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_we could get the _lt_em_gt_positions_lt_/em_gt_ array_lt_/p_gt__lt_p_gt_knowing how much subdivisions there are on the map width and on the map height_co_ it_t_s quite simple to  find in the _lt_em_gt_positions_lt_/em_gt_ array the four vertices around the wanted (x_co_ z) point by comparing x_co_ z and x1_co_ z1_co_ xi_co_ zi values_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_V1 ----- V2_lt_/p_gt__lt_p_gt_|  \\          |_lt_/p_gt__lt_p_gt_|   \\         |_lt_/p_gt__lt_p_gt_|    \\        |_lt_/p_gt__lt_p_gt_|     \\       |_lt_/p_gt__lt_p_gt_|      \\      |_lt_/p_gt__lt_p_gt_|       \\     |_lt_/p_gt__lt_p_gt_|        \\    |_lt_/p_gt__lt_p_gt_V3----- V4_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_then it_t_s quite easy to determine if the (x_co_z) point is in the facet(V1_co_ V3_co_ V4) or in the facet(V1_co_ V2_co_ V4)_co_ again with a simple comparison_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_at last_co_ it_t_s easy to compute (interpolation) the altitude y of (x_co_z) from the z values of the facet vertices._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_et voilà_lt_/p_gt__lt_p_gt_an iteration in the array_lt_/p_gt__lt_p_gt_3 comparisons and an interpolation computation_lt_/p_gt__lt_p_gt_and no ray emitted  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_this should be really very very fast_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_not sure I_t_m very clear_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-12-24T14:48:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_ok_co_ let_t_s try to explain_lt_/p_gt__lt_p_gt_We have a heightmap mesh (or a ribbon)_co_ we know that this mesh has m subdivisions on its X axis and n subdivisions on its Z axis_lt_/p_gt__lt_p_gt_We can get its _lt_em_gt_positions_lt_/em_gt_ array_co_ containing all the mesh vertex coordinates [x1_co_ y1_co_ z1_co_ x2_co_ y2_co_ z2 ...]_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now_co_ we know the 2D coordinates (x_co_ z) of a point P and we want to get its altitude y on the heighmap._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I guess we can find the y in less than m + n iterations and a calculation._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The algo could be like this _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_// first_co_ be sure (x_co_ y) is in the heightmap surfaceif (x &lt_sm_ positions[0] || x &gt_sm_ positions[m] || z &lt_sm_ positions[m -1] || z &gt_sm_ positions[positions.length -1]) { return_sm_ // x or z are off the heightmap }// find xvar i _eq_ 0_sm_var foundx _eq_ false_sm_while ( !foundx &amp_sm_&amp_sm_ i &lt_sm_ m) {  if (positions[i * 3] &lt_sm_ x ) {    i ++_sm_   } else {   foundx _eq_ true_sm_}// now x is in the i-th subdivision on the X axis// find zvar j _eq_ 0_sm_var foundz _eq_ false_sm_var zidx_sm_while (!foundz &amp_sm_&amp_sm_ j &lt_sm_ n) {  zidx _eq_ (j * m) + (3 * i) + 2_sm_  // index of current z coordinate in the array positions  if (positions[zdix] &lt_sm_ z) {    j++_sm_  } else {   foundz _eq_ true_sm_}// now z is in the j-th subdivision on the Z-axis// So P is between V1_co_ V2_co_ V3 and V4 from the schema of the former post// and V1 coordinates are _dd_// positions[(j * m) + (3 * i)]// positions[(j * m) + (3 * i) + 1]// positions[(j * m) + (3 * i) + 2]// V2 coordinates are _dd_ // positions[(j * m) + (3 * i) + 3]// positions[(j * m) + (3 * i) + 4]// positions[(j * m) + (3 * i) + 5]// V3 coordinates are _dd_ // positions[((j + 1) * m) + (3 * i)]// positions[((j + 1) * m) + (3 * i) + 1]// positions[((j + 1) * m) + (3 * i) + 2]_lt_/pre_gt__lt_p_gt_idem for V4  (V3 coords + 1) ..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Then it_t_s easy to check wether P is above or under the V1-V2 line in order to determine what facet P belongs to  _dd_ V1V2V3 or V1V2V4 (slope of V1 - V4)._lt_/p_gt__lt_p_gt_According to the facet found_co_ then we just compute the cross product of V1V2 and V1V3 (if it_t_s in the facet V1V2V3_co_ for instance) to get an orthogonal vector to this facet (or we get it from the _lt_em_gt_normals_lt_/em_gt_ array at the same index)._lt_/p_gt__lt_p_gt_This gives us this facet plane equation._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Finally we just compute_co_ from this equation and from the given x and z values_co_ the wanted y value._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_That_t_s all._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In brief _dd__lt_/p_gt__lt_p_gt_- less than n + m iterations to find the vectors V1_co_ V2_co_ V3_co_ V4 around the point P in the _lt_em_gt_positions_lt_/em_gt_ array _lt_/p_gt__lt_p_gt_- a slope computation (V1-V4) and a comparison to determine what facet P belongs to in the quad V1V2V3V4._lt_/p_gt__lt_p_gt_- a cross product to get the facet normal_co_ so its plane equation_lt_/p_gt__lt_p_gt_- a simple calculus to apply this equation to the given x and z to get y_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So less then (n + m) iteration and 3 simple math operations._lt_/p_gt__lt_p_gt_This should be really faster than a ray intersection process._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MarianG","Date":"2015-12-24T15:24:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi._lt_/p_gt__lt_p_gt_Thank you both_co_ for the good explanations. _lt_/p_gt__lt_p_gt_Unfortunatelly I haven_t_t time now to implement_co_ but I hope_co_ next week I_t_ll do._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I wish you happy holidays._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-12-26T09:04:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I had an idea of another lead merging the Raanan_t_s pre-computed array approach and the per face altitude computation as explained in my former post._lt_/p_gt__lt_p_gt_This should be (I hope) really really fast and should be able to compute thousands of altitudes per frame._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The idea is _dd__lt_/p_gt__lt_p_gt_Define a two dimension array_co_ one for width subdivisions_co_ the other for the length subdivisions _dd_ alt_lt_em_gt_[j]_lt_/em_gt__lt_/p_gt__lt_p_gt__lt_em_gt_Each element of the array will depict a quad V1V2V3V4_co_ so 2 facets_lt_/em_gt__lt_/p_gt__lt_p_gt__lt_em_gt_So we precompute from the mesh _lt_/em_gt__lt_em_gt__lt_em_gt_positions_lt_/em_gt__lt_/em_gt__lt_em_gt_ array once for each element as explained in the former post _dd__lt_/em_gt__lt_/p_gt__lt_p_gt__lt_em_gt_- the slope V1V4 in order to determine in what facer the point P(x_co_z)_co_ that want to get the altitude_co_ is_lt_/em_gt__lt_/p_gt__lt_p_gt__lt_em_gt_- two vector4 (a_co_b_co_ c_co_ d) what will be each facet plane equation _dd_ ax + by + cz + d _eq_ 0_lt_/em_gt__lt_/p_gt__lt_p_gt__lt_em_gt_and populate the array with these values _dd__lt_/em_gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_{slope_dd_ val_slope_co_ facet1_dd_ vector4_1_co_ facet2_dd_ vector4_2}_lt_/pre_gt__lt_p_gt__lt_em_gt_Given a point P(x_co_z)_co_ we want to get its y on the the heightmap sized (width_co_ length) with m_co_ n subdivisions._lt_/em_gt__lt_/p_gt__lt_p_gt__lt_em_gt_It_t_s easy then to access the relative quad in the array_lt_/em_gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var i _eq_ Math.floor(x * m / width)_sm_  // or modulo calculationvar j _eq_ Math.floor(z * n / length)_sm_  // or modulo calculationvar quad _eq_ alt[i][j]_sm__lt_/pre_gt__lt_p_gt__lt_em_gt_Then with quad.slope compared to (x_co_z) and a tiny computation_co_ we know if P belongs to the facet1 ou facet2_lt_/em_gt__lt_/p_gt__lt_p_gt__lt_em_gt_Once we know the facet_co_ we just apply x_co_ z values to the facet plane equation to get y_lt_/em_gt__lt_/p_gt__lt_p_gt__lt_em_gt_ _lt_/em_gt__lt_/p_gt__lt_p_gt__lt_em_gt_This algo has no iteration (expect the precomputation before) then at run time_co_ only 3 simple math operations._lt_/em_gt__lt_/p_gt__lt_p_gt__lt_em_gt_ _lt_/em_gt__lt_/p_gt__lt_p_gt__lt_em_gt_[EDIT] just reading the code of CreateGroundFromHeightmap_co_ this seems to be even more simpler because there aren_t_t two parameters m and n subdivisions_co_ but only one parameter _lt_/em_gt__lt_em_gt__lt_em_gt_subdivisions_lt_/em_gt__lt_/em_gt__lt_em_gt_ used as well for the map width and length_lt_/em_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-12-28T14:03:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_BTW_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_is it possible to get back the _lt_em_gt_positions_lt_/em_gt_ array of a heightmap ground ?_lt_/p_gt__lt_p_gt_it doesn_t_t seem to have a PositionKind vertex data array ...  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_[EDIT] here_t_s a PG _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#3NEC1_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#3NEC1_lt_/a_gt__lt_/p_gt__lt_p_gt_See the lines 41-42 _eq_&gt_sm_ positions is null_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-12-28T16:45:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_heeelp_co_ I would like not to scan the image again  to re-compute the positions._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MarianG","Date":"2015-12-28T17:40:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi jerome._lt_/p_gt__lt_p_gt_Positions are there_co_ but the ground is not ready yet. It happens..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I added a setTimeout function._lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#3NEC1%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#3NEC1#1_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-12-28T17:41:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_oops_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m feeling dumb_lt_/p_gt__lt_p_gt_I just forgot the image download time_co_ tssss_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-12-28T21:27:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The last variable of the create heightmap function is a callback function that is called once the geometry was created. So no need to assume downloading time with getTimeout! _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_here - _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#3NEC1%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#3NEC1#2_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-12-29T09:22:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_yep thank_co_ that_t_s the one I used for my proto of getAltitude_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-12-29T14:17:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_My algo works fine now_co_ _lt_/p_gt__lt_p_gt_I_t_ll do a PG soon_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]