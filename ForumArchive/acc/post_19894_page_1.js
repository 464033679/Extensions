[{"Owner":"Dal","Date":"2016-01-16T00:08:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p style_eq__qt_margin-top_dd_0px_sm_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_line-height_dd_22.4px_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ style_eq__qt_color_dd_rgb(255_co_255_co_255)_sm_text-decoration_dd_underline_sm_padding_dd_0px 5px_sm_font-size_dd_12.6px_sm_background_dd_rgb(48_co_132_co_196)_sm__qt__gt_@Deltakosh_lt_/a_gt_ I_t_ve found a slight annoyance when using renderingGroupId to set the skybox to draw behind everything else... _lt_br_gt_\n\tIf we set the renderingGroupId _eq_ 0 to the sky to force it to the back_co_ then EVERY single other object needs to be set to renderingGroupId &gt_sm_ 0 in order to appear in front of the sky. \n_lt_/p_gt_\n\n_lt_p style_eq__qt_margin-bottom_dd_0px_sm_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_line-height_dd_22.4px_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_\n\tCould we perhaps have renderingGroupId default to 1 if not specified for new objects_co_ to allow us space both behind and in front of the default? Or better yet have the groups renamed to -1_co_0_co_1_co_2 so that it_t_s clear we_t_re setting it to behind the default layer?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-01-16T03:57:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou can also think about having two scenes with the first one hosting only the sky\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut I agree with you we may think about having a -1 in rendergroupID\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pascal Bayer","Date":"2018-03-14T12:02:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAre there any news on that topic? I_t_m facing the same issue using a ground plane and outlines for scene elements that disappear at the bottom by placing them directly on the plane. There is a workaround by manually setting the renderingGroupId for each newly added item. However having the default referring to _qt_1_qt_ will allow to explicitly setting elements as background elements_co_ e.g. the ground plane in my case. Also an enum with s.th. like _qt_RENDERGROUP_BACKGROUND_qt__co_ _qt_RENDERGROUP_DEFAULT_qt__co_ (_qt_RENDERGROUP_FOREGROUND_qt_ and _qt_RENDERGROUP_TOPMOST_qt_) might help for better readability of the code.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-03-14T16:54:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey Pascal!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tyou can also think about having two scenes\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOne for the background and one for all other elements\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]