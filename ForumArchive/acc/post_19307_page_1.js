[{"Owner":"heavymetalmonk","Date":"2015-12-17T09:16:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_We are importing several meshes from blender. Even though they_t_re clearly in different places_co_ the mesh.position for all the meshes is the same_co__lt_br_gt_                    console.log(mesh.position)_sm_              _lt_br_gt_                   _lt_br_gt_                    console.log(mesh.getPositionExpressedInLocalSpace()_sm_                 _lt_br_gt_                _lt_br_gt_                    console.log(mesh.getAbsolutePosition()_sm__lt_br_gt_                  _lt_br_gt_                    var m _eq_ new BABYLON.Matrix()_sm__lt_br_gt_                    mesh.getWorldMatrix().invertToRef(m)_sm__lt_br_gt_                    var v _eq_ BABYLON.Vector3.TransformCoordinates(mesh.position_co_ m)_sm__lt_br_gt_                    console.log(v)_sm__lt_br_gt_ _lt_br_gt_Above 4 results are same for every mesh._lt_br_gt_It_t_s as if every mesh has it_t_s own origin and it_t_s position is being calculated with respect to that._lt_br_gt_What_t_s happening here?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"MarianG","Date":"2015-12-17T13:26:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi._lt_/p_gt__lt_p_gt_Try  _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_mesh.computeWorldMatrix(true)_sm__lt_/pre_gt__lt_p_gt_before to check for position._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"heavymetalmonk","Date":"2015-12-17T13:48:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_hi._lt_/p_gt__lt_p_gt_It still gives the same position for all the meshes. We_t_re using SceneLoader.ImportMesh to load the meshes as a babylon file. We are trying to rotate individual meshes after the import_co_ but the center of rotation is the same for all the meshes and on investigation their positions are also the same._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-12-17T15:36:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_hey_co__lt_/p_gt__lt_p_gt_No code that got you where you are_co_ only diagnostic logs.  Try reading .babylon in text editor.  Search for_dd_ _qt_position_qt__dd_[_lt_/p_gt__lt_p_gt_(including quotes).  That will break the problem in 2.  If the 3 #_t_s following each successful search are the same_co_ then the issue is before import_co_ else after._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ChrisR","Date":"2015-12-17T21:45:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Also_co_ what could be a possibility_co_ try checking mesh.getPivotMatrix()_sm_ if they all have different locations on the pivot matrix that will change its location._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Since the complete matrices chain is_dd_ _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_PivotMatrix x Scaling x Rotation x Translation_lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_Just a thought_lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BitOfGold","Date":"2015-12-18T09:42:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I think this is correct behaviour - when you import an individual mesh_co_ it is without the position in the scene._lt_/p_gt__lt_p_gt_I have a complete pack of meshes in a .babylon file_co_ and I need to import them as assets (without position)_lt_/p_gt__lt_p_gt_If you import a full scene_co_ positions are imported too._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-12-20T01:16:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_In my opinion_co_ BitofGold (love the name) has _qt_a_qt_ correct answer_co_ depending on how you have set up your scenes and how you are importing scene elements from Blender. If you are importing a single mesh_co_ it will always import to a position located at the origin by default. And without viewing your Blender files_co_ we have no idea what the issue might be_co_ other than what BitofGold has expressed from their experience. However_co_ if you are importing one scene with multiple meshes_co_ then they should retain their positions in reference to the origin. But exporting individual meshes should not retain their position in relation to the origin by default._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you wish to maintain an object_t_s position in cartesian space when exported individually_co_ one way to do this is to parent the object to a null or other object_t_s axis located at the origin_co_ then the hierarchy should maintain the offset_co_ and you will be able to manipulate the object_t_s local transforms as normal. I haven_t_t tried this myself_co_ but in all my experience_co_ I would be completely baffled if parenting to any null or other object with an axis_co_ doesn_t_t import the object correctly in it_t_s relationship to it_t_s parent. But again_co_ I haven_t_t personally tried this from Blender_co_ and perhaps this isn_t_t a solution for your needs. Based upon what you_t_ve posted_co_ I would recommend merging all objects into a single Blender scene_co_ and they should then maintain their offsets to the origin. However_co_ if this doesn_t_t work_co_ then you can certainly parent them all to a single object such as a null_co_ and again_co_ a hierarchy will almost always maintain all local offsets to their parent_co_ and will also allow you to transform all objects together with a single position change on the parent - if this is something you may want to do in your scene - either for animation_co_ or to avoid setting different positions for lights_co_ cameras_co_ and other elements and proceedures - if you already have objects and elements in a scene and are adding additional objects upon import._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_DB_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-12-20T17:22:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I cannot find any source code which backs up that the behavior of _lt_strong_gt__lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_SceneLoader.ImportMesh_lt_/span_gt__lt_/strong_gt_ processes a mesh_t_s position any differently then _lt_strong_gt__lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_SceneLoader.Load_lt_/span_gt__lt_/strong_gt_ / _lt_strong_gt__lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_SceneLoader.Append_lt_/span_gt__lt_/strong_gt_._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_strong_gt__lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_SceneLoader.ImportMesh_lt_/span_gt__lt_/strong_gt_ calls_lt_strong_gt__lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_ plugin.importMesh_lt_/span_gt__lt_/strong_gt__co_ passing the array to put the reconstituted meshes in.  _lt_strong_gt__lt_span style_eq__qt_font-family_dd_arial_co_ helvetica_co_ sans-serif_sm__qt__gt_SceneLoader.ImportMesh_lt_/span_gt__lt_/strong_gt_ does not do anything the array afterward_co_ except forward it on to the on success callback._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_strong_gt__lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_plugin.importMesh_lt_/span_gt__lt_/strong_gt_ calls _lt_strong_gt__lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_Mesh.Parse_lt_/span_gt__lt_/strong_gt_ at the very end of the loop it has and never refers to the mesh once parsed._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_strong_gt__lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_Mesh.Parse_lt_/span_gt__lt_/strong_gt_ assigns the meshes position with the value from the parsed data coming from the file.  Never touches it again._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I needed to do this checking_co_ since I do not really use .babylon files.   I do not really care_co_ but did not want this thread to get saved un-challenged with something that might not be true.  If this is expected behavior_co_ I cannot prove it._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-12-20T18:01:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This is weird! I can confirm there is NO difference between mesh importation and scene loading_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_mesh.position SHOULD be set everytime. Can you share a sample that repro the issue?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"heavymetalmonk","Date":"2015-12-21T11:07:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_The issue was in the babylon file exported from blender. In order to address this issue we wrote a script to assign local origins to the individual meshes directly in blender._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-12-21T15:20:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Interesting.. this should not be required..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-12-21T18:17:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I think we are going to need a test .blend in order to do anything.  I have a QA .blend that Gryff built for me_co_ which lays out a bunch of cubes.  The camera has an animation which drives a circuit through them.  They are not all exported to 0_co_0_co_0._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Would by any chance these meshes have skeletons?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gryff","Date":"2015-12-21T19:44:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Without looking at the .blend files for the models it is quite difficult to tell what is going on - but I suspect it lies with the origins of the models._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In the image below _co_ the are 2 pics of the Blender 3D window. In A_co_ there are three cubes - all have the same origin at position 0_co_0_co_0.(the yellow dot inside the little red/white circle._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In B_co_ each cube has its own unique origin (orange dots)  - [3.112_co_0_co_-0.8688]_co_ [4.112_co_-1_co_5.1674] and [-2.82_co_1_co_5.1674]. Notice one cube as the origin set at a corner - useful for making simple animated doors._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The exported BJS file for both results in the same 3D display of the cubes._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So I think what you maybe looking at is _lt_u_gt_not_lt_/u_gt_ the fault of Blender or the BJS exporter_co_ but rather the style of modeling in Blender._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_cheers_co_ gryff _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_&lt_sm_fileStore.core_Emoticons&gt_sm_/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt__lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2015/post-7026-0-60893600-1450726718.png_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2015/post-7026-0-60893600-1450726718.png_qt_ data-fileid_eq__qt_5878_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_post-7026-0-60893600-1450726718.png_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-12-21T20:04:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_If that is the case_co_ you could move the origin using shift-crtl-alt-C.  It brings up a menu where one of the options is _qt_Origin to 3D Cursor_qt_. Another is _qt_Origin to Center of Mass_qt_.  Both sound better than having to have a python script._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-02-22T16:58:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYep_co_ _lt_em_gt_origin to geometry_lt_/em_gt__co_ too (might need to SELECT the geometry).  Works fine. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tMe_co_ personally... I was using the _qt_pivot_qt_ settings on a top toolbar... but I think that is for Blender in-editor pivot points.  _qt_Origin_qt_ is the term we are looking for (as stated above).  It can be found in object mode... tools tab/panel. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tPosition (and other settings) can be _qt_hacked_qt_ in the .babylon file if you have an editor that doesn_t_t puke on JSON long-lines.  Gist editor seems to work fine_co_ and if you are driving Windows... use notepad or similar.  (I am a newbie to this stuff_co_ but these are the things that worked for me_co_ recently.)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"cosmicgirl","Date":"2016-06-03T04:48:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHad the same problem in 3dsmax 2013 . Problem was_co_ that meshes_t_ pivots were at the same position on the 3dsmax scene_co_ seems like babylonjs determines mesh_t_s position by the position of it_t_s pivot. Tried selecting the meshes and centering the pivot  to object and re-exporting them_co_ but this didn_t_t solve the problem.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSolution_dd_ select and export meshes ( as OBJ file for ex.) and then re-import them_co_ in the import dialog check _qt_Center Pivots_qt_ ( top right corner ) _co_ after the meshes have pivots centered_co_ export them with babylonjs exporter.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHope this helps anyone.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]