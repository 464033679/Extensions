[{"Owner":"binyan","Date":"2014-04-24T17:50:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi there_co__lt_/p_gt__lt_p_gt_I_t_d like to procedurally generate a height map in run time and don_t_t want to save it to the image_co_ as it costs in additional overhead._lt_/p_gt__lt_p_gt_I_t_m looking for a way to use 2d array instead of image url (the array dimension may serve as a number of subdivisions). _lt_/p_gt__lt_p_gt_Obviously I don_t_t want to rewrite the CreateGroundFromHeightMap function_co_ because this function is works fine and there is no need at all to reinvent a wheel._lt_/p_gt__lt_p_gt_What I_t_d expect for_co_ is that CreateGroundFromHeightMap will consist of two functions - the basic one_co_ which receives the two dimensional array_co_ and the wrapper function which converts the image to the 2d array._lt_/p_gt__lt_p_gt_I_t_m wondering how can I do it without changing the code of the framework (maybe I_t_m missing something)_co_ and why its_t_s not done this way so far?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_P.s. If you will look at the implementation of CreateGroundFromHeightMap_co_ you will notice that this is what actually happening there - first of all get the data from the image_co_ and then build the height map. It_t_s just not organized well (or_co_ again_co_ maybe I_t_m missing something). _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-24T22:06:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It will be available in the next version _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-04-26T13:15:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Binyan_co_ why not invent your own wheel?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You have seen the Mesh.CreateGroundFromHeightMap function near the bottom of _lt_strong_gt__lt_u_gt__lt_a href_eq__qt_https_dd_//raw.githubusercontent.com/BabylonJS/Babylon.js/master/Babylon/Mesh/babylon.mesh.js_qt_ rel_eq__qt_external nofollow_qt__gt_Mesh-class source code_lt_/a_gt__lt_/u_gt__lt_/strong_gt_.  Why not copy it_co_ and put it into your own code as a standard function?  See where it says var buffer _eq_ blah blah?  Just force a 2-dimensional array of 0-255 values in there.... with a crowbar. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Once you have your own CreateGroundFrom2DArray function_co_ you are the boss.  Just a thought.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Maybe put a little note at the top_dd_  _qt_I didn_t_t borrow any of this code from babylon.js core.  I wrote it all myself while blindfolded and working outside during a hail storm.  Ain_t_t I wonderful?_qt_  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"binyan","Date":"2014-05-06T16:12:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Can anybody explain me what_t_s going on in this line in _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_CreateGroundFromHeightMap method?_lt_/span_gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var position _eq_ new BABYLON.Vector3((col * width) / subdivisions - (width / 2.0)_co_ 0_co_ ((subdivisions - row) * height) / subdivisions - (height / 2.0))_sm__lt_/pre_gt__lt_p_gt_I_t_m staring at it almost an hour and still cannot figure out how subdivisions are taken in account here._lt_/p_gt__lt_p_gt_As far as I see there is a quite simple transformation but it doesn_t_t come to my mind._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-05-06T19:16:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hiya binyan.  That is a mesh traverser.  Given a ground of ANY width (x) and height (z)_co_ divided by any amount of subdivisions_co_ this positioner line visits each row and column of that subdivided width and height.  Again_co_ height is Z_co_ not Y._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you make a ground... and set it_t_s material wireframe_co_ it visits every intersection point (every vertex).  (it traverses vertices)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_strong_gt__lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/misc/binyan_traverse/traverse.htm_qt_ rel_eq__qt_external nofollow_qt__gt_Here is a test_lt_/a_gt__lt_/u_gt__lt_/strong_gt_ I made_co_ and _lt_strong_gt__lt_u_gt__lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/misc/binyan_traverse/traverse.zip_qt_ rel_eq__qt_external nofollow_qt__gt_its zip_lt_/a_gt__lt_/u_gt__lt_/strong_gt_.  You will see your line in the _t_traverse_t_ function which is called once per frame.  i have a speed-slower in there_co_ so this test will give you terrible frame rates.  It is slowed down so you can watch the box traverse.  Notice I used the global variables width_co_ height_co_ and subdivisions... to make the ground.  Then later_co_ down by the traverse function_co_ I use those globals to make a few more globals such as rows and cols.  I could not use nested FOR loops inside a animation function such as traverse()_co_ because that would bring the render loop to a dead stop._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_My code is probably quite bad.  I wrote it quick._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Hope this helps._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"binyan","Date":"2014-05-06T20:24:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thank you Wingnut_co_ now it_t_s much clearer._lt_/p_gt__lt_p_gt_But what happens when a number of subdivisions is greater than width and height?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_P.S. Btw_co_ height is very confusing in this case. Don_t_t you think that length would be a better name?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-05-06T22:06:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_My pleasure.  It is quite common for the number of subdivisions to be a larger number than the width and height (length/depth).  Lets say you made a ground 10 units by 10 units_co_ with 100 subdivisions.  Then each row and column would be how wide?  Yep. .1 units (1/10 of a unit).  The _t_subdivisions_t_  _eq_ how many times do we divide-up the width and height.  Keep your ground.material.wireframe _eq_ true/1... and make a few hundred different grounds.  Experiment_co_ friend.  Put in some hours...  drive the framework.  Its not just really fun_co_ but its full of learning_co_ too.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Yes_co_ the term _t_height_t_ meaning the z-axis... is a bit confusing... especially when used with heightMaps.  The authors of the framework are reading our conversation_co_ and if there is a way to change it without breaking lots of things_co_ they will. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I noticed another thing today... with createSphere... where the subdivisions is before the size.... in the constructor parameters/args.  They should probably switch places.  We will see what happens in the future.  But you are really smart_co_ I can tell_co_ so you can figure out any strange things.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You are probably close to building your array.  Good luck with that._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"FreeFrags","Date":"2014-09-26T06:40:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm_background-color_dd_rgb(234_co_248_co_226)_sm__qt__gt_Any luck yet with this? I see that this will be available in the next version_co_ I checked the source now and it looks like it still needs to be added or did i overlook something? _lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm_background-color_dd_rgb(234_co_248_co_226)_sm__qt__gt_it would be nice if we can somehow create _qt_holes_qt_ in the ground too_co_ so that if there is no data a hole is visible in the ground._lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-09-26T15:32:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This is how to do it_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var ground _eq_ new BABYLON.Mesh(name_co_ scene)_sm_var vertexData _eq_ VertexData.CreateGroundFromHeightMap(width_co_ height_co_ subdivisions_co_ minHeight_co_ maxHeight_co_ buffer_co_ heightMapWidth_co_ heightMapHeight)_sm_vertexData.applyToMesh(ground_co_ false)_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"FreeFrags","Date":"2014-09-29T08:22:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_i took a look at the _lt_span_gt_VertexData_lt_/span_gt__lt_span_gt_._lt_/span_gt__lt_span_gt_CreateGroundFromHeightMap you pointed out. Either i didnt understand it fully or its just not made for what i was looking for. Id like to be able to create a ground using an array filled with heights. the ground should be able to have holes in it. _lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span_gt_i made a function which does this_co_ its a very dirty way of achieving this as it still keeps the vertex data in the ground mesh it just skips the indices. I thought why not share it but if there is a better way to do this please let me know. _lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_div_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_CreateGroundFromArray _eq_ function (width_co_ height_co_ subdivisions_co_ buffer_co_ bufferWidth_co_ bufferHeight) {    var vertexData _eq_ new BABYLON.VertexData()_sm_    vertexData.positions _eq_ []_sm_    vertexData.normals _eq_ []_sm_    vertexData.indices _eq_ []_sm_    vertexData.uvs  _eq_ []_sm_    var row_co_ col_sm_    var indicesToSkip _eq_ {}_sm_    var pos _eq_ 0_sm_    for (row _eq_ 0_sm_ row &lt_sm__eq_ subdivisions_sm_ row++) {        for (col _eq_ 0_sm_ col &lt_sm__eq_ subdivisions_sm_ col++) {            if (buffer[pos] * 0.1 _eq__eq__eq_ -12345.6) {                indicesToSkip[pos] _eq_ true_sm_                vertexData.positions.push(0_co_ 0_co_ 0)_sm_                vertexData.uvs.push(0_co_0)_sm_            }            else            {                // Add  vertex                vertexData.positions.push((col * width) / subdivisions - (width / 2.0)_co_ buffer[pos]_co_ ((subdivisions - row) * height) / subdivisions - (height / 2.0))_sm_                vertexData.uvs.push(col / subdivisions_co_ 1.0 - row / subdivisions)_sm_            }                        pos++_sm_        }    }    var subdivisionsPlus _eq_ subdivisions + 1_sm_    for (row _eq_ 0_sm_ row &lt_sm_ subdivisions_sm_ row++) {        for (col _eq_ 0_sm_ col &lt_sm_ subdivisions_sm_ col++) {                        var indexA _eq_ col + 1 + (row + 1) * subdivisionsPlus_sm_            var indexB _eq_ col + 1 + row * subdivisionsPlus_sm_            var indexC _eq_ col + row * subdivisionsPlus_sm_            var indexD _eq_ col + (row + 1) * subdivisionsPlus_sm_            var indexE _eq_ col + row * subdivisionsPlus_sm_                        var needsToBeSkipped _eq_ false_sm_            if (!!indicesToSkip[indexA])                needsToBeSkipped _eq_ true_sm_            else if (!!indicesToSkip[indexB])                needsToBeSkipped _eq_ true_sm_            else if (!!indicesToSkip[indexC])                needsToBeSkipped _eq_ true_sm_            else if (!!indicesToSkip[indexD])                needsToBeSkipped _eq_ true_sm_            else if (!!indicesToSkip[indexE])                needsToBeSkipped _eq_ true_sm_                        if (!needsToBeSkipped)            {                //Triangle 1 and triangle 2                vertexData.indices.push(indexA_co_ indexB_co_ indexC_co_ indexD_co_ indexA_co_ indexE)_sm_            }        }    }    // Normals    BABYLON.VertexData.ComputeNormals(vertexData.positions_co_ vertexData.indices_co_ vertexData.normals)_sm_    // Result        return vertexData_sm_}_sm__lt_/pre_gt__lt_/div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_to use this function just pass it a _qt_buffer_qt_ with heights for each vertex (a height of -12345.6 will result in a hole)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Edit_dd_ Updated code with my latest version_lt_/p_gt__lt_p_gt_Edit 2_dd_ Updated code with my latest version_lt_/p_gt__lt_p_gt_Edit 3_dd_ Updated code major performance increase_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If anyone finds any further optimizations please let me know _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"yorke","Date":"2017-04-14T11:08:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tRe-up this thread_dd_ i_t_m having problems using function CreateGroundFromHeightMap with a buffer containing elevation data_co_ rather than using a .png. I_t_m using babylon 2.5.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve not problems creating the terrain with a png_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tvar ground _eq_ BABYLON.Mesh.CreateGroundFromHeightMap(_qt_ground_qt__co_ _qt_perlin.png_qt__co_ 1000_co_ 1000_co_ 100_co_ -10_co_ 10_co_ newScene_co_ false)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut when I try to use as elevation buffer an array containing one million (1000*1000) integers in the range 0-255_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var vertexData _eq_ BABYLON.VertexData.CreateGroundFromHeightMap(1000_co_ 1000_co_ 100_co_ -10_co_ 10_co_ perlinbuffer_co_ 1000_co_ 1000)_sm_\nvertexData.applyToMesh(ground_co_ false)_sm_\n\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI obtain empty structures.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso if I put in firebug only the latter part _lt_strong_gt__lt_em_gt_BABYLON.VertexData.CreateGroundFromHeightMap(1000_co_ 1000_co_ 100_co_ -10_co_ 10_co_ perlinbuffer_co_ 1000_co_ 1000)_lt_/em_gt__lt_/strong_gt_ the result are empty arrays for positions[]_co_ indices[]_co_ normals[] and uvs[].\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m I calling that function in a wrong way or with wrong parameters?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2017-04-14T11:30:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou can do this by creating an updatable ground mesh_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#FTQGKP%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#FTQGKP#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"yorke","Date":"2017-04-14T13:14:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMany tnx for your reply adam_co_ you_t_ve always a solution for everything _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tFollowing your suggestions solves the terrain creation problem_co_ but now i_t_ve problems _qt_interacting_qt_ with the terrain by the mouse. Let me explain_dd_ with a terrain created with CreateGroundFromHeightMap() I could by example raise terrain faces at mouseclicks using VertexBuffer_dd__lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_        var pickInfo_eq_window.engine.scenes[0].pick(offsetX_co_ offsetY)_sm_\n        var mesh _eq_ pickInfo.pickedMesh_sm_\n        var faceID _eq_ pickInfo.faceId_sm_\n        var indices _eq_ mesh.getIndices()_sm_\n        var vertices _eq_ mesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm_\n//Raise the height of vertices in this face id\n        vertices [indices[faceID*3]*3+1]+_eq_1_sm_\n        vertices [indices[faceID*3+1]*3+1]+_eq_1_sm_\n        vertices [indices[faceID*3+2]*3+1]+_eq_1_sm_\n        mesh.updateVerticesData(BABYLON.VertexBuffer.PositionKind_co_ vertices_co_true_co_true)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tNow i_t_ve problems doing this_dd_ this code runs well only for the first time I click the terrain_co_ from the second time the mesh seems to become _qt_invisible_qt_ to mouse clicks (but it_t_s still visible on screen). It seems that mesh.updateVerticesData() breaks something in the mesh structure... Any ideas?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2017-04-14T13:20:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#FTQGKP%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#FTQGKP#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tedit_dd_ pickedPoint is incorrect_co_ though\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI added updateCoordinateHeights_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#FTQGKP%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#FTQGKP#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"yorke","Date":"2017-04-14T15:34:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWow tnx adam_co_ I see your PG working_co_ but I_t_ve always the same problem using a very similar code_dd_ first click works_co_ then terrain becomes unselectable (and I noticed that also boundingBox disappears). Quite strange_co_ i can_t_t explain myself.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI try to upload here an example_co_ if someone wants to give a check and report me what_t_s wrong...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//yorke.altervista.org/webgl/Provaanim2.htm_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//yorke.altervista.org/webgl/Provaanim2.htm_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMany thanks\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheers\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]