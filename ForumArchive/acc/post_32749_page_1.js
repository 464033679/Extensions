[{"Owner":"bestog","Date":"2017-09-04T16:45:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m currently building a scene where a person walks through a room. There are several objects in the room.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen I run and run against a large mesh_co_ I collide and can_t_t get through (it_t_s wanted). When I walk towards a low (low height) mesh_co_ I_t_m suddenly reset_co_ probably to the old position.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCamera position_dd_ [0.1.2_co_ -2.25]_lt_br /_gt_\n\tCamera ellipsoid_dd_ [0.5_co_0.59_co_0.5]\n_lt_/p_gt_\n\n_lt_p_gt_\n\tScene gravity_dd_ [0_co_ -9.81_co_ 0]_lt_br /_gt_\n\tBottom is at y _eq_ 0\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHow do I set the camera_t_s collisionsbox correctly to run on the floor and not get the effect of low meshes?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-09-04T17:22:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi bestog_co_ welcome aboard.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WWCK0%2345_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WWCK0#45_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHold up-arrow until camera impacts barrel2... which is small and mostly buried in ground.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tKeep holding up-arrow.  Camera bounces forward/backward.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSame issue as yours?  Probably so. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have no solution_co_ but perhaps_co_ now_co_ we all have a playground example to test/play-with.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tI have a theory_co_ though.  Our colliders try to _qt_rub-off_qt_.  The camera collider is much higher than the barrel2 collider_co_ so camera tries to _qt_climb over_qt_ the barrel2 ellipsoid.  BUT... camera.applyGravity is STILL true... so camera slides back to ground.  Over and over... attempted climb-over_co_ gravity says no.  Thoughts_co_ anyone?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-09-04T18:07:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMore_dd_  _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WWCK0%2346_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WWCK0#46_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere_co_ same procedure... hold up-arrow. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI tried an experiment in lines 140-145.  If camera and barrel2 collide_co_ move barrel2.ellipsoidOffset.y HIGHER into the air_co_ perhaps matching camera ellipsoid height perfectly (trying to avoid climb-over/gravity-fall issue_co_ theorized earlier).  No change in symptom.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen I try line 132... initially-set barrel2.ellipsoidOffset.y HIGH ABOVE barrel2 mesh_co_ and try colliding again.  Same symptom.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ perhaps there is framework bug.  It seems barrel2.ellipsoidOffset is NOT being considered.  hmm.  Still studying.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-09-05T00:56:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_strong_gt_Addenda_dd_  _lt_/strong_gt_Reminder to Wingnut and others... when barrel2 is below ground_co_ and _lt_em_gt_.checkCollisions _eq_ true_lt_/em_gt_ on BOTH_co_ then we are in continuous ground-barrel2 collision state.  Perhaps a bad thing_co_ but maybe not.  Perhaps ONLY when camera is in continuous collision (like it is most of the time - with ground)... that we need be concerned.  hmm.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Also_dd_  _lt_/strong_gt_The wireframe _qt_showEllipsoid_qt_ sphere-like mesh - it is stored in barrel2.ellipsoidMesh.  It was put there by a barebones func called _lt_em_gt_showEllipsoid_co_ _lt_/em_gt_at top of PG code.  Funny thing - in line 144 of _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WWCK0%2347_qt_ rel_eq__qt_external nofollow_qt__gt_this PG_lt_/a_gt__co_ I set barrel2.ellipsoidOffset _eq_ 5.  When collide happens_co_ we see .ellipsoidMesh move to 5 units high.  Use down-arrow to back-out after collision... to see the .ellipsoidMesh at 5 units high.  But... I didn_t_t put it up there!  I never called line 145.   I have no observers on barrel2.ellipsoidOffset... and and and.   How did .ellipsoidMesh move up there?   It_t_s just totally blowing my mind.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  Upon collide_co_ ellipsoidMesh re-positions to Y_eq_5 just fine.  But... ironically_co_ it seems like .ellipsoid itself... ISN_t_T moving to Y_eq_5 on-collide.  SO STRANGE!!!  I think it_t_s a CODE GHOST!!!   _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_One more test_dd__lt_/strong_gt_  [_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WWCK0%2348_qt_ rel_eq__qt_external nofollow_qt__gt_link_lt_/a_gt_]  In this PG_co_ don_t_t waste time.  Hold up-arrow_co_ and enter jittery-collision with barrel2.  Hold up-arrow longer... let it bounce.  After approx SIX seconds_co_ I set camera.applyGravity _eq_ false (via a timer in lines 251-253).  The camera jitter/bounce is VERY-reduced_co_ after 6 seconds.  hmm.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"bestog","Date":"2017-09-05T11:08:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you very much for the great contributions and the detailed playground. _lt_br /_gt_\n\tYou handled my problem well. As I read it out_co_ is that a general problem in the library? The camera wants to try to climb over it_co_ but I don_t_t want it to.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDo you have to increase the gravity or adjust the ellipsoid to get a good approximation to the solution of the problem?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you for the quick help!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-09-05T13:07:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHiya bestog.  Thx for the kind words_co_ and thx for discovering/reporting this issue.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou ask good questions.  I_t_m not sure what to do about this.  I think we need to do more tests... to see if barrel2.ellipsoidOffset is working correctly/at-all.  I was hoping we could get MANY forum helpers to help us with this issue_co_ but that hasn_t_t happened yet.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere is a STATIC property...  _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/3.0/engine#static-collisionsepsilon-number_qt_ rel_eq__qt_external nofollow_qt__gt_engine.CollisionsEpsilon_lt_/a_gt_ .  This value is the AMOUNT of positional offset that two colliding ellipsoids must attain... before a climb-over_co_ dive-under_co_ or rub-around... happens (I think).  Unfortunately_co_ it is not user-settable (although I need to learn about _qt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/babylon.engine.ts#L518_qt_ rel_eq__qt_external nofollow_qt__gt_updatable statics_lt_/a_gt__qt_).  Another problem is that it affects ALL collisions (possibly including cam-to-ground)_co_ no matter if the collided mesh is low/small or high/tall.\n_lt_/p_gt_\n\n_lt_p_gt_\n\thmm.  I REALLY don_t_t think barrel2.ellipsoidOffset... is working_co_ but I make lots of mistakes.  I need to do more testing.  In _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WWCK0%2350_qt_ rel_eq__qt_external nofollow_qt__gt_this playground_lt_/a_gt__co_ line 132 moves the ellipsoid 10 units into the air.  In this condition_co_ holding up-arrow colliding shouldn_t_t happen AT ALL_co_ yet it still does.  Why?  I dunno.  It makes no sense to me.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo... I have no solution_co_ and I_t_m FAR-FROM an expert with this collision system.  Sorry.  I_t_ll keep thinking and testing.  Hopefully_co_ others_co_ with more/better ideas_co_ will comment soon.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-09-07T16:04:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Bestog and other forumers.  I haven_t_t given-up work on this issue_co_ and I got a little time last night... to turn knobs and see what breaks.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WWCK0%2351_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WWCK0#51_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSame ol_t_ stuff... a small .checkCollisions cylinder (barrel2)_co_ mostly buried in ground.  It_t_s .ellipsoid has been sized exactly to match it_t_s boundingBox_co_ and it has no initial .ellipsoidOffset.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen scene starts_co_ I begin increasing the X value of barrel2.ellipsoidOffset (in line 265).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor fun_co_ you can wait until the .ellipsoid is far away... and then hold up-arrow to drive camera into barrel2.  IT STILL COLLIDES!  It probably shouldn_t_t do that.  _lt_strong_gt_Bug?  Anyone know?_lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn an earlier post_co_ I mentioned that engine.collisionsEpsilon appears to be NON-user-settable.  But_co_ I learned some things. _lt_strong_gt_**_lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBarrel2 does NOT have a _qt__lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/3.0/collider_qt_ rel_eq__qt_external nofollow_qt__gt_collider class_lt_/a_gt__qt_ object_co_ but the camera DOES.  In this _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WWCK0%2352_qt_ rel_eq__qt_external nofollow_qt__gt_version 52 playground_lt_/a_gt__co_ (in lines 267 &amp_sm_ 269)... I did some little experiments with the camera._collider.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOne thing that COULD be done... is onCollide_co_ set camera._collider.basePoint.y _eq_ camera._collider.collidedMesh.position.y.  After first collision_co_ we could move the camera_t_s ellipsoid to exactly match height of collidedMesh ellipsoid... so no attempts allowed for camera to climb-over or dive-under the collision.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBUT_co_ this has a potential problem.  Lowering the camera_t_s collider... will make the camera rise into the air more_co_ because of the continuous collision-with-ground that the camera is also doing.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_**  The collider on the camera... ALSO has an .epsilon_lt_/strong_gt_... and it IS user-settable.  SO_co_ possibly_co_ setting camera._collider.epsilon _eq_ someStrangeValue... MIGHT keep the camera from trying to climb-over the low_co_ small collision.  Remember I said that collision epsilons are the amount of difference-in-position-required... for a _qt_rub-off_qt_ (such as a climb-over) to become active.  So_co_ it seems_co_ that with a large enough number... a rub-off will NEVER happen_co_ and that is what is wanted.  BUT... perhaps that is what is wanted... on LOW_co_ SMALL mesh_co_ ONLY.  Maybe for normal-height_co_ larger collisions... you DO want some rub-offs... such as _qt_slide-arounds_qt_.  So_co_ that big camera._collider.epsilon value... might SUCK for taller mesh/collidables.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet_t_s pretend that user/camera walked-into something small and low (you need to test for that)_co_ and camera came to a stop_co_ as wanted (because we set the .epsilon to a high number after the first collision was sensed).  When do we set it BACK to normal?  hmm.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow user turns-away from that collision_co_ and does some more _qt_walking_qt_.  What you COULD do... is... when the camera does 3-5 successful non-collision moves_co_ reset the camera._collider.epsilon back to default value... preparing it for normal-height rub-offs.  ONLY when the camera collides with low/small things.. do you set .epsilon to a big fat number.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can test if a collidedMesh is low/small... by testing its boundingbox sizes/extends_co_ and its position.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tGruesome_co_ eh?  camera._collider has a LOT of knobs and dials_co_ so there_t_s lots of experimenting that could be done.  It could become a _qt_smart collider_qt_... knowing exactly what it is colliding with_co_ and able to adjust itself based upon measurements done to .collidedMesh.  But keep in mind... that the camera._collider is dual-purpose.  It is in NEAR-CONSTANT-USE keeping the camera from falling through the ground.  Make a change to the _collider_co_ and the relationship of ground-to-collider... will also change.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere_t_s another thought.  Once the camera is at ground level_co_ turn off ground.checkCollisions and camera.applyGravity.  We have a func called... ummm...  ground.getHeightAtCoordinates(X/Z).  With this device and the renderLoop_co_ you can constantly GET the height of the ground underneath camera.position... and set camera.position.y continuously... so camera is always at ground level... even in mountainous terrain.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAfter that_co_ the camera._collider will be dedicated to ONLY watching for X/Z collisions_co_ and no longer needed for Y-axis ground collisions.  Any future adjustments done to properties on Collider class... will not affect camera Y position.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMeantime_co_ I STILL don_t_t think freeCamera is taking mesh.ellipsoidOffset into consideration whatsoever.  I_t_m still searching through freeCam collision system as best I can... too see if mesh.ellipsoidOffset is ever considered or calculated-into the collision testing.  As you can plainly see_co_ my barrel2 ellipsoid can be offset FAR FAR to the right_co_ and up-arrow collisions still happen.  I dont think this is good/right_co_ but I make mistakes fairly often.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  More later_co_ if/when I learn more.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]