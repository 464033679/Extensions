[{"Owner":"maecky","Date":"2018-02-08T14:01:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am playing around with the StandardMaterial settings and I came across an issue. If I set the alpha value of the StandardMaterial weird rendering glitches appear on my mesh. You can see it in the playground example if you rotate the mesh around.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSetting the alpha to 0.9999 makes no sense_co_ I am aware of that but I am trying to write a shader based on the StandardMaterial and I do want to set parts of the mesh transparent - therefore I think I do need alphaBlending enabled (e.g._dd_ gl_color _eq_ vec4(1.0_co_ 0.0_co_ 1.0_co_ 0.5)).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs there a possibility to fix this?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#AFH1MN%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#AFH1MN#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for your help!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Amarth2Estel","Date":"2018-02-08T14:07:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi maecky !_lt_br /_gt_\n\t_lt_br /_gt_\n\tI think you will find interesting info here _dd_ _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/resources/transparency_and_how_meshes_are_rendered_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/resources/transparency_and_how_meshes_are_rendered_lt_/a_gt__lt_br /_gt_\n\t_lt_br /_gt_\n\tTo fix your problem_co_ you just need to set _lt_strong_gt_mesh.material.needDepthPrePass_lt_/strong_gt_ to _lt_strong_gt_true_lt_/strong_gt_ _lt_br /_gt_\n\t_lt_br /_gt_\n\tPG fixed _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#AFH1MN%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#AFH1MN#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tEdit _dd_ As written in doc linked above_co_ if you have to work with _qt_real_qt_ transparency (I mean_co_ not 0.9999) _co_ then setting separateCullingPass to true is better!_lt_br /_gt_\n\tPG with alpha 0.2 _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#AFH1MN%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#AFH1MN#3_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"maecky","Date":"2018-02-08T14:12:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for your help_co_ really appreciate it!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI did read the documentation of the link you provided but I wasn_t_t aware that it helps to render it to the depth buffer. Thanks for pointing it out!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"maecky","Date":"2018-02-08T15:35:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/29328-amarth2estel/?do_eq_hovercard_qt_ data-mentionid_eq__qt_29328_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/29328-amarth2estel/_qt_ rel_eq__qt__qt__gt_@Amarth2Estel_lt_/a_gt_ This did solve the rendering glitch in the StandardMaterial but another issue arose.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI modified the StandardMaterial and added the following code at the end of the fragment shader_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_\tif (vPositionW.z &lt_sm_ -1000.0) {\n\t\tcolor.a _eq_ 0.1_sm_\n\t\t// discard_sm_\n\t}\n\tgl_FragColor _eq_ color_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_rgb(255_co_255_co_254)_sm_color_dd_rgb(0_co_0_co_0)_sm__qt__gt_This code works if I set seperateCullingPass to false (with the rendering glitches)_co_ but stops working if I set it to true._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_font color_eq__qt_#000000_qt__gt__lt_span style_eq__qt_background-color_dd_rgb(255_co_255_co_254)_sm__qt__gt_What I am trying to achieve is_co_ to set part of the mesh transparent (e.g. alpha _eq_ 0.5). I assume I have to solve it with a shader but I_t_m not sure?_lt_/span_gt__lt_/font_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks.\n_lt_/p_gt_\n\n_lt_div style_eq__qt_background-color_dd_#1e1e1e_sm_color_dd_#d4d4d4_sm_font-size_dd_14px_sm__qt__gt_\n\t_lt_div style_eq__qt_background-color_dd_#fffffe_sm_color_dd_#000000_sm_font-size_dd_14px_sm__qt__gt_\n\t\t_lt_div_gt_\n\t\t\t \n\t\t_lt_/div_gt_\n\n\t\t_lt_div_gt_\n\t\t\t \n\t\t_lt_/div_gt_\n\t_lt_/div_gt_\n_lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-02-08T16:57:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCan you repro the new issue in the PG as well?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"maecky","Date":"2018-02-08T20:01:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWhat I did was the following_dd_\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\tI copied the StandardMaterial.ts file and replaced the _qt_StandardMaterial_qt_ names with _qt_AlphaMaterial_qt_ in the whole file.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tI copied the default.fragment.fx and default.vertex.fx and named it alpha.fragment.fx and alpha.vertex.fx\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tI then added the code I posted above at the very end of the alpha.fragment.fx file\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n_lt_p_gt_\n\tSince I_t_ve written the files in TypeScript I don_t_t know if it is possible to recreate the issue in the PG? If so please let me know - I would love to.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyways_co_ this is the result of the above-described process_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//mfeu.at/test/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//mfeu.at/test/_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI expected the bluish shaded part to be transparent.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-02-09T18:21:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tcan you post a non minified version?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso did you return true in the needAlphaBlending function of your material?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"maecky","Date":"2018-02-13T07:29:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIf you open the developer tools in chrome you can read the source code. I did not change anything in the babylon library itself.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI used the default.vertex.fx and default.fragment.fx_co_ excepet that I appended the following lines at the end of the fragment shader_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_if (vPositionW.z &lt_sm_ -1000.0) {\n\tcolor.a _eq_ 0.1_sm_\n\t// discard_sm_\n}\ngl_FragColor _eq_ color_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tbtw. _qt_discard_qt_ would work as excepted.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere a screenshot of the dev tools_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ data-fileid_eq__qt_16987_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_02/5a8293deb8d59_2018-02-13(2).png.7a5bed4e2cfc54a8381631fbed4c6412.png_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_5a8293df9490d_2018-02-13(2).thumb.png.ec7d42351d4c1608f87e0a0668883dd9.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_16987_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_02/5a8293df9490d_2018-02-13(2).thumb.png.ec7d42351d4c1608f87e0a0668883dd9.png_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for reading and helping!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-02-13T16:45:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOk so yes it is transparent but because you are using a depth pre pass_co_ there is no self transparency _lt_img alt_eq__qt__dd_(_qt_ data-emoticon_eq__qt_1_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ title_eq__qt__dd_(_qt_ width_eq__qt_20_qt__gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn you case I would recommend to set seperateCullingPass to false but instead set material.alphaMode _eq_ BABYLON.Engine.ALPHA_PREMULTIPLIED\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]