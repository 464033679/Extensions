[{"Owner":"yorke","Date":"2017-03-28T13:42:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi all_co_ I lurked some topics related to bones and their rotation but didn_t_t find a clear solution to my problem_co_ so I try to expose it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m trying to find the best way to compose rotation of bone on all 3 local axes._lt_br /_gt_\n\tIn my simulation_co_ i rotate manually the bones of a human rigged model to match desired poses. Everything works fine when a bone rotates only around one local axis (x_co_ y or z)_co_ but if I have to compose rotations and rotate_co_ by example_co_ a bone 90° around original x axis and 90° around original z axis_co_ the results are not the ones I  expected.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tE.g_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_bone.rotate(BABYLON.Axis.X_co_Math.PI/2_co_ BABYLON.Space.LOCAL)_sm_ bone.rotate(BABYLON.Axis.Z_co_Math.PI/2_co_ BABYLON.Space.LOCAL)_sm_\n\ngives different results than\n\nbone.rotate(BABYLON.Axis.Z_co_Math.PI/2_co_ BABYLON.Space.LOCAL)_sm_ bone.rotate(BABYLON.Axis.X_co_Math.PI/2_co_ BABYLON.Space.LOCAL)_sm_ _lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tSo what_t_s the best way to compose rotations on 3 bone axes? Using quaternions and multiplying 3 rotation matrixes with the initial quaternion?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThus I_t_d like to write a sort of function rotateBone(bone_co_ x_co_ y_co_ z) that rotates a bone of x degrees around its original X axis_co_ y axis and z axis_co_ where x_co_ y_co_ and z are expressed in radians [0 - 6.28] (or degrees [0 - 360])\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-03-28T17:13:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is expected _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ Rotations are relative and not associative. This means that rotations are done based on current state.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think you can find this interesting_dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/how_rotations_and_translations_work_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/overviews/how_rotations_and_translations_work_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2017-03-28T17:59:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis might be helpful_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#E49AL%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#E49AL#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tedit_dd_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you are rotating in the order Y_co_ X_co_ Z just use setYawPitchRoll.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnother PG that could be helpful_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#E49AL%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#E49AL#4_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"yorke","Date":"2017-03-29T12:54:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMany thanks to both of you for your good hints.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m taking a look at the second PG posted by adam.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAfter some tests on that PG_co_ it seems to me that calling three times bone.rotate() on local axes and ZXY order is equivalent to setYawPitchRoll(Y_co_X_co_Z)_co_ which is also equivalent to multiplying quaternions (no order needed in this case). Am i wrong?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe the problems I noticed could be caused by the fact that I was calling bone.rotate() in YXZ order_co_ I_t_m just verifying\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2017-03-29T13:11:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_168994_qt_ data-ipsquote-contentid_eq__qt_29370_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1490792068_qt_ data-ipsquote-userid_eq__qt_26178_qt_ data-ipsquote-username_eq__qt_yorke_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t23 minutes ago_co_ yorke said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\twhich is also equivalent to multiplying quaternions (no order needed in this case).\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tChanging the order of quaternion multiplication changes the rotation order.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNote that bone.rotate() accumulates rotation.  It will act differently than the other rotation functions if you are calling it on each frame without resetting the rotation at the beginning of each frame.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#E49AL%235_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#E49AL#5_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tresetting rotation before using rotate_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#E49AL%236_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#E49AL#6_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"yorke","Date":"2017-03-29T14:07:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWoah just what I needed _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tAwesome adam_co_ the latter PG made things very more clear to me with your explanation about resetting bone and re-applying rotations vs rotating by deltas on previous frame.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso I was totally missing rotations_t_ order. Putting it at work_dd_ still many thanks_co_ you saved me a huge waste of time!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"yorke","Date":"2017-04-27T13:12:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tUp.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m achieving nice results using bone quaternions_co_ but now i_t_ve the problem to let bone rotation not be affected by mesh rotation (or translation)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThus I can successfully work on bone rotations retrieving bone quaternion_co_ interpolating it with the quaternion of the final pose and reapplying il to the bone_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var quat _eq_ mesh.skeleton.bones[i].getRotationQuaternion(BABYLON.Space.WORLD_co_ mesh)_sm_\n[...] modify quaternion\nmesh.skeleton.bones[i].setRotationQuaternion(quat_co_BABYLON.Space.WORLD_co_mesh)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tbut if I rotate the mesh_co_ the poses become wrong because I use world coordinates (e.g. mesh rotates but bone stays in the same place and does not rotate with the mesh).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI tried to substitute Space.WORLD with Space.LOCAL but it gives odd results_co_ e.g if I simply get the bone quaternion in local space and reapply it to the bone without changing it_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var quat _eq_ mesh.skeleton.bones[i].getRotationQuaternion(BABYLON.Space.LOCAL_co_ mesh)_sm_\nmesh.skeleton.bones[i].setRotationQuaternion(quat_co_ BABYLON.Space.LOCAL_co_mesh)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tbone rotation changes_co_ while I_t_d expect it to stay the same not having changed its local quaternion...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHow to let bone quaternion independent from mesh position/rotation?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Raggar","Date":"2017-04-27T13:33:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt does seem to work as expected here_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1EVNNB%2390_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1EVNNB#90_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2017-04-27T14:02:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_172577_qt_ data-ipsquote-contentid_eq__qt_29370_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1493298748_qt_ data-ipsquote-userid_eq__qt_26178_qt_ data-ipsquote-username_eq__qt_yorke_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t49 minutes ago_co_ yorke said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tHow to let bone quaternion independent from mesh position/rotation?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tDon_t_t pass the mesh to the rotation function.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2017-04-27T14:37:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_172577_qt_ data-ipsquote-contentid_eq__qt_29370_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1493298748_qt_ data-ipsquote-userid_eq__qt_26178_qt_ data-ipsquote-username_eq__qt_yorke_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ yorke said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tbone rotation changes_co_ while I_t_d expect it to stay the same not having changed its local quaternion...\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tWhat version of BJS are you using?  I fixed an issue with rotation a couple weeks.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"yorke","Date":"2017-04-27T14:51:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks raggar and adam for your kind replys\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_172588_qt_ data-ipsquote-contentid_eq__qt_29370_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1493301755_qt_ data-ipsquote-userid_eq__qt_4289_qt_ data-ipsquote-username_eq__qt_adam_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t40 minutes ago_co_ adam said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tDon_t_t pass the mesh to the rotation function.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThat seems to have done the trick_co_ awesome as usual adam! Passed Space.WORLD with no mesh and everything seems working fine now_co_ doing more tests however.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOn the opposite Space.LOCAL continues to give me strange results also with no mesh passed_co_ althought if I saw it_t_s working fine in the PG posted by raggar... But I_t_m working on models created and imported from blender_co_ don_t_t know if the problem can depend on that.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m still on v2.5_dd_ I_t_m planning to move to BJS3 but i_t_m afraid with compatibility issues - and long_co_ long debug sessions -_co_ I had bad experiences with three.js (although that_t_s a great framework_co_ don_t_t misunderstand me... maybe only a little bit _qt_dynamic_qt_)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"yorke","Date":"2017-04-28T13:55:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSorry I_t_ve still another question on this topic_co_ I couldn_t_t find an answer to this on the forum and official docs on rotations didn_t_t help me.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe question is_dd_ is there a way to get yaw_co_ roll and pitch of a bone?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet me explain_dd_ I can rotate a bone using eulers_dd_ mesh.skeleton.bone.setYawPitchRoll(y_co_x_co_z)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut how do I read those Eulers from the bone? if I try to read them using mesh.skeleton.bones.getRotation() I would have expected to obtain exactly x_co_y and z passed to setYawPitchRoll() function_co_ but results are quite different. Lurking BJ_t_S code_co_ I saw that getRotation() gets bone_t_s RotQuaternion and calculates toEulers() on it_co_ so I can_t_t understand why results are different.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBy example_dd_ getRotation() output (x_co_y_co_z) coincide with values passed to setYawPitchRoll(y_co_x_co_z) only if x_eq_z_eq_0 and y in [0 _co_ 3.14].\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI tried both in local and world spaces but with no result_co_ also tryed with quaternions but didn_t_t arrive to anything...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAm I missing something or babylon uses different euler conventions in those two functions?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Raggar","Date":"2017-04-28T14:25:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_172600_qt_ data-ipsquote-contentid_eq__qt_29370_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1493304674_qt_ data-ipsquote-userid_eq__qt_26178_qt_ data-ipsquote-username_eq__qt_yorke_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t23 hours ago_co_ yorke said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI_t_m still on v2.5_dd_ I_t_m planning to move to BJS3 but i_t_m afraid with compatibility issues - and long_co_ long debug sessions -_co_ I had bad experiences with three.js (although that_t_s a great framework_co_ don_t_t misunderstand me... maybe only a little bit _qt_dynamic_qt_)\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tIt will only get worse the longer you wait.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI don_t_t believe you_t_ll face any major issues. Why not give the newest release or preview version a test run_co_ just to see whether or not you_t_ve been affected by breaking changes?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Raggar","Date":"2017-04-28T14:35:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_172741_qt_ data-ipsquote-contentid_eq__qt_29370_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1493387746_qt_ data-ipsquote-userid_eq__qt_26178_qt_ data-ipsquote-username_eq__qt_yorke_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t38 minutes ago_co_ yorke said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tSorry I_t_ve still another question on this topic_co_ I couldn_t_t find an answer to this on the forum and official docs on rotations didn_t_t help me.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThe question is_dd_ is there a way to get yaw_co_ roll and pitch of a bone?\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tLet me explain_dd_ I can rotate a bone using eulers_dd_ mesh.skeleton.bone.setYawPitchRoll(y_co_x_co_z)\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tBut how do I read those Eulers from the bone? if I try to read them using mesh.skeleton.bones.getRotation() I would have expected to obtain exactly x_co_y and z passed to setYawPitchRoll() function_co_ but results are quite different. Lurking BJ_t_S code_co_ I saw that getRotation() gets bone_t_s RotQuaternion and calculates toEulers() on it_co_ so I can_t_t understand why results are different.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tBy example_dd_ getRotation() output (x_co_y_co_z) coincide with values passed to setYawPitchRoll(y_co_x_co_z) only if x_eq_z_eq_0 and y in [0 _co_ 3.14].\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tI tried both in local and world spaces but with no result_co_ also tryed with quaternions but didn_t_t arrive to anything...\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tAm I missing something or babylon uses different euler conventions in those two functions?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1EVNNB%2391_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1EVNNB#91_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTry updating to the latest Babylon.js version.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"yorke","Date":"2017-04-29T11:39:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks raggar_co_ I saw your PG and I_t_m investigating what_t_s wrong in my scene or models_co_ that_t_s really strange. At least you confirmed me that both functions use the same conventions for eulers_co_ that_t_s a good starting point. In previous PGs there was the option to run the PG on an older version of BJS_co_ was this feature removed on PGs from BJS3? I can_t_t see that option.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor what concerns upgrading to v3_co_ you_t_re right but I saw that v3 is not marked as stable yet. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m surely planning to upgrade and wasting some time to let my code compatible with it_co_ but I_t_ll first wait for the stable version\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Raggar","Date":"2017-04-29T11:58:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThat feature is still present in the top right corner. Changing from _qt_latest_qt_ to _qt_2.5_qt_ doesn_t_t seem to affect it_co_ so the issue must be somewhere in your code I think.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"yorke","Date":"2017-04-29T14:18:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tReally strange_co_ I can_t_t see the old dropdown to select BJS version nor in firefox 48 nor in chrome 56\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-30T00:11:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tWe have a pretty aggressive media query here _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ this could be because of the resolution\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-30T00:12:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI_t_ve just created this issue for it_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/issues/2077_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/issues/2077_lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]