[{"Owner":"heyzxz","Date":"2016-06-07T10:50:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi BJS team_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have a little requirement in my project_dd_ I want a mesh can recevieShadows but can_t_t be lighted by the light.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet_t_s say there is a ground (a plane)_co_ and some balls moving on it. the balls can cast dynamic shadows on the ground_co_ so_co_ there must a light ( let_t_s say a spot light)_co_ a shadow generator_co_ and finally the _t_receiveShadows_t_ of the ground is true. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut the point is_co_ the ground already has a perfectly lighted diffuseTexture which was baked from Blender_co_ so I don_t_t want it be affected by the lights in BJS_co_ but still can receive shadows.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn other words_co_ I want the result of the ground material is only  _t_DiffuseTexture multiply Shadow_t_. ( No light calculation_co_ no others... )\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSadly_co_ (correct me if i_t_m wrong) I didn_t_t find an easy way to achieve this by simply using the built-in StandardMaterial_co_ one thing I found is_co_ in the _t_default.fragment.fx_t__co_ the shadow calculation relies on _t_#ifdef LIGHT{X}_t__co_ and the calculated shadow (the _t_float shadow_t_ ) was multiplied on the light output_co_ which means_dd_ if no lights_co_ no shadows_co_ if you want shadows_co_ you also have the light calculated and affected the final result.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWell_co_ I know I can achieve this by doing some customized shader/material work ( actually I_t_ve already done_co_ and it works)_co_ but I_t_m still wondering if there is an easier way to do it. If not_co_ I will wonder if you guys can make the StandardMaterial to support  the case which only need diffuse + shadow_co_ because I guess it_t_s not too difficult to do_co_ correct me if i_t_m wrong_co_ the main changes should be rearranging some of the  _t_defines_t_ and _t_#ifdefs_t_  so that you can make it possible to calculate shadows even if the disableLighing is true_co_ and then_co_  multiply the calculated _t_float shadow_t_ value directly on the diffuseTexture. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-06-08T15:53:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHiya _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/20405-heyzxz/?do_eq_hovercard_qt_ data-mentionid_eq__qt_20405_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/20405-heyzxz/_qt_ rel_eq__qt__qt__gt_@heyzxz_lt_/a_gt_!  Could something _lt_strong_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/22397-questions-about-shadows/?do_eq_findComment&amp_sm_comment_eq_127711_qt_ rel_eq__qt__qt__gt_here_lt_/a_gt__lt_/strong_gt__co_ help? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn that comment_co_ I fired up _lt_a href_eq__qt_http_dd_//babylonjs-playground.azurewebsites.net/#Y8WGP%233_qt_ rel_eq__qt_external nofollow_qt__gt_a playground demo_lt_/a_gt_ that uses some _lt_em_gt_light_lt_/em_gt_._lt_em_gt_excludedMeshes_lt_/em_gt_ in lines 55/56.  I am certainly no expert on the subject_co_ and most of your comment is way over my head_co_ but I thought I would tell you what little I know.  Perhaps you can turn that info into something useful.  Perhaps smarter people than I... will comment soon.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"heyzxz","Date":"2016-06-09T17:13:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThank you _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_. But the _t__lt_em style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_line-height_dd_22.4px_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_light_lt_/em_gt__lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_line-height_dd_22.4px_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_float_dd_none_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_._lt_/span_gt__lt_em style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_line-height_dd_22.4px_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_excludedMeshes_lt_/em_gt__t_ doesn_t_t help...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOne thing I guess why I got only 1 replier after 2 days  is that I didn_t_t explain my question clear with my bad English _lt_img alt_eq__qt__dd_(_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ title_eq__qt__dd_(_qt_ width_eq__qt_20_qt_ /_gt_ ...  So please let me explain it again_co_ and I_t_ll try my best to make it as clear as possible... \n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlease see the image below_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_8061_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_06/result.jpg.a38d8a277b2e022c2fa8019f6eb38120.jpg_qt_ style_eq__qt_width_dd_500px_sm_height_dd_415px_sm__qt_ alt_eq__qt_result.jpg_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tAs you can see_co_ there is a red ground(Plane)_co_ a blue ball_co_ and a spot light in the scene. The ball can cast shadow on the ground. The ground only has a pure red diffuseTexture of its material (StandardMaterial). The color of the ground looks gradient (the center looks more bright_co_ and corners look more dark) is only because it is affected by the spot light( in the top center).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAll I wanna talk about is the color of the ground. I found the BJS handles it like this (in the _t_default.fragment.fx_t_ shader_co_ the fragment shader of the StandardMaterial)_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_06/bjsshader.jpg.cdd9159294bfb9cec0acd394465b7a12.jpg_qt_ data-fileid_eq__qt_8064_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_8064_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_06/bjsshader.thumb.jpg.bbc9fd3e6fd4bd3c2b87eff757ce58ea.jpg_qt_ alt_eq__qt_bjsshader.jpg_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo make it simple_co_ the above diagram is not precise_co_ there are many other operations ignored such as the handling the normal_co_ specular_co_ ambient... But roughly_co_ I think the _t_default.fragment.fx_t_ works like this.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t#1. Sample the diffuseTexture.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t#2. Calculate the light result based on the lights. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t#3. Calculate the shadow result based on the light type_co_ light position... \n_lt_/p_gt_\n\n_lt_p_gt_\n\tFinally_co_ compound all the above 3 results into one as the final output_dd_ final _eq_ #1 * #2 * #3_co_ (or_dd_ final _eq_ diffuse * light * shadow). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWell this work flow is good and make sense for the most cases. But sometimes in some cases_co_  I think people (just like me) may only want this instead _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tfinal _eq_ #1 * #3 (or final _eq_  diffuse * shadow_co_ totally disable the #2)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet me tell you why...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSometimes (especially in the real projects)_co_ you have a very complex scene built with the Blender( or some other modeling softwares)_co_ since there are very complex lights in the scene which can_t_t be supported by BJS_co_ or you have used the Cycles Renderer in the Blender_co_ and you don_t_t want lose too much reality of your scene after exporting to BJS_co_ so what you gonna do? You will probably bake the light effects directly into the diffuseTextures of the models.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow_co_ you have a perfect diffuseTexture for your gound in the scene with not only diffuseColor but also the light informations (some parts are brighter and some parts are darker ).  But_co_  there are still some dynamic objects moving on the ground_co_ and now you are considering make your ground can receive dynamic shadows... \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo now_co_ you put a spot light in the scene to generate shadows_co_ but you don_t_t want the ground to change its brightness or darkness by the lights_co_ you only want it receive shadows. In other words_co_ you want to totally disable the light calculation (the #2 above)  but still keep the shadow calculation there. (you want final _eq_ diffuse * shadow)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUnfortunately_co_ there is no easy way to achieve this by simply using the StanderdMaterial_co_ because of the current shader logic of the StandardMaterial is designed like this_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// in the lightFragment.fx_dd_\n#ifdef LIGHT{X}\n\n\t//  #2_dd_ Calculate lights...\n    // info is the light calculation result\n\n    into _eq_ ....\n    // ...\n\t#ifdef SHADOW{X}\n\t\t\n\t    // #3_dd_ Calculate shadows...\n        \n        shadow _eq_ ...\n        // ...\n\t#endif\n        \n        // Compound shadow and light results_co_ and this result will be compounded with the diffuse later...\n\n\t\tdiffuseBase +_eq_ info.diffuse * shadow_sm_\n\t// ...\n#endif_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThis part has hardcoded that the shadow result MUST compound with the light result. What I want is if the BJS team can change this_co_ make it more flexible so that there is an opportunity to let the user to passby (totally disable) the light calculation and still keep the shadow calculation_co_ and then make the shadow result directly multiply the diffuseColor. By doing this_co_ then I can use StanderMaterial directly with my simple _t_reslut _eq_ diffuse*shadow_t_ requirement rather than making a custom Material class.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-06-09T21:13:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAhh_co_ ok_co_ thanks H!  Umm...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#Y8WGP%238_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#Y8WGP#8_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have no solution_co_ but I want to be sure I understand.  In the above demo_co_ I excluded the ground from both lights_co_ and then used .emissive properties on ground.material... to make the ground light itself.  (self-illum).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut now_co_ we still want the ground.receiveShadows to be working_co_ and it is not.  The shadow generators are dependent upon lights.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAll in all_co_ we need an option to make the above playground... produce shadows on the ground... with the ground excluded from both lights.  (like the demo is doing except failing at shadows).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYuh_co_ I have no solution to that.  _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt__co_ who is the biggest of the big dogs around here_co_ is on vacation at the moment... back next week_co_ I believe.  Maybe he will have some ideas.  Thanks for the clarification... nicely done.  I might have over-simplified the issue_co_ but I need it simple.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  Not that I matter_co_ because I don_t_t have a solution.  hmm.  Interesting.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tShadowMaps are calculated from a light_t_s point of view... we can_t_t completely eliminate the lights.  BUT... we still need the lights to NOT affect the ground material in ANY OTHER WAY.   Almost like light.intensity _eq_ 0... but make shadows AS IF light.intensity _eq_ 1.   We need light.excludedMeshesNotShadows _eq_ [ground].  (not available_co_ yet)  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  hmm.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"heyzxz","Date":"2016-06-10T05:32:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThanks _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_. You are totally right! \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-06-13T16:13:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tHello_co_ Wingnut is completely right. the way shadows work prevent you to exclude a light from a mesh if you want to receive shadows from this mesh _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-06-17T23:01:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ and _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/20405-heyzxz/?do_eq_hovercard_qt_ data-mentionid_eq__qt_20405_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/20405-heyzxz/_qt_ rel_eq__qt__qt__gt_@heyzxz_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t  Hey DK...  heyzxz wants to exclude GROUND from lighting color changes... yet still have it RECEIVE shadows (he doesn_t_t care about ground CASTING a shadow).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo reword_co_ he would like normal shadowGenerators_co_ normal ground-receives-shadows_co_ but no lighting changes to ground (other than darkening at shadow silhouettes).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think this can be done.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIF light-with-shadow-generation is a 3-step process...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t   #1 - adjust ground material overall color per light used_lt_br /_gt_\n\t   #2 - calc shadowMap_lt_br /_gt_\n\t   #3 - apply shadowMap to ground material\n_lt_/p_gt_\n\n_lt_p_gt_\n\t... he would like to do step #2 and #3_co_ but avoid step #1.  In the last demo_co_ ground is excluded from all lights (only to keep lights from changing ground color).  But when using excluded mesh_co_ it kills shadows.  So_co_ that won_t_t work.  By setting all lights intensity _eq_ 0_co_ ground material stays same color (good) but shadows are still dead.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPretend _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/20405-heyzxz/?do_eq_hovercard_qt_ data-mentionid_eq__qt_20405_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/20405-heyzxz/_qt_ rel_eq__qt__qt__gt_@heyzxz_lt_/a_gt_ makes a ground with material in Blender that has baked light map and is self-illuminated.  He does NOT want any lights to change his ground color.  Now_co_ how does he cast shadows onto that ground (from lights shining on other mesh)?   He can_t_t.  As soon as he turns on a light_co_ the ground changes color.  If he excludes ground mesh from those lights_co_ he can no longer cast any shadows on the ground.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn essence_co_ he wants all shadow systems to act normal_co_ but don_t_t allow any lights to change color of ground (except where there is a shadow_co_ of course).  This seems like a simple modification.  Skip the step that changes the ground color... WITHOUT using light.excludedMeshes _eq_ [ground]  (which kills shadows on ground).  EXCLUDE light color changes on ground material_co_ but don_t_t exclude light shadow generating UPON the ground.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tlight.excludedMeshesThatStillReceiveShadows _eq_ [ground]    ?  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tHave I explained this to death_co_ yet?  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  Not sure it can be done_co_ but it seems like it is possible.  *shrug*  (I hope I restated the feature request properly_co_ heyzxz)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-06-17T23:14:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tHello so far I only think about a custom material (did you see this? _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/tutorials/How_to_create_a_material_for_materialsLibrary_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/tutorials/How_to_create_a_material_for_materialsLibrary_lt_/a_gt__co_ we have a really simple base shader that can do what you are looking for)\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"heyzxz","Date":"2016-06-22T06:46:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ and _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt__co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you guys!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt__co_ you explained my request perfectly! _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_line-height_dd_22.4px_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_float_dd_none_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_And _lt_/span_gt_ _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt__lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_line-height_dd_22.4px_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_float_dd_none_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt__co_ you are pointing me to the right place!  I have read the SimpleMaterial_co_ and now I think start from it will be much easier than what i did before ( making the custom material by modifying the StandardMaterial and its related shaders_co_ really boring_co_ so many uniforms...) The SimpleMaterial looks pure and clear enough_co_ the only thing I need to do is replacing the _t_#include&lt_sm_lightFragment&gt_sm_[0..maxSimultaneousLights]_t_ to my own _t_include_t_ (with lights calculation avoid_co_ only shadows) in the fragment shader._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_line-height_dd_22.4px_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_float_dd_none_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_BTW_co_ a little bug found in the latest simple.vertex.fx_dd_ _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_line-height_dd_22.4px_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_float_dd_none_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_As the ‘shadowsVertexDeclaration’ and _t_shadowsVertex_t_ had changed their code style_co_ the _t_[0..maxSimultaneousLights]_t_ are missed in the _t_simple.vertex.fx_t_ at the parts_dd_ _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_line-height_dd_22.4px_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_float_dd_none_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_1. _t_#include&lt_sm_shadowsVertexDeclaration&gt_sm__t_ (line 50)_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_line-height_dd_22.4px_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_float_dd_none_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_2. _t_#include&lt_sm_shadowsVertex&gt_sm__t_ (line 90)_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-06-22T15:31:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tGood catch_dd_) Do you want to PR the fix?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]