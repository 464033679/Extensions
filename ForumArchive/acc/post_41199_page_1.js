[{"Owner":"Nodragem","Date":"2018-11-11T19:19:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#24292e_sm_font-size_dd_14px_sm__qt__gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#24292e_sm_font-size_dd_14px_sm__qt__gt_\n\tI attached my player and the camera to the same TransformNode to move and rotate them around together.\n_lt_/p_gt_\n\n_lt_p style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#24292e_sm_font-size_dd_14px_sm__qt__gt_\n\tBecause of that_co_ the rotation of the camera is always zeros (or whatever I made it) in local coordinates. I was a bit surprise to find out that I could not get the rotation in world coordinates as I would with globalPosition.\n_lt_/p_gt_\n\n_lt_p style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#24292e_sm_font-size_dd_14px_sm__qt__gt_\n\tI thought I may have missed something but _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ confirmed that globalRotation or globalRotationQuaternion don_t_t exit_co_ he suggested me to use_lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#24292e_sm_font-size_dd_14px_sm__qt__gt__lt_span_gt_ _lt_/span_gt__lt_/span_gt__lt_a href_eq__qt_https_dd_//doc.babylonjs.com/api/classes/babylon.matrix#decompose_qt_ rel_eq__qt_external nofollow_qt_ style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#0366d6_sm_font-size_dd_14px_sm__qt__gt_https_dd_//doc.babylonjs.com/api/classes/babylon.matrix#decompose_lt_/a_gt_ instead for the time being.\n_lt_/p_gt_\n\n_lt_p style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#24292e_sm_font-size_dd_14px_sm__qt__gt_\n\t_lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#24292e_sm_font-size_dd_14px_sm__qt__gt__lt_span_gt_ I believe that this is _lt_/span_gt_not user friendly and should only be a temporary/hacky solution for my project. Hence my feature is to add a globalRotation and globalRotationQuaternion to meshes and compatible Nodes._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_h2 style_eq__qt_background-color_dd_#ffffff_sm_border-bottom_dd_1px solid #eaecef_sm_color_dd_#24292e_sm_font-size_dd_1.5em_sm__qt__gt_\n\tFeature Request\n_lt_/h2_gt_\n\n_lt_p style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#24292e_sm_font-size_dd_14px_sm__qt__gt_\n\tadd globalRotation and globalRotationQuaternion properties to meshes and compatible Nodes.\n_lt_/p_gt_\n\n_lt_p style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#24292e_sm_font-size_dd_14px_sm__qt__gt_\n\t \n_lt_/p_gt_\n\n_lt_p style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#24292e_sm_font-size_dd_14px_sm__qt__gt_\n\t_lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_p style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#24292e_sm_font-size_dd_14px_sm__qt__gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-11-12T00:11:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThank you for this thread_dd_)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo here is why I think we should not do it_dd_ whereas globalPosition is easy to compute (last line of the worldMatrix)_co_ globalRotation and globalScaling would require a really expensive operation (matrix.decompose). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think that the engine should be a guide to make sure games and applications built with it perform well in every situation. Here_co_ if we expose these two properties there is no way we can let people know that they could be expensive and they should be used cautiously. This is why I recommend not adding them and instead add a word about how to compute them in the doc.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-11-15T09:41:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tsounds reasonable... but I am not sure why globalRotation has to be an expensive computation_co_ it looks to me that the global Rotation is just something like that_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// start with a null rotation_dd_\nglobalRotationQuaternion _eq_ BABYLON.Quaternion.Identity()\n\n// applying the rotation of all the parents of the mesh_dd_\nfor parent in mesh.parents_dd_\n    globalRotationQuaternion *_eq_ parent.rotationQuaternion\n\n// then apply the local rotation of the mesh_dd_\nglobalRotationQuaternion *_eq_ mesh.rotationQuaternion_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI mean I am not sure how Quaternions work_co_ so I might be wrong to start with the identity.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe idea is that global Rotation is simply the application of all the rotations of the parents + your own rotation.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI guess that might be what_t_s decompose() is doing?\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_234472_qt_ data-ipsquote-contentid_eq__qt_41199_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1541981466_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 11/12/2018 at 12_dd_11 AM_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI think that the engine should be a guide to make sure games and applications built with it perform well in every situation. Here_co_ if we expose these two properties there is no way we can let people know that they could be expensive and they should be used cautiously.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tIn the API doc_co_ which pop-ups in VS code when you call a function_co_ you can add a warning_dd_ this is an expensive operation_sm_ use it with moderation.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"bghgary","Date":"2018-11-15T17:17:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIf scaling and position of each level of the hierarchy are identity_co_ then this solution would work_co_ but if not_co_ then this solution will compute the wrong result since scaling affects position and position affects the rotation.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-11-15T17:28:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\talso you must have scaling AND translation set to identity because each rotation is done around parent  pivot point. So this is not applicable unfortunately\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]