[{"Owner":"styxxx","Date":"2015-11-25T22:57:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I noticed that the .babylon-files of blender models always have some light in the rendered result but there is no light specified in the babylon file. When I disable all light light sources in the scene (either by code_co_ using the browser console or the debug gui) everything wents dark as expected - except for the blender objects. There_t_s even a specular effect. I disposed all lights so now scene.lights is _qt_[]_qt_ according to the browser console. _lt_br_gt__lt_br_gt_For example the _qt_hexagon_qt_ below. I even modified it with an editor and removed the _qt__qt_lights_qt__dd_[]_co__qt_ part. Did I miss something? I_t_m not talking about the emissive color of course_co_ the object is supposed to _qt_glow_qt_ a bit_co_ but turnig of lights has no effect at all and as I mentioned I can see specular effects on the surface from some directed light source. I made the same mesh with pure javascript code before_co_ the values are the same and it works there. _lt_br_gt__lt_br_gt_I have to post the file content below since I get an error message when trying to attach/upload it_co_ sorry._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_hex_simple.babylon_lt_/p_gt__lt_p style_eq__qt_color_dd_rgb(143_co_45_co_45)_sm_font-size_dd_.8em_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm_background-color_dd_rgb(232_co_202_co_202)_sm__qt__gt_You aren_t_t permitted to upload this kind of file_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_{_qt_autoClear_qt__dd_true_co__qt_ambientColor_qt__dd_[0_co_0_co_0]_co__qt_materials_qt__dd_[{_qt_name_qt__dd__qt_hex_simple_full.Material.002_qt__co__qt_id_qt__dd__qt_hex_simple_full.Material.002_qt__co__qt_ambient_qt__dd_[0_co_0_co_0]_co__qt_diffuse_qt__dd_[0.7_co_0.7_co_1]_co__qt_specular_qt__dd_[0.3_co_0.3_co_0.5]_co__qt_emissive_qt__dd_[0.5_co_0.5_co_0.7]_co__qt_specularPower_qt__dd_64_co__qt_alpha_qt__dd_0.7_co__qt_backFaceCulling_qt__dd_true_co__qt_checkReadyOnlyOnce_qt__dd_true_co_ _qt_diffuseTexture_qt__dd_{_qt_name_qt__dd__qt_hexa2_rot.png_qt__co__qt_level_qt__dd_1_co__qt_hasAlpha_qt__dd_1_co__qt_coordinatesMode_qt__dd_0_co__qt_uOffset_qt__dd_0_co__qt_vOffset_qt__dd_0_co__qt_uScale_qt__dd_1_co__qt_vScale_qt__dd_1_co__qt_uAng_qt__dd_0_co__qt_vAng_qt__dd_0_co__qt_wAng_qt__dd_0_co__qt_wrapU_qt__dd_1_co__qt_wrapV_qt__dd_1_co__qt_coordinatesIndex_qt__dd_0} }]_co__qt_multiMaterials_qt__dd_[]_co__qt_skeletons_qt__dd_[]_co__qt_meshes_qt__dd_[{_qt_name_qt__dd__qt_6 - Hexagon_qt__co__qt_id_qt__dd__qt_6 - Hexagon_qt__co__qt_materialId_qt__dd__qt_hex_simple_full.Material.002_qt__co__qt_billboardMode_qt__dd_0_co__qt_position_qt__dd_[0_co_0_co_0]_co__qt_rotation_qt__dd_[0_co_0_co_0]_co__qt_scaling_qt__dd_[1_co_1_co_1]_co__qt_isVisible_qt__dd_true_co__qt_freezeWorldMatrix_qt__dd_false_co__qt_isEnabled_qt__dd_true_co__qt_useFlatShading_qt__dd_false_co__qt_checkCollisions_qt__dd_false_co__qt_receiveShadows_qt__dd_false_co__qt_positions_qt__dd_[-0.25_co_0_co_0.433_co_-0.5_co_0_co_0_co_-0.25_co_0_co_-0.433_co_0.25_co_0_co_0.433_co_0.25_co_0_co_-0.433_co_0.5_co_0_co_0]_co__qt_normals_qt__dd_[0_co_1_co_0_co_0_co_1_co_0_co_0_co_1_co_0_co_0_co_1_co_0_co_0_co_1_co_0_co_0_co_1_co_0]_co__qt_uvs_qt__dd_[0.5_co_0.9999_co_0.0671_co_0.75_co_0.0671_co_0.25_co_0.9329_co_0.75_co_0.5_co_0.0001_co_0.9329_co_0.25]_co__qt_indices_qt__dd_[0_co_1_co_2_co_3_co_0_co_2_co_3_co_2_co_4_co_3_co_4_co_5]_co__qt_subMeshes_qt__dd_[{_qt_materialIndex_qt__dd_0_co__qt_verticesStart_qt__dd_0_co__qt_verticesCount_qt__dd_6_co__qt_indexStart_qt__dd_0_co__qt_indexCount_qt__dd_12}]_co__qt_instances_qt__dd_[]}]_co__qt_cameras_qt__dd_[]_co__qt_activeCamera_qt__dd__qt_Camera_qt__co__qt_shadowGenerators_qt__dd_[]}_lt_/pre_gt__lt_p_gt_You can see the difference in the attached screenshots (I changed the emissiveColor to (0.1_co_0.1_co_0.1) in both cases for better visibilty). There are also some other blender objects that all seem to have some light. Where does it come from? _lt_br_gt_Also turning off textures in the debug gui doesn_t_t seem to have effect on all of them which is weird too._lt_br_gt__lt_br_gt_Edit_dd_ the darker image is using hexagons made via code (BABYLON.Mesh.CreateDisc) the other one is using an imported blender model of the same object (the code above). Lights are disabled in both cases._lt_/p_gt__lt_p_gt__lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_11_2015/post-17067-0-69284100-1448491948.png_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_11_2015/post-17067-0-69284100-1448491948_thumb.png_qt_ data-fileid_eq__qt_5660_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_post-17067-0-69284100-1448491948_thumb.p_qt__gt__lt_/a_gt__lt_/p_gt__lt_p_gt__lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_11_2015/post-17067-0-67457900-1448491950.png_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_11_2015/post-17067-0-67457900-1448491950_thumb.png_qt_ data-fileid_eq__qt_5661_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_post-17067-0-67457900-1448491950_thumb.p_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t\t\t\n\n_lt_span class_eq__t_ipsType_reset ipsType_medium ipsType_light_t_ data-excludequote_gt_\n\t_lt_strong_gt_Edited _lt_time datetime_eq__t_2015-11-25T22_dd_59_dd_46Z_t_ title_eq__t_11/25/2015 10_dd_59  PM_t_ data-short_eq__t_3 yr_t__gt_November 25_co_ 2015_lt_/time_gt_ by styxxx_lt_/strong_gt_\n\t\n\t\n_lt_/span_gt_\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"styxxx","Date":"2015-11-26T07:03:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Okay_co_ there is more weird stuff going on with imported blender meshes. I now also disabled all textures but they_t_re mostly still there (except for bump maps and emissive). You see the strange pattern on the plane? Happens when I disable _qt_diffuse textures_qt_. That_t_s actually the diffuse texture image of the space ship. Those (the floor and the ships) are totally different models they don_t_t share a file_co_ a name or something else (the floor tile meshes are named _qt_disc-[number-x]-[number-y]_qt__co_ the ships are called _qt_ship something_qt_). The floor tiles are the hexagons I posted above._lt_/p_gt__lt_p_gt_Happens only to imported models. So I guess there_t_s something happening when being imported._lt_br_gt_Again you can also see some light reflecting._lt_br_gt_Also happens with babylon 2.3._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_edit_dd_ It_t_s not just the floor_dd_ Every imported mesh is now rendered with this texture unless I reactivate diffuse texure channels. Neither was it the first nor the last texture (or mesh/texture file pair) that was loaded from file. _lt_br_gt_The skybox doesn_t_t seem to lose it_t_s texture at all though (it was created with code_co_ not imported)._lt_br_gt__lt_br_gt__lt_img src_eq__qt_http_dd_//www.styxxx.de/temp/babylon/screenshot103.png_qt_ alt_eq__qt_screenshot103.png_qt__gt_. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"styxxx","Date":"2015-11-29T03:02:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi again_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I made a demo file to show the effects I_t_m talking about  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_happy.png_qt_ alt_eq__qt_^_^_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/happy@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _lt_br_gt__lt_br_gt__lt_a href_eq__qt_http_dd_//styxxx.de/temp/babylon/blender/blenderlights.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//styxxx.de/temp/babylon/blender/blenderlights.html_lt_/a_gt_     (zip file to download_dd_ _lt_a href_eq__qt_http_dd_//styxxx.de/temp/babylon/blender/blenderlights.zip_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//styxxx.de/temp/babylon/blender/blenderlights.zip_lt_/a_gt_)_lt_br_gt__lt_br_gt_I created 6 boxes_co_ the first two are made with BABYLON.Mesh.CreateBox_co_ the other 4 are imported from _qt_.babylon_qt_ files_dd__lt_br_gt__lt_br_gt_1. A box with a simple material_co_ some diffuse_co_ specular and a very dark emissive color (so it_t_s still visible without light source). Created with BABYLON.Mesh.CreateBox. No textures._lt_br_gt_2. Like the first box but with an additional diffuse and bump texture (the same file for both). _lt_br_gt__lt_br_gt_The blender-generated babylon-files_dd__lt_br_gt_3. A box similar to box 1_dd_ just some colors (diffuse_co_ specular_co_ a little bit emissive). No texture._lt_br_gt_4. A box with colors and additional diffuse texture_lt_br_gt_5. Colors + diffuse texture + bump texture_lt_br_gt_6. Colors + diffuse texture + bump texture + emissive texture_lt_br_gt__lt_br_gt_The scene also has one light source. The babylon files don_t_t have any specified. _lt_br_gt_By clicking on any box the light intensity is set to a random value. So you can play around with it. _lt_br_gt__lt_br_gt_Now let_t_s take a look at the debug options or the console an the effects some actions have_dd__lt_/p_gt__lt_ol_gt__lt_li_gt_Disable lights_dd__lt_br_gt_\tThe first two boxes are now dark_co_ except for the emissive color. But the 4 imported boxes still receive some light. You can also see specular effects. _lt_br_gt_\tThe same effect can be created by using the console and manually setting scene.lightsEnabled to false. Or by disposing the light source with _qt_scene.lights[0].dispose()._qt__lt_br_gt_\t _lt_/li_gt_\t_lt_li_gt_Change the intensity value or the color of the light source (with console)_dd__lt_br_gt_\tWorks for all objects as expected as long as _qt_scene.lightsEnabled_qt_ is true (or disabled in the debug menu)._lt_br_gt_\tIf not_dd_ nothing happens until you reactivate the light source. _lt_br_gt_\tFor example_dd__lt_br_gt_\t_qt_scene.lightsEnabled_eq_false_sm_ scene.lights[0].intensity_eq_0.1_sm__qt_ -&gt_sm_ blender objects are still illuminated with intensity_eq_1_sm_ (or whatever it was before) then enter_lt_br_gt_\t_qt_scene.lightsEnabled_eq_true_sm__qt_ -&gt_sm_ illumination drops to 0.1_sm__lt_br_gt_\t _lt_/li_gt_\t_lt_li_gt_debug layer_dd_ texture channels -&gt_sm_ disable _qt_Diffuse_qt__dd__lt_br_gt_\tThe diffuse texture of the imported objects now change to the crater texture of box #2._lt_br_gt_\tDiffuse textures are still shown. _lt_br_gt_\t _lt_/li_gt_\t_lt_li_gt_debug layer_dd_ texture channels -&gt_sm_ disable _qt_bump_qt__dd__lt_br_gt_\tA smilar effect to the one before but this time the bump texture of the imported box #5 changes._lt_br_gt_\tBut not for the last box_dd_ no changes here. _lt_br_gt_\t _lt_/li_gt_\t_lt_li_gt_debug layer_dd_ texure channels - &gt_sm_ disable _qt_emissive_qt__dd__lt_br_gt_\tObjects with an emissive texure (only box #6 in this example) start to glow like a christmas tree because also this time the texure seems to be swapped _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_br_gt_\t _lt_/li_gt_\t_lt_li_gt_debug layer_dd_ options -&gt_sm_ disable _qt_textures_qt__dd__lt_br_gt_\tOnly affects the non-imported meshes again._lt_/li_gt__lt_/ol_gt__lt_p_gt_So as you can see imported meshes aren_t_t treated like the others. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_br_gt__lt_br_gt_While playing I also noticed differences on how the boxes are rendered in blender and in babylon. For example the bump maps are way more visible in babylon as if not only the normals are manipulated. But I_t_m not sure about that. Also the color values vary (are darker in babylon) and some options seem to be ignored like the blending mode for textures (mix_co_ add_co_ screen_co_ multiply_co_ etc). I guess that_t_s simpley not exported by the babylon exporter. Also the value on how much the bump textures have influence doesn_t_t seem to be included in the .babylon-file (or I_t_m just blind). [edit_dd_ The specular effects are also rendered differently on the imported boxes_co_ aren_t_t they?] So no big issues but while I_t_m at it I wanted to note too._lt_br_gt__lt_br_gt__lt_br_gt_Would be nice if someone took a look at it to confirm.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _lt_br_gt_Thanks._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-29T16:39:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Our blender experts will be soon with you (but expect a bit of delay as this is THanksgiving week end here_dd_))_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-11-29T19:24:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Sorry_co_ I could not really follow the space ship stuff.  I picked up with the cubes example.  This all about materials._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Cube 1_t_s material has no ambient component / channel.  The cube 3 from Blender does_co_ and there are other differences as well.  It was good you got a simple example_co_ but if you got the exact same material settings in the .babylon to match your hand code_co_ the color should be the same.  If not then there is a fileLoader error.  To insure you get the material you wish_co_ set the controls according to this picture._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_img src_eq__qt_https_dd_//raw.githubusercontent.com/BabylonJS/Extensions/master/TowerOfBabel/doc-assist/StdMaterials.png_qt_ alt_eq__qt_StdMaterials.png_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The entire manual is @ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Extensions/tree/master/TowerOfBabel_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Extensions/tree/master/TowerOfBabel_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"styxxx","Date":"2015-11-30T08:14:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_you can ignore the post about the ship since the cube example is better _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_br_gt_The materials are different_co_ I know. It wasn_t_t primarily about the same color_co_ but the effects you get when deactivating some options. While making this demo file I just also noticed that there might be differences (mostly with the specular effect). I_t_ll take a closer look at it. Until then the isssue with the _qt_eternal_qt_ light source and textures are more important. I guess something_t_s happening while the meshes are imported that places them kind of _qt_outside_qt_ the world. Can_t_t describe it better. _lt_br_gt__lt_br_gt_Try deactivating the light source in the example _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  Should only affect the meshes that weren_t_t imported. At least it_t_s the case on my machine._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"styxxx","Date":"2015-12-01T00:59:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ha! I found something_dd__lt_br_gt__lt_br_gt__lt_a href_eq__qt_http_dd_//styxxx.de/temp/babylon/blender/blenderlights2.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//styxxx.de/temp/babylon/blender/blenderlights2.html_lt_/a_gt_ Here_t_s another example. This time I used the exact same values that were defined in the blender file of cube #3 for cube #1 (babylon-code). Now the first cube also doesn_t_t respond as expected to option changs. So what_t_s different? It_t_s this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_box_material.checkReadyOnlyOnce _eq_ true_sm_ _lt_/pre_gt__lt_p_gt_Exported blender models always have this value defined in the blender file by the exporter. The default value for newly generated standardMaterials with js code is _qt_false_qt_. I thought this value would be ignored anyway (I read it in some post) but I guess it changed. _lt_br_gt__lt_br_gt_So this is responsible for most of the noticed strange behavior. I_t_m not sure if this is supposed to be this way. Using the wrong texture for a mesh looks like a bug no matter what_t_s defined there. I_t_d expect no changes at all with this option set to true. But I_t_m not even sure what it really is about. And do I gain performance by setting it to false? _lt_br_gt__lt_br_gt_There_t_s stil something odd_dd_ The imported cube and the code-generated are still rendered differently. The specular effect and the lighting varies. #1 and #3 should look the same since the same values are set. So I guess the default values for some attributes are different for new standardMaterials and for materials of imported meshes? Or is this something about the normals? The _qt_specular dot_qt_ is the most noticable._lt_br_gt_ _lt_/p_gt__lt_p_gt_ _lt_img src_eq__qt_http_dd_//styxxx.de/temp/babylon/blender/cubes1-3.png_qt_ alt_eq__qt_cubes1-3.png_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_edit_dd_ Solved this too _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ The culprit is_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt__qt_useFlatShading_qt__dd_false_lt_/pre_gt__lt_p_gt_How do I define this with code-generated models (like _qt_createBox_qt_ and _qt_new BABYLON.StandardMaterial)?_lt_br_gt__lt_br_gt_Would still be awesome if a developer could take a look into the behavior when checkReadOnlyOnce is set to false to check if it is as supposed to be. After that I guess I can mark this problem as solved.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_rolleyes.gif_qt_ alt_eq__qt__dd_rolleyes_dd__qt__gt__lt_br_gt__lt_br_gt__lt_br_gt_edit_dd__lt_br_gt__qt_Debug layer &gt_sm_ Options &gt_sm_ Textures_qt_ still has a weird effect with not disabling all textures as you would expect. Bump textures stay._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-12-01T04:02:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_So_dd_)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_ul_gt__lt_li_gt__lt_span_gt_checkReadyOnlyOnce is a dangerous tool_dd_ it helps with performance by freezing the shader but can leads to weird results if you change the material afterwards or if you share the material with different meshes. (This is why it is off by default). I suggest never using this unless you have deep knowledge of how it works under the hood_dd_)_lt_/span_gt__lt_/li_gt__lt_/ul_gt__lt_p_gt_ _lt_/p_gt__lt_ul_gt__lt_li_gt__lt_span_gt_You can activate flat shading on a specific mesh by calling_dd_ mesh.convertToFlatShadedMesh (_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/2.2/Mesh#converttoflatshadedmesh-rarr-void_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/classes/2.2/Mesh#converttoflatshadedmesh-rarr-void_lt_/a_gt_) _lt_/span_gt__lt_/li_gt__lt_/ul_gt__lt_p_gt_ _lt_/p_gt__lt_ul_gt__lt_li_gt_About the debugLayer&gt_sm_Textures this is a stupid bug of mine _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/li_gt__lt_/ul_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span_gt_ _lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-12-01T16:40:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I have better plans for using checkReadyOnlyOnce_co_ packaged along with allowing the material namspace to be something other than the filename_co_ on a material by material basis.  This way you could selectively share materials across .blend_t_s_co_ e.g.. a shared _t_GreenEyed_t_ material in the _t_pool_t_ namespace_co_ _t_pool.GreenEyed_t_.  The current decision is to set it to true_co_ when there is only 1 mesh user of it (baked materials are of course single user).  Need to add another custom exporter properties section on the Materials tab_co_ and not done this yet.  I kind of doubt this is the cause of the difference though.  It is probably either the normals_co_ or the light placement relative to the cubes._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Flat shading can also be ordered up from the Mesh properties of the exporter.  If checked_co_ FileLoader / Mesh.Parse runs _lt_span_gt_convertToFlatShadedMesh() for you.  Would like to change that to be implemented in the exporter instead_co_ if I have time.  2 ways of doing normals is already in the script.  It would load faster doing it in the export_co_ and Shape Keyed Meshes could be flat shaded.  Redoing everything in BJS without also doing the Shape Keys destroys them._lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span_gt_I want to have the new version out by xMas.  I am just getting all the big changes (variable bone influencers 1-8_co_ vertex optimization while having a skeleton_co_ shape key redo) a real good test using a BJS motion capture tool.  If styxxx needs something before I am ready_co_ and he thinks it will fix his spot issue_co_ he need only delete 2 lines starting here_co_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Exporters/Blender/io_export_babylon.py#L1760_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Exporters/Blender/io_export_babylon.py#L1760_lt_/a_gt_.  This is open source_co_ everybody is a developer._lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"styxxx","Date":"2015-12-02T23:08:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_thank you _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_br_gt__lt_br_gt_What about _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_checkReadyOnEveryCall_lt_/pre_gt__lt_p_gt_Didn_t_t notice any effect by changing this option. I guess it still checks the state but when if not on every call? _lt_br_gt__lt_br_gt_I also don_t_t know why all my exported models have set the checkReadyOnEveryCall option in their babylon files. I haven_t_t set anything in blender as far as I know. Or is this the standard behavior by the exporter?_lt_br_gt__lt_br_gt__lt_br_gt_About the flat shading_dd__lt_br_gt_When the babylon files contain _lt_em_gt__qt__lt_span style_eq__qt_color_dd_#0000cd_sm__qt__gt_useFlatShading_qt__dd_true_lt_/span_gt_ _lt_/em_gt_it_t_s rendered exactly as the code generated models that weren_t_t converted with _lt_span style_eq__qt_color_dd_#0000cd_sm__qt__gt__lt_em_gt__lt_span style_eq__qt_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_convertToFlatShadedMesh_lt_/span_gt__lt_/em_gt__lt_/span_gt__lt_span style_eq__qt_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_ (at least the cubes are). So shouldn_t_t the ones made with createBox (and without convertToFlatShaededMesh) rendered as smooth as the imported ones? _lt_/span_gt__lt_br_gt__lt_br_gt__lt_br_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-12-03T18:10:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Regarding checkReadyOnEveryCall_co_ it should be off by default but can be turned on if you need to update your material many times per frame_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"styxxx","Date":"2015-12-04T22:19:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_107920_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_18865_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1449166203_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Regarding checkReadyOnEveryCall_co_ it should be off by default but can be turned on if you need to update your material many times per frame_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_Did this change? Because it_t_s _lt_em_gt_false_lt_/em_gt_ on babylonjs-playground but always _lt_em_gt_true_lt_/em_gt_ in my example files (although I didn_t_t set it)_co_ using v2.2.0._lt_/p_gt__lt_p_gt_Like here (output on console)_dd_ _lt_a href_eq__qt_http_dd_//styxxx.de/temp/babylon/blender/blenderlights2.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//styxxx.de/temp/babylon/blender/blenderlights2.html_lt_/a_gt__lt_/p_gt__lt_p_gt_Thanks _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-12-05T20:20:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_this is one of the new feature of 2.3 (which is used in the playrgound)_dd_ this flag can now be turned off most of the time_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-12-05T20:39:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I know that JCP is currently updating the exporter so I guess we can turn this property to off by default now_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]