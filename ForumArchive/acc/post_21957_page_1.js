[{"Owner":"iiceman","Date":"2016-04-15T18:30:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey guys_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tlong time no see_co_ eh? How are you all doing? _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tI started digging up some old game ideas and playing around. I ended up with one where I create a field of hexagons as the game world. Unfortunately I am having performance problems when creating bigger maps and zooming out to show the whole map. Here is an example of what I am trying to do_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#RFIRC%230_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#RFIRC#0_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny idea how I could improve performance for this kind of game world?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-04-15T18:49:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey Iiceman_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tglad to see back _dd_-)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tVery nice scene !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWell_co_ reduced to only 7 draw calls_co_ that_t_s great ! almost than 700K vertices and more than 10K meshes on the whole map ... I don_t_t know how you could get better prefs with such a big amount of objects to render\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe by using the LOD (level of detail) feature to reduce the number of vertices when a certain distance from the camera is reached ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOr to find a way not to render everything ... faking what is far\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2016-04-15T19:38:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey jerome_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthanks for the feedback! I actually already tried LOD (line 147) and I was surprised to see that it seems makes totally no difference. Here is a version with LOD comment in_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#RFIRC%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#RFIRC#1_lt_/a_gt_ Even if the meshes are hidden when reaching the LOD distance_co_ they still have performance impact. Might this be a bug or am I just using it in a wrong way? _lt_img alt_eq__qt__dd_huh_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_huh.png_qt_ title_eq__qt__dd_huh_dd__qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-04-15T19:43:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI can_t_t tell_co_ I_t_m definetly not a LOD expert... but I know that LOD is supposed to specify (or to auto-compute) lower detailed mesh_co_ so less vertices to render\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/tutorials/How_to_use_LOD_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/tutorials/How_to_use_LOD_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/tutorials/In-Browser_Mesh_Simplification_(Auto-LOD)_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2016-04-15T21:36:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYeah_co_ I visited those two sites_co_ too while trying to optimize the scene_co_ but since I use really super simple meshes the simplification doesn_t_t seem to make a difference (at least nothing noticeable frame rate vise).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyhow_co_ I assumed then when I completely hide the meshes_co_ it should make a difference. The main problem is not that I need maps as big as in the example playground. I want something about half the size_co_ but there is the forest terrain that is supposed to have little trees on it. I made a super simple model in blender (a group of 3 trees) and when I placed those on my forest terrain the frame rate dropped noticeably when zooming out. Sooo... hiding the trees when zooming out would be okay.... but as you can see in the second playground it doesn_t_t even make a difference if I hide them _lt_img alt_eq__qt__dd_(_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ title_eq__qt__dd_(_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-04-15T23:28:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThe thing that I think could give the biggest optimization is to not draw all that geometry in the first place...  draw all the hexagon tiles onto a 2d canvas first and then use that as a texture on a single low-res groundmesh in babylon. Then use some filters on the texture to generate a normal map that you can also apply to give it the illusion that they stick out._lt_br /_gt_\n\tIt won_t_t look quite as good but it will be superfast and done in a single draw call. with only a few verts._lt_br /_gt__lt_br /_gt_\n\tThen for the ones that stick right out_co_ you can use an octree to draw only the ones needed_co_ and maybe instancing if they_t_re all the same mesh. _lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"HeadClot","Date":"2016-04-16T01:05:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/12304-iiceman/?do_eq_hovercard_qt_ data-mentionid_eq__qt_12304_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/12304-iiceman/_qt_ rel_eq__qt__qt__gt_@iiceman_lt_/a_gt_ Are there any bottom faces on the hexagons if so delete them in your 3D application of choice.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe player does not need to see them and probably never will so why draw them in the first place?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou could probably get more performance out of your Game this way. _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-04-16T05:47:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tanother lead would to build the whole terrain (all the hexagons) with a single SPS_co_ it is to say one big mesh with many many vertices. As it will be only one big mesh_co_ the LOD will have a real impact during the simplification process instead of trying to simplify litlle instanced meshes (each individual hexagon_co_ so few inittial vertices)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthis is just an idea among others_co_ maybe mixable also with these others ...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2016-04-16T09:02:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for the input guys! I am gonna try your suggestions_co_ maybe I can really combine your ideas somehow.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI started with the SPS version... look promising so far_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#WCDZS%2315_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#WCDZS#15_lt_/a_gt_ (I choose really big values so initial computation takes preeeettttyyy long_co_ so be patient)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_@jerome_dd_ if I zoom in at a certain point the SPS seems to disappear only coming back if I zoom out again far enough. Any idea what I am doing wrong?_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-04-16T16:01:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOther hint_dd_ try to use babylon.max.js and use the profiler to check where the bottleneck is\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2016-04-16T16:15:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tQuoting my recent post_co_ the three rules of optimization_dd_\n_lt_/p_gt_\n\n_lt_ol_gt__lt_li_gt_\n\t\tProfile\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tPROFILE\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\t_lt_strong_gt_PROFILE!!!!_lt_/strong_gt_\n\t_lt_/li_gt_\n_lt_/ol_gt__lt_p_gt_\n\tIn this case_co_ for me in Chrome_co_ when zoomed out over 70% of the time is spent in Scene._evaluateActiveMeshes. So an octree might be the first thing to try. Also a lot of time calculating world matrices_co_ so make sure to freeze meshes if they_t_re not moving.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"NasimiAsl","Date":"2016-04-16T16:21:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tthis is canvas size problem\n_lt_/p_gt_\n\n_lt_p_gt_\n\tyou need correct scale when you see in change zoom and retina desplay\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-04-16T17:47:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI agree with fenomas.  Instances may reduce the number of draw calls_co_ but not the CPU spent seeing if has each as_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tmoved_co_ scaled_co_ or rotated? each and every frame.  Looks like they never move_co_ so freezeWorldMatrix of them.  CPU time reduction is single threaded_co_ so reducing senseless overhead of background should always be done.  This is should be done before even bothering to profile.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tfreezeWorldMatrix can be suspended_co_ so if you have some sort of animation you can turn it off_co_ animate_co_ and re-freeze on an instance by instance basis.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2016-04-17T11:36:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for all the feedback!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI ired the SPS might not be the ebst choide for my case after all. The idea for the game is taht cou can dynamically change the tile types later in the game (some kind of terra forming). So having to rebuild the SPS might be too much trouble.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/12925-fenomas/?do_eq_hovercard_qt_ data-mentionid_eq__qt_12925_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/12925-fenomas/_qt_ rel_eq__qt__qt__gt_@fenomas_lt_/a_gt_ There is already an octree in that playgorund (Line 101) ...but maybe I am not using it right? Is there anything else I have to do besides just adding it? But it seemed like it already improved performance a lot when I added it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8492_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/_qt_ rel_eq__qt__qt__gt_@JCPalmer_lt_/a_gt__lt_span_gt_ _lt_/span_gt_Using freezeWorldMatrix seems to help quite a bit_co_ too_co_ improving 32 FPS to about 45 FPS when zoomed out all the way in my local version. In the playground somehow it doesn_t_t seem to make a difference. But As I said_co_ my local vrsion is a bit different since I have less tiles but more _qt_decoration_qt_ placed over the tiles.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe evaluateActiveMeshes call still seems to be the bad guy_co_ but it only calls the render functions so I don_t_t know what I could do to reduce the time that it spend on it... any suggestions? _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am not good at interpreting those profile tables_co_ so here is the upper part of my local one_co_ maybe you guys can spot something here that I missed_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_38.0 ms       0.16 %\t22615.6 ms 95.20 %\tbabylon.max.js_dd_5579Engine._renderLoop\t\n7.0 ms        0.03 %\t22547.5 ms 94.92 %\tbabylon.max.js_dd_13642Scene.render\t\n418.4 ms      1.76 %\t22521.5 ms 94.81 %\tbabylon.max.js_dd_13486Scene._renderForCamera\t\n4560.8 ms    19.20 %\t17174.9 ms 72.30 %\tbabylon.max.js_dd_13378Scene._evaluateActiveMeshes\t\n&gt_sm_4560.8 ms   19.20 %\t17174.9 ms 72.30 %\tbabylon.max.js_dd_13486Scene._renderForCamera\t\n&gt_sm_&gt_sm_4560.8 ms  19.20 %\t17174.9 ms 72.30 %\tbabylon.max.js_dd_13642Scene.render\t\n&gt_sm_&gt_sm_&gt_sm_4560.8 ms 19.20 %\t17174.9 ms 72.30 %\tbabylon.max.js_dd_5579Engine._renderLoop\t\n35.0 ms       0.15 %\t4894.1 ms  20.60 %\tbabylon.max.js_dd_12051RenderingManager.render\t\n543.6 ms      2.29 %\t4859.1 ms  20.46 %\tbabylon.max.js_dd_12110RenderingGroup.render\t\n325.3 ms      1.37 %\t4291.5 ms  18.07 %\tbabylon.max.js_dd_15268Mesh.render\t\n229.2 ms      0.97 %\t3876.0 ms  16.32 %\tbabylon.max.js_dd_13451Scene._activeMesh\t\n2361.5 ms     9.94 %\t3638.8 ms  15.32 %\tbabylon.max.js_dd_13358Scene._evaluateSubMesh\t\n&gt_sm_2361.5 ms    9.94 %\t3638.8 ms  15.32 %\tbabylon.max.js_dd_13451Scene._activeMesh\t\n&gt_sm_&gt_sm_2361.5 ms   9.94 %\t3638.8 ms  15.32 %\tbabylon.max.js_dd_13378Scene._evaluateActiveMeshes\t\n835.9 ms      3.52 %\t2649.8 ms  11.15 %\tbabylon.max.js_dd_8098AbstractMesh.computeWorldMatrix\t\n20.0 ms       0.08 %\t2382.5 ms  10.03 %\tbabylon.max.js_dd_15240Mesh._processRendering\t\n2018.1 ms     8.50 %\t2361.5 ms   9.94 %\tbabylon.max.js_dd_15201Mesh._renderWithInsta_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2016-04-17T15:50:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOh_co_ I didn_t_t see you had an octree made in there!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOkay_co_ here_t_s my guess at what_t_s going on. Most of the time is still spent in evaluateActiveMeshes_co_ which is where the engine chooses which meshes are in the frustum. When I looked at the octree code_co_ if I remember correctly_co_ the way it works is_co_ if an octree block is outside the frustum then Babylon culls all that block_t_s meshes from the scene_co_ but if the block is partially in the frustum_co_ the engine then loops through every entry in the block checking if the mesh can individually be culled.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThus_co_ when you_t_re zoomed in and some of the octree blocks are getting culled_co_ the octree saves you a lot of performance_co_ but when you_t_re zoomed out and everything_t_s in view_co_ the engine winds up trying to cull every single mesh just as if there was no octree. So I think that_t_s why the performance only drops when you zoom out.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ wouldn_t_t it make sense if mesh selection could check whether an octree block is entirely inside the frustum_co_ and if so_co_ include the whole block for rendering without checking all the entries?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-04-17T16:51:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt make sense but not sure this is the issue here.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you always have all the tiles visible_co_ you can shortcut selection with mesh.alwaysSelectAsActiveMesh _eq_ true.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo improve performance_co_ I would suggest_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- Reduce meshes count_dd_ Try to merge meshes who share the same material_co_ this will greatly improve performance. Now you have bunch of 72 vertices which is not enough for the GPU (Even with instances).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- 10007 meshes if too much. You can have objects to represent tiles at high level in your code but you should not have that much at rendering level. This is why evaluate is slow.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- Octree is not a good idea if everything is in the frustrum. Furthermore octree is not adapted to a flat world (Octree is a 3d structure)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2016-04-17T17:43:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWell_co_ for what it_t_s worth if I run the demo with  _lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_line-height_dd_22.4px_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_float_dd_none_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_alwaysSelectAsActiveMesh_eq__lt_/span_gt_true for every mesh_co_ the performance greatly improves.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt still spends most of its time in evaluateActiveMeshes though - not sure what that_t_s doing if all the meshes are flagged to be active and also have their world mesh frozen.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2016-04-18T07:15:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tAlrighty then_co_ I_t_ll try to reduce the number of instances and maybe I can also merge some instances together. I_t_ll keep developing the game a bit more and I_t_ll keep an eye on performance. I guess I could try _lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_line-height_dd_22.4px_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_float_dd_none_sm_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_alwaysSelectAsActiveMesh_lt_/span_gt_ when zooming out all the way. For now performance seems okay if I limit the camera movement a bit. I_t_ll keep you guys updated!_lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-04-23T19:00:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t@iiceman _dd_ about the SPS visibility _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/Solid_Particle_System#sps-visibility_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/overviews/Solid_Particle_System#sps-visibility_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t[EDIT] _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#WCDZS%2316_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#WCDZS#16_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tline 71\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-04-24T12:27:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tthe same with the hexagon model not flat shaded _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#WCDZS%2317_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#WCDZS#17_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tline 39\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthis runs at 58-60 fps on my laptop _sm_-)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-04-24T16:12:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tsome little more randomness _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#WCDZS%2318_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#WCDZS#18_lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"eboo","Date":"2016-04-24T20:03:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tfix\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#WCDZS%2319_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#WCDZS#19 _lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tbut FPS is low\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2016-04-24T21:42:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYeah_co_ lods would help a lot for the tiles_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLevel 0_dd_ 12 vertices_lt_br /_gt_\n\tLevel 1_dd_ 6 vertices_lt_br /_gt_\n\tLevel 2_dd_ 4 vertices (plane_co_ maybe with a texture with the shape? this may be detrimental in the end tho_lt_br /_gt__lt_br /_gt_\n\tAnother thing is_co_ well keep in mind I haven_t_t touched babylon for like a year_co_ so I may be wrong here_co_ but could you disable shadows on certain particles/meshes? Cause that could help as well for far away meshes._lt_br /_gt__lt_br /_gt_\n\tAnother possibility is kinda complex_dd__lt_br /_gt_\n\tHave a huge plane span the entire _qt_world_qt_. Whenever a tile is far away_co_ disable the mesh and paint a tile shape onto the huge plane. Whenever it gets closer to the player/camera_co_ erase the tile and re-enable the mesh. The awesome part is since the painted tile is far away_co_ it could be low-res._lt_br /_gt__lt_br /_gt_\n\tIf you are interested_co_ I could dig into this a bit at some point _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"eboo","Date":"2016-04-24T21:48:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tLod use camera distance and not _qt_player_qt_ distance.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthis.particles[p].addLODLevel is not a function\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"iiceman","Date":"2016-04-24T22:36:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHmm_co_ sounds interesting_co_ I_t_ll might give SPS another try... FPS seems okay to me.. at least a lot better than with instances. not sure how to properly combine LoD and SPS.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/809-joshcamas/?do_eq_hovercard_qt_ data-mentionid_eq__qt_809_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/809-joshcamas/_qt_ rel_eq__qt__qt__gt_@joshcamas_lt_/a_gt_ I don_t_t use any shadows. And Using LoD to hide instances didn_t_t seem to give me any performance boost.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5453_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/_qt_ rel_eq__qt__qt__gt_@jerome_lt_/a_gt_ I_t_ll have to replace some tiles alter in the game. that means I_t_ll have to rebuild the SPS? I know I can hide some particles_co_ but removing/replacing is not possible_co_ right?_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]