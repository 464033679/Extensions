[{"Owner":"Smek","Date":"2016-11-16T11:11:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello all_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI just started experimenting with the great Babylon framework. I am trying to mimic pallets (1.2 * 1.6 * 0.8 m_co_ 1000 kg) running on a conveyor belt behaviour by setting a linearVelocity to an object without mass which then acts as the conveyor.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSee this demo_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#11KWUR%237_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#11KWUR#7_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut i am running into a problem_co_ related to the velocity. I am setting a velocity of 0.25 m/s (line 53) and the _qt_conveyor_qt_ is 10 meters long (line 46). This means it should take about 40 seconds to cover that distance. But as you can see from the demo the speed is approximatly 1 m/s since it only takes 10 seconds to cover the distance. The issue is not related to friction_co_ to illustrate I have added an other _t_pallet_t_ with low friction.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCan somebody explain the behaviour to me? And how can I fix this?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks in advance!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-11-16T17:54:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWeird\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOne option could be to set the time step to a lower value_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#11KWUR%238_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#11KWUR#8_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAdding _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/?do_eq_hovercard_qt_ data-mentionid_eq__qt_10310_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/_qt_ rel_eq__qt__qt__gt_@RaananW_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-11-17T10:11:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/24431-smek/?do_eq_hovercard_qt_ data-mentionid_eq__qt_24431_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/24431-smek/_qt_ rel_eq__qt__qt__gt_@Smek_lt_/a_gt__co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tyou had me at _qt_the great Babylon framework_qt_. _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tThis is rather werid_co_ yes. I have to say - the timestep solution is the quickest and the safest for you to simulate the right behavior. As babylon only acts as a proxy to the real physics engine (which_co_ in this case_co_ is cannon.js)_co_ it will be wise to see what cannon is actually doing with the information. I will try finding a bit of time later today and debug this a bit_co_ see what we are doing wrong.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Smek","Date":"2016-11-17T22:13:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI looked at it some more_co_ for some reason the real velocity is a factor 0.33 compared to the real thing.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI fixed it (for now) by setting the time step to 1/180 instead of 1/60 and the gravity to 3 times -9.81. But I think this is something to look at since users are probably expecting the same units as both physics engines use.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Smek","Date":"2016-11-20T19:05:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFound the actual problem_co_ Babylon is calling 3 substeps in this line_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tthis.world.step(this._fixedTimeStep_co_ this._useDeltaForWorldStep ? delta * 1000 _dd_ 0_co_ 3)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis causes the problem.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-11-21T16:55:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tGood catch!\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]