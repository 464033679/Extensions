[{"Owner":"JCPalmer","Date":"2018-08-23T18:57:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIn my Skeleton &amp_sm_ bone sub-classes_co_ I interpolate from pose to pose.  I was keeping translation &amp_sm_ rotation out of root bone poses_co_ and moving the mesh.  When I did a _lt_a href_eq__qt_https_dd_//palmer-jc.github.io/scenes/whoopstopia/index.html_qt_ rel_eq__qt_external nofollow_qt__gt_demo scene_lt_/a_gt_ for QI 1.0.   I tried to do the worst thing I could think of_co_ the opening pass of Simone Bile_t_s floor exercise.  Once a skeleton does a flip_co_ coding becomes way too complex.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat &amp_sm_ other problems like _qt_floating_qt_ caused me to use root bone for translation instead of mesh position for a test_co_ which worked very well.  I kept the rotation at zero for the test_co_ however.  When a new pose was being processed_dd_\n_lt_/p_gt_\n\n_lt_ol_gt_\n\t_lt_li_gt_\n\t\tThe pose is decomposed into poseTranslation_co_ poseRotation_co_ &amp_sm_ poseScale.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tcurrPosition _eq_ rootBone. getPosition(BABYLON.Space.LOCAL)\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\ttargetPosition _eq_ currPosition.add(poseTranslation)\n\t_lt_/li_gt_\n_lt_/ol_gt_\n\n_lt_p_gt_\n\tDoes anyone know if I should just do the same for rotation_co_ or do I also need the amount of translation accounting for the rotation?  I am really hoping they can just be handled separately_co_ because if not this could get messy.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-08-23T20:55:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI see no reason why you cannot use the same process for rotation (as long as you expect rotation to happen before translation)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]