[{"Owner":"BabarJulien","Date":"2018-09-07T09:47:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_ve been doing some profiling while creating a pretty large number of objects in the scene_co_ mainly LinesMeshes and some Planes with DynamicTextures to draw 2d Text.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt seems that there are a few places where we perform O(n) search or iteration that causes creation time to grow linearly with the number of already existing objects.\n_lt_/p_gt_\n\n_lt_p_gt_\n\texamples _lt_span_gt__dd_ _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_¬†- when adding a Mesh to the scene_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_        public getGeometryByID(id_dd_ string)_dd_ Nullable&lt_sm_Geometry&gt_sm_ {\n            for (var index _eq_ 0_sm_ index &lt_sm_ this.geometries.length_sm_ index++) {\n                if (this.geometries[index].id _eq__eq__eq_ id) {\n                    return this.geometries[index]_sm_\n                }\n            }\n\n            return null_sm_\n        }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t_eq_&gt_sm_ keeping up-to-date a map Id to Geometry could fix this.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t¬†\n_lt_/p_gt_\n\n_lt_p_gt_\n\t¬†- when updating the world matrix\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_            for (var mesh of this.getScene().meshes) {\n                if (!mesh.subMeshes) {\n                    continue_sm_\n                }\n                for (var subMesh of mesh.subMeshes) {\n                    if (subMesh.getMaterial() !_eq__eq_ this) {\n                        continue_sm_\n                    }\n\n                    if (!subMesh._materialDefines) {\n                        continue_sm_\n                    }\n\n                    func(subMesh._materialDefines)_sm_\n                }\n            }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t(first note _dd_ I_t_m not expert in Javascript VM JItter_co_ but it might be worth storing _lt_em_gt__lt_strong_gt_this.getScene().meshes _lt_/strong_gt__lt_/em_gt_in a local variable to prevent a call to _lt_em_gt__lt_strong_gt_getScene _lt_/strong_gt__lt_/em_gt_at each iteration).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf possible_co_ adding the info in the Mesh whether all subMeshes have been already made dirty might prevent this code from browsing all the subMeshes several times\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhe checking the callstack_co_ I get into that code from _lt_em_gt__lt_strong_gt_TransformNode.computeWordMatrix _lt_/strong_gt__lt_/em_gt_which is called each time a mesh is created_co_ and each time I manually call _lt_em_gt__lt_strong_gt_computeWorldMatrix _lt_/strong_gt__lt_/em_gt_in case the parenting did change (I want the world bounding box)_co_ and also each time I set DynamicTexture_t_s _lt_em_gt__lt_strong_gt_hasAlpha_lt_/strong_gt__lt_/em_gt_ to true (to draw 2D text).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t¬†\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ I spend some time cloning LinesMesh since it does not support _lt_strong_gt__lt_em_gt_createInstance _lt_/em_gt__lt_/strong_gt_yet_co_ it would be great to add this ! _lt_span class_eq__qt_ipsEmoji_qt__gt_üòÅ_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_image.png.71c4fa8cb03f8096c005d9e06b49e6e0.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_19925_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_09/image.png.71c4fa8cb03f8096c005d9e06b49e6e0.png_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlease let me know if there are existing ways to prevent all those redundant computation to happen. For you info_co_ I_t_m adding a lot of objects between two frames (I mean_co_ between two calls to _lt_em_gt__lt_strong_gt_scene.render()_lt_/strong_gt__lt_/em_gt_)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-09-07T14:50:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI am not sure how much the getGeometryByID() change would help_co_ because I do not even see getGeometryByID()_co_ broken out in your profile data.¬† I assume it is somewhere in Scene.pushGeometry().¬† Scene.pushGeometry()_co_ along with the 2 functions broken out inside it_co_ have a really high % of self time to total time. Does not leave a huge amount for getGeometryById().\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe doubly nested loops are usually places which merit looking at.¬† In another lifetime_co_ I used a language with line level profiling_co_ APL.¬† Function level just kind of sucks.¬† In this case though_co_ the number of meshes which have multimaterials is small_co_ so the inner loop is usually only called once.¬† Something like this might be good from a es6 standpoint_co_ but I have my doubts it will change performance a lot.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_const meshes _eq_ this.getScene().meshes_sm_\nfor (const mesh of meshes) {\n    ...\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t¬† In the case of LineMeshes_co_ it is using a shaderMaterial_co_ so that would have to¬† be changed.¬† Changing LinesMesh to use a StandardMaterial was talked about before.¬† I was initially sub-classing LinesMesh for Hair_co_ but I eventually gave up in favor of Mesh due to lack of thickness control.¬† Do not remember what was said_co_ but searching _t_Hair LinesMesh_t_ may be helpful.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-09-07T15:45:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello Julien!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThese are good findings. You will feel our struggle regarding optimization soon _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt_¬†Here for instance_co_ if we want to¬† optimize the getGeometryByID we need to sacrifice on memory footprint and then other users will complain that they are not using this function a lot so they do not want to pay the price you ask them to pay _lt_span_gt__dd_). Here I will probably suggest that you override the function to make it closer to your needs directly_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_span_gt_For the getScene_co_ this is the magic of TypeScript. Here is the code generated_dd__lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code class_eq__qt_language-javascript_qt__gt_        Material.prototype._markAllSubMeshesAsDirty _eq_ function (func) {\n            for (var _i _eq_ 0_co_ _a _eq_ this.getScene().meshes_sm_ _i &lt_sm_ _a.length_sm_ _i++) {\n                var mesh _eq_ _a[_i]_sm_\n                if (!mesh.subMeshes) {\n                    continue_sm_\n                }\n                for (var _b _eq_ 0_co_ _c _eq_ mesh.subMeshes_sm_ _b &lt_sm_ _c.length_sm_ _b++) {\n                    var subMesh _eq_ _c[_b]_sm_\n                    if (subMesh.getMaterial() !_eq__eq_ this) {\n                        continue_sm_\n                    }\n                    if (!subMesh._materialDefines) {\n                        continue_sm_\n                    }\n                    func(subMesh._materialDefines)_sm_\n                }\n            }\n        }_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tYou can see that the getScene is actually called once _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tComputeWorldMatrix is a complex beast. It is full of caching to make sure the cost is controlled but it needs to be called when you need it _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt_¬†You can always call mesh.freezeWorldMatrix() to annihilate its cost_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t¬†\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Hope this helps!_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t¬†\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-09-07T16:09:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSo when setting to transpile to es6_co_ would this still occur?¬† The reason I ask is_co_ for..of is not in es5_co_ once transpiling for es6 there is not a reason to change anything.¬† Seems like that was not the purpose of Typescript.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-09-07T16:33:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWell good question. I don_t_t know to be fair _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-09-07T17:09:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe only way I can think of for doing this for es5 transpile is_dd_ ¬† that the spec for es6 says the expression after the _t_of_t_ is only evaluated once.¬† That makes sense_co_ you do not want code being written where something in the loop changes the number of items of the expression.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf not then the es5 code is a bug_co_ for 2 reasons_dd_\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\tThe function only runs once &amp_sm_ es6 code runs every time\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tAs stupid as it would be to do_co_ just calling it had some side-effect\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-09-07T23:13:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tagree. So the code can stay as-is\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BabarJulien","Date":"2018-09-13T16:34:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt_\n\tI have much more performance troubles when set the alpha property of a lot of Dynamic Textures (to draw 2d text) _lt_span_gt__dd_ _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ data-fileid_eq__qt_20009_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_09/image.png.d5cef09dc1c8d885f8a20cc65e3da726.png_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_image.thumb.png.01f228560af4be4fa7fbe8f0019245bc.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_20009_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_09/image.thumb.png.01f228560af4be4fa7fbe8f0019245bc.png_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t¬†\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDo you know if this kind of issue is being tackled in the WIP performance improvement you mentioned ? If not_co_ is there a way to work around that ? (I_t_d like to avoid having a modified version of babylon).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t¬†\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJulien\n_lt_/p_gt_\n\n_lt_p_gt_\n\t¬†\n_lt_/p_gt_\n\n_lt_p_gt_\n\t¬†\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-09-14T15:16:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYes there is a way _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_just call scene.blockMaterialDirtyMechanism _eq_ true before updating all your textures and reset it to false afterwards_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"BabarJulien","Date":"2018-09-14T15:29:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tok_co_ thanks _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]