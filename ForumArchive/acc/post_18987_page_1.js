[{"Owner":"Aushou","Date":"2015-12-01T20:40:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m having trouble figuring out the how to map specific parts of a larger image to specific polygons forming a complex shape created by through the PolygonMeshBuilder. After hours of researching the problem and finding only similar answers that either don_t_t_co_ or I can_t_t figure out how to_co_ apply to my specific situation_co_ I_t_m turning to asking directly for help._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I was given code that generates a map of the US_co_ where each state is a separate object generated from an XML file using the PolygonMeshBuilder class. The assignment is to take a provided image displaying a map of the entire US_co_ and have each state object pull it_t_s specific portion of the map image to texture it._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_        $.each(polys_co_ function( index_co_ value ) {            var pts _eq_ $(this).find(_t_outerBoundaryIs_t_).find(_t_LinearRing_t_).                              find(_t_coordinates_t_).text().replace(/_co_0 /g_co__qt_ _qt_).replace(/_co_/g_co_ _qt_ _qt_)_sm_                                         var groundMat _eq_ new BABYLON.StandardMaterial(_qt_red_qt__co_ scene)_sm_            groundMat.diffuseTexture _eq_ new BABYLON.Texture(_qt_usa-physical-map2.jpg_qt__co_ scene)_sm_            groundMat.specularColor _eq_ new BABYLON.Color3.Black()_sm_                                    var ground _eq_ new BABYLON.PolygonMeshBuilder(stName + _qt___qt_ + index_co_                                                         BABYLON.Polygon.Parse(pts)_co_ scene).build()_sm_            ground.parent _eq_ state_sm_                        ground.material _eq_ groundMat_sm_            //ground.material _eq_ new BABYLON.StandardMaterial(_qt_red_qt__co_ scene)_sm_            //ground.material.diffuseTexture _eq_ new BABYLON.Texture(_qt_usa-physical-map2.jpg_qt__co_ scene)_sm_                        var ptCoords _eq_ ground.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm_             console.log(_qt_ptCoords_dd_ _qt_ + ptCoords)_sm_               var tCoords _eq_ ground.getVerticesData(BABYLON.VertexBuffer.UVKind)_sm_            console.log(_qt_tCoords_dd_ _qt_ + tCoords)_sm__lt_/pre_gt__lt_p_gt_This is the relevant code that generates the ground of the state which is what is drawn to the scene. I_t_ve added some bits in effort to complete the task_co_ but so far all I can achieve is displaying the whole (or as much fits on the state) map on each state. I am able to pull the coordinates of where each map cutout should be_co_ but I cannot figure out how to take that information and actually apply it to a polygon in the object._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thank you in advance for your assistance. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-12-02T16:15:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_the best way for us to help you is to get a playground where you reproduce your code so we can work on it _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2015-12-04T20:34:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Don_t_t know how to solve your issue with PolygonMeshBuilder but matching irregular shapes with part of an image seemed an interesting idea and came up with this PG _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1TGOMH%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1TGOMH#2_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2015-12-05T16:27:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_As usual I have just demonstrated how little I know. Could job I like learning things. PolygonMeshBuilder does everything I did previously but much simpler as demonstrated with the following PG _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1TGOMH%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1TGOMH#3_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_However what ever the scale of the polygon the image mapping uses the whole of the image as in this PG _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1TGOMH%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1TGOMH#4_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So the problem is now to get the polygon to use a relevant area of the map not all of it._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For the polygon knowing the uv coordinates of two vertices on the image gives everything needed to match the image with the polygon. (one vertex if x and y scales are already known)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2015/post-14282-0-53229700-1449330769.jpg_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2015/post-14282-0-53229700-1449330769.jpg_qt_ data-fileid_eq__qt_5737_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_post-14282-0-53229700-1449330769.jpg_qt__gt__lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The image shown is 512 by 512 pixels. Matching with the polygon vertex array indices image vertex 0 is at  (256_co_ 320) and image vertex 7 is at (320_co_ 256)._lt_/p_gt__lt_p_gt_For uv values the image size is taken as 1 unit in width and height_co_ on this scale the coordinates of uv0 are (0.5_co_ 0.625) and for uv7 are (0.625_co_ 0.5)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now the x and y scales for the image polygon to the mesh polygon can be calculated and hence the remaining coordinates of the image polygon._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_xscale _eq_ (uv0x - uv7x)/poly_(vertex(0)x - poly_vertex(7)x) _eq_ (0.5 - 0.625)/(0 - 0.5) _eq_ 0.25_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_yscale _eq_ (uv0y - uv7y)/(poly_vertex(0)y - poly_vertex(7)y) _eq_ (0.625 - 0.5)/(1 - 0.5) _eq_ 0.25_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Take one of the poly_vertices_co_ say poly_vertex 7 and scale it scaled poly_vertex 7  becomes  (0.125_co_ 0.125)_co_ then calculate the translation needed to move it to uv7_co__lt_/p_gt__lt_p_gt_uv7 - scaled poly_vertex 7 is (0.625 - 0.125_co_ 0.5 - 0.125) is (0.5_co_ 0.375)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This scaling and translation can now be applied to all the polygon vertex coordinates to give the uv values._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1TGOMH%235_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1TGOMH#5_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]