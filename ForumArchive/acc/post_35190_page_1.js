[{"Owner":"freighthopper","Date":"2018-01-20T22:34:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t I_t_m trying to re-create a flying camera movement system that I once used in DarkBasic.  Basically_co_ the mouse pointer is visible and the user looks around by just moving the mouse (cam rotation about x and y axes).  The user _lt_em_gt__lt_strong_gt_does not_lt_/strong_gt__lt_/em_gt_ drag the scene with the mouse.  He just moves the mouse.  Forward movement is by pressing and holding the left mouse button_co_ reverse with the right mouse button. Very natural. Very intuitive.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have looked for days at Babylon examples and documentation but cannot cobble together a solution.  I see keyboard control options but none for mouse (pointer).  If the action manager could register a _qt_leftPointerDown_qt_ maybe I could get there.  Any and all suggestions would be appreciated. Simple is good.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have copied a vaguely relevant playground to _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#QWGWQK_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#QWGWQK_lt_/a_gt_ if it helps.  Thanks for reading! \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-01-21T14:07:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHiya FH_co_ welcome to the forum.  I like your idea.  I started goofing around with a scene.actionManager with an onEveryFrame trigger...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1X4ODI%236_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#1X4ODI#6_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI put a little dead zone in the middle of the screen.  This seems to work pretty well.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/how_to/how_to_use_actions_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/how_to/how_to_use_actions_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAfter reading the tiny little section on _lt_strong_gt__lt_u_gt_scene_lt_/u_gt__lt_/strong_gt_.actionManagers (just above Available Actions section)... I see that there are no pointer up/down triggers allowed on scene.actionManagers.  Only _lt_strong_gt_mesh_lt_/strong_gt_.actionManagers.  So_co_ I MIGHT have told you some wrong things in my recent PM to you.  (Me saying wrong things is pretty common - I_t_m old).  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSO... I guess we_t_ll still need to determine what_t_s the coolest_co_ newest_co_ most-rad way of listening for left/right held-button events... when only hovering background  (for moving cam forward/backward).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOr_co_ perhaps we could install a skybox to act as our background_co_ and listen for right/left clicks with an actionManager installed on IT.  At least I THINK a skybox is a mesh_co_ as far as actionManagers are concerned.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway_co_ we got a little better starter playground_co_ now.  I_t_ll let you and others take a look... and we_t_ll see what good ideas happen.  My way of left/right auto-pan is perhaps not the best.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTalk soon.  Stay tuned.  Comment at will.  Party on!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_update_lt_/strong_gt__dd_  Here_t_s _lt_strong_gt__lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#1X4ODI%237_qt_ rel_eq__qt_external nofollow_qt__gt_another_lt_/a_gt__lt_/strong_gt__co_ where single left/right clicks are moving camera along worldSpace Z axis.  Movement should actually be along camera.forward direction.  AND_co_ it needs to honor HELD-DOWN left and right mouse buttons.  I_t_m not sure how to do that.  SO_co_ this PG still needs some help.  Tested in Firefox only.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2018-01-22T10:12:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou can always request mouse lock when going to full screen mode to get similar functionality - _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#JWBTU9_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#JWBTU9_lt_/a_gt_ ( every click on the canvas will trigger full screen on and off). Similary_co_ you can simply _qt_hack_qt_ it without full screen mode if you change the pointer lock flag in the engine - _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#JWBTU9%231_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#JWBTU9#1_lt_/a_gt_ (again_co_ click on the canvas triggers the behavior)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you want to implement something yourself_co_ you can always extend the mouse input (_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/Inputs/babylon.freeCameraMouseInput.ts_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/Inputs/babylon.freeCameraMouseInput.ts_lt_/a_gt_)_co_ register it as input_co_ and do whatever you want with it _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"freighthopper","Date":"2018-01-22T15:22:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThank you both for the demos and suggestions.  This is encouraging!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t@Wingnut your idea certainly has promise and I will definitely play with.  I should clarify that the DarkBasic model was a bit different in that the mouse pointer never moved from the center of the screen. It was recentered after each camera angle change in the update loop.  Or_co_ to put it another way_co_ it was like sighting down a paintball gun - the world moves but not the sight.  I am at work now_co_ but will post some of the old DB code later.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t@RW I now see that scene does have a onPointerMove method.  I will play with this.  Extending mouse input is probably a bit beyond my noobile skills at present_lt_img alt_eq__qt__dd_unsure_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_unsure.png_qt_ title_eq__qt__dd_unsure_dd__qt_ /_gt_ - maybe some day.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks again!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"freighthopper","Date":"2018-01-23T02:07:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHere is the old DarkBasic code_co_ executed once per game loop_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_`resets mouse at center of screen (need this equivalent)\n     POSITION MOUSE gHalfhorzRes_co_ gHalfvertRes\n\n     `cax# is a float for camera angle x\n     cax#_eq_WRAPVALUE(Camera Angle X() + 0.2*MOUSEMOVEY())\n     cay#_eq_WRAPVALUE(Camera Angle Y() + 0.2*MOUSEMOVEX())\n\n     `only have to consider rotations about x and y axes\n     ROTATE CAMERA cax#_co_cay#_co_0.0\n\n     `Simple forward/backward movement (left and right mouse buttons)\n     `MOVE CAMERA (provided function) moves in camera pointing direction_co_ camspeed is a sensitivity setting\n     if MOUSECLICK()_eq_1 then MOVE CAMERA camspeed * 0.1\n     if MOUSECLICK()_eq_2 then MOVE CAMERA -camspeed * 0.1\n\n     `Strafing movements\n     if LEFTKEY()\n          cpxAfterArrow#_eq_NEWXVALUE(CAMERA POSITION X()_co_WRAPVALUE(CAMERA ANGLE Y()-90.0)_co_camspeed * 0.1)\n          cpzAfterArrow#_eq_NEWZVALUE(CAMERA POSITION Z()_co_WRAPVALUE(CAMERA ANGLE Y()-90.0)_co_camspeed * 0.1)\n          POSITION CAMERA cpxAfterArrow#_co_ CAMERA POSITION Y()_co_ cpzAfterArrow#\n     endif\n     if RIGHTKEY()\n          cpxAfterArrow#_eq_NEWXVALUE(CAMERA POSITION X()_co_WRAPVALUE(CAMERA ANGLE Y()+90.0)_co_camspeed * 0.1)\n          cpzAfterArrow#_eq_NEWZVALUE(CAMERA POSITION Z()_co_WRAPVALUE(CAMERA ANGLE Y()+90.0)_co_camspeed * 0.1)\n          POSITION CAMERA cpxAfterArrow#_co_ CAMERA POSITION Y()_co_ cpzAfterArrow#\n     endif\n\n     `up and down movements\n     if UPKEY() then POSITION CAMERA CAMERA POSITION X()_co_CAMERA POSITION Y() + camspeed * 0.1_co_CAMERA POSITION Z()\n     if DOWNKEY() then POSITION CAMERA CAMERA POSITION X()_co_CAMERA POSITION Y() - camspeed * 0.1_co_CAMERA POSITION Z()_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tShould have commented on the supplied NEWXVALUE function_dd_ \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_Return Float_eq_NEWXVALUE(Current X Value_co_ Angle Value_co_ Step Value)\n\nThis command is used in conjunction with NEWYVALUE and NEWZVALUE commands to move from one point in space to another point in space based on a specified angle. Rather than using COS/SIN maths_co_ these commands simplify the task of moving coordinates within 3D space. The step value specifies how far in the specified direction you would like to calculate. The parameters should be specified using real numbers. \n\n\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tAnd cpxAfterArrow# meant camera position X after the left arrow was pressed\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNo dead spot needed. Right now searching for bjs equivalent to the second line of the first code box.  Perhaps this behavior conversion will require more that I first thought.  But it really is a fluid and intuitive way to travel thru 3D space.  I promise.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"freighthopper","Date":"2018-01-29T02:13:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_ve been looking at literally hundreds of playground examples_co_ but have not found what I need to crack this nut_co_ though I have seen some solutions to other_co_ less desirable_co_ arrangements.  Before I pursue some of these_co_ I have a couple of questions to focus my search....\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) This may be an easy one_co_ but I can_t_t find it!   Is there a way to turn pointer visibility on and off?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) In the current Babylon version_co_ is there any way to _qt_take over_qt_ the mouse cursor and force/reset it to center screen?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny suggestions appreciated.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-01-29T14:44:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHiya FH.  Sorry to hear that there are troubles.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tcanvas.style.cursor _eq_ _qt_none_qt_... that should kill your arrow.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThink about THIS possibility.  Let_t_s say we want a cross-hairs reticle at center-screen_co_ but they are NOT the pointer.  The canvas pointer stays set to _t_none_t_._qt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can STILL monitor scene.pointerX/Y... to determine if user wants to pan left/right/up/down_co_ and all beta limits still work fine.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPicking often shoots the ray directly from center of camera... so... picking anything under the cross-hairs.... should be possible.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tGenerally speaking_co_ most of the world is opposed-to EVER locking the user_t_s arrow.  That keeps them from escaping/exiting things.  That_t_s why there_t_s a big message about HOW TO ESCAPE when we put our pointer into pointerLock mode.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway_co_ think about the center-of-screen cross-hairs... NOT being the real arrow pointer_co_ but instead_co_ a piece of gui_co_ or a textured plane parented to camera_co_ or a sprite_co_ etc.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t*shrug*  Different thinking_co_ maybe.  There_t_s _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/playground?code_eq_style.cursor&amp_sm_page_eq_1_qt_ rel_eq__qt_external nofollow_qt__gt_70 returns for playground search for _qt_style.cursor_qt__lt_/a_gt_.  There might be some ideas in that pile...  not sure.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOthers will surely comment soon.  Be well_co_ stay tuned.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"freighthopper","Date":"2018-01-30T03:40:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThank you so much_co_ Wingnut.  Your suggestion may produce a similar feel.  I could hide the cursor_co_ get its x and y displacements every frame or so and translate those into camera rotations_co_ while having a gunsight locked in the center of the screen.  I will try to work something up.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn the meantime_co_ I would still like to know if anyone can answer whether question 2 is possible or not.  I get that some people are nervous about yielding control of the mouse but it worked great in DBPro with an escape key exit always available.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ what exactly is pointer lock for?  What does it do?  Just looking for a simple explanation.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-01-30T06:04:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi again.  My pleasure.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDid you do a _lt_a href_eq__qt_https_dd_//www.google.com/search?q_eq_pointerLock_qt_ rel_eq__qt_external nofollow_qt__gt_web search_lt_/a_gt_ and _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/search?q_eq_pointerLock_qt_ rel_eq__qt_external nofollow_qt__gt_docs search for pointerLock_lt_/a_gt_?  \n_lt_/p_gt_\n\n_lt_p_gt_\n\tDocs search eventually leads to an offsite tutorial at _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5218-temechon/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5218_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5218-temechon/_qt_ rel_eq__qt__qt__gt_@Temechon_lt_/a_gt__t_s informative site_dd_  _lt_a href_eq__qt_http_dd_//www.pixelcodr.com/tutos/shooter/shooter.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.pixelcodr.com/tutos/shooter/shooter.html_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tScroll down to pointerLock area... read... grab some code... have some fun.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt actually looks pretty good.... for your needs_co_ maybe.  hmm.  Sorry that I don_t_t know much about it... from memory.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou have some leads to info_co_ now.  Perhaps we need some on-site documentation about it_co_ huh?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTeach us what you discover... if you wish. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"freighthopper","Date":"2018-01-30T18:57:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks Wingnut for your responses.  I_t_d be a baby sea turtle on Crab Island without them!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI did a search on pointerlock before I asked but remain mystified about what it is accomplishing.  I will get to Temechon_t_s in time.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut right now I am more interested in hiding the cursor.  As can be seen in my updated example at _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#QWGWQK%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#QWGWQK#1_lt_/a_gt_ I did manage to get it working. However_co_ I was surprised that the canvas.style.cursor expression (line 11) did not work.  Any idea why?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLine 12 was another variant I saw_co_ but gives an error.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLine 13 works_co_ as do the onPointerObservable techniques below.  If we can get line 11 to work_co_ which of these is the most efficient/reliable to use?  I may be using this a lot. I_t_d like to get it right.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks again!_co_ FH\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-01-30T20:10:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tGood testing/telling_co_ FH.... thx.  Yep_co_ very interesting.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#QWGWQK%232_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#QWGWQK#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLines 100-105... I wait for scene isReady_co_ then wait 3 more seconds_co_ then do the poke (to _t_no-drop_t_). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWorks... until we move the mouse. _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ Then it instantly returns to arrow_co_ again.   Strange!  *scratch scratch*\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]