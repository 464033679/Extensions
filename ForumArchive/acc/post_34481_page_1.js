[{"Owner":"kurhlaa","Date":"2017-12-10T11:39:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is more like a general question_co_ but during the last years many things has changed_co_ somewhere syntax_co_ somewhere architecture. Blender has changed_co_ babylon.js too. I would like to know what is a recommended workflow today (in 2017/2018 and future) for creation a complete and complex game scene - with all lights_co_ shadows_co_ camera_co_ collisions_co_ sounds_co_ textures_co_ locations_co_ different meshes etc. ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLets say we don_t_t use any physics plugins_co_ because most important things are already built-in. Also the priority is a resulting performance.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs it enough and efficient to use Blender only? I see in some examples people still do _qt__lt_strong_gt_ImportMesh_lt_/strong_gt__qt_ and then in a loop _qt__lt_strong_gt_meshes.forEach..._lt_/strong_gt__qt_ to configure imported meshes. Also some tutorials are too old because Blender has changed and I haven_t_t found out how to enable babylon_t_s camera-to-mesh collisions.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo.. your thoughts? Everything in Blender (other tool) or import meshes one by one and continue with a plain JavaScript?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-12-11T05:38:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI_t_m using Blender and BabylonJS for my game.  I think if your game is able to be done in Blender Game Engine that is a viable option.  I am not an expert in Blender and used it only to build 3d models with simple animations/uv maps and then call _qt_ImportMesh_qt_.  I am much more comfortable writing code than fidgeting with Blender - so_co_ I think it will depend also on the expertise of the people building the game.  I think a good workflow for BabylonJS is to get a starter kit using typescript/es6 with NPM and webpack.  I don_t_t have any metrics for the resulting performance_co_ but would imagine that using the Blender Game Engine would be harder to tweak performance as generated code seems harder to change.  I really try to avoid relying on generated code_co_ so I have a strong bias.  I think on a Blender forum would give much different answers.  I also found the mix of tutorials for Blender for all the different versions to make it hard to work with - BabylonJS has good backwards compatibility through releases.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-12-11T19:24:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tBlender is pretty well supported so it is a good reason to use it\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe did a lot of improvement on the 3dsmax one lately as well\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"splash27","Date":"2017-12-12T04:06:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tBy the way_co_ can you advise me a good starter kit for BabylonJS with ES_lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_6_co_ NPM and Webpack?_lt_/span_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-12-12T06:13:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/29348-splash27/?do_eq_hovercard_qt_ data-mentionid_eq__qt_29348_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/29348-splash27/_qt_ rel_eq__qt__qt__gt_@splash27_lt_/a_gt_ - I_t_m not aware of any that specific.  One year ago I took a popular ES6 + Webpack Starter Kit (no longer maintained) that is reasonably unopionated and added BabylonJS 2.5_co_ but it also has React.  When BabylonJS 3.1 comes out later this month I am planning to do an update (and mark my repo as deprecated)_dd__lt_br /_gt__lt_a href_eq__qt_https_dd_//github.com/brianzinn/react-redux-babylonjs-starter-kit_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/brianzinn/react-redux-babylonjs-starter-kit_lt_/a_gt__lt_br /_gt_\n\tProbably the best thing to do is find a more generic starter kit and add BabylonJS yourself.  BabylonJS NPM is only on versions &gt_sm__eq_ 3.1.0-alpha3.4.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo be honest if I was starting a new project then I would go with TypeScript _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-12-12T16:33:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tIssue tracked here_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Documentation/issues/720_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Documentation/issues/720_lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]