[{"Owner":"SvenFrankson","Date":"2017-06-15T15:27:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m currently trying to have shadows layered on top of the other_co_ with several objects in front of the light.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is a small playground demonstrating the topic\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#4SHZMX%231_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#4SHZMX#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBox1 and Box2 are shadowed by their own shape_co_ but I can_t_t find a way to work around it. By toggling _qt_receiveShadows_qt_ off for them_co_ we can_t_t see Box2 shadow projected on Box1.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m not so familiar with ShadowMaps_co_ but as far as I understood it_co_ it contains a depth value so my issue should be solvable. Or is it something we can_t_t do with BabylonJS ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMany thanks for your inputs on this_co_ have a nice day !\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-06-15T15:41:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou are doing great _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ But you face one of the most painful part of dynamic shadows_dd_ the self shadowing\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou have to REALLY fine tune the shadows to get the result you need_dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#4SHZMX%235_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#4SHZMX#5_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"SvenFrankson","Date":"2017-06-15T15:53:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOkay_co_ I had not thought depthScale had to be so high_co_ thanks !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs we have quite a dynamic scene concerning objects positions_co_ with elements of very different scales_co_ etc_co_ I_t_m pretty sure it will be to complex to predict these values from the scene layout.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ll try to update the Playground with another attempt using different ShadowGenerator (we already do something like this for Reflection cubeTexture using probes_co_ and it kinda works fine).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tObviously_co_ thanks again for you impressive reactivity.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-06-15T15:59:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMy pleasure. Please also consider using directional light instead of point.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBoth work obviously but point are expensive as they generate a cubemap on every frame (plus blurring if you use blurred ESM)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]