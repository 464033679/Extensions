[{"Owner":"Rolento","Date":"2016-09-25T14:05:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi All\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am new to BabylonJS and have been playing with the library for a few days now and am absolutely loving it!  A big thumbs up to the team/community that have developed this amazing library. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy 3D geometry is rusty_co_ hence im having problems resolving what many will see as a simple 3D transformation.  My scene has a simple tube created from a path that was created using a bezier curve.  Along the path trajectory I want to render a series of torus shapes_co_ each torus needs to be aligned with the tube axis. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have created a simple program that creates_sm_ the bezier curve path_co_ the tube and adds the torus shapes along the trajectory.  Without attempting to rotate the torus shapes I get the following result (which is expected)_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(see attachement 1)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlayground Code_dd_  _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1PSZDF%2323_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1PSZDF#23_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo fix this problem (i.e. rotate the torus to align with the trajectory of the tube) I have an idea but do not know how to code this using the Babylon JS API - here is my idea for aligning the torus to the tube_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\ta ) the bezier path trajectory has a series of vertices that can be used for defining a vector/axis and position for the Torus to be positioned.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tb ) the tube mesh (end region) has a series of vertices that can be used to define a plane for aligning the Torus with the Tube.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(see attachement 2)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUse the above vertices to define a plane / axis for orientaton - e.g. if adding the torus at start of the tube mesh then you could_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1 ) create vector for defining axis of trajectory (i.e. use bezier path points (1) and (2) for defining the vector)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2 ) create a plane for aligning the torus (i.e. use bezier path point (1) and end tube mesh points (a) and (b) for defining the plane)\n_lt_/p_gt_\n\n_lt_p_gt_\n\ti.e.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(see attachement 3)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUsing the above it should now be possible to orientate the Torus to the specified plane. The only problem is_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\ta ) I dont know how to reference the end tube mesh points\n_lt_/p_gt_\n\n_lt_p_gt_\n\tb ) I dont know which API calls I should use to orientate the torus to the specified plane/vector\n_lt_/p_gt_\n\n_lt_p_gt_\n\tc ) Im guessing there is probably an easier method for solving my problem _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tIf anyone can help me out with this challenge I would appreciate it (possibly update the playground code to illustrate what needs to be done?).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks in advance\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRolento\n_lt_/p_gt_\n\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_09/57e7da6b4c7d4_attachment1.png.5c396af996f7cf81bc704cb909852c1d.png_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_9628_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_09/57e7da6b4c7d4_attachment1.png.5c396af996f7cf81bc704cb909852c1d.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_attachment 1.png_qt__gt__lt_/a_gt__lt_/p_gt_\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_09/57e7da6b932bd_attachment2.png.d450186383602be08a89be4c38a26579.png_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_9629_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_09/57e7da6c17eae_attachment2.thumb.png.0ee4f0b9c52d748885959d43bf7d29f0.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_attachment 2.png_qt__gt__lt_/a_gt__lt_/p_gt_\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_09/57e7da6cc1deb_attachment3.png.b95348bfa222068e88021fc71f8c2c02.png_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_9630_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_09/57e7da6d380e8_attachment3.thumb.png.e1d7a8d731bf6833c05ea5e717e5efa6.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_attachment 3.png_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-09-25T16:21:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWelcome to the forum\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWell_co_ I don_t_t have much time to hack your PG (thanks to have done one btw) but I_t_ll give some hints _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe tube mesh keeps a reference to the Path3D on which it is built. What is a Path3D ? it_t_s a logical object described here _dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/tutorials/How_to_use_Path3D_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/tutorials/How_to_use_Path3D_lt_/a_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tand the Path3D provides some properties _dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/2.4/Path3D_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/classes/2.4/Path3D_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBack to your tube _dd_ each tube axis point holds a Path3D point... so also a normal_co_ tangent and binormal to the tube axis_co_ it is to say one system with 3 orthogonal normalized vectors_co_ each system being aligned to the tube axis on the current axis point. Ok ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis system (tangent_co_ normal_co_ binormal) can be then used with the method RotationFromAxis() to get a rotation value to rotate a mesh (or anything else) to be aligned with this target system _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/How_Rotations_and_Translations_Work#generating-a-rotation-from-a-target-system_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/overviews/How_Rotations_and_Translations_Work#generating-a-rotation-from-a-target-system_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/2.4/Vector3#static-rotationfromaxis-axis1-axis2-axis3-rarr-vector3-classes-2-4-vector3-_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/classes/2.4/Vector3#static-rotationfromaxis-axis1-axis2-axis3-rarr-vector3-classes-2-4-vector3-_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo how would I do ? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tbuild the tube_co_ get its path3D \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var path3d _eq_ tube.path3D_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tthen get the tangent_co_ normal and binormal on every tube axis point where you want to set your torus\n_lt_/p_gt_\n\n_lt_p_gt_\n\tcompute a rotation with rotationFromAxis(tangent_co_ normal_co_ binormal) for each torus... and rotate each torus from this rotation\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Rolento","Date":"2016-09-26T06:59:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Jerome\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for your input - you are a star!  The Path3D object is perfect_co_ it makes life so easy for what I am trying to do.  So with a few minor tweaks here is the fixed code_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1PSZDF%2324_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1PSZDF#24_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOut ot interest_co_ given a vector (as per the original post - i.e. two points along the axis of the tube bezier curve) how could somene calculate the tangent and binormal?  Im just wondering if there are Babylon functions for performing this calculaton...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOnce again thank you for your help much appreciated!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRegards\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRolento\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-09-26T08:26:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tnice PG _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tAFAIK_co_ there_t_s no provided function to calculate the normal and binormal of a given vector (then considered as a tangent)_co_ but you could use the internal Path3D way to do here _dd_  _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Math/babylon.math.ts#L3691_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Math/babylon.math.ts#L3691_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthis function returns a normal vector to the vector paramerer vt\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Rolento","Date":"2016-09-26T10:15:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Jerome\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks again for your guidance.  I took a look at the function you specified and had a quick play to see what I could come up with.  I managed to successfully calculate the vectors and align the torus shapes_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1PSZDF%2325_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1PSZDF#25_lt_/a_gt_  \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_NOTE_lt_/strong_gt__dd_ you can toggle between using Path3D and my functionality by appropriately commenting out lines 53~59.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNot the most elegant code but it does the job (also im guessing there are predefined Babylon helper functions for calculating surface normals and vectors etc - hopefully I will stumble on them once I have learnt the API a little better).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOnce again thanks for your help_co_ and hopefully these code snipplets might be of use to someone else.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRolento\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]