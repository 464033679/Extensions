[{"Owner":"joshcamas","Date":"2015-04-01T00:52:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey guys!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ve been using Babylon for about 5 or months now. My goal has been somewhat obvious - make a game._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And today I realized something pretty insane - we don_t_t have a collision system. Of course_co_ we have the most basic system - bounding box + moveWithCollisions _eq_ collisions!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_However... making a _qt_real_qt_ game_co_ (like my current project is going to be someday in the future hopefully)_co_ using a simple bounding box won_t_t do. Having a game within the Titanic doesn_t_t work with having simple bounding boxes._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So... we need a plan. I think step one would be to make it so you can resize the bounding box... cause I can_t_t find a way to do this._lt_/p_gt__lt_p_gt_Eventually_co_ having a system that allows for more complex bounding _qt_boxes_qt_ should be implemented - a system that allows for walls and objects and people and the everyday _qt_stuff_qt_._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So Step 1_dd_ Is it possible to resize the bounding box_co_ and even more importantly *show* the bounding box?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_----------_lt_/p_gt__lt_p_gt_TL_sm_DR_lt_/p_gt__lt_p_gt_Looky here_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#KYMGU_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#KYMGU_lt_/a_gt_ This bad. We fix. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-04-01T02:14:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Have you tried using oimo? I haven_t_t used it personally but collision testing is a necessary part of any physics engine_co_ so I_t_d imagine that what you_t_re asking for is already implemented there._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_(It might also be helpful to look for the keywords _qt_broad phase_qt_ and _qt_narrow phase_qt_ - the former being checking bounding boxes and the latter being checking actual meshes.)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2015-04-01T02:32:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The thing with oimo is that it_t_s a physics engine... with fancy smancy physics stuff! What babylon needs is a simple mesh collision system... so instead of fancy bouncing balls we have a player hitting the ground and walls. Basically oimo is too complex for what we need! _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks for the keywords_co_ sadly nothing about narrow phase and babylon came up in google. Whenever I start actually building a collision system I can use this. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here guys_co_ here be another example for ye_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#KYMGU%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#KYMGU#1_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_EDIT_dd_ OK WELL I FOUND THE PROBLEM... the problem is... collisions use the ellipsoid only! Yeah! So all the bounding box stuff isn_t_t used at all... silly. me._lt_/p_gt__lt_p_gt_Now that I know the problem_co_ Ima try to make a better version of _lt_span style_eq__qt_color_dd_rgb(121_co_93_co_163)_sm_font-family_dd_Consolas_co_ _t_Liberation Mono_t__co_ Menlo_co_ Courier_co_ monospace_sm_font-size_dd_12px_sm__qt__gt_moveWithCollisions _lt_/span_gt_that allows you to choose the shape of the bounding box thing. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-04-01T03:51:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yeah_co_ sorry_co_ I missed your TL_sm_DR the first time. Yeah_co_ it looks like all bodies get a default-sized ellipsoid regardless of geometry_co_ and you_t_re meant to customize it._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_With that said_co_ now that I look into it BJS_t_s version of narrow-phase collisions is _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_mesh1.intersectsMesh(mesh2_co_ true)_lt_/span_gt_ _co_ which I see you_t_re already using. Is that not enough for what you_t_re doing?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-04-01T13:07:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_From babylon.scene.ts_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_private _activeMesh(mesh_dd_ AbstractMesh)_dd_ void {    if (mesh.skeleton &amp_sm_&amp_sm_ this.skeletonsEnabled) {        this._activeSkeletons.pushNoDuplicate(mesh.skeleton)_sm_    }    if (mesh.showBoundingBox || this.forceShowBoundingBoxes) {        this._boundingBoxRenderer.renderList.push(mesh.getBoundingInfo().boundingBox)_sm_    }    ..._lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-04-01T13:33:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_collision is testing the defined ellipsoid of either a (moving/colliding) mesh or a camera against the entire mesh(es) that it tries to collide into. So_co_ it is ellipsoid vs. complex mesh._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_A more complex test (mesh against a mesh) would take quite some time to calculate_co_ so forget about moving freely in the scene... There is a reason reason why it was implemented like that. A compromise for the greater good  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ It is the same reason why Omio supports only spheres and boxes. it wouldn_t_t be able to deliver real-time calculations if it was more complex._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-04-01T16:32:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi guys.  I did a little playing._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1REST6_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1REST6_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In this version_co_ I manually set the height of skull.ellipsoid... to _lt_u_gt_approx_lt_/u_gt_ the height of the bounding box._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I tried to determine the dimensions of the bounding box_co_ but failed (so far).  I was SO hoping for_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_skull.ellipsoid _eq_ skull.get_lt_a href_eq__qt_http_dd_//babylondoc.azurewebsites.net/page.php?p_eq_24940_qt_ rel_eq__qt_external nofollow_qt__gt_BoundingInfo_lt_/a_gt_()._lt_a href_eq__qt_http_dd_//babylondoc.azurewebsites.net/page.php?p_eq_24939_qt_ rel_eq__qt_external nofollow_qt__gt_boundingBox_lt_/a_gt_.getSize()_sm_  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Gwenael once posted about this issue..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/4326-how-to-get-height-and-width-of-a-mesh/#entry26872_qt__gt_http_dd_//www.html5gamedevs.com/topic/4326-how-to-get-height-and-width-of-a-mesh/#entry26872_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I think his formula is wrong.  I don_t_t think we can use .length on a vector.  But I think I understand what he was trying to do.  He wanted to subtract the X values of a certain 2 points to get a width_co_ then subtract the Y values of a certain 2 points to get a height_co_ and the same with Z values. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Let_t_s add a boundingBox.getSize()... (and one for _lt_a href_eq__qt_http_dd_//babylondoc.azurewebsites.net/page.php?p_eq_24941_qt_ rel_eq__qt_external nofollow_qt__gt_boundingSphere_lt_/a_gt_) so users (like Wingnut) don_t_t get a tumor trying to compute the bb size.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  (if possible).  (thx)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-04-01T18:45:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ellipsoid against meshes (as Raanan mentioned) is the current way of working of the collision system. This is not ellipsoid against box. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And_co_ while working with Ubi Soft and others great games developers_co_ I can tell you this is how they ALL work (sometimes they do not use ellipsoid but capsules but you get my point)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-04-01T18:46:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_how to show the bounding box_dd_ mesh.showBoundingBox _eq_ true_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-04-01T18:52:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_And as well_dd__lt_/p_gt__lt_p_gt_cube.moveWithCollisions(gravity)_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_used this code_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Babylon/Mesh/babylon.abstractMesh.ts#L693_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Babylon/Mesh/babylon.abstractMesh.ts#L693_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So as you can see this is ellipsoid (around the mesh) against mesh _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If this is helpful_co_ we can think abotu adding events when a collision is detected_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2015-04-01T22:48:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ahhhhh I see! As you can see_co_ 99% of this post is me finding out everything I thought was true wasn_t_t. So bear with me here_co_ lol._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So for collisions on walls Ubisoft uses ellipsoid and not a plane/cube?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now I see that having complex meshes would never work_co_ but how about having a simple cube_co_ or even a plane. Is this unheard of?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Also_co_ is there a way to see the ellipsoid? That_t_d be sweet! _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If not_co_ I_t_ll get try my best on adding it. Still a n00b but learning._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-04-02T02:47:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_77561_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_13550_qt_ data-ipsquote-username_eq__qt_joshcamas_qt_ data-cite_eq__qt_joshcamas_qt_ data-ipsquote-timestamp_eq__qt_1427928537_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_So for collisions on walls Ubisoft uses ellipsoid and not a plane/cube?_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Most games mainly use boxes and spheres. When people use ellipsoids (or capsules) it_t_s usually to model a controllable character_co_ where you don_t_t want it to get caught on little corners and doorways and so on. I_t_d imagine that that_t_s why BJS provides ellipsoid-based methods like moveWithCollisions. If you called that API on a wall then I guess it would use the wall_t_s ellipsoid for collision testing_co_ but I don_t_t think that_t_s the intended use. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_77561_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_13550_qt_ data-ipsquote-username_eq__qt_joshcamas_qt_ data-cite_eq__qt_joshcamas_qt_ data-ipsquote-timestamp_eq__qt_1427928537_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Now I see that having complex meshes would never work_co_ but how about having a simple cube_co_ or even a plane. Is this unheard of?_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Usually games use separate models for collision testing. So for a wall_co_ say_co_ the model being rendered might have little ridges and bullet holes and whatever_co_ but in the physics engine it_t_s just one big box. (Not a plane - collision testing is usually done with volumes_co_ not surfaces.)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2015-04-02T02:49:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ahhhh I see. Learning more every day. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Ok... so it makes sense to have cubes implemented into Babylon? Just makin sure it isn_t_t a feature no one would use_co_ or if there isn_t_t a better way. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-04-02T07:47:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I create a sample here there some time ago that is available in the documentation. here_dd_ _lt_a href_eq__qt_http_dd_//babylondoc.azurewebsites.net/page.php?p_eq_22091_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylondoc.azurewebsites.net/page.php?p_eq_22091_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_scene exemple (move_co_ collision ground and wall) _dd_ _lt_a href_eq__qt_http_dd_//www.castorengine.com/babylon/moveCharacter/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.castorengine.com/babylon/moveCharacter/_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_strong_gt_Z_lt_/strong_gt_ and _lt_strong_gt_S_lt_/strong_gt_ to move forward and backward _eq_&gt_sm_ keyboard AZERTY_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-04-02T08:13:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_77588_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_13550_qt_ data-ipsquote-username_eq__qt_joshcamas_qt_ data-cite_eq__qt_joshcamas_qt_ data-ipsquote-timestamp_eq__qt_1427942991_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Ok... so it makes sense to have cubes implemented into Babylon? Just makin sure it isn_t_t a feature no one would use_co_ or if there isn_t_t a better way. _lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m not sure I follow what you want to do. Collision testing with cubes should be what _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_   mesh1.intersectsMesh(mesh2_co_ _lt_strong_gt_false_lt_/strong_gt_)_lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_ _lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ does. That is_co_ it tests for collisions between _lt_a href_eq__qt_http_dd_//en.wikipedia.org/wiki/Minimum_bounding_box#Axis-aligned_minimum_bounding_box_qt_ rel_eq__qt_external nofollow_qt__gt_axis-aligned bounding boxes_lt_/a_gt_ (or maybe spheres_co_ I haven_t_t checked)_co_ because that_t_s generally the fastest kind of collision check one can do._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you don_t_t mean AABBs_co_ but rather checking for collisions between a cube with arbitrary orientation_co_ it would probably be easiest to just make a Box mesh and move it around checking _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt_intersectsMesh(mesh_co_true)_lt_/span_gt_ on whatever it might collide with.  (Well_co_ provided you want to keep things simple and ad-hoc_co_ that is. If you want it to perform well it would be best to use a physics engine so that you get proper broad- and narrow-phase tests.)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-04-02T12:35:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Oh hell_co_ I might as well give my take on the subject.  And Josh_co_ don_t_t worry about being completely wrong about how something works.  I_t_ve done it 100 times on forum_co_ so far.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Ok_co_ let_t_s pretend we have an airliner model with wide wings_co_ and a standard sawhorse sitting alongside the runway.  And let_t_s assume that we will NOT be using a physics engine._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The airliner will have a collision ellipsoid_co_ of course.  It_t_s reasonably spherical.   To cover the airliner_t_s length and width_co_ you might tend to lengthen/widen the airliner ellipsoid by increasing its X and Z components... until the ellipsoid _qt_includes_qt_ the width and length of the airliner._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And no_co_ you don_t_t get to see the collision ellipsoid_co_ nor do you get_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_airliner.ellipsoid _eq_ airliner.boundingBox.getSize()_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Nobody has coded that yet.  Maybe YOU will. Meantime_co_ learn to enjoy pain. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  Now back to our story._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Next_co_ we try to pass the fat-ellipsoid airliner_t_s wing OVER the sawhorse.  It should not intersect_co_ because the wing is much higher than the sawhorse.  But... you get an intersect... because the airliner_t_s ellipse is rounded.  The ellipse_t_s _qt_bounding area_qt_ doesn_t_t _qt_fit_qt_ the wing with good precision._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you put an invisible box around the entire airliner_co_ and checked for sawhorse collisions with IT_t_S ellipsoid_co_ it gets even worse.  Now the airliner wing can_t_t even pass over a coin without intersecting with it.  Terrible precision._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But now let_t_s pretend that you assembled the airliner model from 5 separate mesh... mainbody_co_ nose_co_ tail_co_ leftwing_co_ rightwing.  EACH of those meshes... has a collision ellipsoid.  The wing ellipsoids could be set WIDE on the X-axis_co_ narrow on the Z-axis_co_ and quite thin on the Y-axis (wing thickness).  NOW the wing can pass over the sawhorse without collision detect.  BUT_co_ you need to check for collisions on FIVE ellipsoids instead of just one._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For modern physics engines_co_ there is a similar thing called a _qt_compound imposter_qt_. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Back to BJS standard non-physics collisions_dd_  By assembling the airliner model in a certain way_co_ we are able to make a compound _qt_collider_qt_ as well.  Because it uses 5 ellipses_co_ it represents the shape of the airliner in a fairly accurate way.  You KNOW which wing (or nose_co_ tail_co_ body) had the intersect collision_co_ and you can do damage simulating on THAT wing ONLY._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Am I correct about this?  Does this method work?  I dunno.  Never tried it.  But it sounds good in theory.  Maybe this is _qt_Wingy being completely wrong about how something works_qt_ #101.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2015-04-03T01:11:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I think having multiple ellipses is a good idea. A very good idea.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _dd_D _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So how about this for a future collision system! Not working on it yet_co_ just getting what we know and trying to make the best balance between simplicity_co_ optimising_co_ and simply having an awesome collision system_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_1) Multiple types of _qt_impostors_qt_. Ellipse_co_ (sphere included of course) Cube_co_ and maybe Cylinder?_lt_/p_gt__lt_p_gt_2) Make it easy to add new impostors if someone wants to. We wanna make Babylon as extensive as possible! Cause that_t_s the beauty of it! &lt_sm_3 &lt_sm_3_lt_/p_gt__lt_p_gt_3) Multiple impostors per mesh. Basically an array of shiny shapes._lt_/p_gt__lt_p_gt_4) Make these nice impostors visible!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Looks good? Anything to add_co_ change_co_ or veto?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-04-03T13:22:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I think it_t_s a great idea_co_ all of it.  Keep in mind that one of the early steps in doing proof-of-concepts... is learning EXACTLY how the current BJS collision system... works.  Josh_co_ do you know how to _qt_borrow_qt_ collision and intersect functions from _lt_a href_eq__qt_http_dd_//babylondoc.azurewebsites.net/page.php?p_eq_24889_qt_ rel_eq__qt_external nofollow_qt__gt_abstractMesh_lt_/a_gt__co_ and put them LOCALLY into your test scenes?  Usually_co_ it takes a lot of pasting and some minor adjusting to the top function declaration line of each function._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_That_t_s your start.  Bring local (into your test code)... every abstractMesh function that includes _qt_intersect_qt_ and _qt_collider_qt_ and _qt_collision_qt_.  Put a console.log message at the top of each function_co_ so you KNOW that YOUR local functions are being called during collision processing_co_ and NOT the default BJS functions._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now you_t_ve got most of the BJS collision system in your test code_co_ where you can insert console.log messages all over the place... and truly master the current collision system.  Test every kind of collision you can think-up_co_ and watch the collision functions do their thing.  I or others would be glad to help you assemble this collision testbed (especially if we can have a copy of it for ourselves and maybe for a playground demo)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Once you completely understand the current collision system_co_ then your _qt_game plan_qt_ and dreams... might change.  You will be able to see exactly WHY the current collision system is not meeting your needs.  And then_co_ your _qt_plan_qt_ might become a series of _qt_precision strikes_qt_ (ar ar ar... precision_co_ strikes_co_ collision stuff).  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I think you did the same(ac) thing with the Samac Editor.  You had to get to know the editor you started-with_co_ before you could properly analyze the ways it could be improved._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Imagining and speculating is great fun_co_ I do it all the time.  But accurate and plausible imagining... takes some serious legwork.  POC - proof of concept testing is the key.  I_t_m no expert_co_ but I have noticed that when I talk to experts about dreams I have_co_ it is best to speak in terminology that the framework authors understand.  YOU can learn that terminology... via learning the current collision system.  Try to keep all your POC_t_s... playground-able.  Then the entire forum becomes your idea team_co_ your feedback team_co_ and your POC test analysis team._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Who but you?  You have always been a fine trailblazer_co_ and you are one of the fastest (maybe THE fastest) BJS self-starters I have ever seen.  You dream large and you_t_re not scared to take-on monster projects_co_ with plenty of spirit.  And I think you will thoroughly enjoy bringing all the collision/intersect functions into your new collision testbed and torturing them.  There_t_s no quicker way to learn how it all works... and to do test modifications. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_At minimum_co_ you will learn exactly how to build a CUSTOM collision system that fills your personal/project needs... and it might evolve into large framework changes... once you prove it performs nicely._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It all starts with some github searches for _t_intersect_t_ and _t_colli_t_  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thoughts?  Be well.  Good luck._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-04-04T12:44:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Well?  Did you start on the BJS Crash Test Dummies collision testing/learning app?  What is taking so long?  I want to play with it.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Did you know that you can _qt_see_qt_ mesh ellipses by parenting a wireframe sphere to a mesh_co_ and setting it_t_s scaling and positional offsets exactly like the ellipsoid?  I knew ya did._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I was thinking about some Tools that might help us with this.  .showVectorAsEllipse()_co_ .showVectorAsPosition()_co_ .showVectorAsDirection_lt_em_gt_WIthMagnitude_lt_/em_gt_()_co_ etc_lt_em_gt_.  _lt_/em_gt_Vectors temporarily shown as spheres_co_ arrows_co_ and position indicators.  *shrug*  Then seeing our collision ellipse would be..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_BABYLON.Tools.ShowVectorAsEllipse(myMesh.ellipsoid)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But_co_ there_t_s trouble with that.  It requires a mesh be added to the scene... and a renderable vector... just doesn_t_t qualify as a mesh_co_ and we probably don_t_t want it to._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So. it_t_s probably best to create a local function in the testing lab...  that does these things.  mymesh.showEllipsoid().  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Got that testing lab done yet_co_ Josh?  We_t_ll want keypress control of all axes of our colliders.  Up_co_ down_co_ left_co_ right_co_ forward_co_ back_co_ and rotation on all 3 axes (6 directions)_co_ too.  We_t_ll need velocity and direction controls for our auto-collider_co_ and don_t_t forget about the elusive and rare collide-from-bottom... and the yet-unwritten rotateWithCollisions().  C_t_MON!!!  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_We_t_ll need buttons and readouts... and they need to be made in such a way that these buttons work in the playground AND for home-testing.  A good way to determine if your code is being run in the playground... is to check for the existence of a HTML element with id_eq__qt_JSEditor_qt_ or something like that.  If it exists... you append your _qt_toolbar_qt_ onto PG elements.  If not_co_ you create your home-based toolbar element and append your gui into it.  So you get the same buttons and readouts for home and for PG. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You might need to collapse the editor to get lots of room for gui in the PG.  You_t_ve seen me do it with the _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1EFJ1I_qt_ rel_eq__qt_external nofollow_qt__gt_10-camera demo_lt_/a_gt_.  (this demo needs updating for virtualJoysticks issue)  But_co_ it_t_s buttons and readouts work fine_co_ home or PG.  (All that dynamic html sure clutters-up the PG editor_co_ though_co_ huh?  *nod*)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_C_t_MON!  hehe._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2015-04-04T17:50:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ahhh nice idea! Adding buttons and hiding the screen is brilliant!!!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here is the old version with your button system added!_lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1REST6%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1REST6#2_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_EDIT_dd_ updated a bit _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1REST6%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1REST6#3_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I decided to add a nifty function_lt_/p_gt__lt_p_gt__lt_em_gt_ createButton(text_co_function_co_ id)_lt_/em_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_which basically adds a button on the top. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I also added a global object _qt_Game_qt_. Whatever variables attached to this_co_ (the skull is in this example) can be accessed within the chrome/firefox console! Good for debugging!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now on to a better testing lab _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-04-04T18:28:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Love these buttons!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ll add them directly on PG_dd_)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2015-04-04T18:57:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ooh! Cool! All thanks to wingnut _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _dd_)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Is bootstrap up to date? For some reason I can_t_t make the buttons change sizes _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Also_co_ would you mind attaching jquery to the PG? It would make things like this easier and more fluid. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And one final thing - I_t_m pretty sure the fps counter makes the playground run wayyyy slower... updating the browser like that is often very expensive. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ I would add a interval to update the fps_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_window.setInterval(updateFPS_co_ 2000)_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Just an idea. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Sorry for throwing all these problems at you_co_ you don_t_t need to do them if you dont want to. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2015-04-04T19:38:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Here_t_s a tiny bit better. Made the hider/show a little cleaner_co_ to remove distractions. Also_co_ a grid. And a button to hide/show the bar thing._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So_co_ wingnut. What do you mean by moving all the colliders?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_EDIT_dd_ Oh! Look! Haha! Hide editor has been added! xD_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-04-05T05:25:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi Josh_co_ nice work on everything!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What I meant was that the mesh which will be involved in collisions... need to be moved somehow (to cause intersects).  I_t_ve never used a gamepad_co_ but they seem to have plenty of buttons to move nearly anything in any way_co_ once a mesh is selected.  Have we got a virtualGampad (canvas) in BJS?  hmm._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You might consider moveWithCollision() being a different testbed than rotateWithCollision()_co_ just to save you some onKey eventListeners. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And then there_t_s scaleWithCollision().  ScaleWithCollision() probably has limited use_co_ but rotateWithCollision() is important for anyone trying to turn a boat around near a dock.  Either end of the boat could hit the dock during a turn-around_co_ especially a boat with steerable water-thrust drive that can turn 360 degrees.  I_t_ve seen many tugs on the Mississippi River... move sideways_co_ using their water-jet drive nozzles._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The same deal applies to helicopter blades and other propeller things... like windmills. Naturally_co_ you don_t_t need to model these meshes in anything hi-rez.  Just move the pivot points (to the end) of a few sticks_co_ and start rotating those puppies_co_ smacking other collision-active things_co_ much like a baseball bat or pinball flipper might do._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks for experimenting with these things_co_ Josh!  I am VERY interested in all of your discoveries.  I talked about rotateWithCollisions with Vahith_co_ quite recently.  You might want to take a sniff at his/her thread to see if there is anything useful.  I gave Vahith a rotateWithCollisions function_co_ but it was not fleshed whatsoever_co_ yet.  It just rotated_co_ and did nothing about rotation-caused collisions.  But it might be wise to check with Vahith and see if he/she has advanced that function._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Just maybe... rotateWithCollisions could be a b*tch to code.  At minimum_co_ Vahith might have a pile of failed attempts to learn-from.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks again!  Cool project!  And thanks to DK and you for spearheading the new playground features.  They rock!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Let_t_s think about what DK said recently_co_ too.  Something about _qt_raising a collision event_qt_.  If I understand that correctly_co_ we would no longer need move/scale/rotate _qt_with collision_qt_ functions.  Instead_co_ we just have... collisions.  Any intersect... fires an onCollision event_co_ and then it would be the programmer_t_s job/choice if they wanted to determine WHAT MOVEMENT (translating_co_ rotating_co_ scaling) was happening at the time. I_t_m sure DK would pass any info he had ABOUT the collision... WITH the event_co_ if possible._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_At least I THINK that_t_s how it would work._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I like that idea_co_ and thanks for bringing it to our attention_co_ dk.  Just so we don_t_t bog scenes for those who don_t_t need those events firing.  Maybe the actionManager already has onIntersectionTrigger and we could propagate THAT trigger event.  *shrug*  Maybe not.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  Maybe we can do anything we want_co_ cuz that_t_s what is delicious about JS and open source.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thoughts_co_ about any of this_co_ anyone?  (thx)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-04-05T08:02:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_77910_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_13550_qt_ data-ipsquote-username_eq__qt_Wingnut_qt_ data-cite_eq__qt_Wingnut_qt_ data-ipsquote-timestamp_eq__qt_1428211533_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_...we would no longer need move/scale/rotate _qt_with collision_qt_ functions.  Instead_co_ we just have... collisions.  Any intersect... fires an onCollision event_co_ and then it would be the programmer_t_s job/choice if they wanted to determine WHAT MOVEMENT (translating_co_ rotating_co_ scaling) was happening at the time._lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You sound very much like someone who_t_s about to implement 60% of a physics engine. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ Detecting and handling collisions is_co_ in my limited experience_co_ more than half of the hard work a physics engine does. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_That is_co_ moveWithCollisions is handy for mockups in that it solves a very common use case (_qt_move a player around a static scene_qt_) in a minimal_co_ quick-n-dirty way. But if you want something as robust as what you_t_ve described here (apply arbitrary transforms to arbitrary primitives and then detect all collisions throughout the scene)_co_ you might find that the amount of work and overhead are similar or greater to the work needed to use a physics engine_co_ since you_t_re tackling many of the same problems._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Not to say you shouldn_t_t do it_co_ of course - implementing physics/collision engines is fun! _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]