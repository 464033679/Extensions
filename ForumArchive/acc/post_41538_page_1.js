[{"Owner":"VoyVoda","Date":"2018-11-27T07:48:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello to everyone\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have a question again. And I think it_t_s a simple question for you._lt_br /_gt_\n\tWhen you review the following example_dd_ _lt_a href_eq__qt_https_dd_//webshed.royssheds.com.au/#_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//webshed.royssheds.com.au/#_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1- How can you add and remove the screen instantly when you select wall or object from html?_lt_br /_gt_\n\t2- How does it instantly reflect the screen when it changes dimensions? So how do the lengths on the ground change momentarily?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe key point of my 2 questions is the instant calculation of the page without renewing them. Is there a way to control it 60 times a second? And if there is such a control_co_ does it make the project very tired? Or is there another way?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks in advance for your answers.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-11-27T12:43:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI see you still have the same question. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tKey thing is on a javascript event you will switch babylon objects. What you could do is preload all the different elements during import. All of them will be disabled and on click you ll simply disable the current one and enable the selected one. this way will be instantaneous.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-11-27T12:46:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi VV!  Hi Bavs.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tVV - I think you should learn about _lt_em_gt_layerMasks_lt_/em_gt__dd_  _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/how_to/layermasks_and_multi-cam_textures_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/how_to/layermasks_and_multi-cam_textures_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you think about it_co_ what you seek is _qt_single object mode/view_qt_ and _qt_full _lt_u_gt_scene_lt_/u_gt_ mode/view_qt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn object mode_co_ you actually switch cameras.  Only the selected object is rendered in THAT camera_t_s layer.  SO_co_ it will _qt_seem like_qt_ all other objects except the selected object... will disappear.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThey did NOT actually disappear.  They are still _lt_em_gt_setEnabled(true)_lt_/em_gt_ and _lt_em_gt_visibility _eq_ 1.0_lt_/em_gt_.  They are simply on a different (rendering) layer.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAfter you select a wall for example_co_ you immediately set the layerMask on THAT mesh... to match the 2nd camera - the _qt_single object camera_qt_... and position that 2nd camera to _qt_feature upon_qt_ the selected object.  Aim camera AT object_co_ position it near the selected mesh_co_ and maybe light-it-up with a spotlight parented to the 2nd camera.  Then switch the user to THAT camera.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen_co_ user can edit object size/scale_co_ and will see those adjustments happen ONLY on THAT object_co_ but it is STILL part of the scene/shed. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can easily code your own custom _qt_observer_qt_ to watch-for size-changes on a piece of wall_co_ and trigger a shedRebuild() when that size (or size on any wall/roof) changes.  That_t_s sort of advanced observers/notify stuff_co_ but it_t_s still easy to do.  Learning _lt_strong_gt__lt_a href_eq__qt_https_dd_//doc.babylonjs.com/how_to/observables_qt_ rel_eq__qt_external nofollow_qt__gt_observers_lt_/a_gt__lt_/strong_gt_ is super handy and powerful.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou DON_t_T want to allow the user to rotate or position the single selected mesh... in WORLD space.  That would cause it to ruin the shape of the shed.  You COULD allow the user to rotate/position it in LOCAL space (while viewing single object camera)... but you must _qt_kill_qt_ (null) any position/rotation changes that the user made... before returning to _qt_scene view_qt_ camera/layer.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOr simply call shedRebuild() upon returning to full-scene-view cam/layer... something you will likely do ANYWAY.  Just ignore any positioning and rotations that user did while in _qt_single object view/mode_qt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn a way_co_ you are illustrating the difference between _lt_strong_gt_object edit mode_lt_/strong_gt__co_ and _lt_strong_gt_scene edit/layout mode_lt_/strong_gt_... something that all 3D modeling packages deal-with.  Some still say that those two tools... should be separated into different apps.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI hope I understood the issue.  It sounds like VV needs _qt_single object mode_qt_ with editing allowed on THAT object... yet it must update the entire shed WHILE those edits happen_co_ or AFTER it happens_co_ or maybe full-scene could be ALWAYS seen... in a _qt_popup_qt_ renderTargetTexture _qt_mini viewport_qt_.  User could SEE the changes to the full shed... WHILE changing values on one piece of the shed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust some ideas.  I hope I am on-topic.  _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-11-27T15:27:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi again!  _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#1WROZH%2367_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#1WROZH#67_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere_t_s a playground that shows _lt_em_gt_some_lt_/em_gt_ layerMask stuff_co_ and has 4 renderTargetTextures (views from a camera converted to a texture) mapped-onto some planes.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLayerMask was only used for a _qt_special_qt_ thing_co_ in this playground.  The renderTargetTexture used to make the view on _lt_em_gt_mon1_lt_/em_gt_ (in the lower left corner)... is a camera view from the main scene camera.  The 4 mons (views) at the bottom of the screen... were visible in the mon1 view_co_ when I first made the playground.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI wanted to NOT see the black area and 4 monitor planes... in that lower left corner view. (see my problem... _lt_strong_gt__lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#1WROZH%2312_qt_ rel_eq__qt_external nofollow_qt__gt_in this PG_lt_/a_gt__lt_/strong_gt_)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDeltakosh helped me use layerMasks... to remove the lower black monitor areas from the view in mon1 (lower left corner).   Now they are on a different layer from the rest of the scene.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can change mon1_co_ mon2_co_ mon3_co_ mon4_co_ and butback ._lt_em_gt_layerMask... _lt_/em_gt_to 2 (and then RUN again)_co_ to see what I mean.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_em_gt_Butback_lt_/em_gt_ and the 4 little monitor planes... are parented to the main camera.  That_t_s what keeps them on-screen_co_ rigidly-positioned.  Some users have reported that parenting to a camera... causes problems when canvas sizes change/scale.  Hitting F12 to open your browser_t_s dev tools... will show the issue_co_ I think.  Resizing the canvas makes butback resize/scale badly.  Someday I_t_ll learn more.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m hoping someday_co_ we can _qt_live-feed_qt_ a renderTargetTexture... to a BJS GUI rectangle/image.  THAT would rock!  Or... maybe I just need to invent the GUI renderTargetTextureControl... v1.0  (yeeeeah) _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_By the way_co_ SOMEDAY_co_ you might wish to say goodbye to HTML forms/widgets for editing your stuff.  Everything can be done with Babylon GUI... and then you simply go full-screen with your webGL canvas.  Do all your GUI... adjusters... sliders... readouts... with _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/how_to/gui_qt_ rel_eq__qt_external nofollow_qt__gt_BabylonJS GUI_lt_/a_gt_.  It_t_s pretty nice._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_It hurts to leave-behind HTML GUI_co_ because we are already familiar with it.  But_co_ full-screen 3D canvas... with GUI layered atop... is pretty sweet_co_ too.  Design it correctly_co_ and it can look _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#5XB8YT%238_qt_ rel_eq__qt_external nofollow_qt__gt_REAL classy_lt_/a_gt_.   AND_co_ by using BabylonJS GUI_co_ you can eliminate a _qt_scope_qt_ issue that happens when handing-off values from HTML scope_co_ to webGL scope._lt_/span_gt_  Once you build your GUI with BJS GUI_co_ all DOM-based event hassles... disappear.  It just takes some time_co_ and some big piles of GUI-making code.  Copy and paste festival... steal BJS GUI from others... easy.  _lt_span_gt__lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_ _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Your Roy_t_s Sheds app looks pretty nice_co_ too.  Well done!  I like it!_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]