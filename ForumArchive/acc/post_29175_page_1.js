[{"Owner":"KenRubin","Date":"2017-03-19T17:19:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Again_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet me explain what I_t_m trying to do first_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI want a panel of 3D objects which line up along the left-hand side of the canvas/viewport.  I_t_m trying to create an object factory of sorts.  The user will click and drag objects from the object factory into the scene proper_co_ the code will clone the selected object when this occurs.  I_t_m using two scenes for this_co_ one is the main scene_co_ with a ground and control-enabled camera receiving the clones and accumulating state_sm_ and another scene_co_ for the factory_co_ that is essentially static but has a camera and lights and meshes (the factory prototypes).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs I_t_ve said_co_ I want this factory to be arrayed down the left-hand side of the screen.  If I choose just any position for the factory objects_co_ they will go into and out of scope when the canvas aspect ratio changes.  So I want to be able to calculate a ray which vertically cuts the camera_t_s left-hand viewing-frustum plane_co_ say somewhere in the middle_co_ parallel to the near and far edges.  I think this should be a vertical slice_co_ abutting the left edge of the viewport.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere_t_s how I tried to do it_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFirst_co_ I tried using getFrustumPlanes. But the planes it gave me were oddly skewed.  When I generated geometric planes for each of the six_co_ for instance_co_ they did not form a convex solid.  And even when I mentally tried to figure out which plane was which part of the frustum_co_ I just couldn_t_t make sense of the numbers.  I would have expected 2 along each camera-centric axis (e.g. + &amp_sm_ - along X_co_ + &amp_sm_ - along Y_co_ + and - along Z--I setup a straight-on camera to help in understanding the numbers to no avail).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNext_co_ I tried a few of the unproject methods.  I think these methods should have converted a 2D point on the screen to a 3D point (or ray) in the world.  I read through many posts on this site to use what I thought were the best values for the camera_t_s projection matrix_co_ world matrix (identity)_co_ etc....  Never got anything even close to good numbers.  Mostly they were NaN until I saw one post which accessed maxima from the engine.  But when I positioned my mesh (using a sphere) at the returned 3D vector_co_ it always seemed to go to the same_co_ incorrect place (irrespective of my choice for 2D starting point).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNext_co_ I successfully wrote an iterative algorithm which used many of the same transformation matrices along with project.  This way_co_ I would choose a 3D point_co_ test where it was in 2D_co_ and knowing the fixed orientation of the camera_co_ choose another 3D point which projected closer to the 2D point for which I was aiming_co_ etc....  Sort of like a newton_t_s method for iteratively approaching the correct value that unproject should give me in fixed time.  OK_co_ I can do it_co_ but I want to do it correctly.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo my last attempt_co_ for which I have a playground_co_ uses_dd_ createPickingRayInCameraSpace.  I think this should give me a ray which looks like a point_co_ but really rides the intersection of the left and top viewing-frustum planes (because I choose 0_co_0).  However it does not.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlayground demo_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1CHH2O%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1CHH2O#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlease help.  I don_t_t care if I use any of these methods.  Is there a better way?  Should I be using the aspect ratio directly?  Should I just do my own matrix math? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tKen\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t\t\t\n\n_lt_span class_eq__t_ipsType_reset ipsType_medium ipsType_light_t_ data-excludequote_gt_\n\t_lt_strong_gt_Edited _lt_time datetime_eq__t_2017-03-19T17_dd_19_dd_53Z_t_ title_eq__t_03/19/2017 05_dd_19  PM_t_ data-short_eq__t_1 yr_t__gt_March 19_co_ 2017_lt_/time_gt_ by KenRubin_lt_/strong_gt_\n\t\n\t\t_lt_br_gt_fixed title\n\t\n\t\n_lt_/span_gt_\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-03-20T17:53:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello\n_lt_/p_gt_\n\n_lt_p_gt_\n\tdid you read this code?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Math/babylon.math.ts#L4332_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Math/babylon.math.ts#L4332_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis could help you better understand how planes are built.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe unproject could also work. Can you provide a PG of what you tried?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"KenRubin","Date":"2017-03-20T18:30:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Deltakosh_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI did not read that code.  I_t_ll take a look.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ I_t_ll build a PG for the unproject attempts when I get home tonight (in a few hours).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- Ken\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"KenRubin","Date":"2017-03-21T01:43:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOK_co_ I made a PG with my flawed unproject implementation.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#UWSIL%2351_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#UWSIL#51_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSome notes_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) If I just position the cube at _qt_worldVector_qt__co_ it is not visible at all.  Perhaps because it is too close to the camera?  So I make sure the camera looks down the z-axis and move the object to z _eq_ 0.  I don_t_t want to do this but I think it should work as long as I just size the browser rather than update the camera position.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) It doesn_t_t matter what coordinates I pick for source.  The cube is always positioned in the UL corner.  I would think that using_dd_ (1_co_ 1_co_ 0) (or perhaps_dd_ (engine.getRenderWidth()_co_ engine.getRenderHeight()_co_ 0)) would choose the LR.  I would like to choose the viewport-relative position for the mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen I change the aspect ratio by sizing the browser_co_ the object doesn_t_t stay fixed against the side of the viewport.  Perhaps this is because I_t_m fixing z?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for taking an interest_co_ I appreciate any help you can give me.  \n_lt_/p_gt_\n\n_lt_p_gt_\n\t- Ken\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-03-22T00:13:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t1. You are right_co_ you cannot see the box because it is clipped by the near plane. The trick could be to just slide the initial vector a bit_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#UWSIL%2352_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#UWSIL#52_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. It works for me_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#UWSIL%2354_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#UWSIL#54_lt_/a_gt_ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"KenRubin","Date":"2017-03-22T00:48:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tAwesome!  Thanks so much_co_ Deltakosh.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]