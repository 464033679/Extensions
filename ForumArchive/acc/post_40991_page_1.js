[{"Owner":"Nodragem","Date":"2018-11-01T14:28:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am making an inventory and I am wondering if there are simple ways to display 3D objects in the cells of a BABYLON.GUI grid?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny ideas? \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-11-01T14:53:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou can use the new GUI3D mechanism for that_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/how_to/gui3d#planepanel_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/how_to/gui3d#planepanel_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd you can render the grid itself on a mesh using regular 2D GUI\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-11-05T08:07:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYep_co_ the idea was to mix 3d and 2d objects because_co_ for instance_co_ I wanted to put a 3d object in a 2d GUI container.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI finally used 3d planes with an orthographic camera.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI found a way to match the size a my main 3d plane with a 2d GUI rectangle. Hence I thought I could use 2d GUI buttons and grids_co_ but no_dd_ you can_t_t position them using percentage_co_ hence their position is dependent on the screen resolution... While 3d objects are not. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-11-05T08:23:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWhat I did (and it_t_s slow)_co_ was create a part of my scene with 3d models and take screenshots with a second camera and then use those in the 2D GUI.  Sounds like you have a better way_co_ but I can_t_t quite visualize it.  I don_t_t know what a 3d plane is for example.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-11-08T10:09:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI meant a plane_co_ as in a flat surface made of 4 vertices. I used the term _lt_strong_gt__lt_u_gt_3d_lt_/u_gt__lt_/strong_gt_ plane as opposed to the 2d GUI.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo basically_co_ I made an orthographic camera this way_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_this.camera.orthoTop _eq_ 1080/2_sm_\nthis.camera.orthoBottom _eq_ -1080/2\nthis.camera.orthoLeft _eq_ -1920/2\nthis.camera.orthoRight _eq_ 1920/2_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis set up simulates a 1080 x 1920 resolution_co_ that_t_s a _qt_virtual_qt_ resolution_co_ because it is independent from the actual resolution of the device screen. That resolution is in world coordinate and reads in fact as 1080 _lt_u_gt_meters_lt_/u_gt_ x 1920 _lt_u_gt_meters_lt_/u_gt_ rather than 1080 _lt_u_gt_pixels_lt_/u_gt_ x1920 _lt_u_gt_pixels_lt_/u_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen I make my 3d objects (planes_co_ cubes_co_ characters) so that their largest side measure 1m. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHence if I apply _lt_strong_gt_mymesh.scaling _eq_ 120_lt_/strong_gt__co_ the largest side would measure 120m_co_ which will correspond to 120 virtual pixels.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tVirtual resolution is a common method to make GUI independent of screen resolution. Using this method the size of the objects/menu will resize automatically for any screen resolution as their position/scale are in world coordinate (meters).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt__lt_u_gt_The main problem_lt_/u_gt__lt_/strong_gt_ as for now is that BABYLON.GUI does not use a virtual resolution. Hence the only way to match the 2D GUI with the 3D objects rendered with the ortographic camera is by using percentage of the screen space. However_co_ as far as I know_co_ BABYLON.GUI does not support percentage for position (left_co_ top). Hence at the end of the day_co_ I made all my GUI (buttons_co_ textBlock_co_ etc...) with 3d planes_co_ so that the GUI scale automatically and in accordance with the other 3D objects.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ An obvious feature request would be to implement virtual resolution in BABYLON.GUI. It is quite common in game engines I think and would help mixing 3d objects and 2d GUI.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tEDIT_dd_ if you wanted to have a perspective camera to render the 3d objects on top of the GUI_co_ the process would be a bit more complicated. You would compute the distance at which your camera is covering 1080 meters x 1920 meters and place/organise your objects on that plane. However your 3d objects will suffer from perspective distortion when they are near the border of the screen. If that bother you_co_ you would need to consider having one perspective camera per 3d objects_co_ so that all the 3d objects are rendered in the center of their camera.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-11-08T17:02:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\teverything can be expressed with % (even left and top)_dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#XCPP9Y#712_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#XCPP9Y#712_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-11-09T17:17:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tha ok _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ _lt_/span_gt_I thought it was implemented only in the preview version for some reason.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo I guess I have no reason to use 3d planes anymore!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-11-10T18:07:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAlso_co_ I need to check if the font size be percentage _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-11-11T03:03:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt works _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt__gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#XCPP9Y#715_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#XCPP9Y#715_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nodragem","Date":"2018-11-11T11:38:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYep_co_ I gave it a try yesterday. But I need to find a way to resize the canvas or my web browser_t_s window while keeping a fixed vertical to horizontal ratio. Without that I cannot judge if the text stays within my buttons.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI guess that one thing that could be nice is that BABYLONJS could compute the fontsize for the text to fit the button. I did find some documentation on how to do it in the BABYLONJS documentation on drawText() for advanced textures. However_co_ it might be nice to have such a feature out-of-the-box. Of course_co_ we could freeze /unfreeze the fontsize.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]