[{"Owner":"devbot","Date":"2015-09-11T02:11:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_ve been scratching my head a bit on this and feel it should be much easier than it is turning out to be._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have a freeCamera in a scene which can be controlled with WASD._lt_/p_gt__lt_p_gt_What I also have is a UI with the WASD keys which light up when the user presses those keys._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Lastly I_t_m trying to have those keys mousedown to also move the free camera in the same way they keys do._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What I_t_ve been trying to work with is something along the lines of_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_case_dd_ _qt_forward_qt_freeCamera.cameraDirection +_eq_ BABYLON.Vector3.Cross(freeCamera.position_co_freeCamera.rotation) * speed_sm_break_sm_case_dd_ _qt_back_qt_freeCamera.cameraDirection -_eq_ BABYLON.Vector3.Cross(freeCamera.position_co_freeCamera.rotation) * speed_sm_break_sm__lt_/pre_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And about 50 variations of that._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I started out with simply assigning each key to an axis and moving along it_co_ which is all well and good until you rotate the camera._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Ahiru","Date":"2015-09-11T12:03:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou know_co_ that you can assign new buttons to the camera like_dd_\n_lt_/p_gt_\n\n_lt_pre class_eq__qt_ipsCode prettyprint prettyprinted_qt__gt_\n_lt_span class_eq__qt_pln_qt__gt_camera_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_._lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_keysUp_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_._lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_push_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_(_lt_/span_gt__lt_span class_eq__qt_lit_qt__gt_87_lt_/span_gt__lt_span class_eq__qt_pun_qt__gt_)_sm__lt_/span_gt__lt_span class_eq__qt_pln_qt__gt_ _lt_/span_gt__lt_span class_eq__qt_com_qt__gt_// _qt_w_qt__lt_/span_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tSo try out this one_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#2FSOZ_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#2FSOZ_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe advantage would be_dd_ The rotational calculation is done for you.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOnly for rolling it seems the free camera is missing a movement?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-09-11T15:11:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi guys.  Many folk parent the camera to an invisible mesh_co_ and then do all their orientations and translations on the parent _qt_camera gizmo_qt_.  *shrug*  An option._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Ped-up and ped-down seem like important camera movements (up and down the Y axis)... but not found on a default free camera. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I wired those actions to control-upcursor and control-downcursor_co_ in a project once (plotting vertices in space).  I didn_t_t modify the free camera itself.  I just built my own ped-up/down funcs that did the job.  You guys can do the same for spinning the camera around z-axis (rolling)... as needed._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Also... umm... devbot... think about continuously using cam.setTarget(something)...  on every frame.  Maybe even better... free camera is a subClass of _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/classes/2.2-alpha/TargetCamera_qt_ rel_eq__qt_external nofollow_qt__gt_TargetCamera_lt_/a_gt_... which also has a .lockedTarget _lt_strong_gt_property_lt_/strong_gt_.  The free camera inherits that property_co_ of course. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_These might be usable features for this issue_co_ too.  Party on!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Ahiru","Date":"2015-09-11T15:48:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks - the .lockedTarget is helpful!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"devbot","Date":"2015-09-14T06:25:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks for the input_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I saw _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/2246-move-object-relative-to-the-camera-view/_qt__gt_this _lt_/a_gt_thread which lead me to this result._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_function drive_camera(axis){   var move_direction _eq_ BABYLON.Vector3.TransformNormal(axis_co_ freeCamera.getWorldMatrix())_sm_    freeCamera.cameraDirection _eq_ move_direction   }_lt_/pre_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Where axis is a variation of _lt_strong_gt_BABYLON.Vector3(1_co_ 0_co_ 0)_sm__lt_/strong_gt_ depending on the button clicked/mousedown (WASD)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]