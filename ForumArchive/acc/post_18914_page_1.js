[{"Owner":"styxxx","Date":"2015-11-27T21:30:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have some ground tiles that I use. Currently I_t_m only using one _qt_real_qt_ object and a lot of instances of it. But I_t_m wondering if it_t_s more efficient to actually create a (bigger) merged mesh? Usually I_t_d assume the instances to be the better solution since it_t_s a mesh with just a few vertices that will be referenced to. But while testing I noticed a higher fps after I merges some of the instances which seems to be possible. _lt_br_gt_But merging instances strips the material. So how can I merge instances and keep it or reassign it afterwards? Does it even make sense or should I stick to the current solution?  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_rolleyes.gif_qt_ alt_eq__qt__dd_rolleyes_dd__qt__gt_ _lt_br_gt__lt_br_gt_Also some interesting thing_dd_ merging only works with the code posted here _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/wiki/How-to-merge-meshes_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/wiki/How-to-merge-meshes_lt_/a_gt__lt_br_gt_Using BABYLON.Mesh.MergeMeshes skyrockets the memory consumption until the whole browser tab crashes. This is a bug and shouldn_t_t happen. Even if you_t_re not supposed to merge instances using gigabytes of memory and freezing the tab - of course without error message in the console - seems like a rather wrong reaction _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-11-27T21:35:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You can not merge the instances._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"styxxx","Date":"2015-11-28T00:30:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ah_co_ I noticed that the merged instances are new meshes now. It works_co_ but the result isn_t_t an instance_co_ it_t_s a new mesh. So draw calls have increased. Interesting effect. _lt_br_gt__lt_br_gt_Still _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_BABYLON.Mesh.MergeMeshes shouldn_t_t crash the whole browser/tab. The developers should fix it. Maybe something like _qt_if parameter is not a mesh throw errror in console and do nothing_qt_. Seems like you can feed anything to such functions with various results. Makes it really hard finding some error in the own code. _lt_br_gt__lt_br_gt_After doing more research I think it_t_s more efficient to use lots of instances of smaller floor parts than to use one huge merged floor object since one large mesh has to be completely rendered/handled if just a small part is visibe. But with lots of small parts only those visible parts need to be calculated. Right?_lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-28T01:19:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_Using BABYLON.Mesh.MergeMeshes skyrockets the memory consumption until the whole browser tab crashes. This is a bug and shouldn_t_t happen. Even if you_t_re not supposed to merge instances using gigabytes of memory and freezing the tab - of course without error message in the console - seems like a rather wrong reaction_lt_/span_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_Most of us can be pretty upset when reading this. Do you remember this is a FREE community based open source project?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Furthermore_co_ if you want to be useful_co_ please at least provide a repro case so we can fix this unworthy behavior_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"styxxx","Date":"2015-11-28T02:27:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Sorry_co_ wasn_t_t meant to sound rude or demanding. Just wanted to be helpful by pointing out some probably bug._lt_br_gt__lt_br_gt_I created a playground_co_ you_t_ll need to enable the merge statement to see the effect. Since the meshes are rather simple it_t_s not as severe as in _qt_real life_qt_. Doesnt_t_ have to bee 200 meshes_co_ _lt_br_gt_Tested it with firefox and chrome. Firefox just freezes and then reports that a script isn_t_t working right. With chrome the tab crashes after all available memory on the machine is gone (edit_dd_ not all_co_ but a lot_sm_ Just tested with more free mem). _lt_br_gt__lt_br_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2EGQ6C%230_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2EGQ6C#0_lt_/a_gt__lt_br_gt__lt_br_gt_Just noticed that it also happens with just 2 objects. Doesn_t_t need to be 200 like in the playground example._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-11-28T02:54:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok this bug comes from the instance merge which is not supported. If you merge clones instead it works_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2EGQ6C%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2EGQ6C#1_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Btw I will add support for instances merging in the next commit_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"styxxx","Date":"2015-11-28T21:33:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Venerated1","Date":"2017-04-08T18:47:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis thread is the only way I figured out how to use instances. DK_t_s playground there_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2EGQ6C%231_qt_ rel_eq__qt_external nofollow_qt_ style_eq__qt_color_dd_#3c6994_sm__qt__gt_http_dd_//www.babylonjs-playground.com/#2EGQ6C#1_lt_/a_gt_    ...is useful for us newbies that don_t_t know how to use an instance properly.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_    var matForStars _eq_ new BABYLON.StandardMaterial(_qt_starMat_qt__co_ scene)_sm_\n    matForStars.emissiveColor _eq_ new BABYLON.Color3(1_co_ 1_co_ 1)_sm_\n    matForStars.specularColor _eq_ new BABYLON.Color3(0_co_ 0_co_ 0)_sm_\n    matForStars.diffuseColor _eq_ new BABYLON.Color3(0_co_ 0_co_ 0)_sm_\n\n    var star _eq_ BABYLON.Mesh.CreateSphere(_qt_star_qt__co_ 1_co_ 0.5_co_ scene)_sm_\n    star.material _eq_ matForStars_sm_\n    star.position.z _eq_ 150_sm_\n                \n    // Create some instances_co_ make a bunch of stars\n    var stars _eq_ new Array()_sm_\n    for (var i _eq_ 0_sm_ i &lt_sm_ 1000_sm_ i++) {\n        var random1 _eq_ (Math.random() - 0.5) * 300_sm_\t\t\n        var random2 _eq_ (Math.random() - 0.5) * 300_sm_\n        var random3 _eq_ (Math.random() - 0.5) * 300_sm_\n                \n        var magnitudeStar _eq_ Math.sqrt(random1 * random1 + random2 * random2 + random3 * random3)_sm_\n                \n        if (magnitudeStar &lt_sm_ 100 || magnitudeStar &gt_sm_ 150 ) {\n            i--_sm_\n        }\n        else {\n            stars[i] _eq_ star.createInstance(_t_Instance_t_ + i)_sm_\n            stars[i].position.x _eq_ random1_sm_\n            stars[i].position.y _eq_ random2_sm_\n            stars[i].position.z _eq_ random3_sm_\n        }\n    }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThis is a simplified version of what I ended up with.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-04-10T22:41:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCan you tell me how we can improve the doc? _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/tutorials/how_to_use_instances_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/tutorials/how_to_use_instances_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt is always tough to create good documentation so please do not hesitate to comment/update it _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]