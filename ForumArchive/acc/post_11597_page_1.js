[{"Owner":"RaananW","Date":"2015-01-08T22:43:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Howdy folks_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have ported a wonderful simplification algorithm written in c to babylonJS._lt_/p_gt__lt_p_gt_It is based on _lt_a href_eq__qt_http_dd_//www.cs.cmu.edu/afs/cs.cmu.edu/user/garland/www/Papers/quadric2.pdf_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.cs.cmu.edu/afs/cs.cmu.edu/user/garland/www/Papers/quadric2.pdf_lt_/a_gt_ _lt_a rel_eq__qt_external nofollow_qt__gt_and http_dd_//voxels.blogspot.de/2014/05/quadric-mesh-simplification-with-source.html_lt_/a_gt_ ._lt_/p_gt__lt_p_gt_What can you do with it? It can be used to automatically create LOD objects for meshes (if the user has time for that) directly in the browser._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It is surprisingly fast - it is reducing ca. 130000 triangles to 65000 in less than 5 seconds on my good ol_t_ laptop._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_strike_gt_Example can be seen here - _lt_a href_eq__qt_http_dd_//babylonjsexperiments.raananweber.com/?rate_eq_0.5_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjsexperiments.raananweber.com/?rate_eq_0.5_lt_/a_gt_ _co_ the fractal object (generated using meshlab) contains ca. 131000 triangles. Wait a few seconds for it to load and decimate. The object on the right is the original_co_ on the left is the reduced._lt_/strike_gt__lt_/p_gt__lt_p_gt__lt_strike_gt_The rate can be change in the URL. At 0.3 it is still relativly hard to find the difference. At 0.1 it is very clear. But this is exactly what_t_s needed for LOD._lt_/strike_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_At the moment I am not analyzing the UVs (meshlab doesn_t_t generate them as well)_co_ this would be the next step. Making it Async is also on the todo list _dd_-)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Edit - Preview site changed_co_ check my following post about the new async implementation._lt_/p_gt_\n\n\n\t\t\t\n\t\t\t\t\n\n_lt_span class_eq__t_ipsType_reset ipsType_medium ipsType_light_t_ data-excludequote_gt_\n\t_lt_strong_gt_Edited _lt_time datetime_eq__t_2015-01-14T23_dd_20_dd_49Z_t_ title_eq__t_01/14/2015 11_dd_20  PM_t_ data-short_eq__t_3 yr_t__gt_January 14_co_ 2015_lt_/time_gt_ by raananw_lt_/strong_gt_\n\t\n\t\n_lt_/span_gt_\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2015-01-09T00:55:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_wow! This is something that lots of us have been waiting for!_lt_/p_gt__lt_p_gt_Excellent work_co_ can_t_t wait for more of it!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-01-09T02:13:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Wooooot. we need a mesh.simplify function now _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-01-09T08:26:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_working on it _dd_-)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-01-09T14:15:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_could this be made to write the decimated mesh to a new babylon file etc for future loading instead of constantly recreating it? Maybe some flag for saving if not existing._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-01-09T14:33:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It is currently writing the position_co_ normal and UV Buffer to a new mesh and not changing the old one_co_ I think this is what you meant. Or did I misunderstand you?_lt_/p_gt__lt_p_gt_The idea is to make auto-asyns-LOD after loading a mesh (thus saving bandwidth and server space _dd_-) )_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-01-09T14:54:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_New mesh_co_ yes_co_ but I was referring to a potential option of saving the new mesh to a new babylon file_co_ but if the new mesh could be created async to the render loop without impacting frame rate etc_co_ then this would be even more amazing. I wouldn_t_t have to waste the time making 3~4 LOD meshes for all my objects_co_ and we have thousands of meshes for our game..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-01-09T15:51:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Would be interesting to see how well it performs._lt_/p_gt__lt_p_gt_When i finish the async version that plays nicely with textures I_t_ll test and publish the results here._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-01-09T21:53:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m looking forward to it... I have a pretty massive scene that would push it pretty hard and it_t_s about 1/6 of what we want it to be._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-01-13T21:31:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_So_co_ reached another demo level._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The decimation now runs completely async and doesn_t_t affect the rendering (well_co_ not as much as you would expect!). LOD levels can be calculated parallel or one after the other. The decrease in FPS is not that serious (going down to 50-55 with not-so-complex meshes_co_ down to 40 with more complex meshes. _lt_/p_gt__lt_p_gt_There is still work to do in regards to UV textures_co_ but other than that it works._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//babylonjsexperiments.raananweber.com/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjsexperiments.raananweber.com/_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_the url accepts the following parameters_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_mesh - the mesh to load_co_ selection between dude (babylon_t_s famous dude_co_ LOD will run on all meshes)_co_ danceMoves (single textured mesh. not dancing_co_ sorry)_co_ fractal (the one from the last example_co_ a complex mesh with ca. 130000 triangles). default is danceMoves_lt_/p_gt__lt_p_gt_levels - the number of levels to generate (5 is default_co_ no max). 5 will generate 100%_co_ 80%_co_ 60%_co_ 40%_co_20% . You can guess what comes out of 4. Or 10 _dd_-)_lt_/p_gt__lt_p_gt_parallel - should all LOD levels of all meshes be calculated parallel or one after the other. true or false_co_ default false._lt_/p_gt__lt_p_gt_offset - the distance offset to set between each level of LOD. default is 100. Good level would be 50-100 to be able to actually see what the decimation does._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Links to try_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//babylonjsexperiments.raananweber.com/?parallel_eq_true&amp_sm_levels_eq_8&amp_sm_mesh_eq_dude_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjsexperiments.raananweber.com/?parallel_eq_true&amp_sm_levels_eq_8&amp_sm_mesh_eq_dude_lt_/a_gt__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//babylonjsexperiments.raananweber.com/?parallel_eq_false&amp_sm_levels_eq_8&amp_sm_mesh_eq_fractal_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjsexperiments.raananweber.com/?parallel_eq_false&amp_sm_levels_eq_8&amp_sm_mesh_eq_fractal_lt_/a_gt__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//babylonjsexperiments.raananweber.com/?parallel_eq_true&amp_sm_levels_eq_8&amp_sm_mesh_eq_danceMoves&amp_sm_offset_eq_50_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjsexperiments.raananweber.com/?parallel_eq_true&amp_sm_levels_eq_8&amp_sm_mesh_eq_danceMoves&amp_sm_offset_eq_50_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Pay attention to the total meshes rising after loading and the active vertices changes while zooming in or out. This will be a great indication as to what it actually does. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-01-14T00:21:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey THIS IS AWESOME!!!!! Can_t_t wait for the PR (You will save me a lot of time _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2015-01-14T00:34:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Amazing! I think this feature will most useful for terrain and fancy decorations in the background and such! So cool!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-01-14T09:16:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I will soon test it on an entire scene and post the results here. Would be interesting to see what it does to the Train scene _dd_-)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@Deltakosh - PR is coming soon! _dd_-) Just working out the fine details. Do you think a new Decimation/Simplification module be in order? Or just integrate it in (Abstract)Mesh? A new module might come in handy if more types of simplification will be implemented. And then afterwards integrate it in the SceneOptimizer?_lt_/p_gt__lt_p_gt_There are many small things to be made before integrating it. Best example are sub meshes - they should be recalculated_co_ which is an almost impossible job (at the current state)_co_ as the decimation _qt_rearranges_qt_ the indices and vertices. I_t_ll think of something. Another thing that i actually tried solving yesterday was bones and skeleton. This_co_ just like the submeshes_co_ will be influenced quite a lot from decimation. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If anyone is interested - the code is in my github (together with the new head-tracking experiment I made_co_ but this is for another post _dd_-) ) here - _lt_a href_eq__qt_https_dd_//github.com/raananw/BabylonJS-Experiments%C2%A0_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/raananw/BabylonJS-Experiments_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-01-14T22:59:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_First version could be limited to mesh with just one sub-mesh_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If possible I prefer keeping it in the mesh or abstract mesh file but if you think it worth moving it to a separate file this is your call. The main goal to keep in mind is simplicity for users. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-01-14T23:19:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Since it is quite a lot of code_co_ I think separating it would make sense. I can put the code in a different file in the Mesh directory and add the Mesh class a _qt_simplify_qt_ function that will accept a map of quality and distance (together with other needed parameters). No real need of uber-complicating the process you are right _dd_-)_lt_/p_gt__lt_p_gt_Will work on the easiest way for the developer to use it and send you a PR when I am done._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-01-14T23:50:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Sounds good. do not forget to update these files with the new file_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Tools/Gulp/gulpfile.js_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Tools/Gulp/gulpfile.js_lt_/a_gt__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Tools/BuildOurOwnBabylonJS/BuildOurOwnBabylonJS/babylonJS.xml_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Tools/BuildOurOwnBabylonJS/BuildOurOwnBabylonJS/babylonJS.xml_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thank you for your contribution!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-01-15T02:51:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_span style_eq__qt_font-size_dd_14.6666669845581px_sm__qt__gt_RaananW_co__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_font-size_dd_14.6666669845581px_sm__qt__gt_Very useful! _lt_/span_gt_I used this to test evaluation time on vertex weight maps today_co_ and it saved me considerable time optimizing poly count local to skeleton bones - specifically joint areas. If you think you_t_ll continue development and provide a gui for loading_co_ hiding_co_ and unhiding - models_co_ assets_co_ and scene elements_co_ I_t_m sure this would become a regularly used tool by developers.  I know I would link directly to this.  Please let the community know if you plan to add addtional features and to keep this online and active._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks!  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_DBawel_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-01-15T09:12:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I can keep this alive and add functionality_co_ if you think it will benefit someone._lt_/p_gt__lt_p_gt_At the moment I am working on integrating it into babylon (a simplification method). When i finish that_co_ I am probably going to continue playing with decimation (other types maybe)_co_ but I can also extend the tool_t_s functionality. I have already implemented something similar to Scene/Object loading in the material editor_co_ shouldn_t_t be too hard adding it here._lt_/p_gt__lt_p_gt_If you ever want to give me a list of functions you  think will be helpful (apart from those that you wrote)_co_ I can try finding the time to implement them. All open sourced for the community _dd_-)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Seyren","Date":"2015-01-15T19:23:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thank you so much!_co_ i_t_m looking foward to it!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Just had a question about the meshes being displayed on the example_co_ where are the other LOD meshes stored at?_co_ since we can see each example can have like 9 meshes for example_co_ assuming they are not constantly calculated all the time._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m curious about this because if i ever refresh the webpage again would this mean the 9 meshes are calculated again or they are somewhere stored in my cache or even in the webpage? I hope i was clear with this question_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Keep it up_co_ i_t_m totally loving it!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-01-15T20:18:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi Seyren_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_the meshes are calculated ad hoc and stored at the LOD Array of the mesh after the decimation process. each time the page is reloaded your browser is recalculating them_co_ but once they are calculated they stay in RAM until the page is closed (or until they are disposed)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Would be interesting to see if the LODs can be stored in the cache much like the other resources (if the manifest allows it). Haven_t_t thought about it! Will ad that to the ToDo list._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-01-17T19:16:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Pull request submitted - _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/pull/366_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/pull/366_lt_/a_gt_ . Mesh has a _qt_simplify_qt_ function_co_ I will write a short tutorial after the merge_co_ if needed. Technically all needed is this _dd_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_mesh.simplify([{ quality_dd_ 0.9_co_ distance_dd_ 25 }_co_ { quality_dd_ 0.3_co_ distance_dd_ 50 }])_sm__lt_/pre_gt__lt_p_gt_further parameters are also available (parallel processing etc_t_)_co__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-01-17T19:59:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Great!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-01-18T04:46:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Awesome man!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-01-20T17:04:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_I can not find the tutorial on the wiki? Maybe he is still ongoing?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-01-20T21:57:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_strike_gt_The tutorial is here - _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/wiki/In-Browser-Mesh-simplification-(Auto-LOD)%C2%A0_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/wiki/In-Browser-Mesh-simplification-(Auto-LOD)_lt_/a_gt__lt_/strike_gt__lt_/p_gt__lt_p_gt_There is a small bug that i needed to fix (I tried adding support for meshes with Color Vertex Data_co_ which cause the others to... not work correctly _dd_-) )_co_ I just sent a pull request with a fix._lt_/p_gt__lt_p_gt_Wait before testing the demos. Next time the babylon.js file of the editor will be updated (after the pull request merge) It will work. I will then extend the demos to Height Maps and the Skull object._lt_/p_gt__lt_p_gt_I will update here when it is all there and working. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The link to the tutorial doesn_t_t work for some reason. Try searching LOD in the Wiki_t_s search field. Let me know if you find it._lt_/p_gt__lt_p_gt_@Deltakosh_co_ I can_t_t edit the tutorial anymore_co_ is it intended?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]