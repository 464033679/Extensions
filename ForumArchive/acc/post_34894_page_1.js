[{"Owner":"Raggar","Date":"2018-01-05T14:00:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI was wondering whether or not it_t_s possible to get the world/3D positions of different textures using the TerrainMaterial.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet_t_s use the TerrainMaterial PG as an example_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#E6OZX%237_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#E6OZX#7_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow_co_ let_t_s say I want to place meshes wherever the rock texture is used on the ground mesh_co_ programmatically and automatically.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI don_t_t seem to find any relevant references or functions in the object_co_ and can_t_t think of a proper way without loading the image separately and somehow map those colors to the ground positions.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-01-05T18:00:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthere is no automatic way per se but you can read the content of your mix map to  get UV coordinates where the rock texture will be applied.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUsing this UV coordinates you can then deduce XZ coordinates on your ground. Then you will need to get the Y coordinates (you can also get this value by reading at UV coordinates in the ground texture)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2018-01-05T18:14:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tEhhhhh_co_ yes but not inherently. And not on the GPU._lt_br /_gt__lt_br /_gt_\n\tThis will take some math.  So you have your mix map_co_ which will be they key.  Lets say any area that is rocks is coded red on the mix map_co_ what you are going to need to do is first create some control logic for the analysis of a section of terrain and then some sort of pseudo random method.  _lt_br /_gt__lt_br /_gt_\n\tFirst Step_dd_ Create an array of usable meshes to be placed_sm__lt_br /_gt_\n\t2_dd_ Load the Terrain_t_s mixmap into a function that iterates over areas of the map at a certain fidelity._lt_br /_gt_\n\t3_dd_ If at that terrain mixmap location it meets the conditions (so much red is present) do step 4 else continue iterations _lt_br /_gt_\n\t4_dd_ Pass location of test into the pseduo random method and see if the point validates for example if you could test if the locations value creates a psudeo random number greater then lets say 0.8 then go to step 5 else continue iterations_sm__lt_br /_gt_\n\t5_dd_ Pass location again into pseudo random method in range equal to length of your mesh array_co_ floor the value and place mesh from array that returns from the random result_sm_  YOU ARE done or continue to step 6_sm__lt_br /_gt_\n\t6_dd_ Pass location into pseudo random method to get values for mesh rotation/scaling/position offset._lt_br /_gt__lt_br /_gt__lt_br /_gt_\n\tI would also recommend doing this recursively_co_ so its propagates in async.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2018-01-05T19:55:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#CD2RHZ%2313_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#CD2RHZ#13_lt_/a_gt__lt_br /_gt__lt_br /_gt_\n\tHere is the majority of the work for you_co_ needs a bit of refinement (an there are better logic chains then this).. I would take advantage of a flood fill algo as well to make it more efficient on the testing instead of a x/y loop._lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]