[{"Owner":"adam","Date":"2017-01-06T17:01:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_157906_qt_ data-ipsquote-contentid_eq__qt_27431_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1483720487_qt_ data-ipsquote-userid_eq__qt_4442_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t27 minutes ago_co_ Deltakosh said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tBecause the decompose can decompose to non linear values between calls\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tWould that account for the weird transformation_co_ though?  \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere I set the startValue and endValue to currentValue and blend to 1.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1WUHAN%238_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1WUHAN#8_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tShouldn_t_t that be the same as doing no lerp?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1WUHAN%239_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1WUHAN#9_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-01-06T17:10:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tNope the decompose still happen\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Gugis","Date":"2017-01-07T20:13:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI remade babylon file from scratch_co_ also tested it on 2.4 version_co_ but nothing changed ¯\\_(ツ)_/¯\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Mist","Date":"2017-01-09T03:53:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI see a couple of odd things in the .blend file. Why key frame bones that don_t_t translate_co_ rotate or scale? There are feyframes on bones that are not needed because those bones follow parent bones that are keyframed?????? Is this something to do with BJS? everybody bone needs to be keyed for every frame? Why are there x_co_y_co_z scale keyframes on the bone when no bone is scaling? ect.....\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs to the OP_t_er and the question_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFirst_co_ why does you mesh object have keyframes on it? you have no shapekeys_co_ so what about the mesh is keyframed?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSecondly_co_ you have keyframes on the armature (walk_with_shield) as well as an Action in the NLA Editor that is also titled _t_walk_with_shield_t_. In the Dope Sheet click the button _qt_Push Down_qt_. It converts keyframes to an action. Then go to the NLA Editor and you_t_ll see that you now have walk_with_shield Action Strip and walk_with_shield.001 Action Strip. Please note_co_ they do not line up on the timeline on the NLA Editor. I am guessing that the exporter is seeing the keyframes named walk_with_shield and the Action Strip name walk_with_shield_co_ exporting them both. Then inside the BJS engine_co_ the method is not sure what you are calling - the keyframes or the Action Strip.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ all your actions are stacked and on different tracks as opposed to inline and on 1 track (not sure if matters in BJS) but it does for blending actions to be used in an animation inside blender. Sometimes you may want the Action Strips on the same track and in some sort of sequence_co_ other times on different tracks and overlapping (with an offset) for blending between Action Strips. There are a number of ways to use the NLA Editor_sm_ It is a very powerful animation tool.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI might be talking out my butt as I know nothing about BJS_co_ but I do have an understanding of blender and animation.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-01-09T17:27:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIn armature animation_co_ any given bone may not have an exported frame_co_ if it is the same value as the previous frame.  In the case of 40 finger bones_lt_img alt_eq__qt__dd_blink_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_blink.png_qt_ title_eq__qt__dd_blink_dd__qt_ /_gt_ that are not even being animated_co_ this saves a lot of otherwise wasted space.  The BJS animation system is set up to handle this.  Every bone has to populate the first frame though.  So_co_ looks like somehow the ranges are wrong.  Not going to look at that right now.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tActions are exported for you to combine as required.  NLA is not consulted.  Have not spent any time looking at NLA_co_ since I am not interested in doing the performance in Blender_co_ then regurgitating in at run time.  I do not even use this variant of the exporter_co_ or the BJS animation system.  My animation system extension is just series of pose blends after another as well.  Everything is already decomposed_co_ so I just do not have this problem.  I really do not have a lot vested in this topic_co_ sorry.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]