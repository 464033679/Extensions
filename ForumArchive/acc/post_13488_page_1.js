[{"Owner":"Vousk-prod.","Date":"2015-03-29T20:37:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello boys (and girls_co_ maybe... I hope _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_)_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Is it possible to create a new BABYLON.Texture from a particular area of texture file instead of the whole file ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In some cases_co_ to avoid too much http requests_co_ it would be usefull to download only a few spritesheets and be able to assign a sprite to a BABYLON.Texture instead of whole a file_co_ is that possible ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-03-30T03:07:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_77041_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_13488_qt_ data-ipsquote-username_eq__qt_Vousk-prod._qt_ data-cite_eq__qt_Vousk-prod._qt_ data-ipsquote-timestamp_eq__qt_1427661456_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Hello boys (and girls_co_ maybe... I hope _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_)_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Is it possible to create a new BABYLON.Texture from a particular area of texture file instead of the whole file ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In some cases_co_ to avoid too much http requests_co_ it would be usefull to download only a few spritesheets and be able to assign a sprite to a BABYLON.Texture instead of whole a file_co_ is that possible ?_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ve been working on this. You can do it but it_t_s not built in or anything_co_ you have to wrangle the uv scale and offset of each material. Also_co_ at least in my tests I had to leave two blank pixels between sprites to avoid bleeding._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It would be might handy if BJS supported one of the various spritesheet formats._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-03-30T07:53:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_If you want to use one single texture with different u and v offsets you will have to either change the UV coordinates (suprisingly_co_ it was discussed a few days ago here - _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/13420-display-one-video-on-multiple-objects-with-the-videotexture/_qt__gt_http_dd_//www.html5gamedevs.com/topic/13420-display-one-video-on-multiple-objects-with-the-videotexture/_lt_/a_gt_) or _qt_duplicate_qt_ the texture and set different offsets an scales. _lt_/p_gt__lt_p_gt_The current relation between texture and ov offset and scale is 1-to-1. You can_t_t change one without the other_co_ but you can count on the browser_t_s and babylon_t_s cache mechanism to actually support that. create different textures using the same url for a single image_co_ and it won_t_t be downloaded multiple times. This is the safest solution I see for regular images. You can then set new u and v offsets_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1GLIH9_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1GLIH9_lt_/a_gt__lt_/p_gt__lt_p_gt_this is just a simplified version of the materials demo in the playground. check how many requests are sent and you will see the file is only loaded once._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-03-30T09:20:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yep I know that a single file is never downloaded multiple times_co_ that_t_s a big great feature of BJS !! _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wub.png_qt_ alt_eq__qt__dd_wub_dd__qt__gt__lt_/p_gt__lt_p_gt_I_t_m not sure changing the materials UV is the right way to go_co_ they_t_re pretty complex_co_ coming from objects unwrapping and they_t_re finely tuned for correct lightmapping_co_ bump_co_ etc..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I think it would be interesting to simply have a method that creates a BABYLON.Texture array from a single spritesheet (supporting one of the various spritesheet formats_co_ as fenomas suggested)._lt_/p_gt__lt_p_gt_For instance_co_ if a 1024x1024 spritesheet contains 128x128 sprites_co_ we_t_ll get 64 BABYLON.Texture. We then use them as usual_co_ no material UV modification needed._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-03-30T09:50:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_77091_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_13488_qt_ data-ipsquote-username_eq__qt_Vousk-prod._qt_ data-cite_eq__qt_Vousk-prod._qt_ data-ipsquote-timestamp_eq__qt_1427707256_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_I think it would be interesting to simply have a method that creates a BABYLON.Texture array from a single spritesheet (supporting one of the various spritesheet formats_co_ as fenomas suggested)._lt_/p_gt__lt_p_gt_For instance_co_ if a 1024x1024 spritesheet contains 128x128 sprites_co_ we_t_ll get 64 BABYLON.Texture. We then use them as usual_co_ no material UV modification needed._lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_That would be 2D canvas operations - draw the texture into a canvas and then read out subsections. BJS already does something similar to convert textures to power-of-two sizes. However_co_ the point of using texture atlases is generally to avoid texture binds_co_ and splitting one into separate textures would lose that benefit. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I expect the ideal thing would be for BJS to grok texture atlases in such a way that the user doesn_t_t have to wrangle all the scales and offsets_co_ but behind the scenes the whole atlas texture stays intact._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-03-30T09:50:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This is a very simple function to implement - in the case of what you just suggested_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var imageUrl _eq_ _qt_http_dd_//www.awsomeserver.com/someSillyCat.jpg_qt__sm_var meshesArray _eq_ getMyMeshes()_sm_ //well_co_ this is up to you _dd_-)var spriteWidth _eq_ 8_sm_var spriteHeight _eq_ 8_sm_for(var w _eq_ 0 _sm_ w &lt_sm_ spriteWidth _sm_ ++w) {    for(var h _eq_ 0 _sm_ h &lt_sm_ spriteHeight_sm_ ++h) {        var texture _eq_ new BABYLON.Texture(imageUrl_co_ myScene)_sm_        texture.uScale _eq_ 1/spriteWidth_sm_        texture.vScale _eq_ 1/spriteHeight_sm_        texture.uOffset _eq_ w - spriteWidth/2_sm_        texture.vOffset _eq_ h - spriteHeight/2_sm_        meshesArray[w*spriteHeight + h].material.diffuseTexture _eq_ texture_sm_    }}_lt_/pre_gt__lt_p_gt_I have to admit I haven_t_t tested this_co_ but it should work._lt_/p_gt_\n\n\n\t\t\t\n\t\t\t\t\n\n_lt_span class_eq__t_ipsType_reset ipsType_medium ipsType_light_t_ data-excludequote_gt_\n\t_lt_strong_gt_Edited _lt_time datetime_eq__t_2015-03-30T14_dd_03_dd_49Z_t_ title_eq__t_03/30/2015 02_dd_03  PM_t_ data-short_eq__t_3 yr_t__gt_March 30_co_ 2015_lt_/time_gt_ by RaananW_lt_/strong_gt_\n\t\n\t\n_lt_/span_gt_\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-03-30T10:13:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Correcting my initial post - _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1GLIH9%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1GLIH9#4_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_the offset should be calculated differently_co_ but it works. There_co_ sprites for meshes _dd_-)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-04-01T08:57:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks RaananW for this example._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I like the idea_co_ but I_t_m not sure it_t_s totally perfs friendly..._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_for(var w _eq_ 0 _sm_ w &lt_sm_ spriteWidth _sm_ ++w) {   for(var h _eq_ 0 _sm_ h &lt_sm_ spriteHeight _sm_ ++h) {      textures[index++] _eq_ new BABYLON.Texture(_qt_textures/earth.jpg_qt__co_ scene)_sm_      texture.uScale _eq_ 1/spriteWidth_sm_      texture.vScale _eq_ 1/spriteHeight_sm_      texture.uOffset _eq_ (w - spriteWidth/2) + 0.5_sm_      texture.vOffset _eq_ (h - spriteHeight/2) + 0.5_sm_   }}_lt_/pre_gt__lt_p_gt_The idea of creating textures from a spritesheet is to avoid too much HTTP requests. For that_co_ your idea is great. But this will create a lots of textures in memory. That_t_s not a big deal for a realtime engine if those textures are small (at sprite_t_s width and height resolution)_co_ but here those textures will be really big (at spritesheet_t_s width and height resolution)._lt_/p_gt__lt_p_gt_Pretty sure that will kill memory_co_ particularly on mobile devices._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Apart from that_co_ there also are some cases where we need to change texture_t_s UV scale or offset for a particular object_co_ but it will be impossible here_co_ since that won_t_t just change the  we will not change the aspect of the texture but also its content..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Is it possible to take a picture and to cut it in part and then to use that parts to create Texture objects ? That would do the trick._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-04-01T08:59:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Or_co_ as fenomas suggested_co_ since the point of using texture atlases is generally to avoid texture binds_co_ and splitting one into separate textures would lose that benefit_co_ maybe BJS could have a method to assign to material a spritesheet texture (specifying which sprite to use). I don_t_t know if this would be optimised or not in terms of performances._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-04-01T09:12:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co_ sorry_co_ just saw your last message._lt_/p_gt__lt_p_gt_You are right_co_ this will create quite a lot of textures with the same image_co_ but i doubt it is using more memory (haven_t_t tested thou)_co_ as the images come from babylon_t_s cache and not the browser_t_s cache - _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Babylon/Materials/Textures/babylon.texture.ts#L65_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Babylon/Materials/Textures/babylon.texture.ts#L65_lt_/a_gt_ . It is using the cache for the texture_co_ and it is only stored once. So the only memory used is the texture class and not the image_co_ which is not too large._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Setting the uv offset and scale on your own would be possible if you provide a certain _qt_sprite manifest_qt__co_ much like the css sprite definitions. This of course requires the frameworks support_co_ but I have to admit would be a nice feature. You could also do it already at the scene_t_s file (set all of those variables by yourself)_co_ and then no need for any framework extension at all._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I am not sure what will one big texture improve_co_ this has to be tested_co_ but it is of course possible - put all textured loaded textures onto acanvas and store as as png in the cache (for example). Or use it directly. I believe however this will create unneeded load on the GPU_co_ as this texture will have to be sent everytime the object is being rendered. And as png/jpg are totally not GPU optimized_co_ that would mean that the entire texture will have to be decompressed. Not so nice when it comes to large textures..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-04-01T10:32:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yes_co_ images files are stored in cache_co_ but once the textures are instanciated in the engine they_t_re allocated as separate objects in GPU memory_co_ aren_t_t they ? I do not exactly know how the GPU works but I think each different texture object allocated take its own space in GPU memory (and for realtime engine_co_ the higher the resolution_co_ the -very- higher memory amount needed)._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-04-01T18:39:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_No_co_ if you create 10 x  BABYLON.Texture _lt_strong_gt_on the same fil_lt_/strong_gt_e_co_ in GPU memory only one texture is created_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-04-01T19:06:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_What a piece of info! That_t_s a great news!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-04-01T19:58:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_My job in this affair is to guarantee that things are performant but simple to use _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-04-01T20:28:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_And we are lucky you_t_re good at it _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_laugh.png_qt_ alt_eq__qt__dd_lol_dd__qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]