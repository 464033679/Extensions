[{"Owner":"Raggar","Date":"2016-09-30T22:02:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAs my little project is done using Babylon_co_ I thought this would be the most fitting and active section. If not_co_ mods may move the topic as they please.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am unsure as to how it is possible to apply Server Reconciliation when using physics to drive the movement_co_ as I am using Cannon.js.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe examples I_t_ve seen on SR are based on movement_co_ by first applying the confirmed position_co_ followed by applying all the unconfirmed input_co_ and thereby smoothing the movement of a local player in a multiplayer setup.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI don_t_t really see how this is possible_co_ as by far as I know_co_ Cannon won_t_t be able to simulate ahead of time_co_ and by using velocities/forces/impulses_co_ there is bound to be time involved due to acceleration etc.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) Is it possible_co_ and has it been done using either Cannon.js_co_ or other of the physics implementations?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2) Are there any other ways of dealing with the apparent jitter/lag? Prediction is good as Cannon is deterministic_co_ but the updates still create a very laggy feel.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tA good example is this_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.gabrielgambetta.com/fpm_live.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.gabrielgambetta.com/fpm_live.html_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTurning on prediction_co_ you_t_ll get results identical to what I have now_co_ but applying unconfirmed input after the confirmed server snapshot simply makes the movement seem slow and unresponsive.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]