[{"Owner":"theom","Date":"2018-07-10T01:43:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHas anyone implemented dead key support for the InputText control?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf not_co_ I_t_m going to give it a try.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-07-10T03:04:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI would look at this pull request.¬† If you wanted to use _qt_shift + space_qt_ - maybe this is a good start?_lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/pull/3368_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/pull/3368_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"theom","Date":"2018-07-10T11:33:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks_co_ I_t_ll take a look.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"theom","Date":"2018-07-10T14:03:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHere_t_s what I_t_ve got so far. What I_t_m trying to achieve is to be able to very easily configure different¬†custom key mappings outside of Babylon and to be able to switch between them at runtime.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is all done in a callback I give to InputText. I can modify the entered character and event¬†prevent it from being added to the input. This enables me_co_ for example_co_ to¬†easily add¬†dead key support or to¬†just allow numbers to be entered. I think this also solves the _qt_input mask_qt_ case we talked about here_dd_¬†\n_lt_/p_gt_\n_lt_iframe allowfullscreen_eq__qt__qt_ data-controller_eq__qt_core.front.core.autosizeiframe_qt_ data-embedcontent_eq__qt__qt_ data-embedid_eq__qt_embed7047093520_qt_ scrolling_eq__qt_no_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/topic/38743-inputtext-control-types/?do_eq_embed_qt_ style_eq__qt_height_dd_219px_sm_max-width_dd_502px_sm__qt__gt__lt_/iframe_gt_\n\n_lt_p_gt_\n\tHere_t_s an incomplete dead key handler_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_let input _eq_ new gui.InputText()_sm_\ninput.onBeforeKeyAdd _eq_ (target_co_ key) _eq_&gt_sm_ {\n    if (target.deadKey) {\n        switch (key) {\n            case _qt_a_qt__dd_\n                key _eq_ _qt_√°_qt__sm_\n                break_sm_\n            case _qt_A_qt__dd_\n                key _eq_ _qt_√Å_qt__sm_\n                break_sm_\n        }\n        \n        target.deadKey _eq_ false_sm_\n    }\n    return { add_dd_ true_co_ key_dd_ key }_sm_\n}_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tAnd here_t_s a handler that only allows numbers to be entered_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_let input _eq_ new gui.InputText()_sm_\ninput.onBeforeKeyAdd _eq_ (target_co_ key) _eq_&gt_sm_ {\n    let add _eq_ false_sm_\n    if (key &gt_sm__eq_ _qt_0_qt_ &amp_sm_&amp_sm_ key &lt_sm__eq_ _qt_9_qt_) {\n        add _eq_ true_sm_\n    }\n    return { add_dd_ add_co_ key_dd_ key }_sm_\n}_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tWhat I_t_d also like to do is to bundle a set of these key modifiers along with Babylon so user_t_s can pick the ones they need¬†but I_t_m unsure of the best way to do that (where to put them). Any ideas?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t¬†\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-07-10T14:13:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSorry about my stupid question_dd_ what is a dead key? _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"theom","Date":"2018-07-10T14:24:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tA dead key is a key that does not output anything when hit_co_ but is used to modify the next key. For example_co_ Icelandic has several characters that have a diacritic above them (√°_co_ √≠_co_ √© ...) and we use a¬†dead key to enter those characters (dead key (diacritic) + a _eq_ √°).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat I did in the InputText was to keep the state of the dead key to enable¬†the key modifier to act on it if it likes.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-07-10T14:26:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\twoot! this is cool to add then _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"theom","Date":"2018-07-10T14:31:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAny thoughts on where to put the modifiers/callbacks?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-07-10T18:00:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tDefinitely in the textbox class\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"theom","Date":"2018-07-10T18:45:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJust to make sure we are talking about the same thing_dd_ I_t_m wondering where it_t_s best to keep the various callback definitions the InputText can be configured to use. For example_co_ for those who might want to use the Icelandic version of the dead key callback they can pick it up from this place and plug it into their instances of InputText_sm_ if they¬†want to limit the input to only numbers they can¬†pick up the number input mask and plug it in_co_ etc.¬†Sorry if this was obvious to you.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tGiven this _t_plugin_t_ nature_co_ does it make sense to keep¬†the callback definitions¬†in the InputText class (I assume you meant that class when you say textbox)? I was more seeing this as something maintained externally to the InputText which then could be built up over time to include several different keyboard _qt_mappings_qt_¬†and input masks. Maybe have some directory structure like this in the controls directory_dd_\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\tInputTextModifiers\n\t\t_lt_ul_gt_\n\t\t\t_lt_li_gt_\n\t\t\t\tKeyboardMapping\n\t\t\t_lt_/li_gt_\n\t\t\t_lt_li_gt_\n\t\t\t\tInputMasks\n\t\t\t_lt_/li_gt_\n\t\t_lt_/ul_gt_\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n_lt_p_gt_\n\tMaybe I_t_m taking this too far¬†here but to me it doesn_t_t feel right¬†to¬†keep¬†the callbacks¬†within¬†the InputText class. Or I misunderstood you _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-07-10T19:44:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI think DK means that those onBeforeKeyAdd types of methods are useful for others.¬† We could¬†use them to intercept the¬†keypress to prevent event propagation¬†- we do that normally in html (maybe _t_onKeyDown_t_)¬†by calling evt.preventDefault() or whatever.¬† That could activate deadkey in your case (shift + space?) or disallow non-numeric input depending on the implementation as you have done.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ we could¬†change the current method - or perhaps there is a better place.¬† I have not fully looked through the GUI code (_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/gui/src/2D/controls/inputText.ts#L314_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/gui/src/2D/controls/inputText.ts#L314_lt_/a_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_üòû_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_public processKeyboard(evt_dd_ KeyboardEvent)_dd_ void {\n     this.processKey(evt.keyCode_co_ evt.key)_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThen add what you have (using maybe something like a template method pattern) to make it pluggable into InputText.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_public processKeyboard(evt_dd_ KeyboardEvent)_dd_ void {\n   // in your onBeforeKeyAdd you need to check_dd_\n   //  var shiftKeyPressed _eq_ evt.shiftKey_co_ but also caps-lock can be enabled on Virtual Keyboard mode_co_ so that may be confusing!\n   let beforeResult _eq_ this.onBeforeKeyAdd(evt_dd_ KeyboardEvent)_sm_\n   if (beforeResult.add _eq__eq__eq_ true) {\n     this.processKey(evt.keyCode_co_ evt.key)_sm_\n   }\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThat logic means you would need a default implementation_co_ like perhaps_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_onBeforeKeyAdd _eq_ (target_co_ key) _eq_&gt_sm_ {Ôªø\n    return { add_dd_ true_co_ key_dd_ key }_sm_\n}_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tOtherwise you need to check if there is an implementation or not.¬† I think you could go a step further and change the virtual keyboard or long-press virtual keyboard buttons like phone keyboard modifiers¬†- looks like a fun project!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-07-10T20:25:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWell _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/?do_eq_hovercard_qt_ data-mentionid_eq__qt_25365_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/_qt_ rel_eq__qt__qt__gt_@brianzinn_lt_/a_gt_ this is exactly what I struggle to said _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_I think we should have way to configure the InputText provided within the InputText._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Then dead keys or modifiers can then be plugged into these _qt_entry points_qt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"theom","Date":"2018-07-10T21:26:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/?do_eq_hovercard_qt_ data-mentionid_eq__qt_25365_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/_qt_ rel_eq__qt__qt__gt_@brianzinn_lt_/a_gt_¬†_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_¬†It seems to me¬†that we are talking about the same thing_co_ i.e. re-use of the key¬†modifiers. The way I have done this in InputText is very similar to what _lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/?do_eq_hovercard_qt_ data-mentionid_eq__qt_25365_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/25365-brianzinn/_qt_ rel_eq__qt__qt__gt_@brianzinn_lt_/a_gt_¬†suggests_co_ except I check for the presence of the callback_dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_class InputText\n...\n\nprivate _onBeforeKeyAdd_dd_ (target_dd_ InputText_co_ key_dd_ string) _eq_&gt_sm_ { add_dd_ boolean_co_ key_dd_ string }_sm_\n\n...\n\n/** Sets the callback that_t_s called before the entered key is added to the input text */\npublic set onBeforeKeyAdd(cb_dd_ (target_dd_ InputText_co_ key_dd_ string) _eq_&gt_sm_ { add_dd_ boolean_co_ key_dd_ string }) {\n    this._onBeforeKeyAdd _eq_ cb_sm_\n}\n\n...\n\npublic processKey(keyCode_dd_ number_co_ key?_dd_ string) {\n\n    // Specific cases\n    switch (keyCode) {\n        ...\n        case 222_dd_ // Dead\n            this.deadKey _eq_ true_sm_\n            return_sm_\n    }\n\n    // Printable characters\n    if (\n        (keyCode _eq__eq__eq_ -1) ||                     // Direct access\n        (keyCode _eq__eq__eq_ 32) ||                     // Space\n        (keyCode &gt_sm_ 47 &amp_sm_&amp_sm_ keyCode &lt_sm_ 58) ||       // Numbers\n        (keyCode &gt_sm_ 64 &amp_sm_&amp_sm_ keyCode &lt_sm_ 91) ||       // Letters\n        (keyCode &gt_sm_ 185 &amp_sm_&amp_sm_ keyCode &lt_sm_ 193) ||     // Special characters\n        (keyCode &gt_sm_ 218 &amp_sm_&amp_sm_ keyCode &lt_sm_ 223) ||    // Special characters\n        (keyCode &gt_sm_ 95 &amp_sm_&amp_sm_ keyCode &lt_sm_ 112)) {      // Numpad\n        let add _eq_ true_sm_\n        if (this._onBeforeKeyAdd) {\n            if (key) {\n                ({ add_co_ key } _eq_ this._onBeforeKeyAdd(this_co_ key))_sm_\n            }\n            if (!key) {\n                add _eq_ false_sm_\n            }\n        }\n        if (add) {\n            if (this._cursorOffset _eq__eq__eq_ 0) {\n                this.text +_eq_ key_sm_\n            } else {\n                let insertPosition _eq_ this._text.length - this._cursorOffset_sm_\n\n                this.text _eq_ this._text.slice(0_co_ insertPosition) + key +\n                    this._text.slice(insertPosition)_sm_\n            }\n        }\n    }\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_What confuses me is how the virtual keyboard comes into this? Is all keyboard input_co_ desktop and mobile_co_ routed through the virtual keyboard?_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"theom","Date":"2018-07-10T21:31:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI can put up a PR for you to review.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-07-10T21:58:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t1. I would recommend using an observable se we could have multiple subscribers\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. Do you mean the GUI Virtual keyboard?¬†\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"theom","Date":"2018-07-10T22:29:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t1. I first looked into¬†using an observable¬†but dismissed it because I wanted¬†to return a value to the InputText key processing code at the point of the call to the modifier. I couldn_t_t¬†see how to do that using an observable. But let me mull it over a bit.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. Yes. Are there more than one virtual keyboard?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-07-10T22:36:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t1. Every observable can make change to the event passed as parameter\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. I also thought about the phone or tablet virtual keyboard. But never mind_co_ I_t_m with you now_co_ so in the virtual keyboard case we also need to expose the dead keys as new letters to display on the layout. I honestly did not put too much thoughts on it so far but as the keyboard call the processKey function on the InputText we should be fine to add what we need there\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-07-10T22:40:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tExample of a consultation using Observable_dd_¬†_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/ts.html#Q4BXX6_qt_ ipsnoembed_eq__qt_false_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/ts.html#Q4BXX6_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"theom","Date":"2018-07-10T22:43:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t1. Exactly.¬†I_t_ll see how I can deliver the feedback that way. And thanks for the example.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. I_t_m focusing on the desktop at the moment_co_ but the virtual keyboard is something we need to look into¬†eventually.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-07-10T23:25:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAgree _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"theom","Date":"2018-07-10T23:52:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI have a working version that uses an observable.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ll have to do some more testing and once I_t_m satisfied with it I_t_ll send you a PR.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-07-10T23:54:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_221247_qt_ data-ipsquote-contentid_eq__qt_38753_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1531262609_qt_ data-ipsquote-userid_eq__qt_32071_qt_ data-ipsquote-username_eq__qt_theom_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ theom said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tthe virtual keyboard is something we need to look into¬†eventually\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tIt_t_s a lot more effort when you consider the virtual keyboard_co_ but really interested to see your PR.¬† If you want to see how the virtual keyboard is created here is the default keyboard_dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/gui/src/2D/controls/virtualKeyboard.ts#L226_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/gui/src/2D/controls/virtualKeyboard.ts#L226_lt_/a_gt__lt_br /_gt_\n\tPeople in VR mode or mobile devices likely don_t_t have keyboard input otherwise_co_ but if you are focusing on Desktop that is OK_co_ too _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"theom","Date":"2018-07-11T00:16:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYes_co_ it_t_s true that making the virtual keyboard more configurable is a bit more work_co_ but it doesn_t_t look that bad. We just need to create different layouts for each country (new Create.. methods)¬†and it_t_s probably best to get the keyPressObserver to behave like a desktop keyboard regarding¬†the special keys. That way the InputText can stay the same and do its thing.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-07-11T15:14:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWonderful! this is a really good PR\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust need to udpate GUI doc now _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"theom","Date":"2018-07-11T16:41:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks DK _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDocumentation is done and pushed as a PR.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]