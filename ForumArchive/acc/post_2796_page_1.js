[{"Owner":"gwenael","Date":"2013-12-27T13:30:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi everyone_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I don_t_t think BabylonJS internally uses instances. Please let me know if I_t_m wrong._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m not talking about instances of OO programming language but about instances (animation_co_ camera_co_ geometry_co_ light...) specified within Collada specifications _lt_a href_eq__qt_http_dd_//www.khronos.org/files/collada_spec_1_5.pdf_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.khronos.org/files/collada_spec_1_5.pdf_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Let_t_s say you want trees in your scene and that you will pretty much always use the same tree but _qt_plant_qt_ it in different locations. You have_co_ let_t_s say_co_ 100 trees to plant. Thus_co_ your babylon file will contain 100 meshes for your trees since you want to check collisions for all of them (that could be one huge mesh with 100 submeshes but the number of vertices must exceed the limit). You have 100 meshes whereas it_t_s the same tree (3d representation) so the only differences between them should be name_co_ id_co_ parentId_co_ position_co_ rotation_co_ scaling_co_ rotationQuaternion_co_ isVisible._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What I suggest it_t_s to create new classes_co_ transform_co_ geometry_co_ animation and physics_co_ and to modify node and mesh._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_transform would contain all information about transformations (position_co_ rotation_co_ scaling_co_ rotationQuaternion)._lt_/p_gt__lt_p_gt_geometry would contain all information about 3d representation (positions_co_ normals_co_ uvs_co_ uvs2_co_ colors_co_ matricesIndices_co_ matricesWeights_co_ indices_co_ subMeshes)_lt_/p_gt__lt_p_gt_animation would contain all information about animation (animations_co_ autoAnimate_co_ autoAnimateFrom...)_lt_/p_gt__lt_p_gt_physcis would contain all information about physics (physicsImpostor_co_ physicsMass...)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_node would contain parenting mechanism_co_ name and id._lt_/p_gt__lt_p_gt_transform would inherit from node as light_co_ camera and mesh would._lt_/p_gt__lt_p_gt_mesh would_lt_strong_gt_ have to_lt_/strong_gt_ have a reference to a geometry instance (OO meaning) and _lt_strong_gt_could _lt_/strong_gt_have a reference to an animation instance (OO meaning) and/or a physics instance (OO meaning) and/or a reference to any other component _qt_class_qt_ that could be added later (collisions object...)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_mesh would be a composition of components (geometry_co_ animation_co_ physics...) and could share these components with other meshes. If a mesh doesn_t_t have physics it wouldn_t_t have to store physicsImpostor_co_ physicsMass and so on but only physicsComponent _eq_ null._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thus_co_ for our 100 trees example_co_ we would have 100 transform nodes_co_ each parent of 1 mesh. There would in total 100 meshes_co_ like before BUT each mesh would refer to the same geometry instance (OO meaning)_co_ the same animation instance... Thus the file would be smaller and if we would decide to change the geometry_co_ all trees would be affected without having to reimport the file. Thanks to the parent transform node_co_ we would be able to translate_co_ rotate and scale the child tree as wanted._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_We can actually find this kind of approach in the incremental system since different meshes could point to the same babylonmeshdata file (exporter doesn_t_t do that for now I think) but after importing_co_ meshes do not seem to be considered as instances (Collada meaning)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Any thoughts on this?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2013-12-27T13:31:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Of course_co_ we could use the same light_co_ the same cameras at different locations thanks to different parent transform nodes._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2013-12-27T20:35:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Right now_co_ if you clone a mesh_co_ all webgl buffers are shared (vb and IB) which is a kind of what you are suggesting _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2013-12-28T14:57:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thank you Deltakosh for the time you spent to read my post certainly too big and not enough clear. But you seem to have understood me _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m happy to learn that cloning a mesh allows to share webgl buffers. It_t_s a good start to share geometries between meshes. Nevertheless_co_ is there a way in the babylon file format to specify that a mesh is a cloned of another one? What about animations_co_ physics and other ones? Does cloning a mesh handle them too?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Of course I_t_m not badly criticizing your engine_co_ I_t_m far away from that. I_t_m trying to understand what you_t_ve done so far and to see if it would be easy to integrate what I_t_m suggesting about instances. As far I_t_m concerned_co_ I think it would be awesome but maybe I didn_t_t take everything into account and no one else is interested in it. Anyone ? I_t_m be pleased to contribute on this for sure._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2013-12-29T08:57:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_When you clone a mesh_co_ animations are cloned too. Physics is not cloned. Skeletons are referenced (no duplication)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Right now there is no way to define a clone in the .babylon file format but we could do that easily (we must just ensure that we keep file compatibility)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-01-02T12:01:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Will you be interested in a more global instance mechanism as described in my first post? This mechanism would obviously use the current functions such as BABYLON.Mesh.prototype.clone._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I really must be missing something since I_t_m surprised that anyone else seems interested in it. I noticed it_t_s implemented by several software and it_t_s took into account by standards such as Collada so I thought that could be nice to have it in BabylonJS. At first glance I thought there were only advantages. Does anyone know inconvenients with using instances?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-01-03T15:28:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Absolutely no problem with that _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_My only concern is keeping performances high and compatibility with existing code._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Happy to see motivated developers!!!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-04-04T15:37:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ve started working on it and I was wondering why VertexBuffer needs to keep a reference on the mesh. I saw that it uses to call _resetPointsArrayCache on it while creating/updating the vertex buffer but this is not done for cloned meshes. Could we not store a reference to a mesh inside VertexBuffer and call BABYLON.Mesh.prototype._resetPointsArrayCache when needed in BABYLON.Mesh.prototype.updateVerticesData? Or VertexBuffer should keep track of all meshes sharing it._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gryff","Date":"2014-04-04T15:53:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt_Let_t_s say you want trees in your scene and that you will pretty much always use the same tree but _qt_plant_qt_ it in different locations. You have_co_ let_t_s say_co_ 100 trees to plant. Thus_co_ your babylon file will contain 100 meshes for your trees since you want to check collisions for all of them (that could be one huge mesh with 100 submeshes but the number of vertices must exceed the limit). You have 100 meshes whereas it_t_s the same tree (3d representation) so the only differences between them should be name_co_ id_co_ parentId_co_ position_co_ rotation_co_ scaling_co_ rotationQuaternion_co_ isVisible._lt_p_gt_ _lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_From past experience with other 3D systems_co_ this situation may call for an LOD system. Do you want all trees to have checkCollisons true - they maybe far away_co_ on top of a hill etc._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Did I not read somewhere that DK talked about developing an LOD system?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Hope this comment does not distract from the thrust of you post gwenael._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_cheers_co_ gryff _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-05T15:45:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Be also aware that as IE11 will soon support hardware instancing_co_ babylon.js will also support it _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ So this system should take it in account_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-04-06T15:26:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Gwenael_co_ I have been thinking about your _qt_share the characteristics_qt_ idea...  from the first post in this thread.  As best I can tell_co_ that is some BIG BIG thinking.  You are a _lt_u_gt__lt_a href_eq__qt_http_dd_//www.twixco.com/images/3dScanTexture.jpg_qt_ rel_eq__qt_external nofollow_qt__gt_mad man_lt_/a_gt__lt_/u_gt_!  Is that you?  I think so.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So_co_ we are looking at each mesh... allowing share-able (and/or inheritable) characteristics._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_A single cloned mesh might..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_- use/be an instance of mesh1_t_s transform characteristics_lt_/p_gt__lt_p_gt_     and_lt_/p_gt__lt_p_gt_- use/be an instance of mesh2_t_s geometry characteristics_lt_/p_gt__lt_p_gt_     and_lt_/p_gt__lt_p_gt_- use/be an instance of mesh3_t_s animation characteristics_lt_/p_gt__lt_p_gt_     and_lt_/p_gt__lt_p_gt_- use/be an instance of mesh4_t_s physics characteristics_lt_/p_gt__lt_p_gt_     and maybe..._lt_/p_gt__lt_p_gt_- use/be an instance of mesh5_t_s material characteristics_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_(all at the same time)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Am I thinking about this... in the same way that you are/were?  (thx)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-04-07T08:35:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_32884_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_2796_qt_ data-ipsquote-username_eq__qt_Wingnut_qt_ data-cite_eq__qt_Wingnut_qt_ data-ipsquote-timestamp_eq__qt_1396798016_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_You are a _lt_u_gt__lt_a href_eq__qt_http_dd_//www.twixco.com/images/3dScanTexture.jpg_qt_ rel_eq__qt_external nofollow_qt__gt_mad man_lt_/a_gt__lt_/u_gt_!  Is that you?  I think so.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Yes it_t_s me at GDC 2009 in SF_co_ but I prefer this angle_dd_ _lt_a href_eq__qt_http_dd_//www.twixco.com/pages/3d_scan.php_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.twixco.com/pages/3d_scan.php_lt_/a_gt_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_. Please don_t_t pay attention to my website_co_ I haven_t_t spent time on it from years. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-04-07T08:45:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_32884_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_2796_qt_ data-ipsquote-username_eq__qt_Wingnut_qt_ data-cite_eq__qt_Wingnut_qt_ data-ipsquote-timestamp_eq__qt_1396798016_qt__gt__lt_div_gt__lt_div_gt_A single cloned mesh might..._lt_p_gt_ _lt_/p_gt__lt_p_gt_- use/be an instance of mesh1_t_s transform characteristics_lt_/p_gt__lt_p_gt_     and_lt_/p_gt__lt_p_gt_- use/be an instance of mesh2_t_s geometry characteristics_lt_/p_gt__lt_p_gt_     and_lt_/p_gt__lt_p_gt_- use/be an instance of mesh3_t_s animation characteristics_lt_/p_gt__lt_p_gt_     and_lt_/p_gt__lt_p_gt_- use/be an instance of mesh4_t_s physics characteristics_lt_/p_gt__lt_p_gt_     and maybe..._lt_/p_gt__lt_p_gt_- use/be an instance of mesh5_t_s material characteristics_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_(all at the same time)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Am I thinking about this... in the same way that you are/were?  (thx)_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Not really_co_ but if you modify _qt_cloned mesh_qt_ by only _qt_mesh_qt_ you get the idea. A cloned mesh should ONLY share the characteristics of the source mesh (only one mesh not several ones) but you could create a new mesh which would share material characteristics of a second mesh and geometry characterics of a third mesh. Keep in mind that some characterics should stay linked though. Sharing animation characterics implies to have a cloned skeleton. I don_t_t think that transform characteristics should be shared_co_ that_t_s not the idea of instancing whereas all your trees would be at the same place except if the don_t_t have the same parent._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-04-07T08:50:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@Wingnut_dd_ do you know Collada format file (.dae)? It could help you to understand instances._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-04-07T09:02:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_32680_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_2796_qt_ data-ipsquote-username_eq__qt_gryff_qt_ data-cite_eq__qt_gryff_qt_ data-ipsquote-timestamp_eq__qt_1396626834_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_From past experience with other 3D systems_co_ this situation may call for an LOD system. Do you want all trees to have checkCollisons true - they maybe far away_co_ on top of a hill etc._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Did I not read somewhere that DK talked about developing an LOD system?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Hope this comment does not distract from the thrust of you post gwenael._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_cheers_co_ gryff _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You_t_re right_co_ we must keep in mind that instancing system must be usable for LOD system. What I suggest is that a mesh has a geometry_co_ this geometry can be its own geometry or it can be shared with other meshes (it uses the one of another mesh). Only the 3d representation is shared (how it looks like)_co_ not other properties for now. If a mesh has a geometry it means that we could dynamically tell it to use another geometry_co_ for example the same geometry as all the trees that are far away from the camera_co_ because now our tree is far away too and once we are close to it_co_ it will share the geometry with the other trees which are close to the camera._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-04-07T09:09:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Just found a good article. For sure_co_ even if I haven_t_t read the whole article_co_ it will be better than any of my posts about the subject._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//http.developer.nvidia.com/GPUGems2/gpugems2_chapter03.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//http.developer.nvidia.com/GPUGems2/gpugems2_chapter03.html_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_They took the same example as I did _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-04-07T09:12:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_32811_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_2796_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1396712713_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Be also aware that as IE11 will soon support hardware instancing_co_ babylon.js will also support it _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ So this system should take it in account_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Hmmm_co_ how will it work? What should I take into account?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-04-07T09:12:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_32678_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_2796_qt_ data-ipsquote-username_eq__qt_gwenael_qt_ data-cite_eq__qt_gwenael_qt_ data-ipsquote-timestamp_eq__qt_1396625862_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ve started working on it and I was wondering why VertexBuffer needs to keep a reference on the mesh. I saw that it uses to call _resetPointsArrayCache on it while creating/updating the vertex buffer but this is not done for cloned meshes. Could we not store a reference to a mesh inside VertexBuffer and call BABYLON.Mesh.prototype._resetPointsArrayCache when needed in BABYLON.Mesh.prototype.updateVerticesData? Or VertexBuffer should keep track of all meshes sharing it._lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Any answer for this?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-04-07T10:16:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi.  I should have used the term _t_traits_t_.  _t_Characteristics_t_ is difficult to type.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  No_co_ I do not know the .dae format_co_ but will look at it.  Thanks for the further information. Yes_co_ a clone would/should be a perfect copy of its clone-master_co_ but a new created mesh could don (take-on) traits from many share-able sources_co_ but most importantly for now_co_ shape/geometry.  For distance-based LOD _t_zones_t_.  I think I understand. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Sometimes I think that the babylon.js use of .parent... conflicts-with another type of parent-child relationship.  Maybe our current .parent property should have been called .controller or .groupmaster.  Then .parent can be re-defined as meaning the cloning-parent of this mesh.  Maybe...  .clonemaster_co_ and .groupmaster and .shapemaster_co_ etc.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  Maybe Wingnut should shut his mouth and go back to his crib toys.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  Cool 3D of you on your website_co_ by the way.  I like it._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Ok_co_ returning to gwenael_t_s question which needs some kind of answer_co_ or further discussion.  thx gang._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-07T17:13:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_For instancing_co_ I mean that the gl renderer will be able to render multi-instances based on different world matrices._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_for mesh reference into vertex buffer_co_ I agree with you we can remove it and just call resetPointArrayCache when using setVertexData_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-04-08T11:13:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Perfect. I guess I can use a geometry class. A instance of it will store the meshes using it (or a geometryManager will do it) and will be passed to the gl renderer (in some way)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-04-08T15:34:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I think so._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-05-12T10:04:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The geometry system is up and running _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/pull/192_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/pull/192_lt_/a_gt__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/wiki/Babylon.js-file-format_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/wiki/Babylon.js-file-format_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-05-12T10:47:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Back to my first post. Since_co_ I created the class Geometry (as defined in my first post but without submeshes) and sub-classes of it to handle primitives. And now I would like to talk again about hierarchy and transforms._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I would like to consider cameras_co_ lights and meshes as nodes. Yes they already are but as far as I_t_m concerned they should only be considered as are in the Node class_co_ they shouldn_t_t be considered as cameras_co_ lights and meshes inside the Node class (there shouldn_t_t be this._scene.meshes in getDescendants()). The Node class shouldn_t_t know the names of its sub-classes. What I suggest is to handle hierarchy inside the Node class and that Scene would always have a unique root node (the world). A setParent function in Node would enable to keep track of children of a node. Maybe it_t_s too heavy to store all children of a node on that node nevertheless it would be a lot more efficient to get the descendants of a node. (If it_t_s too heavy_co_ there could be a list of nodes for the scene (in Scene class) and meshes_co_ lights and cameras lists would be bookmarks on it and we could improve getDescendants by using a stack of already tested nodes.)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Node class would also store local transform information and would handle cache for it. _t_computeWorldMatrix_t_ would be a function of it._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thus_co_ hierarchy and transforms would be handled by the Node class (and sub-classes when overriding is necessary) and a mesh (or a camera or a light) could be parent of a camera and/or a light and/or a mesh. There would be more common code easier to maintain and which would follow the same logics._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-05-12T17:46:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The rendering process needs a direct access to a list of meshes_co_ cameras etc._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Warning_dd_ I_t_m for pragmatism_dd_ I mean if having meshes in node is more efficient or convenient then I do not care about anything else_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I do not disagree with the idea of optimizing getDescendants() but not at the expense of rendering or ease of access_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I like the idea of storing worldMatrix in the node. BUT what kind of matrix would you store for an hemispheric light or an oculus camera? _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]