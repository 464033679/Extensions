[{"Owner":"leanderr","Date":"2018-01-21T15:21:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey guys_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tstill after having read quite a lot on the boards here and having worked through the book _qt_Learning Babylonjs_qt_ by Julian Chenard Im always feeling like hacking away on projects and building crappy architecture.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI feel the Documentation should provide best Practices and Examples on_dd_\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\tManage your Renderloop\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tWhen to apply Logic on objects and when globally or inside the Renderloop\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tWhen to use Actionmanager_co_ when Animations and when to hardcode Animations in the renderloop\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tSwitch in Between Scenes_co_ Serialize and Load them including their and their objects logic\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n_lt_p_gt_\n\tAre there any good resources on this? Especially considering building bigger games and doing things in a proper and non-hacky but more sophisticated OOP way? Will _lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#494949_sm_font-size_dd_14px_sm__qt__gt_Julien Moreau-Mathis_t_ Book help me? I guess a lot of confusion on the messageboards could be avoided if well documented examples were given. Or if we could fund someone to provide them for the docs.._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#494949_sm_font-size_dd_14px_sm__qt__gt_Best Regards_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-01-21T19:12:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_202148_qt_ data-ipsquote-contentid_eq__qt_35206_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1516548085_qt_ data-ipsquote-userid_eq__qt_25519_qt_ data-ipsquote-username_eq__qt_leanderr_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t2 hours ago_co_ leanderr said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tAre there any good resources on this? Especially considering building bigger games and doing things in a proper and non-hacky but more sophisticated OOP way?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI would say that if you want to do more OOP and especially bigger games that TypeScript is the best way to go_co_ as the compiler will enforce your intentions as opposed to coding by convention.  Lots of resources on that_sm_ even Babylon.js itself made the switch from JavaScript to TypeScript.  Switching over to TypeScript has saved me the most time in the long run_co_ but I also have a strong OO background.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think you have asked a very wide open question that depends a lot on what is being built and has many _t_correct_t_ answers_co_ so there can_t_t be a single recipe.  There are so many examples on github and from Ludum Dare that are essentially free working recipes.  I am relatively new with babylon.js and have only been working on a turn-based (VR) interactive puzzle game.  I ended up using redux-saga to control my game loop using Test Driven Development (TDD).  Most movements are controlled by Animations and I don_t_t use ActionManager or any globals.  Logic is encapsulated in all the in-game classes.  I have a basic renderLoop with no logic_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_engine.runRenderLoop(() _eq_&gt_sm_ {\n  if (scene) {\n    scene.render()_sm_\n  }\n})_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tHere is the article (not babylon.js related) that inspired my game loop and tries to answer the larger question (his emphasis) _lt_strong style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#000000_sm_font-size_dd_medium_sm__qt__gt_Where does my application logic belong in general?_lt_/strong_gt__dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//decembersoft.com/posts/redux-hero-part-4-every-hero-needs-a-villain-a-fun-introduction-to-redux-saga-js/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//decembersoft.com/posts/redux-hero-part-4-every-hero-needs-a-villain-a-fun-introduction-to-redux-saga-js/_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]