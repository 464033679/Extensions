[{"Owner":"Lerige","Date":"2015-02-01T17:41:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi all_co__lt_/p_gt__lt_p_gt_My context_dd_ I have to load different meshes (not a complete scene) from different babylon files_co_ without lights_co_ and then I assemble them in one scene._lt_br_gt_Some of the babylon files come from Blender and others from .obj conversion._lt_br_gt__lt_br_gt_All my meshes from .obj should cast shadows. But I_t_d like to get _qt_cast shadows_qt_ information from Blender files_co_ since Blender meshes could_co_ or could not_co_ cast shadows. The shadow generator is defined independently in the code._lt_br_gt__lt_br_gt_I also have to say that I_t_m both new to Babylon and Blender. Yes_co_ I_t_m looking for trouble _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_br_gt_I_t_ve made three hypothesis..._lt_br_gt__lt_br_gt_H1/ complete Blender meshes _qt_cast shadow_qt_ export_lt_br_gt__lt_br_gt_I_t_ve noticed a _qt_cast shadow_qt_ check box in Blender mesh Babylon properties but nothing seems to be exported._lt_br_gt_To fix this I_t_ve added this line in io_export_babylon.py_dd__lt_br_gt__lt_br_gt_# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -      _lt_br_gt_    def to_scene_file(self_co_ file_handler_co_ meshesAndNodes)_dd__lt_br_gt_        file_handler.write(_t_{_t_)        _lt_br_gt_        write_string(file_handler_co_ _t_name_t__co_ self.name_co_ True)        _lt_br_gt_        write_string(file_handler_co_ _t_id_t__co_ self.name)_lt_br_gt_        if hasattr(self_co_ _t_parentId_t_)_dd_ write_string(file_handler_co_ _t_parentId_t__co_ self.parentId)_lt_br_gt__lt_br_gt_        if hasattr(self_co_ _t_materialId_t_)_dd_ write_string(file_handler_co_ _t_materialId_t__co_ self.materialId)        _lt_br_gt_        write_int(file_handler_co_ _t_billboardMode_t__co_ self.billboardMode)_lt_br_gt_        write_vector(file_handler_co_ _t_position_t__co_ self.position)_lt_br_gt_        write_vector(file_handler_co_ _t_rotation_t__co_ self.rotation)_lt_br_gt_        write_vector(file_handler_co_ _t_scaling_t__co_ self.scaling)_lt_br_gt_        write_bool(file_handler_co_ _t_isVisible_t__co_ self.isVisible)_lt_br_gt_        write_bool(file_handler_co_ _t_isEnabled_t__co_ self.isEnabled)_lt_br_gt_        write_bool(file_handler_co_ _t_useFlatShading_t__co_ self.useFlatShading)_lt_br_gt_        write_bool(file_handler_co_ _t_checkCollisions_t__co_ self.checkCollisions)_lt_br_gt_        _lt_strong_gt_write_bool(file_handler_co_ _t_castShadows_t__co_ self.castShadows)    # added line_lt_/strong_gt__lt_br_gt_        write_bool(file_handler_co_ _t_receiveShadows_t__co_ self.receiveShadows)_lt_br_gt__lt_br_gt_OK_co_ now I have a complete .babylon file_co_ but the problem is the property is not read by babylon at import... If I_t_m not mistaken I saw nothing in babylonFileLoader class to read this._lt_br_gt_This is easy to fix but would add a new shadow mesh property independent of shadowGenerator. This is not nice..._lt_br_gt__lt_br_gt_H2/ work with materials_lt_br_gt__lt_br_gt_... and then_co_ I_t_ve saw there is already a standard _qt_cast_qt_ checkbox in shadow section of Blender Materials. This seems logical_co_ and so I_t_d like to get back this information in babylon._lt_br_gt_I see some advantages_dd__lt_br_gt_- I use standard Blender properties_lt_br_gt_- I do not have to duplicate information between Blender material and meshes_co_ with risk of errors_lt_br_gt__lt_br_gt_Once again it_t_s easy to export the information_dd_ first_co_ add this line_lt_br_gt__lt_br_gt_class Material_dd__lt_br_gt_    def __init__(self_co_ material_co_ scene_co_ filepath)_dd_       _lt_br_gt_        self.name _eq_ BabylonExporter.nameSpace + _t_._t_ + material.name        _lt_br_gt_        BabylonExporter.log(_t_processing begun of material_dd_  _t_ + self.name)_lt_br_gt_        self.ambient _eq_ material.ambient * material.diffuse_color_lt_br_gt_        self.diffuse _eq_ material.diffuse_intensity * material.diffuse_color_lt_br_gt_        self.specular _eq_ material.specular_intensity * material.specular_color_lt_br_gt_        self.emissive _eq_ material.emit * material.diffuse_color       _lt_br_gt_        self.specularPower _eq_ material.specular_hardness_lt_br_gt_        self.alpha _eq_ material.alpha_lt_br_gt_        self.backFaceCulling _eq_ material.game_settings.use_backface_culling_lt_br_gt_        _lt_strong_gt_self.castShadows _eq_ material.use_cast_shadows # added line_lt_/strong_gt__lt_br_gt__lt_br_gt__lt_br_gt_and then add this one_dd__lt_br_gt__lt_br_gt_# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -                _lt_br_gt_    def to_scene_file(self_co_ file_handler)_dd_       _lt_br_gt_        file_handler.write(_t_{_t_)_lt_br_gt_        write_string(file_handler_co_ _t_name_t__co_ self.name_co_ True)      _lt_br_gt_        write_string(file_handler_co_ _t_id_t__co_ self.name)_lt_br_gt_        write_color(file_handler_co_ _t_ambient_t__co_ self.ambient)_lt_br_gt_        write_color(file_handler_co_ _t_diffuse_t__co_ self.diffuse)_lt_br_gt_        write_color(file_handler_co_ _t_specular_t__co_ self.specular)_lt_br_gt_        write_color(file_handler_co_ _t_emissive_t__co_ self.emissive)        _lt_br_gt_        write_float(file_handler_co_ _t_specularPower_t__co_ self.specularPower)_lt_br_gt_        write_float(file_handler_co_ _t_alpha_t__co_ self.alpha)_lt_br_gt_        write_bool(file_handler_co_ _t_backFaceCulling_t__co_ self.backFaceCulling)_lt_br_gt_        _lt_strong_gt_write_bool(file_handler_co_ _t_castShadows_t__co_ self.castShadows) # added line_lt_/strong_gt__lt_br_gt_        for texSlot in self.textures_dd__lt_br_gt_            texSlot.to_scene_file(file_handler)_lt_br_gt_            _lt_br_gt_        file_handler.write(_t_}_t_)          _lt_br_gt_        _lt_br_gt_But once again I_t_ll have to update babylonFileLoader to read this._lt_br_gt_Not hard_co_ but at this moment I am not sure at all it is the _qt_philosophy_qt_ of Babylon materials to hold this information._lt_br_gt__lt_br_gt_H3/ Forget all this and use naming convention to know what to do with casting shadows !_lt_br_gt__lt_br_gt_Conclusion_dd_ so_co_ before doing anything_co_ I need your opinion _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ Maybe I completely missed the point_co_ but it seems interesting to catch this Blender cast shadow materiel property..._lt_br_gt_Thanks for reading._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-02-01T18:17:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_dd_)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_shadows are loaded from ShadowsGenerators_lt_/p_gt__lt_p_gt_This is already handle by Blender exporter_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Exporters/Blender/io_export_babylon.py#L268_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Exporters/Blender/io_export_babylon.py#L268_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But in you case_co_ because you are importing a mesh and not the complete scene you do not get this info _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Doc extract from here_dd__lt_a href_eq__qt_http_dd_//doc.babylonjs.com/page.php?p_eq_22661_dd__qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/page.php?p_eq_22661_dd__lt_/a_gt__lt_/p_gt_\tShadowGenerators_lt_p style_eq__qt_color_dd_rgb(0_co_0_co_0)_sm_font-family_dd__t_Segoe UI_t__co_ Helvetica_co_ arial_co_ freesans_co_ clean_co_ sans-serif_sm_font-size_dd_13px_sm__qt__gt_A shadowGenerator is defined by the following JSON_dd__lt_/p_gt__lt_p_gt_{_lt_br_gt__qt_useVarianceShadowMap_qt__dd_ boolean_co__lt_br_gt__qt_usePoissonSampling_qt__dd_ boolean_co__lt_br_gt__qt_mapSize_qt__dd_ int (between 64 and 2048_co_ must be a power of 2)_co__lt_br_gt__qt_lightId_qt__dd_ string_co__lt_br_gt__qt_renderList_qt__dd_ array of string (which are IDs of meshes)_lt_br_gt_}_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2015-02-02T02:36:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_There is an unwanted _qt__dd__qt_ at the end of the docs link above_co_ the correct link for babylon file format doc is _dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//doc.babylonjs.com/page.php?p_eq_22661_dd__qt_ title_eq__qt_External link_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs...ge.php?p_eq_22661_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Lerige","Date":"2015-02-02T20:59:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks for your answer._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You_t_re right_dd_ I can_t_t use standard scene import in this case._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ve decided to manage this with a parent _qt_empty_qt_ blender object in which I put everything without shadow._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This will do the job !_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]