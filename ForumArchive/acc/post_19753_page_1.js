[{"Owner":"Stvsynrj","Date":"2016-01-09T12:43:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi guyz !_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here is a little tutorial about the analyzer in Babylon._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This is the effect we will try to do here _dd_ _lt_a href_eq__qt_http_dd_//synergy-development.fr/webaudio2/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//synergy-development.fr/webaudio2/_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_We will make a grid of cube moving with the music_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var analyserEffect _eq_ {        // our master scene\tscene_dd_ null_co_        w_dd_ 10_co_ // width of our grid cubes        h_dd_ 10_co_ // height of our grid cubes    \t    createScene_dd_ function(engine) {        // create our scene and set it_t_s background color to black\tvar s _eq_ new BABYLON.Scene(engine)_sm_        s.clearColor _eq_ BABYLON.Color3.Black()_sm_\t        // our main camera. We dont want the user to be able to move it_co_ so_co_ no attached controls.\tvar camera _eq_ new BABYLON.ArcRotateCamera(_qt_camera_qt__co_ -0.87_co_ 1.1_co_ 600_co_ BABYLON.Vector3.Zero()_co_ s)_sm_\t            // Here we create 3 lights_co_ 2 grey and 1 yellow/orange_co_ something like gold.        var pl1 _eq_ new BABYLON.PointLight(_qt_Omni0_qt__co_ new BABYLON.Vector3(-200_co_ 200_co_ -100)_co_ s)_sm_        pl1.diffuse _eq_ new BABYLON.Color3(219 / 255_co_ 138 / 255_co_ 73 / 255)_sm_        pl1.specular _eq_ new BABYLON.Color3(219 / 255_co_ 138 / 255_co_ 73 / 255)_sm_        var pl2 _eq_ new BABYLON.PointLight(_qt_Omni0_qt__co_ new BABYLON.Vector3(200_co_ 200_co_ -100)_co_ s)_sm_        pl2.diffuse _eq_ new BABYLON.Color3(226 / 255_co_ 217 / 255_co_ 184 / 255)_sm_          pl2.specular _eq_ new BABYLON.Color3(226 / 255_co_ 217 / 255_co_ 184 / 255)_sm_        var pl3 _eq_ new BABYLON.PointLight(_qt_Omni0_qt__co_ new BABYLON.Vector3(-100_co_ 250_co_ 100)_co_ s)_sm_        pl3.diffuse _eq_ new BABYLON.Color3(226 / 255_co_ 217 / 255_co_ 184 / 255)_sm_        pl3.specular _eq_ new BABYLON.Color3(226 / 255_co_ 217 / 255_co_ 184 / 255)_sm_                        // let_t_s create a shadow generator for each lights        var shadowGenerator1 _eq_ new BABYLON.ShadowGenerator(1024_co_ pl1)_sm_        var shadowGenerator2 _eq_ new BABYLON.ShadowGenerator(1024_co_ pl2)_sm_        var shadowGenerator3 _eq_ new BABYLON.ShadowGenerator(1024_co_ pl3)_sm_        // Our main cube. We make it invisble_co_ we only need it to create instances for our grid cube.        var b _eq_ BABYLON.Mesh.CreateBox(_qt_b_qt__co_ 20_co_ s)_sm_        b.isVisible _eq_ false_sm_                // First_co_ we create our _qt_cool_qt_ material         var mat _eq_ new BABYLON.StandardMaterial(_qt_m_qt__co_ s)_sm_        mat.diffuseColor _eq_ new BABYLON.Color3(0.1_co_ 0.5_co_ 0.5)_sm_ // We will move it later        mat.bumpTexture _eq_ new BABYLON.Texture(_qt_assets/img/grained_uv.png_qt__co_ s)_sm_ // A cool bumpmap               // Scale it 2 times as our grid will be big        mat.bumpTexture.uScale _eq_ 2.0_sm_        mat.bumpTexture.vScale _eq_ 2.0_sm_        // A also cool reflection map. Set it to spherical mode and a really little level of reflection        mat.reflectionTexture _eq_ new BABYLON.Texture(_qt_assets/img/metal.png_qt__co_ s)_sm_         mat.reflectionTexture.coordinatesMode _eq_ BABYLON.Texture.SPHERICAL_MODE_sm_         mat.reflectionTexture.level _eq_ 0.1_sm_        // Assign our material to our main cube.        b.material _eq_ mat_sm_        // Standard material for the container we will create        var mat2 _eq_ new BABYLON.StandardMaterial(_qt_m_qt__co_ s)_sm_        mat2.diffuseColor _eq_ new BABYLON.Color3(0_co_ 0_co_ 0)_sm_                // Now we will construct our grid        var analyser_map _eq_ []_sm_                        var i_eq_0_sm_        // Our grid will be 20x20        for (var x_eq_-this.w_sm_ x&lt_sm_this.w_sm_ x++)        {            for (var y_eq_-this.h_sm_y&lt_sm_this.h_sm_ y++)            {                        // Create instances                analyser_map[i] _eq_ b.createInstance(_qt_b_qt__co_ 10_co_ s)_sm_                // Multiply x &amp_sm_ y to have space between cubes                analyser_map[i].position _eq_ new BABYLON.Vector3(x*25_co_ 0_co_ y*25)_sm_                                                                                // Add the cubes to shadow render list                shadowGenerator1.getShadowMap().renderList.push(analyser_map[i])_sm_                shadowGenerator2.getShadowMap().renderList.push(analyser_map[i])_sm_                shadowGenerator3.getShadowMap().renderList.push(analyser_map[i])_sm_                analyser_map[i].receiveShadows _eq_ true_sm_                i++_sm_            }        }        // Create a doublesided (to have lights inside) ball as a container        var ball _eq_ BABYLON.Mesh.CreateSphere(_qt_s_qt__co_ 16_co_ 1250_co_ s_co_ false_co_ BABYLON.Mesh.DOUBLESIDE)_sm_        ball.material _eq_ mat2_sm_                // Add an HDR filter to get _qt_WOW_qt_ effect         var hdr _eq_ new BABYLON.HDRRenderingPipeline(_qt_hdr_qt__co_ s_co_ 1.0_co_ null_co_ [s.activeCamera])_sm_        hdr.brightThreshold _eq_ 0.2_sm_ // Minimum luminance needed to compute HDR        hdr.gaussCoeff _eq_ 0.5_sm_ // Gaussian coefficient _eq_ gaussCoeff * theEffectOutput_sm_        hdr.gaussMean _eq_ 1_sm_ // The Gaussian blur mean        hdr.gaussStandDev _eq_ 5_sm_ // Standard Deviation of the gaussian blur.        hdr.exposure _eq_ 1.0_sm_        hdr.minimumLuminance _eq_ 0.2_sm_        hdr.maximumLuminance _eq_ 1.0_sm_        hdr.luminanceDecreaseRate _eq_ 0.3_sm_ // Decrease rate_dd_ darkness to light        hdr.luminanceIncreaserate _eq_ 0.5_sm_ // Increase rate_dd_ light to darkness        hdr.gaussMultiplier _eq_ 1.0_sm_ // Increase the blur intensity                    // Create our analyzer and attach it to the current scene        var analyzer _eq_ new BABYLON.Analyser(s)_sm_        BABYLON.Engine.audioEngine.connectToAnalyser(analyzer)_sm_        analyzer.FFT_SIZE _eq_ 1024_sm_        analyzer.SMOOTHING _eq_ 0.9_sm_                    var workingArray_sm_        s.registerBeforeRender(function ()         {           // Our timer           var t _eq_ Date.now() * 0.005_sm_            // Get the analyzer_t_s FFT            workingArray _eq_ analyzer.getByteFrequencyData()_sm_                        for (var i_eq_0_sm_ i&lt_sm_analyser_map.length_sm_ i++)            {                // Now we will scale our cubes with the fft data.                // Note that we only take the first 64 channels to have a _qt_diagonal_qt_ effect on the equalyzer                 analyser_map[i].scaling.y _eq_ 0.1 + workingArray[i%64] / 20_sm_                                            }            // Here we are rotating colors            var r _eq_ 0.5 + 0.5 * Math.cos(t / 12.0)_sm_            var g _eq_ 0.25 + 0.25 * Math.sin(t / 5.0)_sm_            var b _eq_ 0.5 + 0.5 * Math.cos(t / 6.0)_sm_                    // And then affect them to our materials            mat.diffuseColor _eq_ new BABYLON.Color3(r_co_ g_co_ _sm_            mat.ambientColor _eq_ new BABYLON.Color3(r_co_ g_co_ _sm_            mat2.diffuseColor _eq_ new BABYLON.Color3(r/2.0_co_ g/2.0_co_ b/2.0)_sm_            mat2.ambientColor _eq_ new BABYLON.Color3(r/2.0_co_ g/2.0_co_ b/2.0)_sm_            // let_t_s move the camera round our grid cubes            camera.alpha _eq_ t / 50.0_sm_                                 })_sm_                // Return the scene        this.scene _eq_ s_sm_        return this.scene_sm_        }_co_        // Render the scene    \trenderScene_dd_ function()    \t{    \t\tthis.scene.render()_sm_            \t}}_lt_/pre_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_// Now how to call it     var analyserScene _eq_ analyserEffect.createScene(engine)_sm_        var music _eq_ new BABYLON.Sound(_qt_Music_qt__co_ _qt_assets/audio/High_Roller.mp3_qt__co_ analyserScene_co_        function () {            music.play()_sm_        }_co_ { streaming_dd_ true })_sm_        engine.runRenderLoop(function ()    {        analyserEffect.renderScene()_sm_    })_sm__lt_/pre_gt__lt_p_gt_Hope you_t_ll enjoy ! Comments are welcome _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Stv._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-01-09T13:15:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Superb!!!   _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_Although I get a very low framerate on my old laptop. Maybe it would be faster with a SPS instead than with instances_co_ dunno ... unless the shadows are the bottleneck for my slow machine_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_About the sphere _dd_ if you need the light only inside_co_ you might choose the value BACKSIDE for the parameter sideOrientation_co_ instead of DOUBLESIDE_co_ this would be twice less vertices to render (a sphere is always many vertices)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_ll test it asap on a decent computer !_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m a big fan ever of any of your animated musical demos  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Stvsynrj","Date":"2016-01-09T17:45:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yes_co_ for the sphere i_t_m ok_co_ dunno why i put doublesided ...._lt_/p_gt__lt_p_gt_But i dont think that the grid cubes (20x20x8) with 3200 vertexes is the thing that hurts fps_co_ i suscpect more the HDR filter to be the one who kiss the fps _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"davrous","Date":"2016-01-09T18:04:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks ! A great tuto._lt_/p_gt__lt_p_gt_Yes_co_ Steve loves the post processes effects which are nice but kills the perf on almost all devices _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_David_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]