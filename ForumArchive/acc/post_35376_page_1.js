[{"Owner":"SpaceToast","Date":"2018-01-30T21:32:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_\n\tWhat is the best way to get the results--the appended bits--from_lt_span_gt_ _lt_/span_gt__lt_strong_gt_BABYLON.SceneLoader.Append()_lt_/strong_gt__lt_span_gt_ _lt_/span_gt_? The function for a single model_co_ _lt_strong_gt_BABYLON.SceneLoader.ImportMesh()_lt_/strong_gt__co_ and the function to load a new scene _lt_strong_gt_BABYLON.SceneLoader.Load()_lt_/strong_gt__co_ both return their result_co_ but _lt_strong_gt_Append()_lt_/strong_gt_ seems to only return the existing scene.\n_lt_/p_gt_\n\n_lt_p style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_\n\tI believe I understand the concept _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/34939-babylon-scene-vs-some-model/_qt_ rel_eq__qt__qt__gt_in this thread_lt_/a_gt_--mark everything that_t_s already loaded before calling_lt_span_gt_ _lt_/span_gt__lt_strong_gt_BABYLON.SceneLoader.Append()_lt_/strong_gt__co_ at which point everything that_t_s not marked can be assumed to come from the file load. The trouble is_co_ if multiple files are being loaded_co_ there_t_s no guarantee that all of the new meshes_co_ lights and cameras in the scene come from the same file when _lt_strong_gt_onSuccess_lt_/strong_gt__lt_span_gt_ _lt_/span_gt_fires. (This is assuming file loading happens async.)\n_lt_/p_gt_\n\n_lt_p style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_\n\tI suppose it would be possible to use_lt_span_gt_ _lt_/span_gt__lt_strong_gt_BABYLON.SceneLoader.Load()_lt_/strong_gt_ to instead put the results into a new (hidden) scene_co_ loot that scene for parts to the main scene_co_ then delete it. That feels like a lot of overhead though. Any better ideas?\n_lt_/p_gt_\n\n_lt_p style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_\n\t_lt_em_gt_[_lt_span_gt_Peeling this out_lt_/span_gt_ into its own topic_co_ as Q&amp_sm_A threads don_t_t _qt_bump_qt_ anyway!]_lt_/em_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2018-01-30T22:30:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI think the hidden scene has potential_co_ especially if all the entities are disabled then they do not add to draw calls which is the main overhead you need to monitor.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-01-30T22:34:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWe have what you need now _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_1_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlease let me introduce you to the AssetContainer_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/how_to/how_to_use_assetcontainer_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/how_to/how_to_use_assetcontainer_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"SpaceToast","Date":"2018-01-31T18:12:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_ll migrate over to the 3.2 preview and experiment with it! Looks like a great tool.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]