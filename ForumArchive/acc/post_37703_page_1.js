[{"Owner":"dbawel","Date":"2018-05-16T21:27:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI thought to place this on the demos and projects thread_co_ however I decided to post this here as it is more a topic for which framework to use and why. I was hired by an elite software development group at Sony Electronics to help them navigate through WebGL to build a pipeline to deliver content for the South By Southwest convention and to create a foundation to quickly develop games and online media for future projects. In short_co_ I was tasked to escape the limitations of 2D media and help Sony move forward into 3D content taking advantage of the WebGL rendering standards. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis was no esay task_co_ as I was hired Dec. 11th_co_ and was given a hard deadline of March 5 to deliver 2 multiplayer games which were to be the focus of Sony_t_s booth at SXSW in Austin Texas. But first I had to run a quick evaluation and convince a very proficient team of Engineers which framework was the best fit for Sony to invest considerable resources into for SXSW and which was the right coice to take them into future projects. Yhis wa a huge consideration as the WebGL framework which was to be chosen was to play a much greater role at Sony Electronics considering the group I was assigned to works well ahead of the rest of the industry... developing what most likely will be native intelligent applications on Sony devices (especially smartphones) in the near future. These are applications which benefit the consumer in making their day to day interactions simple and informative. Thus the WebGL framework to be chosen needed to be an element in displaying information as well as entertainment for a greater core technology which is developing daily in a unique tool set used by the software engineers to build applications which allows Sony to remain the leader not only in hardware technology_co_ but in the applications which consumers want to use on Sony devices.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut as I was working for Sony_co_ I also had a greater task as there were existing expectations in developing a game on Sony devices which needed to be on par with what consumers already were experiencing with their Playstation consoles. As unrealistic as this might initially appear_co_ that had to be the target as we couldn_t_t take a step back from the quality and playability the consumer was already accustomed to.  So back to the first task... selecting the WebGL framework for Sony Electronics to use moving forward. Rather than telling a story_co_ I_t_ll simply outline why there was little discussion as to which framework to choose. Initially Sony requested someone with Three.js experience as is more than often the case. So when they approached me for the position_co_ I told them I would only consider the position if they were open to other frameworks as well. They were very forthcoming to open their minds to any framework as their goal was not political in any way - as they only cared about which framework was going to provide them with the best set of tools and features to meet their needs. And one might certainly assume that since Sony Playstation is in direct competition with Microsoft Xbox_co_ and Microsoft is now providing the resources in house to develop babylon.js_co_ that Sony Electronics might see a PR conflict in selecting babylon.js as their WebGL development framework. However_co_ I_t_m proud to say that there was never a question from anyone at Sony. I was very impressed that their only goal was to select the very best tools for the development work_co_ and to look beyond the perceived politics and to develop the very best applications for the consumer and to fulfill their obligations to their shareholders in building tools that consumers want on their smartphones and other electronic devices.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo once again... Three.js vs. Babylon.js. This was a very short evaluation. What it came down to was that three.js had far more libraries and extensions - however_co_ this was not the strength of three.js since there is no cohesive development cycles with three.js and although many libraries_co_ tools_co_ and extensions exist_co_ more than often they are not maintained. So it was easy to demonstrate that practically any tool or extension we would require for the SXSW production would require myself or the team updating the extension or tool to be compatible with the other tools we might use on the project. This was due to the failings of the framework since each developer who writes an extension for three.js is writing for a specific compatibility for their own project needs... and not for the overall framework... as this is not within the scope of any developer or group of developers. Thus I find that it requires weeks if not months of of maintenance in three.js prior to building content_co_ just to ensure compatibility between all of the tools and extensions needed to use for most projects. As for babylon.js_co_ the wheel is not generally re-invented as it is with three.js_co_ as most extensions are quickly absorbed into a cohesive framework quickly - provided they have universal appeal - and this integration ensures compatibility as there are fewer and fewer extensions to use_co_ but instead an integrated set of tools which are thoroughly tested and used in production revealing any incompatibilities quickly.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe bottom line is that there are no alpha_co_ beta_co_ and development cycles in three.js_co_ thus no stable releases. Whereas the opposite exists with babylon.js. There is a cohesive development of the tools_co_ and Sony is smart enough to see beyond the politics and to realize that having Microsoft support the development of babylon.js is a huge bonus for an open source framework. And if anyone had to choose a company to support the development of a WebGL or any framework_co_ who better than Microsoft? With practically every other useful WebGL framework in existence spawned by MIT_co_ most all are barely useful at best. And why would anyone pay to use a limited WebGL framework such as PlayCanvas when Babylon.js is far more functional_co_ stable_co_ and free? This baffles me and most anyone who chooses one project using babylon.js. The only argument against babylon.js is that the development of the framework is now supported in house by Microsoft. But for myself and others_co_ this is a positive_co_ not a negative. I_t_ve been assured by the creators and lead developers of babylon.js that they have secured an agreement with Microsoft ensuring the framework remain open source and free. This ensures that anyone is able to contribute and review all code in the framework_co_ and that it remains in the public domain. Sony gets this and we quickly moved forward adopting babylon.js as the WebGL framework within at least one division of Sony Electronics.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAt the end of this post I_t_ll provide a link on youtube to a news report of not only the games we built for SXSW_co_ but the exciting new technology on built on Sony phones which uses the phones camera to capture a hight resolution (yet optimized) 3D scan of a person_t_s head. This is only a prototype today_co_ but will be a native app on Sony phones in the future. So our task was not only to develop multiplayer games of 15+ players simultaneous in real-time_co_ but to have a continuous game which adds a new player as people come through the booth and using a Sony phone_co_ has their head scanned. This was an additional challenge_co_ and I must say that I was very fortunate to work with a group of extremely talented software engineers. The team at Sony is the best of the best_co_ I must say.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAll in all_co_ it was an easy choice in choosing babylon.js for the WebGL framework at Sony Electronics in San Diego. Below is a news report from SXSW which shows the new scanning technoogy in use_co_ as well as a brief example of one of the games on the large booth screen. And using Electron (a stand-alone version of Chromium)_co_ I was able to render 15 high resolution scanned heads_co_ vehicles for each head_co_ animation on each vehicle_co_ particles on each vehicle_co_ and many more animations_co_ collisions_co_ and effects without any limitations on the game - all running at approx. 40 fps. The highlight of the show was when the officers from Sony Japan came through the booth... which are the real people we work for... gave their thumbs up_co_ as they were very happy with hat we achieved in such a short time. And these were the people who wanted to see graphics and playability comparable to what the Playstation delivered. And they approved. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tLink_dd_\n_lt_/p_gt_\n\n_lt_div class_eq__qt_ipsEmbeddedVideo_qt__gt_\n\t_lt_div_gt_\n\t\t_lt_iframe allowfullscreen_eq__qt_true_qt_ frameborder_eq__qt_0_qt_ height_eq__qt_270_qt_ src_eq__qt_https_dd_//www.youtube.com/embed/32Of3JHc2os?feature_eq_oembed_qt_ width_eq__qt_480_qt__gt__lt_/iframe_gt_\n\t_lt_/div_gt_\n_lt_/div_gt_\n\n_lt_p_gt_\n\tThanks to babylon.js.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2018-05-16T21:38:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWay to go Dave!  Hope all is well_co_ looks like you are back on your feet after the fire.  You should give me a call here sometime so we can catch up._lt_br /_gt_\n\tProud of you!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"inteja","Date":"2018-05-16T22:59:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tGreat work and love the write-up.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-05-16T23:23:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMan. I_t_m so glad you picked Babylon.js for your great products!!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you so much for this feedback. I REALLY appreciate it!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-05-16T23:43:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tReally enjoyed your feedback. Thanks for the time you spent writing it down !\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2018-05-17T00:54:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis happens a lot in Melbourne_co_ Australia too.  webGL jobs always mention three.js.  Its simply because that_t_s the only webGL framework they_t_ve heard of.  If I_t_m on a project and no work_co_ or minimal work has been done with the three.js framework I can always convince them to switch to babylon.js.  For the record_co_ I actually started with three.js and it got frustrating.  Parts of it felt incomplete and broken_co_ so I switched to babylon.js and never looked back.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"waverider","Date":"2018-05-17T04:10:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/12544-ozrocker/?do_eq_hovercard_qt_ data-mentionid_eq__qt_12544_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/12544-ozrocker/_qt_ rel_eq__qt__qt__gt_@ozRocker_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\thaha! I can relate to the frustrating part _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ _lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"davrous","Date":"2018-05-17T08:22:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThank you so much for this awesome feedback!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"HoloLite","Date":"2018-05-17T17:31:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSo glad to hear this great feedback. I was in similar situations where I had to decide between aframe vs babylonjs.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s true there is still a lot of silly anti Microsoft sentiments in the IT world_co_ but yes we have to be smart to see through (the dirty) politics. _lt_span class_eq__qt_ipsEmoji_qt__gt_😃_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Gijs","Date":"2018-05-17T20:57:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThat_t_s awesome! And it_t_s notable how so much was going on behind the scenes before making it to the convention_co_ which is something that is easily overlooked.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is also good news_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_I_t_ve been assured by the creators and lead developers of babylon.js that they have secured an agreement with Microsoft ensuring the framework remain open source and free._lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tIt would be cool if I could scan my face on my Xperia.. _lt_span class_eq__qt_ipsEmoji_qt__gt_🤩_lt_/span_gt_ . Thank you for your service.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-05-20T19:25:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSo looks like you got the Kinect working _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_.  For the face scanner to make it into production_co_ seems like you would have to remove the robot from the process. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ in early March_co_ on the NBC nightly news_co_ I remember that they re-ran a DARPA sourced story.  It warned to be on the lookout for people being made to say things in videos_co_ a.k.a faked videos.  It caught my eye as I use the DARPA funded Arpabet database for my animated speech.  Wonder if the timely of the re-run was prompted by your demo?_lt_img alt_eq__qt__dd_ph34r_dd__qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_ph34r.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/ph34r@2x.png 2x_qt_ title_eq__qt__dd_ph34r_dd__qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI also would have thought that the example of President OBama talking (which wasn_t_t even visually convincing) was a little far fetched_co_ since it relied upon a voice impersonator.  This is except for the fact I remembered last fall.  I had just finished the first version of my speech system.  Was walking my dog_co_ and a young woman_co_ sitting on her deck said something to me in a very low_co_ Lauren Bacall voice.  It then just popped into my head that IBM had bought a Voice Font patent back in like 1990.  I do not have time to do anything with that right now_co_ but it was definitely noted.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2018-05-28T19:26:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8492_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/_qt_ rel_eq__qt__qt__gt_@JCPalmer_lt_/a_gt_ and everyone_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI like that you like the write up. As for making realistic people_co_ we solved this on Lord of the Rings with Gollum. It only takes 11 - 14 phonems to make a convincing person_co_ with 5 facial states. perhaps this should be a project as it_t_s easy to achieve. I first discovered this by examination in building CatDog for TV in 1990 as we had to go live on game shows and talk shows. But now there is no mystery to it_co_ so let me know if you want the list of phonems and facial expressions. I_t_ve posted it here before_co_ but happy to help if need be.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2018-06-03T07:15:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/22401-gijs/?do_eq_hovercard_qt_ data-mentionid_eq__qt_22401_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/22401-gijs/_qt_ rel_eq__qt__qt__gt_@Gijs_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFYI - expect to be able to scan your face on Sony devices soon. The only reason we used the robot to scan_co_ was that we wanted an entire head scan. Otherwise_co_ you_t_ll be scanning your face_co_ and either a generic head will be selected_co_ or in some applications and games_co_ you_t_ll select you head attributes such as hair color and length.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-06-06T15:02:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSounds like a Sony version of Memoji.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOn the phonemes / visemes front_co_ I think you only posted the phonemes which are also visemes in a PM_co_ not a topic.  There you had 16.  Some like FV or PB are really the same viseme for multiple phonemes.  I did not go back to the original message_co_ but I have them as (red not in CMU / DARPA DB)_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_AO | AE | _lt_span style_eq__qt_color_dd_#e74c3c_sm__qt__gt_AX_lt_/span_gt_ | F_lt_u_gt_V_lt_/u_gt_ | G_lt_u_gt_K_lt_/u_gt_ | IY | L | M | N | OW | P_lt_u_gt_B_lt_/u_gt_ | S | T_lt_u_gt_D_lt_/u_gt_ | UH | UW | ZH_lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOne problem I had is using a database to generate animation_co_ is not having AX in it.  Databases are kind of picky.  In database defined phonemes_co_ what should AX be?  Dictionary below (blue already assigned by you)_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_AA | _lt_span style_eq__qt_color_dd_#2980b9_sm__qt__gt_AO_lt_/span_gt_ | AW | _lt_span style_eq__qt_color_dd_#3498db_sm__qt__gt_AE_lt_/span_gt_ | AH | AY | _lt_span style_eq__qt_color_dd_#3498db_sm__qt__gt_B_lt_/span_gt_ | CH | _lt_span style_eq__qt_color_dd_#3498db_sm__qt__gt_D_lt_/span_gt_ | DH | EH | ER | EY |_lt_span style_eq__qt_color_dd_#3498db_sm__qt__gt_ F_lt_/span_gt_ | _lt_span style_eq__qt_color_dd_#3498db_sm__qt__gt_G_lt_/span_gt_ | HH | IH | _lt_span style_eq__qt_color_dd_#3498db_sm__qt__gt_IY_lt_/span_gt_ | JH | _lt_span style_eq__qt_color_dd_#3498db_sm__qt__gt_K_lt_/span_gt_ |_lt_span style_eq__qt_color_dd_#3498db_sm__qt__gt_ L_lt_/span_gt_ | _lt_span style_eq__qt_color_dd_#3498db_sm__qt__gt_M_lt_/span_gt_ | N | NG | OW | OY | _lt_span style_eq__qt_color_dd_#3498db_sm__qt__gt_P_lt_/span_gt_ | R | _lt_span style_eq__qt_color_dd_#3498db_sm__qt__gt_S_lt_/span_gt_ | SH | _lt_span style_eq__qt_color_dd_#3498db_sm__qt__gt_T_lt_/span_gt_ | TH | _lt_span style_eq__qt_color_dd_#3498db_sm__qt__gt_UH_lt_/span_gt_ | _lt_span style_eq__qt_color_dd_#3498db_sm__qt__gt_UW_lt_/span_gt_ | _lt_span style_eq__qt_color_dd_#3498db_sm__qt__gt_V_lt_/span_gt_ | W | Y | Z | _lt_span style_eq__qt_color_dd_#3498db_sm__qt__gt_ZH_lt_/span_gt__lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Maybe AX is for AA_co_ AW_co_ AH_co_ &amp_sm_ AY?  One reason for the higher count from the PM is you listed M &amp_sm_ PB separately.  Many places_co_ including me_co_ use the same viseme for all 3. Sample words for each_dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt__lt_span_gt_AA | _lt_/span_gt__lt_/strong_gt_h_lt_strong_gt_O_lt_/strong_gt_t_co_ w_lt_strong_gt_A_lt_/strong_gt_nt_co_ b_lt_strong_gt_OUGH_lt_/strong_gt_t_co_ _lt_strong_gt_O_lt_/strong_gt_dd\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_AW |_lt_/strong_gt_ c_lt_strong_gt_OW_lt_/strong_gt__co_ _lt_strong_gt_OU_lt_/strong_gt_t_co_ m_lt_strong_gt_OU_lt_/strong_gt_sE_co_ h_lt_strong_gt_OU_lt_/strong_gt_sE\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_AH | U_lt_/strong_gt_p_co_ _lt_strong_gt_A_lt_/strong_gt_lone_co_ h_lt_strong_gt_U_lt_/strong_gt_t\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_AY | _lt_/strong_gt_f_lt_strong_gt_I_lt_/strong_gt_nd_co_ r_lt_strong_gt_I_lt_/strong_gt_de_co_ l_lt_strong_gt_IGH_lt_/strong_gt_t_co_ fl_lt_strong_gt_Y_lt_/strong_gt__co_ p_lt_strong_gt_IE_lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_No mention before about 5 states.  I am guessing one of them is _t_rest_t__co_ used between words.  Please elaborate._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_My first speech implementation looks too much like chomping / over enunciation_co_ especially with speed set too fast.  I use the vowel stress indicator in the DB to not animate vowels with a weak stress indication.  Low stress vowel reduction helps_co_ but a few visemes (or the # of phonemes they are used for) are going to need to be removed for next version.  There are 16 visemes_co_ but they cover many more phonemes_dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt__lt_span_gt_AA | AO | AW-OW | AE-EH | AH | AY-IH | B-M-P | CH-JH-SH-ZH | DH-TH | ER-R-W | EY | F-V | IY | L | OY-UH-UW | S_lt_/span_gt__lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis only really leaves D_co_ G_co_ K_co_ N_co_ NG_co_ T_co_ Y_co_ &amp_sm_ Z with no viseme.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"CarlBateman","Date":"2018-06-09T13:59:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe almost throwaway comment\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tQuote\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tAnd why would anyone pay to use a limited WebGL framework such as PlayCanvas when Babylon.js is far more functional_co_ stable_co_ and free?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tseriously gave me pause for thought. I was planning on using PlayCanvas (at an upcoming game jam) but now...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlayCanvas has a free option_co_ but is PlayCanvas really that limited compared to Babylon.js?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"satguru","Date":"2018-06-09T14:58:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/11597-carlbateman/?do_eq_hovercard_qt_ data-mentionid_eq__qt_11597_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/11597-carlbateman/_qt_ rel_eq__qt__qt__gt_@CarlBateman_lt_/a_gt_ One issue with Playcanvas  - their engine is opensource but  their asset import tools and their editor are still proprietary. You have to upload your assets (in fbx obj etc format) to their servers to convert them to their format. I don_t_t think they have published their asset format.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2018-06-10T03:58:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/11597-carlbateman/?do_eq_hovercard_qt_ data-mentionid_eq__qt_11597_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/11597-carlbateman/_qt_ rel_eq__qt__qt__gt_@CarlBateman_lt_/a_gt_-\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI wouldn_t_t completely discount PlayCanvas... I simply don_t_t believe there is a future if you were to invest in PlayCanvas as your primary WebGL framework. However_co_ for newbies or simple projects which need to be completed quickly_co_ then PlayCanvas might be what you_t_re looking for. If it_t_s interface and API offers everything you need for your project_co_ then it might be your best solution in the short term. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut for long term investment into a framework_co_ I personally don_t_t believe that PlayCanvas or any other framework for profit is a good investment as looking at simple logistics clearly show that there is no way for any for profit WebGL framework to compete against babylon.js or three.js. And specifically babylon.js is growing in features and flexibility that PlayCanvas can only survive due to it_t_s strengths of a reasonably intuitive API.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo if you are new to WebGL and either don_t_t need to pay for the use of PlayCanvas_t_ API - or can afford in your budget_co_ then perhaps it_t_s a good first choice to simply get a project delivered quickly. However_co_ I doubt that many developers would disagree that investing in future development in a for profit framework such as PlayCanvas would be beneficial for you. So if you are proficient in JavaScript and general Web development_co_ then I would personally choose an open source framework. And I personally like babylon.js for many reasons - but other than it_t_s stability and functionality_co_ you_t_ll find the community the very best for any WebGL framework.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2018-06-10T04:35:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8492_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/_qt_ rel_eq__qt__qt__gt_@JCPalmer_lt_/a_gt_-\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI guess I opened up another can of worms... \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs for _lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_phonemes/visemes_co_ it is difficult to come up with a definitive list which represents realistic articulate speech - as you well know. As for AX_co_ I usually have this in my list of phonemes_co_ although lately I_t_ve been omitting AX as it rarely gets called in most any audio analysis algorithms... and usually confuses the analysis with partial calls identifying AX. So I generally omit it from the list - not that I believe this is ideal. It comes from years of real-time speech animation using various methods._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_217236_qt_ data-ipsquote-contentid_eq__qt_37703_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1528297370_qt_ data-ipsquote-userid_eq__qt_8492_qt_ data-ipsquote-username_eq__qt_JCPalmer_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 6/6/2018 at 8_dd_02 AM_co_ JCPalmer said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThis only really leaves D_co_ G_co_ K_co_ N_co_ NG_co_ T_co_ Y_co_ &amp_sm_ Z with no viseme_lt_span_gt_﻿_lt_/span_gt_._lt_span_gt_﻿_lt_span_gt_﻿_lt_/span_gt__lt_/span_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tAs for the above_co_ if I understand correctly_co_ most of these are covered by _qt_D_co_ T_co_ and S_qt_ (with the odd W which can be assigned to a combination of a limited list) - as there is little noticeable differences when running real-time speech analysis. Another issue I_t_ve yet to mention is that I don_t_t use a one to one representation of any _lt_span style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#353c41_sm_font-size_dd_14px_sm__qt__gt_phonemes/visemes_co_ as I assign blends of these to fully cover what is needed for the performance. _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBottom line_co_ what I_t_ve discovered is that less is more. Generally_co_ the shorter the list of _lt_span style_eq__qt_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_phonemes/visemes_co_ the better the results. The more which are added causes _qt_chattering_qt_ of the mouth and tongue_co_ and becomes a distraction rather than a smooth fit within the scope of animation. I certainly don_t_t have a definitive list to provide_co_ but simply a limited list based upon the many methods I_t_ve used and the results they commonly produce._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_background-color_dd_rgb(255_co_255_co_255)_sm__qt__gt_As for the facial _qt_states_qt__co_ these are limited only to the # of control inputs from the puppeteering controls I_t_ve built for film and TV performances - some video game cinematics as well. These always include _qt_Happy_qt__co_ _qt_Sad_qt_ _qt_Open mouth (perhaps considered loud)_qt__co_ and at a minimum _qt_left brow up and down_qt_ and right brow up and down_qt_ - which can be assigned together or separately providing enough channels are available. Separately is better. I always set these to attenuate so I can produce an eye squint and open the eyes wide as needed. I also assign an eye blink to a button control_co_ as this is certainly necessary._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs for a _qt_default_qt_ mouth and facial state_co_ this is always set as the very first keyframe so that when no controls or inputs are used_co_ the face returns to this state. There is no need for me to attach this to any controls. But I always automate the mouth (for the most part) except for specific states such as yelling or whispering. And then always puppeteer everything on the face except for most mouth shapes_co_ as I_t_ve never found any algorithm which provides any useful results for facial states. And since I record in real-time_co_ it_sm_s incredibly fast to record a finished take. I might tweak the speech a bit after the fact_co_ but otherwise_co_ I_t_m able to tweak any aspect of the animation by enabling only the channel(s) I might need to make subtle changes. But with minimal rehearsal as well as running the audio through a parametric EQ and a compressor_co_ I_t_ve been able to record finished facial animation using similar lists to what I listed prior as well as a little practice prior to going live.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s all subjective_co_ although there are definitely methods which allow me to gain advantage over a specific performance. Knowing the character is everything_co_ but it_t_s almost as simple to walk in without rehearsal once you have a few productions behind you and you_t_ve built and setup the controls personally.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheers_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDB\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Don Desmond","Date":"2018-09-27T11:16:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWow! wow! wow! thats greate.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlease how can i start learning babylon\n_lt_/p_gt_\n\n_lt_p_gt_\n\tto make my 3d racing game\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-09-27T11:53:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/32853-don-desmond/?do_eq_hovercard_qt_ data-mentionid_eq__qt_32853_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/32853-don-desmond/_qt_ rel_eq__qt__qt__gt_@Don Desmond_lt_/a_gt__co_ welcome to the forum.  It starts with _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/_qt_ rel_eq__qt_external nofollow_qt__gt_the BabylonJS playground_lt_/a_gt_ (examples pull-down menu) and _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/_qt_ rel_eq__qt_external nofollow_qt__gt_our yummy docs site_lt_/a_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd don_t_t forget about the _lt_a href_eq__qt_http_dd_//www.babylonjs.com/_qt_ rel_eq__qt_external nofollow_qt__gt_fun BabylonJS Main Web Site_lt_/a_gt_ and our _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/resources/offsite_tutorials_list_qt_ rel_eq__qt_external nofollow_qt__gt_Off-Site Tutorials List_lt_/a_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCya _t_round_co_ party on!  Good luck on your racing game.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Don Desmond","Date":"2018-09-27T16:26:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks much _lt_span_gt__lt_span_gt_@Wingnut _lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Don Desmond","Date":"2018-09-27T17:09:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\ti was about to learn phaser.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tjust changed my mind.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]