[{"Owner":"Axel","Date":"2018-09-06T11:54:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHeyÂ y_t_all! New babylonjs dev here _lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ˜‰_lt_/span_gt_. I_t_ve been trying to render a huge point cloud_co_ so far with 100k points (xyz)_co_ I tested these two methods_dd_\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\tUsing a Solid Particle System (SPS)_dd_ 13 FPS\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tUsing a Sprite Manager_dd_ 28 FPS\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n_lt_p_gt_\n\tI saw in the demos what legacy Particle Systems and GPU Particle Systems can do at solid 60 FPS_co_ but I can_t_t figure out a way to create particles individually and place them at certain positionsÂ (those provided by an array of positions).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat do you suggest?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-09-06T16:30:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWelcome fellow developer _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can use particle system with custom positioning function_dd_Â _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/how_to/customise#custom-functions_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/how_to/customise#custom-functions_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut I would like to see how you dealt with the SPS as it should be far faster than what you mention for 100K particles\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Axel","Date":"2018-09-06T19:13:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks!Â _lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ˜Š_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is more or less the implementation I did for the SPS_co_ I still get 13 FPS even in the Playground_dd_Â _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WCDZS%2385_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WCDZS#85_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs for theÂ startPositionFunction in ParticleSystem_co_ I_t_d need a way to create a fixed number of particles at once_co_ since the emitters only allow for particle creation and destruction over time_co_ although I might be mistakenÂ _lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ˜…_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-09-07T07:14:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOk_co_ I understand.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhereas the sprite manager or the legacy particle system always render their elements (sprites or 2d particles) directly in the screen space in a certain manner_co_ the SPS_co_ even in billboard mode_co_ still computes everything in the world space. So when using the billboard mode_co_ the SPS needs to rotate each particle for you under the hood so they always face the camera ... and rotations are the heaviest computations in the process.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat_t_s why I often recommend to use the legacy particle system or the sprite manager when people need the billboard mode for planar particles only because they are more powerful when dealing with huge number (&gt_sm_ 10K) of particles.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat said_co_ if you still want to use the SPS with billboard because of its extra features (per particle color_co_ uvs_co_ intersection_co_ picking_co_ particle depth sort for alpha blending_co_ etc) and if you want to get higher performance_co_ you could consider these leads_co_ knowing that the heavy computation is done in setParticles() _lt_span_gt__dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- don_t_t call setParticles() at all if your camera doesn_t_t need to rotate (but only to zoom in/out_co_ so no need for billboard there) and keep the planar particles _lt_span_gt__dd_ _lt_/span_gt__lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WCDZS%2386_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WCDZS#86_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- if the camera needs to rotate_co_ call setParticles() only on demand _lt_span_gt__dd_ _lt_/span_gt__lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WCDZS%2387_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WCDZS#87_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_- don_t_t call setParticles() at all_co_ don_t_t use the billboard mode_co_ and replace the planar particles by real 3D particles visible from everywhere (tetrahedrons or tiny low poly spheres)_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_tetras _dd_ _lt_/span_gt__lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WCDZS%2388_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WCDZS#88_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\ticospheres _dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WCDZS%2389_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WCDZS#89_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tboxes _dd_ _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WCDZS%2390_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WCDZS#90_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t300K fixed boxes _lt_span_gt__dd_ _lt_/span_gt__lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WCDZS%2391_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WCDZS#91_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tBTW_co_ I_t_m currently working on my poor free time on a wasm test about the SPS computation process to check if this could be really improved with wasm. This is really painful because WASM doesn_t_t provide any math function like sine_co_ cosine that are massively used in the rotation computations. So I have first to reimplement some sine and cosine before making the SPS test.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Axel","Date":"2018-09-07T11:09:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for the answer _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5453_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/_qt_ rel_eq__qt__qt__gt_@jerome_lt_/a_gt_!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust for context_co_ I_t_m trying to achieve similar performance to this point cloud renderer_dd_Â _lt_a href_eq__qt_https_dd_//github.com/potree/potree_qt_ rel_eq__qt_external nofollow_qt__gt_Potree_lt_/a_gt_. It seems to use billboard with even more than 3 million planes with next to no performance issues_co_ although it could be using some optimizations when zooming out rendering less planes_co_ I_t_m not sure.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve tested the legacy particle system with 100k points too_co_ and I seem to be getting around 35 FPS_co_ not a huge increase.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe performance without billboard in SPS is stellar_co_ and it_t_d be neat to have access to all those per-particle functions_co_ although the scene seems to take very long to load if using 3D particles. Is there some way to optimize this?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2018-09-07T12:36:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tnot really as_co_ when using a SPS in general_co_ it needs to _qt_build_qt_ a real 3 geometry CPU side contrary to some particle 2D system using either a direct screen space projection_co_ either a dedicated GPU computation\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-09-09T16:51:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHave been having a play around to see if I could get anything with faster fps. First try is to build a mesh just from the points data and use pointsCloud on the material. No indices_co_ no normals so no light just black points _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WZNWVG_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WZNWVG_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe only way I could think of to add color was to form small triangles around each point and then I realised that if I did that and put the mesh into billboardMode the points cloud would already exist _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WZNWVG%231_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WZNWVG#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t3 million points (that_t_s 9 million vertices) is possible but not at 60fps_co_ I was getting 25fps on my laptop _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WZNWVG%232_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WZNWVG#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSince normals will always be (0_co_ 0_co_ -1) because of the way the facets are constructed they can be added at construction rather than calculated later (only 300 000 points this time so waiting not too long) _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WZNWVG%233_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WZNWVG#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor info _lt_strong_gt_offset_lt_/strong_gt_ determines the size of each of the triangles.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHave fun\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Axel","Date":"2018-09-11T09:56:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5453_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/_qt_ rel_eq__qt__qt__gt_@jerome_lt_/a_gt_Â makes senseÂ _lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ˜…_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/?do_eq_hovercard_qt_ data-mentionid_eq__qt_14282_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/_qt_ rel_eq__qt__qt__gt_@JohnK_lt_/a_gt_Â I didn_t_t think about building a mesh from scratch! This seems to be what I was looking for_co_ hopefully_co_ as it doesn_t_t somehow perform expensiveÂ billboard computations (I don_t_t quite understand how it_t_s done).Â Though it doesn_t_t seem to work in the stable release_co_ only in the beta.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRegarding the color_co_ I_t_ve found that you can set the color per vertex_co_ so no need to form triangles without that precious billboard effect_dd_Â _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WZNWVG%235_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WZNWVG#5_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlthough the performance is a bit worseÂ  than with your implementation at 3 million points_co_ but I guess I can live with that_dd_Â _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WZNWVG%236_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WZNWVG#6_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-09-11T10:52:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span_gt_You can assign colors directly _lt_/span_gt__lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WZNWVG%238_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WZNWVG#8_lt_/a_gt_Â  _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WZNWVG%239_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WZNWVG#9_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPossibly my imagination but seems to load a little quicker.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Axel","Date":"2018-09-11T11:09:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/?do_eq_hovercard_qt_ data-mentionid_eq__qt_14282_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/_qt_ rel_eq__qt__qt__gt_@JohnK_lt_/a_gt_Â Ah thanks! I_t_ve done some stopwatch tests and it seems to be about a second fasterÂ _lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ‘Œ_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-09-11T18:08:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFound some raw data _lt_a href_eq__qt_https_dd_//qcgroup.com/resources/raw-file-formats/_qt_ rel_eq__qt_external nofollow_qt__gt_here_lt_/a_gt_ added some commas and turned into an array and could not save the array in the PG as got `too long` message so had to add as external file to get _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WZNWVG%2310_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WZNWVG#10_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tGive it a moment or two to load up. If it says _t_positions not defined` click the RUN button.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Axel","Date":"2018-09-18T10:02:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/?do_eq_hovercard_qt_ data-mentionid_eq__qt_14282_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/14282-johnk/_qt_ rel_eq__qt__qt__gt_@JohnK_lt_/a_gt_Â That_t_s cool! Although when you have huge xyz files_co_ you_t_ll probably want to use some kind of dataÂ stream in order to not run out of memory.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe problem I have now is that I lost some SPS functionality_co_ including the very important ability to pick the points individually. I was wondering if there_t_s a way to do this in BJS without tackling with WebGL directly. I_t_ve been scouting through the forum and the documentation_co_ but couldn_t_t find muchÂ _lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ˜…_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Axel","Date":"2018-09-21T11:53:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tTo better illustrate what I meant_dd_Â _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#WZNWVG%2311_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#WZNWVG#11_lt_/a_gt_Â (console logs whether it_t_s picked or not)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe goal is to be able to tell the position of the vertices you click or hover with the cursor_co_ this way it could be possible to measure distances or angles between different points.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for the help!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEdit_dd_ Should I make this a separate question? I postedÂ it here just because it was related.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"chicagobob123","Date":"2018-09-25T22:00:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAxel you just made my day.Â  I was just looking for something like this.Â  I tried particles and the performance died around 10_co_000 and I just didn_t_t see a way.Â \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks SO MUCHÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]