[{"Owner":"kolar","Date":"2014-03-25T19:24:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co_ I am making a game with dynamic environment loading_co_ I want to remove meshes (also skeletons) from rendering list temporalily so the mesh won_t_t be dowloaded and parsed when it will be added to scene again. Do I need to write my own asset manager? What is the best way (babylon way) to store parsed meshes/skeletons/textures in memory? I know I can use indexeddb but I worry that frequent mesh parsing might be performance hit. Any advice?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-03-27T12:40:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Not sure to have understood well but you can remove a mesh from a scene by removing it from the meshes array of the scene and add it back when you want._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var myMesh _eq_ new Mesh(_qt_myMesh_qt__co_ myScene)_sm_myScene.meshes.pop()_sm__lt_/pre_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_myScene.meshes.push(myMesh)_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-03-27T13:52:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Welcome to the forum_co_ Kolar!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_All lights_co_ cameras_co_ and mesh_co_ used in babylon.js_co_ are of class NODE. _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/page.php?p_eq_24620_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/page.php?p_eq_24620_lt_/a_gt_ .  That means that they inherit some properties and methods of NODE.  [AnySceneItem].setEnabled(1 or 0) might be of  _lt_em_gt_some_lt_/em_gt_ interest to you.  I am just guessing_co_ here._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Large _t_groups_t_ of scene items can be parented to a single (maybe invisible) mesh.  You could think of that mesh as a _t_group controller_t_.  Toggle that parent.setEnabled()_co_ and all children... get toggled as well.  In this way_co_ you could enable/disable large chunks of scene... with a single setEnabled() call on an important parent or two.  Lights and cameras can be parents_co_ too.  I do not know if any of this helps_co_ but I thought you should know.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gwenael","Date":"2014-03-27T14:05:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yes_co_ _t_enabled_t_ can be used too but it_t_s only if you remove/push from/to the same scene whereas what I suggested allow you to push to another scene. I update my previous post to reflect this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_myOtherScene.meshes.push(myMesh)_sm__lt_/pre_gt__lt_p_gt_kolar_co_ you have several options_co_ it depends on what you want to do. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gryff","Date":"2014-03-27T22:23:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt_Large _t_groups_t_ of scene items can be parented to a single (maybe invisible) mesh.  You could think of that mesh as a _t_group controller_t_.  Toggle that parent.setEnabled()_co_ and all children... get toggled as well.  In this way_co_ you could enable/disable large chunks of scene... with a single setEnabled() call on an important parent or two._lt_p_gt_ _lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@Wingnut_dd_ Can you set things like _qt_checkCollisions_qt_ by using a _t_group controller_t_ for a number of meshes in this way? Will checkCollisions progate from parent to children?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@gwenael - pushing and popping meshes - got to play with that _sm_-)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_cheers_co_ gryff _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2014-03-28T00:10:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Gryff... that is a great question and an interesting idea_co_ but I don_t_t have an answer for you.  I have not studied collisions at all_co_ speak nothing of how parent-child relationships might propagate collision events.  Others likely know_co_ and if you do experiments in that_co_ please tell us of your discoveries.  thx._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"kolar","Date":"2014-03-29T09:38:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thank you for the answer_co_ it makes things more clear for me._lt_/p_gt__lt_p_gt_How about removing skeletons? What happens to the skeleton when I remove mesh so there are no meshes affected by this skeleton. In other way_co_ when I write_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_BABYLON.SceneLoader.ImportMesh(null_co_ _qt_path_qt__co_ _qt_some_model_with_skeleton.babylon_qt__co_ scene_co_ function (meshes_co_ particleSystems_co_ skeletons) {\t//skeletons[0] is attached only to meshes[0]\tscene.beginAnimation(skeletons[0]_co_ 0_co_ 30_co_ true_co_ 1.0)_sm_\t\tscene.meshes.splice(scene.meshes.indexOf(meshes[0])_co_ 1)_sm_})_sm__lt_/pre_gt__lt_p_gt_Is animation still performing (sending transformations to gpu itd)? Do I need to remove skeleton manually_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_scene.skeletons.splice(scene.skeletons.indexOf(skeletons[0])_co_ 1)_sm__lt_/pre_gt__lt_p_gt_And what happens to the skeleteon when I use second solution_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_mesh.setEnabled(0)_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"gryff","Date":"2014-03-29T15:46:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt_a great question and an interesting idea_co_ but I don_t_t have an answer for you.  I have not studied collisions at all_co_ speak nothing of how parent-child relationships might propagate collision events._lt_p_gt_ _lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Well_co_ I created a little experiment - see the _qt_Trigger Zones_qt_ thread for details._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_cheers_co_ gryff _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]