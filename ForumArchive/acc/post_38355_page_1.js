[{"Owner":"ozRocker","Date":"2018-06-20T15:07:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m referring to the list of vertices coming from this_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tmesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI used to think it would list the vertices referred to by the definition of the faces and that it was unique_co_ so no vertices would appear more than once.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tfor example_co_ if you had this in the OBJ file_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_f 5/5/5 9/9/9 8/8/8\nf 7/7/7 6/6/6 8/8/8\nf 5/5/5 8/8/8 6/6/6\nf 5/5/5 4/4/4 9/9/9_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tit would list 5th vertex_co_ 9th vertex_co_ 8th vertex_co_ 7th vertex_co_ 6th vertex_co_ 5th vertex_co_ then 4th vertex.  Once a vertex is listed it will not appear again so repeated vertex indices are ignored.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHowever_co_ that does not seem to be the case here_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_f 90/90/90 91/91/90 92/92/90\nf 62/62/62 77/77/77 61/61/61\nf 77/77/77 79/79/79 61/61/61\nf 61/61/61 79/79/79 60/60/60\nf 93/93/91 94/94/92 95/95/93\nf 96/96/94 97/97/95 95/95/93\nf 90/98/96 98/99/97 99/100/98_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThe vertex at index 90 will appear from 90/90/90 then its repeated when we hit 90/80/96.  So I_t_m thinking maybe its not just unique position index (90) but a combination of position and texture index (90/90/90 and 90/98/96).  However_co_ this is not the only case.  There are other instances where vertex is repeated.  I_t_m wondering if anyone knows exactly how they are listed and under which cases a vertex is repeated in the _qt_getVerticesData_qt_ result.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-06-20T15:24:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI am a little reluctant to give the following an answer since given all you have achieved with BJS I presume you know this already. However my assumptions are so often wrong I will give it anyway and take the risk of `teaching my granny to suck eggs`\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThese pages show the underlying structure for vertex storage with vertexData and show why vertices might be repeated\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/how_to/custom#positions-and-indices_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/how_to/custom#positions-and-indices_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/resources/normals_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/resources/normals_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOf OBJ files I know nothing but once imported into BJS they must follow its data structure.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2018-06-20T15:40:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_218832_qt_ data-ipsquote-contentid_eq__qt_38355_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1529508273_qt_ data-ipsquote-userid_eq__qt_14282_qt_ data-ipsquote-username_eq__qt_JohnK_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t12 minutes ago_co_ JohnK said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tI am a little reluctant to give the following an answer since given all you have achieved with BJS I presume you know this already. However my assumptions are so often wrong I will give it anyway and take the risk of `teaching my granny to suck eggs`\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tThese pages show the underlying structure for vertex storage with vertexData and show why vertices might be repeated\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/how_to/custom#positions-and-indices_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/how_to/custom#positions-and-indices_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/resources/normals_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/resources/normals_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tOf OBJ files I know nothing.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThanks for that.  I hadn_t_t actually seen those pages before_co_ but I had a read and unfortunately it doesn_t_t help with my confusion.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBasically I_t_m trying to find out what makes a vertex index appear multiple times in the position data.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2018-06-20T15:58:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tNow I am not clear. Position data only contains positions in the form x_co_ y_co_ z and does not contain indices. You get indices from  mesh.getIndices()_co_ which gives you triples i_co_ j_co_ k where vertices i_co_ j_co_ k form a triangular facet.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2018-06-20T16:53:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_218843_qt_ data-ipsquote-contentid_eq__qt_38355_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1529510284_qt_ data-ipsquote-userid_eq__qt_14282_qt_ data-ipsquote-username_eq__qt_JohnK_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t50 minutes ago_co_ JohnK said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tNow I am not clear. Position data only contains positions in the form x_co_ y_co_ z and does not contain indices. You get indices from  mesh.getIndices()_co_ which gives you triples i_co_ j_co_ k where vertices i_co_ j_co_ k form a triangular facet.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tYeh_co_ I refer to the indices _t_cos that_t_s how the vertices are listed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf faces are set out like this_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_f 5/5/5 9/9/9 8/8/8\nf 7/7/7 6/6/6 8/8/8_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tthen the position data will contain the vertex at index 5_co_ then index 9_co_ then index 8_co_ index 7_co_ index 6.  However_co_ the last one will be ignored _t_cos its already in the position data.  So the vertices are stored according to the way the indices are listed in the face definitions.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-06-20T17:05:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThere are several ways to store info in obj file_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/loaders/src/OBJ/babylon.objFileLoader.ts#L432_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/loaders/src/OBJ/babylon.objFileLoader.ts#L432_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBasically_co_ you are in mode 3 meaning positions/uv/normal_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/loaders/src/OBJ/babylon.objFileLoader.ts#L523_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/loaders/src/OBJ/babylon.objFileLoader.ts#L523_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHope that helps? \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"babbleon","Date":"2018-06-20T22:43:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJust a guess_co_ but does this obj file have any sharp edges? Blender_dd_ edge split_co_ Max_dd_ ?smoothing groups (not used Max since 2002)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2018-06-20T23:14:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_218865_qt_ data-ipsquote-contentid_eq__qt_38355_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1529514301_qt_ data-ipsquote-userid_eq__qt_20193_qt_ data-ipsquote-username_eq__qt_Sebavan_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t6 hours ago_co_ Sebavan said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThere are several ways to store info in obj file_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/loaders/src/OBJ/babylon.objFileLoader.ts#L432_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/loaders/src/OBJ/babylon.objFileLoader.ts#L432_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tBasically_co_ you are in mode 3 meaning positions/uv/normal_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/loaders/src/OBJ/babylon.objFileLoader.ts#L523_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/loaders/src/OBJ/babylon.objFileLoader.ts#L523_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tHope that helps? \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThat does help. Thank you!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI can see this line_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_//Check if this tuple already exists in the list of tuples_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tso it looks like the uniqueness comes from a combination of all 3 values.  \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2018-06-21T01:45:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis is what_t_s confusing me.  I_t_m getting multiple entries when I swear the tuples should be unique.  I can see it in the code_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_                var _index_sm_\n                if (OBJFileLoader.OPTIMIZE_WITH_UV) {\n                    _index _eq_ isInArrayUV(tuplePosNorm_co_ [\n                        indicePositionFromObj_co_\n                        indiceNormalFromObj_co_\n                        indiceUvsFromObj\n                    ])_sm_\n                }\n                else {\n                    _index _eq_ isInArray(tuplePosNorm_co_ [\n                        indicePositionFromObj_co_\n                        indiceNormalFromObj\n                    ])_sm_\n                }\n                //If it not exists\n                if (_index _eq__eq_ -1) {\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tbut when I output to console I can see repeated entries.  I_t_m trying to edit the position data so if I can at least figure out what conditions make the entries repeat_co_ then I can pull it off\n_lt_/p_gt_\n\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_06/babylon_obj_problem.jpg.cd98b433a103173fd9d0b2785897a024.jpg_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_18825_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_06/babylon_obj_problem.jpg.cd98b433a103173fd9d0b2785897a024.jpg_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_babylon_obj_problem.jpg_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2018-06-21T06:10:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI see what_t_s going on.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis function here_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_            var isInArrayUV _eq_ (arr_dd_ Array&lt_sm_{ normals_dd_ Array&lt_sm_number&gt_sm__sm_ idx_dd_ Array&lt_sm_number&gt_sm__sm_ uv_dd_ Array&lt_sm_number&gt_sm_ }&gt_sm__co_ obj_dd_ Array&lt_sm_number&gt_sm_) _eq_&gt_sm_ {\n                if (!arr[obj[0]]) arr[obj[0]] _eq_ { normals_dd_ []_co_ idx_dd_ []_co_ uv_dd_ [] }_sm_\n                var idx _eq_ arr[obj[0]].normals.indexOf(obj[1])_sm_\n\n                if (idx !_eq_ 1 &amp_sm_&amp_sm_ (obj[2] _eq__eq_ arr[obj[0]].uv[idx])) {  // &lt_sm_-- this comparison\n                    return arr[obj[0]].idx[idx]_sm_\n                }\n                return -1_sm_\n            }_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tA position can be associated with multiple UV points.  In my OBJ I have some pos/UV pairs_dd_ 98/99 and 98/440.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen checking is 98/440 exists it will check arr[obj[0]].uv[idx] to see if there is a mapping between 98 and 440.  The problem is_co_ uv[idx] (idx always being zero) will only return the first UV associated with the position.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo every time the parser encounters 98/440 it will incorrectly check it against 98/99_co_ think its unique then add the 98/440 entry every time.  This is why I_t_m getting duplicate entries.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2018-06-28T05:02:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSo would this be considered a bug?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-06-28T16:01:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tDefinitely! Can you suggest a fix? (or a PR _lt_span_gt__dd_))_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]