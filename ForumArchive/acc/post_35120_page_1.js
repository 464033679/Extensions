[{"Owner":"HoloLite","Date":"2018-01-16T20:43:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt seems to me that there is no direct way to create asset (light_co_ camera_co_ meshes etc) and add it into the asset container.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat I am trying to do is the create the assets programmatically (not using load scene) into an container without polluting the scene object itself.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe typical code fragment to create/add an asset into a container looks like the following_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_scene_dd_ BABYLON.Scene_sm_\nassets_dd_ BABYLON.AssetContainer_sm_\n\n...\n\nlet camera _eq_ new BABYLON.FreeCamera(... _co_ scene)_sm_\nscene.removeCamera(camera)_sm_\nassets.cameras.push(camera)_sm_\n\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tBasically it has to be done in 3 steps_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. create/add the asset into scene (all existing api to create mesh takes the scene object)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. remove asset from scene\n_lt_/p_gt_\n\n_lt_p_gt_\n\t3. add the asset to container\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is true for all other asset types like light_co_ meshes_co_ animations etc.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs there an easier to do this (like doing in 1 step?) Please advise. Thanks\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"HoloLite","Date":"2018-01-16T21:00:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI wonder if the following approach will work (not ideal_co_ but a bit more manageable)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. Create all the needed assets (meshes_co_ cameras_co_ lights) as usual into the scene object.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. Enumerate all asset array properties of the scene object like scene.camera_co_ scene.lights_co_ scene.animations_co_ etc) and manually copy them into the corresponding array properties in the asset container object. (Question_dd_ does the asset container has all of the asset array properties of the scene object ? if not this approach won_t_t work)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t3. call assetContainer.removeAllFromScene()\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI guess_co_ this will cleanly _t_move_t_ all the assets from the scene object to the container object.  Any comments ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"trevordev","Date":"2018-01-16T23:37:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYea_co_ your approach seems reasonable. Currently all manual asset creation adds the asset to the scene. Previously there was some discussion about possibly making AssetContainer and scene inherit from a same base interface so either could be passed into an asset creating method but this was not implemented due to the somewhat unnatural complexity of the change.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Question_dd_ does the asset container has all of the asset array properties of the scene object_lt_/strong_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYes_co_ it should contain all the asset arrays the scene has.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor now I would recommend manually adding your assets to the AssetContainer and then calling removeAllFromScene like you mentioned. See this _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#5NFRVE%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#5NFRVE#1_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2018-01-17T13:06:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/29361-trevordev/?do_eq_hovercard_qt_ data-mentionid_eq__qt_29361_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/29361-trevordev/_qt_ rel_eq__qt__qt__gt_@trevordev_lt_/a_gt__co_ welcome to the forum_co_ and thanks for being a forum helper. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s pretty cool when a user_t_s first post... is helping another.  (Wingnut shakes your hand vigorously.)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"HoloLite","Date":"2018-01-17T19:23:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/29361-trevordev/?do_eq_hovercard_qt_ data-mentionid_eq__qt_29361_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/29361-trevordev/_qt_ rel_eq__qt__qt__gt_@trevordev_lt_/a_gt_ thanks for the input.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn that case_co_ then I think we should add into 3.2 release the helper method called something like AssetContainer.moveAllFromScene which does the steps I described. I think many users will benefit from this.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn retrospect_co_ perhaps the better approach is not to expose the AssetContainer at all. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe root issue is that the current BABYLON.Scene and its vr helper object can only be used as singleton (even if you intend to create multiple scenes)_co_ otherwise you will see rendering problem inside the VR headset.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_float_dd_none_sm_background-color_dd_transparent_sm_color_dd_rgb(53_co_60_co_65)_sm_font-family_dd_Roboto_co_ _t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_400_sm_letter-spacing_dd_normal_sm_text-align_dd_left_sm_text-decoration_dd_none_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_A high-level abstraction of Scene concept that internally manages its assets as user switches scenes would be a cleaner approach_co_ imo._lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_float_dd_none_sm_background-color_dd_transparent_sm_color_dd_rgb(53_co_60_co_65)_sm_font-family_dd_Roboto_co_ _t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_400_sm_letter-spacing_dd_normal_sm_text-align_dd_left_sm_text-decoration_dd_none_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_Another approach is not to make vr helper associated with scene but rather make it explicitly global entity. _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"trevordev","Date":"2018-01-18T00:08:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAdding an AssetContainer.moveAllFromScene method sounds possible. Could you expand more on your exact use case? After you create your assets in code_co_ how are you planning to use them? Is your code already written with multiple scenes?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBeyond the vrHelper issue you mentioned_co_ the assetContainer can also be used to load assets to be used at a later time without being automatically added to the scene.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt does seem like the AssetContainer will result in code that has been written with multiple scenes to need to be rewritten to use a single scene and multiple AssetContainers which isn_t_t very obvious. Having the helper method you suggested could be good for alleviating that pain.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSwitching assets between scenes is rather complex due to how tightly coupled each asset is to the scene when created. Adding support for that would likely be good but the change would be large and difficult to avoid breakage. Having special cases for certain objects like the vrHelper to move between scenes automatically might also cause confusion to users not expecting that behavior.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you create a github issue for the moveAllFromScene I can take a look at implementing it when free.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"HoloLite","Date":"2018-01-18T03:56:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMy codes are all in typescript as I know little javascript. Unfortunately the playground takes only javascript.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat said though_co_ _lt_span_gt_@_lt_/span_gt_brianzinn has wrote nice sample code_dd_ _lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#JA1ND3%2348_qt_ rel_eq__qt_external nofollow_qt_ style_eq__qt_background-color_dd_transparent_sm_color_dd_rgb(69_co_136_co_197)_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_400_sm_letter-spacing_dd_normal_sm_text-align_dd_left_sm_text-decoration_dd_underline_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_http_dd_//playground.babylonjs.com/#JA1ND3#48_lt_/a_gt__lt_span style_eq__qt_float_dd_none_sm_background-color_dd_transparent_sm_color_dd_rgb(53_co_60_co_65)_sm_font-family_dd_Roboto_co_ _t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-variant_dd_normal_sm_font-weight_dd_400_sm_letter-spacing_dd_normal_sm_text-align_dd_left_sm_text-decoration_dd_none_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm__qt__gt_ _lt_/span_gt_ that illustrates similar situation.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNotice how he created only a single object of scene and vr object and iterates each scene container and loads them into the scene object.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you are using VR headset_co_ this is the only way to switch scenes afaik. Doing otherwise will result in the scene rendered incorrectly in the vr headset.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat I am trying to do is similar to this except that I don_t_t use screen loader_co_ I programmatically create the assets.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI agreed with your statements that switching scene is a complex op_co_ that_t_s why I_t_d rather avoid using AssetContainer_co_ but currently this is the only options I can think of.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo far the approach I describe above (to juggle the assets using the containers) seem to work. But there is this weird thing about how the .cameras properties not showing up in the scene - I am still trying to figure out the root cause.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"trevordev","Date":"2018-01-18T18:26:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI see_co_ glad you have it working with your solution. Did you end up writing a method similar to the moveAllFromScene you described above or is it more manual juggling?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"HoloLite","Date":"2018-01-18T20:39:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI had to do both. Implementation of moveAllFromScene is the following. I prefer that this is implemented by the framework in the near future so that any internal changes in the scene object like addition or removal of assets properties will be taken care of as well.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_import _t_babylonjs_t_\n\nexport class AssetContainerEx extends BABYLON.AssetContainer {\n    constructor(scene_dd_ BABYLON.Scene) {\n        super(scene)_sm_\n    }\n\n    moveAllFromScene()_dd_ void {\n        Array.prototype.push.apply(this.actionManagers_co_ this.scene._actionManagers)_sm_\n        Array.prototype.push.apply(this.animations_co_ this.scene.animations)_sm_\n        Array.prototype.push.apply(this.cameras_co_ this.scene.cameras)_sm_\n        Array.prototype.push.apply(this.geometries_co_ this.scene.getGeometries())_sm_\n        Array.prototype.push.apply(this.lensFlareSystems_co_ this.scene.lensFlareSystems)_sm_\n        Array.prototype.push.apply(this.lights_co_ this.scene.lights)_sm_\n        Array.prototype.push.apply(this.materials_co_ this.scene.materials)_sm_\n        Array.prototype.push.apply(this.meshes_co_ this.scene.meshes)_sm_\n        Array.prototype.push.apply(this.morphTargetManagers_co_ this.scene.morphTargetManagers)_sm_\n        Array.prototype.push.apply(this.multiMaterials_co_ this.scene.multiMaterials)_sm_\n        Array.prototype.push.apply(this.skeletons_co_ this.scene.skeletons)_sm_\n        Array.prototype.push.apply(this.particleSystems_co_ this.scene.particleSystems)_sm_\n        Array.prototype.push.apply(this.sounds_co_ this.scene.mainSoundTrack.soundCollection)_sm_\n        Array.prototype.push.apply(this.transformNodes_co_ this.scene.transformNodes)_sm_\n\n        this.removeAllFromScene()_sm_\n    }\n}\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"HoloLite","Date":"2018-01-19T20:15:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/29361-trevordev/?do_eq_hovercard_qt_ data-mentionid_eq__qt_29361_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/29361-trevordev/_qt_ rel_eq__qt__qt__gt_@trevordev_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI figured out the issues with the missing camera stuff. Basically the call to scene.createDefaultVRExperience() will create several cameras (5 of them now) which are used for VR purpose.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou do want to keep these cameras in the scene object as you shuffle assets in and out from the containers to the scene object. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat said I have to modify the moveAllFromScene to take optional keepCameras for this very purpose.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_import _t_babylonjs_t_\n\nexport class AssetContainerEx extends BABYLON.AssetContainer {\n\n    constructor(scene_dd_ BABYLON.Scene) {\n        super(scene)_sm_\n    }\n\n    moveAllFromScene(keepCameras?_dd_ BABYLON.Camera[])_dd_ void {\n        Array.prototype.push.apply(this.actionManagers_co_ this.scene._actionManagers)_sm_\n        Array.prototype.push.apply(this.animations_co_ this.scene.animations)_sm_\n\n        if (keepCameras _eq__eq__eq_ undefined) {\n            keepCameras _eq_ []_sm_\n        }\n        for (let camera of this.scene.cameras) {\n            let moveCamera _eq_ true_sm_\n            for (let keepCamera of keepCameras) {\n                if (camera _eq__eq__eq_ keepCamera) {\n                    moveCamera _eq_ false_sm_\n                    break_sm_\n                }\n            }\n\n            if (moveCamera) {\n                this.cameras.push(camera)_sm_\n            }\n        }\n\n        Array.prototype.push.apply(this.geometries_co_ this.scene.getGeometries())_sm_\n        Array.prototype.push.apply(this.lensFlareSystems_co_ this.scene.lensFlareSystems)_sm_\n        Array.prototype.push.apply(this.lights_co_ this.scene.lights)_sm_\n        Array.prototype.push.apply(this.materials_co_ this.scene.materials)_sm_\n        Array.prototype.push.apply(this.meshes_co_ this.scene.meshes)_sm_\n        Array.prototype.push.apply(this.morphTargetManagers_co_ this.scene.morphTargetManagers)_sm_\n        Array.prototype.push.apply(this.multiMaterials_co_ this.scene.multiMaterials)_sm_\n        Array.prototype.push.apply(this.skeletons_co_ this.scene.skeletons)_sm_\n        Array.prototype.push.apply(this.particleSystems_co_ this.scene.particleSystems)_sm_\n        Array.prototype.push.apply(this.sounds_co_ this.scene.mainSoundTrack.soundCollection)_sm_\n        Array.prototype.push.apply(this.transformNodes_co_ this.scene.transformNodes)_sm_\n\n        this.removeAllFromScene()_sm_\n    }\n}\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"trevordev","Date":"2018-01-19T21:46:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks! I created a PR with your code so hopefully it can get into version 3.2 _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ See_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/pull/3590_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/pull/3590_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"HoloLite","Date":"2018-01-19T22:04:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI found more states that need to be saved. These are essentially artifacts of the VR helper during teleportation/interactions.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow my app can switch scenes and does the teleportation and interaction within each scene correctly as I switch scenes.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe more complete codes look like the following_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_import _t_babylonjs_t_\n\nexport class KeepAssets {\n    cameras_dd_ BABYLON.Camera[] _eq_ []_sm_\n    meshes_dd_ BABYLON.Mesh[] _eq_ []_sm_\n    geometries_dd_ BABYLON.Geometry[] _eq_ []_sm_\n    materials_dd_ BABYLON.Material[] _eq_ []_sm_\n}\n\nexport class AssetContainerEx extends BABYLON.AssetContainer {\n    private moveAssets&lt_sm_T&gt_sm_(sourceAssets_dd_ T[]_co_ targetAssets_dd_ T[]_co_ keepAssets_dd_ T[])_dd_ void {\n        for (let asset of sourceAssets) {\n            let move _eq_ true_sm_\n            for (let keepAsset of keepAssets) {\n                if (asset _eq__eq__eq_ keepAsset) {\n                    move _eq_ false_sm_\n                    break_sm_\n                }\n            }\n\n            if (move) {\n                targetAssets.push(asset)_sm_\n            }\n        }\n    }\n\n    constructor(scene_dd_ BABYLON.Scene) {\n        super(scene)_sm_\n    }\n\n    moveAllFromScene(keepAssets?_dd_ KeepAssets)_dd_ void {\n\n        if (keepAssets _eq__eq__eq_ undefined) {\n            keepAssets _eq_ new KeepAssets()_sm_\n        }\n\n        this.moveAssets(this.scene.cameras_co_ this.cameras_co_ keepAssets.cameras)_sm_\n        this.moveAssets(this.scene.meshes_co_ this.meshes_co_ keepAssets.meshes)_sm_\n        this.moveAssets(this.scene.getGeometries()_co_ this.geometries_co_ keepAssets.geometries)_sm_\n        this.moveAssets(this.scene.materials_co_ this.materials_co_ keepAssets.materials)_sm_\n\n        Array.prototype.push.apply(this.actionManagers_co_ this.scene._actionManagers)_sm_\n        Array.prototype.push.apply(this.animations_co_ this.scene.animations)_sm_\n        Array.prototype.push.apply(this.lensFlareSystems_co_ this.scene.lensFlareSystems)_sm_\n        Array.prototype.push.apply(this.lights_co_ this.scene.lights)_sm_\n        Array.prototype.push.apply(this.morphTargetManagers_co_ this.scene.morphTargetManagers)_sm_\n        Array.prototype.push.apply(this.multiMaterials_co_ this.scene.multiMaterials)_sm_\n        Array.prototype.push.apply(this.skeletons_co_ this.scene.skeletons)_sm_\n        Array.prototype.push.apply(this.particleSystems_co_ this.scene.particleSystems)_sm_\n        Array.prototype.push.apply(this.sounds_co_ this.scene.mainSoundTrack.soundCollection)_sm_\n        Array.prototype.push.apply(this.transformNodes_co_ this.scene.transformNodes)_sm_\n\n        this.removeAllFromScene()_sm_\n    }\n}\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"trevordev","Date":"2018-01-19T22:07:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSweet_co_ I can add that to the PR as well. Thank you!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"HoloLite","Date":"2018-01-19T23:16:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHere is a video capture of the scene switching.\n_lt_/p_gt_\n\n_lt_div class_eq__qt_ipsEmbeddedOther_qt__gt_\n\t_lt_iframe allowfullscreen_eq__qt__qt_ data-controller_eq__qt_core.front.core.autosizeiframe_qt_ data-embedid_eq__qt_embed6569617212_qt_ scrolling_eq__qt_no_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/index.php?app_eq_core&amp_sm_module_eq_system&amp_sm_controller_eq_embed&amp_sm_url_eq_https_dd_//twitter.com/HoloLite/status/954492196148793344_qt_ style_eq__qt_height_dd_469px_sm__qt__gt__lt_/iframe_gt_\n_lt_/div_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-01-19T23:20:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCool music _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt_1_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt__gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2018-01-20T03:48:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_201801_qt_ data-ipsquote-contentid_eq__qt_35120_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1516247763_qt_ data-ipsquote-userid_eq__qt_28694_qt_ data-ipsquote-username_eq__qt_HoloLite_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 1/17/2018 at 7_dd_56 PM_co_ HoloLite said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThat said though_co_ _lt_span_gt_@_lt_/span_gt_brianzinn has wrote nice sample code\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI can_t_t take any credit for that.  You were asking for examples and I found that on the github issue comment _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"HoloLite","Date":"2018-01-29T18:13:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/29361-trevordev/?do_eq_hovercard_qt_ data-mentionid_eq__qt_29361_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/29361-trevordev/_qt_ rel_eq__qt__qt__gt_@trevordev_lt_/a_gt_ I just synced to alpha6 and see the changes you made. Thank you!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have a suggestion for moveAllFromScene implementation_dd_ make the implementation more general to accommodate future additional keep assets.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat said_co_ the codes would look like the following_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_moveAllFromScene(keepAssets?_dd_ KeepAssets)_dd_ void {\n\n        if (keepAssets _eq__eq__eq_ undefined) {\n            keepAssets _eq_ new KeepAssets()_sm_\n        }\n\n        this.moveAssets(this.scene.cameras_co_ this.cameras_co_ keepAssets.cameras)_sm_\n        this.moveAssets(this.scene.meshes_co_ this.meshes_co_ keepAssets.meshes)_sm_\n        this.moveAssets(this.scene.getGeometries()_co_ this.geometries_co_ keepAssets.geometries)_sm_\n        this.moveAssets(this.scene.materials_co_ this.materials_co_ keepAssets.materials)_sm_\n        this.moveAssets(this.scene._actionManagers_co_ this.actionManagers_co_ keepAssets.actionManagers)_sm_\n        this.moveAssets(this.scene.animations_co_ this.animations_co_ keepAssets.animations)_sm_\n        ... // do this for all assets\n\n\n        this.removeAllFromScene()_sm_\n    }\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI noticed you already made the KeepAssets class handling all assets which is good.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis change will keep the logic intact as the caller is responsible to filling the correct keep assets prior to calling and the default assets in KeepAssets are just empty arrays.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"trevordev","Date":"2018-01-29T21:55:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYup this was missed. Added it in PR here _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/pull/3649/files_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/pull/3649/files_lt_/a_gt_. Thanks.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]