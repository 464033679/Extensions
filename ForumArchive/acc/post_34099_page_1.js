[{"Owner":"tomer","Date":"2017-11-19T10:15:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m looking for a way to change a loaded mesh texture after it been loaded_co_ without fetching new obj file.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tfor example -  I have the same chair in different textures_co_ when the user does something I want to change the chair_t_s texture.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI can create a different .mtl file for each variant_co_ but is it possible to load just the .mtl file after the obj already been loaded?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTomer.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-11-20T11:28:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Tomer_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\twouldn_t_t it be simpler if you created a map of textures and load them using code?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHaving said that - you can technically use the MTL parser class (_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/loaders/src/OBJ/babylon.objFileLoader.ts#L8_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/loaders/src/OBJ/babylon.objFileLoader.ts#L8_lt_/a_gt_) to parse a downloaded MTL file (which you will need to download yourself). This will provide you with a list of materials that you will need to associated with your selected mesh.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"tomer","Date":"2017-11-20T16:41:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Raanan _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tThat_t_s exactly what I was looking for_co_ thanks.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway_co_ not sure I totally understand what you mean by _qt_map of textures_qt_? \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-11-21T10:30:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI meant a sort of key-value structure in which you define a lite of URLs for each object_co_ and load those textures when needed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf the MTL parser works for your usecase_co_ it should be more than enough _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"tomer","Date":"2017-11-21T16:58:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAwesome thank you very much for your help.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway_co_ I thought maybe it will be better for me to use .babylon format instead of .obj_co_ from few simple tests I did I saw a significant difference in rendering times in favor of .babylon.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat_t_s might be a different question_co_ but...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. Do you have any insights regarding .babylon vs .obj? especially in terms of performance and file size.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. I have 2 identical .babylon files besides the materials_co_ is it possible to change loaded mesh materials somehow?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI mean .babylon doesn_t_t have .mtl file so I can_t_t download just the materials.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMaybe I can create a different UV map for each variant?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBTW_co_ the problem with creating a map of materials myself is that I have lots of 3d models and I don_t_t want to programmatically create such map for each variant_co_ maybe I can write a script that can extract the materials out of the .babylon file.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks again!  much appreciated\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-11-23T11:36:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Tomer_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tthe .babylon file format is JSON-based text file_co_ that contains information about the entire scene. It is much more detailed than an OBJ file. OBJ contains only vertex data and materials definitions_co_ but relatively limits. You can_t_t define special materials (like PBR for example)_co_ and you are restricted to the OBJ limitations.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn terms of performance - there shouldn_t_t be any different between the two. The vertex data should be the same on both files. Both files are text-based_co_ so both are compressable. Whereas OBJ is line-based (\\n is the delimiter) and cannot really be _qt_minified_qt__co_ a JSON can be minified and can_co_ eventually_co_ be a bit smaller. The .babylon might be a bit larger in terms of file size (I would say 10% more_co_ but this is just a guess) because of the scene data that is always exported with the meshes. This information is optional if you use ImportMesh_co_ and is only being used if you use the Append or Load functions of the SceneLoader.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWith a .babylon file you can define more materials that you actually need. so_co_ the .babylon file of a single mesh CAN contain all matrials that can somehow be connected to this mesh. When importing the .babylon files_co_ those materials will be loaded to the babylon scene_co_ and can be found using the scene.getMaterialById function. This way you don_t_t need to load another mesh just to change materials.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"tomer","Date":"2017-11-23T13:02:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThanks again_co_ that_t_s a great idea.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]