[{"Owner":"jdurrant","Date":"2015-03-11T17:35:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I’ve been creating a simple scene to familiarize myself with Babylon.js. It includes tree models with palms that are modified planes. To keep the polys low_co_ I use a transparent PNG texture to get leaf-level detail. In the blender material panel_co_ I click the “Transparency” checkbox_co_ choose “Z Transparency”_co_ and turn the alpha value down to 0.0. In the blender texture panel_co_ I also click on the “Alpha” checkbox (in the “Influence” subpanel)_co_ and turn that value up to 1.0. I then export to a *.babylon file and load it within babylon.js. The individual models look good in both blender and babylon.js. However_co_ in Babylon.js the draw-order is affected. Trees that are farther away are sometimes drawn last_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_03_2015/post-13453-0-74004600-1426095138.jpg_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_03_2015/post-13453-0-74004600-1426095138_thumb.jpg_qt_ data-fileid_eq__qt_3860_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_post-13453-0-74004600-1426095138_thumb.j_qt__gt__lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The issue appears to resolve when I deactivate all alpha and transparent options in blender_co_ while still using the transparent PNG texture. In this case_co_ the trees look fine in Babylon.js_co_ but they don’t look right in blender_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_03_2015/post-13453-0-25873700-1426095290.jpg_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_03_2015/post-13453-0-25873700-1426095290_thumb.jpg_qt_ data-fileid_eq__qt_3861_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_post-13453-0-25873700-1426095290_thumb.j_qt__gt__lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Don’t know if this is a bug or not_co_ but thought I’d let you know just in case. I got the effect I wanted in the end_co_ but the solution wasn’t obvious (at least to me). Thanks for a great engine!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-03-12T05:10:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello and welcome_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_to get the right thing here_co_ you have to export your PNG in the diffuse channel and enable alpha. In this case Babylon.js will understand that you want alpha testing and not alpha blending _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I think that our Blender experts will be able to help you more here _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]