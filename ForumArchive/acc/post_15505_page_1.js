[{"Owner":"adam","Date":"2015-07-01T12:12:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m trying to get the initial euler angles of the bones right when my model is loaded._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I tried this_dd__lt_/p_gt__lt_p_gt_bone.getLocalMatrix().decompose(vec1_co_ quat_co_ vec2)_sm__lt_br_gt_quat.toEulerAnglesToRef(vec3)_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_but the values I_t_m getting in vec3 are not correct._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The angles I want are relative to the parent bone._lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-07-01T12:47:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_have you try a Vector4() and not Vector3 for EuleurAngles_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2015-07-01T13:19:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I didn_t_t.  _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_toEulerAnglesToRef takes a Vector3_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_public toEulerAnglesToRef(result_dd_ Vector3)_dd_ Quaternion {            //result is an EulerAngles in the in the z-x-z convention            var qx _eq_ this.x_sm_            var qy _eq_ this.y_sm_            var qz _eq_ this.z_sm_            var qw _eq_ this.w_sm_            var qxy _eq_ qx * qy_sm_            var qxz _eq_ qx * qz_sm_            var qwy _eq_ qw * qy_sm_            var qwz _eq_ qw * qz_sm_            var qwx _eq_ qw * qx_sm_            var qyz _eq_ qy * qz_sm_            var sqx _eq_ qx * qx_sm_            var sqy _eq_ qy * qy_sm_            var determinant _eq_ sqx + sqy_sm_            if (determinant !_eq__eq_ 0.000 &amp_sm_&amp_sm_ determinant !_eq__eq_ 1.000) {                result.x _eq_ Math.atan2(qxz + qwy_co_ qwx - qyz)_sm_                result.y _eq_ Math.acos(1 - 2 * determinant)_sm_                result.z _eq_ Math.atan2(qxz - qwy_co_ qwx + qyz)_sm_            } else {                if (determinant _eq__eq__eq_ 0.0) {                    result.x _eq_ 0.0_sm_                    result.y _eq_ 0.0_sm_                    result.z _eq_ Math.atan2(qxy - qwz_co_ 0.5 - sqy - qz * qz)_sm_ //actually_co_ degeneracy gives us choice with x+z_eq_Math.atan2(qxy-qwz_co_0.5-sqy-qz*qz)                } else //determinant _eq__eq_ 1.000                {                    result.x _eq_ Math.atan2(qxy - qwz_co_ 0.5 - sqy - qz * qz)_sm_ //actually_co_ degeneracy gives us choice with x-z_eq_Math.atan2(qxy-qwz_co_0.5-sqy-qz*qz)                    result.y _eq_ Math.PI_sm_                    result.z _eq_ 0.0_sm_                }            }            return this_sm_        }_lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2015-07-01T17:24:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I just notice this comment in the toEulerAnglesToRef function_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(136_co_0_co_0)_sm__qt__gt_//result is an EulerAngles in the in the z-x-z convention _lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m thinking I_t_m going have to do some research on how to get an x-y-z euler from a matrix.  Heck_co_ I_t_ll probably just end up hard coded the angles into my code._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2015-07-02T06:54:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m not very familiar with all this_co_ but it seems the conversion from z-x-z to x-y-z convention is pretty complicated._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Basically you_t_re looking to have the yaw/pitch/roll angles of your bone_co_ right? If that_t_s what you specifically need_co_ then I guess BabylonJS doesn_t_t have the right function for you. Although transforming a quaternion to x-y-z euler angles should be as feasible as what_t_s currently implemented._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_At any rate_co_ please keep us informed on your progress_dd_ rotation issues are common and sometimes complicated_co_ especially with quaternions involved._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2015-07-03T16:40:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I just needed the z angle of the bones.  This is what ended up working for me_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var ang _eq_ Math.atan2(boneLocalMatrix.m[4]_co_ boneLocalMatrix.m[5])_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]