[{"Owner":"JCPalmer","Date":"2017-03-02T18:13:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI am in the process of building a wrapper class around Mesh sub-classes (actually QI.Mesh sub-classes).  This wrapper class_co_ probably called QI.Character_co_ will surround a generated inline geometry Mesh in a JS file.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy objective is to be able to reuse characters or busts in different demo scenes.  Once a character is picked (possibly at random)_co_ I can_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// DOM_dd_ Create the script element\nvar jsElem _eq_ document.createElement(_qt_script_qt_)_sm_\n            \n// set the type attribute\njsElem.type _eq_ _qt_application/javascript_qt__sm_\n            \n// make the script element load file\njsElem.src _eq_ jsFileStr_sm_\n\n// let the main thread know it_t_s now on the path\njsElem.onLoad _eq_ callback_sm_\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThis code CAN be called in a worker thread_co_ but anyone know if then the code could be called in the UI thread?  If so_co_ then for a game_co_ once your initial scene was up_co_ you could trigger anything you needed later in a bunch of worker threads.  There is still instancing time of course_co_ but this will remove some time.  Assuming this works_co_ I could also think about other assets for a character as well like textures &amp_sm_ audio files.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2017-03-02T18:26:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou shouldn_t_t have to use a worker for this. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI experimented with something similar and didn_t_t see any performance gains_dd_\n_lt_/p_gt_\n_lt_iframe data-embedcontent_eq__qt__qt_ frameborder_eq__qt_0_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/topic/25361-multi-threading-babylonsceneloaderimportmesh/?do_eq_embed_qt__gt__lt_/iframe_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-03-02T20:20:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tShould have known this was happening in another thread already when there was an _t_.onLoad_t_.  I am a dumbass.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYeah_co_ I saw that thread a while back.  My interest_co_ in addition simplifying character re-use across applications_co_ is bringing up an initial scene placing as little as possible in the header section.  THEN after the initial scene is running with a render loop_co_ get things that could pop up later_co_ quietly without affecting the UI thread.  This differs from the BABYLON.SceneLoader calls in that when I get JS files_co_ I am not actually running anything.  Just making it instantly available in the future.  Sceneloader is a get &amp_sm_ run.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf the JS file is available_co_ I can instance geometry usually in 0.01 secs.  End to end time including shapekeys &amp_sm_ shader seems around 0.3 secs when reading local file texture files.  If the data for the textures could be gotten in a worker as well_co_ I could probably drop that.  Obviously_co_ getting textures over WWW is much longer.  Again_co_ I would not actually run a texture constructor till needed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tQI is very spontaneous character geared.  Once a mesh is ready_co_ you can specify one of 6 ways to arrive (2 new ways are teleport &amp_sm_ poof using shaderbuilder).  The Q in QI stands for Queue.  You can queue what to do right after arrival in advance_co_ and it seemlessly transitions.  Means some menacing character can teleport in the middle of the game_co_ and try to kill you.  There is going to be a slight pause_co_ but considering a teleport is 1.5 secs_co_ 0.3 secs just gives them a heads up_co_ so it almost a _qt_feature_qt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf a scene came up running a scene with just some kind of UI with buttons_co_ that would be real fast.  Getting stuff for actual _qt_playing_qt_ could start immediately_co_ while they are reading / setting stuff.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-03-03T16:02:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAlong with the rename of the topic.  There is no need to resort to worker threads for getting texture / audio assets either. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe concept of _qt_Separating Getting from Loading_qt__co_ A.K.A _qt_Read Ahead_qt__co_ is actually very complementary to the async shader compilation discussion getting much attention right now at Khronos.  The notion of serializing / de-serializing entire scenes as a single unit has an upper bound.  I am not to the point of allowing .blend files with multiple layers to generate multiple source files_co_ but I may.  Sort of like Google maps_co_ where I am pretty sure adjacent areas are being downloaded ahead of you actually moving up / down / left / right.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-03-06T16:18:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWell_co_ from a character reuse standpoint_co_ I may have encountered a development issue. This is the directory structure I have modified for my local version of my Github Blog repo_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_-&gt_sm_ characters\n    -&gt_sm_ images\n    -&gt_sm_ javascript\n...\n-&gt_sm_ scenes\n    -&gt_sm_ QueuedInterpolation\n        -&gt_sm_ QA scene\n            index.html_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI am using Firefox for development to be able to read texture filesusing _lt_em_gt__lt_strong_gt_file_dd_//_lt_/strong_gt__lt_/em_gt_... .  I can dynamically load javascript files using a _qt_../../../characters/javascript_qt_ url.  _qt_../../../characters/images_qt_ for the textures fail.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI know I am not making a typo mistake.  I modified another scene_co_ moving its files.  The url worked from the browser built-into Eclipse_co_ but it failed from Firefox.  I can temporary measures during development_co_ but does anyone a reason this would not work using an http_dd_// url?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-03-09T20:16:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tFYI_co_ I just found the MS Edge not only allows File_dd_// for images_co_ but will allow _qt_../../../_qt_ paths for images.  Do not know how long this has been here.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-03-10T00:29:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tEdge...\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]