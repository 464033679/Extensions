[{"Owner":"Johgold","Date":"2014-12-03T14:16:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_co_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m using Blender 2.7.2 with babylon js_co_ I_t_m trying to export a musicbox (coming from a .obj) in .babylon but when I drop it in the babylon sandbox the lights don_t_t work_co_ they_t_re not the same as in blender._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If anybody know a solution that be great_co_ you can a capture of what I get in the sand box below. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thank you _lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2014/post-11941-0-61730100-1417616130.png_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2014/post-11941-0-61730100-1417616130_thumb.png_qt_ data-fileid_eq__qt_3187_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_post-11941-0-61730100-1417616130_thumb.p_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-12-04T02:56:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_What kind of light are you using? Can you share your blender scene?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Johgold","Date":"2014-12-04T10:11:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m using an _qt_hemi_qt_ light_co_ I can_t_t share my blender scene because I tried to make a .zip with the scene and texture but the file is to heavy to be upload _dd_/_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2014-12-04T13:57:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_DK_co_ that is a bug that I discovered.  Hemi lights are pointing in the wrong direction due to an incorrect sign of last dimension_co_ z I thing. I have had no luck figuring it out.  The original exporter  had_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_        else_dd_            matrix_world _eq_ object.matrix_world.copy()            matrix_world.translation _eq_ mathutils.Vector((0_co_ 0_co_ 0))            direction _eq_ mathutils.Vector((0_co_ 0_co_ -1)) * matrix_world            Export_babylon.write_vector(file_handler_co_ _qt_direction_qt__co_ -direction)_lt_/pre_gt__lt_p_gt_The multi-pass is_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_        else_dd_            matrix_world _eq_ light.matrix_world.copy()            matrix_world.translation _eq_ mathutils.Vector((0_co_ 0_co_ 0))            self.direction _eq_ -(mathutils.Vector((0_co_ 0_co_ -1)) * matrix_world)_lt_/pre_gt__lt_p_gt_Do you know why the sign ends up wrong?  I have tried a number of ways_co_ but no joy._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Johgold_co_  you can manually change the sign in your .babylon file as a temp fix._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-12-04T19:11:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok let me fixed the exporter_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-12-04T19:15:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Can you try with the latest version I updated??_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2014-12-04T19:50:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_That did it.  That stray _t_-_t_ in _lt_span style_eq__qt_font-family_dd__t_courier new_t__co_ courier_co_ monospace_sm__qt__gt__lt_span_gt_Export_babylon_lt_/span_gt__lt_span_gt_._lt_/span_gt__lt_span_gt_write_vector_lt_/span_gt__lt_span_gt_(_lt_/span_gt__lt_span_gt_file_handler_lt_/span_gt__lt_span_gt__co__lt_/span_gt__lt_span_gt_ _lt_/span_gt__lt_span_gt__qt_direction_qt__lt_/span_gt__lt_span_gt__co__lt_/span_gt__lt_span_gt_ _lt_/span_gt__lt_strong_gt__lt_span_gt_-_lt_/span_gt__lt_/strong_gt__lt_span_gt_direction_lt_/span_gt__lt_/span_gt__lt_span_gt_)  must not have been doing anything_co_ and when I re-factored it_co_ implemented in a way where it did._lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I just tested in TOB.  There are now un-needed ().  I was in the process of diffing the 2 today_co_ in Netbeans.  I have changes for you.  Either code you are not using_co_ but did not remove_co_ comments_co_ or improved log entries.  Will put in pull request &amp_sm_ take care of parens + update version #._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Jeff_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-12-04T20:00:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_thanks!!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2014-12-04T21:11:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Have made changes locally_co_ and just going to turn this into a reconciliation thread.  Set version to 1.3_co_ because I think it was at 1.2 before.  Currently pointing to 1.1_co_ which was TOB_t_s at time of copy._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You did take out the option to have an animation start at other than frame 0.  Gryff specifically asked for that.  Cannot remember the exact thread_co_ but it is out there somewhere. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here are a series of diff snaps.  io_export_babylon.py is on the left_co_ &amp_sm_ io_tower_of_babel.py on the right. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The FCurveAnimatable constructor comments out &amp_sm_ forces auto animate to 0  - end (You did not delete get_first_frame() &amp_sm_ get_last_frame).  Yes_co_ I added it being conditional on my side._lt_/p_gt__lt_p_gt__lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2014/post-8492-0-12715800-1417726841.png_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2014/post-8492-0-12715800-1417726841_thumb.png_qt_ data-fileid_eq__qt_3197_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_post-8492-0-12715800-1417726841_thumb.pn_qt__gt__lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Later in VectorAnimation constructor_co_ you build up the frames the old way._lt_/p_gt__lt_p_gt__lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2014/post-8492-0-19124300-1417727093.png_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2014/post-8492-0-19124300-1417727093_thumb.png_qt_ data-fileid_eq__qt_3198_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_post-8492-0-19124300-1417727093_thumb.pn_qt__gt__lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Finally_co_ when TOB did both .babylon &amp_sm_ .js / .ts_co_ I was storing skeleton indices 2 different ways.  I added comments to that effect.  Wondering if each side should only do the version they write out_co_ since armatures are kind of slow?_lt_/p_gt__lt_p_gt__lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2014/post-8492-0-24759500-1417727308.png_qt_ rel_eq__qt_external nofollow_qt__gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_12_2014/post-8492-0-24759500-1417727308_thumb.png_qt_ data-fileid_eq__qt_3199_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_post-8492-0-24759500-1417727308_thumb.pn_qt__gt__lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-12-05T03:34:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_So_dd__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt__lt_em_gt_The FCurveAnimatable constructor comments out &amp_sm_ forces auto animate to 0  - end_lt_/em_gt__dd_ You can revert to your version here. Wrong copy/paste_lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt__lt_em_gt_Later in VectorAnimation constructor_co_ you build up the frames the old way._lt_/em_gt_ I think you can revert this one as well_lt_/span_gt__lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt__lt_em_gt_Finally_co_ when TOB did both .babylon &amp_sm_ .js / .ts_co__lt_/em_gt__dd_ COuld you jsut keep the .babylon way for _lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_io_export_babylon.py?_lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_Thank you for your appreciated help!_lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2014-12-05T18:45:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Will do sometime today._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2014-12-05T22:08:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Well_co_ all changes are done for both_co_ except that I thought I might test it.  Blend files are in extensions repository _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Extensions/tree/master/Morph/Blender/blender-test/blender-in_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Extensions/tree/master/Morph/Blender/blender-test/blender-in_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_First_co_ I used _lt_strong_gt_camera_anim.blend_lt_/strong_gt_ to test that making autoanimate switchable in TOB_co_ and that the animation reversion of official exporter back to TOB both worked.  They do._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I then used _lt_strong_gt_armature.blend_lt_/strong_gt_ to test each only builds the skeleton indices in the format which they actually write out.  That works.  Did notice that now the direction for the hemi light in this .blend has the wrong sign for the middle axis.  I did the hemi direction fix testing with _lt_strong_gt_voice_sync.blend_lt_/strong_gt__co_ which is for MORPH 1.1_co_ and not in the repository yet.  The light was very close to the ground &amp_sm_ pointed horizontally_co_ so this did not show up._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I cannot easily fix this myself_co_ because I do not really know what that code does.  DK_co_ Please look at issue with _lt_strong_gt_armature.blend_lt_/strong_gt_.  Sandbox should work to see the light problem.  The skeleton is queued to walk in html_co_ so it will just stand there._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_When we get a final verdict on how to make the sign correct_co_ make that change only and submit._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Jeff_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-12-05T22:24:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Here is what I get so far. Is it the expected result?_lt_/p_gt__lt_p_gt__lt_img src_eq__qt_http_dd_//babylonjs.com/forumpics/hemibug.jpg_qt_ alt_eq__qt_hemibug.jpg_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2014-12-05T22:48:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yes.  I do not know why_co_ but in my tests I now get the stomach in light &amp_sm_ chest dark_co_ like light coming from below now. _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt__qt_lights_qt__dd_[{_qt_name_qt__dd__qt_Hemi_qt__co__qt_id_qt__dd__qt_Hemi_qt__co__qt_type_qt__dd_3_co__qt_direction_qt__dd_[0_co_-1_co_0]_co__qt_groundColor_qt__dd_[0_co_0_co_0]_co__qt_intensity_qt__dd_1_co__qt_diffuse_qt__dd_[1_co_1_co_1]_co__qt_specular_qt__dd_[0_co_0_co_0]}]_co__lt_/pre_gt__lt_p_gt_switched to 0_co_1_co_0_co_ then I get what you get.  I am stumped.  Maybe those parens are needed.  I have to go. Will pick up tomorrow._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-12-05T23:49:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2014-12-06T16:48:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Just to make sure I have an accurate working setup to isolate the delta from working to not_co_ you are Blender 2.72b_co_ the io_export_blender.py currently in repository_co_ and the .blend from the extensions respository_co_ right?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2014-12-06T17:25:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I commit what I had &amp_sm_ put in a pull request_co_ version 1.3.0.  I could not reproduce your success with Blender 2.7.2b_co_ the same .blend_co_ and the direction line unmodified.  It could be my other changes_co_ but I doubt it._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If I cannot establish a close delta of success to failure_co_ I cannot fix this without knowing what this matrix_world_co_ the setting of it_t_s translation_co_ and multipling by a 0_co_0_co_-1 vector is supposed to be doing.  Sorry.  Recommend making a version 1.3.1 that fixes it._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Johgold","Date":"2014-12-16T10:32:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thank you for your advices_co_ it almost look like I wanted it. The Lights are working now. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Johgold_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]