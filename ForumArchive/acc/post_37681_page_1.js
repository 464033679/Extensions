[{"Owner":"Pryme8","Date":"2018-05-15T19:19:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#ZFUV4U%2338_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#ZFUV4U#38_lt_/a_gt__lt_br /_gt_\n\t_lt_br /_gt_\n\tI am trying to figure out how to get my edges on my signed distance functions to be a little less glitchy.  Anyone with any experience in this_co_ not really a BJS question but a math one.  Ive been messing with my step dampening and epsilon_co_ but cant seem to find the magic setup._lt_br /_gt_\n\t_lt_br /_gt_\n\tI was able to make it crisper with _lt_span_gt__dd__lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#ZFUV4U%2340_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#ZFUV4U#40_lt_/a_gt__lt_br /_gt_\n\t_lt_br /_gt_\n\tBut then it seems to just be to jagged in the distance.  So I am wondering if anyone has any input on how to smooth this_co_ maybe do a distance calc to the camera for that position and then increment up the Epsilon normal as it get farther from the camera?_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]