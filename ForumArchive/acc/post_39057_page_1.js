[{"Owner":"gamefan","Date":"2018-07-24T11:53:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOr is it?_lt_br /_gt_\n\t_lt_br /_gt_\n\tHi again_co_ Today I finally decided to question this error that firefox has been bugging. There is no rendering glitch or run time error. Everything runs as expected but ff spams the console with this_dd__lt_br /_gt_\n\t_lt_br /_gt_\n\t_lt_span_gt__lt_span_gt__lt_span_gt_Error_dd_ WebGL warning_dd_ drawElements_dd_ This operation requires zeroing texture data. This is slow._lt_/span_gt_ _lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_span_gt__lt_span_gt_Error_dd_ WebGL_dd_ No further warnings will be reported for this WebGL context. (already reported 32 warnings)_lt_br /_gt_\n\t_lt_br /_gt_\n\tI narrowed it down_co_ seems its related to creating reflection probes. (Or may be any render target cube texture). Of what I could amass from the internets is that this occurs when an _qt_out-of-viewport_qt_ pixel is read and rendered - _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/29792-please-help-with-webgl-errors/_qt_ rel_eq__qt__qt__gt_This question in pixi.js subforum_lt_/a_gt_ - but I couldn_t_t figure where and what method is accessing out-of-viewport pixels. If this is just a browser thing_co_ can this be safely ignored? because chrome does not log these errors._lt_/span_gt__lt_/span_gt__lt_/span_gt__lt_br /_gt_\n\t_lt_br /_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#KA93U%23243_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#KA93U#243_lt_/a_gt__lt_br /_gt_\n\t_lt_br /_gt_\n\tThanks\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-07-24T16:04:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou can safely ignore this error.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis comes from the diffuseTexture of the ground taking time to load. So the RTT cannot render because the meshes are not ready (waiting for the diffuse texture to load). Then when you run the main rendering_co_ the RTT are used as texture but need to be zero out as they don_t_t have data yet (which will be fixed as soon as the diffuseTexture is ready)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]