[{"Owner":"JohnK","Date":"2015-05-22T15:25:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Despite reading and help from jerome and RananW rotate and translate along with local and world were still getting me confused so to help be grasp what was going on I created a _t_pilot_t_  and put him in a _t_helicopter_t_  (helicopter has pilot as parent)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_As a pilot is the centre of his own universe I gave him his own axes  (ie each axis has the pilot as parent)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I then tried out a variety of sequences which you can try out _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2ECRKR%232_qt_ rel_eq__qt_external nofollow_qt__gt_here_lt_/a_gt_. (You will have to change comments around and swap LOCAL and WORLD around as needed)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have put in all the stages to show how my understanding developed and then came to a halt. At first things go as expected_co_ it is when I tried translations following rotations that confusion set in. If you want to find my questions skip towards the end._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Initially all these were created at the origin and world axes are also shown._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_x axis red_co_  y axis green_co_ z axis blue_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_img src_eq__qt_https_dd_//lh3.googleusercontent.com/-wOt8Qx_q97Y/VV8eqQ7YagI/AAAAAAAADPg/8kL7QIORaKE/s273/startH.PNG_qt_ alt_eq__qt_startH.PNG_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I flew the plane to (2_co_ 2_co_ 0) in two stages_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_img src_eq__qt_https_dd_//lh3.googleusercontent.com/-RfB4t0uOmwU/VV8eqxAFpDI/AAAAAAAADPQ/cjdqXOyEYLg/s287/starttransWX.PNG_qt_ alt_eq__qt_starttransWX.PNG_qt__gt_ pilot.translate(BABYLON.Axis.X_co_2_co_ BABYLON.Space.LOCAL)_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_img src_eq__qt_https_dd_//lh3.googleusercontent.com/-AW6Ulhx49M4/VV8etAEp3pI/AAAAAAAADPw/hJdwkTihi_U/s340/translatestartH.PNG_qt_ alt_eq__qt_translatestartH.PNG_qt__gt_  pilot.translate(BABYLON.Axis.Y_co_2_co_ BABYLON.Space.LOCAL)_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_At this point the LOCAL and WORLD axes are parallel and the first parameter of the method translate is just a vector. BABYLON.Axis.X is the unit vector (1_co_ 0_co_ 0) and BABYLON.Axis.Y is the unit vector (0_co_ 1_co_ 0) so I would expect when local and world axes are parallel and in the same direction using LOCAL or WORLD does not matter._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_As expected the translations are cumulative._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now a clockwise rotation using either world or local._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_img src_eq__qt_https_dd_//lh3.googleusercontent.com/-KH3itQonGwg/VV8eqEThsDI/AAAAAAAADPc/vlWchShJnp4/s303/rotateWZ.PNG_qt_ alt_eq__qt_rotateWZ.PNG_qt__gt_ Starting Point for sequences 1 to 4_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_pilot.rotate(BABYLON.Axis.Z_co_ -Math.PI/2_co_ BABYLON.Space.LOCAL) _lt_/p_gt__lt_p_gt_pilot.rotate(BABYLON.Axis.Z_co_ -Math.PI/2_co_ BABYLON.Space.WORLD)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_give the same result. The first parameter of the rotate method is just a vector to act as an axle for the rotation and does not allow for a centre of rotation to be specified so this must be set by Babylon.js. So in either case the pilot is still the centre of his world so is the centre of origin and the rotation is around the vector (0_co_ 0_co_ 1) parallel to the z axis.  Prior to the rotation the local and world z axis are parallel and so the result will be the same which ever one is used._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The next four sequences of movements all start from the above starting point._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_u_gt_Sequence 1 _lt_u_gt_Following Starting Point clockwise rotation of PI/2 around LOCAL _lt_/u_gt_X axis._lt_/u_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_img src_eq__qt_https_dd_//lh3.googleusercontent.com/-KQZFmFGgKxA/VV8epC_sogI/AAAAAAAADPs/5UDmtZhGHoM/s331/rotateLX.PNG_qt_ alt_eq__qt_rotateLX.PNG_qt__gt_ pilot.rotate(BABYLON.Axis.X_co_ -Math.PI/2_co_ BABYLON.Space.LOCAL)_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So in this case as expected since LOCAL is used BABYLON.Axis.X is the x axis in the pilots own local axes system and the rotation is around the vertical axis._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_u_gt_Sequence 2 _lt_u_gt_Following Starting Point clockwise rotation of PI/2 about WORLD_lt_/u_gt_ X axis._lt_/u_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_At this point the local x axis and the world x axis are no longer parallel._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_img src_eq__qt_https_dd_//lh3.googleusercontent.com/-IiicP2a6YcI/VV8ep2ZApXI/AAAAAAAADPk/GE7JAFgGK1U/s333/rotateWX.PNG_qt_ alt_eq__qt_rotateWX.PNG_qt__gt_ pilot.rotate(BABYLON.Axis.X_co_ -Math.PI/2_co_ BABYLON.Space.WORLD)_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The centre of rotation is again the pilot and since WORLD is used BABYLON.Axis.X is the world x axis and the rotation is about the vector parallel to the world x axis._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Note again that the world rotations are cumulative._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now for translations._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_u_gt_Sequence 3 _lt_u_gt_Following Starting Point _lt_/u_gt_ LOCAL translation in direction of X axis._lt_/u_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So what happens after pilot.translate(BABYLON.Axis.X_co_ 5_co_ BABYLON.Space.LOCAL)_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_img src_eq__qt_https_dd_//lh3.googleusercontent.com/-16cT_X6zH5w/VV8er9RtMJI/AAAAAAAADPA/nkdzSqeVgTA/s561/translateLX.PNG_qt_ alt_eq__qt_translateLX.PNG_qt__gt_ pilot.translate(BABYLON.Axis.X_co_ 5_co_ BABYLON.Space.LOCAL)_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_WHAT?????.  Since I am using LOCAL I would expect_co_ as it was for rotation BABYLON.Axis.X to now refer to the x axis (now vertical) of the pilot_t_s local axes system._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So what happens when I tried WORLD for the translation?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_u_gt_Sequence 4 Following Starting Point WORLD translation in direction of X axis._lt_/u_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So what happens after pilot.translate(BABYLON.Axis.X_co_ 2_co_ BABYLON.Space.WORLD)_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_img src_eq__qt_https_dd_//lh3.googleusercontent.com/-APloqVxEpWw/VV8esYoWT4I/AAAAAAAADPI/ILWzyKLgdaU/s341/translateWX.PNG_qt_ alt_eq__qt_translateWX.PNG_qt__gt_ pilot.translate(BABYLON.Axis.X_co_ 2_co_ BABYLON.Space.WORLD)_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_WHOOPS????? the BABYLON.Axis.X has now been taken in the direction of the pilot_t_s local axes system even though I have set it to WORLD._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Are my expectations confused or is something wrong?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I tried something simpler using WORLD._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Went back to creating the pilot and helicopter at (0_co_ 0_co_ 0) and translate using_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_u_gt_Sequence 5 A World translation in the X direction followed by one in the Y direction_lt_/u_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_pilot.translate(BABYLON.Axis.X_co_2_co_ BABYLON.Space.WORLD) followed by_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_pilot.translate(BABYLON.Axis.Y_co_2_co_ BABYLON.Space.WORLD)_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_the result was_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_img src_eq__qt_https_dd_//lh3.googleusercontent.com/-YUeSCYZjkN4/VV8erGwDH3I/AAAAAAAADPM/IPJuJMKT_ls/s255/starttransWXY.PNG_qt_ alt_eq__qt_starttransWXY.PNG_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The first translation has been wiped - no accumulation. This also happened using multiple translations and WORLD -only the last translation was taken._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_QUESTIONS_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_ol_gt__lt_li_gt_In the translate method have WORLD and LOCAL got exchanged or has my brain blown?_lt_/li_gt_\t_lt_li_gt_Following a sequence of translates why does only the last translation take place?_lt_/li_gt__lt_/ol_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-05-22T16:15:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Before understanding all this long article_co_ I would suggest you to have a look at _dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/page.php?p_eq_22411_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/page.php?p_eq_22411_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2015-05-22T18:36:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I have read it jerome. It was the page that got me started on trying the rotate and translate methods._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have now noticed that starting at_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span_gt__lt_img src_eq__qt_https_dd_//lh3.googleusercontent.com/-KH3itQonGwg/VV8eqEThsDI/AAAAAAAADPc/vlWchShJnp4/s303/rotateWZ.PNG_qt_ alt_eq__qt_rotateWZ.PNG_qt__gt__lt_/span_gt_ Start Position_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_either helicopter.translate(BABYLON.Axis.X_co_ 2_co_ BABYLON.Space.LOCAL) or helicopter.translate(BABYLON.Axis.X_co_ 2_co_ BABYLON.Space.WORLD)_lt_/p_gt__lt_p_gt_lead to this_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_img src_eq__qt_https_dd_//lh3.googleusercontent.com/-4bfNLhrAYLI/VV90n56cS8I/AAAAAAAADQc/j7T_ozu1ntI/s296/helicopter%252520translate.PNG_qt_ alt_eq__qt_helicopter%252520translate.PNG_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I think perhaps I can accept this as the helicopter is part of the pilot_t_s world and so for the helicopter both local and world systems are the same and are the pilots local system. Maybe this is a clue to how the pilot behaves._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Have just checked with rotate and from the Starting Point_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_either  helicopter.rotate(BABYLON.Axis.X_co_ -Math.PI/2_co_ BABYLON.Space.LOCAL) or  helicopter.rotate(BABYLON.Axis.X_co_ -Math.PI/2_co_ BABYLON.Space.WORLD) lead to_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_img src_eq__qt_https_dd_//lh3.googleusercontent.com/-fBYJZDWGbQg/VV92TmhAyYI/AAAAAAAADQ0/2PkzkX9xYh0/s300/helicopter%252520rotate.PNG_qt_ alt_eq__qt_helicopter%252520rotate.PNG_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Will have another go at getting my head around it._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2015-05-23T09:18:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Had a look at babylon.2.1-beta.debug.js and found that when space is WORLD translate uses_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_this.setAbsolutePosition(this.getAbsolutePosition().add(displacementVector))_sm__lt_/pre_gt__lt_p_gt_and then within the function setAbsolutePosition when the mesh has no parent the code called is_lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (this.parent) {                                var invertParentWorldMatrix _eq_ this.parent.getWorldMatrix().clone()_sm_                invertParentWorldMatrix.invert()_sm_                var worldPosition _eq_ new BABYLON.Vector3(absolutePositionX_co_ absolutePositionY_co_ absolutePositionZ)_sm_                this.position _eq_ BABYLON.Vector3.TransformCoordinates(worldPosition_co_ invertParentWorldMatrix)_sm_            }            else {                this.position.x _eq_ absolutePositionX_sm_     // ----------------------------                this.position.y _eq_ absolutePositionY_sm_     //  These lines called when mesh has no parent                this.position.z _eq_ absolutePositionZ_sm_     //                         }_lt_/pre_gt__lt_p_gt_Now I expected that setAbsolutePosition would do just that and after calling with  _lt_em_gt_this.getAbsolutePosition().add(displacementVector)_lt_/em_gt_ as the parameter then reading this.getAbsolutePosition afterwards would give the sum of the previous _lt_em_gt_this.getAbsolutePosition_lt_/em_gt_ and _lt_em_gt_displacementVector however it reads as (0_co_ 0_co_ 0)_lt_/em_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_At the start pilot has no parent and_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_pilot.position _eq_ _lt_em_gt_{ x_dd_ 0_co_ y_dd_ 0_co_ z_dd_ 0 }_lt_/em_gt__lt_/p_gt__lt_p_gt_pilot.getAbsolutePosition _eq_ _lt_em_gt_{ x_dd_ 0_co_ y_dd_ 0_co_ z_dd_ 0 }_lt_/em_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_pilot.translate(BABYLON.Axis.X_co_2_co_ BABYLON.Space.WORLD) sets displacementVector _eq_ _lt_em_gt_{ x_dd_ 2_co_ y_dd_ 0_co_ z_dd_ 0 }_lt_/em_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_and pilot.getAbsolutePosition().add(displacementVector) is set to _lt_em_gt_{ x_dd_ 2_co_ y_dd_ 0_co_ z_dd_ 0 }_lt_/em_gt__lt_/p_gt__lt_p_gt_but no change is made to pilot.getAbsolutePosition_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_so after the call to setAbsolutePosition_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_pilot.position _eq_ _lt_em_gt_{ x_dd_ 2_co_ y_dd_ 0_co_ z_dd_ 0 }_lt_/em_gt__lt_/p_gt__lt_p_gt_pilot.getAbsolutePosition _eq_ _lt_em_gt_{ x_dd_ 0_co_ y_dd_ 0_co_ z_dd_ 0 }_lt_/em_gt_ still_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_and pilot.getAbsolutePosition_lt_em_gt_ _lt_/em_gt_is used as the base for the next translation we start from the origin again and so_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_although pilot.translate(BABYLON.Axis.Y_co_2_co_ BABYLON.Space.WORLD) sets displacementVector _eq_ _lt_em_gt_{ x_dd_ 0_co_ y_dd_ 2_co_ z_dd_ 0 }_lt_/em_gt_ because_lt_/p_gt__lt_p_gt_pilot.getAbsolutePosition _eq_ _lt_em_gt_{ x_dd_ 0_co_ y_dd_ 0_co_ z_dd_ 0 }_lt_/em_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_the call to setAbsolutePosition returns_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_pilot.position _eq_ _lt_em_gt_{ x_dd_ 0_co_ y_dd_ 2_co_ z_dd_ 0 }_lt_/em_gt__lt_/p_gt__lt_p_gt_again leaving pilot.getAbsolutePosition _eq_ _lt_em_gt_{ x_dd_ 0_co_ y_dd_ 0_co_ z_dd_ 0 }_lt_/em_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_At this stage I am not sure what the different roles that position and AbsolutePosition play within the code so it could be that leaving the AbsolutePosition as_lt_/p_gt__lt_p_gt_(0_co_ 0_co_ 0) is intentional and I have still not got my thinking straight._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Anybody got any idea which way round this is i.e. intentional or not?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-05-23T09:47:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_If you are having any issues with the rotations in this scene_co_ it_t_s because your parenting is not logical.  You need to create nulls as parents to transform your objects. Use one master null for translation_co_ a child of the master null to use for rotations_co_ parent the helicopter to the child null and you will also be able to rotate the helicopter on this axis to avoid flipping due to euler vectors.  Only then parent the pilot to the helicopter for it_t_s own unique transforms.  I recomend using quaternions along with euler transforms_co_ but if you use a unique null (or object with the same orientation) for every rotation_co_ this will solve a great deal of issues._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-05-23T20:16:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I do hope your brain is not blown _dd_-)_lt_/p_gt__lt_p_gt_There is always a proper explanation for everything. I assume. Not including Schrodinger_t_s cat!_lt_/p_gt__lt_p_gt_The thing that will fix everything_co_ both questions 1 and 2_co_ and all of the misunderstanding_co_ is world matrix computation (If you read _qt_peace_qt_ instead of _qt_matrix computation_qt__co_ you have my full respect _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ )._lt_/p_gt__lt_p_gt_I was playing a bit with your demo - _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2ECRKR%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2ECRKR#3_lt_/a_gt__lt_/p_gt__lt_p_gt_Notice that computing the world matrix after every command makes the object move correctly. This is (probably_co_ haven_t_t looked deeply into the code) due to cache rotation and position objects that are not updated after the calls but only after the render. Or due to the use of the wold matrix of the object_co_ without updating it._lt_/p_gt__lt_p_gt_I guess it would make sense to force a world matrix computation after each call to rotate and translate. I would wait for DK_t_s answer thou_co_ maybe there is something simpler to do _dd_-)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-05-23T21:16:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I guess the philosophy is something like this _dd__lt_/p_gt__lt_p_gt_The flow is local _eq_&gt_sm_ world _eq_&gt_sm_ view _eq_&gt_sm_ screen ... computed once each frame  because the goal is to display something on the screen_co_ isn_t_t it ?_lt_/p_gt__lt_p_gt_So the framework_co_ for now_co_ provides you tools to set values_co_ once_co_ for each step _dd_ local (vertex positions)_co_ world (here are rotations_co_ translations_co_ scalings)_co_ view (cam position)_co_ screen (clipping_co_ projection_co_ etc)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The full flow is played each frame for each visible mesh._lt_/p_gt__lt_p_gt_So the (last) world matrix value set is used for the rendering._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_&lt_sm_sci-fi moment&gt_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_We might imagine some intermediate tools could exist and could set differently the world matrix (as in your example by accumulating successive changes)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_We might also imagine some upper tools could pass directly a result_co_ instead of a stack of matrices_co_ to some step of the flow _dd_ _qt_I don_t_t want you_co_ vertex shader_co_ to compute my vertex coordinate in the world_co_ I rather give them directly to you_co_ go on from these values_qt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_BJS is clocked with the _lt_em_gt_requestAnimationFrame_lt_/em_gt_ tempo  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_We could imagine also that we do our custom logic in our own different clocked cycle (_lt_em_gt_setInterval_lt_/em_gt_)_co_ or even in our separate custom thread_co_ where we set as many times we want or at the frequency we want our values... and when BJS needs to render (on _lt_em_gt_requestAnimationFrame_lt_/em_gt_ call)_co_ it just gets the current values and plays its flow as usual_lt_/p_gt__lt_p_gt_Engine/Logic loose-coupling_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_&lt_sm_/sci-fi moment&gt_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For now_co_ let_t_s just have the right world matrix ready for the next step (view) each frame  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-05-23T21:32:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Raanam (as always) is right_dd_ the world matrix is not recomputed each time you change a value for performance reason. If you want immediate results_co_ just call mesh.computeWorldMatrix()_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@Jerome_dd_ Like your idea and it could be easy to implements by just adding a mesh.dontUpdateOnRender.  But is there use cases for this? Beyond the _qt_we can do it_qt_ I want to be sure that there is a good reason to add this flag_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_More generally speaking_dd_ with the forthcoming arrival of proxies (_lt_a href_eq__qt_https_dd_//people.mozilla.org/~jorendorff/es6-draft.html#sec-proxy-object-internal-methods-and-internal-slots_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//people.mozilla.org/~jorendorff/es6-draft.html#sec-proxy-object-internal-methods-and-internal-slots_lt_/a_gt_) it will be easy for a dev to track changes on an object and force the world matrix recomputation. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2015-05-24T07:31:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_First of all I think it is great how fast you get a response from the people who obviously love developing and contributing to BABYLON. Thanks to you all._lt_/p_gt__lt_p_gt_Secondly I have come to the conclusion that my questions arise because I am thinking like a maths teacher (retired) not as a gamer and after all BABYLON is designed as a games engine and should behave as such._lt_/p_gt__lt_p_gt_Computing the world matrix after each transformation_co_as suggested by RaananW_co_ works for me and I am quite happy to add this each time._lt_/p_gt__lt_p_gt_Keep up the good work._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-05-24T08:26:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@DK_lt_/p_gt__lt_p_gt_about adding an extra entry points in the flow _dd__lt_/p_gt__lt_p_gt_well_co_ I guess it_t_s not that simple as just setting a flag. For the end user_co_ it would require to have some new vertex shaders under the hood._lt_/p_gt__lt_p_gt_Example _dd_ for this very mesh_co_ I don_t_t want it to be world computed from its world matrix but I want to pass its vertex world coordinates directly so the flows goes on_co_ with my values_co_ computing view and projection. It probably would require a way to inject my data in place of the world matrix multiplication result in the flow._lt_/p_gt__lt_p_gt_Quite complex_co_ isn_t_t  it ?_lt_/p_gt__lt_p_gt_Use case _dd_ I just wouldn_t_t have spent two weeks fusing my brain to find a way to deduct rotation angles from a given know orientation  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_I would rather have passed directly the new coordinates of the mesh vertices in the target system (known target orientation)_co_ in other terms I would have given directly their final world settings._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Maybe is it quite an exotic need...  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_So forget it for now_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I believe the logic/render loose-coupling is a better lead to investigate imho_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-05-24T16:50:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-01T12:06:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m currently investigating how the _lt_em_gt_computeWorldMatrix()_lt_/em_gt_ works. I almost understand_co_ I think._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But there_t_s something I don_t_t get in the former JohnK_t_s examples _dd_ if he computes the world matrix after each rotation settings_co_ as Raanan suggested here _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2ECRKR%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2ECRKR#3_lt_/a_gt_ _co_ it seems intermediate results are taken in account... _lt_/p_gt__lt_p_gt_I don_t_t understand why._lt_/p_gt__lt_p_gt_As far as I understand_co_ _lt_em_gt_computeWorldMatrix()_lt_/em_gt_ gets current mesh rotation properties and sets_co_ I guess_co_ the values for the three angles in the global transformation matrix (many cos and sin)._lt_/p_gt__lt_p_gt_#1 _dd_ This setting erases former mesh WorldMatrix values_co_ doesn_t_t it ?_lt_/p_gt__lt_p_gt_So why re-calling it does accumulate user rotation settings ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_#2 ) Then this transformation matrix is passed once via a _lt_em_gt_uniform_lt_/em_gt_ to the vertex shader so the world position of each mesh vertex is computed GPU side. Am I right ?_lt_/p_gt__lt_p_gt_If yes_co_ I imagine this transfert is done only once per frame._lt_/p_gt__lt_p_gt_Or is it done each _lt_em_gt_computeWorldMatrix_lt_/em_gt_ call ? Even in this case_co_ I don_t_t understand why it would accumulate intermediate results _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_mellow.png_qt_ alt_eq__qt__dd_mellow_dd__qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I feel a bit lost in the understanding of the flow ... _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-06-01T12:20:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey Jerome_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_to your first question - the computeWolrdMatrix() only takes the current values of position_co_ scaling and (quaternion)rotation and computes the world matrix. The accumulation happens in the rotate and translate functions (_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Babylon/Mesh/babylon.abstractMesh.ts#L204_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Babylon/Mesh/babylon.abstractMesh.ts#L204_lt_/a_gt_). So_co_ the flow would be_dd_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_ol_gt__lt_li_gt_mesh.rotate(...) changes the mesh_t_s quaternion rotation object._lt_/li_gt_\t_lt_li_gt_computeWolrdMatrix() computes a new world transformation matrix using the changed values_lt_/li_gt_\t_lt_li_gt_back to 1 for the next rotate-translate call_lt_/li_gt__lt_/ol_gt__lt_p_gt_rotate is connected with the world matrix only in case it has a parent and space !_eq_ LOCAL. so technically_co_ there is no need to run the new matrix computation is the object has no parent or is Space is LOCAL (rotate after rotate would accumulate correctly)._lt_/p_gt__lt_p_gt_Translate uses the world matrix - _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Babylon/Mesh/babylon.abstractMesh.ts#L234_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Babylon/Mesh/babylon.abstractMesh.ts#L234_lt_/a_gt_ (absolutePosition is being calculated in the computeWorldMatrix) . Also only in case the space is not LOCAL. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_computeWolrdMatrix() is also called in the render function_co_ so_co_ in general_co_ if you run one change a frame_co_ you won_t_t need to update it _dd_-)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-01T12:29:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_ok_co_ understood  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Babylon/Mesh/babylon.abstractMesh.ts#L212_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Babylon/Mesh/babylon.abstractMesh.ts#L212_lt_/a_gt__lt_/p_gt__lt_p_gt_I didn_t_t investigate the _lt_em_gt_rotate()_lt_/em_gt_ method so far_co_ just focused on the _lt_em_gt_computeWorldMatrix()_lt_/em_gt_._lt_/p_gt__lt_p_gt_The accumulation happens in here _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_this.rotationQuaternion _eq_ this.rotationQuaternion.multiply(rotationQuaternion)_sm__lt_/pre_gt__lt_p_gt_I just believed rotation.x_co_y_co_z properties were gotten each call and erased the former ones. That was wrong !_lt_/p_gt__lt_p_gt_Thank you Raanan _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ _dd_)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So_co_ actually_co_ in JohnK_t_s example_co_ we could just have multiplied the current mesh.rotationQuaternion by the new wanted value each step instead of calling the whole world matrix re-computation_co_ I think ..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-06-01T12:33:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_if you jump into the code and want a quick solution_co_ this would be one of the simplest solutions. Rotate accumulates except for when you have a parent. So no need there. The problem starts when you don_t_t check if there is a parent or when you forgot or don_t_t really know _dd_-)_lt_/p_gt__lt_p_gt_Computing the world matrix is the safest way for you to know that everything will work afterwards. Cache is updated_co_ world matrix is updated_co_ absolute position is updated. Everything you need. _lt_/p_gt__lt_p_gt_For an advanced programmer_co_ who knows exactly what he wants to do and knows the code very well - no_co_ there would be no need to do that. But what are a few milliseconds during bootstrap?  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-01T12:47:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I was rather about the case_co_ as JohnK_t_s case_co_ where we could have hundred of meshes and a step by step rotation process to do._lt_/p_gt__lt_p_gt_So_co_ just maybe just a need to multiply quaternions_lt_/p_gt__lt_p_gt_and finally_co_ to set everything right_co_ compute the world matrix only once before rendering_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_thank you again about this very accurate_co_ as usual_co_ explanation _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-01T12:56:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Actually_co_ I heard about the _lt_em_gt_computeWorldMatrix_lt_/em_gt_ performance impact_co_ although_co_ just reading its code_co_ I don_t_t realize why it would be that noticeable even for many meshes (need to investigate about the quaternionYawPitchRoll generation)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And after reading your article about inline workers_co_ I_t_m wondering about a way (hypothetical) to attach a worker (_eq_ world matrix computer) per  mesh in order to run all world matrix computations quite simultaneously (if possible)_lt_/p_gt__lt_p_gt_well_co_ just a prototype_co_ something to stress just to check if it_t_s worth it_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-06-01T13:21:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I am not sure an async calculation of the world matrix will word. This is something that needs to be constantly done in the main thread_co_ otherwise actual objects movement won_t_t be shown until an answer will be sent back from the worker. This is a _qt_blocker_qt_ _dd_-) _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-01T14:15:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_yep..._lt_/p_gt__lt_p_gt_I know_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_well_co_ it_t_s a more general thinking _dd__lt_/p_gt__lt_p_gt_- having a render thread (UI) _dd_ collect DOM events_co_ pass data to GPU_co_ clocked at requestAnimationFrame tempo. This thread doesn_t_t care about value updates _dd_ it just reads current mesh_co_ transform matrix and view matrix values and draws with these values._lt_/p_gt__lt_p_gt_- an engine thread _dd_ this one computes all values at its own tempo._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Loose coupling between rendering and world/view data computation._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For now_co_ I_t_m just wondering if_co_ in case of big bunches of meshes on muscled CPU_co_ it would better to serialize all mesh world matrix computations (current BJS behavior) whether to delegate them to dedicated different threads and _qt_wait_qt_ for each result. I know it_t_s an extreme special case _dd_ strong CPU and need for intensive computation. I_t_m talking about a mesh _eq_ a thread here._lt_/p_gt__lt_p_gt_What would be the best approach ... ? no idea_co_ so far_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-06-01T14:47:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I don_t_t know if this applies whatsoever_co_ but in my old MOO/MUD-coding days... we had _lt_a href_eq__qt_http_dd_//en.wikipedia.org/wiki/Fork%E2%80%93join_model_qt_ rel_eq__qt_external nofollow_qt__gt__t_forked_t_ tasks_lt_/a_gt_.  I guess that_t_s the _t_interface_t_ to a threading model_co_ and not pertinent_co_ here.  WebWorker threads have a strict and limited interface_co_ and are not plausible in certain circumstances_co_ I hear.  So_co_ although a worker thread on every mesh... sounds nice... it might not be plausible.  Maybe overhead would defeat its end objective.  I have no idea._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_WHAT IF_dd_  Every mesh is also a reduced-instruction-set/SIMD Virtual Machine?  We got actionManager?  Why not threadManager_co_ too?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_hehe.  That makes me excited... and I don_t_t even know why!  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Ignore me_co_ and continue_co_ guys... there_t_s good rag-chewin_t_ going-on here.  Poor Johnny K is probably wondering why so many people joined him at his campfire_co_ and how the subject got so big.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  Don_t_t worry_co_ John_co_ these _qt_topic blooms_qt_ seem to happen easily here in the BJS forum.  Just strap yourself-in and hang-on for the ride... there_t_s a first aid truck at the finish line.  (but these threads never finish)._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-06-01T14:52:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_yep_co_ it could look like some frok-join model_lt_/p_gt__lt_p_gt_SIMD is an orthogonal approach because it parallelizes numerical computation (very efficient for matrices for instance)_lt_/p_gt__lt_p_gt_so you can have threads AND simd simultaneously_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2015-06-02T17:33:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@Wingnut et al_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_All the better to have a sing song round the campfire if you are not by yourself. After some further trial and error on my part I thought I had finally got translate and rotate sorted out after finding mesh.locallyTranslate but coming back to the topic today it has sort of got over my head. I was singing _t_wheels on the bus_t_ and now we have a full blown opera. What is brilliant is that the experts on this forum take simple questions very seriously._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have submitted my thinking on translations and rotations on a new page for the docs site. I hope it makes sense and other newcomers to BJS will find it useful_co_ if it passes moderation. Thought I would return something for all the help I had been given._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ian","Date":"2016-03-03T16:18:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tsome playground local or global rotation_lt_br_gt__lt_a href_eq__qt_http_dd_//babylonjs-playground.com/#1JUURV%2318_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjs-playground.com/#1JUURV#18_lt_/a_gt__lt_br_gt__lt_br_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]