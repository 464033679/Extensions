[{"Owner":"simon_bg","Date":"2017-08-18T12:29:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi peeps_co_ I_t_ve already published a similar topic not a while ago_co_ but we couldn_t_t really reach any conclusion_dd__lt_br /_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/32079-sprite-occlusion-for-performance/_qt_ rel_eq__qt__qt__gt_http_dd_//www.html5gamedevs.com/topic/32079-sprite-occlusion-for-performance/_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have this demo_dd_ _lt_a href_eq__qt_http_dd_//devel.arinnova.com/tests/3dmaps/babylonjs_demo/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//devel.arinnova.com/tests/3dmaps/babylon_demo/_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m trying to get a similar forest to this three.js scene_dd_ _lt_a href_eq__qt_https_dd_//www.piste.io/#!/cortina_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.piste.io/#!/cortina_lt_/a_gt_ . Notice how the forest is really dense and the FPS are really good.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat I_t_ve already tried without success_dd_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t1) Loading meshes instead of sprites and applying LOD mechanism resulted in very low FPS._lt_br /_gt_\n\t2) Using mesh instances instead of sprites_co_ still very low FPS _lt_br /_gt_\n\t2) Temechon kindly helped me and coded a LOD function for sprites_co_ but unfortunately it was more or less the same FPS as without the LOD._lt_br /_gt_\n\t4) Showing all the 54k trees_co_ but using a particle system instead of sprites_co_ which helped to reduce the draw calls_co_ but the FPS were still low._lt_br /_gt_\n\t5) I_t_ve implemented a _qt_poor man_t_s LOD_qt_. I separated the 54k trees into 9 chunks_co_ each chunk corresponding to a specific area. Then at every frame I calculated the distance from the camera to the central point of each area. If it was close enough to the camera_co_ I showed the area trees and if not_co_ I removed them. This way at each frame I had to calculate distances to only 9 points instead of 54k points_co_ which helped but visually it was not pretty at all. Even applying a brown texture on the terrain underneath the trees_co_ the chunks of trees appearing and disappearing all at once are very noticeable._lt_br /_gt_\n\t6) I also reduced the tree image size to 128x128_co_ just in case_co_ but I_t_m not sure it had an effect on FPS._lt_br /_gt__lt_br /_gt_\n\tUsing an image of a pine tree or a leafy tree would create much more perception of a dense forest_co_ but unfortunately I can_t_t use those. The scene is a winter map of a specific real-world area with leafless trees and I_t_m trying to be as realistic as possible._lt_br /_gt_\n\tA silly idea I_t_ve also tried was using an image of a group of trees instead of an image of a single tree. It obviously looked fake_co_ especially when rotating the camera.  _lt_br /_gt__lt_br /_gt_\n\tSome other ideas that I_t_ve had but have not tried_dd_ _lt_br /_gt_\n\t    _lt_strong_gt_Solid Particle System_lt_/strong_gt_ -&gt_sm_ as it has more effect on performance than a simple particle system and I_t_ve already tried that._lt_br /_gt_\n\t    _lt_strong_gt_Octrees _lt_/strong_gt_-&gt_sm_ could this help me? I_t_ve read the tutorial but I_t_m not sure I understand how could I apply it to sprites. _lt_br /_gt_\n\t    I don_t_t know how _lt_strong_gt_camera.maxZ _lt_/strong_gt_works internally_co_ but is there possibly any way to apply it only to sprites_co_ so the nearest sprites only are visible?   Could I implement my own camera that does this?_lt_br /_gt__lt_br /_gt__lt_em_gt_tldr_sm_ I_t_d like to show ~200.000 trees in my scene with minimal performance drawback._lt_/em_gt__lt_br /_gt__lt_br /_gt_\n\tThanks a lot in advance!_lt_br /_gt_\n\t    \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-08-18T15:05:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tLet_t_s be faire. You won_t_t be able to do that WITHOUT a custom shader.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs I was pretty sure_co_ they use this technique_co_ I looked into the example you gave on piste.io. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo better understand what they are doing_co_ I highly recommend that you install Spector.js extension on your browser. Then just go to the page and do a capture.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is a quick summary of what I found_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- The trees are rendered in one call with 98304 vertices_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_08/Capture.JPG.8cfcc5047d3e02e4afa5db03aa1f9071.JPG_qt_ data-fileid_eq__qt_14486_qt_ rel_eq__qt__qt__gt__lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_14486_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_08/Capture.thumb.JPG.d07fe8c341a6d60f2c22731cdf7249f6.JPG_qt_ alt_eq__qt_Capture.thumb.JPG.d07fe8c341a6d60f2c22731cdf7249f6.JPG_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe custom vertex shader is really smart and is mostly responsible to prepare data to render the correct sprites and ground and snow _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_ basically the technique used by my WorldMonger demo but instead of a grass texture they generate small trees with shadow.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAll the interesting code appends in the custom pixel shader.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"simon_bg","Date":"2017-08-18T20:33:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThanks a lot_co_ Deltakosh!_lt_br /_gt_\n\tI_t_ll try and have a look at those interesting_lt_em_gt_ _lt_/em_gt_shaders then\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]