[{"Owner":"Giraffewithsocks","Date":"2017-03-25T20:27:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m trying to implement double jump (one extra jump while in the air). In order for it to work also when the character is falling of a ledge or higher platform without having initiated a jump from the ground I need a way to tell if the player is currently in the air or not. How can i tell if a mesh is currently not colliding with anything? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe only way I have found so far is the _qt__lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_intersectsMesh(mesh_co_precise)_qt_ function_co_ but this requires me to check against a specific mesh. Would I need to loop through all meshes with collision in the scene to check if I am currently colliding with any of them_co_ is there any better way to do this (seems rather inefficient). What I think I_t_m looking for is a _qt_isCurrentlyColliding_qt_ value on my character mesh or perhaps it can be solved differently?_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"wo997","Date":"2017-03-25T22:10:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI think it_t_s impossible to do it without repeating _lt_span style_eq__qt_color_dd_#333333_sm__qt__gt_intersectsMesh(mesh_co_precise)_co_ but I hope there is a solution._lt_/span_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"hunts","Date":"2017-03-26T15:48:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/9606-giraffewithsocks/?do_eq_hovercard_qt_ data-mentionid_eq__qt_9606_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/9606-giraffewithsocks/_qt_ rel_eq__qt__qt__gt_@Giraffewithsocks_lt_/a_gt_ if (character.intersectsMesh(mesh)){\n_lt_/p_gt_\n\n_lt_p_gt_\n\t//do something\n_lt_/p_gt_\n\n_lt_p_gt_\n\t}\n_lt_/p_gt_\n\n_lt_p_gt_\n\telse {\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_if (character.intersectsMesh(mesh)){\n\n//do something\n\n}\nelse {\n\n//do something else\n\n}\n\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t}\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JohnK","Date":"2017-03-26T16:22:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI have questions about how do you generally know where the character is and what it is doing. I am imagining a a group of non connected platforms at different positions left to right and front to back at different heights. But lets simplify to just platforms left and right at the same height will ground  below. The character is on a platform and can\n_lt_/p_gt_\n\n_lt_p_gt_\n\t1. Jump onto another platform_co_ how do you know which platform it lands on?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. The character falls of a platform. How do you know which one it fell off?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t3. The character runs along the ground and jumps onto a platform. How do you know which platform it jumps on?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou could do all this by checking for all platforms which intersects with the character. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor me some sort of mapping system for character and platforms would work better. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnswering my questions may lead you to an answer for yours.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Giraffewithsocks","Date":"2017-03-26T16:45:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tTo all 3 of those points the answer is basically _qt_I don_t_t_qt_. However_co_ I believe I have come up with a workaround to it. If I create a velocity vector based on the previous and current position I can see if there is any vertical movement. This is only part one as the character could be moving up or down on a sloped platform and still be considered grounded. If there is any vertical movement_co_ set a variable name _qt_potentiallyInTheAir_qt_ to true. Using the onCollide callback for the mesh_co_ if the callback triggers (assumingly it will each frame if there is any collision) the potentiallyInTheAir is flipped back to false. On the next frame i can check the potentiallyInTheAir variable and handle the jumping logic appropriately. If there is vertical movement and I did not receive an onCollide callback in the last frame_co_ I can assume that I am in the air. I have not actually been able to test this yet_co_ so its more of a pseudo algorithm in my head.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"hunts","Date":"2017-03-26T17:25:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/9606-giraffewithsocks/?do_eq_hovercard_qt_ data-mentionid_eq__qt_9606_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/9606-giraffewithsocks/_qt_ rel_eq__qt__qt__gt_@Giraffewithsocks_lt_/a_gt_ can you make a PG_co_ so others can learn _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com_lt_/a_gt__lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]