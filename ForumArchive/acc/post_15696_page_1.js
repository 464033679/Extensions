[{"Owner":"fenomas","Date":"2015-07-13T03:34:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Possibly dumb question_co_ but is it possible to change the blend mode for a given mesh or material? Or would this require a custom material/shader? Are there samples/tutorials I should check?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2015-07-13T07:07:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi fenomas_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You can have a mesh displayed additively with this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_mesh.registerBeforeRender(function () { engine.setAlphaMode(BABYLON.Engine.ALPHA_ADD)_sm_ } )_sm__lt_/pre_gt__lt_p_gt_This is the only way to do it currently. Using a ShaderMaterial won_t_t help you changing the blend mode_co_ since you won_t_t have access to the background color in the fragment shader._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-07-13T08:44:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ah_co_ thanks! Works like a charm.. makes you wonder if it shouldn_t_t just be an option on material._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Incidentally  it looks like I also have to add a registerAfterRender to set the mode back again_co_ right? If I don_t_t other transparent objects in my scene seem to be affected. Setting it back to ALPHA_COMBINE seems to fix this_co_ though I_t_m not sure if that_t_s bulletproof._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2015-07-13T09:26:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yeah... this is not handled incredibly well by the engine. You could also remove the registered function (don_t_t know how_co_ though). I think the setting is reset to ALPHA_COMBINE at the beginning of the render loop._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_A setting on the mesh would be easy to add for sure! Not sure what DK had in mind for this though. Also_co_ it could be nice to have more choices than just COMBINE and ADD. This is a summary of what_t_s possible using blend modes_dd_ _lt_a href_eq__qt_http_dd_//i.imgur.com/yMX2wZJ.jpg_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//i.imgur.com/yMX2wZJ.jpg_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-07-14T16:28:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I agree this should be an option on the material. And it would be pretty easy to do (just need to wrap webgl constants into babylonjs constants)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I can add it to my todo list _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-07-14T16:29:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/issues/606_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/issues/606_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-07-14T16:59:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Done!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/commit/a6103f47cdcb8d561c6070120157a046d7cb3c76_dd__qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/commit/a6103f47cdcb8d561c6070120157a046d7cb3c76_dd__lt_/a_gt__lt_/p_gt__lt_p_gt_* Added material.alphaMode (can be set to BABYLON.Engine.ALPHA_ADD or  BABYLON.Engine.ALPHA_COMBINE)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you want to add more mode_co_ feel free to submit a PR for this_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/babylon.engine.ts#L1432_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/babylon.engine.ts#L1432_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2015-07-14T20:56:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Great_co_ thanks!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-07-15T04:37:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Haha_co_ glorious! Popped this into my scene and it works like a charm._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It would also be great if someone wants to add more blend modes. Personally I don_t_t know enough to know which ones would be useful._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Follow up question_dd_ for a mesh with vertex colors and an ambient texture_co_ rendered in ALPHA_ADD_co_ it seems that vertex colors are used but vertex alpha is not. Vertex alpha seems to work normally with ALPHA_COMBINE so I_t_d thought it would work with ADD too. Is this unavoidable_co_ or fixable_co_ or am I missing something?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-07-15T15:55:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_ADD will add (!!) vertex color and destination color_lt_/p_gt__lt_p_gt_COMBINE will use vertex alpha to blend vertex color with destination_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-07-17T05:06:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_89274_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_15696_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1436975717_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_ADD will add (!!) vertex color and destination color_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_No need for snark. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  Firstly_co_ to be precise ADD presumably doesn_t_t add the vertex color_co_ but rather some complicated combination of vertex color_co_ emissive texture color_co_ texture alpha_co_ other material colors_co_ etc_co_ etc. I had supposed that vertex alpha would fit into that combination somewhere_co_ before the blend mode occurs_co_ and then _qt_material.alpha_qt_ would be used for the final blend operation. I guess that_t_s not the case_co_ maybe it_t_s the other way around?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Either way_co_ in other contexts (photoshop_co_ svg_co_ etc)_co_ blend modes normally operate on alpha-multiplied color values. So if vertex alpha is the alpha used for the COMBINE blend operation_co_ it would probably make sense to premultiply it before the ADD blend operation. If that_t_s possible_co_ I mean._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2015-07-17T07:53:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_There_t_s a little fix to add in the code for that_co_ I_t_ll add it since I_t_m working on new blend modes._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2015-07-17T08:47:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Done! _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/pull/619_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/pull/619_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ADD is now modulated by the source alpha value._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-07-17T09:23:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Wowza! That_t_s crazy fast. _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  I will try these out (I_t_m using them on mesh-based particle systems) if/once they_t_re merged._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-07-17T16:42:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_PR merged. To save backward compat I also added a ONEONE mode _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]