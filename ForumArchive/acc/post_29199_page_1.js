[{"Owner":"yorke","Date":"2017-03-20T11:47:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi all_co_ my first post here.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m learning babylon.js after having worked in three.js and I must say that I love this framework_co_ many thanks to its creators for such a professional production.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tActually I_t_m experiencing a little problem with collision detection between particles _qt_fired_qt_ from a SolidParticleSystem and a mesh_dd_ I can trigger the collision between the particle and the mesh using\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_particle.intersectsMesh(window.engine.scenes[0].meshes[15])_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tbut intersectMesh() seems to become true when collision occurs with mesh_t_s BoundingBox_co_ which is way too approximate when I use a human mesh.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs there a way to calculate the exact point of collision from particle to mesh?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI thought i could fire a BABYLON.Ray when intersectMesh() becomes true and retrieve the _qt_real_qt_ intersection with mesh_co_ is this a good approach or you think it can be done better? Are there any examples of using Babylon.Ray to retrieve exact intersection with a mesh?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks to all _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"hunts","Date":"2017-03-20T12:41:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/26178-yorke/?do_eq_hovercard_qt_ data-mentionid_eq__qt_26178_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/26178-yorke/_qt_ rel_eq__qt__qt__gt_@yorke_lt_/a_gt_ nice to have you in the forum_co_ have you tried _qt_intersectPoint(vector3)_qt_?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-03-20T12:49:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/solid_particle_system#particle-intersections_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/overviews/solid_particle_system#particle-intersections_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tyou could test with the intersectsMesh() method from the AbstractMesh class by forcing the precise mode _dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_yourMesh.intersectsMesh(theParticle_co_ true)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tNote well_co_ that testing against OBB (oriented bounding boxes) will be done only for the mesh (the particle BBox will keep axis aligned) and that this kind of test needs really more CPU.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTesting with Ray is another option... and requires even more CPU.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"yorke","Date":"2017-03-20T15:17:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for your kind suggestions_co_ i_t_ll give it a try this evening and report the results.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve another question on the same subject (collision between solid particle and mesh)_dd_ are there any functions that can give you the normal of the mesh face hit by the particle?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI mean_dd_ I surely know the vector that gives me the direction of the particle bullet_co_ but no one grants me that the mesh face hit is normal to that vector (e.g. a sideswiped mesh).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMany thanks yet!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-03-20T15:55:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAbout the normal of the facet hit by some particle_co_ something exists _dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/tutorials/how_to_use_facetdata_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/tutorials/how_to_use_facetdata_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_var norm _eq_ mesh.getFacetNormal(50)_sm_ // returns the world normal of the mesh 50th facet_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tIf the mesh facet hit by the particle is the 50-th one_co_ for instance\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"yorke","Date":"2017-03-20T16:30:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tTnx jerome_co_ I just saw some playgrounds of yours about facets and collision and they_t_re really impressive.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo let me understand better_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWith_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_yourMesh.intersectsMesh(theParticle_co_ _lt_span_gt_true_lt_/span_gt_)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t_lt_code_gt_I have the coordinates of the impact point on the mesh_co_ that come from the particle coordinates._lt_/code_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_code_gt_How can I use this coordinate to retrieve the mesh_t_s hit facet index inside the mesh tree structure?_lt_/code_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-03-20T17:31:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tintersectsMesh() just returns a boolean. You can_t_t get the intersection point from it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe only way I know to get the facet id (or index) is to use either a PickingInfo object_co_ either the facetData provided functions\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]