[{"Owner":"Deltakosh","Date":"2015-09-09T17:17:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey team!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_following a great discussion with Jerome_co_ please let me introduce the new CreateBox to you_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1UKBGC_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1UKBGC_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In a nutshell_co_ now you can do this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var box _eq_ BABYLON.Mesh.CreateBox(_qt_box_qt__co_ { width_dd_ 2_co_ height_dd_ 4_co_ depth_dd_ 0.1 }_co_ scene)_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-09-09T18:19:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_It is expected that other primitive is created in the same ways? the sphere_co_ cylindre_co_ plan..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-09-09T18:25:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_yes sir!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Ahiru","Date":"2015-09-09T18:29:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Will the pivot-point always be in the center_co_ or is it possible to define it when creating the box?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-09-09T18:47:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_now the sphere_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#WRH6X_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#WRH6X_lt_/a_gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var sphere _eq_ BABYLON.Mesh.CreateSphere(_qt_sphere1_qt__co_ {\tsegments_dd_ 32_co_ \tdiameterX_dd_ 2_co_ \tdiameterY_dd_4_co_ \tdiameterZ_dd_ 5_co_ \tsideOrientation_dd_ BABYLON.Mesh.FRONTSIDE}_co_ scene)_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-09T18:50:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Damn Lucky Luke ! _lt_/p_gt__lt_p_gt_you code faster than your shadow !_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-09-09T18:51:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Pivot can be changed at anytime by updating mesh.setPivotMatrix_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#WRH6X%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#WRH6X#1_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-09T18:57:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_This new signature (retro-compat with the current one) is one of powerful thing you ever added to BJS because we will be able now to extend quite infinitely the features of each mesh !_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Can we have a different uvs management for boxes ? yes_co_ we can (just hope there_t_s no copyright on this motto)_lt_/p_gt__lt_p_gt_Can we have a different normal behavior for spheres ? yes_co_ we can_lt_/p_gt__lt_p_gt_Etc ..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-09-09T19:04:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_lol_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-09-10T07:33:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_95912_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_17044_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1441824473_qt__gt__lt_div_gt__lt_p_gt_now the sphere_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#WRH6X_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#WRH6X_lt_/a_gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint lang-auto_qt__gt_var sphere _eq_ BABYLON.Mesh.CreateSphere(_qt_sphere1_qt__co_ {\tsegments_dd_ 32_co_ \tdiameterX_dd_ 2_co_ \tdiameterY_dd_4_co_ \tdiameterZ_dd_ 5_co_ \tsideOrientation_dd_ BABYLON.Mesh.FRONTSIDE}_co_ scene)_sm__lt_/pre_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt__lt_/p_gt__lt_p_gt_There must be a problem for the scene parameter is diameterOrScene but if you put a diameter (num) and the sphere disappears if you put true for updatable he told me that it is a szene I must put this_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_var sphere _eq_ BABYLON.Mesh.CreateSphere(_qt_sphere1_qt__co_ { segments_dd_ 32_co_ diameterX_dd_ 3_co_ diameterY_dd_ 3_co_ diameterZ_dd_ 3}_co_ _lt_strong_gt_scene_co_ scene_lt_/strong_gt__co_ true)_sm_ _lt_span style_eq__qt_color_dd_#008000_sm__qt__gt__lt_strong_gt_// on doit mettre 2 fois scene ici_lt_/strong_gt__lt_/span_gt__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#WRH6X%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#WRH6X#2_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Why put twice _t_scene_t_ ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_and this _lt_u_gt_not work_lt_/u_gt__dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_var sphere _eq_ BABYLON.Mesh.CreateSphere(_qt_sphere1_qt__co_ { segments_dd_ 32}_co_ _lt_strong_gt_3.0_co_ scene_lt_/strong_gt__co_ true)_sm_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#WRH6X%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#WRH6X#3_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So diameterOrScene _dd_ _qt_scene_qt_ work_co_ _qt_diameter_qt_ no._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I think there must be a bug?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-10T08:06:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The way to understand these signatures is this one _dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_1 - either you use the usual way you already know_lt_/p_gt__lt_p_gt_2 - either you use the short way which is _dd_ _lt_em_gt_CreateXXX(name_co_ options_co_ scene)_sm__lt_/em_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In this case_co_ _lt_em_gt_options_lt_/em_gt_ is an object with its own properties._lt_/p_gt__lt_p_gt_These properties can be the same as the parameters used in the previous method signature (1) or others so the _lt_em_gt_CreateXXX()_lt_/em_gt_ will have a different extended behavior._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This means _dd__lt_/p_gt__lt_p_gt_- if you use an object _lt_em_gt_options_lt_/em_gt__co_ you must set all the parameter values you want as _lt_em_gt_options_lt_/em_gt_ properties (quite all have default values however) and then just pass the _lt_em_gt_scene_lt_/em_gt_ parameter _dd_ _lt_em_gt_CreateXXX(name_co_ options_co_ scene)_lt_/em_gt__lt_/p_gt__lt_p_gt_- if you don_t_t use the object _lt_em_gt_options_co_ _lt_/em_gt_then just keep coding as you used to with _lt_em_gt_CreateXXX(name_co_ param1_co_ param2_co_ ..._co_ param3_co_ scene)_lt_/em_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You _lt_u_gt_can_t_t mix _lt_/u_gt_the object _lt_em_gt_options_lt_/em_gt_ and many other parameters in the method call._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What is allowed with the new _lt_em_gt_CreateXXX() _lt_/em_gt_signature is _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_CreateXXX(name_co_ options_co_ scene)_sm_    // _eq_&gt_sm_ you can then specify the options.updatable and option.sideOrientation values if you want_lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-09-10T08:15:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_OK I see. So for example must be updatable add the options_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_{updatable_dd_ true}_co_ scene)_sm_ _eq_&gt_sm_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#WRH6X%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#WRH6X#4_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_That_t_s right ? Tthank you Jerome._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-10T08:17:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I just edited the previous post to give more details_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_[EDIT] edited twice to fix the edit ... ooopss_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-09-10T08:26:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok_co_ thank you Jerome  for the clarification. I love this new signature.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-10T08:41:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The goal is to port this new signature to every existing mesh _dd__lt_/p_gt__lt_p_gt_This will be easier for people to code_co_ especially for using current methods with 6 or 7 parameters._lt_/p_gt__lt_p_gt_This will allow to extend the mesh features withour adding extra other parameters in the signature._lt_/p_gt__lt_p_gt_This will standardize all the _lt_em_gt_CreateXXX()_lt_/em_gt_ methods in the same form with only 3 parameters _dd_ name_co_ options_co_ scene._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Standardized names are good things for users (simpler code) and newcomers (easy to learn)._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-09-10T08:44:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_So we can add our own options. for example if I want to add a option _qt_description_qt__co_ I can?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-10T08:59:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_If you pass an option property that is unknown by the code that creates the mesh_co_ it will just be ignored._lt_/p_gt__lt_p_gt_If you can ever add_co_ once it is created_co_ a property _qt_description_qt_ to your mesh instance of course_co_ that_t_s just javascript._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_When talking about the possibility to extend the meshes_co_ I meant that BJS developers (these who do the internal code of BJS_co_ contributors) could add new features without changing the signature as DK did _dd__lt_/p_gt__lt_p_gt_he changed the _lt_em_gt_CreateBox()_lt_/em_gt_ method what could until now just create a cube to something able to create now a cuboid (different size for width_co_ depth and height)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_We could imagine to have a property allowing_co_ for example_co_ to stretch a texture on the whole cube surface instead of repeating it on each side. This would be a new feature (new code about UVs settings under the hood) added while keeping the signature unchanged _dd_ _lt_em_gt_CreateBox(name_co_ options_co_ scene)_lt_/em_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-09-10T09:08:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok_co_ I understood perfectly. Thank you again and sorry with all my questions. It is a very good thing this signatures for adding new functionality without breaking compatibility.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jahow","Date":"2015-09-10T11:37:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Great job! Will it be available for ribbons then? _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ Like_co_ for example_co_ if we want to add caps to them_co_ you know..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-10T11:44:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I will add this to my backlog !_lt_/p_gt__lt_p_gt_delete on line_co_ add another one ... Danaids sieve_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-09-10T20:29:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Plane done_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var plane _eq_ BABYLON.Mesh.CreatePlane(_qt_plane_qt__co_ {width_dd_6_co_height_dd_10}_co_ scene)_sm__lt_/pre_gt__lt_p_gt_Ground done_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var ground _eq_ BABYLON.Mesh.CreateGround(_qt_ground1_qt__co_ {width_dd_6_co_ height_dd_6_co_ subdivisions_dd_4}_co_ scene)_sm__lt_/pre_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-09-10T22:06:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_But this is NOT ok..._lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var matPack _eq_ {    name_dd_ _qt_groundmat_qt__co_    material_dd_ _qt_standard_qt__co_    diffuseColor_dd_ _qt_red_qt_}_sm_var paramPack _eq_ {    shape_dd_ ground_co_    name_dd_ _qt_ground1_qt__co_    tags_dd_ []_co_    isFlatShaded_dd_ true_co_    material_dd_ matPack_co_    width_dd_ 6_co_    height_dd_ 7_co_    subdivisions_dd_ 4_co_    scene_dd_  scene_co_    updatable_dd_ false}_sm_// create any mesh - a ground in this case...var ground _eq_ BABYLON.CreateMesh(paramPack)_sm__lt_/pre_gt__lt_p_gt_Right?  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I took it a few steps further_co_ eh?  *scratch scratch*  _lt_u_gt_One_lt_/u_gt_ BJS command... can create ALL meshes... and do auto-material_co_ and ALL params/args are inside-of the constructor_t_s paramPack.  Why not allow ALL the params to be set inside-of the options object?  *shrug*_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Ok_co_ maybe that_t_s out-of-control_co_ huh?  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  It sort-of ruins the re-usability of options (paramPack) objects_co_ eh?  nod.  They get specific when a _qt_name_qt_ and _qt_shape_qt_ are defined inside.  But options objects are only re-usable on the same mesh shape anyway_co_ because each mesh will have different option/parameter _lt_u_gt_names_lt_/u_gt_.  I wonder what cylinder_t_s parameter names will be.  diameterTop_co_ diameterBottom_co_ etc_co_ I suppose._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Is the public allowed to suggest different parameter names?  Is this the time to carefully scrutinize the parameter names_co_ because they will get locked-down soon after this? _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Or... cope and deal with whatever the boss wants?  errr.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_ohmy.png_qt_ alt_eq__qt__dd_o_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/ohmy@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Are SHORT parameter names important...  like _lt_em_gt_dTop_lt_/em_gt_ and _lt_em_gt_dBot_lt_/em_gt_ for those cylinder diameters?  Or do we not care about those name lengths?  Thoughts? _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Something like _lt_em_gt_isFlatShaded_lt_/em_gt_ might be both a parameter name AND a property on the mesh_co_ so we probably shouldn_t_t hack those names.  WHEN will a parameter name match a property name?  Often?  Hardly ever?  Should we weigh the future potential of how often that happens?  Too deep?  I_t_m scared!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-09-11T00:28:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I like this uber function _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ Something really interesting to add definitely._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For new parameters naming_dd_ Yes this is the right time as we are still in the beta process. BUt keep in mind that diameterTop is far better than dTop for a newbie_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_To answer _qt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_Why not allow ALL the params to be set inside-of the options object_qt_ I have the following rule of thumb_dd_ the parameters are easy to discover when using the playground thanks to intelissense. So they have my favor but sometimes it could be interesting to have both (like for out-of-the-box meshes)_lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-09-11T07:21:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_As a coder I like also this über function._lt_/p_gt__lt_p_gt_But I don_t_t think it_t_s good thing to have it in BJS._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Why ?_lt_/p_gt__lt_p_gt_#1 - Because we can_t_t give it a default behavior. What would be the shape of a default general mesh ?_lt_/p_gt__lt_p_gt_When you use _lt_em_gt_CreateSphere()_lt_/em_gt_ for instance you expect to get a sphere_co_ even if you don_t_t give parameters to customize it. You could then object that with _lt_em_gt_CreateMesh()_lt_/em_gt__co_ only one parameter at least would be required_co_ the shape_co_ what is not a big real difference.  Ok_co_ a point for you._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_#2 - Because it would be really really confusing in terms of parameters._lt_/p_gt__lt_p_gt_Ex _dd_ question on the forum_lt_/p_gt__lt_p_gt__qt_I did  _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_CreateMesh({shape_dd_ box_co_ topDiameter_dd_ 10_co_ stretchTexture_dd_ true })_sm__lt_/pre_gt__lt_p_gt_and it doesn_t_t work. Any thought ?_qt__lt_/p_gt__lt_p_gt_there Wingy would reply a 8 km (or 6 miles) long post  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ to explain to this newcomer that the_lt_em_gt_ topDiameter_lt_/em_gt_ parameter isn_t_t pertinent for the box_co_ but the _lt_em_gt_stretchTexture_lt_/em_gt_ one would work_co_ only if the shape has many faces (say_co_ a box_co_ a pyramid but not a sphere). Etc_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So keeping a function name per shape type is_co_ imho_co_ a good way to keep pools of pertinent parameters together in the code (BJS code and user code)_co_ in the documentation and in the forum funny debates._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I agree the parameter names are important_co_ so it is a good idea to submit them to the community before implementing them_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-09-11T13:48:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks for the replies on that_co_ guys.  Yeah_co_ my idea was a goofy idea.  I wanted to get some feedback on it... and did_co_ thanks._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In post #16_co_ dad72 asked about adding our own parameter fields (good question).  Jerome_co_ in post 17_co_ mentioned that the shape constructor would ignore the extra parameter(s) if they were not pertinent to the mesh creation._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have thoughts.  (oh crap_co_ huh).  It seems to me that there could be creation options... the standard shape parameters... _lt_u_gt_and_lt_/u_gt_ post-creation settings.  Dad72_t_s _qt_description_qt_ would be a post-creation setting.  Maybe any key that starts with an underscore... is added after the creation.  PCS.  Post-creation settings.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__rotation_co_ _position_co_ and _scale... could be PCS_t_s.  They would be done to the mesh AFTER (post-) creation.  IF underscored keys exist_co_ the creation code calls processPostCreationOptions() before returning from the user_t_s creation call.  But that could get really messy. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Maybe we could allow a post-creation options object_co_ but maybe it should be done in a separate step.... by the user._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_sphere.processSettingsOptions(MySettingsOptionsObject)_sm_  (this is all done AFTER creation_co_ so it doesn_t_t complicate the creation construction at all - safer - better error reports)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Doing it that way_co_ we can now eliminate this potential issue from the mesh creation phase.  As Jerome points-out_co_ if it isn_t_t one of the creation parameters... it will be ignored. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But _lt_u_gt_after_lt_/u_gt_ creation_co_ Dad72 could make another _qt_settings_qt_ object... similar to an options object_co_ and get .description set... as well as potentially setting rotation_co_ position_co_ scale_co_ isFlatShaded_co_ showBoundingBox_co_ edgesRender_co_ smWireframe_co_ smBackFaceCulling_co_ etc etc.  The processSettingsOptions() func could be very powerful... including adding a standardMaterial to the mesh.material property... and setting colors or wireframe or backFaceCulling on that material... per the things found in the settingsOptionsObject._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Yep_co_ post-creation settings are cool_co_ but I think you guys are thinking right.  Creation is one thing_co_ post-creation settings is a different thing_co_ and they need to remain separated. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So_co_ yeah_co_ I need to stay on-topic of creation_co_ and maybe later we can talk about a mesh.processSettings(settingsObject) feature/nightmare._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_That was a good question_co_ Dad72!  It made my brain organization go mushy_co_ (more mushy than normal). _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_--------------_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Back on subject... these creation options objects COULD make finding parameter mistakes... easier or harder.  We often see non-descript errors such as _lt_em_gt_d is undefined_lt_/em_gt_ when a parameter mistake has been made.  If we are doing helper duty_co_ we might need to search-around in people_t_s code to find their options object for that error-generating constructor line... to see what parameter they forgot._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Reworded_co_ if the user is using options objects_co_ we won_t_t be able to simply look-at the createTorusKnot() constructor line to see what parameter the user missed.  Instead_co_ we need to find the options object they used_co_ and look in there for the problem._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_We could see spelling and typing mistakes in the keys of the options objects.  Using the old way... the user needs to get the values correct_co_ and the parameter _lt_u_gt_order_lt_/u_gt_ in the constructor... correct_co_ but they don_t_t need to concern themselves with the parameter names._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_With the new options object_co_ they no longer need to worry about parameter order_co_ but they are now dealing with English words with mixed case... inside the options object declaration.  Does this increase the chance for user mistakes? _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_AND... are we shoving English up the users_t_ butts... possibly unfairly? _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Yes_co_ the options object is optional.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  The old method will still work_co_ right?  But... I think we all can see that... those who speak very little English... will be forced to deal with English if they want to use an options object.  They have to get the key names correct... or else the construction fails. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Are we being unfair and imposing?  Maybe there is no way around it_co_ eh?  But I think we should keep in mind that we are _qt_locking_qt_ these parameter names... to English words.  Maybe we should consider using a language bindings system so that users DO have an option to use key/param names that are in their own language.  Being American_co_ I have no sense of how much... other countries are pushing English in their school systems._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I had an experience_co_ once_co_ based on language.  One time_co_ in a Minneapolis convenience store_co_ I heard two Arab-like men speaking a really interesting language... it was beautiful... and I had to ask them about it.  They told me that the language was over 2000 years old_co_ and... wow... that_t_s a HOLY CRAP for mister Wingnut.  How can anyone ignore a 2000 year old language? _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And thus_co_ here I am_co_ talking to my BJS friends about honoring _qt_golden_qt_ languages.  Only non-native-English-speakers can give me a sense of the feelings behind this_co_ because the language I use... is the default BJS language.  I have no native language that is being left-behind.  Others DO have beloved languages being left-behind.  Are we being unfair to them... unless we try to let them use parameter names that are for THEIR native language?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I still like the idea of an options object.  I guess I_t_m just trying to figure out the long-term ramifications_co_ and trying to predict some of the user problems that could occur._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_------------------_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_As for the names of these keys... I have no issues EXCEPT... _lt_em_gt_tessellation_lt_/em_gt_ and _lt_em_gt_subdivisions_lt_/em_gt_.   Do these two terms mean the same thing_co_ as far as BJS is concerned?  Maybe we should drop the term tessellation... and always use _t_subdivisions_t_.  But maybe that is a bad idea.  Thoughts on this?  Thanks.  Be well_co_ everyone.  Sorry for the long post._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]