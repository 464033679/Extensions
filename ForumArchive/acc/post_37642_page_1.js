[{"Owner":"KamranK","Date":"2018-05-14T16:40:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_ I am new to Babylon.js and trying out different things which I might need to use in future projects.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI was wondering if there is a way to cancel out gravity from physics so the objects don_t_t float away and stay staticÂ and just use the collision aspect of physics where the one mesh wont allow other meshes to pass through it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI found out that if I set the gravity to zero and the Impostor to PlaneImpostor the meshes stay static in space and I can move them around using pointerevents etc but the meshes dontÂ have any interaction (meshes pass through each other when I drag them). I might have to add callbacks but that would be same as using collision detection without the physics engine\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-05-14T20:11:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello and welcome!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo cancel gravity_co_ just set mass to 0\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"KamranK","Date":"2018-05-15T05:15:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI did set mass to zero but the meshes still pass through each other when I drag them. They only interact when they have any mass\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"KamranK","Date":"2018-05-15T06:34:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI guess what I require is not actually something that follows physics so its better to write collision detections\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-05-15T15:40:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYeah you_t_re right.Because the only way for you to have physics is to apply impulses and not moving the meshes directly\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"QuintusHegie","Date":"2018-08-19T20:08:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFollowing up on this topic_co_ is there a way to have the physics impostor working but not applying the gravity force on some meshes?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor example_co_ to simulate _lt_strong_gt_hoovering helicopter_lt_/strong_gt_ at fixed altitude or _lt_strong_gt_plane flying forward_lt_/strong_gt_ without falling?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe option\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_mesh.applyGravity_eq_false_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tDoesn_t_t make a difference for the physics engine.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen I use\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_physicsImpostor.setMass(0)_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tthen the mesh doesn_t_t respond to any force anymore and just sits there still_co_ as if I ran the command\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_physicsImpostor.sleep()_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tsame effect (all physics ignored_co_ even applyImpulse and applyForce and setLineairVelocity etc.).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn the desired scenario the steering of the helicopter and/or plane is done by application of force/impulse. And when two planes hit or plane hits helicopter then the physics engine will compute the new velocities and rotations for me. (For even more game excitement_co_ when a rocket or missile hits the airborne unit _lt_span_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ™‚_lt_/span_gt_ )_lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt_Here_t_s a picture to get the idea_dd__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe difference with a motorEnabled solution (for ground driving car like meshes) is that the plane or helicopter doesn_t_t have a ground surface with friction to _qt_roll up the wheels against_qt_. It is more like that the plane or helicopter motor/propeller cause upward force that compensate gravity. To lower altitude_co_ the upward force on the object is lowered_co_ and the gain altitude the upward force is increased relative to the gravity.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHope someone has some experience with physicEngine on this type of flying/floating meshes/gameobjects. _lt_span_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ™‚_lt_/span_gt_ _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_08/693683213_babylonjshowtokeepairbornemeshesafloatwithgravityphysicsEngine.jpg.3eafb5ec114fb02455eae6d6dd5f7ac7.jpg_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_19674_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_08/693683213_babylonjshowtokeepairbornemeshesafloatwithgravityphysicsEngine.jpg.3eafb5ec114fb02455eae6d6dd5f7ac7.jpg_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_babylonjs how to keep airborne meshes afloat with gravity physicsEngine.jpg_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t\t\t\n\n_lt_span class_eq__t_ipsType_reset ipsType_medium ipsType_light_t_ data-excludequote_gt_\n\t_lt_strong_gt_Edited _lt_time datetime_eq__t_2018-08-19T20_dd_23_dd_13Z_t_ title_eq__t_08/19/2018 08_dd_23  PM_t_ data-short_eq__t_Aug 19_t__gt_August 19_lt_/time_gt_ by QuintusHegie_lt_/strong_gt_\n\t\n\t\t_lt_br_gt_Added illustration\n\t\n\t\n_lt_/span_gt_\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Raggar","Date":"2018-08-19T20:52:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou have a few options to choose from.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEvery frame_co_ you can set the Y velocity of the physics body to 0.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can also apply a constant upward force of the same value as the gravity.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOr you can set the gravity to 0_co_ and then apply downward forces to the bodies you need to apply gravity to.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnother thing is to take the wanted position_co_ let_t_s say (14_co_20_co_32)_co_ and use this to calculate a direction vector based on the current position and the wanted position. Then you apply this vector as your force_co_ to constantly keep the body moving toward the direction. The farther it is from the position_co_ the faster it will go. That behavior can be prevented by scaling the vector by some static value_co_ though.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-08-20T09:00:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/?do_eq_hovercard_qt_ data-mentionid_eq__qt_10310_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/_qt_ rel_eq__qt__qt__gt_@RaananW_lt_/a_gt_Â in case it would make a feature request ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"QuintusHegie","Date":"2018-08-20T21:14:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi Raggar_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for your ideas.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI like this suggestion the most as it keeps most steering options working forces intact for a flying/floating body_dd_\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_225533_qt_ data-ipsquote-contentid_eq__qt_37642_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1534711948_qt_ data-ipsquote-userid_eq__qt_22713_qt_ data-ipsquote-username_eq__qt_Raggar_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 8/19/2018 at 10_dd_52 PM_co_ Raggar said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tYou can also apply a constant upward force of the same value as the gravity.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI would then align this _t_upward_t_ applyForce vector with the direction of the propeller normal direction in world space. (see picture in my previous post)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlayer controls propeller speed and propeller rotation. More propeller power will then result in a higher factor to scale this vector with_sm_ lower propeller power lowers this steering factor and thus the downward gravity force slowly starts to win from the (local) updraft force of the drone. Also_co_ when the propellers rotate 30 degrees around horizontal plane for example_co_ the applied force to the main body will be both upward AND sideways hence making the drone fly forwards and some floating as well using the same steering mechanism.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ll try this approach and let you know if it solved the case.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTake care_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tQ\n_lt_/p_gt_\n\n_lt_p_gt_\n\tP.S. I_t_m also curious how Microsoft Flight Arcade _lt_a href_eq__qt_http_dd_//flightarcade.com/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//flightarcade.com/_lt_/a_gt_ computed the plane vectors and forces_sm_ must have been similar challenge I guess... _lt_span_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ™‚_lt_/span_gt_ _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"QuintusHegie","Date":"2018-08-22T15:42:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tShort update.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo float or hoover a plane/drone/ufo it works to apply a force on every scene render that negates the gravity force by some factor (e.g. 1 for perfect hoover)\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_dronemesh.physicsImpostor.applyForce(\n    scene.getPhysicsEngine().gravity.negate().scaleInPlace(damping_factor * speed_throttle)_co_\n    dronemesh.physicsImpostor.getObjectCenter())_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThe damping factor adjusts the speed throttle of the drone (gamepad axis) so that I can setup different drone lifting power (e.g. drones with bigger or smaller propellers).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen you translate the drone local normal vector by some angle around an axis_co_ then you can add forces to the x and z direction as well in order to steer the drone sideways and backward/forward. I haven_t_t worked out those computations at this moment though_co_ because I first wanted to test if I can make a drone mesh float in air by simulation upward propeller force. _lt_span_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ™‚_lt_/span_gt_ _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tQ\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]