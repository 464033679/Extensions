[{"Owner":"SpaceToast","Date":"2018-11-02T17:30:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_ve been working on an open world project that involves a lot of loading and unloading of assets. (A virtual museum of Earth history.) _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/api/classes/babylon.sceneloader_qt_ rel_eq__qt_external nofollow_qt__gt_SceneLoader_lt_/a_gt_.LoadAssetContainerAsync() seems to be the only means of tracking which and when new assets have been loaded_co_ as SceneLoader.LoadAsync() returns only the current scene.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhere I_t_m running into trouble is the end of the life cycle. _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/api/classes/babylon.assetcontainer_qt_ rel_eq__qt_external nofollow_qt__gt_AssetContainer _lt_/a_gt_does not have a dispose() method. My attempts to manually create one have thus far ended in halt &amp_sm_ catching fire. The removeAllFromScene() method will dispose of the assets* but I_t_m still left with an AssetContainer object from every SceneLoader call. If I clear the assets in a different way_co_ the assets won_t_t garbage collect_co_ because the AssetContainer itself still references them.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHas anyone worked on a similar scenario? How did you manage large volumes of load -&gt_sm_ use -&gt_sm_ forget?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span style_eq__qt_font-size_dd_10px_sm__qt__gt_*AssetContainer.removeAllFromScene() seems to have a problem removing instanced objects_co_ but I_t_ve been too lazy to create a proper bug report. I promise I will!_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"trevordev","Date":"2018-11-02T23:50:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/14946-spacetoast/?do_eq_hovercard_qt_ data-mentionid_eq__qt_14946_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/14946-spacetoast/_qt_ rel_eq__qt__qt__gt_@SpaceToast_lt_/a_gt_ Sounds like a missing feature. I can add this_co_ I guess I_t_ve always manually disposed when working with pretty simplistic assets. Yes please do create a bug for your issue if you have a good repo and I can look at that as well.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCreated this to track the dispose_dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/issues/5456_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/issues/5456_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-11-05T19:00:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFlagging as solved _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt__gt_ Thanks _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/29361-trevordev/?do_eq_hovercard_qt_ data-mentionid_eq__qt_29361_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/29361-trevordev/_qt_ rel_eq__qt__qt__gt_@trevordev_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]