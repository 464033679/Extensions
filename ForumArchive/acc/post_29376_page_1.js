[{"Owner":"Hartha","Date":"2017-03-28T16:47:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m trying to create a line [ linesMesh] with only tow points  and change it_t_s length dynamically or change the second point position_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tis there any way to do that ? \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-03-28T16:59:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tLooks like Babylon.LineMesh stores its vertices just like any other mesh_co_ so mesh._lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.mesh.ts#L757_qt_ rel_eq__qt_external nofollow_qt__gt_updateVerticesData()_lt_/a_gt_ should work.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-03-28T17:14:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tJust re-use the function MeshBuilder.CreateLines() with the parameter _qt_instance_qt_ _dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/tutorials/mesh_createxxx_methods_with_options_parameter#lines_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/tutorials/mesh_createxxx_methods_with_options_parameter#lines_lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-03-28T19:24:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAs the ops issue looks solved by _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5453_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/_qt_ rel_eq__qt__qt__gt_@jerome_lt_/a_gt__co_ I have a couple of questions on why a line system was implemented this way.  The business end of loading is done by _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.mesh.vertexData.ts#L1242_qt_ rel_eq__qt_external nofollow_qt__gt_VertexData.CreateLineSystem_lt_/a_gt_.  I was wondering do indices really need to be loaded?  I thought it was made optional at some point.  Since there is no vertex duplication_co_ it would be a good candidate._lt_span_gt_ _lt_/span_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have been looking at ways to port Blender particle / stranded hair.  I would need about 25_co_000_co_ 6 segment lines.  Even though indices are calculated instead of passed_co_ I would like to know If I could side-step the potential bit 16 int issue on old hardware by not using them?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny implementation could have a fairly complex representation (relative positioning to the last segment) to reduce file size.  So_co_ would probably try to instance a LineMesh directly_co_ once unpacked.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am not sure went I plan to attempt this_co_ but does it look something like this would have to be the only thing in a scene to even work?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-03-28T19:35:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tAlso_co_ can a LineMesh have an armature?  A character could look left / right.  The hair would not have to _qt_fly_qt__co_ but the roots still be on the head in the same place.  If not_co_ will have to make a custom Mesh class_co_ and abandon LineMesh as an alternative.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2017-03-28T19:41:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tActually a line system can render many lines at once_co_ or lines and segments_co_ or plenty of different things that would be displayed with no surface. So indices are needed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s on my todo list to add the line and line system per vertex color... so one render call to display several differently colored lines/segments\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]