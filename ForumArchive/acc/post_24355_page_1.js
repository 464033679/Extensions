[{"Owner":"AlbertTJames","Date":"2016-08-08T23:29:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey everyone_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am currently coding a boilerplate for scientist like myself who wish to create web based tasks using the latest technology the web has to offer _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_ This boilerplate is not aimed to be babylon.js specific but the two main example from which users could build upon would be in 3d in BabylonJS and in 2D probably using ... phaser ? did not decide yet.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe design needs to be built independently of the game engine used and I was wondering if you had any advices on how i should build my object hierarchy.  What is special with experimental tasks is that everything has to be collected at the millisecond_co_ well stored_co_ exportable etc. So beside the general hassle of building a robust game state system I need to handle inputs and data asynchronously.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI created this little flow chart that you are welcome to modify if you have any relevant comment/idea_co_ I_t_ll be very glad to have any input from you guys !\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//drive.google.com/file/d/0BxggOFF8_iXkLUpXeXlyTkh2a2c/view?usp_eq_sharing_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//drive.google.com/file/d/0BxggOFF8_iXkLUpXeXlyTkh2a2c/view?usp_eq_sharing_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you !\n_lt_/p_gt_\n\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_08/57a915eeae009_StateManager.png.e52f89de904087612c6eb1d37776b021.png_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_8951_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_08/57a915eeae009_StateManager.png.e52f89de904087612c6eb1d37776b021.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_State Manager.png_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-08-09T20:37:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthis is cool but I_t_m not sure to catch what you are looking for _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"AlbertTJames","Date":"2016-08-09T23:39:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAhah_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tWell maybe the real question is_co_ how do you keep track of states in a video-game ? Should inputs be treated always asynchronously or should we built some kind of Event heap to treat them in series at each update.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor example I want my system to be able to keep track of the exact time a target appeared on screen_co_ the exact time the subject pressed a key to respond_co_ then wait for a fixed amount of time after keypress before showing a feedback etc.. While making the system high level enough to adapt to any lower level design constraints.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthe way Babylonjs handle event is through the actionManager no? But that is very low level (although it is very powerful and asynchrone).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am currently working on the stateManager and I think the object hierachy will work_co_ but since I want to share it with the community and make a good project people could build upon_co_ I_t_d like to really nail this state management in the best way possible and not make something that just _qt_work_qt_ or reinvent the wheel. I am sure people must have thought about this problem before me and came up with great solutions... no? _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tDo you have any advice on how to manage states at a higher level_co_ the level of the game_co_ or the scene.. ? Or maybe a good ref. on how professional game designer manage states in complex vieogames ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-08-10T15:08:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tit depends on the game and the technology\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tOn the web using JS_co_ there is no asynchronous per se_co_ so you have to deal with event in a serial way. Things seem async but they are not\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere is only one thread and this is a constraint to keep in mind. babylon.js is ultimately using events from inputs (mouse_co_ webvr_co_ touch_co_ etc..) to keep track of input states.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen on every frame_co_ it updates objects state\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2016-08-10T21:29:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYou might use a scene level after renderer to record anything you like_co_ or schedule things to happen on the next frame.  I use one to set my system wide time for the next frame_co_ so all objects will have the same time.  This enables either realtime or fixed FPS.  Also useful for system wide animation pause / resume.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"AlbertTJames","Date":"2016-08-11T01:25:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for the input I will look into that ! \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you think of any other advices I am open to all suggestion. I will share a working version here maybe somebody would have use of an overkill state/datamanager _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nabroski","Date":"2016-08-11T02:08:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/Observables_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/overviews/Observables_lt_/a_gt__lt_br /_gt__lt_br /_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/22270-alberttjames/?do_eq_hovercard_qt_ data-mentionid_eq__qt_22270_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/22270-alberttjames/_qt_ rel_eq__qt__qt__gt_@AlbertTJames_lt_/a_gt_ you can build complex structures with_co_ at least i can.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"AlbertTJames","Date":"2016-08-11T20:54:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOh that_t_s great for keeping track of precise event timing ! Thanks \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-08-11T22:56:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_139510_qt_ data-ipsquote-contentid_eq__qt_24355_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1470864590_qt_ data-ipsquote-userid_eq__qt_8492_qt_ data-ipsquote-username_eq__qt_JCPalmer_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 8/10/2016 at 4_dd_29 PM_co_ JCPalmer said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tYou might use a scene level after renderer to record anything you like_co_ or schedule things to happen on the next frame.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tJust to clarify_co_ I believe JC was talking about scene.afterRender _eq_ function() { record whatever and even hot-swap scene.beforeRender function! }.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOne other thing.  The scene collision system is _qt_rubbery_qt_.  I highly suggest that you NOT use mesh.collider.onIntersect ... to position real-life nano-surgery probes or other _qt_mission critical_qt_ robotics.  _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tkbye.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]