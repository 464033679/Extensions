[{"Owner":"Dad72","Date":"2014-08-02T00:23:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_EH ??? Babylon is written in javascript for use in 3d on browser and not for application windows with dll._lt_br_gt_There are _lt_a href_eq__qt_http_dd_//code.msdn.microsoft.com/windowsapps/Babylon-3D-engine-f0404ace_qt_ rel_eq__qt_external nofollow_qt__gt_Babylon with SilverLight 5_lt_/a_gt_ If you want to_co_ here it is for javascript. your ideas is totally off topic._lt_br_gt_ _lt_br_gt_You_t_ve already seen dll with Javascipt? And if you read_dd_ Babylon_lt_strong_gt__lt_span style_eq__qt_color_dd_#b22222_sm__qt__gt_.js _lt_/span_gt__lt_/strong_gt_It is far from the WinForms in a browser_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"testure","Date":"2014-08-02T01:42:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Not sure if these things have been mentioned or not but_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_- Better/more complete implementation of cannon- There are a ton of features cannon has that have not been exposed in babylon.. I_t_ve had to go through my project and add support for these features to accomplish my goals- once I finish I may do a pull request_co_ but there are still a lot of things missing._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_- More widespread use of common functionality. For example- I can parent a mesh to another mesh. Why can_t_t I parent a camera to a mesh_co_ or parent a particleSystem to a camera? Why can i use mesh.setPositionWithLocalVector but matrix.setPositionWithLocalVector doesn_t_t exist? Why can I animate some things but not others? If it moves_co_ it should be animatable_co_ just like a mesh._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_- More control over what gets cleared by a scene. Right now you can specify a clear color_co_ or tell it not to autoclear at all- but what if I just want to clear depth? Doesn_t_t seem to be a way to do that without going into my gameloop and calling engine.clear manually every frame._lt_/p_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_- More asset deployment options. Large minified json strings stored in files is fine and all.. but why not have something that_t_s decompressed on the client and minimize download sizes? Or better yet_co_ why not use a compressed binary format?_lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_p_gt_- Ability to control global time scale. right now _qt_pausing_qt_ a game is no trivial task. You can stop rendering easy enough- but logic that relies on time keeps on ticking (example_dd_ particle systems). Which is a nice segue into..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_- More robust particle system. What babylon has is pretty bare bones_co_ and it_t_s certainly better than nothing at all.. but it emits particles_co_ and that_t_s about it. Doing modern effects with babylon isn_t_t really feasible as it is now_co_ I_t_ve had to add support for essential features like color over lifetime_co_ size over lifetime_co_ randomized rotation angle at spawn_co_ velocity dampening_co_ and emitter offsets (using an object as an emitter_co_ and then offsetting in local space from there). Again_co_ when I_t_m finished with this project I_t_ll be doing a pull request. Additional particle system features that would bring it into modern standards_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p style_eq__qt_margin-left_dd_40px_sm__qt__gt_- Better shader support. Honestly a particle system should just take a material as a property and use it. Blending should be done by the material_t_s shader_co_ not by a flag. This would allow for a robust set of default particle shaders that can do things like lighting_co_ _lt_/p_gt__lt_p style_eq__qt_margin-left_dd_40px_sm__qt__gt_ _lt_/p_gt__lt_p style_eq__qt_margin-left_dd_40px_sm__qt__gt_- Animated particles/spritesheets._lt_/p_gt__lt_p style_eq__qt_margin-left_dd_40px_sm__qt__gt_ _lt_/p_gt__lt_p style_eq__qt_margin-left_dd_40px_sm__qt__gt_- Particle event callbacks. IE) collisions_co_ birth_co_ death_co_ etc. With a callback you could fire off a function that has gameplay implications_co_ or just spawn another particle emitter. For example_co_ a drop of water hitting the ground could emit several smaller particles- or a fire particle could start emitting smoke particles when it dies._lt_/p_gt__lt_p style_eq__qt_margin-left_dd_40px_sm__qt__gt_ _lt_/p_gt__lt_p style_eq__qt_margin-left_dd_40px_sm__qt__gt_- Control over particle billboard direction. Sometimes you want to billboard to a camera_co_ sometimes you want to billboard in a specific direction._lt_/p_gt__lt_p style_eq__qt_margin-left_dd_40px_sm__qt__gt_ _lt_/p_gt__lt_p style_eq__qt_margin-left_dd_40px_sm__qt__gt_- Control over emission space. You_t_re not always going to want to emit in world space._lt_/p_gt__lt_p style_eq__qt_margin-left_dd_40px_sm__qt__gt_ _lt_/p_gt__lt_p style_eq__qt_margin-left_dd_40px_sm__qt__gt_- Better control over particle emission. Right now we can supply two direction vectors and a particle will spawn with a randomized vector that exists somewhere between those two. It_t_s better than nothing- but it makes certain effects extremely hard to make. It_t_d be nice to be able to have a cone emitter_co_ as an example- where you specify an angle and direction_co_ and particles will emit in that area. Or a sphere emitter_co_ where particles spawn inside a given radius and emit in any random direction._lt_/p_gt__lt_p style_eq__qt_margin-left_dd_40px_sm__qt__gt_ _lt_/p_gt__lt_p_gt_- Deferred rendering path. Making a halfway decent looking game with four lights is certainly possible_co_ but it makes achieving any level of modern quality difficult. With deferred rendering we could have any number of pixel lights in addition to the various buffers that make certain shaders more cost effective._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_- Better control over shadow maps. IE) draw distance_co_ cascades for softer shadows_co_ etc._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m sure I_t_ll think of more_co_ I don_t_t have a ton of experience with Babylon.js yet_co_ but I have many many years of experience in other engines. I did a lot of research on what was available in the WebGL space_co_ and even in a very early state Babylon.js blows everything else out of the water. I intend to add my own improvements for the _t_greater good_t_ once I_t_m ready._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"memomind","Date":"2014-08-02T02:40:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_span_gt_dad72_lt_/span_gt__lt_p_gt__lt_span_gt_Thanks for answer \\\\_lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span_gt_I know_co_ But i_t_m just added an idea_co_ I think maybe work in the future _lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span_gt_babylon for silverlight 5_co_ I think it old not Update like babylonjs _lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span_gt_DLL for javascript_co_ No!_co_ but I_t_m new in webgl and I_t_m want high level engine to learn 3d easily_co_ and I will start with babylonjs_co_ 3D Apps for web is wonderful Idea and solution _lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span_gt_but I don_t_t know how to use and setup babylonjs and what_t_s IDE I must use it to create 3d apps on web ?_lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span_gt_And I found babylonjs with Typescript_co_ so i can Use babylonjs with Visual studio 2012 and higher _co_ so how to setup Typescript for visual studio 2012 and setup and use babylonjs with TS?_lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span_gt_Thanks again brother _lt_/span_gt__lt_/p_gt_\t_lt_span_gt_dad72_lt_/span_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2014-08-02T10:59:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@ Testure. Be aware that babylon is still young and evolves very often. He can_t_t see in 1 years features an engine that has 5 or 10 years._lt_/p_gt__lt_div_gt_But if you can contribute to the changing also_co_ it_t_d be great. the engine needs person to contribute to do so going forward._lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_@memomid_dd_ Never babylon.js not support dll and winform is impossible. browsers do not use dll to display a web page or 3d browser._lt_/div_gt__lt_div_gt_Your idea is specific Windows application_co_ babylon.js is not destine to make a windows application._lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2014-08-02T13:39:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_testure_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_s actually 4 lights per mesh. You can have as many lights as you want._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"testure","Date":"2014-08-02T16:32:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_49554_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_3865_qt_ data-ipsquote-username_eq__qt_dad72_qt_ data-cite_eq__qt_dad72_qt_ data-ipsquote-timestamp_eq__qt_1406977195_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_@ Testure. Be aware that babylon is still young and evolves very often. He can_t_t see in 1 years features an engine that has 5 or 10 years._lt_/p_gt__lt_div_gt_But if you can contribute to the changing also_co_ it_t_d be great. the engine needs person to contribute to do so going forward._lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_I_t_m well aware of how engine development works  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This thread is titled _qt_What do you want in babylonjs_qt__co_ so that_t_s what I_t_ve enumerated. You_t_ll also notice that I mentioned improvements that I_t_ve made that I intend to contribute to the engine._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_testure_co__lt_/span_gt__lt_/p_gt__lt_p style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_ _lt_/p_gt__lt_p style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_I_t_s actually 4 lights per mesh. You can have as many lights as you want._lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_Oh_co_ I know- perhaps my wording was strange._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-08-02T17:17:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@TEsture_dd_You can_lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_ parent a camera to a mesh_co_ or even a camera to a light. Particle system has an emitter which can be parented to anything._lt_/span_gt__lt_/p_gt__lt_p_gt_@TEsture_dd_For particles_co_ you can provide your own function to create and move particles. using color1/2 and colordead you have control for color over lifetime_co_ also _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_randomized rotation angle at spawn is already supported. Same thing for _lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_emitter offsets._lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_BTW I added _qt_custom shader_qt_ for particles system in the roadmap_lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2014-08-02T17:20:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_testure_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_As far as deployment with binary format_co_ I think I saw this was mentioned as a do to a while ago.  Of course_co_ you can always put gzip on your web server.  If transmission size is your main concern_co_ sticking with text format &amp_sm_ gzip sounds more attractive_co_ with no compiler/loader code maintenance costs by someone too.  I personally have abandoned the scene as data approach for scene as code module_co_ using a Blender exporter I call Tower of Babel._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I am also thinking about stuff in the time area.  Am working on a mesh sub-class_co_ I call automaton.  It is for mesh deformations over time_co_ supplied from Blender shape-keys.  Deformations are also coordinated with mesh positioning &amp_sm_ rotation.  In development_co_ it would be handy to slow things down with some kind of global setting.  Thinking further_co_ if there were an exception capability_co_ then it could be used beyond dev for some kind of _qt_super-fast_qt_ power.  It would actually slow everything else down_co_ but done at the system level_co_ rather than application._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you are planning on writing stuff you intend to contribute_co_  I would just declare what you plan on doing._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Jeff_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"testure","Date":"2014-08-02T18:38:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Deltakosh_dd_ are these in the latest stable build? or in a beta version? I_t_m using 1.12_co_ and I don_t_t see any way to randomize rotation angle at spawn_co_ offset the emitter location when attached to an object. I know that emitter can either be a mesh object or a point in space- I_t_m talking about a combination of the two. Using a mesh object and then making a local offset rather than using the mesh_t_s pivot point as the emission point. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_49578_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_3865_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1406999863_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_using color1/2 and colordead you have control for color over lifetime_co_ also _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_randomized rotation angle at spawn is already supported. Same thing for _lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_emitter offsets._lt_/span_gt__lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This isn_t_t exactly what I mean- yes you have control over the start and end colors of a particle_co_ but in any modern particle system you_t_re able to use multiple colors along the lifespan of a particle (this is a feature I_t_ve recently added in my own project). For example_co_ you want to make a fire particle in babylon currently_co_ you can specify a randomized start color_co_ let_t_s say red or yellow_co_ and then a dead color. so red/alpha zero. This looks nothing like fire _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ A rudimentary fire emitter would start with something like a light blue at t_eq_0_co_ then around t_eq_.25 it would interpolate to a yellow_co_ then t_eq_.6 it would be orange_co_ then t_eq_1 it would be red with alpha zero. In that example t is just a 0-1 scalar representation of the particle_t_s lifespan (however long it may be). _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It_t_s worth noting that the example I just used could theoretically be made in babylon as it currently exists_co_ but you would have to layer up several particle systems that would add a lot of unnecessary overdraw_co_ vertices_co_ and boilerplate code to set them up._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-08-02T19:29:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yes this is in the stable build_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_To define rotation angle_dd_ _lt_span style_eq__qt_color_dd_rgb(51_co_51_co_51)_sm_font-family_dd_Consolas_co_ _t_Liberation Mono_t__co_ Menlo_co_ Courier_co_ monospace_sm_font-size_dd_12px_sm__qt__gt_minAngularSpeed and _lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(51_co_51_co_51)_sm_font-family_dd_Consolas_co_ _t_Liberation Mono_t__co_ Menlo_co_ Courier_co_ monospace_sm_font-size_dd_12px_sm__qt__gt_maxAngularSpeed_lt_/span_gt__lt_/p_gt__lt_p_gt_To offset emitter location_dd_ _lt_span style_eq__qt_color_dd_rgb(51_co_51_co_51)_sm_font-family_dd_Consolas_co_ _t_Liberation Mono_t__co_ Menlo_co_ Courier_co_ monospace_sm_font-size_dd_12px_sm__qt__gt_minEmitBox_lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(51_co_51_co_51)_sm_font-family_dd_Consolas_co_ _t_Liberation Mono_t__co_ Menlo_co_ Courier_co_ monospace_sm_font-size_dd_12px_sm__qt__gt_ and _lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(51_co_51_co_51)_sm_font-family_dd_Consolas_co_ _t_Liberation Mono_t__co_ Menlo_co_ Courier_co_ monospace_sm_font-size_dd_12px_sm__qt__gt_maxEmitBox_lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(51_co_51_co_51)_sm_font-family_dd_Consolas_co_ _t_Liberation Mono_t__co_ Menlo_co_ Courier_co_ monospace_sm_font-size_dd_12px_sm__qt__gt_ _lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"testure","Date":"2014-08-02T22:12:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_49578_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_3865_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1406999863_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_@TEsture_dd_You can_lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_ parent a camera to a mesh_co_ or even a camera to a light._lt_/span_gt__lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_right but the behavior is weird. If you parent a camera to an object_co_ and then have the camera lock to that target_co_ you end up with an additive effect where the camera is looking somewhere else entirely. Also I just tested parenting a light to a camera_co_ that didn_t_t work. Parenting a light to a mesh didn_t_t work. The point I was trying to make is that there_t_s functionality across the board that is inconsistent. Even the fact that a mesh uses .parent to attach to another object_co_ but a particle system uses .emitter to achieve the same result is just confusing for people who are trying to adopt the engine._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-08-02T22:28:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_If you find bug_co_ just provide a repro case or even better a pull request to fix it. Light should works when parented to a mesh_co_ Same for a camera._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here an example of a light attached to a camera_dd__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs.com/playground/#1BV0XY_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/playground/#1BV0XY_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-08-02T22:29:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_parenting and defining an emitter is not the same thing. The emitter can be a vector3 or a mesh. So this is not the related to parenting_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2014-08-13T08:43:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt__lt_u_gt__lt_span style_eq__qt_font-size_dd_18px_sm__qt__gt_Keep the context when calling onAnimationEnd in animations_lt_/span_gt__lt_/u_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In an animation_co_ would it be possible to set the context when calling this.onAnimationEnd() ?_lt_/p_gt__lt_p_gt_For example_co_ I have a class _t__lt_strong_gt_Piece_lt_/strong_gt__t_ with a method _lt_strong_gt_Piece.prototype.setRed_lt_/strong_gt_ (setting its color to red)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I want to call this method when a specific anmation is finished_co_ so I do something like this _dd_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var anim _eq_ // create animation...this.scene.beginAnimation(this_co_ 0_co_ 100_co_ false_co_ 20_co_ this.setRed)_sm__lt_/pre_gt__lt_p_gt_However_co_ this.setRed will never be called_co_ because of this code in babylon.js _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (this.onAnimationEnd) {    this.onAnimationEnd()_sm_} _lt_/pre_gt__lt_p_gt__t__lt_em_gt_this_lt_/em_gt__t_ is the _lt_strong_gt_Animatble _lt_/strong_gt_object_co_ and not my _lt_strong_gt_Piece _lt_/strong_gt_object. It could be cool to do something like this _dd_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (this.onAnimationEnd) {   this.onAnimationEnd.call(this.ctx_co_ null)_sm_} _lt_/pre_gt__lt_p_gt_What do you think about it ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-08-13T14:58:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I_t_m not sure to get it. Why do you say _qt__lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_this.setRed will never be called_qt_ ?. It should be called AFAIC_lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2014-08-13T15:33:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The function called will be_dd_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_this (the animatable Object) . setRed () _eq__eq_&gt_sm_ _lt_strong_gt_undefined is not a function_lt_/strong_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_instead of _dd_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_this (the piece Object) . setRed() _eq__eq_&gt_sm_ color changed_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-08-13T17:11:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Could you create a playground quickly? I_t_m not sure to get it_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"AlexB","Date":"2014-08-15T03:12:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I would like the Blender exporter to only export selected models into the .babylon file. As far as I can tell_co_ it exports every mesh_co_ even meshes set to hidden or placed on other layers. Ideally_co_ you could have a checkbox that says _qt_export all layers_qt_ and _qt_export hidden meshes_qt_. Perhaps even _qt_export lights_qt_ and _qt_export cameras_qt_ as well._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thoughts?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2014-08-15T07:50:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_50939_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_3865_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1407949883_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Could you create a playground quickly? I_t_m not sure to get it_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Nevermind_co_ I found my problem (my bad)... Here is the fix _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs.com/playground/#OWNYO_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/playground/#OWNYO_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I was calling (does not work_co_ I don_t_t get why)_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt__this.scene.beginAnimation(_this_co_ 0_co_ 100_co_ false_co_ 2.0_co_ _this.setRed)_sm__lt_/pre_gt__lt_p_gt_instead of (works) _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt__this.scene.beginAnimation(_this_co_ 0_co_ 100_co_ false_co_ 2.0_co_ function() {_this.setRed()})_sm__lt_/pre_gt__lt_p_gt_Thanks anyway._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-08-15T20:46:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I like the _qt_export only selected_qt_ features for both max and blender (added to the roadmap)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2014-08-18T13:30:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_51112_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_3865_qt_ data-ipsquote-username_eq__qt_AlexB_qt_ data-cite_eq__qt_AlexB_qt_ data-ipsquote-timestamp_eq__qt_1408072360_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_I would like the Blender exporter to only export selected models into the .babylon file. As far as I can tell_co_ it exports every mesh_co_ even meshes set to hidden or placed on other layers. Ideally_co_ you could have a checkbox that says _qt_export all layers_qt_ and _qt_export hidden meshes_qt_. Perhaps even _qt_export lights_qt_ and _qt_export cameras_qt_ as well._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thoughts?_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_Implementation wise_co_ exclusion checkboxes for meshes / lights / and cameras is the easiest method.  It also provides the most control.  Having .blend wide custom properties might be difficult and / or need to be placed in a odd location in the UI._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It appears that you may create your own _qt_dialog boxes_qt_ which might be shown prior to the output file chooser_co_ but the knowledge that this exists is all that I have._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-08-18T20:57:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_New feature pushed to repo_dd_ New _qt_Export only current layer_qt_ added to blender exporter_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"AlexB","Date":"2014-08-19T01:11:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"tumira","Date":"2014-08-19T04:36:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Support for CocoonJS and Ejecta._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2014-08-19T17:32:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I would love too but I do not know what supporting CocoonJS and ejecta implies_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For Ejecta_co_ I think this is already working correct?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]