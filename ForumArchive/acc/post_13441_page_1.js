[{"Owner":"dsman","Date":"2015-03-27T14:37:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_What I am looking for reflection on 3D objects and not plane like mirror. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I checked advanced texture playground code here _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#EKFLA_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#EKFLA_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Following line in that example confuses me. _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_mirrorMaterial.reflectionTexture.mirrorPlane _eq_ new BABYLON.Plane(0_co_ -1.0_co_ 0_co_ -10.0)_sm__lt_/pre_gt__lt_p_gt_It works for plane. But what about 3D mesh for example car body ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Also I don_t_t want to use cubemap . Just want to use live reflection. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I have a scene in which I want to make one mesh reflect. I know mesh name . So I did following but obviously it won_t_t work. _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var meshgloss _eq_ scene.getMeshByName(_qt_front_wall1_qt_)_sm_meshgloss.material.reflectionTexture _eq_ new BABYLON.MirrorTexture(_qt_mirror_qt__co_ 512_co_ scene_co_ true)_sm_var gloss _eq_ new BABYLON.Plane(0_co_ -1.0_co_ 0_co_ -10.0)_sm_ gloss.transform _eq_ meshgloss.transform _sm_ meshgloss.material.reflectionTexture.mirrorPlane _eq_  glossmeshgloss.material.reflectionTexture.renderList _eq_  [commode]_sm_meshgloss.material.reflectionTexture.level _eq_ 0.5_sm_ _lt_/pre_gt__lt_p_gt_On a separate note _co_ is there a better way to create steel object ? Other than using cubetexture on it ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-03-27T15:22:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Regarding live reflection for complex meshes - _lt_/p_gt__lt_p_gt_A reflection texture renders a list of objects (set in the render list) to a given plane_co_ just like the camera renders all of the visible meshes to your 2d screen. The plane is more than required  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ . technically_co_ you could create a reflection plane for each plane your mesh has (a box would have 6_co_ a sphere would have... a lot) and use the submeshes and multimaterial support BabylonJS has to set a different reflection texture to all of them. I am pretty sure this will kill performance on high-poly meshes._lt_/p_gt__lt_p_gt_You can try doing it here - _lt_a href_eq__qt_http_dd_//materialeditor.raananweber.com/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//materialeditor.raananweber.com/_lt_/a_gt_ . Take the box_co_ divide it to 6 equal submeshes and set each submesh with a reflection mirror texture. You will then have a cool mirroring cube. Try doing that with a different object and you will understand it_t_s a hard task. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Regarding calculating a new plane - This was a long discussion as to the meaning of a_co_b_co_c_co_d etc_t_. I can only say how I calculate planes - _lt_/p_gt__lt_p_gt_I use BABYLON.Plane.FromPoints(p1_co_ p2_co_p3) function_co_ giving it 3 points in space that I know are on the plane . look here - _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Extensions/blob/2d439c1806c2d6a74959404be365c23e866310c6/MaterialEditor/MaterialEditor/material/MaterialController.ts#L110_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Extensions/blob/2d439c1806c2d6a74959404be365c23e866310c6/MaterialEditor/MaterialEditor/material/MaterialController.ts#L110_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_About the steel object - the reflection is the best effect I know to achieve that (I guess the other will have different suggestions). You don_t_t have to use cube texture_co_ you could use a single spherical or planar projection and then only need one single image. But it is technically the same_co_ other than the number of images used. A reflection texture must be set._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-03-27T15:47:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Well said_co_ RaananW... and hi to you both_co_ and to all forum users._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you visit our CYOS_co_ you will see a simulated chrome_co_ done via shader_co_ at that site. (I used CYOS_t_ cool GET ZIP feature to do the robbery).  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I borrowed that sim-chrome technique and made a playground scene with it...  _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1IZ4X0_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1IZ4X0_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m not sure if it will be useful to you_co_ but it sure does do a nice reflection-like activity... rather drool-worthy.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  It doesn_t_t reflect any objects from the scene... but it reflects an image._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Over in the decals topic_co_ deltakosh recently told me something about rendering a camera view as an image. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__qt_This is possible by rendering only the object and its decals to a rendertexture and then use this texture like any texture._qt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This means... you could _qt_take a picture_qt_ of your entire scene from some camera view_co_ create the renderTexture... then use IT as the refTexture (line 79 of the above demo) for the shader. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The viewers would see a reflection of your scene... because you took a picture of your scene at a certain angle.  The user would THINK they are seeing the scene reflected in the _qt_metal_qt__co_ but no_co_ its a renderTexture IMAGE of your scene.  Good sneaky fun._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dsman","Date":"2015-03-29T18:27:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_ @_lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_RaananW  Thanks for you answer. _lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Even if we are limited to doing reflection on plane and not 3D mesh_co_ it is fine. But method of creating reflectionTexture requires _qt_mirrorPlane_qt_ in form of BABYLON.Plane() .  To create that plane I need to know normal and distance from world_t_s center if I am not wrong. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Now_co_  what to do in scenario where we are importing 3D Max model and we don_t_t know position/rotation of mirror present in the model ? _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Basically I have mirror in my scene and I want to show live reflection in it. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-03-30T07:44:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I have to admit I am not the biggest 3D Max expert (I am probably not on the top 100_co_000 as well _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_ ). _lt_/p_gt__lt_p_gt_I would simply do it using a bit of javascript after the scene has fully loaded._lt_/p_gt__lt_p_gt_Read 3 points from the plane (the actual mesh)_co_ convert them to world coordinates and use them to set the mirror plane_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var mesh _eq_ thePlaneMeshToBeUsed_sm_ //or any other mesh_co_ but you will have to make sure that the 1st 3 points are the ones you are looking for)var subMeshIndex _eq_ 0_sm_ // in case you want to set the plane to a submesh and not the main meshvar pointsArray_dd_ Array&lt_sm_BABYLON.Vector3&gt_sm_ _eq_ []_sm_var meshWorldMatrix _eq_ mesh.computeWorldMatrix()_sm_var verticesPosition _eq_ mesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm_//handle submeshesvar offset _eq_ 0_sm_if (this.isMultiMaterial) {    offset _eq_ mesh.subMeshes[subMesIndex].indexStart} for (var i _eq_ 0_sm_ i &lt_sm_ 3_sm_ i++) {    var v _eq_ mesh.getIndices()[offset + i]_sm_     pointsArray.push(BABYLON.Vector3.TransformCoordinates(BABYLON.Vector3.FromArray(verticesPosition_co_ v*3)_co_ meshWorldMatrix))_sm_}var plane _eq_ BABYLON.Plane.FromPoints(pointsArray[0]_co_ pointsArray[1]_co_ pointsArray[2])_sm__lt_/pre_gt__lt_p_gt_I guess others have different ways of doing that_co_ I found this the most useful one. _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dsman","Date":"2015-03-30T14:31:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@RaananW  I am sorry if I sound dumb . Be will have to set size of plane  that we get by BABYLON.Plane.FromPoints_co_   No ?  I understood above method of getting mirrorplane. But I didn_t_t get the result in my app. I still check what could be wrong. But I am doubting the size of plane could be the issue. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Also on separate note.  I have another problem of generating parallel planes dynamically to existing plane in the model _co_ which can be positioned and rotated anywhere. Do you think FromPoint method solution can help me there ? I had asked this in seperate thread here _dd_ _lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/13336-how-to-draw-parallel-mesh/_qt__gt_http_dd_//www.html5gamedevs.com/topic/13336-how-to-draw-parallel-mesh/_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-03-30T14:59:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi_co__lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//en.wikipedia.org/wiki/No_such_thing_as_a_stupid_question_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//en.wikipedia.org/wiki/No_such_thing_as_a_stupid_question_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The Plane set by the BABYLON.Plane.FromPoint is only the plane definition (in space) required for the mirror reflection. the actual size of the Mesh-Plane (created using BABYLON.Mesh.CreatePlane for example) is the one setting the size of the mirror._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#PHNEX_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#PHNEX_lt_/a_gt_ is using ths code i pasted with two modifications -  _lt_span_gt_mesh_lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(102_co_102_co_0)_sm__qt__gt_._lt_/span_gt__lt_span_gt_compute_lt_/span_gt_WorldMatrix(true)_sm_ to force new computation_co_ and the subMeshIndex was a typo..._lt_/p_gt__lt_p_gt_See if it helps you._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_BTW_co_ only two meshes were added to the render list_co_ so not all spheres will reflect. Developers are the laziest people in the world..._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dsman","Date":"2015-03-30T19:16:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I realized that reflectionTExture.mirrorPlane is logical plane and not mesh and hence it doesn_t_t require size after posting question. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In my code if I use following it works fine and here_t_s output - _lt_a href_eq__qt_http_dd_//prntscr.com/6ndv6i_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//prntscr.com/6ndv6i_lt_/a_gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_mirrormesh.material.reflectionTexture.mirrorPlane _eq_   new BABYLON.Plane (0_co_0_co_ 1_co_ -700.0) _sm_ _lt_/pre_gt__lt_p_gt_But if I use your method _co_ it shows transparent mirror - _lt_a href_eq__qt_http_dd_//prntscr.com/6ndwas_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//prntscr.com/6ndwas_lt_/a_gt__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_var mirrormesh\t\t_eq_ scene.getMeshByName(_qt_mirror_reflective_material_qt_)_sm_ // this is mesh from imported model\t\t\tvar pointsArray  _eq_ []_sm_\t\t\tvar meshWorldMatrix _eq_ mirrormesh.computeWorldMatrix()_sm_\t\t\tvar verticesPosition _eq_ mirrormesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)_sm_\t\t\t  \t\t\tfor (var i _eq_ 0_sm_ i &lt_sm_ 3_sm_ i++) {\t\t\t\tvar v _eq_ mirrormesh.getIndices()[ i]_sm_\t\t\t\t pointsArray.push(BABYLON.Vector3.TransformCoordinates(BABYLON.Vector3.FromArray(verticesPosition_co_ v*3)_co_ meshWorldMatrix))_sm_\t\t\t}\t\t\tvar mirrorplane _eq_ BABYLON.Plane.FromPoints(pointsArray[0]_co_ pointsArray[1]_co_ pointsArray[2])_sm_\t\t\t \t\t\t\t\t\t\tmirrormesh.material.reflectionTexture _eq_ new BABYLON.MirrorTexture(_qt_mirror_qt__co_ 1024_co_ scene_co_ true)_sm_ //Create a mirror texture\t\t\t \t\t\tmirrormesh.material.reflectionTexture.mirrorPlane _eq_   mirrorplane _sm_ // new BABYLON.Plane (0_co_0_co_ 1_co_ -700.0) _sm_ \t\t\tmirrormesh.material.reflectionTexture.renderList _eq_  scene.meshes_sm_\t\t\tmirrormesh.material.reflectionTexture.level _eq_ 0.9_sm_ //Select the level (0.0 &gt_sm_ 1.0) of the reflection\t\t\tmirrormesh.material.diffuseColor  _eq_ new BABYLON.Color3(0.2_co_0.2_co_0.2)_sm__lt_/pre_gt__lt_p_gt_If I just change _qt_mirroeplane_qt_ to _qt_new BABYLON.Plane (0_co_0_co_1_co_-700.0)_qt_ for reflectionTexture.mirrorPlane it shows up fine. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What could be wrong here ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-03-30T19:53:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_have you tried forcing the calculation of the world matrix?_lt_/p_gt__lt_p_gt_line 3 - _lt_/p_gt__lt_p_gt__lt_span style_eq__qt_color_dd_rgb(0_co_0_co_136)_sm__qt__gt_var_lt_/span_gt__lt_span_gt_ meshWorldMatrix _lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(102_co_102_co_0)_sm__qt__gt__eq__lt_/span_gt__lt_span_gt_ mirrormesh_lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(102_co_102_co_0)_sm__qt__gt_._lt_/span_gt__lt_span_gt_computeWorldMatrix_lt_/span_gt__lt_span style_eq__qt_color_dd_rgb(102_co_102_co_0)_sm__qt__gt_(_lt_strong_gt_true_lt_/strong_gt_)_sm__lt_/span_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Might be the problem._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Another problem might be that the plane that is actually calculated is wrong due to wrong points selected. Is this mesh you selected a complex mesh? or really only a plane?_lt_/p_gt__lt_p_gt_You need to know the index positions of the correct points you want to use._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dsman","Date":"2015-03-31T09:49:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@RaananW  Looks like the mesh is not a plane. It was cube. Sorry for all trouble. Now the question is how do I get plane of the face of cube which is facing the camera ? _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The cube where I want to show mirror reflection could be anywhere in the model. But one thing is sure that it will be cube_co_  And that we will want show reflection on face of cube _co_ which consists of four closest corner point of cube from camera.  _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-03-31T20:47:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Finding the right points is the trick here - You need to know the indices of the points you want to use. This is rather complex to explain how to do it. But i can suggest something else - _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This is a silly hack_co_ but it is the simplest I could find_co_ without analyzing the vertex data of the mesh itself_dd__lt_/p_gt__lt_ol_gt__lt_li_gt_Add a pick trigger to the mesh (example at _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/_lt_/a_gt_ _co_ choose picking). Make sure fast checking is on to get the correct points. _lt_/li_gt_\t_lt_li_gt_Click at three points on the plane you want to create a mirror on and log them._lt_/li_gt_\t_lt_li_gt_Use those three points to create your plane  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  ._lt_/li_gt__lt_/ol_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It might sound silly_co_ and learning how to calculate the plane correctly might be a bit more helpful in other cases_co_ but for a quick result that will work_co__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dsman","Date":"2015-04-01T07:38:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@RaananW  I knew about picking method. But that works only at development time and I will have input static hardcoded values for plane in the code.  In my app _co_ I want this to be done completely dynamically at runtime. _lt_br_gt__lt_br_gt_What at max we can do is to put four markers (invisible cubes or something)  in 3Dmax model at four corner around mirror. So that in babylon runtime we can find those markers and create plane which contains them. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But then I don_t_t know what to use as marker in 3Ds max. Shall I use small cubes or spheres ? _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-04-01T08:13:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You will have to detect the plane by yourself. I believe the plane must be recalculated if the object moves_co_ so I guess you will anyhow have to do this. If the object doesn_t_t move_co_ getting the plane_t_s values once will suffice_co_ this is why I suggested the picking hack._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Some good resources to start with would be - _lt_a href_eq__qt_http_dd_//mathworld.wolfram.com/Plane.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//mathworld.wolfram.com/Plane.html_lt_/a_gt_ _lt_a rel_eq__qt_external nofollow_qt__gt_or _lt_/a_gt__lt_a href_eq__qt_http_dd_//keisan.casio.com/exec/system/1223596129_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//keisan.casio.com/exec/system/1223596129_lt_/a_gt_ _co_ the variables you are looking for is a_co_b_co_c_co_d that actually construct the plane_t_s equation. _lt_/p_gt__lt_p_gt_The first 3 variables (a_co_b_co_c) could be taken from a normal of one of the points (or if you know the normal_co_ simply use it). d however must be calculated using a known point on the plane. So you will have to know the position of the mesh points you want to use as a mirror. Or at least their absolute position._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]