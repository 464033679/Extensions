[{"Owner":"dsman","Date":"2016-05-17T16:27:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWhat is the difference between PBR materials and standard material with reflections ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCan_t_t we achieve same result as PBR by having reflection using reflection probe on meshes with standard material ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2016-05-17T17:15:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAbout the reflection only_co_ for a fully reflective and smooth surface like a mirror_co_ you could achieve the same result with both materials.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut_co_ here is the list of what the PBR bring on top of the standard material concening the reflection_dd_\n_lt_/p_gt_\n\n_lt_ul_gt__lt_li_gt_\n\t\tA default Fresnel (Schlick fresnel approximation)_dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/Physically_Based_Rendering#where-are-my-fresnels_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/overviews/Physically_Based_Rendering#where-are-my-fresnels_lt_/a_gt_\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tGamma Correction_dd_ _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/overviews/Physically_Based_Rendering_Master#gamma-correction_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/overviews/Physically_Based_Rendering_Master#gamma-correction_lt_/a_gt_\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tGlossiness available through HDR Texture with seamless blur accross faces_dd_ _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/overviews/Physically_Based_Rendering_Master#seamless-cubemap_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/overviews/Physically_Based_Rendering_Master#seamless-cubemap_lt_/a_gt_\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tEnvironment irradiance used to lit the model if used with HDR Texture_dd_ _lt_a href_eq__qt_https_dd_//doc.babylonjs.com/overviews/Physically_Based_Rendering_Master#environment-irradiance_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/overviews/Physically_Based_Rendering_Master#environment-irradiance_lt_/a_gt_\n\t_lt_/li_gt_\n_lt_/ul_gt__lt_p_gt_\n\tSo basically_co_ the reflection fits in a lighting model closer from physical light.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYour model could also simply be lit by the environment map (e.g. reflection texture) through this system. The following PG does not have any light and you can see a fully white sphere both with standard (black cause the environment does not lit it) and pbr material (impacted by the color of the environment around).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1P98HI%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1P98HI#4_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf I understand well_co_ you are planning on using the reflection probes which are not integrated with Environment Irradiance or Seamless CubeMap. You then would not see a lot of advantages on using the PBR (on the reflection side only).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlease_co_ do not hesitate if you need more information.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dsman","Date":"2016-05-17T18:28:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/20193-sebavan/?do_eq_hovercard_qt_ data-mentionid_eq__qt_20193_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/20193-sebavan/_qt_ rel_eq__qt__qt__gt_@Sebavan_lt_/a_gt_  Thanks for reply. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo if I understand correctly_co_ everything from reflection to irradiance and zero-light_co_  depends on cubemaps. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo can_t_t PBR in babylon do everything (reflection_co_ irradiance) based on live scene that is being rendered? Without use of cube maps ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2016-05-17T19:13:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe main issue is time (16 ms).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI had to create an extension to preprocess and binary pack cube map cause extracting information and preprocessing it takes around 1 minutes (on only one core) for 256 size on a good machine...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAbout irradiance It is faster but still way too slow to do each frame.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think on some use cases where the scene is mostly locked apart from cam / player_co_ we could probably do something (this would only slow down the loading). I am actually trying to see how to make the whole process easier and faster.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dsman","Date":"2016-05-17T19:21:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWell _co_ What if it could be something like reflection probe. Where we can set the frequency of update (update after x frame) ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOr can we render some sort of map from babylon at runtime (at whatever frequency we want) into jpg binary and use that as cubemap for PBR material for reflection/irradiance ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2016-05-17T19:39:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tyep that is the idea behind it _dd_-)\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dsman","Date":"2016-05-17T19:45:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSo you mean you are in process of creating such extension ? Will it be added to Babylon repo ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2016-05-17T19:52:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI am planning to add it as part of performance improvment in the next couple of months.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you need it earlier_co_ I could help you adding it inside of the reflection probes and you could make the PR ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2016-05-17T20:31:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAnother issue is the rest of your scene will still require a cube map if using pbr to be able to create the cube map... chicken and egg.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut could still be really helpfull in a lot of cases.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dsman","Date":"2016-05-18T13:33:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/20193-sebavan/?do_eq_hovercard_qt_ data-mentionid_eq__qt_20193_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/20193-sebavan/_qt_ rel_eq__qt__qt__gt_@Sebavan_lt_/a_gt_ Thanks for replying to my stupid question . But pardon me _co_ I am beginner. Will you help  me understand different between cubemap and reflection probe  ? \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn your post above you said you can help adding it inside reflection probe. How will that work I mean. The way I understand it reflection probe are for reflection. It has nothing to do with Cubemap and PBR material_t_s reflectivity and irradiance. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2016-05-18T15:04:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBasically a cubemap is like having six images representing each face of a cube. The reflection use them to display whatever pixels are at the reflected position in this cube (skybox like).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_cube_map_final.gif_qt_ class_eq__qt_ipsImage_qt_ src_eq__qt_http_dd_//raptor.developpez.com/tutorial/opengl/skybox/images/cube_map_final.gif_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tIf a model is enclosed in the cube above (once folded)_co_ you could compute the reflected pixel through the following formula (incident angle from normal _eq_ reflected angle) _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_reflection_small.jpg_qt_ class_eq__qt_ipsImage_qt_ src_eq__qt_http_dd_//study.com/cimages/multimages/16/reflection_small.jpg_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tA reflection probe dynamically creates such faces from your running scene. Basically_co_ instead of using a static environment_co_ you could use a dynamic one created from a point in your current running scene. In the following example you can see the moving element being reflected and this could not happen with a static cubemap.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs.com/Demos/RefProbe/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/Demos/RefProbe/_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo compute the environemnt irradiance_co_ you need to loop and compute with expensive maths CPU wise (when you got only 16 ms)_co_ a kind of FFT over all the pixels to extract the probability of having one particular color at a particular point (_qt_kind of_qt_ averaging the colors of all the neighbours pixels).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//http.developer.nvidia.com/GPUGems2/gpugems2_chapter10.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//http.developer.nvidia.com/GPUGems2/gpugems2_chapter10.html_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo if you first render your scene from six angles and then apply the maths to extract the environment irradiance from the generated cubemap_co_ your kind of hammering the performances. It is why doing it at the scene load (if the environment is static) could be ok. Another trick loosing a little bit of accuracy would be to compute the irradiance form lower mips of the generated cubemap to process less pixels. Tradeoff from efficiency to quality would have to be customizable (basically cubemap size_co_ mip generation...).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSeamless Cubemap is definitely a no go because it is way too slow to preprocess correctly_co_ webgl2 will help a lot on this (native seamless cubemap filtering can reach closer result without preprocess).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDo not hesitate if I am still not clear_co_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dsman","Date":"2016-05-18T15:38:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSo basically reflectionprobe can give us 5 surface cubemap that can be used as reflection texture in PBR material ? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI noticed every Play ground of PBR is using  HDRCubeTexture_co_ like shown below\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_ // Environment Texture\n    var hdrTexture _eq_ new BABYLON.HDRCubeTexture(_qt_textures/room.hdr_qt__co_ scene_co_ 512)_sm_\n\n.\n.\n.\n\nvar plastic _eq_ new BABYLON.PBRMaterial(_qt_plastic_qt__co_ scene)_sm_\n\tplastic.reflectionTexture _eq_ hdrTexture_sm_\n\n.\n.\n._lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo instead of this we can use cubemap generated every few second or every few frame from reflection probe ? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tCan you outline how to achieve this ? \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2016-05-18T16:15:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis generate a cube texture with 6 faces and as stated in the introduction to the PBR Material in the reflection part_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//doc.babylonjs.com/overviews/Physically_Based_Rendering_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//doc.babylonjs.com/overviews/Physically_Based_Rendering_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can use them this way_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1HQPOD%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1HQPOD#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-05-18T16:43:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI never read so documented and illustrated answers ... waaaooww\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]