[{"Owner":"paleRider","Date":"2017-10-16T08:56:34Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi everybody_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWe_t_re trying to use the _lt_strong_gt_BJS Editor_lt_/strong_gt_ in order to have PBR materials_co_ as the _lt_strong_gt_Exporter (from Blender)_lt_/strong_gt_ doesn´t let use them.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOur problem is that the resulting _lt_strong_gt_.babylon file_lt_/strong_gt_ generated by _lt_strong_gt_BJS Editor_lt_/strong_gt_ seems to include the textures as embedded (_qt_base64String_qt_ property)_co_ resulting so in a huge _lt_strong_gt_.babylon file_lt_/strong_gt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn parallel_co_ a clever reusing of textures (as .dds) is not possible_co_ as they are all embedded time after time_co_ with each scene.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs there any alternative to this workflow?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for your time.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBest regards.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAddendum (real .babylon file excerpt)_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_. . .\n{\n  _qt_tags_qt__dd_ _qt_added_qt__co_\n  _qt_directIntensity_qt__dd_ 1_co_\n  _qt_emissiveIntensity_qt__dd_ 1_co_\n  _qt_environmentIntensity_qt__dd_ 1_co_\n  _qt_specularIntensity_qt__dd_ 1_co_\n  _qt_disableBumpMap_qt__dd_ false_co_\n  _qt_albedoTexture_qt__dd_ {\n\t_qt_tags_qt__dd_ null_co_\n\t_qt_url_qt__dd_ _qt_tubo_basecolor.png_qt__co_\n\t_qt_uOffset_qt__dd_ 0_co_\n\t_qt_vOffset_qt__dd_ 0_co_\n\t_qt_uScale_qt__dd_ 1_co_\n\t_qt_vScale_qt__dd_ 1_co_\n\t_qt_uAng_qt__dd_ 0_co_\n\t_qt_vAng_qt__dd_ 0_co_\n\t_qt_wAng_qt__dd_ 0_co_\n\t_qt_isBlocking_qt__dd_ true_co_\n\t_qt_name_qt__dd_ _qt_tubo_basecolor.png_qt__co_\n\t_qt_hasAlpha_qt__dd_ false_co_\n\t_qt_getAlphaFromRGB_qt__dd_ false_co_\n\t_qt_level_qt__dd_ 1_co_\n\t_qt_coordinatesIndex_qt__dd_ 0_co_\n\t_qt_coordinatesMode_qt__dd_ 0_co_\n\t_qt_wrapU_qt__dd_ 1_co_\n\t_qt_wrapV_qt__dd_ 1_co_\n\t_qt_anisotropicFilteringLevel_qt__dd_ 4_co_\n\t_qt_isCube_qt__dd_ false_co_\n\t_qt_gammaSpace_qt__dd_ true_co_\n\t_qt_invertZ_qt__dd_ false_co_\n\t_qt_lodLevelInAlpha_qt__dd_ false_co_\n\t_qt_lodGenerationOffset_qt__dd_ 0_co_\n\t_qt_lodGenerationScale_qt__dd_ 0.8_co_\n\t_qt_isRenderTarget_qt__dd_ false_co_\n        _qt_animations_qt__dd_ []_co_\n\t_qt_base64String_qt__dd_ _qt_data_dd_image/png_sm_base64_co_iVBORw0KGgoAAAANSUhEUgAAEAAAABAACAIAAAB9wbNAAAAACXBIWXMAAAsTAAALEwEAmpwYAAAgAElEQVR4nOzbQQ0AIRDAwCM5/5YXCTyhyYyCGuiamQ8AA . . ._qt_\n}_co_\n. . ._lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-10-16T19:54:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tA couple of things_co_ around the edges_dd_\n_lt_/p_gt_\n\n_lt_ul_gt__lt_li_gt_\n\t\tYou could use the glTF exporter for Blender.  I am not sure how efficient that is to the .babylon exporter_co_ but believe is handles PBR.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tAlso_co_ since a JSON file is ascii_co_ it can be gzipped by the server_co_ so the result is not as bad as it might seem.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tI really do not know enough (anything really) about PBR_co_ let alone on both sides to add this to Blender exporter.  It is also not really important for me.  Without a very simple .blend using PBR (hopefully not in Cycles)_co_ it will never get put in the Blender exporter by me.  No specs_co_ no export.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tHave not really used this editor_co_ but if it runs does NOT run in a browser_co_ then there may be an option somewhere to save separate files.  Browsers cannot really save files directly.  They fake download them.  Doing that many times could be a pain.\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"paleRider","Date":"2017-10-17T09:07:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi there and thank you for your suggestions_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOur main issue is that we don_t_t want to export a blender_t_s PBR shader. Instead_co_ we want to be able to create the BabylonJS PBR shader inside blender. I am the _qt_3D guy_qt_ here but I guess it would be fairly simple to just put a tab in the properties of an object with the babylon material (it doesn_t_t matter which one) and be able to put there the one we want_co_ in our case_co_ the PBR one. And then_co_ make the exporter write that info into the babylon file.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.youtube.com/watch?v_eq_aH6XPsEmozk_qt_ rel_eq__qt_external nofollow_qt__gt_Here_lt_/a_gt_ you can see the maths behind PBR materials in Blender. But_co_ as I said_co_ that is not what we need. We don_t_t need to create a Blender material but a babylon one.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks in advance and thanks for your exporter.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2017-10-17T16:06:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJust putting up a section in the materials properties tab actually means not having to care what Blender_t_s implementation is.  Would also give superior results as opposed to mapping what Blender supports into what BJS has.  Somekind of common denominator.  Will not be rendered in Blender though.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSomeone could go thru as many _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Materials/PBR/babylon.pbrMaterial.ts#L47_qt_ rel_eq__qt_external nofollow_qt__gt_serialized properties_lt_/a_gt_ as possible_co_ and turn them into property definitions like_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_bpy.types.Material.directIntensity _eq_ bpy.props.FloatProperty(\n    name_eq__t_Direct Intensity_t__co_\n    description_eq__t_Intensity of the direct lights e.g. the four lights available in your scene.\\nThis impacts both the direct diffuse and specular highlights._t__co_\n    default _eq_ 1.0_co_ min _eq_ 0_co_ max _eq_ 1\n)_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThose which are _lt_strong_gt_int _lt_/strong_gt_are bpy.props.IntProperty.  _lt_strong_gt_Strings _lt_/strong_gt_are bpy.props.StringProperty.  _lt_strong_gt_Booleans _lt_/strong_gt_are bpy.props.BoolProperty.  I see no reason why I should do this_co_ though it also does not have to specifically be you.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUser interface and extraction of properties into the python export code is based on these definitions.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI see there are also sub-types of PBR like_dd_ simple_co_ glossy_co_ &amp_sm_ roughness.  One thing UI wise I am recently capable of is Tabs.  Here is how I can export a mesh as faces_co_ or vertices(Hair).  Could possibly organize tabs with properties specific to simple_co_ glossy_co_ &amp_sm_ roughness the same way.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_15255_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_10/tabs.jpg.8a1a4301c246713fe3df7de9910bba44.jpg_qt_ alt_eq__qt_tabs.jpg.8a1a4301c246713fe3df7de9910bba44.jpg_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"paleRider","Date":"2017-10-18T07:41:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi there_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt_t_s kind of a pity since PBR are the way to go. It is the present and future in VR content.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tA tab with a place where to put a Babylon material_co_ or even write the code itself would be a huge time saver_co_ yes.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCheers.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"paleRider","Date":"2017-10-20T07:44:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tDear _lt_strong_gt_all_lt_/strong_gt__dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThese last days _lt_strong_gt_Julien Moureau_lt_/strong_gt_ has been updating his amazing _lt_strong_gt_BJS Editor_lt_/strong_gt_ with a lot of PBR enhancements we asked him for_co_ in order to achieve an even better tool.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you very much.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-10-20T15:56:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThis is cool _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]