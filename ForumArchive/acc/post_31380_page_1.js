[{"Owner":"FunFetched","Date":"2017-06-30T23:30:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI have a Blender file with some meshes with Actions assigned to them. I_t_m exporting it using version 5.3.-1 of the Babylon.JS exporter and loading the resulting .babylon file with Scene.ImportMesh. There are no bones in this scene_sm_ all animations are applied directly to meshes.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI can trigger my animations without issue_sm_ everything behaves as expected (more or less). However_co_ after loading the file_co_ the orientation and positions of all of my animated meshes begin at the final frame of their Actions_co_ as opposed to frame 0_co_ as I would expect.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMy first thought was that the animations were playing automatically upon loading. I scoured the forums here and discovered the autoAnimate flag. I opened my .babylon file_co_ but no such flag was present. I re-exported and checked autoAnimate intentionally_co_ opened the .babylon file again_co_ and explicitly set each autoAnimate flag to false. No effect. Next_co_ I set breakpoints at all relevant beginAnimation functions in my babylon.js_co_ but none were triggered.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAs far as I can tell_co_ none of these animations are being automatically played_co_ yet the problem persists. Any thoughts? I can work around this issue by making sure that the keyframes at the first and final frames of my Actions are exactly the same (and simply not play that final frame)_co_ but it seems there might be a bug in play here.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-07-02T02:53:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi and welcome_co_ funfetched!  I was hoping you would have some replies by now.  hmm.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have never done animations inside Blender... but... allow me to ask this.  At the time of export_co_ are the animations _qt_sitting_qt_ on their last frame?  In other words_co_ does it matter if you _qt_rewind_qt_ the animations before export?  (I am probably talking crap_co_ here_co_ sorry). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf there IS animation _qt_scrubbers_qt_ (timeline sliders) in Blender_co_ are they all set at frame 0 for all animated mesh... at export-time?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat might be a stupid thing to ask... not sure.  Sorry if it was.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tUsually_co_ when things like this happen_co_ we like to see the .blend and .babylon files.  Sometimes things can be seen in those files... that can give us an indicator as-to what is happening.  It sounds like you have already been looking-around in there.  hmm.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway_co_ can you make your .blend and .babylon files available to us_co_ somehow?  That would be great.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m going to ping _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/7026-gryff/?do_eq_hovercard_qt_ data-mentionid_eq__qt_7026_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/7026-gryff/_qt_ rel_eq__qt__qt__gt_@gryff_lt_/a_gt_ and _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8492_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/_qt_ rel_eq__qt__qt__gt_@JCPalmer_lt_/a_gt_ just in case they want to monitor this thread.  Both are quite knowledgeable in Blender-&gt_sm_BabylonJS operations.  They both might be a bit busy during the holidays_co_ but they will visit soon.  And there are other export/animation experts nearby.  Let_t_s hope SOMEBODY has seen this _qt_all animated mesh start-at last frame of animation_qt_ - puzzler sometime before... and has a fix.  Talk soon.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"FunFetched","Date":"2017-07-02T19:59:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOne of the first things I tried was to make sure I was exporting the file while everything was sitting at frame 0. _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  It doesn_t_t seem to matter. I_t_ll see what I can do as to providing some files. I can_t_t see anything in my .babylon file referring to anything resembling a starting frame_co_ either. Weird. The only thing I can figure is that there might be a _qt_current frame_qt_ counter in Babylon that gets incremented during the parsing of .babylon files_co_ but never gets reset to 0 when its done. I_t_ll do some more digging.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"FunFetched","Date":"2017-07-02T22:24:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tAlright_sm_ fooling around with the final frame_co_ I_t_ve discovered that the problem is actually in the exporter. Regardless of what frame I_t_m on in the Timeline at the time of export_co_ the position and orientation of the meshes are always exported in their final states. I_t_ll take a look at that and see if I can make any sense of it.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"FunFetched","Date":"2017-07-03T01:15:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFound it! It is indeed in the exporter_co_ and I_t_ve managed to fix it on my end. I_t_ve submitted a bug to github (#2416)_co_ but figured I_t_d post it here for _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/?do_eq_hovercard_qt_ data-mentionid_eq__qt_8492_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/8492-jcpalmer/_qt_ rel_eq__qt__qt__gt_@JCPalmer_lt_/a_gt_ as well.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tanimation.py line 104_dd_ append_range() introduces an issue where the scene_t_s current frame is changed as the range is iterated through_co_ but not restored upon completion. This leads to all animated objects being exported in their final positions/orientations_co_ regardless of the current frame in the Timeline.\n_lt_/p_gt_\n\n_lt_p style_eq__qt_color_dd_#24292e_sm__qt__gt_\n\tI managed to resolve the issue on my end in f_curve_animatable.py. I added_lt_span_gt_ _lt_/span_gt__lt_code_gt_currentFrame _eq_ bpy.context.scene.frame_current_lt_/code_gt__lt_span_gt_ _lt_/span_gt_before the_lt_span_gt_ _lt_/span_gt__lt_code_gt_for action in bpy.data.actions_dd__lt_/code_gt__lt_span_gt_ _lt_/span_gt_loop on line 37_co_ restoring the scene_t_s current frame immediately after this loop with_lt_span_gt_ _lt_/span_gt__lt_code_gt_bpy.context.scene.frame_set(currentFrame)_lt_/code_gt_.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]