[{"Owner":"ragingclaw","Date":"2016-08-12T13:43:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI am back with another crazy thingy! I have here for your pleasure_co_ a playground! _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#28AM9V%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#28AM9V#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have some notes at the top of the playground but let me break this shiz down for you.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am trying to modify the arcRotateCamera_t_s beta based on mouse wheel scroll. I have this sort of working.. well_co_ it does work... BUT_co_ I am having trouble with it_sm_ it_t_s choppy and just not right. I_t_m trying to get it smooth like butter (have easing). The idea is the closer you get to the target_co_ the beta changes so you go from a top(ish) view to more of a 45-40 degree angle looking at the target. Make sense? I just made a hand motion explaining but you can_t_t see it.. trust me.. I did it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI added some textures to help you see the choppiness. My guess_co_ is I need to maybe use a percentage of a range for the scroll/angle_co_ but I have no clue_sm_ math and I do not get along. I could be wrong on that.. not about math and I not agreeing_co_ that I am sure of. I tried calling the angle/scroll event in various places (registerBeforeRender/AfterRender) to try and determine why it_t_s choppy but there was no change.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI was hoping someone smarter than I am could take a look and provide some feedback. \n_lt_/p_gt_\n\n_lt_p_gt_\n\ttldr_sm__lt_br /_gt_\n\tI suck and need help. thanks.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-08-12T15:06:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo first of all you are registering your event on every frame _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m wondering if you should not handle the mousewheel event and rather use a beforeRender event to check camera radius and deduce beta from there. In this case you will have inertia for free (which will lead to butter smooth animations _dd_))\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ragingclaw","Date":"2016-08-12T15:13:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tlooked at my playgound and somehow it seems super screwed up. here it is again not super screwed up _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#28AM9V%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#28AM9V#2_lt_/a_gt_ just in case.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_. You mean scene.registerBeforeRender or something else? I thought about using the radius and not the mouse wheel by my brain had exploded at that point. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-08-12T15:19:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYes mouse event is not smooth enough else\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ragingclaw","Date":"2016-08-12T15:37:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tthanks_co_ i_t_ll give that a try so I can churn the butter\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-08-12T17:31:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi again RC.  _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#28AM9V%237_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#28AM9V#7_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tStraightened up your playground a bit... but still nothing exciting happening.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLet_t_s look at lines 98 - 109 .  Generally_co_ I emptied your beforeRender slot_co_ because we only need the eventListener adding once per scene_co_ and not every frame_co_ as deltakosh mentioned.  Also notice that I added a scene.onDispose... that removes the event listeners... when the scene unloads.  IF we didn_t_t de-register the listeners_co_ and IF you suddenly chose another playground demo from the list of pre-built ones_co_ then those event listeners would still be active on that new scene you chose.  SO_co_ using scene.onDispose is a wise move for any scene that has added eventListeners.  Just like a picnic in the park_co_ best to cleanup before you leave.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tAnother thing... notice that I made sure that _lt_em_gt_var setCameraBeta _eq_ function (e) _lt_/em_gt_happens BEFORE we try to add an event listener that references that function.  First we establish the function (line 66) and then LATER in the code... we _qt_bind_qt_ an eventListener to that function (lines 98-99)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ the event object is automatically sent as an arg/parameter to the bound event handler function.  That_t_s why (e) is in line 66.  That is the event object... inbound to the handler func.  We need that puppy IN the function... for lines 76 and 78.  I used a console.log (viewable with browser F12 dev tools)... to view the event objects (e) just to make sure they were coming into the handler function ok.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI added line 80_co_ because I was having some problems with scene.activeCamera being null.  Not sure if it is still a problem.  It _lt_em_gt_was_lt_/em_gt_... when I was trying some demented things.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tIn lines 82-93_co_ you are setting beta limits... which is fine_co_ but you could set camera.beta itself.  It all depends upon if you want the user to still be allowed to adjust cam tilt with leftmousebutton-dragging.  Currently_co_ your scene (and method) is disallowing user-done camera tilt.  It_t_s all cool.  If you DID allow a user to do some drag-tilting after a few mousewheel zooms_co_ then if they did more mousewheeling_co_ there would probably be an unwanted _qt_jump_qt__co_ so you might be doing things correct_co_ with that.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis playground is probably working as well as it can_co_ again.  I_t_ll keep thinking.  I think there is an ArcRotateFollowCamera that could be interesting to you.  I think it has positional and rotational offsets.  In other words_co_ it has a value for how close the camera is to the followed target (positional)_co_ and also how much the camera is panned or tilted away-from aiming precisely at the target.  Think about that.  IF you could use the mousewheel values to change the follow distance (position)_co_ that would be a start. And then_co_ as that distance got smaller_co_ you start making adjustments to the X value of the followCam rotational offset (it_t_s beta).  With a free camera-based followCam... it would use rotation.x.  With the arcRotateFollowCam_co_ it would use the camera.beta value. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have never used the ArcRotateFollowCam_co_ but I have used the freeCamera followCamera a few times.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust some thoughts.  No matter what_co_ you are still going to have problems with un-smooth.... because them darned mousewheel events don_t_t happen very smoothly.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI made another_dd_  _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#28AM9V%238_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#28AM9V#8_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn this one_co_ I added a camera.wheelPrecision setting in line 41_co_ and then lowered your angleSpeed 10-fold... in line 70.  I just wanted to see how it felt_co_ and if we could smooth the butter a bit_co_ by doing that.  *shrug*  Maybe this will give us ALL some ideas to work-with.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBtw_co_ I enjoy the comedy in your posts.  I think you and I are going to get-along just fine.  You have a good goofy-quotient.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nabroski","Date":"2016-08-12T17:51:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t    scene.onPointerObservable.add((d_co_ s) _eq_&gt_sm_ {_lt_br /_gt_\n\t        console.log(d.event)_lt_br /_gt_\n\t    }_co_BABYLON.PointerEventTypes.POINTERWHEEL)\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ragingclaw","Date":"2016-08-12T17:57:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_ if you look at the #1 playground i made i had the onDispose call in there but something got all jacked up and i redid some stuff for playground and it got cleared out.. W@#$R%#$%^@!#$%! is all i can say to that.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m trying Dave_t_s suggested approach now but math can eat a big bag of salty d!@&amp_sm_$ for all I care... this is why i studied art.... I_t_m trying to get a formula worked out for the percentage changes. If my brain explodes and I don_t_t make it back_co_ tell Aunt Milly I_t_m the one that left the mustard on the counter.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nabroski","Date":"2016-08-12T19:36:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\thello i need to work on something similar very soon_co_ so i leave this here_co_ and come here later_co_ thanks!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//babylonjs-playground.com/#1NCTX9%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjs-playground.com/#1NCTX9#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//babylonjs-playground.com/#1NCTX9%235_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjs-playground.com/#1NCTX9#5_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ragingclaw","Date":"2016-08-12T20:04:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tGUYS GUYS GUYS!!!! I FIGURED IT OUT GUYS!!! OMFG STOP THE PRESS AND GRAB YOUR BUTTER CHURNER BROOMS!!!!! ok_co_ actually_co_ a guy I work with named Dave (ANOTHER FREAKING DAVID!) figured out the formula I am using but whatever_co_ screw him_co_ this is my win. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#28AM9V%239_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#28AM9V#9_lt_/a_gt_ is the solution\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSorry _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_ but I went with _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt__t_s idea of not using the mouse wheel at all. This is how it works (pay attention it is about to get all calculated and crap all up in here)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthe goal is to sync the two ranges. We do this by using the upper and lower bounds of the camera radius and syncing that percentage change to the upper/lower bounds of the allowed beta range. This gets checked in the registerBeforeRender function. Since I am not longer using the mouse wheel event I don_t_t have to worry about doing extra crap for mobile too_co_ it will just work.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// the numbers here are just to help you process what is going on.\nvar camera _eq_ scene.activeCamera_sm_\nvar camera_max_radius _eq_ 50_sm_\nvar camera_min_radius _eq_ 6_sm_\nvar cam_radius_range _eq_ 44_sm_\nvar camera_beta_max _eq_ 64_sm_ // (*degrees)\nvar camera_beta_min _eq_ 45_sm_ // (*degrees)\nvar camera_beta_range _eq_ 19_sm_ // (*degrees)\nvar range_difference _eq_ camera_beta_range / camera_radius_range_sm_ // 19/44\n\nvar beta_in_degrees _eq_ (camera.radius  - camera_min_radius) * range_difference + camera_beta_min_sm_\nvar new_beta _eq_ deg_to_rad(beta_in_degrees)_sm_ // **\n\nfunction deg_to_rad(deg){ return (deg * Math.PI) / 180_sm_ }\n\n/*\nlets test with some made up numbers to see what the formula actually looks like\n\ncurrent_radius _eq_ 44 \nbeta_in_degrees _eq_ ( 44 - 6 ) * 0.43 + 45 _eq_ 61.4\nbeta in radians _eq_ 61.4 * 3.14 / 180 _eq_ 1.07163216\n\nnow_co_ that might make you go.. ummmm ok... but what it means is IT FREAKING WORKS! TEST SUCCESSFUL! \nyou may proceed to the next testing chamber.\n*/_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t* arcRotateCamera uses Radians_co_ not degrees_co_ but my brain processes degrees easier\n_lt_/p_gt_\n\n_lt_p_gt_\n\t** convert degrees to radians for the arcRotateCamera to understand using the formula_dd_  (deg * Math.PI) / 180\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t I have notes in the playground for all of this as well. It is also worthy to note the following_dd_ WUBBA LUBBA DUB DUB!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]