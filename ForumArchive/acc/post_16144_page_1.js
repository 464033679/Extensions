[{"Owner":"Dud","Date":"2015-08-01T21:45:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi all_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m a complete beginner with Babylon.js but it looks a very promising framework.  I_t_m interested in making a crazy golf type game and was planning to model some simple golf holes using Blender.  My idea was to model a simple rectangular style floor with a cylindrical hole.  I_t_d like to then import such a model using Babylon.js and I was hoping that I could apply a mesh collider to the object so that if I were to place a golf ball on the floor and apply a force I could see it drop through the hole.  Is this something Babylon.js could support?  I_t_ve looked through the documentation but did not specifically see any mention of a mesh collider which I think is what I would need here.  I get that I could approximate something using box colliders but I_t_d like something more accurate if possible._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Unity supports mesh colliders as does PlayCanvas - but I_t_d rather use Babylon.js if I can.  Can anyone tell me if they think this would be possible using this framework? I apologise in advance if I have missed something obvious in the docs!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thanks_co__lt_/p_gt__lt_p_gt_Dud_lt_/p_gt__lt_p_gt_ _lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-08-01T21:59:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hey! and welcome!_lt_/p_gt__lt_p_gt_Babylon supports two physics frameworks (Oimo and CannonJS) that will do what you are asking (i guess? _dd_-) )._lt_/p_gt__lt_p_gt_check this out_co_ might be a good start - _lt_a href_eq__qt_http_dd_//blogs.msdn.com/b/davrous/archive/2014/11/18/understanding-collisions-amp-physics-by-building-a-cool-webgl-babylon-js-demo-with-oimo-js.aspx_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//blogs.msdn.com/b/davrous/archive/2014/11/18/understanding-collisions-amp-physics-by-building-a-cool-webgl-babylon-js-demo-with-oimo-js.aspx_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dud","Date":"2015-08-01T23:32:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks for the info - but digging around its still not clear if Mesh Colliders are supported or not.  Whilst the article you linked to talks about Mesh Colliders the screenshot is from Unity.  Searching through the docs there does seem to be a MeshImposter type but looking at the SetPhysicsState method on the AbstractMesh class the description says the pyhsics imposter can only be  _qt__lt_span style_eq__qt_color_dd_rgb(0_co_0_co_0)_sm_font-family_dd__t_Segoe UI_t__co_ Helvetica_co_ arial_co_ freesans_co_ clean_co_ sans-serif_sm_font-size_dd_13px_sm__qt__gt_The physics impostor _lt_/span_gt__lt_a href_eq__qt_http_dd_//doc.babylonjs.com/page.php?p_eq_25355_qt_ rel_eq__qt_external nofollow_qt__gt_Sphere_lt_/a_gt__lt_span style_eq__qt_color_dd_rgb(0_co_0_co_0)_sm_font-family_dd__t_Segoe UI_t__co_ Helvetica_co_ arial_co_ freesans_co_ clean_co_ sans-serif_sm_font-size_dd_13px_sm__qt__gt_/Box/Plane_qt_ which leads me to believe that Mesh Colliders aren_t_t yet supported.  Can anyone else confirm this?_lt_/span_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-08-02T00:03:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt_Maybe you could look with intersectMesh () that detects object collisions with other._lt_/div_gt__lt_br_gt__lt_div_gt_ _lt_/div_gt__lt_br_gt__lt_div_gt_All objects can detect collisions in babylon_co_ without the use of physical_co_ but if you need to bounce physics will be essential._lt_/div_gt__lt_br_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Temechon","Date":"2015-08-02T06:10:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_I confirm_co_ Mesh colliders are not supported for oimo.js. However_co_ they are supported for cannon.js with _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Physics/Plugins/babylon.cannonJSPlugin.ts#L84_qt_ rel_eq__qt_external nofollow_qt__gt_MeshImpostor _lt_/a_gt_. Be careful_co_ it_t_s very (very very) CPU intensive!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_intersectMesh uses bounding volumes_co_ and thus are not pixel perfect._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dud","Date":"2015-08-02T08:22:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Thanks for the confirmation_co_ I think I_t_ll have to go with Unity and try their WebGL export instead._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2015-08-02T10:47:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Babylon has an export babylon for unity 5 which would be much better than the export webGL _dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/tree/master/Exporters/Unity%205_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/tree/master/Exporters/Unity%205_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]