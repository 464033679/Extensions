[{"Owner":"reddozen","Date":"2015-04-30T14:11:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Galaxy Note 4_lt_/p_gt__lt_p_gt_Android 5.0.1_lt_/p_gt__lt_p_gt_Chrome 42.0.2311.109_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Legacy_dd_ 4fps_lt_/p_gt__lt_p_gt_Optimized_dd_ 13fps_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2015-04-30T14:35:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_IE - not very noticeable_co_ new implementation is 5% faster. Still faster _dd_-)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2015-04-30T15:43:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_fps is a full process measurement.  This change should have no effect on GPU time_co_ so Potential FPS_co_ 1000 / CPU ms (I think)_co_ is really what to measure.  On machines with very fast CPU_t_s the improvement will be a lower % improvement._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_On machines with fast CPU &amp_sm_ slow GPU will see the least improvement when looking at fps.  fps is just measuring too much._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-04-30T17:47:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Yep_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You could measure the delta time before/after the function call only_co_ for both ones. I sometimes get x5 faster with this measure depending on the mesh size._lt_/p_gt__lt_p_gt_The FPS is affected if the function process (+the rest) is longer than 16ms or if the GC consumes CPU times for itself._lt_/p_gt__lt_p_gt_A good test could be to have a script that only calls _lt_em_gt_computeNormals()_lt_/em_gt_ each frame and absolutly nothing else._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You are right _dd_ the FPS is a full process measurement... but it is the one that the user is interested in  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-04-30T18:15:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@RaananW (which seems to be the lone IE user here ?) _dd__lt_/p_gt__lt_p_gt_Could you stress it with large meshes for your computer in IE ? for example_co_ get a value that gives 10 or less FPS in IE with legacy_co_ then re-run the same value with optimized _dd_ _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_ _lt_/span_gt__lt_a href_eq__qt_http_dd_//jerome.bousquie.fr/BJS/computeNormals/menu.html_qt_ title_eq__qt_External link_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//jerome.bousqu...rmals/menu.html_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Or could you please re-test it locally without the debugLayer because differences are more visible ?_lt_/p_gt__lt_p_gt_If you can_t_t_co_ I will probably publish next week a new page without the debugLayer._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_No other IE testers ?  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_sad.png_qt_ alt_eq__qt__dd_(_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/sad@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_Please_co_ people_co_ test with this link and tune it for your machine _dd_ _lt_span style_eq__qt_color_dd_rgb(40_co_40_co_40)_sm_font-family_dd_helvetica_co_ arial_co_ sans-serif_sm__qt__gt_ _lt_/span_gt__lt_a href_eq__qt_http_dd_//jerome.bousquie.fr/BJS/computeNormals/menu.html_qt_ title_eq__qt_External link_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//jerome.bousqu...rmals/menu.html_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Xeonzinc","Date":"2015-04-30T19:02:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_@ Size 60_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_IE_dd_ I get ~50% increase. 21FPS -&gt_sm_ 30FPS (stable)_lt_/p_gt__lt_p_gt_Chrome_dd_ I get 150-200% increase_co_ 21FPS -&gt_sm_ 50-60FPS (varies)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-04-30T23:48:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Sounds like we have a good candidate for a PR_dd_)_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-05-01T12:54:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_it sounds well  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ alt_eq__qt__dd_P_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Another question about _lt_em_gt_computeNormals()_lt_/em_gt_ and morphing (I mean _dd_ usage of _lt_em_gt_CreateXXX()_lt_/em_gt_ on an instance of mesh in order to update it) _dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Optimzing _lt_em_gt_computeNormals()_lt_/em_gt_ seems to be a good thing when a mesh needs to be morphed each frame. But it is still a big part in the mesh update process if you monitor the CPU profiler. The biggest part._lt_/p_gt__lt_p_gt_Some meshes don_t_t even need to have their normals recomputed_co_ simply because they don_t_t reflect light and have an emissive color only_co_ for instance._lt_/p_gt__lt_p_gt_Let_t_s imagine I want a mesh to be animated/morphed at full possible speed and it has no light reflection but just a texture and an emissive color._lt_/p_gt__lt_p_gt_Say_co_ a ribbon for drawing the road in a 80_t_s OutRun like car race game._lt_/p_gt__lt_p_gt_I would like to tell my road mesh then to skip its normals re-computation each frame._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Something like (whatever the name_co_ but I would prefer a name suggesting to set _lt_em_gt_true_lt_/em_gt_ to skip the computation and _lt_em_gt_false _lt_/em_gt_ or _lt_em_gt_undefined_lt_/em_gt_ would be the default behavior_co_ it to say to compute normals) _dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_// var roadPath is an array of Vector3 created before// var road is a ribbon created beforeroad.skipNormals _eq_ true_sm_// ...// then in the render loop _dd_roadPath _eq_ updateRoad(roadPath)_sm_road _eq_ BABYLON.Mesh.CreateRibbon(null_co_ roadPath_co_ null_co_ null_co_ null_co_ null_co_ null_co_ null_co_ road)_sm__lt_/pre_gt__lt_p_gt_So my question is _dd__lt_/p_gt__lt_p_gt_Where do I implement this new property (and what name) ?_lt_/p_gt__lt_p_gt_- instanced mesh level ? abstract mesh ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I could of course set this property at the object instance level only also (what I would have done in first intention)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This property concerns for now only mesh types which are eligible to an update with _lt_em_gt_CreateXXX(). _lt_/em_gt__lt_/p_gt__lt_p_gt_For now_co_ they are only parametric shapes._lt_/p_gt__lt_p_gt_I wouldn_t_t like to pass an extra parameter in the _lt_em_gt_CreateXXX()_lt_/em_gt_ method because it is overloaded imho ..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Any thoughts ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-05-01T23:00:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Why not testing for normals then? if there are normals you recompute them. If no_co_ then no need_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I prefer automatic behavior over additional parameters / properties_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-05-02T06:48:49Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_We can_t_t because the initial _lt_em_gt_CreateXXX() _lt_/em_gt_method (when used to create the mesh) automatically creates the normals by default. So there are always normals._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Do you prefer a method ? like _lt_em_gt_freezeWorldMatrix() _lt_/em_gt_/ _lt_em_gt_unfreezeWorldMatrix() _lt_/em_gt_?_lt_/p_gt__lt_p_gt_This could be _lt_em_gt_freezeNormals()_lt_/em_gt_ /_lt_em_gt_ unfreezeNormals()_lt_/em_gt_._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Imho_co_ this would be coherent _dd_ advanced functions  with explicit names for advanced users who know what they want to tune deeply._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-05-02T21:18:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Like it! Bu rather than freeze_co_ I would rather prefer_dd_ removeNormals()_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-05-03T07:33:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok_co__lt_/p_gt__lt_p_gt_So what I propose is _dd__lt_/p_gt__lt_p_gt_- on initial _lt_em_gt_CreateXXX()_lt_/em_gt_ method (mesh creation) nothing changes as we can_t_t predict how the user will handle his mesh then._lt_/p_gt__lt_p_gt_- as soon as _lt_em_gt_mesh._lt_strong_gt_removeNormals()_lt_/strong_gt__lt_/em_gt_ is called _dd_ the normals aren_t_t recomputed neither applied any longer on next _lt_em_gt_CreateXXX()_lt_/em_gt_ calls (mesh update) until _lt_em_gt_mesh._lt_strong_gt_restoreNormals()_lt_/strong_gt__lt_/em_gt_ will be called._lt_/p_gt__lt_p_gt_I could also set to whole _lt_em_gt_normals_lt_/em_gt_ array to [0_co_ 0_co_ ... 0] meanwhile_co_ just in case._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Do you agree ?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-05-03T12:50:27Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi guys!  Jerome_co_ when you say mesh.removeNormals()_co_ mesh is a single mesh_co_ correct?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Are you saying that after mymesh.removeNormals()_co_ all future B.Mesh.CreateXXX... won_t_t have normals?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_(not until mymesh.restoreNormals() is called)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_That_t_s seems strange._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_What about..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_BABYLON.Mesh.CreateWithoutNormals _eq_ true/false_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_In this case_co_ we are actually setting a _t_mode_t_ on our _t_creators_t_._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Someday_co_ we could do BABYLON.Mesh.CreateMode _eq_ BABYLON.Mesh.SOME_STATIC_THING_sm__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_(Lots of different modes for our _t_creators_t__co_ as necessary)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_------------------_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Another thought... maybe we could have two or more types of VertexData object.  If a mesh has a _t_light duty_t_ VertexData object_co_ it has no normals._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Ok_co_ that_t_s probably a bad idea.  Just thinking... with my mostly-unaware brain.  It just seemed strange to me that a setting on a single mesh... could/would affect the behavior of all future createXXX. _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Maybe I misunderstood.  Thx for any clarification that can be provided... if anyone has a moment to add such._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-05-03T16:24:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_No_co_ no... misunderstanding_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_When you use the _lt_em_gt_CreateXXX()_lt_/em_gt_ method (this concerns only parametric meshes _dd_ ribbon_co_ tubes_co_ lines_co_ extruded shapes)_co_ it behaves normally and sets the normals on your mesh._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Then if you re-use the same _lt_em_gt_CreateXXX() _lt_/em_gt_method to _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/page.php?p_eq_25096_qt_ rel_eq__qt_external nofollow_qt__gt_update the mesh_lt_/a_gt__co_ then you could _lt_u_gt_choose_lt_/u_gt_ to NOT to re-compute the normals if you don_t_t need them (ex _dd_ a mesh with emissive color only) to gain more and more speed because _lt_em_gt_ComputeNormals()_lt_/em_gt__co_ even the optimized version (PR soon)_co_ is the most consuming part of the mesh update process according to the CPU profiler (up to 90% of the update process)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Remember our talk about a car race game like ol_t_good 80_t_s OutRun ... the road is to be updated and doesn_t_t need to reflect the light_co_ so we could use_co_ say_co_ a ribbon morphed each frame and gain process speed by setting _dd_ _lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_road.removeNormals()_sm__lt_/pre_gt__lt_p_gt_before the render loop where the road path is updated and the road mesh recomputed and redrawn._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-05-03T21:58:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_ok I was thinking about removing then completely_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-05-04T07:18:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ooopps_lt_/p_gt__lt_p_gt_no_co_ I didn_t_t explain well._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I want to keep everything as it is _dd_ parametric mesh creation _lt_u_gt_with_lt_/u_gt_ normals._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But_co_ if the user doesn_t_t need them _lt_u_gt_only_lt_/u_gt__co_ he _lt_u_gt_could_lt_/u_gt_ choose to skip the _lt_em_gt_computeNormals()_lt_/em_gt_ call in the mesh update process to gain more performance (because this method is always the heaviest in term of CPU usage within the update process)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Just like the _lt_em_gt_freezeWordMatrix()_lt_/em_gt_ _dd_ the data were computed once initially_co_ but we don_t_t need to re-compute them any longer each frame then for some reason._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_So ..?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_em_gt_removeNormals() / restoreNormals()_lt_/em_gt_ ?_lt_/p_gt__lt_p_gt_or_lt_/p_gt__lt_p_gt__lt_em_gt_freezeNormals() / unfreezeNormals() _lt_/em_gt_?   ( &lt_sm_- this seems to be the most pertinent and coherent_co_ imho )_lt_/p_gt__lt_p_gt_or_lt_/p_gt__lt_p_gt__lt_em_gt_skipComputeNormals() / restoreComputeNormals()_lt_/em_gt_ ?_lt_/p_gt__lt_p_gt_or_lt_/p_gt__lt_p_gt__lt_em_gt_jobijoba() / gloubiboulga()_lt_/em_gt_ ?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ alt_eq__qt__dd_D_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-05-05T15:39:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Ok sounds good (_lt_em_gt_freezeNormals() / unfreezeNormals()) _lt_/em_gt_but we REALLY need to be clear about this function using code documentation _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-05-05T16:20:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_added to backlog_lt_/p_gt__lt_p_gt_and it will be correctly documented_co_ don_t_t worry  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ alt_eq__qt__sm_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-05-07T09:48:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_div_gt__lt_div_gt__lt_p_gt_PR submitted._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Added _lt_em_gt_freezeNormals()_lt_/em_gt_/_lt_em_gt_unfreezeNormals()_lt_/em_gt_ Mesh methods._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It concerns only ribbon based meshes _dd_ ribbons_co_ tubes_co_ extruded shapes._lt_br_gt_It skips/unskips the normals recomputation on mesh update when called with _lt_em_gt_CreateXXX(..._co_ meshInstance)_lt_/em_gt_ (the case where _lt_em_gt_CreateXXX()_lt_/em_gt_ is used to update an instance instead of creating a new one)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_It improves update performances for meshes that don_t_t need normals (emissiveColor only for instance)._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Local chromium big ribbon (60K vertices) update test _dd__lt_/p_gt__lt_p_gt_unfrozen normals _eq_ 35 fps_lt_/p_gt__lt_p_gt_frozen normals _eq_ 60 fps_lt_/p_gt__lt_/div_gt__lt_/div_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2015-05-07T20:17:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Validated! Not on the nightly build so far as I_t_m working with Ranaam to integrate worker collisions_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-05-07T20:35:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt_ data-ipsquote-contentcommentid_eq__qt_81667_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentid_eq__qt_14166_qt_ data-ipsquote-username_eq__qt_Deltakosh_qt_ data-cite_eq__qt_Deltakosh_qt_ data-ipsquote-timestamp_eq__qt_1431029859_qt__gt__lt_div_gt__lt_div_gt__lt_p_gt_Validated! Not on the nightly build so far as I_t_m working with Ranaam to integrate worker collisions_lt_/p_gt__lt_/div_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_excited! can_t_t wait_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"reddozen","Date":"2015-05-17T15:31:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Does this optimization not work on meshes called from a babalon file?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-05-17T15:53:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_The optimization will work on any mesh using _lt_em_gt_computeNormals()._lt_/em_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_You will really notice it on mesh updates._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt__lt_em_gt_freeze/unfreezeNormals()_lt_/em_gt_ will work only (for now) on parametric shapes _dd_ ribbons_co_ tubes_co_ extruded shapes_lt_/p_gt__lt_p_gt_Idem_co_ you will notice the gain only on mesh updates._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]