[{"Owner":"ssaket","Date":"2018-10-25T12:45:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi devs_co__lt_br /_gt_\n\t_lt_br /_gt_\n\tyesterday_co_ I was reading about the  OffscreenCanvas (_lt_a href_eq__qt_https_dd_//developer.mozilla.org/en-US/docs/Web/API/OffscreenCanvas_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//developer.mozilla.org/en-US/docs/Web/API/OffscreenCanvas_lt_/a_gt_) and found one cool demo at _lt_a href_eq__qt_https_dd_//developers.google.com/web/updates/2018/08/offscreen-canvas_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//developers.google.com/web/updates/2018/08/offscreen-canvas_lt_/a_gt__sm__lt_br /_gt_\n\t_lt_br /_gt_\n\tThen I decided to give it a go by creating  _lt_a href_eq__qt_https_dd_//codepen.io/anon/pen/ReEGxp_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//codepen.io/anon/pen/ReEGxp_lt_/a_gt__co_ but the engine fails to initialise at the worker thread reason- _qt_window not found !_qt_ _sm_  Is there any way by which I can bypass this check ? I tried passing canvas context but no results ! \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt_\n\tIt is supported by Three.js.. so I guess_co_ shouldn_t_t be an unknown area to explore _lt_span_gt__lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ _lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-10-25T15:29:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis should be fixed by next nightly..I added watchdogs to prevent this issue\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]