[{"Owner":"dbawel","Date":"2015-05-24T22:25:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hello_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m wrapping up a realtime multi-user drawing app using elements from an example joshcamas posted recently.  I_t_m not including the GUI and much of the server calls in my example below_co_ so running this script wil provide errors_co_ but the whole script is 3x as large.  However_co_ if someone might help me to accomplish 2 things_co_ I would be grateful.  _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_1. Draw on a plane using a dynamic texture._lt_/p_gt__lt_p_gt_2. The base color of the plane is a color3 white (or other.)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here_t_s the example_dd__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_div_gt_ _lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt__lt_div_gt_var createScene _eq_ function () {_lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_    var scene _eq_ new BABYLON.Scene(engine)_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_    var camera _eq_ new BABYLON.FreeCamera(_qt_camera1_qt__co_ new BABYLON.Vector3(0_co_ 5_co_ -10)_co_ scene)_sm__lt_/div_gt__lt_div_gt_    camera.setTarget(BABYLON.Vector3.Zero())_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_    var light _eq_ new BABYLON.HemisphericLight(_qt_light1_qt__co_ new BABYLON.Vector3(0_co_ 1_co_ 0)_co_ scene)_sm__lt_/div_gt__lt_div_gt_        light.intensity _eq_ 0.7_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_        var groundSize _eq_ 20_sm__lt_/div_gt__lt_div_gt_        var textureResolution _eq_ 1024_sm_        _lt_/div_gt__lt_div_gt_    var ground _eq_ BABYLON.Mesh.CreateGround(_qt_ground1_qt__co_ groundSize_co_ groundSize_co_ 2_co_ scene)_sm__lt_/div_gt__lt_div_gt_        _lt_/div_gt__lt_div_gt_        //Create dynamic texture_lt_/div_gt__lt_div_gt_        var texture _eq_ new BABYLON.DynamicTexture(_qt_dynamic texture_qt__co_ textureResolution_co_ scene_co_ true)_sm_        _lt_/div_gt__lt_div_gt_        var textureContext _eq_ texture.getContext()_sm__lt_/div_gt__lt_div_gt_        _lt_/div_gt__lt_div_gt_        var materialGround _eq_ new BABYLON.StandardMaterial(_qt_Mat_qt__co_ scene)_sm_                                _lt_/div_gt__lt_div_gt_        materialGround.diffuseTexture _eq_ texture_sm__lt_/div_gt__lt_div_gt_        //materialGround.alpha _eq_ 0.2_sm_        _lt_/div_gt__lt_div_gt_        //materialGround.diffuseColor _eq_ new BABYLON.Color3(1.0_co_ 1.0_co_ 1.0)_sm__lt_/div_gt__lt_div_gt_        ground.material _eq_ materialGround_sm__lt_/div_gt__lt_div_gt_        _lt_/div_gt__lt_div_gt_        var textureSize _eq_ texture.getSize()_sm__lt_/div_gt__lt_div_gt_        texture.update()_sm__lt_/div_gt__lt_div_gt_        _lt_/div_gt__lt_div_gt_        //Here_lt_/div_gt__lt_div_gt_        var maskcanvas _eq_ document.createElement(_t_canvas_t_)_sm__lt_/div_gt__lt_div_gt_        maskcanvas.width _eq_ textureSize.width_sm__lt_/div_gt__lt_div_gt_        maskcanvas.height _eq_ textureSize.height_sm__lt_/div_gt__lt_div_gt_        var maskcontext _eq_ maskcanvas.getContext(_t_2d_t_)_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_        //And_lt_/div_gt__lt_div_gt_        var brushcanvas _eq_ document.createElement(_t_canvas_t_)_sm__lt_/div_gt__lt_div_gt_        brushcanvas.width _eq_ textureSize.width_sm__lt_/div_gt__lt_div_gt_        brushcanvas.height _eq_ textureSize.height_sm__lt_/div_gt__lt_div_gt_        var brushcontext _eq_ brushcanvas.getContext(_t_2d_t_)_sm__lt_/div_gt__lt_div_gt_        _lt_/div_gt__lt_div_gt_        // we will call_lt_/div_gt__lt_div_gt_        var textureComplete _eq_ false_sm_        _lt_/div_gt__lt_div_gt_        var texture_complete _eq_ function() _lt_/div_gt__lt_div_gt_        {_lt_/div_gt__lt_div_gt_                 textureComplete _eq_ true_sm__lt_/div_gt__lt_div_gt_        }_sm__lt_/div_gt__lt_div_gt_        _lt_/div_gt__lt_div_gt_        //Prepare_lt_/div_gt__lt_div_gt_        var mask _eq_ new Image()_sm__lt_/div_gt__lt_div_gt_        //mask.crossOrigin _eq_ _qt_Anonymous_qt__sm_ // if mask.src _eq_ http_dd_//_lt_/div_gt__lt_div_gt_        mask.src _eq_ _t_mask_1.png_t__sm__lt_/div_gt__lt_div_gt_        mask.onload _eq_ texture_complete_sm__lt_/div_gt__lt_div_gt_        _lt_/div_gt__lt_div_gt_        // Prepare_lt_/div_gt__lt_div_gt_        var img _eq_ new Image()_sm__lt_/div_gt__lt_div_gt_        //img.crossOrigin _eq_ _qt_Anonymous_qt__sm__lt_/div_gt__lt_div_gt_        img.src _eq_ _t_grass.jpg_t__sm__lt_/div_gt__lt_div_gt_        img.onload _eq_ texture_complete_sm_        _lt_/div_gt__lt_div_gt_        _lt_/div_gt__lt_div_gt_        var isDown _eq_ false_sm__lt_/div_gt__lt_div_gt_        //Updater_lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_        var draw _eq_ function(pickResult)_lt_/div_gt__lt_div_gt_        {_lt_/div_gt__lt_div_gt_                var x _eq_ pickResult.x_co__lt_/div_gt__lt_div_gt_                    z _eq_ pickResult.z_co__lt_/div_gt__lt_div_gt_                    brushSize _eq_ 5_sm__lt_/div_gt__lt_div_gt_                                _lt_/div_gt__lt_div_gt_                //Check_lt_/div_gt__lt_div_gt_                if(textureComplete _eq__eq_ false) {_lt_/div_gt__lt_div_gt_                        return_sm__lt_/div_gt__lt_div_gt_                }                _lt_/div_gt__lt_div_gt_                _lt_/div_gt__lt_div_gt_                //_lt_/div_gt__lt_div_gt_                x _eq_ (x + (groundSize/2))_sm__lt_/div_gt__lt_div_gt_                x _eq_ (x - (ground.position.x))_sm__lt_/div_gt__lt_div_gt_                z _eq_ (z - (ground.position.z))_sm__lt_/div_gt__lt_div_gt_                z _eq_ ((groundSize/2) - z)_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_                //_lt_/div_gt__lt_div_gt_                x _eq_ (x/groundSize)*textureSize.width_sm__lt_/div_gt__lt_div_gt_                z _eq_ (z/groundSize)*textureSize.height_sm__lt_/div_gt__lt_div_gt_                _lt_/div_gt__lt_div_gt_                //Ok!_lt_/div_gt__lt_div_gt_                brushcontext.save()_sm__lt_/div_gt__lt_div_gt_                brushcontext.clearRect(0_co_ 0_co_ textureResolution_co_ textureResolution)_sm__lt_/div_gt__lt_div_gt_                //maskcontext.globalAlpha _eq_ 0.4_sm__lt_/div_gt__lt_div_gt_                brushcontext.drawImage(img_co_ 0_co_ 0_co_ textureResolution_co_ textureResolution_co_ x-(brushSize)_co_ z-(brushSize)_co_ brushSize*2_co_ brushSize*2)_sm_                _lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_                _lt_/div_gt__lt_div_gt_                brushcontext.restore()_sm__lt_/div_gt__lt_div_gt_                _lt_/div_gt__lt_div_gt_                //Now_lt_/div_gt__lt_div_gt_                maskcontext.save()_sm__lt_/div_gt__lt_div_gt_                maskcontext.clearRect(0_co_ 0_co_ textureSize.width_co_ textureSize.height)_sm__lt_/div_gt__lt_div_gt_                //maskcont_lt_/div_gt__lt_div_gt_                maskcontext.drawImage(mask_co_ 0_co_ 0_co_ mask.width_co_ mask.height_co_ x-(brushSize)_co_ z-(brushSize)_co_ brushSize*2_co_ brushSize*2)_sm__lt_/div_gt__lt_div_gt_                maskcontext.globalCompositeOperation _eq_ _t_source-in_t__sm_                _lt_/div_gt__lt_div_gt_                _lt_/div_gt__lt_div_gt_                //Now_lt_/div_gt__lt_div_gt_                maskcontext.drawImage(brushcanvas_co_ 0_co_ 0)_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_                maskcontext.restore()_sm__lt_/div_gt__lt_div_gt_                _lt_/div_gt__lt_div_gt_                textureContext.save()_sm__lt_/div_gt__lt_div_gt_                _lt_/div_gt__lt_div_gt_                //And_lt_/div_gt__lt_div_gt_                textureContext.drawImage(maskcanvas_co_ 0_co_ 0)_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_                textureContext.restore()_sm__lt_/div_gt__lt_div_gt_                texture.update()_sm__lt_/div_gt__lt_div_gt_        }_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_         var draw2 _eq_ function(xval_co_yval_co_zval)_lt_/div_gt__lt_div_gt_        {_lt_/div_gt__lt_div_gt_                var x _eq_ xval_co__lt_/div_gt__lt_div_gt_                    z _eq_ zval_co__lt_/div_gt__lt_div_gt_                    brushSize _eq_ 5_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_                //Check_lt_/div_gt__lt_div_gt_                if(textureComplete _eq__eq_ false) {_lt_/div_gt__lt_div_gt_                        return_sm__lt_/div_gt__lt_div_gt_                }_lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_                //_lt_/div_gt__lt_div_gt_                x _eq_ (x + (groundSize/2))_sm__lt_/div_gt__lt_div_gt_                x _eq_ (x - (ground.position.x))_sm__lt_/div_gt__lt_div_gt_                z _eq_ (z - (ground.position.z))_sm__lt_/div_gt__lt_div_gt_                z _eq_ ((groundSize/2) - z)_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_                //_lt_/div_gt__lt_div_gt_                x _eq_ (x/groundSize)*textureSize.width_sm__lt_/div_gt__lt_div_gt_                z _eq_ (z/groundSize)*textureSize.height_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_                //Ok!_lt_/div_gt__lt_div_gt_                brushcontext.save()_sm__lt_/div_gt__lt_div_gt_                brushcontext.clearRect(0_co_ 0_co_ textureResolution_co_ textureResolution)_sm__lt_/div_gt__lt_div_gt_                //maskcontext.globalAlpha _eq_ 0.4_sm__lt_/div_gt__lt_div_gt_                brushcontext.drawImage(img_co_ 0_co_ 0_co_ textureResolution_co_ textureResolution_co_ x-(brushSize)_co_ z-(brushSize)_co_ brushSize*2_co_ brushSize*2)_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_                brushcontext.restore()_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_                //Now_lt_/div_gt__lt_div_gt_                maskcontext.save()_sm__lt_/div_gt__lt_div_gt_                maskcontext.clearRect(0_co_ 0_co_ textureSize.width_co_ textureSize.height)_sm__lt_/div_gt__lt_div_gt_                //maskcont_lt_/div_gt__lt_div_gt_                maskcontext.drawImage(mask_co_ 0_co_ 0_co_ mask.width_co_ mask.height_co_ x-(brushSize)_co_ z-(brushSize)_co_ brushSize*2_co_ brushSize*2)_sm__lt_/div_gt__lt_div_gt_                maskcontext.globalCompositeOperation _eq_ _t_source-in_t__sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_                //Now_lt_/div_gt__lt_div_gt_                maskcontext.drawImage(brushcanvas_co_ 0_co_ 0)_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_                maskcontext.restore()_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_                textureContext.save()_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_                //And_lt_/div_gt__lt_div_gt_                textureContext.drawImage(maskcanvas_co_ 0_co_ 0)_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_                textureContext.restore()_sm__lt_/div_gt__lt_div_gt_                texture.update()_sm__lt_/div_gt__lt_div_gt_        }_sm__lt_/div_gt__lt_div_gt_        _lt_/div_gt__lt_div_gt_        _lt_/div_gt__lt_div_gt_        var onPointerDown _eq_ function() { _lt_/div_gt__lt_div_gt_                isDown _eq_ true_sm__lt_/div_gt__lt_div_gt_                var pickinfo _eq_ scene.pick(scene.pointerX_co_ scene.pointerY)_sm__lt_/div_gt__lt_div_gt_            if (pickinfo.hit) {_lt_/div_gt__lt_div_gt_                draw(pickinfo.pickedPoint)_sm__lt_/div_gt__lt_div_gt_                // Send Poninter Down Info to Server_lt_/div_gt__lt_div_gt_                if (connected){_lt_/div_gt__lt_div_gt_                 WInfo.move_eq_0_sm__lt_/div_gt__lt_div_gt_                 WInfo.x_eq_ pickinfo.pickedPoint.x_sm__lt_/div_gt__lt_div_gt_                 WInfo.y_eq_ pickinfo.pickedPoint.y_sm__lt_/div_gt__lt_div_gt_                 WInfo.z_eq_ pickinfo.pickedPoint.z_sm__lt_/div_gt__lt_div_gt_                socket.emit(_t_writing_t__co_WInfo)_sm__lt_/div_gt__lt_div_gt_                }_lt_/div_gt__lt_div_gt_            }_lt_/div_gt__lt_div_gt_        }_lt_/div_gt__lt_div_gt_        var onPointerUp _eq_ function() { isDown _eq_ false_sm_ }_lt_/div_gt__lt_div_gt_        var onPointerMove _eq_ function() {_lt_/div_gt__lt_div_gt_                if(isDown) {_lt_/div_gt__lt_div_gt_                        var pickinfo _eq_ scene.pick(scene.pointerX_co_ scene.pointerY)_sm__lt_/div_gt__lt_div_gt_                if (pickinfo.hit) {_lt_/div_gt__lt_div_gt_                    draw(pickinfo.pickedPoint)_sm__lt_/div_gt__lt_div_gt_                 // Send Pointer Move Info to Server_lt_/div_gt__lt_div_gt_                 if (connected){_lt_/div_gt__lt_div_gt_                 WInfo.move_eq_1_sm__lt_/div_gt__lt_div_gt_                 WInfo.x_eq_ pickinfo.pickedPoint.x_sm__lt_/div_gt__lt_div_gt_                 WInfo.y_eq_ pickinfo.pickedPoint.y_sm__lt_/div_gt__lt_div_gt_                 WInfo.z_eq_ pickinfo.pickedPoint.z_sm__lt_/div_gt__lt_div_gt_                 socket.emit(_t_writing_t__co_WInfo)_sm__lt_/div_gt__lt_div_gt_                }_lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_                }_lt_/div_gt__lt_div_gt_                }        _lt_/div_gt__lt_div_gt_        }_lt_/div_gt__lt_div_gt_        _lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_    canvas.addEventListener(_qt_pointerdown_qt__co_ onPointerDown_co_ false)_sm__lt_/div_gt__lt_div_gt_    canvas.addEventListener(_qt_pointerup_qt__co_ onPointerUp_co_ false)_sm__lt_/div_gt__lt_div_gt_    canvas.addEventListener(_qt_pointermove_qt__co_ onPointerMove_co_ false)_sm__lt_/div_gt__lt_div_gt_        _lt_/div_gt__lt_div_gt_        scene.onDispose _eq_ function () {_lt_/div_gt__lt_div_gt_        canvas.removeEventListener(_qt_pointerdown_qt__co_ onPointerDown)_sm__lt_/div_gt__lt_div_gt_        canvas.removeEventListener(_qt_pointerup_qt__co_ onPointerUp)_sm__lt_/div_gt__lt_div_gt_        canvas.removeEventListener(_qt_pointermove_qt__co_ onPointerMove)_sm__lt_/div_gt__lt_div_gt_    }_lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_ // LG   return scene_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_// LG }_sm__lt_/div_gt__lt_div_gt_      // -------------------------------------------------------------_lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_      // Now_co_ call_lt_/div_gt__lt_div_gt_// LG      var scene _eq_ createScene()_sm__lt_/div_gt__lt_div_gt_ _lt_/div_gt__lt_div_gt_      // Register a_lt_/div_gt__lt_div_gt_      engine.runRenderLoop(function () {_lt_/div_gt__lt_div_gt_         scene.render()_sm__lt_/div_gt__lt_div_gt_      })_sm__lt_/div_gt__lt_p_gt_ _lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_/div_gt__lt_p_gt_Thanks_co__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_DB_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2015-05-25T06:28:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_For part 1 I_t_m not sure what you_t_re asking._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_For part 2_co_ I think the only way to draw a texture with a different base color is to give the mesh vertex colors_co_ and then use your texture as an ambient texture rather than a diffuse texture._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Demo_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1W9YYU_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1W9YYU_lt_/a_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-05-25T08:21:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Isn_t_t a dynamic texture an ambient texture?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2015-05-25T12:45:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_A dynamic texture is just a texture generated from a html canvas 2D... it can be used as any other texture then _dd_ ambient_co_ diffuse_co_ etc_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-05-25T17:33:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_So I need to apply the dynamic texture to a plane which I can rotate and translate - but send the texture through the canvas to the plane.  I have a mask canvas in the script above_co_ which I will remove as it_t_s not necessary.  Any thoughts to how I can use a plane to pass color to a dynamic texture applied to the plane?  I_t_ve tried within my script_co_ but have failed - perhaps due to the methods I_t_m employing.  Any help would be greatly appriciated as I_t_m almost a week behind and should finish the app today._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-05-26T13:21:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi DB and others!_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_blockquote data-ipsquote_eq__qt__qt_ class_eq__qt_ipsQuote_qt__gt__lt_div_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_send the texture through the canvas to the plane_lt_/p_gt__lt_/div_gt__lt_/blockquote_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I_t_m not sure what you are saying_co_ with this.  You don_t_t need to _t_send_t_ anything_co_ because dynamicTextures are derived from 2D Canvas... but it_t_s all done behind the scene... with the BJS dynamicTexture code.  You can simply call drawText... like the docs show.  If you want a transparent background (so the color of the plane is used for the DT background color)... then you set the dynamicTexture.hasAlpha _eq_ true... and then use the word _qt_transparent_qt_ (with quotes)_co_ like this..._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_dynamicTexture.drawText(_qt_test_qt__co_ 0_co_ 0_co_ ?_co_ ?_co_ _qt_transparent_qt_)_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_There_t_s a few demos around that have DT _qt_transparent_qt_ background set.  _lt_a href_eq__qt_http_dd_//urbanproductions.com/wingy/babylon/search/form06/form06.htm_qt_ rel_eq__qt_external nofollow_qt__gt_Search the forum_lt_/a_gt_ with some tasty fodder._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_And_co_ of course_co_ if you want the TEXT to take-on the color of the plane_co_ just peek the plane.diffuseColor and then use that color as your text color.  But I could be misunderstanding the entire issue... here.  You might be wanting to use dynamicTextures for something OTHER-THAN text (such as lines_co_ circles_co_ strokes_co_ etc).  But_co_ fills is fills_co_ right?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_The _lt_a href_eq__qt_http_dd_//www.w3.org/TR/2015/WD-2dcontext-20150514/_qt_ rel_eq__qt_external nofollow_qt__gt_context2D object_lt_/a_gt_ that lies behind dynamicTextures... is a real sweetheart.  Lots of knobs to play-with.  Essentially_co_ SVG on a stick.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  Have you looked at that beast?  It is the basis of our drawtext func.  Caution_dd_  People have toured that 2d context webpage... and never returned.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_ohmy.png_qt_ alt_eq__qt__dd_o_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/ohmy@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Thank goodness context2D is a DOM object and not a BJS object... so we don_t_t have the task of debugging it_co_ ever.  heh_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_But yeah_co_ you can do createPlane_co_ createGround (both gen standard UVs)_co_ or plot a plane with vertex data (and _lt_u_gt_still set basic UVs_lt_/u_gt_)... then use a STANDARD material on it_co_ and then use a dynamicTexture in one or more of the StandardMaterial_t_s texture-able slots... diffuseTexture_co_ ambientTexture_co_ emissiveTexture_co_ opacityTexture_co_ specularTexture_co_ etc.  It takes a little while to learn how BJS wrangles textures_co_ but once you get comfortable with it_co_ you_t_ll love it.  Mega-versatile._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"dbawel","Date":"2015-05-26T14:33:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_My script is not easy to read_co_ as I had to remove most remarks to optimize for the node.js server - until I upgrade to mass users today.  If you see I create a ground object_co_ a canvas for a 1024 texture_co_ and a 16x16 canvas as a mask.  I_t_m able to draw on the ground object_co_ but have been unable to draw on a plane in BJS.  This is not a huge issue now_co_ as I_t_ve been able to manipulate the camera to orient the ground to be framed the way I need.  However_co_ it would be good to know why I_t_m not able to replace the ground object with another object to draw directly on the object.  No text_co_ simply passing pointer events through the texture and mask canvas_t_ to the dynamic texture on the ground._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2015-05-31T15:15:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Hi DB... I want to help with this if I can... but I_t_m not sure how.  Allow me to try to clarify?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_When you say _qt_draw on the ground object_qt__co_ you mean... like... dynamicTexture.getContext().lineTo()... for example?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Sorry if I_t_m being rudimentary_co_ here.  You are a pretty smart chap_co_ and it_t_s a challenge for my brain to keep-up with yours_co_ whatsoever.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_I assume that the mask texture is some crosshairs and/or brush shape.  Correct me as needed._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_There is nothing better for getting click points on grounds... then the code used by Deltakosh in _lt_a href_eq__qt_http_dd_//babylonjs-playground.azurewebsites.net/?18_qt_ rel_eq__qt_external nofollow_qt__gt_our drag_t_n_t_drop playground demo_lt_/a_gt_.  Notice the getGroundPosition() function.  I don_t_t understand the word _t_predicate_t_ much at all_co_ but see the _lt_em_gt_return mesh _eq__eq_ ground_sm__lt_/em_gt_ out on the end of line 66?  That ensures that getGroundPosition returns pickinfo.pickedPoint only when a mesh named _t_ground_t_ is clicked-upon._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Here_t_s _lt_a href_eq__qt_http_dd_//babylonjs-playground.azurewebsites.net/#J1HEE_qt_ rel_eq__qt_external nofollow_qt__gt_a modification of that demo_lt_/a_gt_... and you can see in line 12... that I have changed createGround to createPlane.  Drag_t_n_t_drop is still working_co_ so standard planes CAN use pointer pick/click positions.  I suggest using this method or similar.  If you want to create your own plane primitive_co_ just steal _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/Babylon/Mesh/babylon.mesh.vertexData.js#L812_qt_ rel_eq__qt_external nofollow_qt__gt_the createPlane code_lt_/a_gt_ (on the vertexData obj) and do your plane in a similar fashion (adjusting positions as wanted).  Keep in mind that there is also a createPlane() func on BABYLON.Mesh_co_ which is a wrapper func for the createPlane() on vertexData._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_This demo also has starting and ending points_co_ so it is ready for dynamicTexture.getContext().lineTo()... right?_lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Anyway_co_ I hope this helps.  If not_co_ could you use the modified demo_co_ and adjust it in a way that more-clearly shows the issue?  (then make another SAVE and send us the URL)  Thanks!  _lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Sorry it took me so long to respond.  You are probably WAY beyond this issue_co_ by now.  _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt_  Be well!_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]