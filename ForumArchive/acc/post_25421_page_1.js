[{"Owner":"Tavurth","Date":"2016-09-25T17:16:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWhen using chains of parent objects_co_ especially with large distances_co_ the camera jumps all over the place_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#NJMSC%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#NJMSC#4_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tProblem kicks in just after a distance of 10_co_000_co_000.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis could perhaps be solved by utilising _lt_a href_eq__qt_https_dd_//github.com/MikeMcl/bignumber.js/_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/MikeMcl/bignumber.js/_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEdit_dd_ Problem occurs when there_t_s a large differential between the size and distance when using parent objects_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#NJMSC%235_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#NJMSC#5_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Tavurth","Date":"2016-09-25T20:59:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tProblem is evident even when there is only one sphere_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1SSVBR%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1SSVBR#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo normalise the bug_co_ A sphere of size 1 with distance 250k from the origin causes uncontrollable and unworkable jitter.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m guessing that this is a problem with the basic render engine_co_ does anyone have any ideas?\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Tavurth","Date":"2016-09-25T21:12:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFor comparison here is ThreeJS running with a size of 1 and a distance of 440 million from the origin. (Near upper limit)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//codepen.io/anon/pen/ORpZJE?editors_eq_0010_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//codepen.io/anon/pen/ORpZJE?editors_eq_0010_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2016-09-26T15:13:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIn the 3JS example you are just rotating the cube.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere it is with the camera rotating around the cube_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//codepen.io/anon/pen/JRNEgr?editors_eq_0010_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//codepen.io/anon/pen/JRNEgr?editors_eq_0010_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Tavurth","Date":"2016-09-26T17:27:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThank you_co_ yes you_t_re right_co_ my mistake.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo to normalise_co_ this would be a size of 1 at a distance of 250k_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//codepen.io/anon/pen/RGVgVQ?editors_eq_0010_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//codepen.io/anon/pen/RGVgVQ?editors_eq_0010_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs this just a problem with WebGL? I don_t_t remember having it with OpenGL 3.0_co_ when loaded through a window server.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs it assumed that everyone will use less than 250k units?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Tavurth","Date":"2016-09-26T17:32:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAs a workaround to this problem_co_ I guess I_t_ll use the currently viewed object as the origin_co_ and re-compute the position of other objects_co_ using the current as an offset. (Not ideal since it_t_ll be calculation heavy).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnother workaround would be to play with sizes and distances until I find something that works_co_ although taking this route will likely end up giving me problems in the future.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThank you for your help)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEdit_dd_ Relevant information here_dd_ _lt_a href_eq__qt_http_dd_//stackoverflow.com/questions/14761595/three-js-objects-shimmering-at-large-distances_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//stackoverflow.com/questions/14761595/three-js-objects-shimmering-at-large-distances_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Tavurth","Date":"2016-09-26T21:29:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSo it was very simple to make the change_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// Each object has it_t_s own JS position vector\n// Here we assign new a mesh position based on a subtraction of \n// this mesh_t_s position and the new origin_t_s position\n\n// Save this object for use inside Object.each()\nvar that _eq_ this_sm_\n\n// Offset each of the meshes which belong to this object by an arbitrary position\nObject.each(this.meshes_co_ function(mesh) {\n  mesh.position _eq_ that.position.subtract(newOrigin.position)_sm_\n})_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tUsing _lt_a href_eq__qt_http_dd_//mootools.net_qt_ rel_eq__qt_external nofollow_qt__gt_mootools_lt_/a_gt_ for _lt_strong_gt_Object.each_lt_/strong_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-10-02T07:32:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\twhoa whoa whoa_co_ can you go back over this really quick? something is not right there is no reason for the camera to jitter given your explanation and there should be no work around.  Ill take a look at the playground you posted and see what I can find\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-10-02T07:33:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tohh ok I got it... why is your camera maxZ so high?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tthere is no point for that_co_ set it to something reasonable_co_ like 100 and scale your scene from there to do the ratio or size that you want._lt_br /_gt__lt_br /_gt_\n\t    camera.maxZ _eq_ 10000000000000_sm_ is never going to work_co_ in any engine.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]