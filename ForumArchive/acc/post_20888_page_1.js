[{"Owner":"Matt Duffield","Date":"2016-03-02T03:00:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi everybody_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have another question for the brain trust. I am working on a plane game. I am able to control my plane perfectly fine and I have replicated the plane class to create enemy planes. The question I have is what is the best way to efficiently create a simple AI system for the enemy planes?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere is what I was thinking_dd_\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tQuote\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tCreate a three rays on the left side of the plane_co_ three rays on the right side of the plane and three more in the center front.  The rays would be pointing up 45 degrees_co_ straight ahead_co_ and down 45 degrees for the center set.  The left and right set of rays would also be angled outward a little with one point up 45 degrees_co_ straight ahead_co_ and down 45 degrees.  These rays (9 in total) would be the eyes of the enemy plane and I was thinking to use these rays to detect the user_t_s plane as well as detect buildings or other possible obstacles.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t_lt_/p_gt_\n\t\t_lt_br_gt__lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI attached a screen shot of a plane with some lines to demonstrate what I was thinking.  There would actually be 9 lines total but I am showing on 3 lines.  If I detect an _qt_obstacle_qt_ mesh via the right rays_co_ then I would have the plane move left and conversely for the opposite. If I detect an _qt_player_qt_ mesh on any of the rays_co_ then I would rotate and fly towards the plane. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have played with simple line meshes to do the same thing but I was worried it could be less efficient if I had a large collection of obstacles and players objects to loop through to detect a collision.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny thoughts would be greatly appreciated!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_03/plane_ray_casting.png.d383d95b3f0f66112f6033eef6c706fe.png_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_6605_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_03/plane_ray_casting.thumb.png.a968bb2bcdf193e4bdea95c4dda404fb.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_plane_ray_casting.png_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-03-02T05:27:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tActually_co_ you intend to implement some knid of frustum !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI guess 4 rays (pyramidal) should be enough\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-03-02T05:50:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi guys!  Coooool project.  Just put a big invisible cone on the front of the airplanes and look for mesh collisions.  Better yet_co_ just huge-ify the mesh.ellipsoid on each plane_co_ and... um... I dunno_co_ I_t_m probably talking out of my butt_co_ here.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt_true_qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt__gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI suppose you want to know WHERE in the frustum something is located-at.  Simple collision testing might not provide that.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs that a Spad-23 Voxelator?  Great flying plane!  I flew one in World War Never.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Matt Duffield","Date":"2016-03-02T12:51:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi guys_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThanks for your replies. Is there somewhere I can go to find out how to create this frustum? Also_co_ as @Wingnut indicated_co_ I am going to want to know where in the frustum this is happening.  \n_lt_/p_gt_\n\n_lt_p_gt_\n\t@jerome if I understand you correctly_co_ I would simply create 4 rays from the front center of the plane and have two rays expand outward toward the top and two outward toward the bottom to make the pyramid_co_ right? Also_co_ will the 4 rays also track something that is in the middle but not touching each of the four?  How will that work?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny further guidance would be greatly appreciated.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t@wingnut my boys have been making all kinds of planes for me using MagicaVoxel. I simply take them into Blender and animate the propeller(s) as well as add spawn points for the guns.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t\t\t\n\n_lt_span class_eq__t_ipsType_reset ipsType_medium ipsType_light_t_ data-excludequote_gt_\n\t_lt_strong_gt_Edited _lt_time datetime_eq__t_2016-03-02T12_dd_58_dd_44Z_t_ title_eq__t_03/02/2016 12_dd_58  PM_t_ data-short_eq__t_2 yr_t__gt_March 2_co_ 2016_lt_/time_gt_ by Matt Duffield_lt_/strong_gt_\n\t\n\t\t_lt_br_gt_Added question...\n\t\n\t\n_lt_/span_gt_\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]