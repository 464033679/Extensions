[{"Owner":"swat0284","Date":"2015-11-04T21:46:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_hello_co_ im new in JS_co_ can i split my main.js file into_dd__lt_br_gt_player.js_lt_br_gt_gui.js_lt_br_gt_other.js_lt_br_gt_and how to comunicate betwene it?_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"WombatTurkey","Date":"2015-11-04T21:51:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_Global Variable Scope _lt_a href_eq__qt_http_dd_//www.w3schools.com/js/js_scope.asp_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.w3schools.com/js/js_scope.asp_lt_/a_gt__lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_Is one way _lt_img src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ alt_eq__qt__dd_)_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ width_eq__qt_20_qt_ height_eq__qt_20_qt__gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jfhs","Date":"2015-11-05T14:59:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You can use JavaScript objects as _lt_em_gt_namespaces_lt_/em_gt_ or use a module system._lt_/p_gt__lt_p_gt_ _lt_/p_gt__lt_p_gt_If you go the namespace route_co_ you_t_ll have one global object containing the parts of your application. Your gui.js file could then look like this for example_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_if (typeof GAME _eq__eq__eq_ _qt_undefined_qt_) {    var GAME _eq_ {}_sm_}GAME.gui _eq_ (function () {        // define some GUI functions here    function doSomeGuiStuff () {        GAME.other.doSomeStuff()_sm_        // ...    }        return {        // Put the functions you want to be _qt_public_qt_ into this object_dd_        doSomeGuiStuff_dd_ doSomeGuiStuff    }_sm_}())_sm__lt_/pre_gt__lt_p_gt_This approach uses only one global variable (GAME) which is much better than having everything globally_co_ but you always need to include your script files _lt_em_gt_in the right order_lt_/em_gt_ if one file depends on another file. This can get frustrating if your code gets bigger and you use more and more files. Therefore there are so-called module systems that help you with this_co_ like _lt_a href_eq__qt_http_dd_//requirejs.org/_qt_ rel_eq__qt_external nofollow_qt__gt_require.js_lt_/a_gt_ or _lt_a href_eq__qt_https_dd_//github.com/iiyo/using.js_qt_ rel_eq__qt_external nofollow_qt__gt_using.js_lt_/a_gt_ (disclaimer_dd_ this is my own library). In these libraries you either have a specific folder structure or a file that tells the module system where to find your modules. In using.js_co_ you would include the using.js file and a file containing the script paths in your HTML file. The paths file can look like this_dd__lt_/p_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_// File _qt_paths.js_qt_(function () {        // This assumes you have using.js in your main directory    // and your scripts in a subfolder of the main directory    // called _qt_js/_qt_    var base _eq_ using.path + _qt_js/_qt__sm_        using.modules.gui _eq_ base + _qt_gui.js_qt__sm_    using.modules.player _eq_ base + _qt_player.js_qt__sm_    using.modules.other _eq_ base + _qt_other.js_qt__sm_    }())_sm__lt_/pre_gt__lt_pre class_eq__qt_ipsCode prettyprint_qt__gt_// File _qt_gui.js_qt_using(_qt_other_qt_).define(_qt_gui_qt__co_ function (other) {        // Define your GUI functions here_co_ using some stuff from the _qt_other_qt_ module    function doGuiStuff () {        other.doSomeStuff()_sm_        // ...    }    return {        // Put all the functions you need to use somewhere else into this object_dd_        doGuiStuff_dd_ doGuiStuff    }_sm_    })_sm__lt_/pre_gt__lt_p_gt_If you_t_re only developing a simple game_co_ the namespace objects will suffice. For anything else you should probably read up on module systems. The important thing here is that you _lt_em_gt_don_t_t_lt_/em_gt_ use global variables as advised in another answer because it can lead to hard-to-find bugs_co_ especially in JavaScript._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Jaskar","Date":"2015-11-05T16:54:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_You can use a _lt_a href_eq__qt_https_dd_//en.wikipedia.org/wiki/Singleton_pattern_qt_ rel_eq__qt_external nofollow_qt__gt_singleton object_lt_/a_gt__co_ then manage all your game with it._lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]