[{"Owner":"joshcamas","Date":"2016-11-01T00:20:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHia guys!_lt_br /_gt_\n\tIn my very basic game_co_ I have gravity and collision and stuff enabled on my little camera guy. Awesome!_lt_br /_gt_\n\tBut then when I try enabling gravity on another mesh_co_ it seems to not do anything at all!_lt_br /_gt_\n\tWhy is this? I seem to remember this being a problem months ago but assumed it got fixed..._lt_br /_gt__lt_br /_gt_\n\tIf babylon doesn_t_t have this feature_co_ I guess I_t_ll need to implement it myself. I have absolutely no need for a fancy physics engine of any kinda_co_ just need super simple gravity _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ _lt_br /_gt__lt_br /_gt_\n\tAlas_co_ imo the greatest weakness of Babylon is it_t_s mix mash of features... we have some absolutely stunning beautiful effects_co_ but then do not support gravity on meshes_co_ if it_t_s true that it_t_s not there._lt_br /_gt_\n\tI think I understand why... different people have developed different things (aka someone else developed free camera and added gravity as a feature)_co_ which causes this. I guess it_t_s inevitable.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRegardless_co_ let_t_s figure out how to do this!_lt_br /_gt__lt_br /_gt_\n\tEDIT_dd_ Btw_co_ I_t_m working with CreatePlane function_co_ so maybe gravity isn_t_t available in that? I_t_m looking into it rn_lt_br /_gt__lt_br /_gt_\n\tEDIT2_dd_ Ok_co_ so I think (?) gravity isn_t_t supported in meshes. However_co_ it looks like implementing it shouldn_t_t be hard at all! Basically_co_ all the free camera does is add the gravity velocity to the velocity. Now_co_ I_t_m not sure when this happens - I would venture to guess every tick_co_ however in the code it seems to be attached to collision. Hmmmmm _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2016-11-01T00:28:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tPG?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2016-11-01T00:36:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_149524_qt_ data-ipsquote-contentid_eq__qt_26137_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1477960081_qt_ data-ipsquote-userid_eq__qt_4289_qt_ data-ipsquote-username_eq__qt_adam_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t8 minutes ago_co_ adam said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tPG?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tWhat does PG mean? o_o\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2016-11-01T00:59:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tA playground example of the issue sometimes helps to solve the problem.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2016-11-01T02:55:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tGravity is a physics thing_co_ I wouldn_t_t think Babylon would have any features related to it when there_t_s no physics engine being used.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat said_co_ if all you want is gravity then_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_mesh.velocity _eq_ 0\nscene.beforeRender _eq_ function () {\n\tmesh.velocity -_eq_ 1\n\tmesh.position.y +_eq_ mesh.velocity\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2016-11-01T03:16:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_span_gt__lt_span_gt_@fenomas_lt_/span_gt__lt_/span_gt__dd_ Well_co_ the camera comes with built in gravity_co_ so I don_t_t see why it isn_t_t a bad feature idea on meshes as well _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t@adam_dd_ Ahh yeah! Here it be!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#23ICEC%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#23ICEC#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t(One little _qt_bug_qt_ is you have to move to start gravity on the camera. This has to do with it being paired with the function moveWithCollisions_co_ I believe.)_lt_br /_gt_\n\tAs you can see_co_ free camera has a gravity system. This was built directly into the camera_co_ to make it easy to make fps_t_s and such _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_br /_gt_\n\tHowever_co_ it has not been built into the meshes or nothin _lt_img alt_eq__qt__dd_o_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_ohmy.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/ohmy@2x.png 2x_qt_ title_eq__qt__dd_o_qt_ width_eq__qt_20_qt_ /_gt__lt_br /_gt_\n\tSo my goal is to do this_co_ so others can easily enable gravity if they wish_co_ or not if they don_t_t. _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_ Cause sometimes you just want a simple enemy that doesn_t_t float_co_ but don_t_t want a super expensive physics engine with bodies and such\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ll keep ya_t_ll posted as I look into this deeper. One thing I_t_ve noticed is Babylon is very good at making super sexy demos_co_ however it often falls short when making a real game_co_ like for example a very simple fps. _dd_3 \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2016-11-01T04:26:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOh yeah_co_ there_t_s some minimal physics-like stuff built into the camera. Personally I find it a little misleading - it works but only for very specific kinds of contents_co_ and not otherwise. I think it_t_s meant for quick demos and playgrounds_co_ not for real content.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_149533_qt_ data-ipsquote-contentid_eq__qt_26137_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1477970186_qt_ data-ipsquote-userid_eq__qt_809_qt_ data-ipsquote-username_eq__qt_joshcamas_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t53 minutes ago_co_ joshcamas said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tSo my goal is to do this_co_ so others can easily enable gravity if they wish_co_ or not if they don_t_t. _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_ Cause sometimes you just want a simple enemy that doesn_t_t float_co_ but don_t_t want a super expensive physics engine with bodies and such\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI strongly suspect you_t_d be better off just using physics. If _qt_all_qt_ you do is enable gravity_co_ everything will just fall forever. So you need some ground_co_ which means you need collisions_co_ which means you need collision impostors_co_ and some rigging to update mesh positions. Then if bodies can collide with anything other than the ground you need constraints_co_ and if performance matters you need broadphase_co_ etc. Once all that_t_s done_co_ you write a release announcement for your new physics engine. _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2016-11-01T04:41:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_149538_qt_ data-ipsquote-contentid_eq__qt_26137_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1477974361_qt_ data-ipsquote-userid_eq__qt_12925_qt_ data-ipsquote-username_eq__qt_fenomas_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t30 minutes ago_co_ fenomas said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tOh yeah_co_ there_t_s some minimal physics-like stuff built into the camera. Personally I find it a little misleading - it works but only for very specific kinds of contents_co_ and not otherwise. I think it_t_s meant for quick demos and playgrounds_co_ not for real content.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tI strongly suspect you_t_d be better off just using physics. If _qt_all_qt_ you do is enable gravity_co_ everything will just fall forever. So you need some ground_co_ which means you need collisions_co_ which means you need collision impostors_co_ and some rigging to update mesh positions. Then if bodies can collide with anything other than the ground you need constraints_co_ and if performance matters you need broadphase_co_ etc. Once all that_t_s done_co_ you write a release announcement for your new physics engine. _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI disagree _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_ _lt_br /_gt__lt_br /_gt_\n\tImagine a game like Mario. Is there a physics engine? No. However_co_ it has velocity and acceleration_co_ as well as collision between tiles._lt_br /_gt_\n\tWell_co_ I_t_m making a game like Mario. Well_co_ more like DOOM... but you get the picture. A grid like environment.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo make ground_co_ I simply do not enable gravity on that object. Collision is already a feature_co_ so this works great! No constraints needed! _lt_br /_gt__lt_br /_gt_\n\tWe already have collision impostors_co_ as in we have a simple collision system. Tbh we need to make meshes be allowed to have a custom collision impostor_co_ I_t_ll add that to my list hehe. For my project_co_ it_t_s a lot like DOOM_co_ so simple walls will do perfectly!_lt_br /_gt__lt_br /_gt_\n\tRigging is only needed for skeletons_co_ something I am not doing.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_br /_gt_\n\t--------------------------_lt_br /_gt__lt_br /_gt_\n\tAnd most video games do not require fancy physics on players and enemies. For example_co_ Skyrim characters - from dragons to the player do not have a physics engine attached. (Also known as the havoc engine) They have gravity though_co_ as well as other nice stuff. However_co_ Skyrim uses a physics engine for objects - notice how these objects require a fancy engine because they roll around in the environment_co_ and can be thrown_co_ and bounced and such! The physics engine is also used for skirts and fluttering clothing. This is what a physics engine is used for!_lt_br /_gt__lt_br /_gt_\n\tIn UE4_co_ physics engines are used in the same way. Enable it if you want super fancy stuff_co_ but never use it on a player_co_ unless it needs it_co_ like if your a bouncy ball that runs into stuff._lt_br /_gt__lt_br /_gt_\n\t2D Engines do the same thing - in mario_co_ no physics engine is attached to him. However_co_ in some fancier 2D games_co_ there may be objects around that bounce_co_ or as I said above_co_ special cases may arise where even the player has physics enabled. But rarely is this the case.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t--------------------------_lt_br /_gt__lt_br /_gt_\n\tI am personally use BabylonJS to make a game that runs efficiently. Will it break the standard of what webGL will do? Nope. But it will be a fun little game _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_ _lt_br /_gt__lt_br /_gt_\n\tSoooooo I_t_ll be working on this_co_ should get some sort of demo out within a week or so. What it will do is simply let you type _qt_josh.applyGravity _eq_ true_qt__co_ and it will simply automatically lower the character down by the scene_t_s gravity. (moveWithCollision) It_t_s that easy_co_ and it_t_s rad!!!_lt_br /_gt__lt_br /_gt_\n\tYour example code is pretty much what I_t_m looking for_co_ except for some little changes and of course implementation _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_br /_gt_\n\tOoooh and let_t_s Get _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt__t_s thoughts! _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-11-01T06:17:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\thehe.  Hey_co_ don_t_t drag ME into your little stomp_t_n_t_snort.  _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_  I_t_m just here for the free beer.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_149533_qt_ data-ipsquote-contentid_eq__qt_26137_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1477970186_qt_ data-ipsquote-userid_eq__qt_809_qt_ data-ipsquote-username_eq__qt_joshcamas_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t12 hours ago_co_ joshcamas said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tOne little _qt_bug_qt_ is you have to move to start gravity on the camera\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tcamera._needMoveForGravity _eq_ true_sm_    ...  starts camera falling right away.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1FOXSC%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1FOXSC#3_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t------------------------------\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWould moveWithCollisions also work for adding gravity-movement to a mesh?  I guess we_t_d need to continuously adjust things... to sim acceleration.  *shrug*\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow_co_ no more sugary soft drinks for you_co_ tonight_co_ okay Josh?  hehe. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t(Just jokin_t_ around_co_ attempting to keep the mood light_co_ and wondering if you have a spur in your saddle)  _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2016-11-01T06:31:52Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJosh_co_ I think we_t_re talking at cross purposes. Skyrim most certainly uses a physics engine for players (specifically it uses Havok). When you run_co_ behind the scenes the game is applying an impulse to your character_t_s physics body. When you drop a cabbage on the ground and walk over it_co_ it gets knocked out of the way because the character and the cabbage are both bodies in the same physics simulation. Just because the character_t_s individual parts (hair_co_ clothes_co_ etc.) aren_t_t independently simulated doesn_t_t mean there_t_s no engine involved. Most 2D and 3D games work the same way - characters might be represented by a simple impostor (box_co_ capsule_co_ etc)_co_ but each impostor_t_s movement in the world is modeled by a physics engine. (Even a game like Mario has a physics engine_co_ in the sense that it has a subsystem that integrates the position of each entity according to physical properties. It_t_s not a general-purpose engine of course_co_ it_t_s an ad-hoc system built into the game - whether that counts as a _qt_physics engine_qt_ or not is down to how one defines the term.)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnyway nomenclature aside_co_ the important point is that there_t_s nothing inherently expensive about using a physics engine. If you set up a scene with some boxes and spheres_co_ moving them around with cannon.js isn_t_t hugely more expensive than moving them with _lt_em_gt_moveWithCollisions_lt_/em_gt_ - behind the scenes_co_ pretty much the same work is being done. The main difference is that the built-in camera stuff is inflexible and made only for a certain kind of demo_co_ and physics engines are robust and general-purpose. For example_co_ when last I checked the ad-hoc system did all its physics in the camera_t_s move function. Presumably that_t_s because whoever made the feature was envisioning a simple demo where the camera is the only thing that moves_co_ and it starts out sitting on the ground_co_ and it can_t_t jump. And if you_t_re making specifically that demo_co_ the ad-hoc stuff works. If not - well_co_ naturally each of those limitations could be removed_co_ but after them there would be others. If somebody removed all the major limitations in the ad-hoc system_co_ the result would be another physics engine.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"aWeirdo","Date":"2016-11-01T09:14:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/809-joshcamas/?do_eq_hovercard_qt_ data-mentionid_eq__qt_809_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/809-joshcamas/_qt_ rel_eq__qt__qt__gt_@joshcamas_lt_/a_gt_  and everyone else _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ _co__lt_br /_gt__lt_br /_gt_\n\tInteresting subject_co__lt_br /_gt__lt_br /_gt_\n\tI started playing around with it and came up with this_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#23ICEC%238_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#23ICEC#8_lt_/a_gt__lt_br /_gt__lt_br /_gt_\n\teverything important is commented_co_ other stuff should be rather self-explaining_co_ but feel free to ask if in doubt about anything.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2016-11-02T03:20:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/12925-fenomas/?do_eq_hovercard_qt_ data-mentionid_eq__qt_12925_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/12925-fenomas/_qt_ rel_eq__qt__qt__gt_@fenomas_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYa I guess I have a different definition of a physics engine. But yea u sound about right _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tHmmm I do wonder if cannon is really just equally expensive compared to collisions. I should make a test comparison to see which is better _lt_img alt_eq__qt__dd_o_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_ohmy.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/ohmy@2x.png 2x_qt_ title_eq__qt__dd_o_qt_ width_eq__qt_20_qt_ /_gt_ Cause maybe since cannon is designed to be a physics engine Itll be better optimized_co_ or maybe it won_t_t depending on what features we want or don_t_t _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/17943-aweirdo/?do_eq_hovercard_qt_ data-mentionid_eq__qt_17943_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/17943-aweirdo/_qt_ rel_eq__qt__qt__gt_@aWeirdo_lt_/a_gt_ ooo that_t_s a good start_co_ I like it! Maybe we should do it your way and build a super duper simple Gravity manager or something. This works great for any simple needs for 3D Mario-like games _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt_ Oh_co_ and would it be better to use requestAnimationFrame or setinterval? I forget the pros and cons of each\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5733_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5733-wingnut/_qt_ rel_eq__qt__qt__gt_@Wingnut_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMan you are magic at Babylon! How do you find all these magically variables loll\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"aWeirdo","Date":"2016-11-02T03:57:16Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/809-joshcamas/?do_eq_hovercard_qt_ data-mentionid_eq__qt_809_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/809-joshcamas/_qt_ rel_eq__qt__qt__gt_@joshcamas_lt_/a_gt__lt_br /_gt__lt_br /_gt_\n\tI used _lt_span style_eq__qt_color_dd_rgb(39_co_42_co_52)_sm_font-family_dd__t_Helvetica Neue_t__co_ Helvetica_co_ Arial_co_ sans-serif_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_normal_sm_word-spacing_dd_0px_sm_background-color_dd_rgb(255_co_255_co_255)_sm_float_dd_none_sm__qt__gt_setInterval for control puposes_co_ (easy start/stop_co_ etc)_co_ but you can also add it to a registerBeforeRender_co_ i just didn_t_t see the need to calculate it on every frame when every second frame(30 times / second) looks smooth enough _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ _lt_/span_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2016-11-02T06:13:32Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/809-joshcamas/?do_eq_hovercard_qt_ data-mentionid_eq__qt_809_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/809-joshcamas/_qt_ rel_eq__qt__qt__gt_@joshcamas_lt_/a_gt_ Anything that moves objects around with velocity and acceleration is effectively a physics engine_co_ some are just more general than others. I mean_co_ what you_t_re talking about making here would be a physics engine_co_ albeit a simplified one.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhether your simplified engine would be faster than cannon/oimo depends entirely on what you need. Unless you have a clear idea of what work cannon/oimo do that you_t_re sure you won_t_t need_co_ and you_t_re confident that that work would be costly enough to make your game run slow_co_ I think it would be better to build first and tune performance later.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRemember that premature optimization is the root of all evil (97% of the time)!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2016-11-02T06:39:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/17943-aweirdo/?do_eq_hovercard_qt_ data-mentionid_eq__qt_17943_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/17943-aweirdo/_qt_ rel_eq__qt__qt__gt_@aWeirdo_lt_/a_gt_ If I can offer some advice _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_ul_gt__lt_li_gt_\n\t\tGravity is acceleration_co_ not velocity. _qt_pos +_eq_ gravity_qt_ should be _qt_vel +_eq_ gravity_sm_ pos +_eq_ vel_qt_\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tGenerally processing like this should always be done with render events (beforeRender) etc_co_ rather than setInterval. This is for a bunch of reasons - e.g. so that pausing babylon pauses the physics_co_ and so that you get consistent numbers of renders between each physics update_co_ or vice-versa.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tRealistically it_t_s necessary to update mesh positions every render. If the camera is moving it winds up looking weird if the scene is rendering at 60fps but objects only move at 30fps. (If the camera is attached to a physics object_co_ as it would be for an FPS_co_ this gets really really noticeable)\n\t_lt_/li_gt_\n_lt_/ul_gt__lt_p_gt_\n\tFor the physics you_t_re doing_co_ performance is completely negligible so there_t_s no downside to just updating the physics every frame_co_ using beforeRender. (In real content it_t_s much better to _lt_a href_eq__qt_http_dd_//gafferongames.com/game-physics/fix-your-timestep/_qt_ rel_eq__qt_external nofollow_qt__gt_decouple physics and rendering_lt_/a_gt__co_ but that_t_s probably beyond your scope here.)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2016-11-02T06:51:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYeah I think decoupling our mini physics engine (Guess that_t_s what we_t_re building eh) should be done at some point but not now_co_ as you say _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_br /_gt_\n\tHowever_co_ is collision detection optimized in Babylon? Do we make use of quadtrees and such? Related question but also not xD \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2016-11-02T08:25:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tBabylon can use quadtrees for frustum culling_co_ and I vaguely recall there_t_s a way to use them for collision detection as well. Quadtrees tend not to be a straight-up optimization though - they can make a scene faster or slower_co_ depending on what it contains.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"aWeirdo","Date":"2016-11-02T09:46:45Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_149685_qt_ data-ipsquote-contentid_eq__qt_26137_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1478068775_qt_ data-ipsquote-userid_eq__qt_12925_qt_ data-ipsquote-username_eq__qt_fenomas_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t3 hours ago_co_ fenomas said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/17943-aweirdo/?do_eq_hovercard_qt_ data-mentionid_eq__qt_17943_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/17943-aweirdo/_qt_ rel_eq__qt__qt__gt_@aWeirdo_lt_/a_gt_ If I can offer some advice _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_ \n\t\t_lt_/p_gt_\n\n\t\t_lt_ul_gt__lt_li_gt_\n\t\t\t\tGravity is acceleration_co_ not velocity. _qt_pos +_eq_ gravity_qt_ should be _qt_vel +_eq_ gravity_sm_ pos +_eq_ vel_qt_\n\t\t\t_lt_/li_gt_\n\t\t\t_lt_li_gt_\n\t\t\t\tGenerally processing like this should always be done with render events (beforeRender) etc_co_ rather than setInterval. This is for a bunch of reasons - e.g. so that pausing babylon pauses the physics_co_ and so that you get consistent numbers of renders between each physics update_co_ or vice-versa.\n\t\t\t_lt_/li_gt_\n\t\t\t_lt_li_gt_\n\t\t\t\tRealistically it_t_s necessary to update mesh positions every render. If the camera is moving it winds up looking weird if the scene is rendering at 60fps but objects only move at 30fps. (If the camera is attached to a physics object_co_ as it would be for an FPS_co_ this gets really really noticeable)\n\t\t\t_lt_/li_gt_\n\t\t_lt_/ul_gt__lt_p_gt_\n\t\t\tFor the physics you_t_re doing_co_ performance is completely negligible so there_t_s no downside to just updating the physics every frame_co_ using beforeRender. (In real content it_t_s much better to _lt_a href_eq__qt_http_dd_//gafferongames.com/game-physics/fix-your-timestep/_qt_ rel_eq__qt_external nofollow_qt__gt_decouple physics and rendering_lt_/a_gt__co_ but that_t_s probably beyond your scope here.)\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/12925-fenomas/?do_eq_hovercard_qt_ data-mentionid_eq__qt_12925_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/12925-fenomas/_qt_ rel_eq__qt__qt__gt_@fenomas_lt_/a_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t1_co_ i would challenge that and say that Gravity can be define as both_sm_ acceleration is what increases the velocity over time_co_ at which the object is falling._lt_br /_gt_\n\tBut seening as this is just a very basic and simple simulation of it_co_ (x mesh falls downwards until it hits the ground)_co_ i didn_t_t care to add or even think about stuff like mass_co_ drag and acceleration to slowly increase the falling speed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t2. i went for the setInterval with the following in mind_sm_ so one could define the frames_co_ if you have some 1000+ objects_co_ running it 60 times / sec seems unnecessarily heavy on the cpu_co_ especially when half is enough_co_ aswell as being able to pause it _lt_em_gt_without_lt_/em_gt_ having to pause babylon _dd_).(e.g. being able to pause everything with a click_co_ and still move the camera around the scene_co__lt_br /_gt_\n\tOfc_co_ looking in hindsight_co_ this could also be done with a boolean value inside a registerBeforeRender_co_ e.g. (!cGravActive) return_sm_ or w/e _lt_img alt_eq__qt__dd_P_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ title_eq__qt__dd_P_qt_ width_eq__qt_20_qt_ /_gt_ _lt_br /_gt__lt_br /_gt_\n\t3. But there_t_s no need in this case_co_ if you can get away with running the calculations 30 frames / second_co_ why not? the render(at 60 fps) is simply rendering it twice in the same position_co_ before it then renders it very slightly lower than that on the third &amp_sm_ fourth frames_co_ etc._lt_br /_gt_\n\tKeep in mind that it moves very slowly per frame_co_ so it_t_s hardly notiseable.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWith all that being said_co_ it_t_s pretty much just a piece of example code_co_ and what anyone prefers or ends up doing is their own choice ^^._lt_br /_gt_\n\t _lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"fenomas","Date":"2016-11-02T12:55:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tAs you like_co_ if you don_t_t want advice then I_t_ll stay out of it.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-11-02T14:01:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi guys!  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tBack in the old Commodore 64 days_co_ we would _qt_wedge_qt_ into the IRQ (interrupt request) loop... which probably doesn_t_t apply here at all.  But_co_ where I_t_m going with this... is that we could put a function on Node... something like a .runEachFrame() method.  If it is empty (or just a return)_co_ nothing happens to that Node (mesh_co_ light_co_ camera) each frame.  If it is set to a function_co_ then that function is run once per frame.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn other words_co_ a mesh_co_ camera_co_ or light_co_ could be self-controlling.  One scene item could be slowly floating upward_co_ another dropping due to gravity_co_ a light could be doing cosine panning back and forth_co_ or whatever.  I suppose some kind of _qt_state_qt_ would need to be maintained ... for SOME .runEachFrame() funcs.  Some added properties_co_ I guess.  I suppose a guy could use a .eachFrameStore property_co_ and coders of .runEachFrame() funcs... could use that as a node-state storage place.... and count on it being available on any node.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThese node-wedge funcs would need to complete REAL FAST_co_ or else... trouble.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tThis could/would cause some scene delay as the engine polls through all nodes on each frame... running every .runEachFrame() function.  But each scene item could have different gravity rates.... or monitor for scene.wind and move appropriately_co_ anything.  It would certainly be versatile and allow for _qt_smart nodes_qt_.  It is also programmer-installable on a scene-by-scene basis.  No need to add it to the framework.  Just overload Node_co_ and iterate through all scene nodes once per frame... from the scene_t_s beforeRender loop.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCome to think of it_co_ this would be node.beforeRender_co_ eh? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust another goofy Wingnut idea... which usually means...  insane.  _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2016-11-02T15:14:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI don_t_t think that Node.beforeRender or Node.runEachFrame is necessary.  You can just use Scene.registerBeforeRender or if you need more options Scene.onBeforeRenderObservable.add.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2016-11-02T15:17:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_149711_qt_ data-ipsquote-contentid_eq__qt_26137_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1478095299_qt_ data-ipsquote-userid_eq__qt_5733_qt_ data-ipsquote-username_eq__qt_Wingnut_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ Wingnut said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tJust overload Node_co_ and iterate through all scene nodes once per frame...\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tObservables make it so that you don_t_t have to do this.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-11-02T15:32:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tjust my two cents_co_ usually doing some dedicated ultra-simple physics engines in my own scenes (moves_co_ simple collisions and bounces) when I don_t_t need the whole power of full engine_co_  I agree with _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/12925-fenomas/?do_eq_hovercard_qt_ data-mentionid_eq__qt_12925_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/12925-fenomas/_qt_ rel_eq__qt__qt__gt_@fenomas_lt_/a_gt_ _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- it_t_s always better to update everything before each rendering when it_t_s possible\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- it_t_s better to keep each physics dimension (position_co_ velocity_co_ acceleration) apart because you may want to tweak them later to get more realism or more dynamics (realistic moves aren_t_t always the best to make a scene attractive). Ex _dd_ change the gravity_co_ give an initial velocity or acceleration.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJust remember that the velocity is the temporal derivation of the position_co_ and the acceleration is the temporal derivation of the velocity what can be easily approximated (for linear equations) by the increase of the velocity by the acceleration amount each frame and then the increase of the position by the velocity.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tso _dd_ vel +_eq_ acc_sm_ pos +_eq_ vel_sm_ is the right way to go imho.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tRemember also that a force is homogeneous with a mass multilplied by an acceleration. So for a given mass (object)_co_ just tweaking its acceleration vector along the time is the same than applying forces onto it.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"joshcamas","Date":"2016-11-02T20:38:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_span_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/12925-fenomas/?do_eq_hovercard_qt_ data-mentionid_eq__qt_12925_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/12925-fenomas/_qt_ rel_eq__qt__qt__gt_@fenomas_lt_/a_gt_ and _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/17943-aweirdo/?do_eq_hovercard_qt_ data-mentionid_eq__qt_17943_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/17943-aweirdo/_qt_ rel_eq__qt__qt__gt_@aWeirdo_lt_/a_gt_ wowsers didn_t_t mean to make drama! I think both of your ideas are great and both make sense_co_ it_t_s just two different ideas on how something should work _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_br /_gt_\n\tHowever_co_ it_t_ll probably be easier to just throw all of this in the babylon render loop for now_co_ and think about better optimization later _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/span_gt__lt_br /_gt__lt_br /_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5453_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/_qt_ rel_eq__qt__qt__gt_@jerome_lt_/a_gt_ Woah math is mathy\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2016-11-02T22:27:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi again.  I am wandering off-topic_co_ sorry_co_ but both examples of observers in _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/Observables_qt_ rel_eq__qt_external nofollow_qt__gt_the docs_lt_/a_gt_... use _lt_strong_gt_scene_lt_/strong_gt_.onBeforeRenderObservable.add(). \n_lt_/p_gt_\n\n_lt_p_gt_\n\tHey _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4289-adam/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4289_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4289-adam/_qt_ rel_eq__qt__qt__gt_@adam_lt_/a_gt_ (or anyone)... would you have a moment to show us when/how to use a _lt_strong_gt_mesh_lt_/strong_gt_.onBeforeRenderObservable or _lt_strong_gt_mesh_lt_/strong_gt_.onBeforeDrawObservable?  That would be cool_co_ thx_co_ whomever.  And if you accidentally intersect some mesh_co_ maybe incorporate _lt_strong_gt_abstractMesh_lt_/strong_gt_.onCollideObservable_co_ too?  That would be extra far-out!  Then maybe we will add it to the examples in the observer docs.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tOk_co_ back to gravity_co_ velocity_co_ acceleration_co_ and what IS a _qt_physics engine_qt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5453_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5453-jerome/_qt_ rel_eq__qt__qt__gt_@jerome_lt_/a_gt_ built a basic cannon for me_co_ once.  He used math to make the cannonball bounce on the ground when it landed.  Was that a physics engine?  Yep.  I cherish the math that made that sphere bounce.  I still send him flowers every Valentine_t_s Day.  His basic sphere-bounce calculations were/are FAST!  Good stuff.  Physics engine... sorta.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_   Let_t_s see_co_ where did I put that thing?  Ahhh_co_ _lt_strong_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/topic/2571-the-wingnut-chronicles/?do_eq_findComment&amp_sm_comment_eq_79276_qt_ rel_eq__qt__qt__gt_HERE_lt_/a_gt__lt_/strong_gt_... but it_t_s a bit broken.  MeshBuilder changes_co_ I suppose.  (_qt_buggle_qt_ _eq__eq_ cannon _qt_pucker_qt_... a cartoon cannon _qt_puckers-up_qt_ before it fires.  That is what I was after... Jerome pulled it off.  He_t_s a God!)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tGotta dot(product) your i_t_s and cross(product) your t_t_s.  (huh?)  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tI wanna make the mesh itself... smart... autonomous.  Spawn_t_n_t_forget.  I guess that_t_s just overloading/hacking the Mesh class.  But... hmm... still seeking autonomous self-monitoring.  Gravity/flight-trajectory on a single mesh of a many-mesh scene.  No scene code needed_co_ except to build the autonomous mesh factory.  Am I weird?  I wish I were a better coder.  _dd_/  Still_co_ it_t_s gotta _qt_wedge_qt_ into the renderLoop SOMEWHERE_co_ I suppose.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEven the addition of the observer... should be done by code on the mesh itself.  _qt_Hey engine...  run THIS method on me... as often as you can_co_ please_qt_ _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  (Cordiality is important)  heh\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]