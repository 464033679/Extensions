[{"Owner":"JCPalmer","Date":"2018-08-28T20:32:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_u_gt__lt_strong_gt_World_dd__lt_/strong_gt__lt_/u_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWorking through the running of the exporter on 2.8_co_ World is the first thing to run.  It seems that Mist &amp_sm_ ambient color have bit the dust for 2.8.  I now hard code a mathutils.Color((0.2_co_ 0.2_co_ 0.3)) for ambient.  Mist did not actually error_co_ but there is no-longer a section in the world properties.  I left the code for mist for now_co_ but if there is no UI for it_co_ eventually it will start to error.  Since there is already a section for additional properties for mist by the exporter_co_ the lost properties might be added there_co_ or the additional properties deleted.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_2075441886_world2-8.jpg.3f2c83b99e310bb7fdc15f4881d765b8.jpg_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_19815_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_08/2075441886_world2-8.jpg.3f2c83b99e310bb7fdc15f4881d765b8.jpg_qt_ /_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_u_gt__lt_strong_gt_Game Engine_dd__lt_/strong_gt__lt_/u_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWith the removal of game engine_co_ game_settings.face_orientation &amp_sm_ game_settings.use_backface_culling are toast.  That corresponds to Billboarding &amp_sm_ back face culling in export.  While it does not seem likely culling might really be gone forever_co_ that would be a huge blow_co_ if you could not turn it off when needed.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_u_gt__lt_strong_gt_Materials_dd__lt_/strong_gt__lt_/u_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEverything is changed here.  Am just going to keep the exporter from exporting materials to see if there are any more problems not related to materials.  Stay tuned.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-08-29T14:43:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAfter commenting out the 30 or so lines which create the materials_co_ the very next line runs us right into a brick wall_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_# process all of the materials required\n#recipe _eq_ BakingRecipe(object)\nself.billboardMode _eq_ BILLBOARDMODE_NONE # BILLBOARDMODE_ALL if recipe.isBillboard else BILLBOARDMODE_NONE\n\n#if recipe.needsBaking_dd_\n#    if recipe.multipleRenders_dd_\n#        Logger.warn(_t_Mixing of Cycles &amp_sm_ Blender Render in same mesh not supported.  No materials exported._t__co_ 2)\n#    else_dd_\n#        bakedMat _eq_ BakedMaterial(exporter_co_ object_co_ recipe)\n#        exporter.materials.append(bakedMat)\n#        self.materialId _eq_ bakedMat.name\n\n#else_dd_\n#    bjs_material_slots _eq_ []\n#    for slot in object.material_slots_dd_\n        # None will be returned when either the first encounter or must be unique due to baked textures\n#        material _eq_ exporter.getMaterial(slot.name)\n#        if (material !_eq_ None)_dd_\n#            Logger.log(_t_registered as also a user of material_dd_  _t_ + slot.name_co_ 2)\n#        else_dd_\n#            material _eq_ StdMaterial(slot_co_ exporter_co_ object)\n#            exporter.materials.append(material)\n\n#        bjs_material_slots.append(material)\n\n#    if len(bjs_material_slots) _eq__eq_ 1_dd_\n#        self.materialId _eq_ bjs_material_slots[0].name\n\n#    elif len(bjs_material_slots) &gt_sm_ 1_dd_\n#        multimat _eq_ MultiMaterial(bjs_material_slots_co_ len(exporter.multiMaterials)_co_ exporter.nameSpace)\n#        self.materialId _eq_ multimat.name\n#        exporter.multiMaterials.append(multimat)\n#    else_dd_\n#        Logger.warn(_t_No materials have been assigned_dd_ _t__co_ 2)\n\n# Get temporary version of mesh with modifiers applied\nmesh _eq_ object.to_mesh(scene_co_ True_co_ _t_PREVIEW_t_)\n_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThe to_mesh() allows us to export the mesh after any modifiers have been applied_co_ e.g. armatures_co_ edge split_co_ smooth_co_ mirror.  While it is not really a great idea to export a character with the skeleton posed_co_ being force to apply the other modifiers is bad. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt did not say there was no_lt_strong_gt_ to_mesh()_lt_/strong_gt_ anymore.  There is now a problem with the first argument_dd_\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tQuote\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tTypeError_dd_ Object.to_mesh()_dd_ error with argument 1_co_ _qt_depsgraph_qt_ -  Function.depsgraph expected a Depsgraph type_co_ not Scene\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThere is no API documentation for 2.8_co_ but the _lt_a href_eq__qt_https_dd_//docs.blender.org/api/blender_python_api_current/bpy.types.Object.html?highlight_eq_to_mesh#bpy.types.Object.to_mesh_qt_ rel_eq__qt_external nofollow_qt__gt_current doc_lt_/a_gt_ clearly wants a scene for arg 1.  I do not know what a Depsgraph is_co_ but in the _lt_a href_eq__qt_https_dd_//docs.blender.org/api/blender_python_api_current/bpy.types.Scene.html?highlight_eq_depsgraph#bpy.types.Scene.depsgraph_qt_ rel_eq__qt_external nofollow_qt__gt_doc for a scene_lt_/a_gt__co_ has one for a property_co_ or did anyway.  Passing that was not acceptable.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tQuote\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t    mesh _eq_ object.to_mesh(scene.depsgraph_co_ True_co_ _t_PREVIEW_t_)_lt_br /_gt_\n\t\t\tAttributeError_dd_ _t_Scene_t_ object has no attribute _t_depsgraph_t_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tGoogle has commenced.  Turns out gltf exporter already reported the problem.  The saga continues.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-08-29T15:38:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWoot..Why people keep introducing breaking changes on every version? I don_t_t get the rationale...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-08-29T16:10:05Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWell_co_ I think they have been saving it up.  Nuking 2 renders got them just re-architecting everything.  They need these temporary meshes themselves.  Did some looking around.  Changing this to get better frame rates.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI am going to switch to developing this branch while running on 2.79.  There was one change I need to make for the _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Exporters/commit/1ab6cbe2a525a3f3d19e1bc30e9ed24cefc651c4_qt_ rel_eq__qt_external nofollow_qt__gt_first commit_lt_/a_gt__co_ a name change from _t_Lamp_t_ to _t_Light_t_.  I un-did this_co_ but not committing.  The rest of the changes to loading still run on 2.79.  In 2.79_co_ they first implemented PrincipledBSDF node.  This is never going to put into the pre-2.80 release.  Going to rip out anything for the old render first.  Just more crap to wade thru.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBTW_co_ if 2 different materials could be expressed as either a BABYLON.StandardMaterial or BABYLON.PBRMaterial_co_ should there be a preference?  Maybe_co_ Standard because_dd_\n_lt_/p_gt_\n\n_lt_ul_gt_\n\t_lt_li_gt_\n\t\tperformance\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tWebGL 2\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tGetting boned by Jobs from the grave\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tetc\n\t_lt_/li_gt_\n_lt_/ul_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-08-29T16:59:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI would recommend Standard yes\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"V!nc3r","Date":"2018-08-30T08:29:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIs it not still too soon to start porting addon for Blender 2.8? Core devs says that Python API will be update with somes brokes in it_co_ during september (probably) (you can check the _lt_a href_eq__qt_https_dd_//developer.blender.org/project/board/80/_qt_ rel_eq__qt_external nofollow_qt__gt_Code Quest Workboard_lt_/a_gt__co_ and _lt_a href_eq__qt_https_dd_//developer.blender.org/T56351_qt_ rel_eq__qt_external nofollow_qt__gt_this task_lt_/a_gt_).\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-08-30T16:25:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_226710_qt_ data-ipsquote-contentid_eq__qt_39694_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1535617759_qt_ data-ipsquote-userid_eq__qt_20526_qt_ data-ipsquote-username_eq__qt_V!nc3r_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t7 hours ago_co_ V!nc3r said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tIs it not still too soon to start porting addon for Blender 2.8? Core devs says that Python API will be update with somes brokes in it_co_ during september (probably) (you can check the _lt_a href_eq__qt_https_dd_//developer.blender.org/project/board/80/_qt_ rel_eq__qt_external nofollow_qt__gt_Code Quest Workboard_lt_/a_gt__co_ and _lt_a href_eq__qt_https_dd_//developer.blender.org/T56351_qt_ rel_eq__qt_external nofollow_qt__gt_this task_lt_/a_gt_).\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tNo_co_ for anything in dev for a couple of years_co_ less than 30 days is not too early to see what is now broken.  Might be too early to fix problems unless it is easy to guess_co_ though.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"JCPalmer","Date":"2018-10-26T18:54:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tJust an update as to how the removal of game engine was resolved.  2 new custom properties were added to mesh.  This actually makes them easier to find_co_ rather than switching renderer.  It always was kind of scavenger hunt. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso_co_ they used to be defined for a material_co_ not a mesh.  There will be minor differences from before_co_ limited to multi-material meshes only.  Before you could turn off culling on a sub-mesh level_co_ but that will no longer be possible.  Doubt people are doing this though.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-10-26T21:17:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tGood job mate!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"inteja","Date":"2018-10-28T22:53:19Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tUntil recently I resisted trying out Blender 2.8 as I knew it was changing rapidly but I just tried it and must admit I_t_m pretty damned impressed. The UX facelift I think will really alleviate that last perceived learning curve barrier that Blender has been criticised for in the past. I don_t_t think long-time users will be hindered all that much by the changes. The devs have struck a great balance IMHO.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m now eagerly looking forward to using Blender 2.8 and the Babylon exporter _lt_span class_eq__qt_ipsEmoji_qt__gt_🙂_lt_/span_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]