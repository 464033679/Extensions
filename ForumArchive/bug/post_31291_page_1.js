[{"Owner":"snupas","Date":"2017-06-26T13:16:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWas just trying to draw some axis for transformations based on some already working code on the forums/playground and I keept getting errors in Firefox that points to the i.prototype.drawText function in the babylon js library.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHere_t_s the error_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img alt_eq__qt_kuLkXah.png_qt_ class_eq__qt_ipsImage_qt_ src_eq__qt_http_dd_//i.imgur.com/kuLkXah.png_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tHere_t_s the source_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_       var showAxis _eq_ function (size) {\n\n          var makeTextPlane _eq_ function (text_co_ color_co_ size) {\n            var dynamicTexture _eq_ new BABYLON.DynamicTexture(_qt_DynamicTexture_qt__co_ 50_co_ scene_co_ true)_sm_\n            dynamicTexture.hasAlpha _eq_ true_sm_\n            dynamicTexture.drawText(text_co_ 5_co_ 40_co_ _qt_bold 36px Arial_qt__co_ color_co_ _qt_transparent_qt__co_ true)_sm_\n            var plane _eq_ new BABYLON.Mesh.CreatePlane(_qt_TextPlane_qt__co_ size_co_ scene_co_ true)_sm_\n            plane.material _eq_ new BABYLON.StandardMaterial(_qt_TextPlaneMaterial_qt__co_ scene)_sm_\n            plane.material.backFaceCulling _eq_ false_sm_\n            plane.material.specularColor _eq_ new BABYLON.Color3(0_co_ 0_co_ 0)_sm_\n            plane.material.diffuseTexture _eq_ dynamicTexture_sm_\n            return plane_sm_\n          }_sm_\n\n          var axisX _eq_ BABYLON.Mesh.CreateLines(_qt_axisX_qt__co_ [\n            new BABYLON.Vector3.Zero()_co_ new BABYLON.Vector3(size_co_ 0_co_ 0)_co_ new BABYLON.Vector3(size * 0.95_co_ 0.05 * size_co_ 0)_co_\n            new BABYLON.Vector3(size_co_ 0_co_ 0)_co_ new BABYLON.Vector3(size * 0.95_co_ -0.05 * size_co_ 0)\n          ]_co_ scene)_sm_\n          axisX.color _eq_ new BABYLON.Color3(0_co_ 0_co_ 1)_sm_\n          axisX.position.z +_eq_ 20_sm_\n          axisX.position.y -_eq_ 4_sm_\n          axisX.position.x -_eq_ 40_sm_\n          var xChar _eq_ makeTextPlane(_qt_X_qt__co_ _qt_red_qt__co_ size / 10)_sm_\n          xChar.position _eq_ new BABYLON.Vector3(0.9 * size_co_ -0.05 * size_co_ 0)_sm_\n          var axisY _eq_ BABYLON.Mesh.CreateLines(_qt_axisY_qt__co_ [\n            new BABYLON.Vector3.Zero()_co_ new BABYLON.Vector3(0_co_ size_co_ 0)_co_ new BABYLON.Vector3(-0.05 * size_co_ size * 0.95_co_ 0)_co_\n            new BABYLON.Vector3(0_co_ size_co_ 0)_co_ new BABYLON.Vector3(0.05 * size_co_ size * 0.95_co_ 0)\n          ]_co_ scene)_sm_\n          axisY.position.z _eq_ 34\n          axisY.position.y _eq_ -20_sm_\n          axisY.position.x +_eq_ offset_sm_\n          axisY.color _eq_ new BABYLON.Color3(0_co_ 0_co_ 1)_sm_\n          var yChar _eq_ makeTextPlane(_qt_Y_qt__co_ _qt_green_qt__co_ size / 10)_sm_\n          yChar.position _eq_ new BABYLON.Vector3(0_co_ 0.9 * size_co_ -0.05 * size)_sm_\n        }_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t I tried both preview and stable versions of babylon.js_co_ both with the majority of components included.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-06-26T15:51:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tCan you repro on the Playground?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Wingnut","Date":"2017-06-26T16:45:04Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi guys.  I will help with PG...\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#1INESU%231_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#1INESU#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSnupas... I removed positioning lines 46-48_co_ and lines 55-57.  I also added line 26_co_ but it is not needed_co_ because line 57 is disabled.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAfter those changes_co_ it started looking better... so I thought I would show it.  _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_  I hope this helps you guys.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"snupas","Date":"2017-06-27T11:57:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks for the input_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBut apparently the bug is more so related to the canvas element being inside of a hidden iframe.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo the parent element of the iframe that has the babylon js document is hidden initially_co_ so certain canvas functions you can_t_t perform in Firefox on such an element.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn my case it_t_s a bootstrap modal_co_ so I can_t_t use the opacity_dd_0 workaround instead of having it hidden...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn case anyone else stumbles upon this_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//bugzilla.mozilla.org/show_bug.cgi?id_eq_941146_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//bugzilla.mozilla.org/show_bug.cgi?id_eq_941146_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"snupas","Date":"2017-06-27T13:13:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tSolution was to show the bootstrap modal on page load with 0 opacity and z-index of -2 and allow everything to load up while being invisible on the web page and not obstructing anything.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen when I need to prepare to show it_co_ I hide the modal_co_ set back opacity to 1 and z-index to bootstrap modal default of 1050.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_$(_t_#myModal_t_).modal(_t_toggle_t_)_sm_\n$(_qt_#myModal_qt_).css({\n             opacity_dd_ 0_co_\n\t    _t_z-index_t__dd_ -2_co_\n\t})_sm_\n\n$(_t_#myModal_t_).modal(_t_toggle_t_)_sm_\n$(_qt_#myModal_qt_).css({\n\t    opacity_dd_ 1_co_\n\t    _t_z-index_t__dd_ 1050_co_\n\t})_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tNot really a babylon.js library related bug_co_ but someone that_t_s using babylon.js in an iframe situation could end up in the same situation.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]