[{"Owner":"eugenesia","Date":"2017-01-25T13:42:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi! Pardon me as my first post happens to be a bug report. I just learnt Babylon.js last week_co_ am going through the tutorials_co_ and it_t_s a really great framework!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo coming on to the bug report_dd_ I am using a VRDeviceOrientationFreeCamera but it seems the left and right rig cameras are in exactly the same position_co_ with no offset distance between them. As a result_co_ although there are two viewports_co_ the images are exactly the same. Using a Google Cardboard_co_ the image appears flat and not 3D. See attached screenshot below.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPlease also refer to Babylon.js playground _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#ZTRL5%2330_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#ZTRL5#30_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn the Playground and the screenshot_co_ you can see that the line of vertical sticks along the Z axis are aligned in both viewports. If there is an offset between the 2 cameras_co_ the sticks should not be aligned.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Screenshot_lt_/strong_gt_ - both left and right VR cameras produce the same image_lt_strong_gt__dd__lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ data-fileid_eq__qt_11363_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_01/VR_camera_viewports_look_the_same.png.e964f302d0d5bb36f8d9952730de0bb2.png_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_VR_camera_viewports_look_the_same.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_11363_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_01/VR_camera_viewports_look_the_same.png.e964f302d0d5bb36f8d9952730de0bb2.png_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Bug in code_lt_/strong_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe error seems to happen where the rig cameras are updated in the ancestor class _lt_em_gt_TargetCamera_dd__dd__updateRigCameras()_lt_/em_gt_ in _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/babylon.targetCamera.ts#L265_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/babylon.targetCamera.ts#L265_lt_/a_gt_ . Both left and right cameras have the same position and rotation_co_ thus producing the same image_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_284 case Camera.RIG_MODE_VR_dd_ \n285 case Camera.RIG_MODE_WEBVR_dd_\n286   if (camLeft.rotationQuaternion) {\n287     camLeft.rotationQuaternion.copyFrom(this.rotationQuaternion)_sm_\n288     camRight.rotationQuaternion.copyFrom(this.rotationQuaternion)_sm_\n289   } else {\n290     camLeft.rotation.copyFrom(this.rotation)_sm_\n291     camRight.rotation.copyFrom(this.rotation)_sm_\n292   }\n293   camLeft.position.copyFrom(this.position)_sm_\n294   camRight.position.copyFrom(this.position)_sm_\n295\n296   break_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI can attempt a pull request to fix this_co_ but I_t_m not sure if I should just position the 2 cameras apart just like for a stereoscopic camera. Appreciate some comments please_co_ thanks!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-01-26T16:34:29Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tHello thank you for reporting..This is really weird. We will check asap!\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-01-26T16:40:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tActually it works..If you move using arrows left/right you_t_ll see the 3d effect.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPostion and rotation are the same because the differentiation between left/right cameras is done here_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/babylon.camera.ts#L621_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Cameras/babylon.camera.ts#L621_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-01-26T16:41:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBoth cameras should have the same position. It is the position of the body_co_ which has two eyes. the position correction is done later_co_ and can be controlled with the VRCameraMetrics that can be provided in the constructor.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe 3D effect is very hard to see when you look straight at all objects. But when moving a bit to the side... _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#ZTRL5%2331_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#ZTRL5#31_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo_co_ I am not sure it is a bug. I promise to check further thou.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"eugenesia","Date":"2017-01-27T16:44:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi everyone_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI managed to create a function to fix the bug in this Playground_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#ZTRL5%2334_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#ZTRL5#34_lt_/a_gt_ . The left and right images are the same_co_ which is wrong_co_ because our left and right eyes don_t_t see the same images as they are in different positions.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe function below changes the View Matrix of the right rig camera_co_ moving it to the right slightly to simulate the right eye.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Code in Playground_dd_ _lt_/strong_gt_Change right rig camera_t_s View Matrix slightly so it is displaced to the right.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// Shift the right camera view a bit to the right to simulate the right eye_co_\n// to create illusion of depth. So it doesn_t_t give the same projected image as the\n// left camera view.\nvar camAdjustInterval _eq_ setInterval(function () {\n    // Both rig cameras have the same view matrix component_co_ this produces same projected\n    // image for both eyes_co_ hence no illusion of depth.\n    if (camera._rigCameras[1]._viewMatrix.m[12] _eq__eq__eq_ camera._rigCameras[0]._viewMatrix.m[12]) {\n        // Move the right camera a bit to the right_co_ to create illusion of depth.\n        // This adjusts the _qt_View Matrix_qt_.\n        camera._rigCameras[1]._viewMatrix.m[12] -_eq_ 0.2_sm_\n    }\n}_co_ 500)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe result is an image that has better illusion of depth. See screenshot.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_strong_gt_Screenshot_dd__lt_/strong_gt_ Correct projected images. The right camera is slightly to the right of the left camera_co_ so has a different projected image. This gives illusion of depth.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ data-fileid_eq__qt_11396_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_01/Camera_viewports_have_correct_offset.png.8d55c26a4d505ad6bc331173f72ac9e3.png_qt_ rel_eq__qt__qt__gt__lt_img alt_eq__qt_Camera_viewports_have_correct_offset.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_11396_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2017_01/Camera_viewports_have_correct_offset.thumb.png.ef1b36030bda07ae0369e7dea5ddb7cb.png_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2017-01-27T19:34:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello my friend_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\twhen I am wrong_co_ I am wrong. Thanks for being persistent _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#ZTRL5%2337_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#ZTRL5#37_lt_/a_gt_ - here is the fix. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe view matrix_t_ drift WAS calculated_co_ but was never used. how clever!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tHaving said that - _lt_s_gt_once the fix is integrated_lt_/s_gt_ you can play with the distance between the two views using the metrics variable that is being provided (optional). default is ca. 0.064\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_s_gt_I will commit the fix pretty soon_co_ the minute I will make it look nicer - reusing code_co_ formatting typescript_co_ sprinkling some magic powder and all that jazz._lt_/s_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tUpdate_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tPR merged_co_ fix is there. It will soon be available in the playground as well.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"eugenesia","Date":"2017-01-29T00:21:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThank you _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/?do_eq_hovercard_qt_ data-mentionid_eq__qt_10310_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/_qt_ rel_eq__qt__qt__gt_@RaananW_lt_/a_gt_ this works now! I tried to debug it myself but got lost in all the matrix-related code.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI hope to understand more of the code so I can contribute next time! \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]