[{"Owner":"ozRocker","Date":"2016-05-19T13:33:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m using babylon 2.4 here.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve providing position vectors to the Vector3.lerp function.  The result seems to be a string concatenation instead of arithmetic addition.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tBelow I_t_m just showing x_co_ z coordinates because y is always constant\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_from_dd_ 2.000_co_ 0.000  to_dd_ 2.400_co_ 0.000\nlerp percentage_dd_ 0.33589999999996506\nlerped position_dd_ 2.0000.134359999999986_co_ 0.0000\nlerp percentage_dd_ 0.9552999999999884\nlerped position_dd_ 2.0000.38211999999999524_co_ 0.0000_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tso this is going from (2.0_co_ 0.0) to (2.4_co_ 0.0)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe 1st resulting lerp should be 2.134359999999986 but instead its 2.0000.134359999999986\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2016-05-19T14:23:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt_t_s working correctly here_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#U7ZR7%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#U7ZR7#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you aren_t_t using Typescript_co_ make sure you aren_t_t somehow setting your Vector3 with strings.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2016-05-19T14:48:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tyep_co_ that was it.  The mesh position values were treated as strings because they were set from a JSON record.  I had to cast them to numbers.  The weird thing is that the scene renderer was treating that position vector as numbers and moving my avatar along normally_co_ which is why I didn_t_t pick this up before.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-05-28T22:56:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_129061_qt_ data-ipsquote-contentid_eq__qt_22652_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1463669318_qt_ data-ipsquote-userid_eq__qt_12544_qt_ data-ipsquote-username_eq__qt_ozRocker_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 5/19/2016 at 3_dd_48 PM_co_ ozRocker said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tyep_co_ that was it.  The mesh position values were treated as strings because they were set from a JSON record.  I had to cast them to numbers.  The weird thing is that the scene renderer was treating that position vector as numbers and moving my avatar along normally_co_ which is why I didn_t_t pick this up before.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThis is exactly why you should learn Typescript _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_d really recommend pushing through the initial _lt_a href_eq__qt_http_dd_//www.urbandictionary.com/define.php?term_eq_pita_qt_ rel_eq__qt_external nofollow_qt__gt_PITA_lt_/a_gt_ of getting started. If you_t_d written that in Typescript you_t_d have a red line under it in your IDE.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2016-05-29T01:12:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_130252_qt_ data-ipsquote-contentid_eq__qt_22652_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1464476200_qt_ data-ipsquote-userid_eq__qt_17567_qt_ data-ipsquote-username_eq__qt_Dal_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t2 hours ago_co_ Dal said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tThis is exactly why you should learn Typescript _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tI_t_d really recommend pushing through the initial _lt_a href_eq__qt_http_dd_//www.urbandictionary.com/define.php?term_eq_pita_qt_ rel_eq__qt_external nofollow_qt__gt_PITA_lt_/a_gt_ of getting started. If you_t_d written that in Typescript you_t_d have a red line under it in your IDE.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI am using Typescript.  My whole project is in Visual Studio.  I didn_t_t see any error or any red line.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ozRocker","Date":"2016-05-29T01:26:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMy code is kinda like this in Typescript_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_        var vector_dd_ BABYLON.Vector3_sm_\n        var JSONstring_dd_ string_sm_\n        var instruction _eq_ JSON.parse(JSONstring)_sm_\n        var message _eq_ instruction.message_sm_\n\n        vector _eq_ new BABYLON.Vector3(message.player.position.x_co_ message.player.position.y_co_ message.player.position.z)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI_t_m dealing with a JSON string that gets parsed into a combination of objects and strings so I can_t_t give strict types for them.  Because of that I_t_m passing untyped data to the Vector3 constructor.  No red-line or error.  Also_co_ the code runs even with the strings in there.  Babylon.js has no problem with it.  Its only when I do standard javascript arithmetic is when the problem arises.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dal","Date":"2016-05-29T23:14:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_130257_qt_ data-ipsquote-contentid_eq__qt_22652_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1464485177_qt_ data-ipsquote-userid_eq__qt_12544_qt_ data-ipsquote-username_eq__qt_ozRocker_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t21 hours ago_co_ ozRocker said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tMy code is kinda like this in Typescript_dd_\n\t\t_lt_/p_gt_\n\n\t\t_lt_pre_gt_\n\n_lt_code_gt_        _lt_span_gt_var_lt_/span_gt_ vector_dd_ BABYLON.Vector3_sm_\n        _lt_span_gt_var_lt_/span_gt_ JSONstring_dd_ _lt_span_gt_string_lt_/span_gt__sm_\n        _lt_span_gt_var_lt_/span_gt_ instruction _eq_ JSON.parse(JSONstring)_sm_\n        _lt_span_gt_var_lt_/span_gt_ message _eq_ instruction.message_sm_\n\n        vector _eq_ _lt_span_gt_new_lt_/span_gt_ BABYLON.Vector3(message.player.position.x_co_ message.player.position.y_co_ message.player.position.z)_sm__lt_/code_gt__lt_/pre_gt_\n\n\t\t_lt_p_gt_\n\t\t\tI_t_m dealing with a JSON string that gets parsed into a combination of objects and strings so I can_t_t give strict types for them.  Because of that I_t_m passing untyped data to the Vector3 constructor.  No red-line or error.  Also_co_ the code runs even with the strings in there.  Babylon.js has no problem with it.  Its only when I do standard javascript arithmetic is when the problem arises.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_pre_gt_\n_lt_code_gt_class Player {\n   position_dd_Vector3 _eq_ Vector3.Zero()_sm_\n}\n\nvar message _eq_ instruction.message_sm_\nvar player_dd_Player _eq_ &lt_sm_Player&gt_sm_message.player_sm_\n\nvector _eq_ new BABYLON.Vector3(player.position.x_co_ player.position.y_co_ player.position.z)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThat probably won_t_t work as it is but something on those kind of lines would avoid passing untyped data around. If message.player is the right shape it should fit.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"ben_a_adams","Date":"2016-06-12T23:30:10Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tYou can cast them with `+` as follows\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_vector _eq_ new BABYLON.Vector3( +message.player.position.x_co_ +message.player.position.y_co_ +message.player.position.z)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]