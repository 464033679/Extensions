[{"Owner":"srimshady","Date":"2017-12-12T05:29:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_ I am getting a strange bug in chrome with the pointer lock API.Â  When using chrome on windows 10_co_ the mouse will randomly move to a new location as I move the mouse around. I have repeated this bug on seperate machines. Works fine on firefox. Here_t_s a play ground_dd_Â _lt_a href_eq__qt_https_dd_//playground.babylonjs.com/#H9FRSI%232_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//playground.babylonjs.com/#H9FRSI#2_lt_/a_gt_. I removed the non chrome pointer lock stuff.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tPointerlock code for chrome_dd_Â \n_lt_/p_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_scene.onPointerDown _eq_ function (evt) {\n  \n    canvas.requestPointerLock()_sm_\n      \n}_sm_\n   _lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI would really appreciate any help on this! Thanks!\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"erichlof","Date":"2017-12-12T14:41:50Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tHi_co_ same here on all instances of Pointer Lock.Â  When trying to spin around 360 degrees_co_ the camera angleÂ will randomly snap back to start position.Â  I filed a problem report with the Chrome team_co_ hopefully it will be resolved soon.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-12-12T16:24:41Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThanks _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/29647-erichlof/?do_eq_hovercard_qt_ data-mentionid_eq__qt_29647_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/29647-erichlof/_qt_ rel_eq__qt__qt__gt_@erichlof_lt_/a_gt_!\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"marcgfx","Date":"2017-12-13T14:53:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI have had some user reports sounding very similar to what you are describing... also Windows 10.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"FunFetched","Date":"2017-12-17T20:12:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe Windows 10 Fall Creators Update is rife with problems_sm_ this being one of them_co_ although it could be argued that it really just exposed a problem with Chromium_co_ since it_t_s the only browser that is exhibiting this issue.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve implemented a _qt_solution_qt_ in my game which simply ignores the first mousemove event that moves in the opposite direction_co_ thereby eliminating that big jump backwards in most circumstances. Such events are high enough in frequency that ignoring a few here and there isÂ not noticeable. It_t_s not 100% effective_co_ but it_t_s a huge improvement when the alternative is that your app is basically rendered unusable.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI know this doesn_t_t help much when you_t_re relying on Babylon_t_s built-in input functionality_co_ but one could use FreeCameraInputsManager_co_ for instance_co_ to register a new mouse input function to replace the old one.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"marcgfx","Date":"2017-12-17T20:52:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m not using babylon_co_ it_t_s absolutely a chrome issue. I don_t_t have a system to test the issue on either. What do these bad values look like? Maybe there is a recognizable pattern (I_t_m sure you_t_ve checked though).\n_lt_/p_gt_\n\n_lt_p_gt_\n\t@erichlof_dd_ can you maybe link me to the bug report you filed? It_t_s a pretty big issue for me too.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"duchman","Date":"2018-01-11T13:05:28Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tAny news on this issue?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"duchman","Date":"2018-01-31T15:49:39Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt_t_s fixed with Chrome v64Â Â _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jonforum","Date":"2018-05-07T17:54:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\ti have the same issue ? any fix ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\ti haveÂ _lt_strong_gt_chromium_lt_/strong_gt__dd_ _qt_65.0.3325.146_qt_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_process.versions {\n    http_parser_dd_ _qt_2.7.0_qt__co_\n    node_dd_ _qt_9.7.1_qt__co_\n    v8_dd_ _qt_6.5.254.31_qt__co_\n    uv_dd_ _qt_1.19.2_qt__co_\n    zlib_dd_ _qt_1.2.11_qt__co_\n    â€¦\n}\nares_dd_ _qt_1.13.0_qt_\nchromium_dd_ _qt_65.0.3325.146_qt_\ncldr_dd_ _qt_32.0_qt_\nhttp_parser_dd_ _qt_2.7.0_qt_\nicu_dd_ _qt_60.1_qt_\nmodules_dd_ _qt_59_qt_\nnapi_dd_ _qt_2_qt_\nnghttp2_dd_ _qt_1.29.0_qt_\nnode_dd_ _qt_9.7.1_qt_\nnode - webkit_dd_ _qt_0.29.0_qt_\nnw_dd_ _qt_0.29.0_qt_\nnw - commit - id_dd_ _qt_40ba6a3-15b9f14-1b41b42-41dc8a9_qt_\nnw - flavor_dd_ _qt_sdk_qt_\nopenssl_dd_ _qt_1.0.2n_qt_\ntz_dd_ _qt_2017c_qt_\nunicode_dd_ _qt_10.0_qt_\nuv_dd_ _qt_1.19.2_qt_\nv8_dd_ _qt_6.5.254.31_qt_\nzlib_dd_ _qt_1.2.11_qt_\n__proto___dd_ Object_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t_lt_a class_eq__qt_ipsAttachLink ipsAttachLink_image_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_05/aefef.png.9eed6a2ce824025fd9274f6f7ee4168a.png_qt_ data-fileid_eq__qt_18158_qt_ rel_eq__qt__qt__gt__lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_18158_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_05/aefef.thumb.png.cd34944a2aa0ec94cfc1ca05edc12216.png_qt_ alt_eq__qt_aefef.thumb.png.cd34944a2aa0ec94cfc1ca05edc12216.png_qt_ /_gt__lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"aWeirdo","Date":"2018-05-07T20:01:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/27026-jonforum/?do_eq_hovercard_qt_ data-mentionid_eq__qt_27026_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/27026-jonforum/_qt_ rel_eq__qt__qt__gt_@jonforum_lt_/a_gt__lt_br /_gt_\n\tI_t_m not having any issues on _qt_66.0.3359.139_qt__lt_br /_gt_\n\t_lt_br /_gt_\n\tHowever_co_ the bug is indeed annoying_co_ and appears to happen with several hundred units at a time_co_ before then going back to around previous values._lt_br /_gt_\n\tIf you want a fix for the bug_co_ (to make sure everything works for ppl who doesn_t_t update their browsers _lt_span_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ˜›_lt_/span_gt_Â _lt_/span_gt_)\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSomething like this should work_sm__lt_br /_gt_\n\t_lt_strong_gt_Note_sm__lt_/strong_gt_ i set the max value the mouse can move before thinking it_t_sÂ a bug jump to 100_co_ you can lower or increase this as needed_co_ (not tested on buggedÂ browser_co_ but works fine on non-bugged).\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// Fix for Chrome mouseMove _qt_sudden jump_qt_ bug.\nif(!_this.__lastOffsetX){\n  _this.__lastOffsetX _eq_ offsetX_sm_\n}\nelse if(Math.abs(_this.__lastOffsetX - offsetX) &gt_sm_ 100) {\n  return_sm_\n}\n\nif(!_this.__lastOffsetY){\n  _this.__lastOffsetY _eq_ offsetY_sm_\n}\nelse if(Math.abs(_this.__lastOffsetY - offsetY) &gt_sm_ 100) {\n  return_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tIt should be placed inside the FreeCameraMouseInput_t_s _qt__onMouseMove_qt_Â function (see lines 112 - 128 in PG)_lt_br /_gt_\n\tOr if you_t_d rather not edit babylon source_co_ theÂ entire function can be overwritten_co_ simply copy theÂ _qt_BABYLON.FreeCameraMouseInput.prototype.attachControl_qt_ from the PG below and load in a JS file_co_ after Babylon.js is loaded._lt_br /_gt_\n\t_lt_br /_gt_\n\t_lt_a href_eq__qt_http_dd_//playground.babylonjs.com/#HTKXPC_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//playground.babylonjs.com/#HTKXPC_lt_/a_gt__lt_br /_gt_\n\tÂ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt should eliminate the bug_co_ but comes with a downside_co_ moving the mouse very rapidly &amp_sm_ far will trigger it aswell.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]