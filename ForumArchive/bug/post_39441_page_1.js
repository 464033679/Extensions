[{"Owner":"mindinsomnia","Date":"2018-08-15T04:46:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI have searched high and low_co_ and after a lot of digging_co_ even through source of Babylonjs_co_Â unless I_t_m mistaken_co_ there is no control over the intensity of specular reflections at all for the PBRMetallicRoughnessMaterial class.Â \n_lt_/p_gt_\n\n_lt_p_gt_\n\tTo replicate_co_ open up _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#2FDQT5%2313_qt_ rel_eq__qt_external nofollow_qt__gt_this playground example_lt_/a_gt__co_ set the colour to solid black (0_co_0_co_0)_co_ set metallic to 0_co_ and comment out theÂ metallicRoughnessTexture.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNo matter what I do_co_ I can_t_t achieve a perfectly black material_co_ unless I disable the environmentTexture. But if I add a light to the scene_co_ it once again is not perfectly black because there_t_s no control over it_t_s specular highlight. A perfect black material is simply impossible.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve tried looking for other properties to alter_co_ anything to get rid of the reflection_co_ and it_t_s impossible.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt should be possible under a PBR workflow to create a perfectly black material_co_ even if they aren_t_t naturally occurring.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tCould we possibly get a specularIntensity property added to this class? Ideally the metallicRoughnessTexture could use the third unused texture channel to grab that property as well so we have per texel control?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Sebavan","Date":"2018-08-15T12:22:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe specularity of a Metal/Rough material is entirely controlled by the roughness as it is controlled by the microsurface on a Spec/Gloss material. We do not need another extra channel to control it.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can nevertheless rely on the full PBRMaterial if you wish where those parameters are available_dd_Â _lt_span style_eq__qt_color_dd_#000000_sm__qt__gt_specularIntensity andÂ _lt_/span_gt_environmentIntensity to contol with more detail the impact of each chanels.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tMigrating is detailed in this documentation_dd_Â _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/how_to/physically_based_rendering_master#from-metallicroughness-to-pbrmaterial_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/how_to/physically_based_rendering_master#from-metallicroughness-to-pbrmaterial_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFlagging the issue as solved as it is not a bug per se _lt_span_gt__lt_span class_eq__qt_ipsEmoji_qt__gt_ðŸ™‚_lt_/span_gt__lt_/span_gt_\n_lt_/p_gt_\n\n_lt_div style_eq__qt_background-color_dd_#ffffff_sm_color_dd_#000000_sm_font-size_dd_14px_sm__qt__gt_\n\t_lt_div_gt_\n\t\tÂ \n\t_lt_/div_gt_\n_lt_/div_gt_\n\n_lt_p_gt_\n\tÂ \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]