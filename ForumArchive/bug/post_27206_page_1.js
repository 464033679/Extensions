[{"Owner":"Pryme8","Date":"2016-12-20T17:14:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#R35AE%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#R35AE#1_lt_/a_gt__lt_br /_gt__lt_br /_gt_\n\tSee attached playground for proof.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-12-20T17:16:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tCan you provide a simpler repro?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tLIke this one_dd_ which is working (_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#2E85FV_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#2E85FV_lt_/a_gt_)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-12-20T17:21:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYea it works because it is just one_co_ the demo demonstrates when instances break you have to do more then one of them._lt_br /_gt__lt_br /_gt_\n\tWhats happening is I make a base mesh this is the only real mesh called_co_ I then clone it to make 3 versions of it that can have different materials_co_ then I am randomly picking from those three clones and creating an instance from one of the three and just placing them in the scene._lt_br /_gt__lt_br /_gt_\n\tYou will see the weird behavior the second a additional instance is made that is not the same as the first one created._lt_br /_gt__lt_br /_gt_\n\tIf you see here is the working version with just 1 instance being used_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#R35AE%230_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#R35AE#0_lt_/a_gt__co_ then the second you start using the other ones it breaks.  This is the simplest PG I could think of to demonstrate._lt_br /_gt__lt_br /_gt_\n\tYou will see the second a different color sphere is picked from the first one made (red blue or green) all others that are not the same one disappear and they all like jump around trying to decided whos who it looks like.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-12-20T17:27:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#R35AE%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#R35AE#2_lt_/a_gt__lt_br /_gt__lt_br /_gt_\n\there i commented the code for you.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2016-12-20T17:36:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt_t_s because you are making instances of clones.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#R35AE%233_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#R35AE#3_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-12-20T17:40:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOk that_t_s fine and dandy_co_ but what about when I run into the situation where I need to create instances of clones?  There is no reason why they should behave like this.  The reason I say that is what if I have a custom shape I want to load for example my hex block_co_ and it has 64 different texture variations_co_ you would need to be able to make instances of a clone._lt_br /_gt__lt_br /_gt_\n\tand why would that break it? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI mean thinking about it I guess its the same number of draw calls... but the behavior seems weird._lt_br /_gt__lt_br /_gt_\n\tso how would I create multiple copy_t_s of the loaded obj without clone also?_lt_br /_gt__lt_br /_gt__lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4289-adam/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4289_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4289-adam/_qt_ rel_eq__qt__qt__gt_@adam_lt_/a_gt__co_ thanks by the way._lt_br /_gt__lt_br /_gt__lt_br /_gt_\n\tIts coming into play with my scene I am working on where_dd__lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_lob.prototype._buildPresetHexs _eq_ function(){\n\tvar hexList _eq_ [_t_Rock_t__co_ _t_Rock2Dirt_t_]\n\tfor(var p _eq_ 0_sm_ p&lt_sm_hexList.length_sm_ p++){\t\t\n\tvar ps _eq_ hexList[p]_sm_\n\tthis.presets[ps] _eq_ []_sm_\t\n\tfor (var i _eq_ 0_sm_ i&lt_sm_this.materials[ps].length_sm_ i++){\t\n\t\tconsole.log(ps)_sm_\t\n\t\tvar nP _eq_ this.presets[_t_hex_t_].clone(ps+i)_sm_\t\t\n\t\tnP.material _eq_ this.materials[ps][i]_sm_\n\t\tnP.setEnabled(0)_sm_\n\t\tthis.presets[ps].push(nP)_sm_\n\t}\t\n  }\t\n}_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI am using clone to make fresh instances of the hex preset which was a loaded obj_co_ is there a better way to do this?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-12-20T18:49:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOk so_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- Clones share the same geometry as their root\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- Instances share everything with their root (including material)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t- You can call CreateInstance on a clone but in this case all instances will have the initial geometry as root\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou can still use clones but you then have to make them unique (kind of de-cloning)_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#R35AE%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#R35AE#4_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-12-20T19:10:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\t.makeGeometryUnique()_sm_  thats the ticket!_lt_br /_gt__lt_br /_gt_\n\tI love you long time!  One of these days Im gonna take the 8 hour trip and drive up to Seattle to buy you a beer!\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-12-20T19:24:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMan! this could be really fun! \n_lt_/p_gt_\n\n_lt_p_gt_\n\tYou know that we thought about some kind of Babylonjs Con but as we are really all over the world this could be too complicated\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Pryme8","Date":"2016-12-20T19:27:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tId be in for sure!  I bet if we built it and had some guest speakers people would come._lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_div class_eq__qt_ipsEmbeddedVideo_qt__gt_\n\t_lt_div_gt_\n\t\t_lt_iframe allowfullscreen_eq__qt_true_qt_ frameborder_eq__qt_0_qt_ height_eq__qt_270_qt_ src_eq__qt_https_dd_//www.youtube.com/embed/sS_cAAAhgPM?feature_eq_oembed_qt_ width_eq__qt_480_qt__gt__lt_/iframe_gt_\n\t_lt_/div_gt_\n_lt_/div_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]