[{"Owner":"brianzinn","Date":"2017-10-17T09:34:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI have the highlighter working in a regular scene.  In the VR scene the highlight is not appearing where the mesh is and with left/right eye it is in different positions.  Is this a bug or is using the Highlighter not supported with VR cameras?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-10-17T15:41:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIt should work\n_lt_/p_gt_\n\n_lt_p_gt_\n\tcan you try to reproduce it in the PG with a VRDeviceOrientationFreeCamera?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-10-19T06:21:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI can confirm that the highlighter works perfectly in a PG with VR_dd__lt_br /_gt__lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#1KUJ0A%2383_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#1KUJ0A#83_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI will try to isolate what is happening in my scene.  Thanks.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-10-22T03:14:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_The bug is related to specifying a VR camera in highlighter options._lt_br /_gt__lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#1KUJ0A%2384_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#1KUJ0A#84_lt_/a_gt__lt_br /_gt__lt_br /_gt_\n\tIf I comment out line 39 (camera option) then the highlighter works as expected.  Additionally_co_ if I am using a regular FreeCamera then it also works as expected.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI think the issue is here (and on line 430)_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/2c0fa2446981bfb173cb7dca0fd76891e1b6e9be/src/Materials/Textures/babylon.renderTargetTexture.ts#L356_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/2c0fa2446981bfb173cb7dca0fd76891e1b6e9be/src/Materials/Textures/babylon.renderTargetTexture.ts#L356_lt_/a_gt__lt_br /_gt__lt_br /_gt_\n\tThe cameras are the _qt_same_qt_ camera_co_ but not seen as the _qt_same_qt_.  Their ids are_dd_ _qt_WebVRCamera_L_qt_ and _qt_WebVRCamera_qt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis code will fix the left camera to be working_co_ but not right.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_if (this.activeCamera !_eq__eq_ scene.activeCamera &amp_sm_&amp_sm_\n    (this.activeCamera.leftCamera &amp_sm_&amp_sm_ this.activeCamera.leftCamera !_eq__eq_ scene.activeCamera)) {\n    scene.setTransformMatrix(\n        this.activeCamera.getViewMatrix()_co_ \n        this.activeCamera.getProjectionMatrix(true)\n    )_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI think though_co_ a better check would involve checking RigMode and a way on the camera classes themselves to determine equality. So_co_ maybe better for someone more familiar with this code? I_t_m probably going to switch my highlighter code to GUI anyway_co_ but wanted to share the cause + resolution.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-10-23T17:29:51Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey\n_lt_/p_gt_\n\n_lt_p_gt_\n\twhy do you want to force the VR camera in the highlighter option? \n_lt_/p_gt_\n\n_lt_p_gt_\n\tif you do not force it_co_ it works_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#1KUJ0A%2385_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#1KUJ0A#85_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"brianzinn","Date":"2017-10-24T05:54:55Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tyes_co_ as I said it works if you don_t_t specify a camera.  I was just adding that the highlight layer would also work if RenderTargetTexture was updated to understand VR cameras_co_ which seems more like an expected behaviour.  marking as solved!\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]