[{"Owner":"AlbertTJames","Date":"2016-09-25T23:30:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt seems using CACHESTRATEGY_CANVAS changes the background color of the canvas_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//babylonjs-playground.com/#1GWM8Z%230_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjs-playground.com/#1GWM8Z#0_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//babylonjs-playground.com/#1GWM8Z%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//babylonjs-playground.com/#1GWM8Z#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\twithout caching on the left_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_img class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ data-fileid_eq__qt_9640_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2016_09/57e85f2f2d1b6_ScreenShot2016-09-26at01_34_47.png.1623fa99be23a1cc673e7acfb8d8168e.png_qt_ alt_eq__qt_Screen Shot 2016-09-26 at 01.34.47.png_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nockawa","Date":"2016-09-26T22:23:13Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe thing is when you don_t_t use CACHEDCANVAS the canvas_t_ background color you define is blended with the Viewport_t_s own background color. When you use the CACHEDCANVAS_co_ the canvas_t_ background color is drawn to a texture which is not initialized with the Viewport_t_s background color but with a 0x00000000 value_co_ so instead of being blended with the Viewport_t_s background color_co_ it_t_s blended with nothing.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat_t_s where the difference is.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tNow_co_ I don_t_t really know how to solve this issue_co_ because I can_t_t really initialize the cached bitmap with the viewport_t_s background color otherwise it will occlude 3D content that are supposed to be underneath the canvas.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThere should be a blending combination existing to get the same result_co_ but I have to work more on this.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFor now_co_ if you want to ensure the same result_co_ then don_t_t use a viewport_t_s background color or don_t_t use a Canvas_t_ background color with Alpha...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]