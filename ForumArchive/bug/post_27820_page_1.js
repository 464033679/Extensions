[{"Owner":"Dad72","Date":"2017-01-19T12:35:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHello_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhen I serialize a mesh (ground for example)_co_ the value _t_updatable_t_ is not serialized. It does not exist in the string JSON. And I can not find a property to set updatable to true.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_em_gt_BABYLON.Mesh.CreateGround(_lt_span style_eq__qt_color_dd_#008000_sm__qt__gt__qt_ground_qt__co_ 100_co_ 100_co_ 10_co_ scene_lt_/span_gt__co_ _lt_span style_eq__qt_color_dd_#ff0000_sm__qt__gt_true_co_ _lt_/span_gt__lt_span style_eq__qt_color_dd_#008000_sm__qt__gt_0_lt_/span_gt_)_sm__lt_/em_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn green I find the properties in red impossible to find it and I need to have _lt_em_gt_ground.updatable _eq_ true_lt_/em_gt_ to change the terrain when it is recharging from the serialization.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2017-01-22T14:59:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_ve found a solution that may be what needed to be done_co_ but I think a simpler function would help.\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_ground.setVerticesData(BABYLON.VertexBuffer.PositionKind_co_ ground.getVerticesData(BABYLON.VertexBuffer.PositionKind)_co_ true)_sm_\nground.setVerticesData(BABYLON.VertexBuffer.NormalKind_co_ ground.getVerticesData(BABYLON.VertexBuffer.NormalKind)_co_ true)_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tI have to do this every objects_co_ this will be very repetitive. Would not it be simpler to serialize the _qt_updatable_qt_ property of each meshes.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-01-23T18:49:30Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI agree this could be smarter. Fancy doing a PR?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2017-01-23T19:36:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI_t_m not sure my PR would be correct. The code below is enough to make a mesh updatable ?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat allows the property to be updatable ? I_t_m not sure about doing a correct PR.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn fact I have the impression that this code ( _lt_span style_eq__qt_color_dd_rgb(248_co_248_co_242)_sm_font-family_dd_monospace_co_ monospace_sm_font-size_dd_14px_sm_font-style_dd_normal_sm_font-weight_dd_normal_sm_letter-spacing_dd_normal_sm_text-indent_dd_0px_sm_text-transform_dd_none_sm_white-space_dd_pre_sm_word-spacing_dd_0px_sm_background-color_dd_rgb(35_co_36_co_31)_sm_float_dd_none_sm__qt__gt_setVerticesData_lt_/span_gt_ ) is not enough_co_ because if I serialize_co_ modifications of the terrain are not taken into account.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-01-23T21:30:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThis code is great to make the mesh updatable but not related to the serialization.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2017-01-23T22:06:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHow to redefine _t_actualizable_t__co_ I would like to be able to reload a terrain serialized to edit it again and save it again with seralize.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs there an alternative solution could help to do that. Or why not just serialize the property _t_updatable_t_ which would be simpler to do I think. Please.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2017-01-23T23:06:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI revise the code _dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_mesh.setVerticesData(BABYLON.VertexBuffer.PositionKind_co_ mesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)_co_ true)_sm_\t\t\t\nmesh.setVerticesData(BABYLON.VertexBuffer.NormalKind_co_ mesh.getVerticesData(BABYLON.VertexBuffer.NormalKind)_co_ true)_sm_\nmesh.updateVerticesData(BABYLON.VertexBuffer.PositionKind_co_ mesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)_co_ true_co_ false)_sm_\nBABYLON.VertexData.ComputeNormals(mesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)_co_ mesh.getIndices()_co_ mesh.getVerticesData(BABYLON.VertexBuffer.NormalKind))_sm_\nmesh.updateVerticesData(BABYLON.VertexBuffer.NormalKind_co_ mesh.getVerticesData(BABYLON.VertexBuffer.NormalKind)_co_ true_co_ false)_sm_\nmesh.updateCache()_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tBut I still have a cache problem and recording. I find myself with a file of 3Ko instead of 1600ko for example.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSerialize is not updated_co_ why? What must I do for that?  Why can not redefine updatable to true when loading an object with ImportMesh. This works fine when creating a CreateGround object for example_co_ but not when reloading after serialization.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-01-24T22:45:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tActually i had a look and it is not that simple. This is where geometries are saved_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.geometry.ts#L613_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.geometry.ts#L613_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSo I had to add a new parameter there_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.geometry.ts#L618_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Mesh/babylon.geometry.ts#L618_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt should work now.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2017-01-24T23:01:53Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThanks Dk_co_ but the uvs do not serialize if I compare two files.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe ground does not reload.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-01-24T23:07:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tNo sure to follow you. I_t_ll show you the code I changed. Please provide a repro case if you think there is a bug\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2017-01-24T23:34:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tArf_co_ j_t_ai du mal avec l_t_anglais_co_ je vais ecrire en Français pour être plus facilement claire. Je me suis tromper_co_ pour les uvs_co_ c’est tout le vertexData qui n_t_est pas sérialiser ou vider.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEn faite je crois que depuis le début je n_t_indique pas la bonne erreur_co_ ou le vrais probleme. A force des faire des testes_co_ j_t_ai fini pas mieux comprendre ce qui vas pas. J_t_explique_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJe créer un terrain avec CreateGround et je met le terrain en Updatable a true pour l_t_éditer avec un outils d’élévation qui créer des montagnes et autres. Ensuite j_t_enregistre ce terrain une premier fois_co_ ca fonctionne jusque là. (j_t_enregistre avec SerializeMesh dans un fichier .babylon en passant par du PHP avec file_put_contents() et json_decode() et json_encode()).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tEnsuite je peut donc recharger ce terrain enregistrer avec ImportMesh et l’éditer grâce au bout de code au début de ce post. jusque la ca fonctionne. si j_t_enregistre une première fois_co_ tout est ok_co_ le terrain est bien sérialiser entièrement. Mais_co_ si j_t_enregistre une seconde fois_co_ modifications du terrain ou non_co_ la sérialisation ne ce fait pas correctement. A chaque fois dans le second enregistrement_co_ le SerializeMesh me vide le vertextData (je ne sais pas du tout pourquoi a la seconde sérialisation ?) _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tVoila le resultat de la seconde sérialisation _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_qt_geometries_qt__dd_ {_lt_br /_gt_\n\t        _qt_boxes_qt__dd_ []_co__lt_br /_gt_\n\t        _qt_spheres_qt__dd_ []_co__lt_br /_gt_\n\t        _qt_cylinders_qt__dd_ []_co__lt_br /_gt_\n\t        _qt_toruses_qt__dd_ []_co__lt_br /_gt_\n\t        _qt_grounds_qt__dd_ []_co__lt_br /_gt_\n\t        _qt_planes_qt__dd_ []_co__lt_br /_gt_\n\t        _qt_torusKnots_qt__dd_ []_co__lt_strong_gt_ _qt_vertexData_qt__dd_ []_lt_/strong_gt__lt_br /_gt_\n\t    }_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tau lieux de _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_qt_geometries_qt__dd_ {_lt_br /_gt_\n\t        _qt_boxes_qt__dd_ []_co__lt_br /_gt_\n\t        _qt_spheres_qt__dd_ []_co__lt_br /_gt_\n\t        _qt_cylinders_qt__dd_ []_co__lt_br /_gt_\n\t        _qt_toruses_qt__dd_ []_co__lt_br /_gt_\n\t        _qt_grounds_qt__dd_ []_co__lt_br /_gt_\n\t        _qt_planes_qt__dd_ []_co__lt_br /_gt_\n\t        _qt_torusKnots_qt__dd_ []_co_ _lt_strong_gt__qt_vertexData_qt__dd__lt_/strong_gt_ [{_lt_br /_gt_\n\t            _qt_id_qt__dd_ _qt_44d46d08-c2e0-438d-b1f1-5b5fba4f40e9_qt__co__lt_br /_gt_\n\t            _qt_positions_qt__dd_ [-64_co_ 0_co_ 64_co_ -62.79245283018868_co_ 0_co_ 64_co_ -61.58490566037736_co_ 0_co_ 64_co_ -60.37735849056604_co_ ... ]_co__lt_br /_gt_\n\t            _qt_normals_qt__dd_ [0_co_ 1_co_ 0_co_ 0_co_ 1_co_ 0_co_ 0_co_ 1_co_ 0_co_ 0_co_ 1_co_ 0_co_ 0_co_ 1_co_ 0_co_ 0_co_ 1_co_ 0_co_ 0_co_ 1_co_ 0_co_ 0_co_ 1_co_ 0_co_ 0_co_ 1_co_ 0_co_ 0_co_ 1_co_ 0_co_ 0_co_ 1_co_ ...]_co__lt_br /_gt_\n\t            _qt_uvs_qt__dd_ [0_co_ 1_co_ 0.009433962264150943_co_ 1_co_ 0.018867924528301886_co_ 1_co_ 0.02830188679245283_co_ 1_co_ 0.03773584905660377_co_ ...]_co__lt_br /_gt_\n\t            _qt_indices_qt__dd_ [108_co_ 1_co_ 0_co_ 107_co_ 108_co_ 0_co_ 109_co_ 2_co_ 1_co_ 108_co_ 109_co_ 1_co_ 110_co_ 3_co_ 2_co_ 109_co_ 110_co_ 2_co_ 111_co_ 4_co_ 3_co_ 110_co_ 111_co_ 3_co_ 112_co_ 5_co_ ... ]_lt_br /_gt_\n\t        }] }_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tJe vais te faire un PG demain pour essayer de reproduire ca de la manière la plus simple.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2017-01-25T16:09:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tOk_co_ DK_co_ I made a playground that reproduces the problem at the simplest.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you look in the console_co_ in the second serialization_co_ the vertexData [] is empty_co_ but not in the first.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1SQFJP%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1SQFJP#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn fact ImportMesh does not access a geometries. Hence the problem that vertexData is emptying. I would like to be able to serialize again vertexData when I load a ground with ImportMesh. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2017-01-26T17:15:07Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tResolution of bypass _dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI have found a workaround. I_t_ll get every vertexData in mesh._geometry and add ._vertexBuffers.position._buffer._data_co_ ._vertexBuffers.normal._buffer._data ... in mesh.metadata and I serialize mesh to get serialization.geometries and add serialization.geometries.vertexData _eq_ mesh.metadata.vertexData_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1SQFJP%234_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1SQFJP#4_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Dad72","Date":"2017-01-27T12:57:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tMust I specify the resolved subject view that I find a workaround or there is a bug about it ?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2017-01-27T17:19:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOk gotcha. you can mark it as solved _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]