[{"Owner":"klem","Date":"2016-09-08T15:25:02Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m very new to BabylonJS_co_ but I need to admit it_t_s a great framework_co_ very polished. And the playground is a delicious toy _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_m currently playing with the physics plugin (cannon) and I_t_m trying to understand joints. In fact I_t_ve got an issue when I add a joint between 2 meshes _dd_ there is a force applied directly on those meshes. The result is an undesired pseudo-random movement at startup. I tried things with setLimit or setMotor on joint_co_ but there is always a kind of big impulse at launch.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIt looks like a bug_co_ but I_t_m not really sure _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_ Here_t_s the playground _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#24JRLD%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#24JRLD#1_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn this playground_co_ 2 cubes are _qt_hinge-joined_qt_ but the initial movement is undesired. If you comment the addJoint call (line 112)_co_ cubes are placed correctly.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIs there a way to avoid this undesired movement? Other point_co_ when you remove the joint_co_ the cube (top) never stop moving ! is it a special property to avoid that ? I missed something?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAlso I think I found a bug (another?) with the setMass function _dd_ joints are removed after setting a new mass on mesh. I prepared a demo with the bug here _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#24JRLD_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#24JRLD_lt_/a_gt_ (same as before_co_ but when user clicks_co_ a setMass function call breaks the joint).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAny help would be greatly appreciated!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tklem\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"adam","Date":"2016-09-08T16:05:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#24JRLD%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#24JRLD#2_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#24JRLD%236_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#24JRLD#6_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_143229_qt_ data-ipsquote-contentid_eq__qt_25056_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1473348302_qt_ data-ipsquote-userid_eq__qt_23497_qt_ data-ipsquote-username_eq__qt_klem_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ klem said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tOther point_co_ when you remove the joint_co_ the cube (top) never stop moving ! is it a special property to avoid that ? I missed something?\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI_t_m not sure what_t_s going on there. I tried changing the friction and the sleep properties without success.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_143229_qt_ data-ipsquote-contentid_eq__qt_25056_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1473348302_qt_ data-ipsquote-userid_eq__qt_23497_qt_ data-ipsquote-username_eq__qt_klem_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t1 hour ago_co_ klem said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tAlso I think I found a bug (another?) with the setMass function _dd_ joints are removed after setting a new mass on mesh.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tIf you set the mass directly to the body_co_ it doesn_t_t break_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#24JRLD%237_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#24JRLD#7_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"klem","Date":"2016-09-08T18:06:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey Adam_co_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tnice shot (_lt_a href_eq__qt_https_dd_//www.diffchecker.com/rtqR93yv_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.diffchecker.com/rtqR93yv_lt_/a_gt_)_co_ thanks!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd the workaround for the setMass is good to know _lt_img alt_eq__qt__sm_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_wink.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/wink@2x.png 2x_qt_ title_eq__qt__sm_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]