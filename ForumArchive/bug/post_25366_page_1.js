[{"Owner":"Vousk-prod.","Date":"2016-09-22T16:08:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey everyone !\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe brand new iOS 10 update fracking sucks to load BJS cube textures.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve already had noticed this problem several month ago (on iOS 9) but it happened only very occasionnaly (and pretty randomly). But now_co_ since iOS 10_co_ I don_t_t know what Apple has changed but the bug is happening at least 9 times out of 10_co_ in every mobile browser on iOS.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tWhat the bug is exactly ? When a cube texture is loaded_co_ the cascadeLoad call in Engine.createCubeTexture bugs in the callback for-loop _dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_for (var index _eq_ 0_sm_ index &lt_sm_ faces.length_sm_ index++) {\n   _this._workingContext.drawImage(imgs[index]_co_ 0_co_ 0_co_ imgs[index].width_co_ imgs[index].height_co_ 0_co_ 0_co_ width_co_ height)_sm_\n   gl.texImage2D(faces[index]_co_ 0_co_ gl.RGBA_co_ gl.RGBA_co_ gl.UNSIGNED_BYTE_co_ _this._workingCanvas)_sm_\n}_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThe code stops in one of the loops claiming that _lt_strong_gt_imgs[index] is undefined_lt_/strong_gt_. The faulty loop iteration number is randomly changing_co_ sometimes the third_co_ sometimes the fourth_co_ sometimes another one... it probably depends how quick the cube images files are loaded.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe bug happens _lt_span lang_eq__qt_en_qt_ xml_dd_lang_eq__qt_en_qt__gt__lt_span_gt_retroactively_lt_/span_gt__lt_/span_gt_ from BJS 2.5 to (at least) BJS 2.1.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnd now_co_ the cherry on the cake_dd_ the bug never occur if the browser is in private browsing mode. As if the caching process of the images is responsible of a kind of loading delay or something like that...\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-09-22T17:50:37Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tWTF!!! Do you have an idea how we can work around it?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2016-09-22T22:35:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tNope_co_ I absolutly don_t_t know. Unfortunatly I don_t_t fully understand the blob and indexedDB process (that was _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/?do_eq_hovercard_qt_ data-mentionid_eq__qt_5482_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/5482-davrous/_qt_ rel_eq__qt__qt__gt_@davrous_lt_/a_gt_ work_co_ isn_t_t it ?). It may be related to caching stuff.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tStrangely the problem doesn_t_t occur with other textures loadings. Is your image loading mechanism different for cube textures ? It_t_s as if the for loop for the 6 images can run before the 6 blob images are fully loaded in memory. Maybe the iOS caching system takes too much time and the cascadeLoad is called without some enough robust _qt_images are really ready_qt_ test. I very often noticed that cube texture loading is particularly time consuming in the whole network calls.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-09-23T16:26:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tCan you try without cache? (Engine.enableOfflineSupport _eq_ false)\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2016-09-24T09:03:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOk_co_ I will try by monday (need to borrow an iphone_co_ don_t_t have one myself _lt_img alt_eq__qt_^_^_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_happy.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/happy@2x.png 2x_qt_ title_eq__qt_^_^_qt_ width_eq__qt_20_qt_ /_gt_)\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2016-09-26T10:19:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tIt seems to work correctly when disabling cache.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-09-26T15:20:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tSounds like a first workaround _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2016-09-26T16:12:42Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tAh ah _lt_img alt_eq__qt__dd_D_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_biggrin.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/biggrin@2x.png 2x_qt_ title_eq__qt__dd_D_qt_ width_eq__qt_20_qt_ /_gt_ of course_co_ but only very _lt_span lang_eq__qt_en_qt_ xml_dd_lang_eq__qt_en_qt__gt__lt_span_gt_provisional_lt_/span_gt__lt_/span_gt_...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe 3d data and textures caching system is one of the major feature of BJS. When dealing with Web and 3D_co_ the data are so heavy that indexedDB is a powerful friend_co_ and native BJS compliance with that is just true power compared to other libs (like for instance one.js_co_ two.js_co_ or any other _lt_img alt_eq__qt__dd_P_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_tongue.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/tongue@2x.png 2x_qt_ title_eq__qt__dd_P_qt_ width_eq__qt_20_qt_ /_gt_). It_t_s probably easy to detect iOS and disable cache for those devices_co_ but in real life I_t_m not sure this is a good policy (even if I don_t_t really like iOS devices_co_ I must admit it_t_s a big part of global mobile fleet...)\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-09-26T16:40:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\ti completely agree but as this is more a bug on their side (it works everywhere else) I think you should just turn the cache off when creating a cube texture\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2016-09-26T16:45:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tAw_co_ I can turn cache off just before new CubeTexture call_co_ and then turn it on again ?\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-09-26T23:27:20Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tcorrect\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2016-09-27T16:32:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tErm it doesn_t_t work... _lt_img alt_eq__qt__dd_blink_dd__qt_ data-emoticon_eq__qt__qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_blink.png_qt_ title_eq__qt__dd_blink_dd__qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tIf I turn engine caching off before creating the new CubeTexture and then turn it on again after_co_ the bug still appear. It only disappear if I turn caching off when I create the engine. Are you sure the enableOfflineSupport  flag is not checked only once at the begining ?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2016-09-27T17:06:56Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe problem is that when accessing the imgs array_co_ imgs._internalCount is 6_co_ but the real imgs length is only 3 (for instance).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf we look at the _lt_strong_gt_partialLoad _lt_/strong_gt_method (called by the _lt_strong_gt_cascadeLoad _lt_/strong_gt_used in cube texture creation)_co_ everything looks fine and logical _dd_\n_lt_/p_gt_\n\n_lt_div_gt_\n\t_lt_pre_gt_\n_lt_code_gt__lt_span_gt_var_lt_/span_gt_ partialLoad _eq_ _lt_span_gt__lt_span_gt_function_lt_/span_gt_ _lt_span_gt_(url_co_ index_co_ loadedImages_co_ scene_co_ onfinish)_lt_/span_gt_ {_lt_/span_gt_\n        _lt_span_gt_var_lt_/span_gt_ img_sm_\n        _lt_span_gt_var_lt_/span_gt_ onload _eq_ _lt_span_gt__lt_span_gt_function_lt_/span_gt_ _lt_span_gt_()_lt_/span_gt_ {_lt_/span_gt_\n            loadedImages[index] _eq_ img_sm_\n            loadedImages._internalCount++_sm_\n            scene._removePendingData(img)_sm_\n            _lt_span_gt_if_lt_/span_gt_ (loadedImages._internalCount _eq__eq__eq_ _lt_span_gt_6_lt_/span_gt_) {\n                onfinish(loadedImages)_sm_\n            }\n        }_sm_\n        _lt_span_gt_var_lt_/span_gt_ onerror _eq_ _lt_span_gt__lt_span_gt_function_lt_/span_gt_ _lt_span_gt_()_lt_/span_gt_ {_lt_/span_gt_\n            scene._removePendingData(img)_sm_\n        }_sm_\n        img _eq_ BABYLON.Tools.LoadImage(url_co_ onload_co_ onerror_co_ scene.database)_sm_\n        scene._addPendingData(img)_sm_\n    }_sm__lt_/code_gt__lt_/pre_gt_\n_lt_/div_gt_\n\n_lt_p_gt_\n\tSo the problem certainly comes from something processed differently in iOS in the _lt_strong_gt_Tools.LoadImage_lt_/strong_gt_ function_co_ and most probably related to blob creation. I don_t_t understand all the process in there but maybe the _lt_strong_gt_onload_lt_/strong_gt_ callback is called for an image before the blob is really accessible (in iOS) _co_ or something like that...\n_lt_/p_gt_\n\n_lt_p_gt_\n\tFYI I didn_t_t see any engine.enableOfflineSupport reference in the whole cube texture creation process_co_ it_t_s only checked sooner_co_ when creating the _lt_em_gt_database_lt_/em_gt_ object used in _lt_strong_gt_LoadImage_lt_/strong_gt__co_ that_t_s why I can_t_t call it around my cube texture creations.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2016-09-27T17:34:25Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tAlso strange_co_ for what I understand_co_ engine.enableOfflineSupport seems to be only used for mesh loading (and mesh_t_s related textures)_co_ but not used at all for cube textures dynamically created later (but I can be wrong in my source code interpretation). So the fact I deactivate offlineSupport solves the blob loading image process is just a (benefic) side effect...\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"davrous","Date":"2016-09-28T12:55:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi! Thanks for the report. iOS/Safari Mobile is well known for shipping crap on the IndexedDB implementation... _dd_-(\n_lt_/p_gt_\n\n_lt_p_gt_\n\t If I understand correctly_co_ this means that any scene using offline &amp_sm_ containing a cube texture would fails on iOS 10?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThis is weird as we_t_re using it on our Sponza demo_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs.com/demos/sponza_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs.com/demos/sponza_lt_/a_gt_ and it works well on my iPhone 6s / iOS 10.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2016-09-28T15:15:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOh_co_ you_t_re right_co_ sponza demo works well on the iphone I borrowed... I need to figure out why it works on some scene and not others.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-09-28T15:28:18Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tGood catch _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt_ Please keep us updated\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2016-09-28T15:29:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYep_co_ I will !\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-09-28T15:32:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI_t_ve just checked Espilit demo and it works (and it uses cubemap)\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2016-09-28T16:56:33Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tWhere can I find the source code of sponza demo to study cube textures creation ? If I inspect the web page_co_ it seems thats all code related to the scene is in a json file which is kind of encrypted...\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-09-28T17:14:00Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tEspilit is far easier to use_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Samples/tree/master/Demos/Espilit_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Samples/tree/master/Demos/Espilit_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Vousk-prod.","Date":"2016-09-28T17:15:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOk_co_ but I still don_t_t get where the scene_t_s source code is in _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Samples/tree/master/Demos/Espilit_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Samples/tree/master/Demos/Espilit_lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-09-28T17:25:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\there_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Samples/tree/master/Scenes/Espilit_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Samples/tree/master/Scenes/Espilit_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]