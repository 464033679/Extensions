[{"Owner":"shen","Date":"2018-05-09T10:31:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI tried to clone meshes imported from GLTF file and found that meshes were cloned twice. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#PSR2ZX%2338_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#PSR2ZX#38_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#PSR2ZX%2339_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#PSR2ZX#39_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\tuse the debug layer_co_ you can find that the original root mesh was used as the parent of a set of cloned meshes. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI also wonder whether the scale of the cloned meshes is correct? \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2018-05-09T13:07:58Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMan_co_ that feels like a rick and morty scene!\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe issue here is that you clone all of the meshes that are included in the gltf_co_ which also clone the children (there is a doNotCloneChildren flag in the clone function which you could use).\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThe simplest way would be to only clone the mesh that doesn_t_t have a parent (like this - _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#PSR2ZX%2340_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#PSR2ZX#40_lt_/a_gt_) _co_ which also answers the 2nd question you had.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"shen","Date":"2018-05-10T13:29:08Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/?do_eq_hovercard_qt_ data-mentionid_eq__qt_10310_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/_qt_ rel_eq__qt__qt__gt_@RaananW_lt_/a_gt_ Thanks! doNotCloneChildren flag seems just do the opposite of your code. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn your sandbox_co_ the clones meshes are still different from the original ones. Except the size_co_ I found that they got different boundaries by using the debug layers. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt__lt_a href_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_05/984145286_ScreenShot2018-05-10at14_27_35.png.6288df704bcc3015fd326032d1ba2576.png_qt_ class_eq__qt_ipsAttachLink ipsAttachLink_image_qt__gt__lt_img data-fileid_eq__qt_18223_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/monthly_2018_05/984145286_ScreenShot2018-05-10at14_27_35.png.6288df704bcc3015fd326032d1ba2576.png_qt_ class_eq__qt_ipsImage ipsImage_thumbnailed_qt_ alt_eq__qt_Screen Shot 2018-05-10 at 14.27.35.png_qt__gt__lt_/a_gt__lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-05-10T15:32:14Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe size difference comes from the fact that the original one is animated (with bones hence the scale_co_ rotation and position changes)\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"shen","Date":"2018-05-10T21:53:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIs it possible to clone models with exactly the same meshes_co_ skeletons and animations? \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-05-11T15:00:57Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tjust affect the skeleton after cloning the mesh should make it_dd_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#PSR2ZX#42_qt_ ipsnoembed_eq__qt_true_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#PSR2ZX#42_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"shen","Date":"2018-05-12T23:59:47Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ Thanks! \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI followed your example and tried to go further. I found that gltf loader seems create meshes from bones_co_ and they are not necessary. In _lt_a href_eq__qt_https_dd_//www.babylonjs-playground.com/#PSR2ZX%2344_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//www.babylonjs-playground.com/#PSR2ZX#44_lt_/a_gt_ line 81-87_co_ I deleted them_co_ and nothing went wrong.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn line 112_co_ I also delete the animation targets without _skeleton_co_ and animations all worked correctly without them. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tThen I cloned skeletons in skeletonClones and meshes in meshClones_co_ and they are all fine.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI cloned _qt_abduction_rings_qt_ animationGroup in animationClone_co_ and re-targeted it_t_s animations to skeletonClones. Click _qt_abduction_rings_clone_qt_  and you can see the animation is different from _qt_abduction_rings_qt_. In line 127_co_ I output the original targets and bones in skeletonClones. Bones in original targets seem have more information than the cloned ones. \n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-05-14T15:56:59Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThe timing is important here. If you clone the skeleton (not individual bones but the entire skeleton) before launching any animation you should be good\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"shen","Date":"2018-05-16T15:42:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tFor the first question_co_ I just checked babylon.glTFLoader.ts and found that it generated meshes from all _qt_nodes_qt_. Shouldn_t_t it just check all the _qt_nodes_qt_ contains _qt_meshes_qt_ _lt_a href_eq__qt_https_dd_//github.com/KhronosGroup/glTF/tree/master/specification/2.0#meshes_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/KhronosGroup/glTF/tree/master/specification/2.0#meshes_lt_/a_gt_? \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_        private _getMeshes()_dd_ Mesh[] {\n            const meshes _eq_ new Array&lt_sm_Mesh&gt_sm_()_sm_\n\n            // Root mesh is always first.\n            meshes.push(this._rootBabylonMesh)_sm_\n\n            const nodes _eq_ this._gltf.nodes_sm_\n            if (nodes) {\n                for (const node of nodes) {\n                    if (node._babylonMesh) {\n                        meshes.push(node._babylonMesh)_sm_\n                    }\n\n                    if (node._primitiveBabylonMeshes) {\n                        for (const babylonMesh of node._primitiveBabylonMeshes) {\n                            meshes.push(babylonMesh)_sm_\n                        }\n                    }\n                }\n            }\n\n            return meshes_sm_\n        }_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2018-05-16T17:02:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tpinging _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/26831-bghgary/?do_eq_hovercard_qt_ data-mentionid_eq__qt_26831_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/26831-bghgary/_qt_ rel_eq__qt__qt__gt_@bghgary_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"bghgary","Date":"2018-05-16T21:26:01Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_215180_qt_ data-ipsquote-contentid_eq__qt_37526_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1526485366_qt_ data-ipsquote-userid_eq__qt_25623_qt_ data-ipsquote-username_eq__qt_shen_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t5 hours ago_co_ shen said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tgenerated meshes from _lt_span_gt_﻿_lt_/span_gt_all _qt_nodes_qt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/25623-shen/?do_eq_hovercard_qt_ data-mentionid_eq__qt_25623_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/25623-shen/_qt_ rel_eq__qt__qt__gt_@shen_lt_/a_gt_ The root issue is that glTF puts the skeleton in the hierarchy of nodes. There may be usage cases where a node is being used both as a joint and as a node (say as a node for attaching objects to at runtime). There is no way for the loader to tell if the node is going to be used or not and thus the loader just creates a bone and a mesh and animates both of them.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"shen","Date":"2018-05-16T22:36:44Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_215235_qt_ data-ipsquote-contentid_eq__qt_37526_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1526505961_qt_ data-ipsquote-userid_eq__qt_26831_qt_ data-ipsquote-username_eq__qt_bghgary_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t50 minutes ago_co_ bghgary said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\t_lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/25623-shen/?do_eq_hovercard_qt_ data-mentionid_eq__qt_25623_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/25623-shen/_qt_ rel_eq__qt__qt__gt_@shen_lt_/a_gt_ The root issue is that glTF puts the skeleton in the hierarchy of nodes. There may be usage cases where a node is being used both as a joint_lt_span_gt_﻿_lt_/span_gt_ and as a node (say as a node for attaching objects to at runtime). There is no way for the loader to tell if the node is going to be used or not and thus the loader just creates a bone and a mesh and animates both of them.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tCan_t_t we sure that _qt_mesh_qt_ means mesh? At this moment_co_ light nodes are considered as mesh too. It shouldn_t_t be difficult to exclude obvious no-mesh nodes from meshes. \n_lt_/p_gt_\n\n_lt_p_gt_\n\tIn three.js_co_ _qt_mesh_qt__co_ _qt_bone_qt_ and other known types are labeled correctly (_qt_Object3D_qt_ for unknown)_co_ while the hierarchy of nodes is kept. Of course_co_ I can_t_t guarantee for all the gltf file cases_co_ but so far so good. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"bghgary","Date":"2018-05-16T22:51:26Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_215242_qt_ data-ipsquote-contentid_eq__qt_37526_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1526510204_qt_ data-ipsquote-userid_eq__qt_25623_qt_ data-ipsquote-username_eq__qt_shen_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t9 minutes ago_co_ shen said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tCan_t_t we sure that _qt_mesh_qt_ means mesh?_lt_span_gt_﻿_lt_/span_gt_ At this moment_co_ light nodes are considered as mesh too.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tA Babylon mesh behaves like a glTF node. You can easily check to see if a mesh has geometry by calling the appropriate functions.\n_lt_/p_gt_\n\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_215242_qt_ data-ipsquote-contentid_eq__qt_37526_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1526510204_qt_ data-ipsquote-userid_eq__qt_25623_qt_ data-ipsquote-username_eq__qt_shen_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t7 minutes ago_co_ shen said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tcan_t_t guarantee for all the gltf file cases\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThis is the problem. There is no way to guarantee it works for all cases.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tDo you have a specific problem that is caused by glTF nodes all being converted to Babylon _qt_mesh_qt_?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"shen","Date":"2018-05-16T23:24:48Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_215243_qt_ data-ipsquote-contentid_eq__qt_37526_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1526511086_qt_ data-ipsquote-userid_eq__qt_26831_qt_ data-ipsquote-username_eq__qt_bghgary_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t27 minutes ago_co_ bghgary said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tA Babylon mesh behaves like a glTF node._lt_span_gt_﻿_lt_/span_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThat_t_s not right. It make all gltf files awful in Babylonjs_co_ that_t_s not better than _qt_working for most cases_qt_.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve described the problems it caused with clone_co_ unnecessary targets in animation and etc. above.  \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"bghgary","Date":"2018-05-16T23:55:17Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_215247_qt_ data-ipsquote-contentid_eq__qt_37526_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1526513088_qt_ data-ipsquote-userid_eq__qt_25623_qt_ data-ipsquote-username_eq__qt_shen_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\t20 minutes ago_co_ shen said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tIt make all gltf files awful in Babylonjs_co_ that_t_s not better than _qt_working for most cases_qt_.\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tI_t_m not sure I follow this. I tried reading through this thread again to see if something would go wrong if these _qt_extra_qt_ mesh and animation targets are present and I don_t_t see anything. Maybe I_t_m missing something?\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"bghgary","Date":"2018-05-17T00:11:23Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tIf it will help_co_ I can add a flag to the glTF loader to not add Babylon mesh objects for glTF nodes that don_t_t have any geometry. Then_co_ you can choose which behavior you want.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"shen","Date":"2018-05-18T23:50:06Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMaybe the loader can provide nodes with meshes_co_ particle_co_ skeletons_co_ and follow _qt_meshes_qt_ and other keywords in glTF to fill mesh and bone bins. If certain cases like you mentioned happen_co_ users can check nodes and solve them manually. \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]