[{"Owner":"Swiftwork","Date":"2016-11-12T03:17:31Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHi I have spoken to _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/18979-nockawa/?do_eq_hovercard_qt_ data-mentionid_eq__qt_18979_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/18979-nockawa/_qt_ rel_eq__qt__qt__gt_@Nockawa_lt_/a_gt_ already and he suggested I turn to the forums which I agreed with. When using a bundler such as _lt_strong_gt_Webpack_lt_/strong_gt__co_ the developer imports the the _lt_strong_gt_BabylonJS_lt_/strong_gt_ library rather than including it in a script tag. The problem that arises is that _lt_strong_gt_Earcut_lt_/strong_gt_ has been defined in it_t_s own namespace and is available only in the _lt_strong_gt_babylon.js_lt_/strong_gt_ file or globally when using script tags. However in _lt_strong_gt_Webpack_lt_/strong_gt_ each imported module is treated as an isolated scope and doesn_t_t have access to other modules or global variables unless they have specifically been required/provided. Because _lt_strong_gt_Earcut_lt_/strong_gt_ is never exported and in it_t_s own namespace it is literally unreachable for module bundlers_dd_\n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_&gt_sm_ babylon.js defines Earcut module\n&gt_sm_ babylon.js defines and exports BABYLON module\n\n&gt_sm_ Webpack provides the BABYLON module from babylon.js to all other libraries\n\n&gt_sm_ babylon.canvas2d.js extends and exports BABYLON module\nx babylon.canvas2d.js uses BABYLON and Earcut (but Earcut is not provided nor in the same namespace)_lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\tThis leave 2 solutions as I see it_dd_\n_lt_/p_gt_\n\n_lt_ol_gt__lt_li_gt_\n\t\tAdd _lt_strong_gt_Earcut_lt_/strong_gt_ to the _lt_strong_gt_BABYLON_lt_/strong_gt_ namespace so that they get exported together and can both be provided by bundlers.\n\t_lt_/li_gt_\n\t_lt_li_gt_\n\t\tKeep _lt_strong_gt_Earcut_lt_/strong_gt_ in it_t_s own namespace and export it so that it can be imported by both_lt_strong_gt_ babylon.js_lt_/strong_gt_ and_lt_strong_gt_ babylon.canvas2d.js _lt_/strong_gt_or provided using a bundler.\n\t_lt_/li_gt_\n_lt_/ol_gt__lt_p_gt_\n\tPing _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt__co_ moving forward it might be worth looking into _lt_strong_gt_npm_lt_/strong_gt__lt_strong_gt_ _lt_/strong_gt_more. They offer the for example the option to add @next version tag for alphas/betas of packages. I am sure Babylon.JS would benefit from having more users testing/working with the preview build and finding issues._lt_br /_gt__lt_br /_gt_\n\tKind Regards\n_lt_/p_gt_\n\n_lt_p_gt_\n\tSwiftwork\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Nockawa","Date":"2016-11-12T11:36:36Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\talso ping _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/?do_eq_hovercard_qt_ data-mentionid_eq__qt_10310_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/10310-raananw/_qt_ rel_eq__qt__qt__gt_@RaananW_lt_/a_gt_ which is insight will be useful\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Deltakosh","Date":"2016-11-14T18:07:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tWhat could be the update we need to do for this? Please feel free to start a pull request\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Swiftwork","Date":"2016-11-17T01:16:11Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tI missed your reply _lt_a contenteditable_eq__qt_false_qt_ data-ipshover_eq__qt__qt_ data-ipshover-target_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/?do_eq_hovercard_qt_ data-mentionid_eq__qt_4442_qt_ href_eq__qt_http_dd_//www.html5gamedevs.com/profile/4442-deltakosh/_qt_ rel_eq__qt__qt__gt_@Deltakosh_lt_/a_gt_ and I would suggest for now just add Earcut to the babylon namespace because the file is fairly small and doesnt have any specific reason to not being included in its current state. I can make a pull request for this today if I get some free time.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-11-17T10:00:54Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tMy 2 cents - Earcut should not be a part of the babylon namespace_co_ as it is not a part of babylon. There is also the OS license that we should consider_co_ and_co_ in general_co_ the fact that the developer of the module might need to approve such a move.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tThat would be like adding jQuery to the angular namespace_co_ because angular can use jquery. Sounds rather wrong _lt_img alt_eq__qt__dd_)_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_smile.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/smile@2x.png 2x_qt_ title_eq__qt__dd_)_qt_ width_eq__qt_20_qt_ /_gt__lt_/p_gt_\n\n_lt_p_gt_\n\tI like the 2nd option_co_ which is exporting Earcut as an external dependency.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you want to provide a very simple project that I can download and experiment with offline_co_ it would be wonderful!\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]