[{"Owner":"simon_bg","Date":"2016-04-07T09:58:12Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tHey fellas_co_ \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI_t_ve found an issue where some errors do not appear in the javascript console. For example_co_ in this playground _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#IXKRE_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#IXKRE_lt_/a_gt_ _co_ I put _qt_BAYLON_qt_ instead of _qt_BABYLON_qt_ on the line 16_co_ and there is no error in the console._lt_br /_gt_\n\tBut when I put the same code outside the ImportMesh callback_co_ it does throw an error. _lt_br /_gt_\n\tIt hasn_t_t always been like this_co_ though. I could narrow down the problem to this exact commit_co_ where the issue was generated_dd__lt_br /_gt__lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/commit/b23fe21009073e2790d2a5be0bf03b3aa13b92e4#diff-207980660c3ac28d763f8c488a44f7c4_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/commit/b23fe21009073e2790d2a5be0bf03b3aa13b92e4#diff-207980660c3ac28d763f8c488a44f7c4_lt_/a_gt__lt_br /_gt__lt_br /_gt_\n\tCould somebody fix this issue_co_ please?_lt_br /_gt_\n\tThanks in advance.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-04-07T10:14:43Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tThis is not a bug. This is the expected behavior. you can register an onerror function to catch errors during mesh import_co_ like this&gt_sm_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t_lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#IXKRE%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#IXKRE#1_lt_/a_gt_ . Wait a few seconds_co_ let the mesh load_co_ and you will see the error\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"simon_bg","Date":"2016-04-07T10:21:22Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tOh ok_co_ thanks!_lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"simon_bg","Date":"2016-04-07T10:27:03Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tIt_t_s could be somewhat uncomfortable though when you have several lines of code in the ImportMesh callback_co_ because the exact error line is not indicated._lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-04-07T10:40:24Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tWe could provide you with the exception and not a generic error message. then you could retrieve the stack. I guess this makes sense. I will implement the change_co_ shouldn_t_t be a problem.\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"simon_bg","Date":"2016-04-07T10:46:21Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tYes_co_ I think that would be better. Thanks!\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"RaananW","Date":"2016-04-07T10:49:40Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tSubmitted_co_ soon to be reviewed. _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/pull/1088_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/pull/1088_lt_/a_gt_\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]