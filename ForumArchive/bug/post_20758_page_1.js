[{"Owner":"Kesshi","Date":"2016-02-24T08:55:38Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tPlease look at this playground_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#1ET2K6%232_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#1ET2K6#2_lt_/a_gt__lt_br_gt_\n\tI want that the three arraws always pointing outwards of the box but depending on the camera angle the_lt_br_gt_\n\tBillboard_x and billboard_y arrow will point inwards. A Bug?\n_lt_/p_gt_\n\n_lt_p_gt_\n\tAnother problem i noticed. When you look perfectly from below at the box_co_ the arrows are pointing sidewards.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-02-24T10:14:09Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tActually_co_ I don_t_t think it_t_s a bug... it_t_s just that the BILLBOARD modes rotate the mesh by the axis you choose and sometimes it doesn_t_t look like you expected.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tIf you want to master accurately the arrow directions_co_ you should maybe consider _lt_em_gt_RotationFromAxis()_lt_/em_gt_ _dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/overviews/How_Rotations_and_Translations_Work#generating-a-rotation-from-a-target-system_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/overviews/How_Rotations_and_Translations_Work#generating-a-rotation-from-a-target-system_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\t \n_lt_/p_gt_\n\n_lt_p_gt_\n\tPG _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#VYM1E%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#VYM1E#1_lt_/a_gt_\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Kesshi","Date":"2016-02-24T11:34:35Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI still think it_t_s strange. If i use BILLBOARDMODE_X i would expect that the mesh rotates only around the x-axis (y and z are fixed)._lt_br_gt_\n\tIn my example the arrow gets flipped_co_ that means it was rotated around x and another axis.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Kesshi","Date":"2016-04-21T10:00:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_blockquote class_eq__qt_ipsQuote_qt_ data-ipsquote_eq__qt__qt_ data-ipsquote-contentapp_eq__qt_forums_qt_ data-ipsquote-contentclass_eq__qt_forums_Topic_qt_ data-ipsquote-contentcommentid_eq__qt_118001_qt_ data-ipsquote-contentid_eq__qt_20758_qt_ data-ipsquote-contenttype_eq__qt_forums_qt_ data-ipsquote-timestamp_eq__qt_1456308849_qt_ data-ipsquote-userid_eq__qt_5453_qt_ data-ipsquote-username_eq__qt_jerome_qt__gt_\n\t_lt_div class_eq__qt_ipsQuote_citation_qt__gt_\n\t\tOn 23.2.2016 at 11_dd_14 AM_co_ jerome said_dd_\n\t_lt_/div_gt_\n\n\t_lt_div class_eq__qt_ipsQuote_contents_qt__gt_\n\t\t_lt_p_gt_\n\t\t\tActually_co_ I don_t_t think it_t_s a bug... it_t_s just that the BILLBOARD modes rotate the mesh by the axis you choose and sometimes it doesn_t_t look like you expected.\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tIf you want to master accurately the arrow directions_co_ you should maybe consider _lt_em_gt_RotationFromAxis()_lt_/em_gt_ _dd_ _lt_a href_eq__qt_http_dd_//doc.babylonjs.com/tutorials/How_Rotations_and_Translations_Work#generating-a-rotation-from-a-target-system_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//doc.babylonjs.com/tutorials/How_Rotations_and_Translations_Work#generating-a-rotation-from-a-target-system_lt_/a_gt_\n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\t \n\t\t_lt_/p_gt_\n\n\t\t_lt_p_gt_\n\t\t\tPG _dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#VYM1E%231_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#VYM1E#1_lt_/a_gt_\n\t\t_lt_/p_gt_\n\t_lt_/div_gt_\n_lt_/blockquote_gt_\n\n_lt_p_gt_\n\tThe RotationFromAxis() function is very usefull but it looks very complicated and long._lt_br /_gt_\n\tHere a much simpler version_dd__lt_br /_gt_\n\t \n_lt_/p_gt_\n\n_lt_pre_gt_\n_lt_code_gt_// RotationFromAxis function returns a quaternion\n  var RotationFromAxis _eq_ function(a1_co_ a2_co_ a3) {\n    var x _eq_ BABYLON.Vector3.Normalize(a1)_sm_\n    var y _eq_ BABYLON.Vector3.Normalize(a2)_sm_\n    var z _eq_ BABYLON.Vector3.Normalize(a3)_sm_\n\n\tvar rotM _eq_ new BABYLON.Matrix()_sm_\n\trotM.m[0] _eq_ x.x_sm_\n\trotM.m[1] _eq_ x.y_sm_\n\trotM.m[2] _eq_ x.z_sm_\n\trotM.m[3] _eq_ 0.0_sm_\n\t\n\trotM.m[4] _eq_ y.x_sm_\n\trotM.m[5] _eq_ y.y_sm_\n\trotM.m[6] _eq_ y.z_sm_\n\trotM.m[7] _eq_ 0.0_sm_\n\t\n\trotM.m[8] _eq_ z.x_sm_\n\trotM.m[9] _eq_ z.y_sm_\n\trotM.m[10] _eq_ z.z_sm_\n\trotM.m[11] _eq_ 0.0_sm_\n\t\n\trotM.m[12] _eq_ 0.0_sm_\n\trotM.m[13] _eq_ 0.0_sm_\n\trotM.m[14] _eq_ 0.0_sm_\n\trotM.m[15] _eq_ 1.0_sm_\n\t\n\treturn BABYLON.Quaternion.FromRotationMatrix(rotM)_sm_\n  }_sm__lt_/code_gt__lt_/pre_gt_\n\n_lt_p_gt_\n\t _lt_br /_gt_\n\tThe difference to the original Version is that this one returns a quaterion (toEulerAngles() can be used if necessary) and the result is only correct if_lt_br /_gt_\n\tthe 3 given axis are orthogonal to each other (in the playground i added an additional cross product to ensure that)_lt_br /_gt_\n\tHere the modified playground_dd_ _lt_a href_eq__qt_http_dd_//www.babylonjs-playground.com/#VYM1E%237_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//www.babylonjs-playground.com/#VYM1E#7_lt_/a_gt__lt_br /_gt_\n\t \n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"jerome","Date":"2016-04-23T19:50:15Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t\n_lt_p_gt_\n\tI like your implementation although it doesn_t_t return the same result (didn_t_t take the time to understand if it really does the same thing)_co_ because it_t_s really elegant.\n_lt_/p_gt_\n\n_lt_p_gt_\n\tYep_co_ the current RotationFromAxis() code is quite long and complicated because it is a math process (un-rotate by projecting the axis vectors and select each step a solution)_co_ but it_t_s really fast (only 3 effective computations for the CPU) and allocates the mimimum required memory_co_ it is to say some scalar values only. It was heavily tested to be sure to work in every orientation and return right results_co_ example _dd_ _lt_a href_eq__qt_http_dd_//jerome.bousquie.fr/BJS/demos/rollercoaster.html_qt_ rel_eq__qt_external nofollow_qt__gt_http_dd_//jerome.bousquie.fr/BJS/demos/rollercoaster.html_lt_/a_gt_\n_lt_/p_gt_\n\n_lt_p_gt_\n\twell_co_ after reading the method FromRotationMatrix() here _dd_ _lt_a href_eq__qt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Math/babylon.math.ts#L1755_qt_ rel_eq__qt_external nofollow_qt__gt_https_dd_//github.com/BabylonJS/Babylon.js/blob/master/src/Math/babylon.math.ts#L1755_lt_/a_gt_ called in your code _co_ it seems we are quite in the same configuration \n_lt_/p_gt_\n\n_lt_p_gt_\n\tI need to think about how to merge your elegant code in replacement of the current one_co_ after checking that it is as fast (regarding GC)_co_ or faster_co_ in the render loop than the existing and achieving the same final results _dd_ euler angles_co_ not only the quaternion ... this function is done for users wanting simplicity and wanting to use easy euler angles because they don_t_t know how to rotate a mesh to get a known final result result.\n_lt_/p_gt_\n\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"},{"Owner":"Kesshi","Date":"2016-04-23T20:23:46Z","Content":"_lt_div class_eq__qt_mages_qt__gt_\n\t\t\t_lt_p_gt_\n\tThe main reason that i didn_t_t use the existing Vector3._lt_span_gt_RotationFromAxis_lt_/span_gt_() for my project was that i prefer to work with quaternions instead of euler angles._lt_br /_gt_\n\tI didn_t_t want to add an additional euler to quaternion conversion. Thats why i was looking for an alternative._lt_br /_gt_\n\tThen i remembered that a rotation matrix can be constructed directly from the 3 axis of a coordinate system _lt_img alt_eq__qt_^_^_qt_ data-emoticon_eq__qt__qt_ height_eq__qt_20_qt_ src_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/default_happy.png_qt_ srcset_eq__qt_http_dd_//www.html5gamedevs.com/uploads/emoticons/happy@2x.png 2x_qt_ title_eq__qt_^_^_qt_ width_eq__qt_20_qt_ /_gt__lt_br /_gt_\n\tBut i can understand that for people which are new to this topic its easier to work with euler angles.\n_lt_/p_gt_\n\n\t\t\t\n\t\t_lt_/div_gt_\n\n\t\t_lt_div class_eq__qt_ipsI_qt__gt__lt_/div_gt__lt_/div_gt_"}]