{"version":3,"sources":["gif.exporter.single.worker.ts"],"names":[],"mappings":"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","file":"gif.exporter.single.worker.map","sourceRoot":"..\\src","sourcesContent":["export class GIFCreator {\n\tprivate _canvas: HTMLCanvasElement;\n\tprivate _delay: number;\n\tprivate _duration: number;\n\tprivate _width: number;\n\tprivate _height: number;\n\tprivate _worker: Worker;\n\tprivate _holdingCanvas: HTMLCanvasElement;\n\tprivate _holdingCanvas2D: CanvasRenderingContext2D;\n\tprivate _resizeCanvas: HTMLCanvasElement;\n\tprivate _resizeCanvas2D: CanvasRenderingContext2D;\n\tprivate worker = 'gif.creator.service.ts';\n\n\tconstructor(engine: BABYLON.Engine, options?: { delay?: number; duration?: number }) {\n\t\tthis._canvas = engine.getRenderingCanvas();\n\t\tthis._delay = options.delay;\n\t\tthis._duration = options.duration;\n\t}\n\n\tpublic start(): Promise<number[]> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tthis.init();\n\t\t\tconsole.log('record canvas');\n\t\t\tlet intervalRef = setInterval(async () => {\n\t\t\t\tconst frame = await this.getFrame();\n\t\t\t\tconst newFrame = await this.flipAndRotate(new Uint8Array(frame));\n\n\t\t\t\tconst message = {\n\t\t\t\t\tjob: 'collectFrames',\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tframe: newFrame,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\tthis._worker.postMessage(message, [message.params.frame]);\n\t\t\t}, this._delay);\n\t\t\tsetTimeout(() => {\n\t\t\t\tclearInterval(intervalRef);\n\t\t\t\tconst message = {\n\t\t\t\t\tjob: 'createGIF',\n\t\t\t\t\tparams: { width: this._resizeCanvas.width, height: this._resizeCanvas.height },\n\t\t\t\t};\n\t\t\t\tthis._worker.postMessage(message);\n\t\t\t\tthis._worker.onmessage = ({ data }) => {\n\t\t\t\t\tconsole.log('complete', data);\n\t\t\t\t\tresolve(data);\n\t\t\t\t};\n\t\t\t}, this._duration);\n\t\t});\n\t}\n\n\tpublic stop(): void {}\n\n\tpublic cancel(): void {}\n\n\tpublic download(filename = 'canvasGIF.gif'): Promise<{}> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tconst gif = await this.start();\n\t\t\tconst url = URL.createObjectURL(\n\t\t\t\tnew Blob([new Uint8Array(gif)], {\n\t\t\t\t\ttype: 'image/gif',\n\t\t\t\t})\n\t\t\t);\n\t\t\tconst download: HTMLAnchorElement = document.getElementById('download') as HTMLAnchorElement;\n\t\t\tdocument.body.appendChild(download);\n\t\t\tdownload.target = '_blank';\n\t\t\tdownload.style.display = 'none';\n\t\t\tdownload.href = url;\n\t\t\tdownload.download = filename;\n\t\t\tdownload.click();\n\t\t\tdownload.remove();\n\t\t\tthis._worker.terminate();\n\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tprivate getFrame(): Promise<ArrayBuffer> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tconst gl = this._canvas.getContext('webgl2') || this._canvas.getContext('webgl');\n\t\t\tlet pixels = new Uint8Array(this._width * this._height * 4);\n\t\t\tgl.readPixels(0, 0, this._width, this._height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\n\t\t\tresolve(pixels.buffer);\n\t\t});\n\t}\n\n\tprivate init() {\n\t\tthis._width = this._canvas.width;\n\t\tthis._height = this._canvas.height;\n\t\tthis._worker = new Worker('gif.creator.service.ts');\n\t\tthis.canvasSetup();\n\t}\n\n\tprivate canvasSetup() {\n\t\tthis._holdingCanvas = document.createElement('canvas');\n\t\tthis._holdingCanvas2D = this._holdingCanvas.getContext('2d');\n\t\tthis._holdingCanvas.width = this._width;\n\t\tthis._holdingCanvas.height = this._height;\n\t\tthis._resizeCanvas = document.createElement('canvas');\n\t\tthis._resizeCanvas2D = this._resizeCanvas.getContext('2d');\n\t}\n\n\tprivate flipAndRotate(frame: Uint8Array): Promise<ArrayBuffer> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst imageData = this._holdingCanvas2D.createImageData(this._width, this._height);\n\t\t\timageData.data.set(frame);\n\t\t\tthis._holdingCanvas2D.putImageData(imageData, 0, 0);\n\t\t\tthis.resize(this._resizeCanvas);\n\t\t\tthis.flip(this._resizeCanvas2D, this._holdingCanvas, this._resizeCanvas);\n\t\t\tconst data = this._resizeCanvas2D.getImageData(0, 0, this._resizeCanvas.width, this._resizeCanvas.height).data;\n\n\t\t\tresolve(data.buffer);\n\t\t});\n\t}\n\n\tprivate resize(canvas: HTMLCanvasElement) {\n\t\treturn new Promise((resolve, rejct) => {\n\t\t\tconst baseSize = 256;\n\t\t\tconst imageAspectRatio = this._width / this._height;\n\t\t\tif (imageAspectRatio < 1) {\n\t\t\t\tcanvas.width = baseSize * imageAspectRatio;\n\t\t\t\tcanvas.height = baseSize;\n\t\t\t} else if (imageAspectRatio > 1) {\n\t\t\t\tcanvas.width = baseSize;\n\t\t\t\tcanvas.height = baseSize / imageAspectRatio;\n\t\t\t} else {\n\t\t\t\tcanvas.width = baseSize;\n\t\t\t\tcanvas.height = baseSize;\n\t\t\t}\n\n\t\t\tcanvas.width = Math.max(canvas.width, 1);\n\t\t\tcanvas.height = Math.max(canvas.height, 1);\n\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tprivate flip(resizeContext: CanvasRenderingContext2D, holdingCanvas: HTMLCanvasElement, resizeCanvas: HTMLCanvasElement) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// Scale and draw to flip Y to reorient readPixels.\n\t\t\tresizeContext.globalCompositeOperation = 'copy';\n\t\t\tresizeContext.scale(1, -1); // Y flip\n\t\t\tresizeContext.translate(0, -resizeCanvas.height); // so we can draw at 0,0\n\t\t\tresizeContext.drawImage(holdingCanvas, 0, 0, this._width, this._height, 0, 0, resizeCanvas.width, resizeCanvas.height);\n\t\t\tresizeContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tresizeContext.globalCompositeOperation = 'source-over';\n\t\t});\n\t}\n}\n"]}